(window.webpackJsonp = window.webpackJsonp || []).push([
    [39, 146], {
        "+Vfn": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "CollectionConnectionFields"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "CollectionConnection"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "totalCount"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "edges"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "node"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "PreviewCardVideo"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 199
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nfragment CollectionConnectionFields on CollectionConnection {\ntotalCount\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        "+pBb": function(e, t, n) {
            "use strict";
            n.d(t, "d", function() {
                return i
            }), n.d(t, "e", function() {
                return r
            }), n.d(t, "i", function() {
                return o
            }), n.d(t, "j", function() {
                return a
            }), n.d(t, "q", function() {
                return s
            }), n.d(t, "c", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            }), n.d(t, "g", function() {
                return d
            }), n.d(t, "h", function() {
                return u
            }), n.d(t, "f", function() {
                return p
            }), n.d(t, "l", function() {
                return m
            }), n.d(t, "k", function() {
                return h
            }), n.d(t, "n", function() {
                return f
            }), n.d(t, "m", function() {
                return g
            }), n.d(t, "r", function() {
                return v
            }), n.d(t, "t", function() {
                return b
            }), n.d(t, "s", function() {
                return k
            }), n.d(t, "w", function() {
                return y
            }), n.d(t, "v", function() {
                return C
            }), n.d(t, "a", function() {
                return S
            }), n.d(t, "o", function() {
                return E
            }), n.d(t, "p", function() {
                return _
            }), n.d(t, "u", function() {
                return w
            }), n.d(t, "J", function() {
                return O
            }), n.d(t, "E", function() {
                return T
            }), n.d(t, "K", function() {
                return D
            }), n.d(t, "F", function() {
                return N
            }), n.d(t, "O", function() {
                return I
            }), n.d(t, "L", function() {
                return x
            }), n.d(t, "H", function() {
                return R
            }), n.d(t, "C", function() {
                return j
            }), n.d(t, "I", function() {
                return M
            }), n.d(t, "D", function() {
                return F
            }), n.d(t, "G", function() {
                return L
            }), n.d(t, "B", function() {
                return V
            }), n.d(t, "y", function() {
                return U
            }), n.d(t, "A", function() {
                return A
            }), n.d(t, "M", function() {
                return P
            }), n.d(t, "z", function() {
                return B
            }), n.d(t, "P", function() {
                return W
            }), n.d(t, "S", function() {
                return X
            }), n.d(t, "x", function() {
                return G
            }), n.d(t, "N", function() {
                return z
            }), n.d(t, "R", function() {
                return H
            }), n.d(t, "Q", function() {
                return q
            });
            var i = "chat.CHAT_HIDDEN",
                r = "chat.CHAT_SHOWN",
                o = "chat.EMOTE_SETS_UPDATED",
                a = "chat.FOLLOWER_MODE_DURATION_PREFERENCE_CHANGED",
                s = "chat.ROOM_STATE_UPDATED",
                l = "chat.AUTOMOD_ACTIONS_ENABLED",
                c = "chat.AUTOMOD_ACTIONS_DISABLED",
                d = "chat.EMOTE_PICKER_CLOSED",
                u = "chat.EMOTE_PICKER_OPENED",
                p = "chat.CLOSE_CHAT_RULES",
                m = "chat.MODERATION_ACTIONS_ENABLED",
                h = "chat.MODERATION_ACTIONS_DISABLED",
                f = "chat.MOD_ICONS_ENABLED",
                g = "chat.MOD_ICONS_DISABLED",
                v = "chat.SHOW_CHAT_RULES",
                b = "chat.TIMESTAMPS_ENABLED",
                k = "chat.TIMESTAMPS_DISABLED",
                y = "chat.USERNAME_CONTRAST_ENABLED",
                C = "chat.USERNAME_CONTRAST_DISABLED",
                S = "chat.ADD_COMMAND",
                E = "chat.REMOVE_COMMAND",
                _ = "chat.RENDER_SENT_CHAT_MESSAGE",
                w = "chat.UNHIDE_IGNORED_COMMAND";

            function O() {
                return {
                    type: b
                }
            }

            function T() {
                return {
                    type: k
                }
            }

            function D() {
                return {
                    type: y
                }
            }

            function N() {
                return {
                    type: C
                }
            }

            function I() {
                return {
                    type: r
                }
            }

            function x() {
                return {
                    type: i
                }
            }

            function R() {
                return {
                    type: l
                }
            }

            function j() {
                return {
                    type: c
                }
            }

            function M() {
                return {
                    type: m
                }
            }

            function F() {
                return {
                    type: h
                }
            }

            function L() {
                return {
                    type: f
                }
            }

            function V() {
                return {
                    type: g
                }
            }

            function U(e, t) {
                return {
                    type: a,
                    channelLogin: e,
                    duration: t
                }
            }

            function A() {
                return {
                    type: d
                }
            }

            function P() {
                return {
                    type: u
                }
            }

            function B() {
                return {
                    type: p
                }
            }

            function W() {
                return {
                    type: v
                }
            }

            function X(e) {
                return {
                    type: s,
                    roomState: e
                }
            }

            function G(e, t) {
                return {
                    type: S,
                    command: e.toLowerCase(),
                    handler: t
                }
            }

            function z(e, t) {
                return {
                    type: E,
                    command: e.toLowerCase(),
                    handler: t
                }
            }

            function H(e) {
                return {
                    type: _,
                    customEvent: e
                }
            }

            function q(e) {
                return {
                    type: w,
                    userID: e
                }
            }
        },
        "/HY+": function(e, t, n) {
            "use strict";
            var i = n("dAHa"),
                r = n("mrSG"),
                o = n("q1tI"),
                a = n("/MKj"),
                s = n("fvjX"),
                l = n("cZKs"),
                c = n("aCAx"),
                d = n("GnwI"),
                u = n("Ue10"),
                p = (n("Oy4H"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClose = function(e, n) {
                            t.props.closeModal(), t.props.onClose && t.props.onClose(e, n)
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return o.createElement(u.Eb, {
                            className: "reporting-modal__container",
                            background: u.r.Base,
                            padding: {
                                x: 2,
                                y: 3
                            }
                        }, o.createElement(i.b, {
                            onClose: this.handleClose,
                            reportContext: this.props.reportContext,
                            title: this.props.title,
                            defaultDescription: this.props.defaultDescription
                        }), o.createElement(l.a, null))
                    }, t
                }(o.Component));
            var m = Object(s.compose)(Object(d.b)("ReportUserModal"), Object(a.connect)(null, function(e) {
                return Object(s.bindActionCreators)({
                    closeModal: c.c
                }, e)
            }))(p);
            n.d(t, !1, function() {}), n.d(t, !1, function() {
                return i.c
            }), n.d(t, !1, function() {
                return i.a
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return i.b
            }), n.d(t, !1, function() {
                return p
            }), n.d(t, "a", function() {
                return m
            })
        },
        "/Kya": function(e, t, n) {},
        "/nm5": function(e, t, n) {},
        "0FG4": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return c
            });
            var i, r = n("RcPG"),
                o = n("a1OF");
            ! function(e) {
                e[e.Position = 0] = "Position", e[e.Token = 1] = "Token"
            }(i || (i = {}));
            var a = "0";

            function s(e, t, n) {
                var a = n.type === i.Position ? t : e,
                    s = n.map[a];
                if (s) {
                    var l = function(e, t) {
                        return {
                            images: {
                                sources: {
                                    "1x": Object(o.d)(t, 1),
                                    "2x": Object(o.d)(t, 2),
                                    "4x": Object(o.d)(t, 4)
                                },
                                themed: !1
                            },
                            alt: e
                        }
                    }(e, s.id);
                    return {
                        type: r.a.Emote,
                        content: l
                    }
                }
                return null
            }
            var l = {
                "\\:\\&gt\\;": [":>"],
                "\\&gt\\;\\(": [">("],
                "\\&lt\\;\\]": ["<]"],
                "\\&lt\\;3": ["<3"],
                ":-?(?:7|L)": [":-7", ":-L", ":7", ":L"],
                "[oO](_|\\.)[oO]": ["o_o", "O_O", "o_O", "O_o", "o.o", "O.O", "o.O", "O.o"],
                "\\;-?(p|P)": [";-p", ";-P", ";p", ";P"],
                "\\;-?\\)": [";-)", ";)"],
                "\\:-?(o|O)": [":-o", ":-O", ":o", ":O"],
                "\\:-?(p|P)": [":-p", ":-P", ":p", ":P"],
                "\\:-?(S|s)": [":-S", ":-s", ":s", ":S"],
                "\\:-?[\\\\/]": [":-/", ":-\\", ":/", ":\\"],
                "\\:-?[z|Z|\\|]": [":-|", ":-Z", ":-z", ":|", ":Z", ":z"],
                "\\:-?\\(": [":-(", ":("],
                "\\:-?\\)": [":-)", ":)"],
                "\\:-?D": [":-D", ":D"],
                "#-?[\\\\/]": ["#-/", "#-\\", "#/", "#\\"],
                "B-?\\)": ["B-)", "B)"],
                "R-?\\)": ["R-)", "R)"]
            };

            function c(e) {
                for (var t = {}, n = 0, i = e; n < i.length; n++) {
                    var r = i[n];
                    if (r && r.emotes)
                        for (var o = 0, s = r.emotes; o < s.length; o++) {
                            var c = s[o];
                            if (c && c.id && c.token)
                                for (var d = 0, u = l[c.token] || [c.token]; d < u.length; d++) {
                                    var p = u[d];
                                    t[p] && r.id === a || (t[p] = {
                                        id: c.id,
                                        token: p
                                    })
                                }
                        }
                }
                return t
            }
        },
        "0INk": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "a", function() {
                return d
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("2xye"),
                a = n("gAd6"),
                s = function() {
                    var e = r.o.getLastPageview();
                    return e && e.location || o.PageviewLocation.None
                },
                l = function(e) {
                    r.o.trackItemSectionClick({
                        carousel_content: o.PageviewContent.Video,
                        channel_id: e.broadcasterID || "0",
                        channel: e.channelLogin || "unknown",
                        content: o.PageviewContent.PreviewCardGameName,
                        item_index: e.contentIndex,
                        medium: e.pageviewMedium,
                        item_id: e.videoID,
                        item_type: o.TwitchDataType.Video,
                        item_viewcount: null,
                        location: s()
                    })
                },
                c = function(e) {
                    r.o.trackItemSectionClick({
                        carousel_content: o.PageviewContent.PreviewCardGameBalloonGame,
                        channel_id: e.broadcasterID || "0",
                        channel: e.channelLogin || "unknown",
                        content: o.PageviewContent.PreviewCardGameBalloonGame,
                        item_index: e.contentIndex,
                        medium: e.pageviewMedium,
                        item_id: e.videoID,
                        item_type: o.TwitchDataType.Video,
                        item_viewcount: null,
                        location: s()
                    })
                },
                d = function(e) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var t, n, l, c, d, u = this;
                        return i.__generator(this, function(p) {
                            switch (p.label) {
                                case 0:
                                    return p.trys.push([0, 2, , 3]), t = e.map(function(e) {
                                        return i.__awaiter(u, void 0, void 0, function() {
                                            var t;
                                            return i.__generator(this, function(n) {
                                                switch (n.label) {
                                                    case 0:
                                                        return [4, r.p.apollo.client.query({
                                                            query: a,
                                                            variables: {
                                                                name: e
                                                            }
                                                        })];
                                                    case 1:
                                                        return [2, (t = n.sent().data).game && t.game.id]
                                                }
                                            })
                                        })
                                    }), [4, Promise.all(t)];
                                case 1:
                                    return n = p.sent(), l = n.filter(function(e) {
                                        return !!e
                                    }), c = l.map(function() {
                                        return o.TwitchDataType.Game
                                    }), d = l.map(function() {
                                        return null
                                    }), r.o.trackItemSectionLoad({
                                        carousel_content: o.PageviewContent.PreviewCardGameBalloonGame,
                                        rendered_item_count: l.length,
                                        rendered_item_list: l,
                                        rendered_item_types: c,
                                        rendered_items_viewcounts: d,
                                        location: s()
                                    }), [3, 3];
                                case 2:
                                    return p.sent(), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }
        },
        "0NVZ": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "RecommendedVideoCarousel_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "recommendations"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "videos"
                                            },
                                            arguments: [{
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "first"
                                                },
                                                value: {
                                                    kind: "IntValue",
                                                    value: "30"
                                                }
                                            }],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "edges"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "node"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "FragmentSpread",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "PreviewCardVideo"
                                                                    },
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 238
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery RecommendedVideoCarousel_CurrentUser {\ncurrentUser {\nid\nlogin\nrecommendations {\nvideos(first: 30) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        "0Nms": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "CurrentCollectionCarousel"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "collectionID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "collection"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "collectionID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "items"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "100"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "CollectionConnectionFields"
                                            },
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "CollectionFields"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 396
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-carousel/components/collection-carousel/models/collection-fields-fragment.gql"\n#import "twilight/features/video-carousel/components/collection-carousel/models/collection-connection-fields-fragment.gql"\nquery CurrentCollectionCarousel($collectionID: ID!) {\ncollection(id: $collectionID) {\nitems (first:100) {\n...CollectionConnectionFields\n}\n...CollectionFields\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};

            function o(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }
            i.definitions = i.definitions.concat(o(n("msok").definitions)), i.definitions = i.definitions.concat(o(n("+Vfn").definitions)), e.exports = i
        },
        "0Rl0": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("q1tI"),
                r = n("Ue10"),
                o = function() {
                    return i.createElement(r.G, null, i.createElement(r.o, {
                        ratio: r.p.Aspect16x9
                    }, i.createElement(r.ib, null)), i.createElement(r.H, null, i.createElement(r.Xa, {
                        display: r.X.Flex,
                        margin: {
                            bottom: 1
                        }
                    }, i.createElement(r.Xa, {
                        display: r.X.InlineBlock,
                        margin: {
                            top: 1,
                            right: 1
                        }
                    }, i.createElement(r.ib, {
                        width: 40,
                        height: 56
                    })), i.createElement(r.Xa, {
                        display: r.X.InlineBlock,
                        margin: {
                            top: 1
                        }
                    }, i.createElement(r.W, null, i.createElement(r.ib, {
                        width: 150
                    })), i.createElement(r.W, {
                        fontSize: r.Ca.Size7
                    }, i.createElement(r.ib, {
                        width: 100
                    }))))))
                }
        },
        "0T/G": function(e, t) {},
        "0WFu": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("3Bft");

            function r(e) {
                return [i.a.Prime, i.a.Custom].includes(e) ? null : parseInt(e, 10) / 1e3
            }
        },
        "0Ws6": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "LatestVideosFromFollowedCarousel_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "followedVideos"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "30"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "sort"
                                        },
                                        value: {
                                            kind: "EnumValue",
                                            value: "TIME"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "FragmentSpread",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PreviewCardVideo"
                                                            },
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 239
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery LatestVideosFromFollowedCarousel_CurrentUser {\ncurrentUser {\nid\nfollowedVideos(first: 30 sort: TIME) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        "0hI/": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportUserData"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "targetUserID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            alias: {
                                kind: "Name",
                                value: "targetUser"
                            },
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "targetUserID"
                                    }
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "lookupType"
                                },
                                value: {
                                    kind: "EnumValue",
                                    value: "ALL"
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "blockedUsers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 176
                }
            };
            n.loc.source = {
                body: "query ReportUserModal_ReportUserData($targetUserID: ID!) {\ntargetUser: user(id: $targetUserID lookupType: ALL) {\nid\nlogin\ndisplayName\n}\ncurrentUser {\nid\nblockedUsers {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "16Gl": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            });
            var i = n("kduP");

            function r(e, t) {
                return Object(i.d)(e) + "/edit/" + t
            }

            function o(e, t) {
                return Object(i.d)(e) + "/highlighter/" + t
            }

            function a(e, t) {
                return Object(i.d)(e) + "/schedule/" + t
            }

            function s(e, t) {
                return Object(i.d)(e) + "/appeal/" + t
            }
        },
        "1G35": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "e", function() {
                return c
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return d
            }), n.d(t, "d", function() {
                return u
            });
            var i, r = n("/7QA"),
                o = n("f00E"),
                a = 2e10,
                s = "20GB";
            ! function(e) {
                e[e.published = 0] = "published", e[e.private = 1] = "private"
            }(i || (i = {}));
            var l, c = ["video/mp4", "video/quicktime", "video/avi", "video/x-flv", "video/x-msvideo", "video/*", ".mp4", ".mov", ".flv", ".avi"];

            function d(e) {
                return Object.assign({
                    id: Object(o.b)(),
                    errors: [],
                    fileSizeBytes: 0,
                    totalBytesSent: 0,
                    viewable: i.private,
                    videoAuthToken: "",
                    status: l.queued,
                    progressPercentage: 0
                }, e)
            }

            function u(e, t) {
                var n = [];
                if (e || n.push(new Error(Object(r.d)("Only accounts with verified email addresses can upload files. Please check your inbox for the verification email", "VideoUploadModel"))), !c.includes(t.type)) {
                    var i = "." + t.name.split(".").pop();
                    c.includes(i) || n.push(new Error(Object(r.d)("File type {filetype} is not currently supported", {
                        filetype: t.type ? t.type : i
                    }, "VideoUploadModel")))
                }
                return t.size > a && n.push(new Error(Object(r.d)("File too large. The maximum file size is {maxFileSizeLabel}", {
                    maxFileSizeLabel: s
                }, "VideoUploadModel"))), n
            }! function(e) {
                e[e.queued = 0] = "queued", e[e.uploading = 1] = "uploading", e[e.completed = 2] = "completed", e[e.errored = 3] = "errored", e[e.stopped = 4] = "stopped"
            }(l || (l = {}))
        },
        "2bi+": function(e, t, n) {
            "use strict";
            n("DLhE");
            var i = n("fvjX"),
                r = n("/7QA"),
                o = n("mrSG"),
                a = n("V3Pk"),
                s = n("ZuiC"),
                l = function(e) {
                    return o.__assign({
                        searchHits: [],
                        videos: {}
                    }, e)
                };
            var c = n("sf7/"),
                d = n("DpwM"),
                u = n("g807"),
                p = n("RNNG"),
                m = n("Sfdh"),
                h = function(e) {
                    return o.__assign({
                        comments: Object(u.c)(),
                        currentVideoTime: 0,
                        cursor: {
                            future: d.g,
                            past: d.g
                        },
                        errorMessage: "",
                        hasDismissedChatReplayError: !1,
                        hasLoadedCurrentUserBlockedList: !1,
                        hasLoadedData: !1,
                        isPostCooldownActive: !1,
                        isReplayFilterOn: !1,
                        isScrollingSynced: !0,
                        replyCursorMap: {},
                        hideTimestamps: !1
                    }, e)
                },
                f = 150;
            var g = {
                apiToken: "",
                deviceId: ""
            };
            var v = {
                    users: {}
                },
                b = function(e) {
                    return o.__assign({
                        users: {}
                    }, e)
                };

            function k(e, t) {
                var n = t.reduce(function(e, t) {
                    return e[t.id] = t, e
                }, {});
                return o.__assign({}, e, n)
            }
            var y = Object(i.combineReducers)({
                comments: function(e, t) {
                    var n;
                    switch (void 0 === e && (e = h()), t.type) {
                        case s.l:
                            var i = o.__assign({}, t.comments[0], {
                                highlight: !0,
                                source: d.f
                            });
                            return o.__assign({}, e, {
                                comments: Object(u.d)(e.comments, [i]),
                                isPostCooldownActive: !0
                            });
                        case s.m:
                            return o.__assign({}, e, {
                                errorMessage: t.createError
                            });
                        case s.o:
                            return o.__assign({}, e, {
                                errorMessage: t.errorMessage
                            });
                        case s.d:
                            var r = t.comments[0].parentId,
                                l = e.cursor,
                                g = e.replyCursorMap,
                                v = t.comments.slice();
                            if ("" === r) l = t.cursor;
                            else if (g = o.__assign({}, e.replyCursorMap, ((n = {})[r] = t.cursor.future, n)), t.cursor.future === d.g) {
                                var b = Object(u.b)(e.comments, r);
                                if (b) {
                                    var k = o.__assign({}, b, {
                                        moreReplies: !1
                                    });
                                    v.push(k)
                                }
                            }
                            var y = Object(u.d)(e.comments, v);
                            return e.isScrollingSynced && (y = Object(p.e)(y, f)), o.__assign({}, e, {
                                comments: y,
                                cursor: l,
                                hasLoadedData: !0,
                                replyCursorMap: g
                            });
                        case s.e:
                            return o.__assign({}, e, {
                                comments: Object(u.d)(Object(u.c)(), t.comments),
                                hasLoadedData: !0,
                                cursor: t.cursor,
                                replyCursorMap: {}
                            });
                        case s.f:
                            return o.__assign({}, e, {
                                hasLoadedData: !0
                            });
                        case a.c:
                            return o.__assign({}, e, {
                                comments: Object(u.d)(Object(u.c)(), t.comments),
                                cursor: t.cursor,
                                hasLoadedData: !0,
                                errorMessage: ""
                            });
                        case a.b:
                            return o.__assign({}, h(), {
                                hasLoadedData: !0,
                                errorMessage: t.error
                            });
                        case c.b:
                            return o.__assign({}, e, {
                                currentVideoTime: Math.floor(t.updatedTime)
                            });
                        case c.a:
                        case s.c:
                            return o.__assign({}, h());
                        case s.n:
                            return o.__assign({}, e, {
                                comments: Object(p.d)(e.comments, t.comment)
                            });
                        case s.k:
                            var C = e.errorMessage;
                            return C === Object(m.a)().messageCreatedTooQuickError && (C = ""), o.__assign({}, e, {
                                isPostCooldownActive: !1,
                                errorMessage: C
                            });
                        case s.h:
                            return o.__assign({}, e, {
                                isScrollingSynced: !1
                            });
                        case s.i:
                            return o.__assign({}, e, {
                                comments: Object(p.e)(e.comments, f),
                                isScrollingSynced: !0
                            });
                        case a.a:
                            return o.__assign({}, e, {
                                comments: Object(p.a)(e.comments, function(e) {
                                    return e.commenter !== t.user
                                })
                            });
                        case s.p:
                            return o.__assign({}, e, {
                                comments: Object(u.d)(e.comments, t.comments)
                            });
                        case s.g:
                            return o.__assign({}, e, {
                                isReplayFilterOn: t.isReplayFilterOn
                            });
                        case s.a:
                            return o.__assign({}, e, {
                                hasDismissedChatReplayError: !0
                            });
                        case s.j:
                            return o.__assign({}, e, {
                                hideTimestamps: t.hideTimestamps
                            });
                        case s.b:
                            return o.__assign({}, e, {
                                isReplayFilterOn: t.isReplayFilterOn,
                                hideTimestamps: t.hideTimestamps
                            });
                        default:
                            return e
                    }
                },
                config: function(e) {
                    return void 0 === e && (e = g), e
                },
                users: function(e, t) {
                    switch (void 0 === e && (e = v), t.type) {
                        case s.d:
                        case s.e:
                        case a.c:
                        case s.l:
                            return {
                                users: k(e.users, t.users)
                            };
                        case s.c:
                            return o.__assign({}, b());
                        default:
                            return e
                    }
                },
                moderation: function(e, t) {
                    switch (void 0 === e && (e = l()), t.type) {
                        case a.c:
                            return o.__assign({}, e, {
                                videos: function(e, t) {
                                    var n = t.reduce(function(e, t) {
                                        return e[t.id] = t, e
                                    }, {});
                                    return o.__assign({}, e, n)
                                }(e.videos, t.videos)
                            });
                        case a.d:
                            return t.hits && t.hits.results.length > 0 ? o.__assign({}, e, {
                                searchHits: t.hits.results
                            }) : o.__assign({}, e, {
                                searchHits: []
                            });
                        case s.c:
                            return o.__assign({}, l());
                        default:
                            return e
                    }
                }
            });
            r.p.store.registerReducer("vodChat", y);
            n("WK0g"), n("ahza");
            var C = n("nxZp"),
                S = (function() {}(), n("pU2t"), n("l41m")),
                E = n("HjbF"),
                _ = n("kVrx"),
                w = n("ZUUl"),
                O = n("82xK"),
                T = n("zClW"),
                D = (n("3Ps+"), n("GCGb")),
                N = n("Zkco"),
                I = n("KD05"),
                x = n("fCiU"),
                R = n("XXm5"),
                j = n("znm4"),
                M = (n("pwkZ"), n("4OCo")),
                F = n("GEnX");
            n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return C.a
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "A", function() {
                return S.d
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "o", function() {
                return s.y
            }), n.d(t, "q", function() {
                return c.d
            }), n.d(t, "u", function() {
                return E.c
            }), n.d(t, "v", function() {
                return E.d
            }), n.d(t, "n", function() {
                return E.a
            }), n.d(t, "m", function() {
                return _.a
            }), n.d(t, "x", function() {
                return _.b
            }), n.d(t, "z", function() {
                return _.c
            }), n.d(t, "B", function() {
                return w.a
            }), n.d(t, "C", function() {
                return w.b
            }), n.d(t, "k", function() {
                return O.a
            }), n.d(t, "p", function() {
                return T.a
            }), n.d(t, "r", function() {
                return T.b
            }), n.d(t, "y", function() {
                return T.c
            }), n.d(t, "H", function() {
                return T.i
            }), n.d(t, "D", function() {
                return T.d
            }), n.d(t, "E", function() {
                return T.e
            }), n.d(t, "F", function() {
                return T.f
            }), n.d(t, "G", function() {
                return T.g
            }), n.d(t, !1, function() {}), n.d(t, "b", function() {
                return d.b
            }), n.d(t, "d", function() {
                return d.d
            }), n.d(t, "a", function() {
                return d.a
            }), n.d(t, "c", function() {
                return d.c
            }), n.d(t, !1, function() {}), n.d(t, "w", function() {
                return d.h
            }), n.d(t, "e", function() {
                return D.b
            }), n.d(t, !1, function() {}), n.d(t, "h", function() {
                return N.a
            }), n.d(t, "t", function() {
                return I.b
            }), n.d(t, "s", function() {
                return x.b
            }), n.d(t, "f", function() {
                return R.a
            }), n.d(t, "g", function() {
                return R.b
            }), n.d(t, "l", function() {
                return j.a
            }), n.d(t, !1, function() {}), n.d(t, "j", function() {
                return M.a
            }), n.d(t, "i", function() {
                return F.a
            })
        },
        "2e6W": function(e, t, n) {},
        "3Bft": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                Prime: "prime",
                Tier1: "1000",
                Tier2: "2000",
                Tier3: "3000",
                Custom: "Custom"
            }
        },
        "3Ps+": function(e, t) {},
        "41XU": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelBanner"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "bannerImageURL"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 100
                }
            };
            n.loc.source = {
                body: "query ChannelBanner($login: String!) {\nuser(login: $login) {\nid\ndisplayName\nlogin\nbannerImageURL\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "4JFD": function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("/MKj"),
                r = n("fvjX"),
                o = n("1/iK"),
                a = n("y5D0"),
                s = n("2bi+"),
                l = n("mrSG"),
                c = n("TSYQ"),
                d = n("cr+I"),
                u = n("q1tI"),
                p = n("oJmH"),
                m = n("/7QA"),
                h = n("ZDlU"),
                f = n("H1ft"),
                g = n("yR8l"),
                v = n("V+GM"),
                b = n("5zf8"),
                k = n("yI+y"),
                y = n("UWbL"),
                C = n("+GjP"),
                S = n("vRsq"),
                E = n("NvVO"),
                _ = n("2xye"),
                w = n("llur"),
                O = n("zxEZ"),
                T = n("GnwI"),
                D = n("8ssJ"),
                N = n("+Jjl"),
                I = n("eFQ3"),
                x = n("SWMh"),
                R = n("f3GI"),
                j = n("WOQ1"),
                M = n("VtCy"),
                F = n("0OKo"),
                L = n("dIEm"),
                V = n("Ue10"),
                U = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return l.__extends(t, e), t.prototype.render = function() {
                        if (!this.props.firstPageLoaded) return null;
                        var e = this.props,
                            t = e.currentGameName,
                            n = e.currentVideoID;
                        return u.createElement(V.Xa, {
                            padding: {
                                y: 2
                            }
                        }, u.createElement(L.e, {
                            currentlyWatchingVideoID: n,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location
                            }
                        }), u.createElement(L.b, {
                            currentlyWatchingVideoID: n,
                            gameName: t,
                            noGameSpecified: "" === t,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location
                            }
                        }), this.recentVideosFromCreatorCarousel(), u.createElement(L.f, {
                            currentlyWatchingVideoID: n,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location
                            }
                        }))
                    }, t.prototype.recentVideosFromCreatorCarousel = function() {
                        return this.props.creator ? u.createElement(L.d, {
                            currentlyWatchingVideoID: this.props.currentVideoID,
                            creatorDisplayName: this.props.creator.displayName,
                            creatorID: this.props.creator.id,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location
                            }
                        }) : null
                    }, t
                }(u.Component),
                A = Object(p.compose)(Object(F.a)("BelowFoldRecommendations"))(U);
            var P, B = Object(i.connect)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                })(A),
                W = n("CCjQ"),
                X = n("5Ijs"),
                G = n("vrNp"),
                z = n("6x+I"),
                H = n("QzU5"),
                q = n("4rCz"),
                Q = n("EyXs"),
                K = n("a9YZ"),
                Y = "qa-description-container",
                $ = "qa-typeset",
                Z = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isExpanded: !1
                        }, t.renderDescription = function() {
                            if (t.props.description) {
                                var e, n = Object(K.d)(t.props.description);
                                if (t.state.isExpanded) e = n.map(function(e, t) {
                                    return 0 === e.length ? u.createElement("br", {
                                        key: "desc-line" + t
                                    }) : u.createElement(z, l.__assign({
                                        key: "desc-line" + t,
                                        source: e
                                    }, Q.a))
                                });
                                else {
                                    var i = n[0].split("\n")[0];
                                    e = u.createElement(z, l.__assign({
                                        source: i,
                                        renderers: {
                                            Paragraph: K.c,
                                            Heading: K.a,
                                            Item: K.b
                                        }
                                    }, Q.a))
                                }
                                return u.createElement(V.Xa, {
                                    "data-test-selector": Y
                                }, u.createElement(V.ec, {
                                    "data-test-selector": $
                                }, e), t.state.isExpanded ? t.renderBroadcastType(t.props.broadcastType) : null)
                            }
                        }, t.toggleExpand = function() {
                            t.setState(function(e) {
                                return {
                                    isExpanded: !e.isExpanded
                                }
                            })
                        }, t
                    }
                    return l.__extends(t, e), t.prototype.render = function() {
                        return this.props.description ? u.createElement(V.Eb, {
                            background: V.r.Base,
                            "data-test-selector": "qa-more-info-box"
                        }, u.createElement(V.Xa, {
                            padding: {
                                x: 1,
                                top: 1
                            }
                        }, this.renderDescription()), u.createElement(V.Eb, {
                            alignContent: V.e.Center,
                            borderTop: !0,
                            display: V.X.Flex,
                            justifyContent: V.Wa.Center,
                            padding: {
                                y: .5
                            }
                        }, u.createElement(V.z, {
                            "data-test-selector": "qa-toggle-expand-button",
                            type: V.F.Text,
                            onClick: this.toggleExpand
                        }, this.state.isExpanded ? Object(q.d)("Show Less", "MoreInfoBox") : Object(q.d)("Show More", "MoreInfoBox")))) : null
                    }, t.prototype.renderBroadcastType = function(e) {
                        if (!e) return u.createElement(V.ib, {
                            lineCount: 1,
                            width: 80
                        });
                        var t;
                        switch (e) {
                            case H.a.Archive:
                                t = Object(q.d)("Past Broadcast", "MoreInfoBox");
                                break;
                            case H.a.Upload:
                                t = Object(q.d)("Upload", "MoreInfoBox");
                                break;
                            case H.a.PastPremiere:
                                t = Object(q.d)("Past Premiere", "MoreInfoBox");
                                break;
                            case H.a.Highlight:
                                t = Object(q.d)("Highlight", "MoreInfoBox");
                                break;
                            default:
                                t = Object(q.d)("Unknown", "MoreInfoBox")
                        }
                        return u.createElement(V.W, {
                            "data-test-selector": "qa-broadcast-type-text"
                        }, Object(q.d)("Video Category: {broadcastType}", {
                            broadcastType: t
                        }, "MoreInfoBox"))
                    }, t = l.__decorate([Object(T.b)("MoreInfoBox", {
                        autoReportInteractive: !0
                    })], t)
                }(u.Component),
                J = n("h92S"),
                ee = n("oVvm");
            n("PMgN");
            ! function(e) {
                e[e.TotalViews = 0] = "TotalViews", e[e.VideoDescription = 1] = "VideoDescription"
            }(P || (P = {}));
            var te = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return l.__extends(t, e), t.prototype.render = function() {
                        var e = null;
                        return this.props.video && this.props.video.description && (e = u.createElement(V.Eb, {
                            borderTop: !0,
                            "data-test-selector": P.VideoDescription
                        }, u.createElement(Z, {
                            description: this.props.video.description,
                            broadcastType: this.props.video.broadcastType
                        }))), u.createElement(V.Eb, {
                            background: V.r.Base,
                            border: !0
                        }, u.createElement(V.Eb, {
                            alignItems: V.f.Center,
                            breakpointMedium: {
                                flexDirection: V.Aa.Row
                            },
                            display: V.X.Flex,
                            flexWrap: V.Ba.NoWrap,
                            flexDirection: V.Aa.Column,
                            justifyContent: V.Wa.Start
                        }, u.createElement(V.Eb, {
                            flexGrow: 1,
                            fullWidth: !0,
                            fullHeight: !0,
                            overflow: V.cb.Hidden,
                            padding: 1
                        }, u.createElement(J.a, {
                            video: this.props.video
                        })), u.createElement(V.Xa, null, u.createElement(G.a, {
                            login: this.props.video && this.props.video.owner && this.props.video.owner.login
                        }), u.createElement(V.Eb, {
                            alignItems: V.f.Center,
                            className: "video-info-bar__action-container",
                            display: V.X.Flex,
                            flexDirection: V.Aa.Row,
                            flexShrink: 0,
                            fullHeight: !0,
                            padding: 1
                        }, this.props.video && u.createElement(V.Eb, {
                            alignItems: V.f.Center,
                            "data-test-selector": P.TotalViews,
                            display: V.X.Flex,
                            color: V.O.Alt2,
                            flexGrow: 1,
                            fontSize: V.Ca.Size5
                        }, u.createElement(V.Db, {
                            value: Object(m.f)(this.props.video.viewCount),
                            label: Object(m.d)("Total Views", "VideoInfoBar"),
                            icon: V.tb.GlyphViews
                        })), u.createElement(V.Xa, {
                            display: V.X.Flex,
                            flexGrow: 0
                        }, u.createElement(V.Xa, {
                            padding: {
                                x: 1
                            }
                        }, u.createElement(X.a, {
                            balloonDirection: V.v.TopRight,
                            buttonType: V.F.Hollow,
                            content: {
                                collectionID: this.props.collectionID,
                                videoID: this.props.video ? this.props.video.id : void 0
                            },
                            currentVideoTime: this.props.lastVideoOffset,
                            tracking: {
                                location: _.PageviewLocation.VideoWatchPage
                            }
                        })), u.createElement(ee.a, {
                            currentUser: this.props.currentUser,
                            video: this.props.video,
                            lastVideoOffset: this.props.lastVideoOffset
                        }))))), e)
                    }, t
                }(u.Component),
                ne = Object(T.b)("VideoInfoBar", {
                    autoReportInteractive: !0
                })(te),
                ie = n("kRBY");
            var re = Object(i.connect)(function(e) {
                    return {
                        isLoggedIn: Object(ie.f)(e)
                    }
                })(function(e) {
                    var t, n = Object(f.b)();
                    return t = e.isLoggedIn ? u.createElement(L.e, {
                        multipleVideoGameMarkersType: n,
                        tracking: {
                            medium: _.PageviewMedium.VideoNotFoundPage,
                            location: _.PageviewLocation.VideoWatchPage
                        }
                    }) : u.createElement(L.c, {
                        multipleVideoGameMarkersType: n,
                        tracking: {
                            medium: _.PageviewMedium.VideoNotFoundPage,
                            location: _.PageviewLocation.VideoWatchPage
                        }
                    }), u.createElement(V.Eb, {
                        alignItems: V.f.Center,
                        color: V.O.Alt2,
                        display: V.X.Flex,
                        flexDirection: V.Aa.Column,
                        fullHeight: !0,
                        fullWidth: !0,
                        justifyContent: V.Wa.Center
                    }, u.createElement(V.Xa, {
                        alignItems: V.f.Center,
                        display: V.X.Flex,
                        flexWrap: V.Ba.NoWrap,
                        padding: {
                            bottom: 3
                        }
                    }, u.createElement(V.Eb, {
                        margin: {
                            right: 2
                        },
                        flexShrink: 0,
                        color: V.O.Alt2
                    }, u.createElement(V.sb, {
                        asset: V.tb.DeadGlitch,
                        width: 92,
                        height: 96
                    })), u.createElement(V.Xa, {
                        display: V.X.Flex,
                        flexDirection: V.Aa.Column
                    }, u.createElement(V.W, {
                        fontSize: V.Ca.Size4,
                        "data-test-selector": "video-error-message"
                    }, Object(m.d)("Sorry. Unless you’ve got a time machine, that content is unavailable.", "VideoNotFoundPage")), u.createElement(V.W, {
                        fontSize: V.Ca.Size4,
                        "data-test-selector": "video-error-cta"
                    }, Object(m.d)("In the meantime, take a look at these other videos instead.", "VideoNotFoundPage")))), u.createElement(V.Xa, {
                        fullWidth: !0,
                        padding: {
                            x: 5
                        }
                    }, t))
                }),
                oe = (n("rv2W"), n("x3L2")),
                ae = -1,
                se = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.logger = m.k.withCategory("VideoWatchPage"), n.onPlayerSeekRequest = function(e) {
                            n.setState({
                                requestedVideoOffset: e
                            })
                        }, n.onShowLoginHandler = function() {
                            n.props.onLogin()
                        }, n.getVideoOffsetFromQuery = function(e) {
                            void 0 === e && (e = n.props);
                            var t = Object(C.a)(e.location.search, "t");
                            return t ? Object(y.a)(t) : ae
                        }, n.onPlayerNavigationEvent = function(e) {
                            var t = n.getVideo(),
                                i = t ? t.id : void 0,
                                r = Object(S.m)(n.props) || void 0;
                            Object(I.c)(e, n.props.history, {
                                currentVideoID: i,
                                currentCollectionID: r
                            })
                        }, n.onVideoTimeChange = function(e) {
                            var t = Math.floor(e);
                            t !== n.state.lastVideoOffset ? n.setState({
                                lastVideoOffset: t
                            }, function() {
                                n.props.onVideoTimeChange(t)
                            }) : n.state.requestedVideoOffset === t && n.setState({
                                requestedVideoOffset: ae
                            })
                        }, n.maybeFetchVideoMarkers = function(e) {
                            return l.__awaiter(n, void 0, void 0, function() {
                                var t, n;
                                return l.__generator(this, function(i) {
                                    switch (i.label) {
                                        case 0:
                                            return e.lengthSeconds ? [4, Object(x.a)(e.id, e.lengthSeconds, e.game)] : [2];
                                        case 1:
                                            return t = i.sent(), n = t.map(function(e) {
                                                return l.__assign({}, e, {
                                                    subLabel: Object(b.b)(e.duration),
                                                    videoId: e.videoID
                                                })
                                            }), this.setState({
                                                videoGameChanges: n
                                            }), [2]
                                    }
                                })
                            })
                        }, n.getMiniPlayerTitle = function() {
                            var e = n.getVideo();
                            return e && e.title || Object(m.d)("Watching video", "VideoWatchPage")
                        }, n.getMiniPlayerURL = function(e, t) {
                            return e || t ? !e && t ? "/collections/" + t : "/videos/" + e + (t ? "?collection=" + t : "") : (n.logger.error(new Error, "Tried to generate a mini player URL based on the current route, but critical options were missing."), "/")
                        }, n.state = {
                            requestedVideoOffset: n.getVideoOffsetFromQuery(),
                            lastVideoOffset: ae,
                            miniPlayerRouteLink: n.getMiniPlayerURL(t.match.params.videoID, t.match.params.collectionID),
                            videoGameChanges: []
                        }, n
                    }
                    return l.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.reportInteractive(), this.setExperimentsState()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.getVideoOffsetFromQuery(this.props) !== this.getVideoOffsetFromQuery(e) && this.setState({
                            requestedVideoOffset: this.getVideoOffsetFromQuery(e)
                        }), this.setState({
                            miniPlayerRouteLink: this.getMiniPlayerURL(e.match.params.videoID, e.match.params.collectionID)
                        })
                    }, t.prototype.componentDidUpdate = function(e) {
                        if (this.props.data && !this.props.data.loading && (this.props.data.video || this.props.data.collection))
                            if (this.props.data.video && this.props.data.video.owner) m.p.setPageTitle(this.props.data.video.owner.displayName + " - " + this.props.data.video.title);
                            else if (this.props.data.collection && this.props.data.collection.items.edges.length > 0) {
                            var t = this.props.data.collection.items.edges[0].node,
                                n = t.owner ? t.owner.displayName + " - " : "";
                            m.p.setPageTitle("" + n + t.title)
                        }
                        e.data.loading && !this.props.data.loading && Object(f.b)() !== f.a.None && this.props.data.video && (e.data.video && e.data.video.id) !== this.props.data.video.id && this.maybeFetchVideoMarkers(this.props.data.video), this.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.getVideo(),
                            t = Object(S.m)(this.props),
                            n = !this.props.data.loading && t && this.props.data.collection && 0 === this.props.data.collection.items.totalCount,
                            i = this.getOwner();
                        if (this.props.data.error || e && e.id && !e.owner) return u.createElement(h.a, {
                            message: Object(m.d)("Whoops, we can't load that video right now.", "VideoWatchPage")
                        });
                        if (!this.props.data.loading && (!e || e && "" === e.id) && !t) return u.createElement(re, null);
                        var r = c("video-watch-page__right-column"),
                            o = {};
                        this.state.requestedVideoOffset !== ae && (o.nextVideoOffset = this.state.requestedVideoOffset), t && (o.collectionID = t), this.props.match.params.videoID && (o.vodID = this.props.match.params.videoID);
                        var a = null;
                        e && e.scope === M.VideoScope.Private && i && (a = u.createElement(W.a, {
                            ownerLogin: i.login
                        }));
                        var d = this.props.match.params.videoID || e && e.id || null;
                        return u.createElement(V.Xa, {
                            fullHeight: !0
                        }, u.createElement(R.a, {
                            currentPage: O.b.Videos,
                            "data-test-selector": "qa-video-watch-page",
                            ownerLogin: i ? i.login : "",
                            theatreMode: this.props.theatreModeEnabled
                        }, a, u.createElement(j.a, null, u.createElement(D.a, {
                            playerProps: l.__assign({
                                onNavigationRequest: this.onPlayerNavigationEvent,
                                onSeek: this.onVideoTimeChange,
                                onVideoTimeChange: this.onVideoTimeChange,
                                attachToWindow: !0,
                                fullscreenRef: Object(k.c)(this.state.theatreFullscreenGroup),
                                onFullscreenChange: k.b,
                                videoMarkers: this.state.videoGameChanges
                            }, o),
                            miniPlayerTitle: this.getMiniPlayerTitle(),
                            miniPlayerContentRoute: this.state.miniPlayerRouteLink
                        })), !n && u.createElement(ne, {
                            collectionID: t || void 0,
                            currentUser: this.props.data.currentUser || null,
                            video: e || null,
                            lastVideoOffset: this.state.lastVideoOffset
                        }), u.createElement(B, {
                            creator: i ? {
                                id: i.id,
                                displayName: i.displayName
                            } : void 0,
                            currentGameName: e && e.game ? e.game.name : "",
                            currentVideoID: d || void 0,
                            multipleVideoGameMarkersType: Object(f.b)(),
                            tracking: {
                                medium: _.PageviewMedium.VideoWatchPage,
                                location: _.PageviewLocation.VideoWatchPage
                            },
                            onPlayerSeekRequest: this.onPlayerSeekRequest
                        })), !n && u.createElement(N.b, null, u.createElement(V.Eb, {
                            className: r,
                            "data-test-selector": "video-chat-wrapper",
                            display: V.X.Flex,
                            flexGrow: 0,
                            flexShrink: 0,
                            flexWrap: V.Ba.NoWrap,
                            overflow: V.cb.Hidden,
                            fullHeight: !0
                        }, u.createElement(s.l, l.__assign({
                            onPlayerSeekRequest: this.onPlayerSeekRequest,
                            onShowLogin: this.onShowLoginHandler,
                            videoID: d
                        }, this.mapQueryParamsToVideoChatProps())))))
                    }, t.prototype.mapQueryParamsToVideoChatProps = function() {
                        var e = {},
                            t = d.parse(this.props.location.search),
                            n = this.getVideoOffsetFromQuery();
                        return n !== ae && (e.highlightTimestamp = n), t.comment && (e.highlightedMessageID = t.comment), e
                    }, t.prototype.reportInteractive = function() {
                        this.props.data && !this.props.data.loading && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.getVideo = function() {
                        return this.props.data.video && this.props.data.video.id ? this.props.data.video : this.props.data.collection && this.props.data.collection.items.edges[0] && this.props.data.collection.items.edges[0].node && this.props.data.collection.items.edges[0].node.id ? this.props.data.collection.items.edges[0].node : null
                    }, t.prototype.getOwner = function() {
                        var e = this.getVideo(),
                            t = !this.props.data.loading && this.props.data.collection && this.props.data.collection.owner;
                        return e && e.owner || t || null
                    }, t.prototype.setExperimentsState = function() {
                        return l.__awaiter(this, void 0, void 0, function() {
                            var e;
                            return l.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, Object(k.a)()];
                                    case 1:
                                        return e = t.sent(), this.setState({
                                            theatreFullscreenGroup: e
                                        }), [2]
                                }
                            })
                        })
                    }, t
                }(u.Component),
                le = Object(p.compose)(Object(g.a)(oe, {
                    options: function(e) {
                        return {
                            variables: {
                                videoID: e.match.params.videoID,
                                collectionID: Object(S.m)(e) || void 0,
                                useCollectionID: !!Object(S.m)(e) && !e.match.params.videoID
                            }
                        }
                    }
                }), Object(T.b)("VideoWatchPage", {
                    destination: E.a.VideoWatchPage
                }), Object(v.a)({
                    location: _.PageviewLocation.VideoWatchPage,
                    properties: function(e) {
                        var t = null,
                            n = null,
                            i = null,
                            r = null,
                            o = null,
                            a = null;
                        if (e.match.params.videoID) t = e.match.params.videoID, e.data.video && e.data.video.owner && (n = e.data.video.broadcastType, i = e.data.video.game ? e.data.video.game.name : null, r = e.data.video.language, o = e.data.video.owner.login, a = Number(e.data.video.owner.id));
                        else if (Object(S.m)(e) && e.data.collection && e.data.collection.items.edges.length > 0) {
                            var s = e.data.collection.items.edges[0].node;
                            t = s.id, n = s.broadcastType, i = s.game ? s.game.name : null, r = s.language, o = s.owner ? s.owner.login : null, a = s.owner ? Number(s.owner.id) : null
                        }
                        return {
                            channel: o,
                            channel_id: a,
                            vod_type: n ? Object(w.b)(n) : null,
                            vod_id: t,
                            game: i,
                            language: r
                        }
                    },
                    skip: function(e) {
                        return e.data.loading
                    }
                }))(se);
            var ce = Object(i.connect)(function(e) {
                return {
                    theatreModeEnabled: e.ui.theatreModeEnabled
                }
            }, function(e) {
                return Object(r.bindActionCreators)({
                    onLogin: function() {
                        return Object(a.e)(o.a.VODComment)
                    },
                    onVideoTimeChange: s.q
                }, e)
            })(le);
            n.d(t, "VideoWatchPage", function() {
                return ce
            })
        },
        "4OCo": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return u
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("mmRu"),
                s = n("cpJf"),
                l = n("Sfdh"),
                c = n("Tqc9"),
                d = n("Ue10"),
                u = (n("sbEw"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.submitReply = function() {
                            if ("" !== n.state.newReplyText) {
                                if (n.props.isCreationCoolDownActive) return n.setState({
                                    showCoolDownState: !0
                                }), void(n.props.onError && n.props.onError(Object(l.a)().messageCreatedTooQuickError));
                                n.props.onReplySubmit(n.state.newReplyText), n.setState({
                                    newReplyText: ""
                                })
                            }
                        }, n.onChange = function(e) {
                            e.preventDefault(), n.setState({
                                newReplyText: e.currentTarget.value
                            })
                        }, n.onEmoticonClick = function(e) {
                            n.setState({
                                newReplyText: n.state.newReplyText + " " + e
                            })
                        }, n.onKeyDown = function(e) {
                            e.key === c.b && (e.preventDefault(), n.submitReply()), n.props.onReplyFormClose && e.key === c.c && (e.preventDefault(), n.props.onReplyFormClose())
                        }, n.setTextareaRef = function(e) {
                            return n.textArea = e
                        }, n.state = {
                            newReplyText: t.replyToUserDisplayName ? "@" + t.replyToUserDisplayName + " " : "",
                            showCoolDownState: !1
                        }, n
                    }
                    return i.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.isCreationCoolDownActive || this.setState({
                            showCoolDownState: !1
                        }), e.replyToUserDisplayName && e.replyToUserDisplayName !== this.props.replyToUserDisplayName && this.setState({
                            newReplyText: "@" + e.replyToUserDisplayName + " "
                        })
                    }, t.prototype.render = function() {
                        return r.createElement(d.Xa, {
                            className: this.props.classNames,
                            position: d.jb.Relative
                        }, r.createElement(d.Sb, {
                            error: this.state.showCoolDownState,
                            maxLength: 512,
                            noResize: !0,
                            onChange: this.onChange,
                            onKeyDown: this.onKeyDown,
                            placeholder: Object(o.d)("Reply", "ReplyForm"),
                            refDelegate: this.setTextareaRef,
                            value: this.state.newReplyText
                        }), r.createElement(a.a, {
                            attachRight: !0,
                            attachTop: !0,
                            channelOwnerID: this.props.videoOwnerID,
                            emotePickerSource: s.a.VodChat,
                            inputRef: this.textArea,
                            onClickEmote: this.onEmoticonClick,
                            position: d.jb.Absolute
                        }))
                    }, t
                }(r.Component))
        },
        "52dQ": function(e, t, n) {},
        "5Ijs": function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                o = n("oJmH"),
                a = n("/7QA"),
                s = n("q1tI"),
                l = n("eJ65"),
                c = n("EuPq"),
                d = n("KYAw"),
                u = n("Ue10"),
                p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = Object(d.a)(this.props.collection.id);
                        return s.createElement("div", null, s.createElement(u.W, null, Object(a.d)("Collection Link", "VideoShareBox")), s.createElement(c.a, {
                            onClick: function() {
                                e.props.onClick(t)
                            },
                            value: t
                        }))
                    }, t
                }(s.Component),
                m = n("BQs+"),
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function(e) {
                            var n = {
                                location: t.props.tracking.location,
                                platform: m.a.Link,
                                shareURL: e
                            };
                            Object(m.b)(t.props.collection, n, a.p.apollo.client)
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return s.createElement(p, r.__assign({}, this.props, {
                            onClick: this.onClickHandler
                        }))
                    }, t
                }(s.Component),
                f = n("EdhP"),
                g = n("2xye"),
                v = n("Addw");

            function b(e) {
                switch (e.type) {
                    case i.Collection:
                        return e.currentVideo || null;
                    case i.Video:
                        return e;
                    default:
                        return e
                }
            }! function(e) {
                e[e.Collection = 0] = "Collection", e[e.Video = 1] = "Video"
            }(i || (i = {}));
            var k = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.content,
                            n = this.getEmbedPlayerContentURL(t);
                        return s.createElement("div", null, s.createElement(u.W, null, Object(a.d)("Embed Video", "VideoShareBox")), s.createElement(c.a, {
                            onClick: function() {
                                e.props.onClick(n)
                            },
                            value: this.getEmbedPlayerCode(t)
                        }))
                    }, t.prototype.getEmbedPlayerCode = function(e) {
                        var t = function(e, t) {
                                var n = {
                                    autoplay: !1
                                };
                                switch (e.type) {
                                    case i.Collection:
                                        e.currentVideo ? (n.video = e.currentVideo.id, n.t = t ? Object(v.a)(t) : void 0) : n.collection = e.id;
                                        break;
                                    case i.Video:
                                        n.video = e.id, n.t = t ? Object(v.a)(t) : void 0
                                }
                                return n
                            }(e, null !== this.props.selectedVideoStartTime ? this.props.selectedVideoStartTime : void 0),
                            n = e.owner.displayName,
                            r = e.title,
                            o = Object(a.d)("Watch {title} from {displayName} on www.twitch.tv", {
                                displayName: n,
                                title: r
                            }, "VideoShareBox");
                        return Object(f.b)(t, {
                            textLink: {
                                url: this.getEmbedPlayerContentURL(e),
                                text: o
                            },
                            allowScrolling: !1,
                            allowFullscreen: !0
                        })
                    }, t.prototype.getEmbedPlayerContentURL = function(e) {
                        switch (e.type) {
                            case i.Collection:
                                return e.currentVideo ? Object(d.b)(e.currentVideo.id, {
                                    tt_medium: g.PageviewMedium.VideoEmbed,
                                    tt_content: g.PageviewContent.TextLink,
                                    t: this.props.selectedVideoStartTime
                                }) : Object(d.a)(e.id, {
                                    tt_medium: g.PageviewMedium.VideoEmbed,
                                    tt_content: g.PageviewContent.TextLink
                                });
                            case i.Video:
                                return Object(d.b)(e.id, {
                                    tt_medium: g.PageviewMedium.VideoEmbed,
                                    tt_content: g.PageviewContent.TextLink,
                                    t: this.props.selectedVideoStartTime
                                });
                            default:
                                return e
                        }
                    }, t
                }(s.Component),
                y = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function(e) {
                            var n = t.props.content;
                            switch (n.type) {
                                case i.Collection:
                                    n.currentVideo ? t.trackVideoShare(e, n.currentVideo) : t.trackCollectionShare(e, n);
                                    break;
                                case i.Video:
                                    t.trackVideoShare(e, n);
                                    break;
                                default:
                                    return n
                            }
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return s.createElement(k, r.__assign({}, this.props, {
                            onClick: this.onClickHandler
                        }))
                    }, t.prototype.trackCollectionShare = function(e, t) {
                        var n = {
                            location: this.props.tracking.location,
                            platform: m.a.Embed,
                            shareURL: e
                        };
                        Object(m.b)(t, n, a.p.apollo.client)
                    }, t.prototype.trackVideoShare = function(e, t) {
                        var n = {
                            location: this.props.tracking.location,
                            platform: m.a.Embed,
                            shareURL: e
                        };
                        Object(m.c)(t, n, a.p.apollo.client)
                    }, t
                }(s.Component),
                C = n("X7Ac"),
                S = [{
                    type: C.b.Twitter,
                    selector: "twitter-button"
                }, {
                    type: C.b.Facebook,
                    selector: "fb-button"
                }, {
                    type: C.b.VKontakte,
                    selector: "vk-button"
                }, {
                    type: C.b.Reddit,
                    selector: "reddit-button"
                }, {
                    type: C.b.Copy,
                    selector: "copy-link-button"
                }],
                E = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.content,
                            n = this.getContentURL(t),
                            i = this.getSocialShareContextTitle(t),
                            r = S.map(function(t) {
                                return s.createElement(C.a, {
                                    "data-test-selector": t.selector,
                                    key: t.type,
                                    onShareClick: function(t) {
                                        e.props.onClick(n, t)
                                    },
                                    text: i,
                                    type: t.type,
                                    url: n
                                })
                            });
                        return s.createElement(u.Xa, {
                            display: u.X.Flex,
                            justifyContent: u.Wa.Between
                        }, r)
                    }, t.prototype.getSocialShareContextTitle = function(e) {
                        return Object(a.d)("Check out {title} from {displayName} on www.twitch.tv", {
                            displayName: e.owner.displayName,
                            title: e.title
                        }, "VideoShareBox")
                    }, t.prototype.getContentURL = function(e) {
                        switch (e.type) {
                            case i.Collection:
                                return e.currentVideo ? Object(d.b)(e.currentVideo.id, {
                                    collection: e.id,
                                    t: this.props.selectedVideoStartTime
                                }) : Object(d.a)(e.id);
                            case i.Video:
                                return Object(d.b)(e.id, {
                                    t: this.props.selectedVideoStartTime
                                });
                            default:
                                return e
                        }
                    }, t
                }(s.Component),
                _ = function(e) {
                    switch (e) {
                        case C.b.Twitter:
                            return m.a.Twitter;
                        case C.b.Reddit:
                            return m.a.Reddit;
                        case C.b.VKontakte:
                            return m.a.VKontakte;
                        case C.b.Facebook:
                            return m.a.Facebook;
                        case C.b.Copy:
                            return m.a.Copy;
                        case C.b.CopyInput:
                            return m.a.Link;
                        case C.b.Download:
                            return m.a.Download;
                        default:
                            return e
                    }
                },
                w = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function(e, n) {
                            var r = t.props.content;
                            switch (r.type) {
                                case i.Collection:
                                    r.currentVideo ? t.trackVideoShare(e, r.currentVideo, n, r.id) : t.trackCollectionShare(e, r, n);
                                    break;
                                case i.Video:
                                    t.trackVideoShare(e, r, n);
                                    break;
                                default:
                                    return r
                            }
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return s.createElement(E, r.__assign({}, this.props, {
                            onClick: this.onClickHandler
                        }))
                    }, t.prototype.trackCollectionShare = function(e, t, n) {
                        var i = {
                            location: this.props.tracking.location,
                            platform: _(n),
                            shareURL: e
                        };
                        Object(m.b)(t, i, a.p.apollo.client)
                    }, t.prototype.trackVideoShare = function(e, t, n, i) {
                        var r = {
                            collectionID: i,
                            location: this.props.tracking.location,
                            platform: _(n),
                            shareURL: e
                        };
                        Object(m.c)(t, r, a.p.apollo.client)
                    }, t
                }(s.Component),
                O = n("hyVY"),
                T = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onShareTimestampClick = function(e) {
                            void 0 !== t.props.currentVideoTime && t.props.onVideoStartTimeChange(e.currentTarget.checked ? t.props.currentVideoTime : void 0)
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = {};
                        this.props.collectionID && (t.collection = this.props.collectionID), this.props.selectedVideoStartTime && (t.t = this.props.selectedVideoStartTime);
                        var n = Object(d.b)(this.props.video.id, t);
                        return s.createElement("div", null, s.createElement(u.W, null, Object(a.d)("Video Link", "VideoShareBox")), s.createElement(c.a, {
                            onClick: function() {
                                e.props.onInputClick(n)
                            },
                            value: n
                        }), this.renderCurrentVideoOffsetLinkOption())
                    }, t.prototype.renderCurrentVideoOffsetLinkOption = function() {
                        if (void 0 === this.props.currentVideoTime) return null;
                        var e = this.props.selectedVideoStartTime || this.props.currentVideoTime,
                            t = Object(O.b)(e);
                        return s.createElement(u.Xa, {
                            padding: {
                                top: .5
                            }
                        }, s.createElement(u.N, {
                            id: "video-share-timestamp-toggle",
                            label: Object(a.d)("Skip to {deeplinkTimestamp}", {
                                deeplinkTimestamp: t
                            }, "VideoShareBox"),
                            "data-a-target": "video-share-timestamp-toggle",
                            "data-a-value": void 0 !== this.props.selectedVideoStartTime,
                            checked: !!this.props.selectedVideoStartTime,
                            onChange: this.onShareTimestampClick
                        }))
                    }, t
                }(s.Component),
                D = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function(e, n) {
                            var i = {
                                collectionID: n,
                                location: t.props.tracking.location,
                                platform: m.a.Link,
                                shareURL: e
                            };
                            Object(m.c)(t.props.video, i, a.p.apollo.client)
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return s.createElement(T, r.__assign({}, this.props, {
                            onInputClick: this.onClickHandler
                        }))
                    }, t
                }(s.Component),
                N = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {}, t.toggleTimer = function(e) {
                            t.props.getCurrentVideoTime && !e && (t.updateCurrentTime(), t.getTimeTimer = setInterval(t.updateCurrentTime, 1e3))
                        }, t.updateCurrentTime = function() {
                            if (t.props.getCurrentVideoTime) {
                                var e = t.props.getCurrentVideoTime();
                                t.setState({
                                    currentTime: e
                                })
                            }
                        }, t.onVideoStartTimeChangeHandler = function(e) {
                            t.setState({
                                selectedVideoStartTime: e
                            })
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.currentVideoTime === this.state.currentTime || e.getCurrentVideoTime || this.setState({
                            currentTime: e.currentVideoTime
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        this.getTimeTimer && clearTimeout(this.getTimeTimer)
                    }, t.prototype.render = function() {
                        var e = null;
                        return this.props.content && (e = this.shareBalloonContent(this.props.content)), s.createElement(l.a, {
                            onToggle: this.toggleTimer
                        }, s.createElement(u.z, {
                            disabled: !this.props.content,
                            icon: u.tb.Share,
                            type: this.props.buttonType
                        }, Object(a.d)("Share", "VideoShareBox")), s.createElement(u.u, {
                            direction: this.props.balloonDirection,
                            size: u.w.Small
                        }, e))
                    }, t.prototype.shareBalloonContent = function(e) {
                        return s.createElement(u.Xa, {
                            padding: 1
                        }, s.createElement(w, {
                            content: e,
                            selectedVideoStartTime: this.state.selectedVideoStartTime,
                            tracking: this.props.tracking
                        }), this.renderCollectionShareInput(e), this.renderVideoShareInput(e), this.renderEmbedPlayerInput(e))
                    }, t.prototype.renderCollectionShareInput = function(e) {
                        return e.type !== i.Collection ? null : s.createElement(u.Xa, {
                            padding: {
                                top: 1
                            }
                        }, s.createElement(h, {
                            collection: e,
                            tracking: this.props.tracking
                        }))
                    }, t.prototype.renderVideoShareInput = function(e) {
                        var t, n;
                        if (e.type === i.Collection) {
                            if (!e.currentVideo) return null;
                            n = e.id, t = e.currentVideo
                        } else t = e;
                        return s.createElement(u.Xa, {
                            padding: {
                                top: 1
                            }
                        }, s.createElement(D, {
                            collectionID: n,
                            currentVideoTime: this.state.currentTime,
                            onVideoStartTimeChange: this.onVideoStartTimeChangeHandler,
                            selectedVideoStartTime: this.state.selectedVideoStartTime,
                            tracking: this.props.tracking,
                            video: t
                        }))
                    }, t.prototype.renderEmbedPlayerInput = function(e) {
                        return s.createElement(u.Xa, {
                            padding: {
                                top: 1
                            }
                        }, s.createElement(y, {
                            content: e,
                            selectedVideoStartTime: this.state.selectedVideoStartTime,
                            tracking: this.props.tracking
                        }))
                    }, t
                }(s.Component),
                I = n("gFHd");

            function x(e) {
                return e.owner && e.title ? {
                    type: i.Video,
                    id: e.id,
                    owner: {
                        id: e.owner.id,
                        displayName: e.owner.displayName
                    },
                    title: e.title
                } : null
            }
            var R = Object(o.compose)(Object(o.graphql)(I, {
                options: function(e) {
                    var t = e.content;
                    return t ? {
                        variables: {
                            collectionID: t.collectionID || "",
                            hasCollection: !!t.collectionID,
                            hasVideo: !!t.videoID,
                            videoID: t.videoID || ""
                        }
                    } : {
                        variables: {
                            collectionID: "",
                            hasCollection: !1,
                            hasVideo: !1,
                            videoID: ""
                        }
                    }
                },
                props: function(e) {
                    var t = r.__assign({}, e, {
                            content: void 0
                        }),
                        n = e.data;
                    return n.loading ? t : n.error ? (a.k.error(n.error, "VideoShareBoxContainer"), t) : (n.collection ? t.content = function(e, t) {
                        var n;
                        if (t) {
                            var r = x(t);
                            if (!r) return null;
                            n = r
                        }
                        return e.owner && e.title ? {
                            type: i.Collection,
                            id: e.id,
                            owner: {
                                id: e.owner.id,
                                displayName: e.owner.displayName
                            },
                            title: e.title,
                            currentVideo: n
                        } : null
                    }(n.collection, n.video) || void 0 : n.video && (t.content = x(n.video) || void 0), t)
                }
            }))(N);
            n.d(t, "a", function() {
                return R
            }), n.d(t, !1, function() {
                return i
            }), n.d(t, !1, function() {
                return b
            })
        },
        "5NSO": function(e, t, n) {},
        "5zf8": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return l
            });
            var i, r, o = n("/7QA");

            function a(e, t) {
                switch (e) {
                    case i.Second:
                        return Object(o.d)("{secondCount, plural, one {# second} other {# seconds}}", {
                            secondCount: t
                        }, "formatDuration");
                    case i.Minute:
                        return Object(o.d)("{minuteCount, plural, one {# minute} other {# minutes}}", {
                            minuteCount: t
                        }, "formatDuration");
                    case i.Hour:
                        return Object(o.d)("{hourCount, plural, one {# hour} other {# hours}}", {
                            hourCount: t
                        }, "formatDuration");
                    case i.Day:
                        return Object(o.d)("{dayCount, plural, one {# day} other {# days}}", {
                            dayCount: t
                        }, "formatDuration");
                    case i.Week:
                        return Object(o.d)("{weekCount, plural, one {# week} other {# weeks}}", {
                            weekCount: t
                        }, "formatDuration");
                    case i.Month:
                        return Object(o.d)("{monthCount, plural, one {# month} other {# months}}", {
                            monthCount: t
                        }, "formatDuration");
                    default:
                        return ""
                }
            }

            function s(e, t) {
                switch (e) {
                    case i.Second:
                        return Object(o.d)("{secondCount}s", {
                            secondCount: t
                        }, "formatDuration");
                    case i.Minute:
                        return Object(o.d)("{minuteCount}m", {
                            minuteCount: t
                        }, "formatDuration");
                    case i.Hour:
                        return Object(o.d)("{hourCount}h", {
                            hourCount: t
                        }, "formatDuration");
                    case i.Day:
                        return Object(o.d)("{dayCount}d", {
                            dayCount: t
                        }, "formatDuration");
                    case i.Week:
                        return Object(o.d)("{weekCount}w", {
                            weekCount: t
                        }, "formatDuration");
                    case i.Month:
                        return Object(o.d)("{monthCount}mo", {
                            monthCount: t
                        }, "formatDuration");
                    default:
                        return ""
                }
            }

            function l(e, t) {
                var n;
                switch (void 0 === t && (t = r.Humanized), t === r.ClockAuto && (t = e >= 3600 ? r.ClockHMS : r.ClockMS), t) {
                    case r.ClockHM:
                    case r.ClockHMS:
                        n = i.Hour;
                        break;
                    case r.ClockMS:
                        n = i.Minute
                }
                var l = 2;
                t === r.ClockHMS && (l = 3);
                var d = function(e, t) {
                        void 0 === t && (t = i.Month);
                        var n = {};
                        return n.seconds = e, e < 60 || t === i.Second ? n : (n.minutes = Math.floor(e / 60), n.seconds = e % 60, n.minutes < 60 || t === i.Minute ? n : (n.hours = Math.floor(n.minutes / 60), n.minutes = n.minutes % 60, n.hours < 24 || t === i.Hour ? n : (n.days = Math.floor(n.hours / 24), n.hours = n.hours % 24, n.days < 7 || t === i.Day ? n : n.days <= 26 || t === i.Week ? (n.weeks = Math.floor(n.days / 7), n.days = n.days % 7, n) : (n.months = Math.round((n.days + 3) / 30), n))))
                    }(e, n),
                    u = Object.keys(d);
                if (u.forEach(function(e, n) {
                        t !== r.Humanized && t !== r.HumanizedShort || d[e] || delete d[e], n < u.length - l && delete d[e]
                    }), t === r.Humanized) return function(e) {
                    return e.months ? a(i.Month, e.months) : e.weeks && e.days ? a(i.Week, e.weeks) + " " + a(i.Day, e.days) : e.weeks ? a(i.Week, e.weeks) : e.days && e.hours ? a(i.Day, e.days) + " " + a(i.Hour, e.hours) : e.days ? a(i.Day, e.days) : e.hours && e.minutes ? a(i.Hour, e.hours) + " " + a(i.Minute, e.minutes) : e.hours ? a(i.Hour, e.hours) : e.minutes && e.seconds ? a(i.Minute, e.minutes) + " " + a(i.Second, e.seconds) : e.minutes ? a(i.Minute, e.minutes) : a(i.Second, e.seconds || 0)
                }(d);
                if (t === r.HumanizedShort) return function(e) {
                    return e.months ? s(i.Month, e.months) : e.weeks && e.days ? "" + s(i.Week, e.weeks) + s(i.Day, e.days) : e.weeks ? s(i.Week, e.weeks) : e.days && e.hours ? "" + s(i.Day, e.days) + s(i.Hour, e.hours) : e.days ? s(i.Day, e.days) : e.hours && e.minutes ? "" + s(i.Hour, e.hours) + s(i.Minute, e.minutes) : e.hours ? s(i.Hour, e.hours) : e.minutes && e.seconds ? "" + s(i.Minute, e.minutes) + s(i.Second, e.seconds) : e.minutes ? s(i.Minute, e.minutes) : s(i.Second, e.seconds || 0)
                }(d);
                var p = ":",
                    m = !1;
                switch (o.p.intl.getLanguageCode()) {
                    case "cy":
                    case "da":
                    case "fi":
                    case "id":
                    case "nb":
                    case "si":
                        p = ".";
                        break;
                    case "af":
                    case "fr":
                    case "lt":
                        m = !0
                }
                var h = d.seconds || 0,
                    f = d.minutes || 0,
                    g = d.hours || 0;
                switch (t) {
                    case r.ClockHM:
                    case r.ClockHMS:
                        var v = (m ? c(g, 2) : g) + p + c(f, 2);
                        return t === r.ClockHMS && (v += p + c(h, 2)), v;
                    case r.ClockMS:
                        return (m ? c(f, 2) : f) + p + c(h, 2)
                }
            }

            function c(e, t) {
                var n = e.toString();
                return n.length < t ? "0".repeat(t - n.length) + n : n
            }! function(e) {
                e[e.Second = 0] = "Second", e[e.Minute = 1] = "Minute", e[e.Hour = 2] = "Hour", e[e.Day = 3] = "Day", e[e.Week = 4] = "Week", e[e.Month = 5] = "Month"
            }(i || (i = {})),
            function(e) {
                e[e.Humanized = 0] = "Humanized", e[e.HumanizedShort = 1] = "HumanizedShort", e[e.ClockAuto = 2] = "ClockAuto", e[e.ClockHM = 3] = "ClockHM", e[e.ClockMS = 4] = "ClockMS", e[e.ClockHMS = 5] = "ClockHMS"
            }(r || (r = {}))
        },
        "60o1": function(e, t, n) {
            "use strict";

            function i(e, t) {
                var n = e,
                    i = !1;
                return n ? function(e) {
                    return e.split("").map(function(e) {
                        return e.charCodeAt(0) > 127
                    }).reduce(function(e, t) {
                        return e || t
                    })
                }(n) && (i = !0) : n = t, {
                    userDisplayName: n,
                    isIntl: i
                }
            }
            n.d(t, "a", function() {
                return i
            })
        },
        "6h5w": function(e, t, n) {
            "use strict";
            var i, r = n("q1tI"),
                o = n("9C/b"),
                a = n("/7QA"),
                s = n("vRsq"),
                l = n("tuvy"),
                c = n("Ue10"),
                d = Object(o.a)(function(e) {
                    var t, n = e.options;
                    return t = Object(l.a)() ? Object(s.j)(e.channelLogin, e, n) : Object(s.q)(e.channelLogin, n && {
                        filter: n.filter ? Object(s.z)(n.filter) : void 0,
                        sort: n.sort
                    }), r.createElement(c.U, {
                        to: t,
                        hoverUnderlineNone: !0
                    }, r.createElement(c.Xa, {
                        display: c.X.InlineFlex,
                        flexDirection: c.Aa.Row,
                        alignItems: c.f.Center
                    }, r.createElement(c.W, {
                        type: c.Vb.H5
                    }, Object(a.d)("Expand All", "VideoShelfExpandLink")), r.createElement(c.sb, {
                        asset: c.tb.AngleRight,
                        height: 14
                    })))
                });
            n.d(t, "a", function() {
                    return u
                }),
                function(e) {
                    e.Title = "title", e.SubTitle = "subtitle"
                }(i || (i = {}));
            var u = function(e) {
                if (!e.titleMessage) return r.createElement(c.ib, {
                    width: 200
                });
                var t = r.createElement(c.W, {
                    type: c.Vb.H4,
                    color: c.O.Base,
                    bold: !0,
                    "data-test-selector": i.Title
                }, e.titleMessage);
                e.titleLinkTo && (t = r.createElement(c.U, {
                    to: e.titleLinkTo,
                    type: c.V.Inherit
                }, t));
                var n = e.subTitle;
                return e.subTitle && "string" == typeof e.subTitle ? n = r.createElement(c.W, {
                    color: c.O.Alt2,
                    type: c.Vb.Span,
                    "data-test-selector": i.SubTitle
                }, e.subTitle) : e.subTitle && (n = r.createElement(c.Xa, {
                    "data-test-selector": i.SubTitle
                }, n)), r.createElement(r.Fragment, null, r.createElement(c.Xa, {
                    display: c.X.Flex,
                    flexDirection: c.Aa.Row,
                    alignItems: c.f.End
                }, t, e.expandLink && r.createElement(c.Xa, {
                    padding: {
                        left: 1
                    }
                }, r.createElement(d, {
                    channelLogin: e.expandLink.channelLogin,
                    options: e.expandLink.options
                }))), n)
            }
        },
        "6j5V": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("RcPG");

            function r(e) {
                return {
                    type: i.a.Text,
                    content: e
                }
            }
        },
        "7SjK": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("TSYQ"),
                a = n("/7QA"),
                s = n("GnwI"),
                l = n("Ue10"),
                c = (n("GOKC"), r.createElement(l.Eb, {
                    alignItems: l.f.Center,
                    background: l.r.Overlay,
                    borderRadius: l.x.Small,
                    className: "emote-button__lock",
                    color: l.O.Overlay,
                    "data-test-selector": "emote-button-lock",
                    display: l.X.InlineFlex,
                    justifyContent: l.Wa.Center,
                    position: l.jb.Absolute,
                    zIndex: l.ic.Above
                }, r.createElement(l.sb, {
                    asset: l.tb.Lock,
                    height: 10,
                    width: 10
                }))),
                d = function(e) {
                    var t = o("emote-button__link", {
                            "emote-button__link--locked": !e.onClick
                        }),
                        n = e.emote,
                        i = n.displayName,
                        d = n.srcSet;
                    if (!d) return null;
                    var u = r.createElement("img", {
                        className: "emote-picker__image",
                        srcSet: d,
                        alt: i
                    });
                    if (e.isCriticalImage) {
                        for (var p = d.split(" ")[0], m = {}, h = 0, f = d.split(","); h < f.length; h++) {
                            var g = f[h].trim().split(" "),
                                v = g[1],
                                b = g[0];
                            m[v] = b
                        }
                        u = r.createElement(s.a, {
                            className: "emote-picker__emote-image",
                            src: p,
                            srcSet: m,
                            alt: i || ""
                        })
                    }
                    return r.createElement("div", {
                        className: "emote-button"
                    }, r.createElement(l.Yb, {
                        label: i || Object(a.d)("Emote", "EmoteButton"),
                        direction: l.ac.Bottom
                    }, r.createElement(l.Pa, {
                        display: l.X.Flex,
                        alignItems: l.f.Center,
                        justifyContent: l.Wa.Center
                    }, r.createElement("button", {
                        "data-test-selector": "emote-button-clickable",
                        className: t,
                        "aria-label": i,
                        name: i,
                        onClick: e.onClick ? e.onClick.bind(null, e.emote) : void 0,
                        "data-a-target": i
                    }, r.createElement("figure", null, e.locked ? c : null, u)))))
                },
                u = (n("VrOd"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClickEmote = function(e) {
                            t.props.onClickEmote && t.props.onClickEmote(e, t.props.context)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.emotes.map(function(t, n) {
                                return r.createElement(l.Xa, {
                                    key: "emote-button-padder-" + t.id + "--" + t.setID,
                                    padding: {
                                        left: e.props.spaced ? .5 : 0
                                    }
                                }, r.createElement(d, {
                                    key: "emote-button-" + t.id + "--" + t.setID,
                                    emote: t,
                                    isCriticalImage: 0 === n,
                                    locked: e.props.locked || t.isLocked,
                                    onClick: e.props.locked ? void 0 : e.handleClickEmote
                                }))
                            });
                        return r.createElement(l.Xa, {
                            display: l.X.Flex,
                            flexWrap: l.Ba.Wrap,
                            justifyContent: l.Wa.Center
                        }, t)
                    }, t
                }(r.Component));
            n.d(t, "a", function() {
                return u
            })
        },
        "7g+E": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("oJmH"),
                a = n("9C/b"),
                s = n("/7QA"),
                l = n("yR8l"),
                c = n("vRsq"),
                d = n("2xye"),
                u = n("L9xt"),
                p = n("GnwI"),
                m = n("GFmA"),
                h = n("6h5w"),
                f = n("eqgM"),
                g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (null === this.props.videos || 0 !== this.props.videos.length) return r.createElement(r.Fragment, null, r.createElement(h.a, {
                            titleMessage: Object(s.d)("Video Queue", "VideoQueueCarousel"),
                            subTitle: this.props.subTitle
                        }), r.createElement(f.a, {
                            collectionID: this.props.collectionID,
                            listContext: m.b.SingleChannelList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: this.props.trackingContext.content,
                                medium: this.props.trackingContext.medium,
                                location: this.props.trackingContext.location,
                                source: this.props.trackingContext.source,
                                itemType: this.props.trackingContext.itemType
                            },
                            videos: this.props.videos,
                            scrollToCurrentlyWatching: this.props.scrollToCurrentlyWatching,
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            renderPositionLabel: !0,
                            renderPositionBanner: !0,
                            renderCurrentlyWatchingCard: !0
                        }))
                    }, t
                }(r.Component),
                v = Object(o.compose)(Object(p.b)("VideoQueueCarousel", {
                    autoReportInteractive: !0
                }))(g),
                b = n("Ue10"),
                k = n("0Nms");
            n.d(t, "a", function() {
                return C
            });
            var y = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.componentDidUpdate = function(e) {
                        e.data.loading && !this.props.data.loading && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this;
                        if (this.props.data.error) return null;
                        var t = null,
                            n = null;
                        if (!this.props.data.loading && !this.props.data.collection) return null;
                        if (this.props.data && this.props.data.collection) {
                            if (0 === (t = this.getCollectionVideos()).length) return null;
                            var i = this.props.data.collection.title;
                            n = r.createElement(b.W, {
                                color: b.O.Alt2,
                                type: b.Vb.Span
                            }, Object(s.d)("{numVideos, plural, one {Playing # video from collection: <x:link>collectionTitle</x:link>} other {Playing # videos from collection: <x:link>collectionTitle</x:link>}}", {
                                numVideos: t.length,
                                "x:link": function() {
                                    return r.createElement(b.U, {
                                        to: Object(c.i)(null, null, e.props.collectionID)
                                    }, r.createElement(b.W, {
                                        bold: !0,
                                        type: b.Vb.Span
                                    }, i))
                                }
                            }, "VideoQueueCollectionCarousel"))
                        } else n = r.createElement(b.ib, {
                            width: 250,
                            lineCount: 1
                        });
                        return r.createElement(v, {
                            collectionID: this.props.collectionID,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            trackingContext: {
                                content: d.PageviewContent.VideoQueueCollection,
                                source: {},
                                itemType: u.TwitchDataType.Video,
                                medium: this.props.trackingContext.medium,
                                location: this.props.trackingContext.location
                            },
                            videos: t,
                            subTitle: n,
                            scrollToCurrentlyWatching: !0,
                            currentlyWatchingVideoID: this.getCurrentlyWatchingVideoID()
                        })
                    }, t.prototype.getCurrentlyWatchingVideoID = function() {
                        if (this.props.data.collection) {
                            var e = Object(c.s)(this.props);
                            return e || this.getCollectionVideos()[0].id
                        }
                    }, t.prototype.getCollectionVideos = function() {
                        var e = this.props.data.collection;
                        if (!e || !e.items || !e.items.edges) return [];
                        var t = [];
                        return e.items.edges.forEach(function(e) {
                            e && t.push(e.node)
                        }), t
                    }, t
                }(r.Component),
                C = Object(o.compose)(Object(p.b)("VideoQueueCollectionCarousel"), Object(l.a)(k, {
                    options: function(e) {
                        return {
                            variables: {
                                collectionID: e.collectionID
                            }
                        }
                    }
                }))(Object(a.a)(y))
        },
        "80G/": function(e, t, n) {},
        "82xK": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("q1tI"),
                r = n("/7QA"),
                o = n("Ue10"),
                a = function(e) {
                    return i.createElement(o.z, {
                        type: o.F.Text,
                        onClick: e.onClick
                    }, Object(r.d)("Show more replies...", "chomments.moderation.showMoreRepliesAction"))
                }
        },
        "86FS": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("H1ft"),
                a = n("SWMh"),
                s = n("cr+I"),
                l = n("/7QA"),
                c = n("GFmA"),
                d = n("0INk"),
                u = n("yWUM"),
                p = n("vRsq"),
                m = n("2xye"),
                h = n("GnwI"),
                f = n("4HIT"),
                g = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function() {
                            t.props.onClick && t.props.onClick(t.props.tracking.content_index)
                        }, t.gameChangesWithLinks = function() {
                            return t.props.videoGameChanges.map(function(e) {
                                var n = {
                                    t: Object(u.a)(e.offset)
                                };
                                return t.props.collectionID && (n.collection = t.props.collectionID), i.__assign({}, e, {
                                    linkTo: {
                                        pathname: "/videos/" + t.props.video.id,
                                        search: s.stringify(n),
                                        state: {
                                            content: m.PageviewContent.PreviewCardGameBalloonGame,
                                            medium: t.props.tracking.medium
                                        }
                                    }
                                })
                            })
                        }, t.trackVideoGameBalloonClick = function(e) {
                            t.props.video.owner && t.props.video.owner.id && t.props.video.owner.login && Object(d.b)({
                                videoID: e,
                                broadcasterID: t.props.video.owner.id,
                                channelLogin: t.props.video.owner.login,
                                contentIndex: t.props.tracking.content_index,
                                pageviewMedium: t.props.tracking.medium
                            })
                        }, t.trackVideoGameBalloonItemClick = function(e, n) {
                            t.props.video.owner && t.props.video.owner.id && t.props.video.owner.login && Object(d.c)({
                                videoID: e,
                                broadcasterID: t.props.video.owner.id,
                                channelLogin: t.props.video.owner.login,
                                contentIndex: n,
                                pageviewMedium: t.props.tracking.medium
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = {
                            context: this.props.context,
                            onClick: this.onClickHandler,
                            title: this.props.video.title,
                            linkTo: {
                                pathname: Object(p.i)(void 0, this.props.video.id),
                                state: this.getLinkState(),
                                search: this.generateSearchString()
                            },
                            thumbnailImageProps: {
                                src: this.props.video.previewThumbnailURL,
                                alt: this.props.video.title || ""
                            },
                            channelDisplayName: this.props.video.owner && this.props.video.owner.displayName || "",
                            channelLogin: this.props.video.owner && this.props.video.owner.login || "",
                            channelLinkTo: {
                                pathname: "/" + (this.props.video.owner ? this.props.video.owner.login : ""),
                                state: this.getLinkState()
                            },
                            channelImageProps: {
                                src: this.props.video.owner && this.props.video.owner.profileImageURL || "",
                                alt: this.props.video.owner && this.props.video.owner.displayName || ""
                            },
                            gameTitle: this.props.video.game && this.props.video.game.name || "",
                            gameTitleLinkTo: {
                                pathname: "/directory/game/" + encodeURI(this.props.video.game && this.props.video.game.name || ""),
                                state: this.getLinkState()
                            },
                            gameBoxArtImageProps: {
                                src: this.props.video.game && this.props.video.game.boxArtURL || l.a.defaultBoxArtURL,
                                alt: this.props.video.game ? this.props.video.game.displayName : ""
                            },
                            videoGameChanges: this.gameChangesWithLinks(),
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            datePublished: this.props.video.publishedAt,
                            viewCount: this.props.video.viewCount || 0,
                            durationInSeconds: !this.props.hideDuration && this.props.video.lengthSeconds ? this.props.video.lengthSeconds : void 0,
                            animatedImageProps: this.props.video.animatedPreviewURL ? {
                                src: this.props.video.animatedPreviewURL,
                                alt: ""
                            } : void 0,
                            watchedProgressPercent: this.getVideoPreviousWatchPercentage() || 0,
                            listPosition: this.props.listPosition,
                            topBar: this.props.topBar,
                            restriction: this.getRestrictionProps(),
                            trackImageLatency: this.props.trackImageLatency,
                            onVideoGameBalloonClick: this.trackVideoGameBalloonClick,
                            onVideoGameBalloonItemClick: this.trackVideoGameBalloonItemClick,
                            trackingContext: this.props.tracking,
                            tagListProps: !0 !== this.props.hideTags && this.props.video.contentTags ? {
                                tags: this.props.video.contentTags,
                                linkPath: f.a.PopularTag
                            } : void 0
                        };
                        return r.createElement(c.a, i.__assign({}, e))
                    }, t.prototype.generateSearchString = function() {
                        var e = {};
                        this.props.collectionID && (e.collection = this.props.collectionID);
                        var t = s.stringify(e);
                        return t ? "?" + t : ""
                    }, t.prototype.getVideoPreviousWatchPercentage = function() {
                        return this.props.video && this.props.video.self && this.props.video.self.viewingHistory && null !== this.props.video.self.viewingHistory.position ? 0 === this.props.video.lengthSeconds || 0 === this.props.video.self.viewingHistory.position ? null : this.props.video.self.viewingHistory.position / (this.props.video.lengthSeconds || 1 / 0) * 100 : null
                    }, t.prototype.getRestrictionProps = function() {
                        var e = this.props.video.restriction && this.props.video.restriction.productName ? "/products/" + this.props.video.restriction.productName : "";
                        return {
                            productName: this.props.video.restriction && this.props.video.restriction.productName,
                            title: this.props.video.restriction && this.props.video.restriction.productTitle,
                            canViewRestricted: this.props.video.self && !this.props.video.self.isRestricted || !1,
                            upsellLinkTo: {
                                pathname: e,
                                state: this.getLinkState()
                            }
                        }
                    }, t.prototype.getLinkState = function() {
                        return {
                            content: this.props.tracking.content,
                            content_index: this.props.tracking.content_index,
                            medium: this.props.tracking.medium
                        }
                    }, t
                }(r.Component),
                v = Object(h.b)("VideoPreviewCard", {
                    autoReportInteractive: !0
                })(g);
            n.d(t, "a", function() {
                return b
            });
            var b = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        videoGameChanges: []
                    }, t.maybeFetchVideoMarkers = function(e, n) {
                        return i.__awaiter(t, void 0, void 0, function() {
                            var t;
                            return i.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return this.promise = Object(a.a)(e, n, this.props.video.game), [4, this.promise];
                                    case 1:
                                        return t = i.sent(), this.setState({
                                            videoGameChanges: t
                                        }), [2]
                                }
                            })
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    return r.createElement(v, i.__assign({
                        videoGameChanges: this.state.videoGameChanges
                    }, this.props))
                }, t.prototype.componentWillMount = function() {
                    this.props.multipleVideoGameMarkersType && this.props.multipleVideoGameMarkersType !== o.a.None && !this.promise && this.maybeFetchVideoMarkers(this.props.video.id, this.props.video.lengthSeconds || 0)
                }, t
            }(r.Component)
        },
        "8jSG": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "blockedUsers"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "blockedUsers"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 56
                }
            };
            n.loc.source = {
                body: "fragment blockedUsers on User {\nid\nblockedUsers {\nid\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "8uuy": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoChatVideoTrackingContext"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "game"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 117
                }
            };
            n.loc.source = {
                body: "query VideoChatVideoTrackingContext($videoID: ID) {\nvideo(id: $videoID) {\nid\nbroadcastType\ntitle\ngame {\nid\nname\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "94Uw": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.ProfileImage = "profile_image", e.ProfileBanner = "profile_banner", e.ChannelOfflineImage = "channel_offline_image"
                }(i || (i = {}))
        },
        "9KaG": function(e, t, n) {},
        "9RDd": function(e, t, n) {},
        "A7Y/": function(e, t, n) {},
        B3R5: function(e, t, n) {},
        BKFw: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return o
            });
            var i = "BROADCAST_TYPE_ALL",
                r = "broadcaster_id",
                o = "BROADCAST_LENGTH_ANY"
        },
        BOil: function(e, t, n) {},
        "BQs+": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return d
            }), n.d(t, "b", function() {
                return u
            });
            var i, r = n("mrSG"),
                o = n("/7QA"),
                a = n("2xye"),
                s = n("I6K6"),
                l = n("bTcf"),
                c = n("L7EG");

            function d(e, t, n) {
                return r.__awaiter(this, void 0, void 0, function() {
                    var i, l, u, p;
                    return r.__generator(this, function(r) {
                        switch (r.label) {
                            case 0:
                                return r.trys.push([0, 2, , 3]), [4, n.query({
                                    query: c,
                                    variables: {
                                        videoID: e.id
                                    }
                                })];
                            case 1:
                                return i = r.sent().data, l = function(e, t) {
                                    return {
                                        id: e.id,
                                        owner: t.owner,
                                        broadcastType: t.broadcastType,
                                        game: t.game
                                    }
                                }(e, i.video), u = {
                                    channel: l.owner ? l.owner.login : null,
                                    channel_id: Number(e.owner.id),
                                    game: l.game ? l.game.name : null,
                                    partner: !!l.owner && l.owner.roles.isPartner,
                                    location: t.location,
                                    share_context: t.collectionID ? a.ShareItemContext.Collection : null,
                                    share_platform: t.platform,
                                    shared_item_id: t.collectionID ? t.collectionID : l.id,
                                    shared_item_type: t.collectionID ? a.ShareItemType.Collection : Object(s.a)(l.broadcastType),
                                    shared_item_url: t.shareURL,
                                    source_item_id: l.id,
                                    source_item_type: Object(s.a)(l.broadcastType)
                                }, o.p.tracking.track(a.SpadeEventType.ShareItem, u), [3, 3];
                            case 2:
                                return p = r.sent(), o.k.error(p.toString(), d.name), [3, 3];
                            case 3:
                                return [2]
                        }
                    })
                })
            }

            function u(e, t, n) {
                return r.__awaiter(this, void 0, void 0, function() {
                    var i, s, c;
                    return r.__generator(this, function(r) {
                        switch (r.label) {
                            case 0:
                                return r.trys.push([0, 2, , 3]), [4, n.query({
                                    query: l,
                                    variables: {
                                        creatorID: e.owner.id
                                    }
                                })];
                            case 1:
                                return i = r.sent().data, s = {
                                    channel: i.user ? i.user.login : null,
                                    channel_id: Number(e.owner.id),
                                    game: null,
                                    partner: !!i.user && i.user.roles.isPartner,
                                    location: t.location,
                                    share_context: null,
                                    share_platform: t.platform,
                                    shared_item_id: e.id,
                                    shared_item_type: a.ShareItemType.Collection,
                                    shared_item_url: t.shareURL,
                                    source_item_id: e.id,
                                    source_item_type: a.SourceItemType.Collection
                                }, o.p.tracking.track(a.SpadeEventType.ShareItem, s), [3, 3];
                            case 2:
                                return c = r.sent(), o.k.error(c.toString(), u.name), [3, 3];
                            case 3:
                                return [2]
                        }
                    })
                })
            }! function(e) {
                e.Copy = "link", e.Embed = "option_embed", e.Facebook = "fb", e.Link = "option_link", e.Reddit = "reddit", e.Twitter = "twitter", e.Unknown = "", e.VKontakte = "vk", e.Download = "download"
            }(i || (i = {}))
        },
        BZOq: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            }), n.d(t, "b", function() {
                return a
            });
            var i = n("H/lO"),
                r = n("BKFw");

            function o(e) {
                return e.map(function(e) {
                    return {
                        title: e.title || "",
                        thumbnail: e.thumbnail || "",
                        thumbnailAltText: e.thumbnailAltText || "",
                        linkTo: e.linkTo || "",
                        login: e.login || "",
                        name: e.name || "",
                        createdAt: e.createdAt || 0,
                        length: e.length || 0,
                        id: e.id || ""
                    }
                })
            }

            function a(e) {
                var t = {},
                    n = [];
                return "broadcastType" in e && e.broadcastType !== r.c && void 0 !== e.broadcastType && n.push(e.broadcastType), "broadcasterId" in e && n.push(r.a + ":" + e.broadcasterId), t.facetFilters = function(e) {
                    return e.join(",")
                }(n), "broadcastLength" in e && e.broadcastLength !== r.b && void 0 !== e.broadcastLength && (t.numericFilters = [e.broadcastLength]), {
                    typeID: i.a.Videos,
                    params: t
                }
            }
        },
        BhFH: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("yR8l"),
                o = n("8jSG"),
                a = n("cMjZ"),
                s = n("kSkr");

            function l() {
                var e = this;
                return Object(r.a)(s, {
                    props: function(t) {
                        return {
                            blockUserMutation: function(n, r, s, l) {
                                return i.__awaiter(e, void 0, void 0, function() {
                                    return i.__generator(this, function(e) {
                                        switch (e.label) {
                                            case 0:
                                                return t.mutate ? [4, t.mutate({
                                                    variables: {
                                                        input: {
                                                            targetUserID: n,
                                                            sourceContext: s,
                                                            reason: r
                                                        }
                                                    },
                                                    optimisticResponse: {
                                                        blockUser: {
                                                            __typename: "BlockUserPayload",
                                                            targetUser: {
                                                                __typename: "User",
                                                                id: n
                                                            }
                                                        }
                                                    },
                                                    update: function(e) {
                                                        var t = e.readFragment({
                                                            id: Object(a.a)(l),
                                                            fragment: o
                                                        });
                                                        t && (t.blockedUsers.push({
                                                            id: n,
                                                            __typename: "User"
                                                        }), e.writeFragment({
                                                            id: Object(a.a)(l),
                                                            fragment: o,
                                                            data: t
                                                        }))
                                                    }
                                                })] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 3];
                                            case 2:
                                                throw new Error("blockUserMutation is not ready");
                                            case 3:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }
        },
        CCjQ: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("2xye"),
                s = n("Ue10"),
                l = (n("je0y"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(s.Xa, {
                            "data-test-selector": "private-video-banner-layout"
                        }, this.renderHeader())
                    }, t.prototype.renderHeader = function() {
                        var e = this;
                        return r.createElement(s.i, {
                            type: s.n.SlideInBottom,
                            delay: s.j.Medium,
                            duration: s.k.Medium,
                            enabled: !0
                        }, r.createElement(s.Eb, {
                            className: "private-video-banner__header",
                            display: s.X.Flex,
                            background: s.r.AccentAlt2,
                            color: s.O.Overlay,
                            alignItems: s.f.Center,
                            padding: {
                                x: 1,
                                y: .5
                            },
                            fontSize: s.Ca.Size6,
                            "data-test-selector": "private-video-banner-header"
                        }, r.createElement(s.Xa, {
                            display: s.X.Flex,
                            alignItems: s.f.Center,
                            justifyContent: s.Wa.Center
                        }, r.createElement(s.sb, {
                            asset: s.tb.Lock,
                            width: 20,
                            height: 20
                        })), r.createElement(s.W, null, Object(o.d)("This video is private. To Premiere or edit your video, visit your <x:link>video manager</x:link>", {
                            "x:link": function(t) {
                                return r.createElement(s.U, {
                                    "data-test-selector": "private-video-banner-header-link",
                                    to: {
                                        pathname: "/" + e.props.ownerLogin + "/manager",
                                        state: {
                                            medium: a.PageviewMedium.VideoWatchPage,
                                            content: a.PageviewContent.Video
                                        }
                                    }
                                }, r.createElement(s.W, {
                                    type: s.Vb.Span,
                                    color: s.O.OverlayAlt
                                }, t))
                            }
                        }, "PrivateVideoBanner"))))
                    }, t
                }(r.Component))
        },
        "CFw/": function(e, t, n) {
            e.exports = n.p + "assets/notification_upsell_arrow-c9d4ff7c87444b45d813.png"
        },
        CJLt: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoChat_TrackingContext_VideoAndCurrentUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "game"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "roles"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isPartner"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 197
                }
            };
            n.loc.source = {
                body: "query VideoChat_TrackingContext_VideoAndCurrentUser($videoID: ID) {\nvideo(id: $videoID) {\nid\nbroadcastType\ntitle\ngame {\nid\nname\n}\nowner {\nid\nlogin\nroles {\nisPartner\n}\n}\n}\ncurrentUser {\nid\nlogin\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "DB+C": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "EmotePicker_EmotePicker_UserSubscriptionProducts"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelOwnerID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelOwnerID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "campaignProperties"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "domains"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "28"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "tier"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "url"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "price"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "platform"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 313
                }
            };
            n.loc.source = {
                body: "query EmotePicker_EmotePicker_UserSubscriptionProducts($channelOwnerID: ID!) {\nuser(id: $channelOwnerID) {\nid\nlogin\ncampaignProperties {\ndomains\n}\ndisplayName\nprofileImageURL(width: 28)\nsubscriptionProducts {\nid\nname\ntier\nurl\nemotes {\nid\ntoken\n}\nprice\nemoteSetID\n}\nself {\nsubscriptionBenefit {\nid\nplatform\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        DLhE: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return d
            }), n.d(t, "a", function() {
                return u
            });
            var i = n("mrSG"),
                r = n("G1cX"),
                o = n("/7QA"),
                a = n("f00E"),
                s = n("+pBb"),
                l = n("W/3w"),
                c = n("F6GT");

            function d(e) {
                return e.chat.renderSent
            }

            function u(e) {
                var t = [];
                if (e.chat && e.chat.commandHandlers)
                    for (var n in e.chat.commandHandlers) e.chat.commandHandlers[n] && t.push(n);
                return t.sort()
            }
            o.p.store.registerReducer("chat", function(e, t) {
                var n;
                switch (void 0 === e && (e = function() {
                    var e = Object(c.a)();
                    return i.__assign({}, e, {
                        commandHandlers: {},
                        emoteSets: [],
                        emotePickerSessionID: null,
                        followerDuration: l.a,
                        followerMode: !1,
                        isChatRulesOpen: !1,
                        isHidden: !1,
                        renderSent: null,
                        slowMode: !1,
                        slowModeDuration: 120,
                        subsOnlyMode: !1,
                        unhideIgnoredUsers: []
                    })
                }()), t.type) {
                    case s.d:
                        return i.__assign({}, e, {
                            isHidden: !0
                        });
                    case s.e:
                        return i.__assign({}, e, {
                            isHidden: !1
                        });
                    case s.f:
                        return i.__assign({}, e, {
                            isChatRulesOpen: !1
                        });
                    case s.i:
                        return i.__assign({}, e, {
                            emoteSets: t.emoteSets
                        });
                    case s.g:
                        return i.__assign({}, e, {
                            emotePickerSessionID: null
                        });
                    case s.h:
                        return i.__assign({}, e, {
                            emotePickerSessionID: Object(a.b)()
                        });
                    case s.j:
                        return i.__assign({}, e, {
                            lastUsedFollowerDurations: i.__assign({}, e.lastUsedFollowerDurations, (n = {}, n[t.channelLogin] = t.duration, n))
                        });
                    case s.r:
                        return i.__assign({}, e, {
                            isChatRulesOpen: !0
                        });
                    case s.q:
                        var o = i.__assign({}, e);
                        return void 0 !== t.roomState.followersOnly && (o.followerMode = t.roomState.followersOnly), void 0 !== t.roomState.followersOnlyRequirement && (o.followerDuration = t.roomState.followersOnlyRequirement), void 0 !== t.roomState.slowMode && (o.slowMode = t.roomState.slowMode), void 0 !== t.roomState.slowModeDuration && (o.slowModeDuration = t.roomState.slowModeDuration), void 0 !== t.roomState.subsOnly && (o.subsOnlyMode = t.roomState.subsOnly), o;
                    case s.b:
                        return i.__assign({}, e, {
                            showAutoModActions: !1
                        });
                    case s.c:
                        return i.__assign({}, e, {
                            showAutoModActions: !0
                        });
                    case s.k:
                        return i.__assign({}, e, {
                            showModerationActions: !1
                        });
                    case s.l:
                        return i.__assign({}, e, {
                            showModerationActions: !0
                        });
                    case s.m:
                        return i.__assign({}, e, {
                            showModIcons: !1
                        });
                    case s.n:
                        return i.__assign({}, e, {
                            showModIcons: !0
                        });
                    case s.s:
                        return i.__assign({}, e, {
                            showTimestamps: !1
                        });
                    case s.t:
                        return i.__assign({}, e, {
                            showTimestamps: !0
                        });
                    case s.v:
                        return i.__assign({}, e, {
                            useHighContrastColors: !1
                        });
                    case s.w:
                        return i.__assign({}, e, {
                            useHighContrastColors: !0
                        });
                    case s.a:
                        return r(e, function(e) {
                            return e.commandHandlers
                        }, function(e) {
                            return t.command in e ? e[t.command].push(t.handler) : e[t.command] = [t.handler], e
                        });
                    case s.o:
                        return r(e, function(e) {
                            return e.commandHandlers
                        }, function(e) {
                            if (!(t.command in e)) return e;
                            var n = e[t.command].indexOf(t.handler);
                            return e[t.command].splice(n, 1), 0 === e[t.command].length && delete e[t.command], e
                        });
                    case s.p:
                        return i.__assign({}, e, {
                            renderSent: t.customEvent
                        });
                    case s.u:
                        return i.__assign({}, e, {
                            unhideIgnoredUsers: e.unhideIgnoredUsers.concat([t.userID])
                        });
                    default:
                        return e
                }
            })
        },
        DnOo: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("oJmH"),
                a = n("/7QA"),
                s = n("UUve"),
                l = n("GnwI"),
                c = n("br9A"),
                d = n("Ue10"),
                u = "subscribe-button__subscribe-tier-button",
                p = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClick = function() {
                            t.openCheckout(), t.props.handleSubAction({
                                action: c.a.ClickCheckout,
                                checkoutButtonTier: t.props.tierPrice
                            })
                        }, t.openCheckout = function() {
                            t.props.isMobileCheckout || a.n.set(s.c, t.props.productName)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (this.props.isSubbedToTier) {
                            var e = Object(a.d)("Subscribed", "SubTierButton");
                            return r.createElement(d.z, {
                                ariaLabel: e,
                                "data-test-selector": u,
                                disabled: !0,
                                icon: d.tb.Star
                            }, e)
                        }
                        var t;
                        return t = this.props.isEsportChannel ? Object(a.d)("Get the All-Access Pass", "SubTierButton") : this.props.customSubscribeNowMessage ? this.props.customSubscribeNowMessage : Object(a.d)("Subscribe Now", "SubTierButton"), r.createElement(d.z, i.__assign({
                            ariaLabel: t + " " + this.props.tierPrice,
                            "data-test-selector": u,
                            linkTo: this.props.isMobileCheckout ? this.props.url : void 0,
                            onClick: this.handleClick,
                            purchase: this.props.tierPrice
                        }, Object(d.jc)(this.props), {
                            fullWidth: this.props.fullWidth
                        }), t)
                    }, t
                }(r.Component),
                m = Object(o.compose)(Object(l.b)("SubTierButton", {
                    autoReportInteractive: !0
                }))(p);
            n.d(t, !1, function() {
                return u
            }), n.d(t, "a", function() {
                return m
            })
        },
        DpwM: function(e, t, n) {
            "use strict";
            n.d(t, "e", function() {
                return i
            }), n.d(t, "c", function() {
                return r
            }), n.d(t, "d", function() {
                return o
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            }), n.d(t, "f", function() {
                return l
            }), n.d(t, "g", function() {
                return c
            }), n.d(t, "h", function() {
                return d
            });
            var i = "video",
                r = "published",
                o = "unpublished",
                a = "pending_review",
                s = "pending_review_spam",
                l = "current",
                c = "",
                d = function(e) {
                    return "" !== e.parentId
                }
        },
        E78O: function(e, t, n) {},
        EE1E: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return k
            });
            var i = n("EN5X"),
                r = n("G7cy"),
                o = n("m7BI"),
                a = n("E8D/"),
                s = n("DtRd"),
                l = n("R4sh"),
                c = n("/0dD"),
                d = n("76Lv"),
                u = 4.5,
                p = [250, 249, 250],
                m = [15, 14, 17],
                h = .1,
                f = 50,
                g = "7A7A7A",
                v = 36,
                b = {};

            function k(e, t) {
                var n = s(e),
                    k = y(r(n));
                if (void 0 === t && (t = Object(d.d)()), k in b[t]) return b[t][k];
                if (t === c.a.Dark && n.every(function(e) {
                        return e < v
                    })) return g;
                var C = t === c.a.Light ? p : m,
                    S = Object(l.a)(n, C);
                if (S > u) return k;
                for (var E = [n[0], n[1], n[2]], _ = f; _ >= 0 && S < u; _--) {
                    var w = o(E);
                    t === c.a.Light ? w[0] -= w[0] * h : w[0] += w[0] * h, E = a(i(w)), S = Object(l.a)(E, C)
                }
                var O = y(r(E));
                return b[t][k] = O, O
            }

            function y(e) {
                return "#" === e[0] ? e.substr(1) : e
            }
            b[c.a.Dark] = {}, b[c.a.Light] = {}
        },
        ESOY: function(e, t, n) {},
        EdhP: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("cr+I"),
                o = n("/7QA"),
                a = n("vRsq"),
                s = {
                    height: 378,
                    width: 620,
                    allowScrolling: !0,
                    allowFullscreen: !0
                };

            function l(e, t) {
                return c(function(e) {
                    e.video && (e.video = Object(a.p)(e.video));
                    var t = r.stringify(e);
                    return o.p.config.playerBaseURL + "/?" + t
                }(e), t)
            }

            function c(e, t) {
                void 0 === t && (t = s);
                var n = i.__assign({}, s, t),
                    r = '<iframe src="' + e + '" frameborder="0" ' + (n.allowFullscreen ? 'allowfullscreen="true" ' : "") + (n.allowScrolling ? "" : 'scrolling="no" ') + 'height="' + n.height + '" width="' + n.width + '"></iframe>';
                return n.textLink && (r += function(e, t) {
                    return '<a href="' + e + '" style="padding:2px 0px 4px; display:block; width:345px; font-weight:normal; font-size:10px; text-decoration:underline;">' + t + "</a>"
                }(n.textLink.url, n.textLink.text)), r
            }
        },
        EihZ: function(e, t, n) {},
        Epr8: function(e, t, n) {},
        EuPq: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("Ue10"),
                a = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClickHandler = function(e) {
                            t.props.onClick && t.props.onClick(), e.currentTarget.select()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(o.Ra, {
                            readOnly: !0,
                            type: o.Ta.Text,
                            value: this.props.value,
                            onClick: this.handleClickHandler
                        })
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return a
            })
        },
        EyXs: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                skipHtml: !0,
                softBreak: "br",
                allowedTypes: ["Emph", "Strong", "Paragraph", "Heading", "Item", "List", "Text", "Link", "Softbreak", "Hardbreak"]
            }
        },
        F6GT: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/7QA"),
                o = "control";
            n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            });
            var a = "chatSettings";

            function s() {
                var e = r.m.get(a, {});
                return i.__assign({
                    lastUsedFollowerDurations: {},
                    showAutoModActions: !0,
                    showMessageFlags: !0,
                    showModerationActions: !0,
                    showModIcons: !1,
                    showTimestamps: !1,
                    useHighContrastColors: !1,
                    zachModeStatus: o
                }, e)
            }

            function l(e, t) {
                var n = s();
                n[e] = t, r.m.set(a, n)
            }

            function c(e, t) {
                var n = s();
                n.lastUsedFollowerDurations[e] = t, r.m.set(a, n)
            }
        },
        Fj9y: function(e, t, n) {},
        GCGb: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("cZKs"),
                s = n("Ue10"),
                l = (n("gPTj"), "confirm-button"),
                c = "deny-button",
                d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(s.Eb, {
                            className: "twp-modal",
                            background: s.r.Base,
                            color: s.O.Alt,
                            padding: 3
                        }, r.createElement("h3", null, this.props.title), r.createElement(s.Xa, {
                            className: "twp-modal__message",
                            margin: {
                                bottom: 2
                            }
                        }, this.props.children), r.createElement(s.Xa, {
                            display: s.X.Flex,
                            justifyContent: s.Wa.End
                        }, r.createElement(s.Xa, {
                            margin: {
                                right: 1
                            }
                        }, r.createElement(s.z, {
                            onClick: this.props.onDenyClick,
                            type: s.F.Hollow,
                            "data-test-selector": c
                        }, Object(o.d)("Cancel", "ConfirmationModal"))), r.createElement(s.z, {
                            onClick: this.props.onConfirmClick,
                            type: s.F.Alert,
                            disabled: this.props.isConfirmDisabled,
                            "data-test-selector": l
                        }, Object(o.d)("Ok", "ConfirmationModal"))), r.createElement(a.a, {
                            closeOnBackdropClick: !0
                        }))
                    }, t
                }(r.Component)
        },
        GEnX: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("XXm5"),
                s = n("Ue10"),
                l = n("fCiU"),
                c = (n("sPFP"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onReplyClickHandler = function() {
                            t.props.replyCommentContext ? t.props.onReplyClick(Object(l.b)(t.props.replyCommentContext.author)) : t.props.onReplyClick()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = Object(o.d)("Reply", "DashboardModerationReplyButton");
                        return this.props.context === a.c ? r.createElement("button", {
                            className: "video-chat-reply-button",
                            onClick: this.onReplyClickHandler,
                            "data-test-selector": "parent-reply-button"
                        }, r.createElement(s.Xa, {
                            display: s.X.Flex
                        }, r.createElement(s.Xa, {
                            className: "video-chat-reply-button__icon",
                            display: s.X.Flex,
                            padding: {
                                right: .5
                            }
                        }, r.createElement(s.sb, {
                            width: 13,
                            height: 13,
                            asset: s.tb.Conversations,
                            type: s.ub.Inherit
                        })), r.createElement(s.W, {
                            align: s.fc.Middle,
                            type: s.Vb.Span
                        }, e))) : this.props.context === a.a ? r.createElement(s.A, {
                            ariaLabel: e,
                            type: s.C.Hollow,
                            icon: s.tb.Conversations,
                            onClick: this.onReplyClickHandler,
                            "data-test-selector": "moderation-reply-button",
                            "data-a-selector": "qa-vod-chat-reply-button"
                        }) : r.createElement(s.Eb, {
                            color: s.O.Link,
                            display: s.X.Inline,
                            margin: {
                                left: 1
                            }
                        }, r.createElement("button", {
                            onClick: this.onReplyClickHandler,
                            "data-test-selector": "reply-reply-button"
                        }, r.createElement(s.W, {
                            type: s.Vb.Span
                        }, e)))
                    }, t
                }(r.Component))
        },
        GFmA: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("5zf8"),
                s = n("Ue10"),
                l = (n("Fj9y"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onBalloonItemClick = function() {
                            t.props.onBalloonItemClick && t.props.onBalloonItemClick(t.props.videoID, t.props.index)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = {
                            src: this.props.gameChange.thumbnailUrl,
                            alt: this.props.gameChange.label
                        };
                        return r.createElement(s.Xa, {
                            className: "preview-card-game-balloon-row",
                            display: s.X.Flex,
                            flexWrap: s.Ba.NoWrap
                        }, r.createElement(s.Ua, {
                            linkTo: this.props.gameChange.linkTo,
                            onClick: this.onBalloonItemClick
                        }, r.createElement(s.Xa, {
                            display: s.X.Flex,
                            flexDirection: s.Aa.Row,
                            padding: .5
                        }, r.createElement(s.Eb, {
                            className: "preview-card-game-balloon-row__image-wrapper",
                            flexGrow: 0,
                            flexShrink: 0,
                            borderRadius: s.x.Small,
                            overflow: s.cb.Hidden,
                            position: s.jb.Relative
                        }, r.createElement(s.o, {
                            align: s.d.Center,
                            ratio: s.p.BoxArt
                        }, r.createElement(s.S, i.__assign({}, e))), r.createElement(s.Eb, {
                            className: "preview-card-game-balloon-row__image-play-overlay",
                            alignItems: s.f.Center,
                            background: s.r.Overlay,
                            color: s.O.Overlay,
                            display: s.X.Flex,
                            justifyContent: s.Wa.Center,
                            position: s.jb.Absolute,
                            attachTop: !0,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0
                        }, r.createElement(s.sb, {
                            asset: s.tb.Play,
                            type: s.ub.Inherit
                        }))), r.createElement(s.Xa, {
                            display: s.X.Flex,
                            flexDirection: s.Aa.Column,
                            flexGrow: 1,
                            flexShrink: 1,
                            padding: {
                                left: 1,
                                top: 1
                            }
                        }, r.createElement(s.Xa, {
                            className: "preview-card-game-balloon-row__info-label"
                        }, r.createElement(s.W, null, this.props.gameChange.label)), r.createElement(s.Xa, {
                            className: "preview-card-game-balloon-row__info-duration"
                        }, r.createElement(s.W, null, Object(a.b)(this.props.gameChange.duration)))))))
                    }, t
                }(r.Component)),
                c = n("0INk"),
                d = n("8/mp"),
                u = n("eJ65"),
                p = (n("vDRX"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onBalloonToggle = function(e) {
                            t.props.onBalloonClick && !e && t.props.onBalloonClick(t.props.videoID)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidMount = function() {
                        if (this.props.videoGameChanges.length > 0) {
                            var e = this.props.videoGameChanges.map(function(e) {
                                return e.label
                            });
                            Object(c.a)(e)
                        }
                    }, t.prototype.render = function() {
                        return r.createElement(s.Xa, {
                            className: "preview-card-game-balloon",
                            display: s.X.InlineBlock,
                            position: s.jb.Relative,
                            margin: {
                                top: .5
                            }
                        }, r.createElement(u.a, {
                            key: "game-balloon",
                            display: s.X.Inline,
                            onToggle: this.onBalloonToggle
                        }, r.createElement(s.z, {
                            type: s.F.Hollow,
                            icon: s.tb.ViewerList
                        }, r.createElement(s.Xa, {
                            display: s.X.Flex,
                            flexDirection: s.Aa.Row
                        }, r.createElement(s.W, null, Object(o.d)("Chapters", "PreviewCardGameBalloon")), r.createElement(s.Xa, {
                            margin: {
                                left: 1
                            }
                        }, r.createElement(s.gb, {
                            label: this.props.videoGameChanges.length.toString()
                        })))), r.createElement(s.u, {
                            direction: s.v.TopLeft,
                            size: s.w.Medium
                        }, r.createElement(s.Xa, {
                            overflow: s.cb.Hidden,
                            display: s.X.Flex,
                            flexDirection: s.Aa.Column,
                            flexWrap: s.Ba.NoWrap
                        }, r.createElement(s.Xa, {
                            padding: .5,
                            flexShrink: 0,
                            flexGrow: 0
                        }, r.createElement(s.W, {
                            color: s.O.Alt2
                        }, Object(o.d)("Chapter Select", "PreviewCardGameBalloon"))), r.createElement(s.Xa, {
                            className: "preview-card-game-balloon__content",
                            display: s.X.Flex,
                            flexDirection: s.Aa.Column,
                            flexGrow: 1,
                            flexShrink: 1,
                            flexWrap: s.Ba.NoWrap
                        }, r.createElement(d.b, null, r.createElement(s.Xa, {
                            display: s.X.Flex,
                            flexDirection: s.Aa.Column,
                            flexWrap: s.Ba.NoWrap,
                            fullHeight: !0
                        }, this.renderAdditionalGameList(this.props.videoGameChanges))))))))
                    }, t.prototype.renderAdditionalGameList = function(e) {
                        var t = this;
                        return e.map(function(e, n) {
                            return r.createElement(l, {
                                index: n,
                                gameChange: e,
                                key: t.props.videoID + "-" + e.offset,
                                videoID: t.props.videoID,
                                onBalloonItemClick: t.props.onBalloonItemClick
                            })
                        })
                    }, t
                }(r.Component)),
                m = n("kduP"),
                h = n("2xye"),
                f = function(e) {
                    return r.createElement(s.Xa, null, r.createElement(s.W, {
                        color: s.O.Alt,
                        ellipsis: !0
                    }, e.videoGameChanges.map(function(t, n, i) {
                        return r.createElement(s.Pa, {
                            key: n
                        }, r.createElement(s.U, {
                            to: {
                                pathname: Object(m.c)(t.label),
                                state: {
                                    content: h.PageviewContent.TextLink,
                                    medium: e.trackingContext && e.trackingContext.medium
                                }
                            },
                            type: s.V.Inherit
                        }, t.label, g(n, i.length - 1) ? null : ", "))
                    })))
                },
                g = function(e, t) {
                    return e === t
                },
                v = n("N0BP"),
                b = (n("XA5B"), function(e) {
                    var t = r.createElement(s.Eb, {
                        className: "preview-card-iconic-image__wrapper",
                        borderRadius: s.x.Small,
                        overflow: s.cb.Hidden
                    }, r.createElement(s.o, {
                        ratio: e.aspect || s.p.BoxArt,
                        align: s.d.Center
                    }, r.createElement(s.S, i.__assign({}, e.imageProps))));
                    return e.linkTo && (t = r.createElement(s.U, i.__assign({}, Object(v.a)(e), {
                        to: e.linkTo,
                        onClick: e.onClick
                    }), t)), t
                });
            b.displayName = "PreviewCardIconicImage";
            var k, y = n("TSYQ"),
                C = (n("cRsL"), function(e) {
                    var t = y("preview-card-top-bar", {
                        "preview-card-top-bar--gray": !e.selected,
                        "preview-card-top-bar--green": e.selected
                    });
                    return r.createElement(s.Xa, {
                        display: s.X.Flex,
                        padding: {
                            x: 1,
                            y: .5
                        },
                        justifyContent: s.Wa.Between,
                        alignItems: s.f.Center,
                        className: t
                    }, r.createElement(s.Xa, {
                        display: s.X.InlineFlex
                    }, r.createElement(s.W, {
                        "data-test-selector": "top-bar-title-selector",
                        color: s.O.Overlay,
                        bold: !0,
                        transform: s.Ub.Uppercase
                    }, e.title)), e.subTitle && r.createElement(s.Xa, {
                        display: s.X.InlineFlex
                    }, r.createElement(s.W, {
                        "data-test-selector": "top-bar-sub-title-selector",
                        color: s.O.Overlay
                    }, e.subTitle)))
                }),
                S = (n("m493"), function(e) {
                    var t = .5,
                        n = null;
                    "number" == typeof e.progressBarPercent && e.progressBarPercent > 0 && (n = r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachBottom: !0,
                        fullWidth: !0
                    }, r.createElement(s.mb, {
                        borderRadius: s.x.None,
                        size: s.ob.Small,
                        value: e.progressBarPercent,
                        mask: !0
                    })), t = 1);
                    var o = 1,
                        a = null;
                    return e.topBar && (a = r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachTop: !0,
                        fullWidth: !0
                    }, r.createElement(C, i.__assign({}, e.topBar))), o = 3), r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachTop: !0,
                        attachLeft: !0,
                        fullWidth: !0,
                        fullHeight: !0,
                        className: "preview-card-overlay"
                    }, a, n, r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachTop: !0,
                        attachLeft: !0,
                        margin: e.topBar ? {
                            x: 1,
                            y: o
                        } : 1,
                        "data-test-selector": "top-left-selector"
                    }, e.topLeft), r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachTop: !0,
                        attachRight: !0,
                        margin: e.topBar ? {
                            x: 1,
                            y: o
                        } : 1,
                        "data-test-selector": "top-right-selector"
                    }, e.topRight), r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachBottom: !0,
                        attachLeft: !0,
                        margin: {
                            x: .5,
                            y: t
                        },
                        "data-test-selector": "bottom-left-selector"
                    }, e.bottomLeft), r.createElement(s.Xa, {
                        position: s.jb.Absolute,
                        attachBottom: !0,
                        attachRight: !0,
                        margin: {
                            x: .5,
                            y: t
                        },
                        "data-test-selector": "bottom-right-selector"
                    }, e.bottomRight))
                }),
                E = (n("kF1+"), function(e) {
                    var t = e.icon && r.createElement(s.Xa, {
                        display: s.X.Flex,
                        margin: {
                            right: .5
                        }
                    }, r.createElement(s.sb, {
                        asset: e.icon,
                        width: 10,
                        height: 10
                    }));
                    return e.withBackground ? r.createElement(s.Eb, {
                        alignItems: s.f.Center,
                        background: s.r.Overlay,
                        borderRadius: s.x.Small,
                        className: "preview-card-stat",
                        color: s.O.Overlay,
                        display: s.X.Flex,
                        fontSize: s.Ca.Size6,
                        justifyContent: s.Wa.Center
                    }, t, r.createElement(s.W, null, e.value)) : r.createElement(s.Eb, {
                        className: "preview-card-stat",
                        color: s.O.Overlay,
                        display: s.X.Flex,
                        padding: {
                            x: .5
                        }
                    }, t, r.createElement(s.W, null, e.value))
                }),
                _ = n("GnwI"),
                w = (n("B3R5"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            didAnimatedPreviewLoad: !1,
                            didAnimatedPreviewFailToLoad: !1,
                            isHovered: !1
                        }, t.onImageError = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t.onImageLoad = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t.onAnimatedImageLoad = function(e) {
                            void 0 !== t.props.animatedImageProps && e.currentTarget.src === t.props.animatedImageProps.src && t.setState({
                                didAnimatedPreviewLoad: !0
                            })
                        }, t.onAnimatedImageLoadError = function(e) {
                            void 0 !== t.props.animatedImageProps && e.currentTarget.src === t.props.animatedImageProps.src && t.setState({
                                didAnimatedPreviewFailToLoad: !0
                            })
                        }, t.handleFocus = function() {
                            t.setState({
                                isHovered: !0
                            })
                        }, t.handleBlur = function() {
                            t.setState({
                                isHovered: !1
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.trackImageLatency || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = {};
                        return this.props.animatedImageProps && (e = {
                            onMouseEnter: this.handleFocus,
                            onMouseLeave: this.handleBlur,
                            onFocus: this.handleFocus,
                            onBlur: this.handleBlur
                        }), r.createElement("div", i.__assign({}, e, {
                            onClick: this.props.onClick
                        }), r.createElement(s.Eb, {
                            background: s.r.Alt2,
                            overflow: s.cb.Hidden
                        }, r.createElement(s.o, {
                            ratio: this.props.aspectRatio
                        }, this.renderImage())))
                    }, t.prototype.renderImage = function() {
                        var e, t = !(!this.props.animatedImageProps || !this.state.isHovered || this.state.didAnimatedPreviewFailToLoad),
                            n = y("preview-card-thumbnail__image", ((e = {})["preview-card-thumbnail__image--animated"] = this.state.isHovered && this.state.didAnimatedPreviewLoad, e));
                        return t && void 0 !== this.props.animatedImageProps ? r.createElement("div", {
                            className: n
                        }, r.createElement(s.S, i.__assign({}, this.props.animatedImageProps, {
                            onLoad: this.onAnimatedImageLoad,
                            onError: this.onAnimatedImageLoadError,
                            "data-test-selector": "preview-card-thumbnail__image-selector"
                        }))) : r.createElement("div", {
                            className: n
                        }, r.createElement(s.S, i.__assign({}, this.props.staticImageProps, {
                            onLoad: this.onImageLoad,
                            onError: this.onImageError,
                            "data-test-selector": "preview-card-thumbnail__image-selector"
                        })))
                    }, t
                }(r.Component)),
                O = Object(_.b)("PreviewCardThumbnail")(w),
                T = (n("80G/"), function(e) {
                    var t = null;
                    return e.subtitles && e.subtitles.length > 0 && (t = e.subtitles.map(function(e, t) {
                        return r.createElement(s.Xa, {
                            key: t,
                            "data-test-selector": "preview-card-titles__subtitle"
                        }, r.createElement(s.W, {
                            color: s.O.Alt,
                            ellipsis: !0
                        }, "string" == typeof e ? e : r.createElement(s.U, {
                            "data-a-target": e.automationSelector,
                            to: e.linkTo,
                            onClick: e.onClick,
                            type: s.V.Inherit
                        }, e.text)))
                    })), r.createElement("div", null, r.createElement(s.U, i.__assign({}, Object(v.a)(e), {
                        to: e.linkTo,
                        onClick: e.onClick,
                        type: s.V.Inherit,
                        "data-test-selector": "preview-card-titles__primary-link"
                    }), r.createElement(s.W, {
                        type: s.Vb.H3,
                        fontSize: s.Ca.Size5,
                        lines: 1,
                        bold: !0,
                        ellipsis: !0
                    }, e.title)), r.createElement(s.Xa, {
                        className: "preview-card-titles__subtitle-wrapper"
                    }, t))
                }),
                D = n("H1ft"),
                N = n("ZbA5"),
                I = n("QVaV"),
                x = n("hyVY"),
                R = n("MXoD"),
                j = n("0LAi");
            ! function(e) {
                e.LockSelector = "video-lock", e.UpsellSelector = "upsell"
            }(k || (k = {}));
            var M, F, L = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    if (!this.props.restriction || !this.props.restriction.productName || !this.props.restriction.title) return null;
                    var e = Object(o.d)("Get It Now", "VideoPreviewCardRestriction"),
                        t = this.props.restriction.canViewRestricted,
                        n = t ? Object(o.d)("unlocked", "VideoPreviewCardRestriction") : Object(o.d)("locked", "VideoPreviewCardRestriction"),
                        i = t ? s.tb.Unlock : s.tb.Lock;
                    return r.createElement(s.Xa, null, !t && r.createElement(s.Eb, {
                        background: s.r.Overlay,
                        className: "video-preview-card-restriction",
                        color: s.O.Overlay,
                        display: s.X.Flex,
                        position: s.jb.Absolute,
                        attachTop: !0,
                        attachLeft: !0,
                        zIndex: s.ic.Default,
                        padding: {
                            x: 5
                        },
                        textAlign: s.Rb.Center,
                        fullWidth: !0,
                        fullHeight: !0,
                        alignItems: s.f.Center,
                        alignContent: s.e.Center,
                        flexDirection: s.Aa.Column,
                        flexWrap: s.Ba.Wrap,
                        justifyContent: s.Wa.Center,
                        "data-test-selector": k.LockSelector
                    }, r.createElement(s.Pa, {
                        margin: {
                            bottom: 1
                        }
                    }, r.createElement(s.W, {
                        color: s.O.Overlay,
                        fontSize: s.Ca.Size5,
                        "data-test-selector": k.UpsellSelector
                    }, Object(o.d)("View with {title}", {
                        title: this.props.restriction.title
                    }, "VideoPreviewCardRestriction"))), r.createElement(s.Xa, null, r.createElement(s.z, {
                        type: s.F.Hollow,
                        ariaLabel: e,
                        targetBlank: !0,
                        disabled: "" === this.props.restriction.upsellLinkTo,
                        linkTo: this.props.restriction.upsellLinkTo,
                        overlay: !0
                    }, e))), r.createElement(s.Eb, {
                        display: s.X.InlineFlex,
                        position: s.jb.Absolute,
                        attachTop: this.props.attachTop,
                        attachBottom: !this.props.attachTop,
                        attachRight: !0,
                        margin: .5,
                        zIndex: s.ic.Default,
                        fontSize: s.Ca.Size6,
                        background: s.r.Overlay,
                        borderRadius: s.x.Medium,
                        color: s.O.Overlay
                    }, r.createElement(s.Yb, {
                        direction: this.props.attachTop ? s.ac.Bottom : s.ac.Top,
                        align: s.Zb.Right,
                        label: n
                    }, r.createElement(s.sb, {
                        asset: i,
                        height: 20,
                        width: 20
                    }))))
                }, t
            }(r.PureComponent);
            n("5NSO");

            function V(e) {
                return void 0 !== e.watchedProgressPercent
            }

            function U(e) {
                return void 0 !== e.clipCreatedByChannelLogin
            }! function(e) {
                e.Avatar = "preview-card-avatar", e.BoxArt = "preview-card-box-art"
            }(M || (M = {})),
            function(e) {
                e[e.SingleGameList = 1] = "SingleGameList", e[e.SingleChannelList = 2] = "SingleChannelList", e[e.MixedGameAndChannelList = 3] = "MixedGameAndChannelList"
            }(F || (F = {}));
            var A = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.getTrackingContext = function(e) {
                            var n = t.props.trackingContext;
                            return {
                                content: n && n.content ? n.content : e,
                                medium: n && n.medium
                            }
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement("div", i.__assign({
                            className: "preview-card"
                        }, Object(v.a)(this.props)), r.createElement(s.Eb, {
                            position: s.jb.Relative,
                            borderRadius: s.x.Medium,
                            overflow: s.cb.Hidden
                        }, this.renderVODRestrictionOverlay(), r.createElement(s.U, {
                            to: Object(R.a)(this.getTrackingContext(h.PageviewContent.VideoThumbnail), this.props.linkTo),
                            onClick: this.props.onThumbnailClick || this.props.onClick,
                            "data-a-target": "preview-card-image-link"
                        }, this.props.thumbnailImageProps && r.createElement(O, {
                            staticImageProps: this.props.thumbnailImageProps,
                            animatedImageProps: V(this.props) && this.props.animatedImageProps || void 0,
                            trackImageLatency: this.props.trackImageLatency
                        }), this.renderOverlay())), r.createElement(s.Xa, {
                            display: s.X.Flex,
                            flexWrap: s.Ba.NoWrap,
                            margin: {
                                top: 1
                            }
                        }, r.createElement(s.Xa, {
                            flexGrow: 0,
                            flexShrink: 0
                        }, this.renderIconicImage()), r.createElement(s.Xa, {
                            className: "preview-card__titles-wrapper",
                            flexGrow: 1,
                            flexShrink: 1,
                            fullWidth: !0
                        }, this.renderTitles(), this.renderTags()), this.props.contextualCardActionProps && r.createElement(s.Xa, {
                            flexGrow: 0,
                            flexShrink: 0
                        }, r.createElement(this.props.contextualCardActionProps.component, i.__assign({}, this.props.contextualCardActionProps.props)))))
                    }, t.prototype.renderOverlay = function() {
                        return function(e) {
                            return void 0 !== e.streamType
                        }(this.props) ? r.createElement(S, {
                            topLeft: r.createElement(N.a, {
                                type: this.props.streamType,
                                hosting: !!this.props.hostedByChannelLogin
                            }),
                            topRight: void 0,
                            bottomLeft: r.createElement(E, {
                                value: Object(o.d)("{viewerCount, plural, one {# viewer} other {# viewers}}", {
                                    viewerCount: this.props.currentViewerCount
                                }, "VideoPreviewCard")
                            }),
                            bottomRight: void 0
                        }) : V(this.props) ? r.createElement(S, {
                            topLeft: void 0 !== this.props.durationInSeconds && r.createElement(E, {
                                value: Object(x.b)(this.props.durationInSeconds),
                                icon: s.tb.Play,
                                withBackground: !0
                            }),
                            topRight: this.props.listPosition && r.createElement(E, {
                                withBackground: !0,
                                value: this.getListPositionLabel()
                            }),
                            bottomLeft: r.createElement(E, {
                                value: this.getViewCountLabel()
                            }),
                            bottomRight: this.props.datePublished ? r.createElement(E, {
                                value: Object(o.c)(new Date(this.props.datePublished), "medium")
                            }) : null,
                            progressBarPercent: this.props.watchedProgressPercent,
                            topBar: this.props.topBar
                        }) : U(this.props) ? r.createElement(S, {
                            topLeft: r.createElement(E, {
                                value: Object(x.b)(this.props.durationInSeconds),
                                icon: s.tb.Clip,
                                withBackground: !0
                            }),
                            topRight: void 0,
                            bottomLeft: r.createElement(E, {
                                value: this.getViewCountLabel()
                            }),
                            bottomRight: this.props.datePublished ? r.createElement(E, {
                                value: Object(o.c)(new Date(this.props.datePublished), "medium")
                            }) : null
                        }) : void 0
                    }, t.prototype.getListPositionLabel = function() {
                        return V(this.props) && this.props.listPosition ? Object(o.d)("{totalVideos, plural, one {{position} / # video} other {{position} / # videos}}", {
                            position: this.props.listPosition.position,
                            totalVideos: this.props.listPosition.totalVideos
                        }, "VideoPreviewCard") : ""
                    }, t.prototype.getViewCountLabel = function() {
                        return V(this.props) || U(this.props) ? Object(o.d)("{viewerCount, plural, one {# view} other {# views}}", {
                            viewerCount: this.props.viewCount
                        }, "VideoPreviewCard") : ""
                    }, t.prototype.renderIconicImage = function() {
                        return this.props.context === F.SingleChannelList && this.props.gameBoxArtImageProps && this.props.gameBoxArtImageProps.src && this.props.gameTitleLinkTo ? r.createElement(s.Xa, {
                            margin: {
                                right: 1
                            }
                        }, r.createElement(b, {
                            imageProps: this.props.gameBoxArtImageProps,
                            linkTo: Object(R.a)(this.getTrackingContext(h.PageviewContent.GameBoxart), this.props.gameTitleLinkTo),
                            onClick: this.props.onGameTitleClick,
                            aspect: s.p.BoxArt,
                            "data-test-selector": M.BoxArt,
                            "data-a-target": "preview-card-boxart-link"
                        })) : (this.props.context === F.SingleGameList || this.props.context === F.MixedGameAndChannelList) && this.props.channelImageProps && this.props.channelImageProps.src ? r.createElement(s.Xa, {
                            margin: {
                                right: 1
                            }
                        }, r.createElement(b, {
                            imageProps: this.props.channelImageProps,
                            linkTo: Object(R.a)(this.getTrackingContext(h.PageviewContent.UserThumbnail), this.props.channelLinkTo),
                            onClick: this.props.onChannelImageClick || this.props.onChannelLoginClick,
                            aspect: s.p.Aspect1x1,
                            "data-test-selector": M.Avatar
                        })) : void 0
                    }, t.prototype.renderTitles = function() {
                        var e = null,
                            t = [];
                        return this.shouldShowGameBalloon(this.props) || t.push({
                            text: Object(I.a)(this.props.channelLogin, this.props.channelDisplayName, !0),
                            linkTo: Object(R.a)(this.getTrackingContext(h.PageviewContent.ChannelMetadata), this.props.channelLinkTo),
                            onClick: this.props.onChannelLoginClick,
                            automationSelector: "preview-card-channel-link"
                        }), U(this.props) && this.props.clipCreatedByChannelLoginLinkTo ? t.push({
                            text: Object(o.d)("Clipped by {userName}", {
                                userName: this.props.clipCreatedByChannelLogin || ""
                            }, "VideoPreviewCard"),
                            linkTo: this.props.clipCreatedByChannelLoginLinkTo,
                            onClick: this.props.onClipCreatedByChannelLoginClick,
                            automationSelector: "preview-card-clip-curator-link"
                        }) : V(this.props) && this.props.multipleVideoGameMarkersType && this.props.videoGameChanges && this.props.videoGameChanges.length > 0 ? e = this.renderPreviewCardGameInfo(this.props.multipleVideoGameMarkersType, this.props.videoGameChanges, this.props.onVideoGameBalloonClick, this.props.onVideoGameBalloonItemClick) : this.props.context !== F.SingleGameList && this.props.gameTitle && this.props.gameTitleLinkTo && t.push({
                            text: this.props.gameTitle,
                            linkTo: Object(R.a)(this.getTrackingContext(h.PageviewContent.GameMetadata), this.props.gameTitleLinkTo),
                            onClick: this.props.onGameTitleClick,
                            automationSelector: "preview-card-game-link"
                        }), r.createElement(r.Fragment, null, r.createElement(T, {
                            title: this.props.title,
                            onClick: this.props.onVideoTitleClick || this.props.onClick,
                            linkTo: Object(R.a)(this.getTrackingContext(h.PageviewContent.VideoTitle), this.props.linkTo),
                            subtitles: t,
                            "data-a-target": "preview-card-title-link"
                        }), e)
                    }, t.prototype.renderTags = function() {
                        return this.props.tagListProps && 0 !== this.props.tagListProps.tags.length ? r.createElement(s.Xa, {
                            margin: {
                                top: .5
                            }
                        }, r.createElement(j.a, i.__assign({}, this.props.tagListProps, {
                            tagNumberLimit: 3
                        }))) : null
                    }, t.prototype.renderVODRestrictionOverlay = function() {
                        return V(this.props) && this.props.restriction && this.props.restriction.productName && this.props.restriction.title ? r.createElement(L, {
                            restriction: this.props.restriction,
                            attachTop: !0
                        }) : null
                    }, t.prototype.shouldShowGameBalloon = function(e) {
                        return !!V(e) && (!!(e.videoGameChanges && e.videoGameChanges.length > 0) && e.multipleVideoGameMarkersType === D.a.Balloon)
                    }, t.prototype.renderPreviewCardGameInfo = function(e, t, n, i) {
                        switch (e) {
                            case D.a.Balloon:
                                return r.createElement(p, {
                                    videoGameChanges: t,
                                    videoID: t[0].videoID,
                                    onBalloonClick: n,
                                    onBalloonItemClick: i
                                });
                            case D.a.Inline:
                                return r.createElement(f, {
                                    videoGameChanges: t,
                                    trackingContext: this.props.trackingContext
                                });
                            case D.a.None:
                                return null;
                            default:
                                return e
                        }
                    }, t
                }(r.Component),
                P = Object(_.b)("PreviewCard", {
                    autoReportInteractive: !0
                })(A);
            n.d(t, !1, function() {
                return M
            }), n.d(t, "b", function() {
                return F
            }), n.d(t, !1, function() {
                return A
            }), n.d(t, "a", function() {
                return P
            })
        },
        GG88: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "PopularVideosByGameCarousel_Game"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "gameName"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "game"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "gameName"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "videos"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "30"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "sort"
                                        },
                                        value: {
                                            kind: "EnumValue",
                                            value: "VIEWS"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "FragmentSpread",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PreviewCardVideo"
                                                            },
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 250
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery PopularVideosByGameCarousel_Game($gameName: String!) {\ngame(name: $gameName) {\nid\nvideos(first: 30 sort: VIEWS) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        GLn2: function(e, t, n) {},
        GOKC: function(e, t, n) {},
        GxR5: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return r
            }), n.d(t, "a", function() {
                return o
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "d", function() {
                return s
            }), n.d(t, "e", function() {
                return l
            });
            var i = n("/7QA"),
                r = "https://passport.twitch.tv/forgot_username/new",
                o = "https://help.twitch.tv/customer/portal/emails/new",
                a = "https://help.twitch.tv/customer/portal/articles/1727973-about-site-suspensions-channel-bans-and-dmca",
                s = "https://www.twitch.tv/p/legal/terms-of-service/";

            function l() {
                return "https://passport.twitch.tv/password_resets/new?client_id=" + i.a.authSettings.clientID
            }
        },
        GzyO: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            }), n.d(t, "c", function() {
                return u
            }), n.d(t, "d", function() {
                return p
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("OpME"),
                a = "twilight.emote_picker_history",
                s = 24,
                l = [{
                    id: "64138",
                    token: "SeemsGood"
                }, {
                    id: "41",
                    token: "Kreygasm"
                }, {
                    id: "245",
                    token: "ResidentSleeper"
                }, {
                    id: "28087",
                    token: "WutFace"
                }, {
                    id: "86",
                    token: "BibleThump"
                }, {
                    id: "9",
                    token: "<3"
                }, {
                    id: "58765",
                    token: "NotLikeThis"
                }, {
                    id: "81274",
                    token: "VoHiYo"
                }, {
                    id: "88",
                    token: "PogChamp"
                }, {
                    id: "425618",
                    token: "LUL"
                }, {
                    id: "25",
                    token: "Kappa"
                }, {
                    id: "30259",
                    token: "HeyGuys"
                }];

            function c(e) {
                var t = r.m.get(a, {}),
                    n = t[e.id];
                n ? (n.uses++, n.lastUpdatedAt = Date.now()) : t[e.id] = {
                    emote: e,
                    lastUpdatedAt: Date.now(),
                    uses: 1
                }, r.m.set(a, t)
            }

            function d() {
                var e = r.m.get(a, {});
                if (!(Object.keys(e).length >= s)) {
                    for (var t = {}, n = 0; n < l.length; n++) {
                        var o = l[n];
                        e[o.id] || (t[o.id] = {
                            emote: o,
                            lastUpdatedAt: n,
                            uses: 0
                        })
                    }
                    var c = i.__assign({}, t, e);
                    r.m.set(a, c)
                }
            }

            function u(e) {
                var t = r.m.get(a, {}) || {},
                    n = [];
                return Object.keys(t).forEach(function(i) {
                    var r = t[i];
                    void 0 !== r && void 0 !== e[r.emote.token] && n.push(r)
                }), n.sort(function(e, t) {
                    return e.uses > t.uses ? -1 : t.uses > e.uses ? 1 : e.lastUpdatedAt > t.lastUpdatedAt ? -1 : t.lastUpdatedAt > e.lastUpdatedAt ? 1 : 0
                }), Object(o.b)(n.slice(0, 24).map(function(e) {
                    return e.emote
                }))
            }

            function p() {
                var e = r.m.get(a, {}) || {},
                    t = {};
                return Object.keys(e).forEach(function(n) {
                    void 0 !== e[n] && (t[e[n].emote.token] = {
                        count: e[n].uses
                    })
                }), t
            }
        },
        H1ft: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return a
            });
            var i, r = n("/7QA"),
                o = n("D7An");
            ! function(e) {
                e.None = "None", e.Inline = "Inline", e.Balloon = "Balloon"
            }(i || (i = {}));
            var a = function() {
                switch (r.p.experiments.getAssignment(o.b.Archer)) {
                    case "balloon":
                        return i.Balloon;
                    case "inline":
                        return i.Inline;
                    case "control":
                    default:
                        return i.None
                }
            }
        },
        HXcb: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelPage_ChannelHeader"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "70"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isPartner"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "stream"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "videos"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "followers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follows"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "cheer"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "followButtonFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isStaff"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isSiteAdmin"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 375
                }
            };
            i.loc.source = {
                body: '#import "twilight/common/queries/follow-button-fragment.gql"\nquery ChannelPage_ChannelHeader($login: String!) {\nuser(login: $login) {\nid\nlogin\ndisplayName\nprofileImageURL(width: 70)\nroles {\nisPartner\n}\nstream {\nid\n}\nvideos {\ntotalCount\n}\nfollowers {\ntotalCount\n}\nfollows {\ntotalCount\n}\ncheer {\nid\n}\n...followButtonFragment\n}\ncurrentUser {\nid\nroles {\nisStaff\nisSiteAdmin\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("V94A").definitions)), e.exports = i
        },
        HjbF: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "e", function() {
                return o
            }), n.d(t, "f", function() {
                return a
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "d", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            });
            var i = n("DpwM");

            function r(e, t, n, i) {
                return e in t ? {
                    bitsConfig: i,
                    commentID: e,
                    cursor: t[e]
                } : {
                    bitsConfig: i,
                    commentID: e,
                    videoID: n
                }
            }

            function o(e) {
                var t = e.currentVideoTime < e.offsetRange.beginSec,
                    n = e.currentVideoTime > e.offsetRange.endSec;
                return t && l(e.cursor) || n && s(e.cursor)
            }

            function a(e) {
                return s(e.cursor) && function(e) {
                    var t = e.offsetEndTime - e.offsetThreshold;
                    return e.currentVideoTime >= t && e.currentVideoTime <= e.offsetEndTime
                }({
                    currentVideoTime: e.currentVideoTime,
                    offsetEndTime: e.offsetEndTime,
                    offsetThreshold: e.offsetThreshold
                })
            }

            function s(e) {
                return e.future !== i.g
            }

            function l(e) {
                return e.past !== i.g
            }

            function c(e, t) {
                var n = e.id === t.id,
                    i = e.roles.isGlobalMod || e.roles.isSiteAdmin || e.roles.isStaff;
                return !!t.self && t.self.isModerator || i || n
            }
        },
        IItH: function(e, t) {},
        IKE4: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "badge"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Badge"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "setID"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "version"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "title"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            alias: {
                                kind: "Name",
                                value: "image1x"
                            },
                            name: {
                                kind: "Name",
                                value: "imageURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "size"
                                },
                                value: {
                                    kind: "EnumValue",
                                    value: "NORMAL"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            alias: {
                                kind: "Name",
                                value: "image2x"
                            },
                            name: {
                                kind: "Name",
                                value: "imageURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "size"
                                },
                                value: {
                                    kind: "EnumValue",
                                    value: "DOUBLE"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            alias: {
                                kind: "Name",
                                value: "image4x"
                            },
                            name: {
                                kind: "Name",
                                value: "imageURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "size"
                                },
                                value: {
                                    kind: "EnumValue",
                                    value: "QUADRUPLE"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "clickAction"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "clickURL"
                            },
                            arguments: [],
                            directives: []
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 170
                }
            };
            n.loc.source = {
                body: "fragment badge on Badge {\nid\nsetID\nversion\ntitle\nimage1x: imageURL(size: NORMAL)\nimage2x: imageURL(size: DOUBLE)\nimage4x: imageURL(size: QUADRUPLE)\nclickAction\nclickURL\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        JGCS: function(e, t, n) {},
        JoTo: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("f00E"),
                s = n("/IfK"),
                l = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderPortal = function(e) {
                            s.b ? s.b.provideContent(e, n.contentID) : o.k.warn("SideNavPageInfoSection must be defined on the SideNav component to manipulate its content.")
                        }, n.removePortal = function() {
                            s.b ? s.b.removeContent() : o.k.warn("SideNavPageInfoSection must be defined on the SideNav component to manipulate its content.")
                        }, n.contentID = Object(a.a)(), n
                    }
                    return i.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.children ? this.renderPortal(e.children) : this.removePortal()
                    }, t.prototype.componentDidMount = function() {
                        s.b || o.k.warn("SideNavPageInfoSection must be defined on the SideNav component to manipulate its content."), this.props.children && this.renderPortal(this.props.children)
                    }, t.prototype.componentWillUnmount = function() {
                        this.removePortal()
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return l
            })
        },
        "Jxh/": function(e, t, n) {
            "use strict";

            function i(e) {
                var t = document.createElement("textarea");
                t.style.position = "fixed", t.style.top = "0", t.style.left = "0", t.style.fontSize = "12pt", t.style.width = "2em", t.style.height = "2em", t.style.padding = "0", t.style.border = "none", t.style.outline = "none", t.style.boxShadow = "none", t.style.background = "transparent", t.value = e, document.body.appendChild(t), t.select();
                var n = !0;
                try {
                    n = document.execCommand("copy")
                } catch (e) {
                    n = !1
                }
                return document.body.removeChild(t), n
            }
            n.d(t, "a", function() {
                return i
            })
        },
        JzSO: function(e, t, n) {},
        KD05: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = function(e) {
                    return "v" + e
                },
                r = function(e) {
                    return e + "s"
                }
        },
        KYAw: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            }), n.d(t, "b", function() {
                return s
            });
            var i = n("mrSG"),
                r = n("cr+I"),
                o = n("Addw");

            function a(e, t) {
                var n = new URL("https://www.twitch.tv/collections/" + e);
                return t && (n.search = r.stringify(t)), n.toString()
            }

            function s(e, t) {
                var n = new URL("https://www.twitch.tv/videos/" + e);
                return t && (n.search = r.stringify(i.__assign({}, t, {
                    t: "number" == typeof t.t ? Object(o.a)(t.t) : void 0
                }))), n.toString()
            }
        },
        KriR: function(e, t, n) {
            "use strict";
            n.d(t, "g", function() {
                return o
            }), n.d(t, "d", function() {
                return u
            }), n.d(t, "f", function() {
                return a
            }), n.d(t, "e", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            });
            var i = n("/7QA"),
                r = n("2xye");

            function o(e) {
                var t = {
                    channel: e.channelLogin,
                    channel_id: e.channelId,
                    payment_type: e.paymentType,
                    payment_flow: e.paymentFlow,
                    quantity: e.quantity,
                    action: e.action,
                    action_detail: e.actionDetail,
                    product_id: e.productId,
                    ticket_price: e.ticketPrice,
                    currency: e.currency,
                    saved_payment: e.savedPayment,
                    checkout_source: e.trackingContext.source
                };
                e.trackingContext.detail && (t.checkout_source_detail = e.trackingContext.detail), i.o.track(r.SpadeEventType.PaymentFormInteraction, t)
            }
            var a, s, l, c, d, u = function() {
                function e(e) {
                    this.store = {
                        savedPaymentAvailable: null,
                        savedPaymentDisplayed: null
                    }, this.counter = 0, this.config = {
                        allowDuplicateEvents: !(!e || !e.allowDuplicateEvents)
                    }
                }
                return e.prototype.get = function(e) {
                    return this.store[e]
                }, e.prototype.set = function(e) {
                    this.store = Object.assign(this.store, e)
                }, e.prototype.reportEvent = function() {
                    (0 === this.counter || this.config.allowDuplicateEvents) && (this.counter++, function(e) {
                        var t = {
                            saved_payment_available: e.savedPaymentAvailable,
                            saved_payment_displayed: e.savedPaymentDisplayed
                        };
                        i.o.track(r.SpadeEventType.PaymentFormDisplay, t)
                    }(this.store))
                }, e
            }();
            ! function(e) {
                e.Failed = "failed", e.Pending = "pending", e.Success = "success"
            }(a || (a = {})),
            function(e) {
                e.MysteryGifting = "mystery_gifting", e.Gifting = "gifting", e.Personal = "personal"
            }(s || (s = {})),
            function(e) {
                e.RecurlyCreditCard = "recurly_credit_card", e.RecurlyPaypal = "recurly_paypal", e.RecurlyPayWithAmazon = "recurly_pay_with_amazon", e.ZuoraCreditCard = "zuora_credit_card", e.Xsolla = "xsolla"
            }(l || (l = {})),
            function(e) {
                e.VendorLoginClick = "vendor_login_click", e.CompletePurchaseClick = "complete_purchase_click", e.PaypalTokenError = "paypal_token_error", e.RadioButtonClick = "radio_button_click", e.TokenError = "token_error", e.PriceChangeAlert = "price_change_alert", e.UnsupportedCountryAlert = "unsupported_country_alert"
            }(c || (c = {})),
            function(e) {
                e.ChannelSubscribeButton = "channel_subscribe_button_click", e.Direct = "direct_url_link", e.EmotePicker = "emote_picker_click", e.Extension = "extension_click", e.TurboSubscribeButton = "turbo_subscribe_button_click", e.ViewerCard = "viewer_card_click"
            }(d || (d = {}))
        },
        L7EG: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoShareBox_TrackingVideoContext"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "roles"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isPartner"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "game"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 156
                }
            };
            n.loc.source = {
                body: "query VideoShareBox_TrackingVideoContext($videoID: ID!) {\nvideo(id: $videoID) {\nid\nbroadcastType\nowner {\nid\nlogin\nroles {\nisPartner\n}\n}\ngame {\nid\nname\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Lmqf: function(e, t, n) {
            e.exports = n.p + "assets/upsell-center-dark-6c092df86238db84cff1.png"
        },
        MJbm: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = (n("efEE"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.logger = o.p.logger.withCategory("resize-detector"), t.onScroll = function() {
                            var e = t.container,
                                n = e.offsetWidth,
                                i = e.offsetHeight,
                                r = e.offsetLeft,
                                o = e.offsetTop;
                            t.logger.debug("Resize Detector -- onScroll"), n === t.width && i === t.height && o === t.top && r === t.left || (t.width = n, t.height = i, t.props.onResize(n, i, o, r)), t.reset()
                        }, t.setGrowDivRef = function(e) {
                            return t.growDiv = e
                        }, t.setGrowChildDivRef = function(e) {
                            return t.growChildDiv = e
                        }, t.setShrinkDivRef = function(e) {
                            return t.shrinkDiv = e
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement("div", {
                            className: "resize-detector"
                        }, r.createElement("div", {
                            className: "resize-detector",
                            ref: this.setGrowDivRef
                        }, r.createElement("div", {
                            className: "resize-detector__grow",
                            ref: this.setGrowChildDivRef
                        })), r.createElement("div", {
                            className: "resize-detector",
                            ref: this.setShrinkDivRef
                        }, r.createElement("div", {
                            className: "resize-detector__shrink"
                        })))
                    }, t.prototype.componentDidMount = function() {
                        if (this.growDiv) {
                            this.growDiv.parentElement || this.logger.warn("growDiv.parentElement is undefined!"), this.container = this.growDiv.parentElement.parentElement;
                            var e = this.container.style.position;
                            if ("relative" !== e && "absolute" !== e && "fixed" !== e) {
                                var t = window.getComputedStyle(this.container);
                                t && "static" === t.getPropertyValue("position") && (this.container.style.position = "relative")
                            }
                            this.onScroll(), this.growDiv.addEventListener("scroll", this.onScroll), this.shrinkDiv.addEventListener("scroll", this.onScroll)
                        } else this.logger.warn("growDiv is undefined!")
                    }, t.prototype.componentWillUnmount = function() {
                        this.growDiv.removeEventListener("scroll", this.onScroll), this.shrinkDiv.removeEventListener("scroll", this.onScroll)
                    }, t.prototype.reset = function() {
                        var e = this.growDiv,
                            t = this.shrinkDiv,
                            n = this.growChildDiv.style;
                        n.width = "100000px", n.height = "100000px", e.scrollLeft = 1e5, e.scrollTop = 1e5, t.scrollLeft = 1e5, t.scrollTop = 1e5
                    }, t
                }(r.Component));
            n.d(t, "a", function() {
                return a
            })
        },
        MPK0: function(e, t, n) {},
        Mj6i: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("yR8l"),
                a = n("0FG4"),
                s = n("D7An"),
                l = n("S4w9");

            function c() {
                return Object(o.a)(l, {
                    options: function(e) {
                        return {
                            variables: {
                                withOwner: "on" === r.p.experiments.getAssignment(s.b.EmotePickerV2)
                            }
                        }
                    },
                    props: function(e) {
                        if (e.data) {
                            var t = e.data.currentUser && e.data.currentUser.emoteSets || [],
                                n = t && Object(a.b)(t);
                            return {
                                emoteSetsData: i.__assign({}, e.data, {
                                    currentUser: e.data.currentUser || null,
                                    emoteMap: n,
                                    emoteSets: t
                                })
                            }
                        }
                        return {}
                    },
                    skip: function(e) {
                        return !e.isLoggedIn
                    }
                })
            }
        },
        "N+yD": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "PopularVideosCarousel_Videos"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "videos"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "first"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "30"
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "edges"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "node"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "FragmentSpread",
                                                    name: {
                                                        kind: "Name",
                                                        value: "PreviewCardVideo"
                                                    },
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 185
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery PopularVideosCarousel_Videos {\nvideos(first: 30) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        Nimz: function(e, t, n) {},
        OpME: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return c
            }), n.d(t, "e", function() {
                return d
            }), n.d(t, "c", function() {
                return p
            }), n.d(t, "a", function() {
                return m
            }), n.d(t, "f", function() {
                return h
            }), n.d(t, "d", function() {
                return f
            });
            var i = n("mrSG"),
                r = n("lZdE"),
                o = n("cpJf"),
                a = {
                    "B-?\\)": "B)",
                    "\\:-?[z|Z|\\|]": ":|",
                    "\\:-?\\)": ":)",
                    "\\:-?\\(": ":(",
                    "\\:-?(p|P)": ":P",
                    "\\;-?(p|P)": ";P",
                    "\\:-?[\\\\/]": ":/",
                    "\\;-?\\)": ";)",
                    "R-?\\)": "R)",
                    ":>": ":>",
                    "\\:\\&gt\\;": ":>",
                    "[oO](_|\\.)[oO]": "O_o",
                    "\\:-?D": ":D",
                    "\\:-?(o|O)": ":O",
                    ">\\\\(": ">(",
                    ":-?(?:7|L)": ":7",
                    "\\:-?(S|s)": ":S",
                    "#-?[\\\\/]": "#/",
                    "<\\]": "<]",
                    "<3": "<3",
                    "\\&lt\\;3": "<3",
                    "\\&lt\\;\\]": "<]",
                    "\\&gt\\;\\(": ">("
                },
                s = ["1.0", "2.0", "3.0"],
                l = new Set([457, 33, 42, 0]);

            function c(e) {
                for (var t = [], n = function(e) {
                        if (!e || !e.id || !e.token) return "continue";
                        var n = a[e.token] || e.token,
                            r = s.reduce(function(t, n) {
                                var i = t;
                                return i && (i = i.concat(", ")), i.concat("https://static-cdn.jtvnw.net/emoticons/v1/" + e.id + "/" + n + " " + n + "x")
                            }, "");
                        t.push(i.__assign({
                            displayName: n,
                            srcSet: r
                        }, e))
                    }, r = 0, o = e; r < o.length; r++) {
                    n(o[r])
                }
                return t
            }

            function d(e, t) {
                var n = c(e);
                return t && (n = function(e, t) {
                    return e.map(function(e) {
                        return i.__assign({}, e, {
                            setID: t
                        })
                    })
                }(n, t)), n
            }

            function u(e) {
                return e.filter(function(e) {
                    return !!e && !!e.id && !!e.token
                }).sort(function(e, t) {
                    return parseInt(e.id, 10) - parseInt(t.id, 10)
                })
            }

            function p(e) {
                for (var t = [], n = 0, i = e; n < i.length; n++) {
                    var r = i[n];
                    if (r && r.id && r.emotes) {
                        for (var o = {
                                id: r.id,
                                emotes: []
                            }, a = 0, s = r.emotes; a < s.length; a++) {
                            var l = s[a];
                            l && l.id && l.token && o.emotes.push(l)
                        }
                        t.push(o)
                    }
                }
                return t
            }

            function m(e) {
                for (var t = [], n = [], i = 0, r = e; i < r.length; i++) {
                    var o = r[i];
                    if (o && o.id && o.emotes) {
                        var a = {
                            id: o.id,
                            emotes: d(u(o.emotes), o.id)
                        };
                        o.owner && (a.owner = o.owner), l.has(parseInt(o.id, 10)) ? t.push(a) : n.push(a)
                    }
                }
                return n.concat(t)
            }
            var h = function(e, t, n) {
                    var i = n || o.d,
                        a = [],
                        s = [],
                        l = [],
                        c = new RegExp("^" + Object(r.a)(t), "i");
                    return e.forEach(function(e) {
                        i[e.token] ? l.push(e) : e.token.match(c) ? a.push(e) : s.push(e)
                    }), a.sort(function(e, t) {
                        return e.token < t.token ? -1 : e.token > t.token ? 1 : 0
                    }), s.sort(function(e, t) {
                        return e.token < t.token ? -1 : e.token > t.token ? 1 : 0
                    }), l.sort(function(e, t) {
                        return i[t.token].count - i[e.token].count
                    }), l.concat(a).concat(s)
                },
                f = function(e) {
                    var t = {};
                    return e.filter(function(e) {
                        return !t.hasOwnProperty(e.token) && (t[e.token] = !0)
                    })
                }
        },
        Oy4H: function(e, t, n) {},
        PMgN: function(e, t, n) {},
        QjI3: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/MKj"),
                a = n("fvjX"),
                s = n("ZS2+"),
                l = n("UUve"),
                c = n("1/iK"),
                d = n("aCAx"),
                u = n("kRBY"),
                p = n("GnwI"),
                m = n("oJmH"),
                h = n("/7QA"),
                f = n("2+sX"),
                g = n("u5aL"),
                v = n("eJ65"),
                b = n("yR8l"),
                k = n("x7UT"),
                y = n("3Bft"),
                C = n("tIid"),
                S = n("ht6z"),
                E = n("/aPz"),
                _ = n("KriR"),
                w = n("D7An"),
                O = n("4rCz");
            var T, D = n("br9A"),
                N = n("Ue10"),
                I = (n("a7aT"), n("z+dA"));
            ! function(e) {
                e.SubButton = "subscribe-button__dropdown", e.BalloonLayerButton = "subscribe-button__balloon-layer-btn", e.DefaultButton = "subscribe-button__default-btn", e.SubscribeBalloon = "subscribe-button__subscribe-balloon"
            }(T || (T = {}));
            var x = s.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(200)]).then(n.bind(null, "f+qK"))
                }, "SubscribeBalloon"),
                R = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            inPrimeRegion: !1
                        }, t.modalLevel = "top_page", t.renderBalloonContentForBalloonLayer = function() {
                            return r.createElement(g.a, {
                                onClickOut: t.handleBalloonClickOut
                            }, r.createElement(N.Xa, {
                                "data-a-target": "sub-balloon",
                                refDelegate: t.setBalloonContentRefDelegate
                            }, t.balloonWrapperContent))
                        }, t.handleButtonClick = function() {
                            t.balloonContentRef || (t.props.balloonLayer.show({
                                direction: t.getBalloonDirection(),
                                ref: t.containerRef,
                                content: t.renderBalloonContentForBalloonLayer(),
                                contentHeight: 0,
                                closeOnScroll: !0
                            }), t.handleMenuToggle(!1))
                        }, t.handleBalloonClickOut = function() {
                            t.handleMenuToggle(!0), t.props.balloonLayer.hide({
                                force: !0
                            })
                        }, t.setBalloonWrapperContent = function(e) {
                            t.balloonWrapperContent = e
                        }, t.handleSubMenuAction = function(e) {
                            new Set([D.a.ClickCheckout, D.a.BuyGiftSub, D.a.BuyMysteryGift, D.a.BuyCustomMysteryGift, D.a.BuyGiftToPaidUpgrade, D.a.BuyPaidUpgrade]).has(e.action) && t.checkAndDisplaySubscriptionCheckout();
                            var n = t.props.data,
                                i = n.user,
                                r = !!(i && i.self && i.self.subscriptionBenefit),
                                o = n.requestInfo && Object(S.a)(n.requestInfo.countryCode);
                            Object(D.b)({
                                action: e.action || "",
                                channelLogin: t.props.channelLogin || "",
                                channelID: i && i.id || "",
                                checkoutButtonTier: e.checkoutButtonTier,
                                hasSubCredit: i && i.self && i.self.canPrimeSubscribe,
                                hostChannelID: t.props.hostChannelID,
                                hostChannelLogin: t.props.hostChannelLogin,
                                isMenuOpen: e.action !== D.a.OpenSubMenu,
                                mysteryGiftCount: e.mysteryGiftCount,
                                sub_location: "channel_page",
                                modal: !r,
                                modalLevel: r ? "" : t.modalLevel.slice(),
                                showPrimeContent: o,
                                giftRecipient: e.giftRecipient || null
                            }), !e.modalLevel || e.action !== D.a.ClickMoreSubOptions && e.action !== D.a.ClickBack || (t.modalLevel = e.modalLevel)
                        }, t.handleMenuToggle = function(e) {
                            t.handleSubMenuAction({
                                action: e ? D.a.CloseSubMenu : D.a.OpenSubMenu
                            })
                        }, t.getBalloonDirection = function() {
                            var e = t.props.balloonDirection || N.v.BottomRight;
                            return t.props.hostChannelID && (e = N.v.TopLeft), e
                        }, t.setContainerRefDelegate = function(e) {
                            t.containerRef = e
                        }, t.setBalloonContentRefDelegate = function(e) {
                            t.balloonContentRef = e
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.reportInteractive && this.isUserDataReady(this.props) && this.props.reportInteractive(), this.checkAndDisplaySubscriptionCheckout()
                    }, t.prototype.componentDidUpdate = function(e) {
                        this.props.channelLogin && !this.isUserDataReady(this.props) || !this.props.updateContainerWidth || this.props.updateContainerWidth(), this.props.reportInteractive && this.props.data && !this.props.data.loading && this.props.reportInteractive(), !this.isUserDataReady(e) && this.isUserDataReady(this.props) && this.checkAndDisplaySubscriptionCheckout()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.isUserDataReady(e) && e.pubsub.messages.subscriptionInfo !== this.props.pubsub.messages.subscriptionInfo && this.props.data.refetch()
                    }, t.prototype.componentWillUnmount = function() {
                        Object(l.e)()
                    }, t.prototype.render = function() {
                        var e = this.props.data;
                        if (!e || e.loading || e.error) return null;
                        var t = e.user;
                        if (!t) return null;
                        var n = t.self,
                            i = t.subscriptionProducts;
                        if (!i) return null;
                        var o = i.filter(function(e) {
                            return e
                        });
                        if (0 === o.length) return null;
                        if (this.props.hideEsportsSubscription && Object(C.a)(t.id || "", this.props.sessionUser)) return null;
                        var a = e.requestInfo && Object(S.a)(e.requestInfo.countryCode),
                            s = !(!n || !n.subscriptionBenefit),
                            l = Object(C.a)(t.id || "", this.props.sessionUser),
                            c = 1 === o.length;
                        o.some(function(e) {
                            return !e.emoteSetID
                        }) && (c = !0);
                        var d = null;
                        n && n.subscriptionBenefit && (d = n.subscriptionBenefit.purchasedWithPrime ? y.a.Prime : n.subscriptionBenefit.tier, this.modalLevel = "");
                        var u = function(e) {
                            if (e.isSubscribed) {
                                if (e.hasInsiderPass) return Object(O.d)("All-Access Pass", "SubscribeButton");
                                if (e.isNonStandardSub) return Object(O.d)("Subscribed", "SubscribeButton");
                                if (e.hostedDisplayName) return Object(O.d)("Subscribed to {username}", {
                                    username: e.hostedDisplayName
                                }, "SubscribeButton");
                                if ("control" !== O.q.experiments.getAssignment(w.b.SubsReanimator) && e.benefitIsDNRd && e.benefitEndsAt) {
                                    var t = new Date(e.benefitEndsAt),
                                        n = Math.round((t.getTime() - Date.now()) / 864e5);
                                    if (n <= 15 && n > 7) return Object(O.d)("Continue Sub", "SubscribeButton");
                                    if (n <= 7) return Object(O.d)("Continue Sub - {daysRemaining} Days Remaining", {
                                        daysRemaining: n
                                    }, "SubscribeButton")
                                }
                                return Object(O.d)("Gift A Sub", "SubscribeButton")
                            }
                            return e.hasInsiderPass ? Object(O.d)("Get the All-Access Pass", "SubscribeButton") : e.hostedDisplayName ? Object(O.d)("Subscribe to {username}", {
                                username: e.hostedDisplayName
                            }, "SubscribeButton") : Object(O.d)("Subscribe", "SubscribeButton")
                        }({
                            isSubscribed: s,
                            isNonStandardSub: c,
                            hasInsiderPass: l,
                            benefitIsDNRd: !(!n || !n.subscriptionBenefit) && n.subscriptionBenefit.isDNRd,
                            benefitEndsAt: n && n.subscriptionBenefit && n.subscriptionBenefit.endsAt,
                            hostedDisplayName: this.props.hostChannelID ? t.displayName || "" : void 0
                        });
                        if (s && c && !l) return r.createElement(N.z, {
                            disabled: !0,
                            ariaLabel: u,
                            icon: N.tb.Star
                        }, u);
                        var p = r.createElement(N.z, {
                                ariaLabel: u,
                                "data-a-target": s ? "subscribed-button" : "subscribe-button",
                                "data-test-selector": T.SubButton,
                                dropdown: !this.props.hideDropdownArrow,
                                fullWidth: !0,
                                icon: this.getButtonIcon(s, d),
                                onClick: this.props.renderBalloonInBalloonLayer ? this.handleButtonClick : void 0,
                                type: this.getButtonType(s)
                            }, u),
                            m = o[0];
                        return this.setBalloonWrapperContent(r.createElement(x, {
                            authToken: this.props.authToken,
                            channelLogin: this.props.channelLogin || "",
                            "data-test-selector": T.SubscribeBalloon,
                            handleSubMenuAction: this.handleSubMenuAction,
                            inPrimeRegion: a,
                            isEsportChannel: l,
                            isNonStandardSub: c,
                            isStaff: !(!this.props.sessionUser || !this.props.sessionUser.roles) && this.props.sessionUser.roles.isStaff,
                            isSubscribed: s,
                            productId: m ? m.id : "",
                            subbedTier: d || y.a.Prime,
                            userHasPrime: !1
                        })), this.props.renderBalloonInBalloonLayer ? r.createElement(N.Xa, {
                            "data-test-selector": T.BalloonLayerButton,
                            refDelegate: this.setContainerRefDelegate
                        }, p) : r.createElement(N.Xa, null, r.createElement(v.a, {
                            "data-test-selector": T.DefaultButton,
                            onToggle: this.handleMenuToggle
                        }, p, r.createElement(N.u, {
                            "data-a-target": "sub-balloon",
                            direction: this.getBalloonDirection(),
                            size: N.w.Large
                        }, this.balloonWrapperContent)))
                    }, t.prototype.getButtonType = function(e) {
                        N.F.Default;
                        return e && void 0 !== this.props.subscribedButtonType ? this.props.subscribedButtonType : e ? N.F.Success : this.props.unsubscribedButtonType || N.F.Default
                    }, t.prototype.getButtonIcon = function(e, t) {
                        var n = void 0;
                        return e ? n = t === y.a.Prime ? N.tb.Crown : N.tb.Star : this.props.forceIcon && (n = N.tb.StarHollow), n
                    }, t.prototype.isUserDataReady = function(e) {
                        return e.data && e.data.user && !e.data.loading && !e.data.error
                    }, t.prototype.checkAndDisplaySubscriptionCheckout = function() {
                        var e = h.n.get(l.c, "");
                        if (e) {
                            var t = this.props.data.user;
                            if (t && t.subscriptionProducts) t.subscriptionProducts.filter(function(e) {
                                return e
                            }).map(function(e) {
                                return e.name
                            }).includes(e) ? this.props.sessionUser ? this.props.showSubscriptionCheckoutModal({
                                isAnonymous: h.n.get(l.a, !1),
                                mysteryGiftCount: Number(h.n.get(l.b, "")),
                                productName: e,
                                recipientLogin: h.n.get(l.d, ""),
                                trackingContext: {
                                    source: _.c.ChannelSubscribeButton
                                }
                            }) : this.props.showLoginModal() : Object(l.e)()
                        }
                    }, t
                }(r.Component),
                j = Object(m.compose)(Object(b.a)(I, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(k.a)([{
                    topic: function(e) {
                        return Object(E.H)(e.data.currentUser && e.data.currentUser.id || "")
                    },
                    mapMessageTypesToProps: {
                        "*": "subscriptionInfo"
                    },
                    skip: function(e) {
                        return !(e.data && !e.data.loading && !e.data.error && e.data.currentUser)
                    }
                }]), Object(f.e)())(R),
                M = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.reportInteractive = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(j, {
                            authToken: this.props.authToken,
                            balloonDirection: this.props.balloonDirection,
                            channelLogin: this.props.channelLogin,
                            forceIcon: this.props.forceIcon,
                            hideEsportsSubscription: this.props.hideEsportsSubscription,
                            hideDropdownArrow: this.props.hideDropdownArrow,
                            hostChannelID: this.props.hostChannelID,
                            hostChannelLogin: this.props.hostChannelLogin,
                            renderBalloonInBalloonLayer: this.props.renderBalloonInBalloonLayer,
                            reportInteractive: this.reportInteractive,
                            sessionUser: this.props.sessionUser,
                            showLoginModal: this.props.showLoginModal,
                            showSubscriptionCheckoutModal: this.props.showSubscriptionCheckoutModal,
                            subscribedButtonType: this.props.subscribedButtonType,
                            unsubscribedButtonType: this.props.unsubscribedButtonType,
                            updateContainerWidth: this.props.updateContainerWidth
                        })
                    }, t = i.__decorate([Object(p.b)("SubscribeButton")], t)
                }(r.Component);
            var F = Object(o.connect)(function(e) {
                return {
                    authToken: Object(u.a)(e),
                    sessionUser: Object(u.e)(e)
                }
            }, function(e) {
                return Object(a.bindActionCreators)({
                    showLoginModal: Object(l.f)(c.a.ChannelSubscriptionButton),
                    showSubscriptionCheckoutModal: function(e) {
                        var t = i.__rest(e, []);
                        return Object(d.d)(s.a, {
                            component: "CheckoutModal",
                            loader: function() {
                                return Promise.all([n.e(0), n.e(212)]).then(n.bind(null, "KJv/"))
                            },
                            componentProps: t
                        })
                    }
                }, e)
            })(M);
            n.d(t, !1, function() {
                return M
            }), n.d(t, "a", function() {
                return F
            }), n.d(t, !1, function() {
                return T
            }), n.d(t, !1, function() {
                return R
            }), n.d(t, !1, function() {
                return j
            })
        },
        R4sh: function(e, t, n) {
            "use strict";

            function i(e) {
                var t = [e[0], e[1], e[2]].map(function(e) {
                    return (e /= 255) <= .03928 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)
                });
                return .2126 * t[0] + .7152 * t[1] + .0722 * t[2]
            }

            function r(e, t) {
                var n = i(e) + .05,
                    r = i(t) + .05;
                return n > r ? n / r : r / n
            }
            n.d(t, "a", function() {
                return r
            })
        },
        RNNG: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return s
            }), n.d(t, "f", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            }), n.d(t, "d", function() {
                return d
            }), n.d(t, "e", function() {
                return u
            }), n.d(t, "a", function() {
                return p
            });
            var i = n("mrSG"),
                r = n("DpwM"),
                o = Number.MAX_VALUE,
                a = Number.MIN_VALUE,
                s = function(e) {
                    return i.__assign({
                        commentCount: 0,
                        maxOffset: a,
                        minOffset: o,
                        parentComments: {},
                        offsets: {},
                        replies: {}
                    }, e)
                },
                l = function(e, t) {
                    var n = h(e);
                    return t.forEach(function(e) {
                        var t, r = e.id,
                            o = e.contentOffset,
                            a = e.parentId;
                        if ("" === a) {
                            n.minOffset = Math.min(n.minOffset, o), n.maxOffset = Math.max(n.maxOffset, o), n.parentComments = i.__assign({}, n.parentComments, ((t = {})[r] = e, t));
                            var s = n.offsets[o];
                            Array.isArray(s) ? s.includes(r) || (n.offsets[o] = s.concat(r), n.commentCount++) : (n.offsets[o] = [r], n.commentCount++)
                        } else {
                            var l = n.replies[a];
                            if (Array.isArray(l)) {
                                var c = l.findIndex(function(t) {
                                    return t.id === e.id
                                }); - 1 !== c ? l[c] = e : (n.replies[a] = l.concat(e), n.commentCount++)
                            } else n.replies[a] = [e], n.commentCount++
                        }
                    }), n
                },
                c = function(e, t) {
                    if (t in e.parentComments) return e.parentComments[t]
                },
                d = function(e, t) {
                    var n = h(e);
                    return Object(r.h)(t) ? v(n, t.parentId, t.id) : g(n, t.id)
                },
                u = function(e, t) {
                    if (e.commentCount < t || m(e)) return e;
                    for (var n = e; n.commentCount > t && !m(e);) n = b(n, n.minOffset);
                    return n
                },
                p = function(e, t) {
                    var n = h(e);
                    return Object.keys(e.parentComments).forEach(function(i) {
                        var r = e.parentComments[i];
                        t(r) || (n = g(n, r.id))
                    }), Object.keys(e.replies).forEach(function(i) {
                        e.replies[i].forEach(function(e) {
                            t(e) || (n = v(n, e.id, e.parentId))
                        })
                    }), n
                },
                m = function(e) {
                    return e.minOffset === e.maxOffset
                },
                h = function(e) {
                    return {
                        commentCount: e.commentCount,
                        maxOffset: e.maxOffset,
                        minOffset: e.minOffset,
                        offsets: f(e.offsets),
                        parentComments: i.__assign({}, e.parentComments),
                        replies: i.__assign({}, e.replies)
                    }
                },
                f = function(e) {
                    return Object.keys(e).reduce(function(t, n) {
                        return t[Number(n)] = e[Number(n)].slice(), t
                    }, {})
                },
                g = function(e, t) {
                    if (!(t in e.parentComments)) return e;
                    var n = e.parentComments[t].contentOffset,
                        i = e.offsets[n],
                        r = [];
                    if (i && (r = i.filter(function(e) {
                            return e !== t
                        })), e.offsets[n] = r, delete e.parentComments[t], e.commentCount--, t in e.replies) {
                        var o = e.replies[t].length;
                        delete e.replies[t], e.commentCount -= o
                    }
                    return e
                },
                v = function(e, t, n) {
                    if (!(t in e.replies)) return e;
                    var i = e.replies[t].length,
                        r = e.replies[t].filter(function(e) {
                            if (e.id !== n) return e
                        });
                    e.replies[t] = r, 0 === r.length && delete e.replies[t];
                    var o = i - r.length;
                    return e.commentCount -= o, e
                },
                b = function(e, t) {
                    return t >= e.minOffset && t <= e.maxOffset && !m(e) ? (t in e.offsets && e.offsets[t].forEach(function(t) {
                        e = g(e, t)
                    }), delete e.offsets[t], e.maxOffset === t ? e.maxOffset-- : e.minOffset === t && e.minOffset++, e) : e
                }
        },
        RQ6e: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                o = n("q1tI"),
                a = n("/7QA"),
                s = n("fvjX"),
                l = n("yR8l"),
                c = n("GnwI");
            var d = n("Ue10"),
                u = n("gIsd"),
                p = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleChange = function(e) {
                            t.props.onChange && t.props.onChange(e.target.value)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = null,
                            t = Object(a.d)("Select One...", "ReportUserModal");
                        this.props.data.loading ? e = [o.createElement("option", {
                            key: "Loading"
                        }, Object(a.d)("Loading...", "ReportReasonsSelect"))] : e = (this.props.data.reportReasons || [{
                            id: "other",
                            text: Object(a.d)("Other Terms of Service Violation", "ReportUserModal")
                        }]).map(function(e) {
                            return o.createElement("option", {
                                key: e.id,
                                value: e.id
                            }, e.text)
                        });
                        return o.createElement(d.Xa, {
                            margin: {
                                bottom: 2
                            }
                        }, o.createElement(d.Ea, {
                            id: "reporting-modal__select",
                            label: Object(a.d)("Select Reason (required)", "ReportUserModal")
                        }, o.createElement(d.zb, {
                            id: "reporting-modal__select",
                            "data-test-selector": "reporting-modal.select",
                            disabled: this.props.data.loading || !!this.props.data.error,
                            onChange: this.handleChange,
                            defaultValue: t
                        }, o.createElement("option", {
                            disabled: !0,
                            key: "default"
                        }, t), e)))
                    }, t
                }(o.Component),
                m = Object(s.compose)(Object(l.a)(u, {
                    options: function(e) {
                        return {
                            variables: {
                                content: e.reportContentType
                            }
                        }
                    }
                }), Object(c.b)("ReportReasonSelect"))(p);
            n("y4Ne");
            n.d(t, "a", function() {
                return h
            }), n.d(t, "b", function() {
                return f
            });
            var h;
            ! function(e) {
                e[e.Unsubmitted = 0] = "Unsubmitted", e[e.Success = 1] = "Success", e[e.FormError = 2] = "FormError", e[e.MutationError = 3] = "MutationError", e[e.UserError = 4] = "UserError"
            }(h || (h = {}));
            var f = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        description: "",
                        reason: null
                    }, t.headerMessage = Object(a.d)("Tell us your concern about this content so that we can review it to determine whether there has been a violation of the {tosLink}. {br} (Abuse of this feature is a violation of the terms of service)", {
                        br: o.createElement("br", null),
                        tosLink: o.createElement("a", {
                            href: "https://www.twitch.tv/p/terms-of-service",
                            target: "_blank"
                        }, Object(a.d)("terms of service", "ReportUser"))
                    }, "ReportUser"), t.handleSubmit = function(e) {
                        e.preventDefault(), t.state.reason && t.state.description.length > 0 ? t.props.onSubmit(t.state.reason || "", t.state.description) : t.props.onError(h.FormError)
                    }, t.handleTextAreaChange = function(e) {
                        t.setState({
                            description: e.target.value
                        })
                    }, t.handleReasonChange = function(e) {
                        t.setState({
                            reason: e
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    return o.createElement(d.Xa, {
                        display: d.X.Flex,
                        flexDirection: d.Aa.Column,
                        alignItems: d.f.Center,
                        justifyContent: d.Wa.Center
                    }, this.renderStatusMessage(), this.renderBody())
                }, t.prototype.renderBody = function() {
                    return this.props.submitStatus === h.Success ? o.createElement("div", null, o.createElement(d.z, {
                        onClick: this.props.onClose
                    }, o.createElement(d.Xa, {
                        padding: {
                            x: 2
                        }
                    }, Object(a.d)("Close", "ReportUser")))) : o.createElement("div", null, o.createElement(d.Xa, {
                        "data-test-selector": "reporting.title",
                        margin: {
                            bottom: 1
                        },
                        "data-a-target": "reporting-channel-name"
                    }, o.createElement(d.W, {
                        type: d.Vb.H4
                    }, this.props.title), o.createElement(d.Eb, {
                        color: d.O.Alt2,
                        margin: {
                            top: 1
                        }
                    }, this.headerMessage)), o.createElement("form", null, o.createElement(d.Eb, {
                        borderTop: !0,
                        borderBottom: !0,
                        margin: {
                            y: 2
                        },
                        padding: {
                            y: 2
                        }
                    }, o.createElement(m, {
                        reportContentType: this.props.reportContentType,
                        onChange: this.handleReasonChange
                    }), o.createElement(d.Ea, {
                        id: "reporting__text-area",
                        label: Object(a.d)("Description (required)", "ReportUser")
                    }, o.createElement(d.Sb, {
                        defaultValue: this.props.defaultDescription,
                        onChange: this.handleTextAreaChange
                    }))), o.createElement(d.Eb, {
                        display: d.X.Flex,
                        justifyContent: d.Wa.Center
                    }, o.createElement(d.z, {
                        onClick: this.handleSubmit
                    }, o.createElement(d.Xa, {
                        padding: {
                            x: 2
                        }
                    }, Object(a.d)("Send", "ReportUser"))))))
                }, t.prototype.renderStatusMessage = function() {
                    var e = null;
                    switch (this.props.submitStatus) {
                        case h.FormError:
                            e = Object(a.d)("Reason and Description are required.", "ReportUser");
                            break;
                        case h.MutationError:
                            e = Object(a.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "ReportUser");
                            break;
                        case h.Success:
                            e = Object(a.d)("Thank you for your report.", "ReportUser");
                            break;
                        case h.UserError:
                            e = Object(a.d)("This account could not be reported. It may have already been suspended, or the owner may have deleted it.", "ReportUser");
                            break;
                        default:
                            return null
                    }
                    var t = r({
                        "reporting__error-container": this.props.submitStatus !== h.Success,
                        "reporting__success-container": this.props.submitStatus === h.Success
                    });
                    return o.createElement(d.Eb, {
                        className: t,
                        fullWidth: this.props.submitStatus !== h.Success,
                        "data-test-selector": "reporting.error",
                        margin: {
                            bottom: 2
                        },
                        padding: 1
                    }, e)
                }, t
            }(o.Component)
        },
        RXle: function(e, t, n) {
            "use strict";
            var i = n("86FS");
            n.d(t, "VideoPreviewCard", function() {
                return i.a
            });
            n("0T/G");
            var r = n("0Rl0");
            n.d(t, "VideoPreviewCardPlaceholder", function() {
                return r.a
            })
        },
        RuiO: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Core_Services_Spade_SubEvent_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "withVideo"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "withVideo"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 266
                }
            };
            n.loc.source = {
                body: "query Core_Services_Spade_SubEvent_User($channelID: ID! $withVideo: Boolean! $videoID: ID) {\nuser(id: $channelID) {\nid\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\ntier\npurchasedWithPrime\n}\n}\n}\nvideo(id: $videoID) @include(if: $withVideo) {\nid\nbroadcastType\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        S4w9: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "UserEmotes"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "withOwner"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "emoteSets"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "owner"
                                            },
                                            arguments: [],
                                            directives: [{
                                                kind: "Directive",
                                                name: {
                                                    kind: "Name",
                                                    value: "include"
                                                },
                                                arguments: [{
                                                    kind: "Argument",
                                                    name: {
                                                        kind: "Name",
                                                        value: "if"
                                                    },
                                                    value: {
                                                        kind: "Variable",
                                                        name: {
                                                            kind: "Name",
                                                            value: "withOwner"
                                                        }
                                                    }
                                                }]
                                            }],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "login"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "profileImageURL"
                                                    },
                                                    arguments: [{
                                                        kind: "Argument",
                                                        name: {
                                                            kind: "Name",
                                                            value: "width"
                                                        },
                                                        value: {
                                                            kind: "IntValue",
                                                            value: "28"
                                                        }
                                                    }],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 182
                }
            };
            n.loc.source = {
                body: "query UserEmotes ($withOwner: Boolean!) {\ncurrentUser {\nid\nemoteSets {\nid\nemotes {\nid\ntoken\n}\nowner @include(if: $withOwner) {\nid\nlogin\ndisplayName\nprofileImageURL(width: 28)\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        SWMh: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("mrSG"),
                r = n("b6Yk"),
                o = function(e, t, n) {
                    return i.__awaiter(void 0, void 0, Promise, function() {
                        var o, a;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    o = null, i.label = 1;
                                case 1:
                                    return i.trys.push([1, 3, , 4]), [4, r.a.get("/v5/videos/" + e + "/markers")];
                                case 2:
                                    return (a = i.sent()).body && a.body.markers.game_changes && (o = a.body.markers.game_changes.sort(function(e, t) {
                                        return e.time - t.time
                                    }).map(function(e, n, i) {
                                        var r = i[n + 1];
                                        return {
                                            duration: r ? r.time - e.time : t - e.time,
                                            offset: e.time,
                                            label: e.label,
                                            thumbnailUrl: e.thumbnail.sheet_url,
                                            videoID: a.body.vod_id
                                        }
                                    }), n && n.boxArtURL && o.unshift({
                                        duration: o[0].offset,
                                        videoID: e,
                                        offset: 0,
                                        label: n.name,
                                        thumbnailUrl: n.boxArtURL
                                    })), [3, 4];
                                case 3:
                                    return i.sent(), [3, 4];
                                case 4:
                                    return [2, o || []]
                            }
                        })
                    })
                }
        },
        SceP: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ClipsChatCard_Clip"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "slug"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "clip"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "slug"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "thumbnailURL"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "slug"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "url"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "curator"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcaster"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 151
                }
            };
            n.loc.source = {
                body: "query ClipsChatCard_Clip($slug: ID!) {\nclip(slug: $slug) {\nid\nthumbnailURL\ntitle\nslug\nurl\ncurator {\nid\ndisplayName\n}\nbroadcaster {\nid\ndisplayName\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Sfdh: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("4rCz");

            function r() {
                return {
                    messageCreatedTooQuickError: Object(i.d)("Your message was not sent because you are sending messages too quickly.", "format-error-messages"),
                    chatReplayFilterError: Object(i.d)("Your message has been posted. However, other messages posted after the live stream are hidden.", "format-error-messages")
                }
            }
        },
        "TQ+e": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "RecentCreatorVideos_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "creatorID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "creatorID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "videos"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "30"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "sort"
                                        },
                                        value: {
                                            kind: "EnumValue",
                                            value: "TIME"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "FragmentSpread",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PreviewCardVideo"
                                                            },
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 242
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery RecentCreatorVideos_User($creatorID: ID) {\nuser(id: $creatorID) {\nid\nlogin\nvideos(first: 30 sort: TIME) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        Tqc9: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return a
            });
            var i = "@",
                r = "Enter",
                o = "Escape",
                a = " "
        },
        UJc8: function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "b", function() {
                    return r
                }), n.d(t, "a", function() {
                    return o
                }),
                function(e) {
                    e.Everyone = "EVERYONE", e.Moderator = "MODERATOR", e.Subscriber = "SUBSCRIBER"
                }(r || (r = {}));
            var o = ((i = {})[r.Everyone] = "Everyone", i[r.Moderator] = "Mods", i[r.Subscriber] = "Subs", i)
        },
        UUve: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return a
            }), n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "e", function() {
                return d
            }), n.d(t, "f", function() {
                return u
            });
            var i = n("/7QA"),
                r = n("y5D0"),
                o = "SUB_CHECKOUT__PRODUCT",
                a = "SUB_CHECKOUT__RECIPIENT",
                s = "SUB_CHECKOUT__MYSTERY_GIFT_COUNT",
                l = "SUB_CHECKOUT__GIFTING_ANONYMOUSLY",
                c = [o, a, s, l];

            function d() {
                c.forEach(function(e) {
                    return i.n.remove(e)
                })
            }

            function u(e) {
                return function() {
                    return Object(r.e)(e, {
                        onClose: d
                    })
                }
            }
        },
        UWbL: function(e, t, n) {
            "use strict";

            function i(e) {
                var t = /^((\d+)[Hh])?((\d+)[Mm])?((\d+)[Ss])?$/.exec(e || "");
                return t ? 3600 * (parseInt(t[2], 10) || 0) + 60 * (parseInt(t[4], 10) || 0) + (parseInt(t[6], 10) || 0) : 0
            }
            n.d(t, "a", function() {
                return i
            })
        },
        UZgS: function(e, t, n) {},
        V3Pk: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return r
            }), n.d(t, "h", function() {
                return o
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "g", function() {
                return s
            }), n.d(t, "e", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            }), n.d(t, "f", function() {
                return d
            }), n.d(t, "d", function() {
                return u
            }), n.d(t, "i", function() {
                return p
            });
            var i = n("mrSG"),
                r = "vodChat.channel-moderation-comments.RESULTS_RECEIVED",
                o = function(e, t) {
                    return i.__assign({
                        type: r
                    }, e, {
                        bitsConfig: t
                    })
                },
                a = "vodChat.channel-moderation-comments.RESULTS_FAILED",
                s = function(e) {
                    return {
                        type: a,
                        error: e
                    }
                },
                l = function(e) {
                    return {
                        type: "vodChat.channel-moderation-comments.BAN_FAILED",
                        error: e
                    }
                },
                c = "vodChat.channel-moderation-comments.BAN_SUCCESS",
                d = function(e) {
                    return {
                        type: c,
                        user: e
                    }
                },
                u = "vodChat.channel-moderation-comments.SEARCH_SUCCESS",
                p = function(e) {
                    return {
                        type: u,
                        hits: e
                    }
                }
        },
        VN3V: function(e, t, n) {},
        Ve5Q: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "UpsellCenter_Channel"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "70"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastSettings"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 162
                }
            };
            n.loc.source = {
                body: "query UpsellCenter_Channel($login: String!) {\nuser(login: $login) {\nid\ndisplayName\nprofileImageURL(width: 70)\nbroadcastSettings {\nid\ngame {\nid\ndisplayName\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        VrOd: function(e, t, n) {},
        VtCy: function(e, t, n) {
            "use strict";
            var i = n("y6KF");
            n.d(t, "DownloadStatus", function() {
                return i.a
            }), n.d(t, "ExportDestination", function() {
                return i.b
            }), n.d(t, "ExtraFilterType", function() {
                return i.c
            }), n.d(t, "RestrictionType", function() {
                return i.d
            }), n.d(t, "THUMBNAIL_TYPE_CUSTOM", function() {
                return i.e
            }), n.d(t, "VIDEO_STATUS_FAILED", function() {
                return i.j
            }), n.d(t, "VIDEO_STATUS_PENDING_TRANSCODE", function() {
                return i.k
            }), n.d(t, "VIDEO_STATUS_RECORDED", function() {
                return i.l
            }), n.d(t, "VIDEO_STATUS_RECORDING", function() {
                return i.m
            }), n.d(t, "VIDEO_STATUS_TRANSCODING", function() {
                return i.n
            }), n.d(t, "VIDEO_STATUS_UPLOADING", function() {
                return i.p
            }), n.d(t, "VideoPremiereStatus", function() {
                return i.q
            }), n.d(t, "VideoScope", function() {
                return i.r
            }), n.d(t, "availableVideoStatuses", function() {
                return i.s
            }), n.d(t, "pendingVideoStatuses", function() {
                return i.t
            });
            n("1G35");
            var r = n("IItH");
            n.o(r, "DropdownMenuNavDirection") && n.d(t, "DropdownMenuNavDirection", function() {
                return r.DropdownMenuNavDirection
            }), n.o(r, "EditModalErrorOrigin") && n.d(t, "EditModalErrorOrigin", function() {
                return r.EditModalErrorOrigin
            }), n.o(r, "KEY_ADD_TO") && n.d(t, "KEY_ADD_TO", function() {
                return r.KEY_ADD_TO
            }), n.o(r, "KEY_COLLECTIONS") && n.d(t, "KEY_COLLECTIONS", function() {
                return r.KEY_COLLECTIONS
            }), n.o(r, "KEY_ROOT") && n.d(t, "KEY_ROOT", function() {
                return r.KEY_ROOT
            }), n.o(r, "NotificationType") && n.d(t, "NotificationType", function() {
                return r.NotificationType
            });
            var o = n("jQ+3");
            n.d(t, "NotificationType", function() {
                return o.a
            });
            var a = n("uNjw");
            n.o(a, "DropdownMenuNavDirection") && n.d(t, "DropdownMenuNavDirection", function() {
                return a.DropdownMenuNavDirection
            }), n.o(a, "EditModalErrorOrigin") && n.d(t, "EditModalErrorOrigin", function() {
                return a.EditModalErrorOrigin
            }), n.o(a, "KEY_ADD_TO") && n.d(t, "KEY_ADD_TO", function() {
                return a.KEY_ADD_TO
            }), n.o(a, "KEY_COLLECTIONS") && n.d(t, "KEY_COLLECTIONS", function() {
                return a.KEY_COLLECTIONS
            }), n.o(a, "KEY_ROOT") && n.d(t, "KEY_ROOT", function() {
                return a.KEY_ROOT
            });
            var s = n("gh9h");
            n.d(t, "EditModalErrorOrigin", function() {
                return s.a
            });
            var l = n("z1lk");
            n.d(t, "DropdownMenuNavDirection", function() {
                return l.a
            }), n.d(t, "KEY_ADD_TO", function() {
                return l.b
            }), n.d(t, "KEY_COLLECTIONS", function() {
                return l.c
            }), n.d(t, "KEY_ROOT", function() {
                return l.d
            })
        },
        "W/3w": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return o
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "d", function() {
                return s
            });
            var i = n("/7QA"),
                r = 30,
                o = [0, 10, 30, 60, 1440, 10080, 43200, 129600];

            function a(e) {
                switch (e) {
                    case 0:
                        return Object(i.d)("0 minutes (Any followers)", "FollowersOnlyLabel");
                    case 10:
                        return Object(i.d)("10 minutes (Most used)", "FollowersOnlyLabel");
                    case 30:
                        return Object(i.d)("30 minutes", "FollowersOnlyLabel");
                    case 60:
                        return Object(i.d)("1 hour", "FollowersOnlyLabel");
                    case 1440:
                        return Object(i.d)("1 day", "FollowersOnlyLabel");
                    case 10080:
                        return Object(i.d)("1 week", "FollowersOnlyLabel");
                    case 43200:
                        return Object(i.d)("1 month", "FollowersOnlyLabel");
                    case 129600:
                        return Object(i.d)("3 months", "FollowersOnlyLabel");
                    default:
                        return i.k.warn("[FollowersOnlyLabel] Tried to generate a label for a non-preset.", e), ""
                }
            }

            function s(e) {
                switch (e) {
                    case 0:
                        return Object(i.d)("0 min", "FollowersOnlyShorthand");
                    case 10:
                        return Object(i.d)("10 min", "FollowersOnlyShorthand");
                    case 30:
                        return Object(i.d)("30 min", "FollowersOnlyShorthand");
                    case 60:
                        return Object(i.d)("1 hr", "FollowersOnlyShorthand");
                    case 1440:
                        return Object(i.d)("1 day", "FollowersOnlyShorthand");
                    case 10080:
                        return Object(i.d)("1 wk", "FollowersOnlyShorthand");
                    case 43200:
                        return Object(i.d)("1 mo", "FollowersOnlyShorthand");
                    case 129600:
                        return Object(i.d)("3 mo", "FollowersOnlyShorthand");
                    default:
                        return Object(i.d)("custom", "FollowersOnlyShorthand")
                }
            }
        },
        W8Fi: function(e, t, n) {
            "use strict";

            function i(e) {
                return e.some(function(e) {
                    return !!e.self && !!e.self.promotion
                })
            }

            function r(e) {
                return e.some(function(e) {
                    return !!e.giftPromotion
                })
            }

            function o(e) {
                return e.some(function(e) {
                    return !!e.self && !!e.self.paidUpgradePromotion
                })
            }

            function a(e, t) {
                var n;
                return t ? n = e.giftPromotion : e.self && (n = e.self.promotion), n ? n.newPrice : e.price
            }

            function s(e, t) {
                var n;
                return t ? n = e.giftPromotion : e.self && (n = e.self.promotion), n ? parseInt(n.discountValue, 10) : 0
            }

            function l(e) {
                return e.self && e.self.paidUpgradePromotion ? e.self.paidUpgradePromotion.newPrice : e.price
            }

            function c(e) {
                return e.find(function(e) {
                    return !!e.self && !!e.self.paidUpgradePromotion
                }) || null
            }
            n.d(t, "g", function() {
                return i
            }), n.d(t, "e", function() {
                return r
            }), n.d(t, "f", function() {
                return o
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "d", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            })
        },
        WK0g: function(e, t, n) {
            "use strict";
            var i = n("cr+I"),
                r = n("b6Yk"),
                o = n("ahza"),
                a = n("mrSG"),
                s = n("pU2t"),
                l = n("XeJ1"),
                c = function(e, t) {
                    var n = Object(s.d)(e, t),
                        i = e.comments.reduce(function(e, t) {
                            return void 0 === t.video ? e : e.concat([d(t.video)])
                        }, []);
                    return Array.isArray(e.parents) && e.parents.forEach(function(e) {
                        n.comments.push(s.a.normalizeRecord(e, t)), n.users.push(l.a.normalizeRecord(e.commenter))
                    }), a.__assign({}, n, {
                        videos: i
                    })
                },
                d = function(e) {
                    return {
                        id: e._id,
                        title: e.title,
                        preview: e.preview
                    }
                };
            n.d(t, "b", function() {
                return f
            }), n.d(t, "a", function() {
                return g
            });
            var u = "channel_id",
                p = "limit",
                m = "video_id",
                h = 50;

            function f(e) {
                var t;
                return t = function(e) {
                    return "userId" in e
                }(e) ? function(e) {
                    var t = {};
                    return t[p] = h.toString(), t[u] = e.userId, void 0 !== e.cursor && (t[o.a] = e.cursor), "/v5/videos/comments?" + i.stringify(t)
                }(e) : function(e) {
                    var t = {};
                    return t[p] = h.toString(), t[m] = e.videoId, void 0 !== e.cursor && (t[o.a] = e.cursor), "/v5/videos/comments?" + i.stringify(t)
                }(e), r.a.getOrThrow(t).then(function(t) {
                    return c(t.body, e.bitsConfig)
                })
            }

            function g(e) {
                var t = function(e) {
                        return "/v5/videos/channels/" + e.targetChannel + "/bans"
                    }(e),
                    n = {
                        body: {
                            commenter_id: e.bannedUser
                        }
                    };
                return r.a.postOrThrow(t, n)
            }
        },
        WOQ1: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                o = n("d0ua"),
                a = n("mrSG"),
                s = n("TSYQ"),
                l = n("imBb"),
                c = n("q1tI"),
                d = n("Ue10"),
                u = (n("EihZ"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.toggleTheatreMode = function() {
                            t.props.theatreModeEnabled ? t.props.onTheatreModeDisabled() : t.props.onTheatreModeEnabled()
                        }, t.disableTheatreMode = function() {
                            t.props.theatreModeEnabled && t.props.onTheatreModeDisabled()
                        }, t
                    }
                    return a.__extends(t, e), t.prototype.componentDidMount = function() {
                        l.bind("alt+t", this.toggleTheatreMode), l.bind("esc", this.disableTheatreMode)
                    }, t.prototype.componentWillUnmount = function() {
                        l.unbind("alt+t"), l.unbind("esc")
                    }, t.prototype.render = function() {
                        var e = s("channel-page__video-player", {
                            "channel-page__video-player--theatre-mode": this.props.theatreModeEnabled || !1,
                            "channel-page__video-player--theatre-mode-right-column-collapsed": this.props.theatreModeEnabled && !this.props.rightColumnExpanded
                        });
                        return c.createElement(d.Xa, {
                            className: e,
                            flexWrap: d.Ba.NoWrap,
                            fullHeight: this.props.theatreModeEnabled,
                            fullWidth: !this.props.rightColumnExpanded,
                            position: this.props.theatreModeEnabled ? d.jb.Fixed : d.jb.Relative
                        }, c.createElement(d.o, null, this.props.children))
                    }, t
                }(c.Component));
            n.d(t, "a", function() {
                return p
            });
            var p = Object(i.connect)(function(e) {
                return {
                    theatreModeEnabled: e.ui.theatreModeEnabled,
                    rightColumnExpanded: e.ui.rightColumnExpanded
                }
            }, function(e) {
                return Object(r.bindActionCreators)({
                    onTheatreModeDisabled: o.C,
                    onTheatreModeEnabled: o.F
                }, e)
            })(u)
        },
        WytW: function(e, t, n) {
            "use strict";
            n.d(t, "g", function() {
                return o
            }), n.d(t, "h", function() {
                return a
            }), n.d(t, "j", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "d", function() {
                return d
            }), n.d(t, "e", function() {
                return u
            }), n.d(t, "f", function() {
                return p
            }), n.d(t, "a", function() {
                return m
            }), n.d(t, "p", function() {
                return f
            }), n.d(t, "m", function() {
                return v
            }), n.d(t, "q", function() {
                return k
            }), n.d(t, "k", function() {
                return C
            }), n.d(t, "o", function() {
                return E
            }), n.d(t, "n", function() {
                return w
            }), n.d(t, "l", function() {
                return D
            }), n.d(t, "i", function() {
                return I
            });
            var i = n("/7QA"),
                r = i.p.logger.withCategory("chat-commands");

            function o(e) {
                return "/mod " + e
            }

            function a(e) {
                return "/unmod " + e
            }

            function s(e) {
                return /^[\/]/.test(e)
            }

            function l() {
                return "/clear"
            }

            function c() {
                return "/followersoff"
            }

            function d() {
                return "/slowoff"
            }

            function u(e) {
                return "/followers " + e
            }

            function p() {
                return "/slow"
            }

            function m(e) {
                return "/color " + e
            }
            var h = /^\/w(?:$|\s+)(\S+)?\s*(.+)?/i;

            function f(e) {
                var t = e.trim().match(h);
                return t ? {
                    recipientLogin: t[1] || null,
                    body: t[2] || null
                } : null
            }
            var g = /^\/host(?:$|\s+)(\S+)/i;

            function v(e) {
                var t = e.trim().match(g);
                return t ? {
                    recipientLogin: t[1]
                } : null
            }
            var b = /^(\S+)?\s+(.+)?$/;

            function k(e) {
                var t = e.trim().match(b);
                return t ? {
                    recipientLogin: t[1] || null,
                    body: t[2] || null
                } : {
                    recipientLogin: null,
                    body: null
                }
            }
            var y = /^\/ban\s+@?(\S+)(?:\s+(.+))?$/;

            function C(e) {
                var t = e.trim().match(y);
                return t ? {
                    banTarget: t[1],
                    reason: t[2] || null
                } : null
            }
            var S = /^\/timeout\s+@?(\S+)(?:\s+(\d+))?(?:\s+(.+))?$/;

            function E(e) {
                var t = e.trim().match(S);
                return t ? {
                    banTarget: t[1],
                    duration: t[2] && Number(t[2]) || null,
                    reason: t[3] || null
                } : null
            }
            var _ = /^\/slow(?:\s+(\d+)?)?$/;

            function w(e) {
                var t = e.trim().match(_);
                return t ? {
                    duration: t[1] && Number(t[1]) || null
                } : null
            }
            var O = ["blue", "blueviolet", "cadetblue", "chocolate", "coral", "dodgerblue", "firebrick", "goldenrod", "green", "hotpink", "orangered", "red", "seagreen", "springgreen", "yellowgreen"],
                T = /^\/color\s+(#[A-Fa-f0-9]{6}|[A-Za-z]+)$/;

            function D(e) {
                var t = e.trim().match(T);
                if (!t) return null;
                var n = t[1];
                return n.startsWith("#") || -1 !== O.indexOf(n.toLowerCase()) ? {
                    color: n
                } : null
            }
            var N = /^[/.]([a-z0-9]+)(.+)?$/i;

            function I(e, t) {
                var n = e.match(N);
                if (!n) return {
                    handled: !1
                };
                var o = n[1],
                    a = i.p.store.getState().chat.commandHandlers[o.toLowerCase()];
                if (!a) return {
                    command: o,
                    handled: !1
                };
                if (1 !== a.length) return r.error(new Error("Failed to run comand " + o), "Multiple command handlers defined for '" + o + "'", {
                    command: o
                }), {
                    command: o,
                    handled: !1
                };
                var s = (n[2] || "").trim(),
                    l = {
                        channelLogin: t
                    },
                    c = a[0];
                try {
                    return {
                        command: o,
                        handled: !0,
                        result: c(s, l)
                    }
                } catch (e) {
                    return r.warn("Exception thrown from chat command handler", {
                        command: o,
                        err: e
                    }), {
                        handled: !1
                    }
                }
            }
        },
        X7Ac: function(e, t, n) {
            "use strict";
            var i = n("wbMx");
            n.d(t, "a", function() {
                return i.a
            }), n.d(t, "b", function() {
                return i.b
            })
        },
        XA5B: function(e, t, n) {},
        XEwr: function(e, t, n) {
            "use strict";

            function i(e) {
                if (!e || 0 === e.edges.length) return [];
                var t = [];
                return e.edges.forEach(function(e) {
                    e.node.id && t.push(e.node)
                }), t
            }

            function r(e) {
                return "slug" in e
            }
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            })
        },
        XQnt: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "EmotePicker_SubUpsell_PriceInfo"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "tier"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "url"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "price"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "priceInfo"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "currency"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "exponent"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "total"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "description"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "price"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isTaxInclusive"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tax"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "self"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "promotion"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "newPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "oldPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountType"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountValue"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "paidUpgradePromotion"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "newPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "oldPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountType"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountValue"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 393
                }
            };
            n.loc.source = {
                body: "query EmotePicker_SubUpsell_PriceInfo($channelID: ID!) {\nuser(id: $channelID) {\nid\nsubscriptionProducts {\nid\ndisplayName\nname\ntier\nurl\nemotes {\nid\ntoken\n}\nprice\npriceInfo {\ncurrency\nexponent\ntotal\ndescription\nprice\nisTaxInclusive\nid\ntax\n}\nemoteSetID\nself {\npromotion {\nnewPrice\noldPrice\ndiscountType\ndiscountValue\n}\npaidUpgradePromotion {\nnewPrice\noldPrice\ndiscountType\ndiscountValue\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        XXm5: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return o
            });
            var i = "vod-message",
                r = "mod-dashboard",
                o = "mod-comment"
        },
        XeJ1: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("nxZp"),
                r = n("ehEd"),
                o = {
                    normalizeRecord: function(e) {
                        return new i.a({
                            id: e._id,
                            name: e.name,
                            logo: new URL(e.logo || r.a),
                            bio: e.bio,
                            createdAt: new Date(e.created_at),
                            displayName: e.display_name,
                            type: e.type,
                            updatedAt: new Date(e.updated_at)
                        })
                    },
                    serializeRecord: function(e) {
                        return {
                            _id: e.id,
                            name: e.name,
                            logo: e.logo.toString(),
                            bio: e.bio,
                            created_at: e.createdAt.toISOString(),
                            display_name: e.displayName,
                            type: e.type,
                            updated_at: e.updatedAt.toISOString()
                        }
                    }
                }
        },
        YBPT: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, "LatestVideosFromFollowedCarouselComponent", function() {
                return g
            }), n.d(t, "LatestVideosFromFollowedCarousel", function() {
                return v
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("fvjX"),
                a = n("/7QA"),
                s = n("GFmA"),
                l = n("yR8l"),
                c = n("2xye"),
                d = n("GnwI"),
                u = n("6h5w"),
                p = n("eqgM"),
                m = n("XEwr"),
                h = n("Ue10"),
                f = n("0Ws6"),
                g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.data && !this.props.data.loading && this.props.data.currentUser && Object(m.b)(this.props.data.currentUser.followedVideos) || null;
                        return !this.props.data || this.props.data.loading || e && 0 !== e.length ? r.createElement("div", null, r.createElement(h.Xa, {
                            padding: {
                                bottom: 1
                            }
                        }, r.createElement(u.a, {
                            titleMessage: Object(a.d)("Latest videos", "LatestVideosFromFollowedCarousel")
                        })), r.createElement(p.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: s.b.MixedGameAndChannelList,
                            overrideCardImageInteractivity: !0,
                            tracking: {
                                content: this.props.tracking.content,
                                location: this.props.tracking.location,
                                medium: this.props.tracking.medium,
                                source: {},
                                itemType: c.TwitchDataType.Video
                            },
                            videoCardSize: h.cc.Large,
                            videos: e
                        })) : null
                    }, t
                }(r.Component),
                v = Object(o.compose)(Object(l.a)(f), Object(d.b)("LatestVideosFromFollowedCarousel"))(g)
        },
        YwGE: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = {
                    Created: "created",
                    Downloading: "downloading",
                    Transmuxing: "transmuxing",
                    Failed: "failed",
                    Complete: "complete"
                },
                r = "public"
        },
        ZEQw: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return i
            }), n.d(t, "d", function() {
                return r
            }), n.d(t, "e", function() {
                return o
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            });
            var i = "subscribe_to_channel",
                r = "turbo",
                o = "visit_url",
                a = "none",
                s = "broadcaster"
        },
        ZUUl: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return o
            });
            var i = n("4rCz");

            function r(e, t) {
                return function(n, r) {
                    e({
                        dispatch: n,
                        getState: r
                    }, t, i.q.apollo.client)
                }
            }

            function o(e, t) {
                return function(n, r) {
                    e({
                        dispatch: n,
                        getState: r
                    }, t, i.q.apollo.client, i.p)
                }
            }
        },
        ZVTe: function(e, t, n) {
            "use strict";
            var i = n("TSYQ"),
                r = n("q1tI"),
                o = n("EE1E"),
                a = (n("2e6W"), function(e) {
                    var t, n = e.userData.color;
                    e.highContrastUsernameColor && n && (n = "#" + Object(o.a)(n, e.theme));
                    var a = [r.createElement("span", {
                        key: "username-display",
                        className: "chat-author__display-name",
                        "data-a-target": "chat-message-username",
                        "data-a-user": e.userData.userLogin,
                        "data-test-selector": "message-username",
                        style: {
                            color: n
                        }
                    }, e.userData.userDisplayName)];
                    if (e.userData.isIntl) {
                        var s = i(((t = {})["chat-author__intl-login"] = !e.highlighted, t["chat-author__intl-login--highlighted"] = e.highlighted, t));
                        a.push(r.createElement("span", {
                            key: "username-login",
                            style: {
                                color: n
                            },
                            className: s,
                            "data-test-selector": "message-username-canonical"
                        }, " (" + e.userData.userLogin + ")"))
                    }
                    return r.createElement("span", {
                        key: e.userData.userID + "-authorlabel"
                    }, a)
                });
            n.d(t, !1, function() {
                return "message-username"
            }), n.d(t, !1, function() {
                return "message-username-canonical"
            }), n.d(t, !1, function() {
                return "chat-author__display-name"
            }), n.d(t, !1, function() {
                return "chat-author__intl-login"
            }), n.d(t, !1, function() {
                return "chat-author__intl-login--highlighted"
            }), n.d(t, "a", function() {
                return a
            })
        },
        ZaHG: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoOptions_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "contentOwnerID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "contentOwnerID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isEditor"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 100
                }
            };
            n.loc.source = {
                body: "query VideoOptions_User($contentOwnerID: ID!) {\nuser(id: $contentOwnerID) {\nid\nself {\nisEditor\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        ZbA5: function(e, t, n) {
            "use strict";
            var i, r, o, a, s = n("mrSG"),
                l = n("TSYQ"),
                c = n("q1tI"),
                d = n("/7QA"),
                u = n("oB8h"),
                p = n("Ue10");
            n("kVMo");
            ! function(e) {
                e.HostingDot = "stream-type-indicator__hosting-dot"
            }(a || (a = {}));
            var m = ((i = {})[u.a.Live] = "stream-type-indicator--live", i[u.a.Premiere] = "stream-type-indicator--premiere", i[u.a.Rerun] = "stream-type-indicator--rerun", i[u.a.WatchParty] = "stream-type-indicator--rerun", i),
                h = ((r = {})[u.a.Premiere] = p.tb.VideoPremiere, r[u.a.Rerun] = p.tb.VideoRerun, r[u.a.WatchParty] = p.tb.VideoRerun, r),
                f = ((o = {})[u.a.Premiere] = p.ub.Live, o[u.a.Rerun] = p.ub.Inherit, o[u.a.WatchParty] = p.ub.Inherit, o),
                g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return s.__extends(t, e), t.prototype.render = function() {
                        return c.createElement(p.Eb, {
                            className: this.getClassNames(),
                            color: p.O.Overlay,
                            background: p.r.Overlay,
                            padding: {
                                x: .5
                            },
                            borderRadius: p.x.Small,
                            display: p.X.Flex
                        }, c.createElement(p.Xa, {
                            display: p.X.Flex,
                            alignItems: p.f.Center,
                            margin: {
                                right: .5
                            }
                        }, this.getIcon()), c.createElement(p.W, {
                            type: p.Vb.Span
                        }, this.getLabel()))
                    }, t.prototype.getClassNames = function() {
                        var e = {
                            "stream-type-indicator": !0
                        };
                        return e[m[this.props.type]] = !0, l(e)
                    }, t.prototype.getIcon = function() {
                        return this.props.hosting ? c.createElement(p.Eb, {
                            borderRadius: p.x.Rounded,
                            className: "stream-type-indicator__hosting-dot",
                            "data-test-selector": a.HostingDot
                        }) : this.props.type === u.a.Live ? c.createElement(p.Xa, {
                            className: "stream-type-indicator__live-wrapper",
                            display: p.X.Flex,
                            alignItems: p.f.Center
                        }, c.createElement(p.K, {
                            status: p.M.Live,
                            size: p.L.Small
                        })) : c.createElement(p.sb, {
                            asset: h[this.props.type],
                            type: f[this.props.type],
                            width: 14,
                            height: 14
                        })
                    }, t.prototype.getLabel = function() {
                        if (this.props.hosting) return Object(d.d)("Hosting", "StreamTypeIndicator");
                        switch (this.props.type) {
                            case u.a.Live:
                                return Object(d.d)("LIVE", "StreamTypeIndicator");
                            case u.a.Premiere:
                                return Object(d.d)("Premiere", "StreamTypeIndicator");
                            case u.a.Rerun:
                            case u.a.WatchParty:
                                return Object(d.d)("Rerun", "StreamTypeIndicator");
                            default:
                                return ""
                        }
                    }, t
                }(c.Component);
            n.d(t, !1, function() {
                return a
            }), n.d(t, "a", function() {
                return g
            })
        },
        Zkco: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("q1tI"),
                r = n("cys1"),
                o = {
                    disableLinks: !0,
                    forceClipsNetworkRequest: !0
                },
                a = function(e) {
                    var t = e.message;
                    return i.createElement("span", {
                        key: t.id,
                        style: {
                            color: e.allowActionTextColors && t.isAction ? t.userColor : ""
                        }
                    }, Object(r.f)(t.tokens, o))
                }
        },
        ZtEv: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "c", function() {
                return r
            }), n.d(t, "e", function() {
                return o
            }), n.d(t, "a", function() {
                return a
            });
            var i, r, o, a, s = n("0Log");
            n.d(t, "d", function() {
                    return s.ModerationActions
                }),
                function(e) {
                    e[e.Message = 0] = "Message", e[e.ExtensionMessage = 1] = "ExtensionMessage", e[e.Moderation = 2] = "Moderation", e[e.ModerationAction = 3] = "ModerationAction", e[e.TargetedModerationAction = 4] = "TargetedModerationAction", e[e.AutoMod = 5] = "AutoMod", e[e.SubscriberOnlyMode = 6] = "SubscriberOnlyMode", e[e.FollowerOnlyMode = 7] = "FollowerOnlyMode", e[e.SlowMode = 8] = "SlowMode", e[e.EmoteOnlyMode = 9] = "EmoteOnlyMode", e[e.R9KMode = 10] = "R9KMode", e[e.Connected = 11] = "Connected", e[e.Disconnected = 12] = "Disconnected", e[e.Reconnect = 13] = "Reconnect", e[e.Hosting = 14] = "Hosting", e[e.Unhost = 15] = "Unhost", e[e.Hosted = 16] = "Hosted", e[e.Subscription = 17] = "Subscription", e[e.Resubscription = 18] = "Resubscription", e[e.GiftPaidUpgrade = 19] = "GiftPaidUpgrade", e[e.AnonGiftPaidUpgrade = 20] = "AnonGiftPaidUpgrade", e[e.SubGift = 21] = "SubGift", e[e.AnonSubGift = 22] = "AnonSubGift", e[e.Clear = 23] = "Clear", e[e.RoomMods = 24] = "RoomMods", e[e.RoomState = 25] = "RoomState", e[e.Raid = 26] = "Raid", e[e.Unraid = 27] = "Unraid", e[e.Ritual = 28] = "Ritual", e[e.Notice = 29] = "Notice", e[e.Info = 30] = "Info", e[e.BadgesUpdated = 31] = "BadgesUpdated", e[e.Purchase = 32] = "Purchase", e[e.BitsCharity = 33] = "BitsCharity", e[e.CrateGift = 34] = "CrateGift", e[e.RewardGift = 35] = "RewardGift", e[e.SubMysteryGift = 36] = "SubMysteryGift", e[e.AnonSubMysteryGift = 37] = "AnonSubMysteryGift"
                }(i || (i = {})),
                function(e) {
                    e[e.Post = 0] = "Post", e[e.Action = 1] = "Action", e[e.PostWithMention = 2] = "PostWithMention"
                }(r || (r = {})),
                function(e) {
                    e[e.Ban = 0] = "Ban", e[e.Timeout = 1] = "Timeout", e[e.Delete = 2] = "Delete"
                }(o || (o = {})),
                function(e) {
                    e[e.MessageRejectedPrompt = 0] = "MessageRejectedPrompt", e[e.CheerMessageRejectedPrompt = 1] = "CheerMessageRejectedPrompt", e[e.MessageRejected = 2] = "MessageRejected", e[e.MessageAllowed = 3] = "MessageAllowed", e[e.MessageDenied = 4] = "MessageDenied", e[e.CheerMessageDenied = 5] = "CheerMessageDenied", e[e.CheerMessageTimeout = 6] = "CheerMessageTimeout", e[e.MessageModApproved = 7] = "MessageModApproved", e[e.MessageModDenied = 8] = "MessageModDenied"
                }(a || (a = {}))
        },
        ZuiC: function(e, t, n) {
            "use strict";
            n.d(t, "n", function() {
                return o
            }), n.d(t, "t", function() {
                return a
            }), n.d(t, "l", function() {
                return s
            }), n.d(t, "s", function() {
                return l
            }), n.d(t, "m", function() {
                return c
            }), n.d(t, "r", function() {
                return d
            }), n.d(t, "o", function() {
                return u
            }), n.d(t, "u", function() {
                return p
            }), n.d(t, "p", function() {
                return m
            }), n.d(t, "v", function() {
                return h
            }), n.d(t, "d", function() {
                return f
            }), n.d(t, "z", function() {
                return g
            }), n.d(t, "e", function() {
                return v
            }), n.d(t, "A", function() {
                return b
            }), n.d(t, "f", function() {
                return k
            }), n.d(t, "B", function() {
                return y
            }), n.d(t, "c", function() {
                return C
            }), n.d(t, "y", function() {
                return S
            }), n.d(t, "k", function() {
                return E
            }), n.d(t, "q", function() {
                return _
            }), n.d(t, "i", function() {
                return w
            }), n.d(t, "E", function() {
                return O
            }), n.d(t, "h", function() {
                return T
            }), n.d(t, "D", function() {
                return D
            }), n.d(t, "g", function() {
                return N
            }), n.d(t, "C", function() {
                return I
            }), n.d(t, "a", function() {
                return x
            }), n.d(t, "w", function() {
                return R
            }), n.d(t, "j", function() {
                return j
            }), n.d(t, "F", function() {
                return M
            }), n.d(t, "b", function() {
                return F
            }), n.d(t, "x", function() {
                return L
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = "vodChat.comments.DELETED_SUCCESS",
                a = function(e) {
                    return i.__assign({
                        type: o
                    }, e)
                },
                s = "vodChat.comments.CREATED_SUCCESS",
                l = function(e) {
                    return i.__assign({
                        type: s
                    }, e)
                },
                c = "vodChat.comments.CREATE_FAILED",
                d = function(e) {
                    return {
                        type: c,
                        createError: e
                    }
                },
                u = "vodChat.comments.DISPLAY_ERROR",
                p = function(e) {
                    return {
                        type: u,
                        errorMessage: e
                    }
                },
                m = "vodChat.comments.UPDATED_SUCCESS",
                h = function(e) {
                    return i.__assign({
                        type: m
                    }, e)
                },
                f = "vodChat.comments.CURSOR_RECEIVED",
                g = function(e) {
                    return i.__assign({
                        type: f
                    }, e)
                },
                v = "vodChat.comments.OFFSET_RECEIVED",
                b = function(e) {
                    return i.__assign({
                        type: v
                    }, e)
                },
                k = "vodChat.comments.QUERY_FAILED",
                y = function() {
                    return {
                        type: k
                    }
                },
                C = "vodChat.comments.CLEARED",
                S = function() {
                    return {
                        type: C
                    }
                },
                E = "vodChat.comments.COOLDOWN_ENDED",
                _ = function() {
                    return {
                        type: E
                    }
                },
                w = "vodChat.comments.SYNC_ENABLED",
                O = function() {
                    return {
                        type: w
                    }
                },
                T = "vodChat.comments.SYNC_DISABLED",
                D = function() {
                    return {
                        type: T
                    }
                },
                N = "vodChat.comments.REPLAY_FILTER_CHANGED",
                I = function(e) {
                    return r.m.set("videoChat.is_replay_mode", e), {
                        type: N,
                        isReplayFilterOn: e
                    }
                },
                x = "vodChat.comments.CHAT_REPLAY_ERROR_HIDE",
                R = function() {
                    return {
                        type: x
                    }
                },
                j = "vodChat.comments.TIMESTAMP_MODE_CHANGED",
                M = function(e) {
                    return r.m.set("videoChat.hide_timestamps", e), {
                        type: j,
                        hideTimestamps: e
                    }
                },
                F = "vodChat.comments.REQUEST_CHAT_SETTINGS",
                L = function() {
                    return {
                        type: F,
                        isReplayFilterOn: r.m.get("videoChat.is_replay_mode", !1),
                        hideTimestamps: r.m.get("videoChat.hide_timestamps", !1)
                    }
                }
        },
        a1OF: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return u
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "e", function() {
                return m
            }), n.d(t, "c", function() {
                return h
            }), n.d(t, "d", function() {
                return f
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("oe5X"),
                a = n("0FG4"),
                s = n("kRBY"),
                l = n("60o1"),
                c = ["#FF0000", "#0000FF", "#008000", "#B22222", "#FF7F50", "#9ACD32", "#FF4500", "#2E8B57", "#DAA520", "#D2691E", "#5F9EA0", "#1E90FF", "#FF69B4", "#8A2BE2", "#00FF7F"],
                d = {};

            function u(e, t, n, r, o, a, s) {
                void 0 === o && (o = !1), void 0 === a && (a = !1), void 0 === s && (s = !1);
                var c = Object(l.a)(t.displayName, t.username);
                return {
                    badges: t.badges || {},
                    bits: t.bits,
                    user: i.__assign({}, c, {
                        userLogin: t.username,
                        userID: t.userID,
                        userType: t.userType,
                        color: t.color || p(t.userID)
                    }),
                    messageParts: m(e, t.emotes || {}, t.bits, n, r, t.username),
                    deleted: o,
                    banned: s,
                    hidden: a,
                    timestamp: Date.now()
                }
            }

            function p(e, t) {
                return void 0 === t && (t = 15), "number" != typeof d[e] && (d[e] = Math.floor(Math.random() * t)), c[d[e]]
            }

            function m(e, t, n, i, l, c) {
                var d = Object(s.e)(r.p.store.getState()),
                    u = {
                        cheers: n ? i : void 0,
                        emotes: {
                            type: a.a.Position,
                            map: t
                        },
                        links: {
                            blockLinks: l,
                            parseClips: !0,
                            parseVods: !0
                        },
                        mentions: {
                            senderLogin: c,
                            sessionUser: d
                        }
                    };
                return Object(o.a)(e, u)
            }

            function h(e) {
                return e.match(/[^\uD800-\uDFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDFFF]/g)
            }

            function f(e, t) {
                return "https://static-cdn.jtvnw.net/emoticons/v1/" + e + "/" + Math.min(Math.ceil(t), 3) + ".0"
            }
        },
        a5fV: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return r
            }), n.d(t, "a", function() {
                return o
            });
            var i = n("/7QA");

            function r(e, t) {
                return e / Math.pow(10, t)
            }

            function o(e, t) {
                return Object(i.f)(e, {
                    style: "currency",
                    currency: t
                })
            }
        },
        a7aT: function(e, t, n) {},
        a9YZ: function(e, t, n) {
            "use strict";
            n.d(t, "d", function() {
                return o
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            }), n.d(t, "c", function() {
                return l
            });
            var i = n("q1tI"),
                r = n("Ue10");

            function o(e) {
                return e ? e.split(/ {2}\n|\n(?!\d+\.)(?!\*|- )|^\n/gm) : []
            }

            function a(e) {
                return i.createElement(r.Pa, {
                    ellipsis: !0
                }, i.createElement("li", null, e.children))
            }

            function s(e) {
                switch (e.level) {
                    case 4:
                        return i.createElement(r.W, {
                            type: r.Vb.H4,
                            ellipsis: !0
                        }, e.children);
                    case 5:
                        return i.createElement(r.W, {
                            type: r.Vb.H5,
                            ellipsis: !0
                        }, e.children);
                    case 6:
                        return i.createElement(r.W, {
                            type: r.Vb.H6,
                            ellipsis: !0
                        }, e.children);
                    default:
                        return i.createElement(r.W, {
                            type: r.Vb.H3,
                            ellipsis: !0
                        }, e.children)
                }
            }

            function l(e) {
                return i.createElement(r.W, {
                    type: r.Vb.P,
                    ellipsis: !0
                }, e.children)
            }
        },
        aJDl: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("GnwI"),
                a = n("Ue10"),
                s = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement("li", null, r.createElement(a.Ua, i.__assign({
                            "data-test-selector": this.props.testSelector
                        }, this.props.interactableProps), r.createElement(a.Xa, {
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, this.props.children)))
                    }, t = i.__decorate([Object(o.b)("InteractableOption", {
                        autoReportInteractive: !0
                    })], t)
                }(r.Component);
            n.d(t, "a", function() {
                return s
            })
        },
        ahza: function(e, t, n) {
            "use strict";
            var i = n("cr+I"),
                r = n("b6Yk");
            var o = n("pU2t");
            n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "g", function() {
                return m
            }), n.d(t, "h", function() {
                return h
            }), n.d(t, "c", function() {
                return f
            }), n.d(t, "e", function() {
                return g
            }), n.d(t, "d", function() {
                return v
            }), n.d(t, "f", function() {
                return b
            });
            var a = "content_offset_seconds",
                s = "cursor",
                l = "comment_id";

            function c(e) {
                return function(e) {
                    return "/v5/videos/" + e
                }(e) + "/comments"
            }

            function d(e) {
                return u(e).toString() + "/replies"
            }

            function u(e) {
                return "/v5/videos/comments/" + e
            }

            function p(e) {
                var t;
                t = g(e) ? d(e.parentId) : c(e.contentId);
                var n = {
                    body: Object(o.g)(e)
                };
                return r.a.post(t, n)
            }

            function m(e) {
                try {
                    if (function(e) {
                            return "commentID" in e
                        }(e)) return function(e) {
                        var t = {};
                        void 0 !== e.cursor && (t[s] = e.cursor);
                        var n = d(e.commentID) + "?" + i.stringify(t);
                        return r.a.getOrThrow(n).then(function(e) {
                            return Object(o.e)(e.body)
                        })
                    }(e);
                    var t = {};
                    v(e) ? t[s] = e.cursor : b(e) && (t[a] = "" + e.offset, void 0 !== e.highlightedMessageID && (t[l] = e.highlightedMessageID));
                    var n = c(e.videoID) + "?" + i.stringify(t);
                    return r.a.getOrThrow(n).then(function(t) {
                        return Object(o.d)(t.body, e.bitsConfig)
                    })
                } catch (e) {
                    return Promise.reject(e)
                }
            }

            function h(e) {
                var t = u(e.comment.id),
                    n = {
                        body: {
                            state: e.state
                        }
                    };
                return r.a.putOrThrow(t, n).then(function(t) {
                    return Object(o.f)(t.body, e.comment)
                })
            }

            function f(e) {
                var t = u(e.id);
                return r.a.delete(t)
            }

            function g(e) {
                return "parentId" in e
            }

            function v(e) {
                return "cursor" in e
            }

            function b(e) {
                return "offset" in e
            }
        },
        b5C3: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("q1tI"),
                r = n("vHGB"),
                o = function(e) {
                    var t = e.badgesToRender,
                        n = e.badgeSets;
                    if (!t) return null;
                    var o = [];
                    ! function(e) {
                        return Array.isArray(e)
                    }(t) ? function(e) {
                        return !Array.isArray(e)
                    }(t) && (o = Object.keys(t).map(function(e) {
                        var o = t[e],
                            a = n.getBadge(e, o);
                        return null === a ? null : i.createElement(r.a, {
                            key: a.setID + "/" + a.version,
                            badge: a
                        })
                    })) : o = t.map(function(e) {
                        var t = n.getBadge(e.setID, e.version);
                        return null === t ? null : i.createElement(r.a, {
                            key: t.setID + "/" + t.version,
                            badge: t
                        })
                    });
                    var a = o.filter(function(e) {
                        return null !== e
                    });
                    return i.createElement("span", null, a)
                };
            o.displayName = "BadgeList"
        },
        b6Yk: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("kRBY"),
                a = function() {
                    function e() {}
                    return e.get = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.request(e, i.__assign({}, t, {
                                            method: "GET"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.getOrThrow = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.requestOrThrow(e, i.__assign({}, t, {
                                            method: "GET"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.put = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.request(e, i.__assign({}, t, {
                                            method: "PUT"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.putOrThrow = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.requestOrThrow(e, i.__assign({}, t, {
                                            method: "PUT"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.post = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.request(e, i.__assign({}, t, {
                                            method: "POST"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.postOrThrow = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.requestOrThrow(e, i.__assign({}, t, {
                                            method: "POST"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.delete = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.request(e, i.__assign({}, t, {
                                            method: "DELETE"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.deleteOrThrow = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return [4, this.requestOrThrow(e, i.__assign({}, t, {
                                            method: "DELETE"
                                        }), n)];
                                    case 1:
                                        return [2, r.sent()]
                                }
                            })
                        })
                    }, e.request = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            var r, o, a, s;
                            return i.__generator(this, function(l) {
                                switch (l.label) {
                                    case 0:
                                        return t = this.constructOptions(t, n), r = t.headers ? t.headers["Content-Type"] : void 0, o = this.serialize(t.body, r), a = i.__assign({}, t, {
                                            body: o
                                        }), [4, this._fetch(e, a)];
                                    case 1:
                                        return s = l.sent(), [4, this.constructLegacyAPIResponse(s)];
                                    case 2:
                                        return [2, l.sent()]
                                }
                            })
                        })
                    }, e.requestOrThrow = function(e, t, n) {
                        return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, Promise, function() {
                            var r;
                            return i.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        return o.trys.push([0, 2, , 3]), [4, this.request(e, t, n)];
                                    case 1:
                                        if ((r = o.sent()).requestError) throw r.requestError;
                                        if (r.error) throw new Error("Error while sending legacy-api request: " + r.error.status + " - " + r.error.message);
                                        return [2, i.__assign({}, r, {
                                            body: r.body
                                        })];
                                    case 2:
                                        throw o.sent();
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }, e.getAPIURL = function(e) {
                        return new URL(e, r.p.config.apiBaseURL)
                    }, e.constructLegacyAPIResponse = function(e) {
                        return i.__awaiter(this, void 0, Promise, function() {
                            var t, n, r, o;
                            return i.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        t = {
                                            status: e.status
                                        }, i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, , 4]), [4, e.json()];
                                    case 2:
                                        return n = i.sent(), e.ok ? t.body = n : t.error = n, [3, 4];
                                    case 3:
                                        return r = i.sent(), e.headers && e.headers.get && (o = e.headers.get("Content-Type")) && -1 !== o.indexOf("application/json") && (t.requestError = r), [3, 4];
                                    case 4:
                                        return [2, t]
                                }
                            })
                        })
                    }, e._fetch = function(e, t) {
                        return void 0 === t && (t = {}), i.__awaiter(this, void 0, Promise, function() {
                            return i.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return [4, fetch(this.getAPIURL(e).toString(), t)];
                                    case 1:
                                        return [2, n.sent()]
                                }
                            })
                        })
                    }, e.constructOptions = function(e, t) {
                        return e = Object.assign({}, e, {
                            headers: i.__assign({}, this.getDefaultHeaders(e, t), e.headers)
                        })
                    }, e.serialize = function(e, t) {
                        return "application/json; charset=UTF-8" === t ? JSON.stringify(e) : "string" == typeof e ? e : e && FormData.prototype.isPrototypeOf(e) ? e : e ? (this.logger.error(new Error("Could not serialize this request body for the content-type provided."), "attempting to serialize object with a non-JSON content-type", {
                            contentType: t
                        }), null) : null
                    }, e.getDefaultHeaders = function(e, t) {
                        var n = r.p.store.getState(),
                            i = {
                                Accept: "application/vnd.twitchtv.v" + (t.version || 5) + "+json; charset=UTF-8",
                                "Accept-Language": "en-us",
                                "Client-ID": r.p.config.legacyClientID,
                                "X-Requested-With": "XMLHttpRequest"
                            };
                        e.body && FormData.prototype.isPrototypeOf(e.body) || (i["Content-Type"] = "application/json; charset=UTF-8");
                        var a = Object(o.e)(n);
                        return a && (i.Authorization = "OAuth " + a.authToken, a.legacyCSRFToken && (i["Twitch-Api-Token"] = a.legacyCSRFToken)), t.excludeHeaders && t.excludeHeaders.forEach(function(e) {
                            i[e] && delete i[e]
                        }), i
                    }, e.logger = r.p.logger.withCategory("legacy-api"), e
                }()
        },
        b7X6: function(e, t, n) {},
        bTcf: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoShareBox_CollectionTrackingMeta"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "creatorID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "creatorID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isPartner"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 117
                }
            };
            n.loc.source = {
                body: "query VideoShareBox_CollectionTrackingMeta($creatorID: ID!) {\nuser(id: $creatorID) {\nid\nlogin\nroles {\nisPartner\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        bdIb: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return s
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = n("GFmA"),
                s = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClickHandler = function() {
                            t.props.onClick && t.props.onClick(t.props.tracking.content_index)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(a.a, {
                            context: this.props.context,
                            title: this.props.clip.title,
                            linkTo: {
                                pathname: this.props.clip.broadcaster ? "/" + this.props.clip.broadcaster.login + "/clip/" + this.props.clip.slug : "",
                                state: this.getLinkState()
                            },
                            onClick: this.onClickHandler,
                            thumbnailImageProps: {
                                src: this.props.clip.thumbnailURL || o.p.config.defaultStreamPreviewURL,
                                alt: this.props.clip.title
                            },
                            channelDisplayName: this.props.clip.broadcaster && this.props.clip.broadcaster.displayName || "",
                            channelLogin: this.props.clip.broadcaster && this.props.clip.broadcaster.login || "",
                            channelLinkTo: {
                                pathname: this.props.clip.broadcaster ? "/" + this.props.clip.broadcaster.login : "",
                                state: this.getLinkState()
                            },
                            channelImageProps: {
                                src: this.props.clip.broadcaster && this.props.clip.broadcaster.profileImageURL || "",
                                alt: this.props.clip.broadcaster && this.props.clip.broadcaster.login || ""
                            },
                            gameTitle: this.props.clip.game && this.props.clip.game.name || void 0,
                            gameTitleLinkTo: this.props.clip.game ? {
                                pathname: "/directory/game/" + encodeURI(this.props.clip.game.name),
                                state: this.getLinkState()
                            } : void 0,
                            gameBoxArtImageProps: this.props.clip.game ? {
                                src: this.props.clip.game.boxArtURL || o.a.defaultBoxArtURL,
                                alt: this.props.clip.game.name
                            } : void 0,
                            datePublished: this.props.clip.createdAt,
                            viewCount: this.props.clip.viewCount,
                            durationInSeconds: this.props.clip.durationSeconds,
                            clipCreatedByChannelLogin: this.props.clip.curator && this.props.clip.curator.login || "",
                            clipCreatedByChannelLoginLinkTo: this.props.clip.curator ? "/" + this.props.clip.curator.login : ""
                        })
                    }, t.prototype.getLinkState = function() {
                        return {
                            content: this.props.tracking.content,
                            content_index: this.props.tracking.content_index,
                            medium: this.props.tracking.medium
                        }
                    }, t
                }(r.Component)
        },
        br9A: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("2xye"),
                a = n("I6K6"),
                s = n("RuiO"),
                l = {
                    BuyCustomMysteryGift: "buy_custom_mystery_gift",
                    BuyGiftSub: "buy_gift_sub",
                    BuyGiftToPaidUpgrade: "buy_gift_to_paid_upgrade",
                    BuyMysteryGift: "buy_mystery_gift",
                    BuyPaidUpgrade: "buy_paid_upgrade",
                    ChangeTier: "change_tier",
                    ClickCheckout: "click_checkout_button",
                    ClickMoreSubOptions: "more_options_click",
                    ClickGiftSubOptions: "gift_options_click",
                    ClickPrimeFAQ: "click_prime_faq",
                    ClickSignupForPrime: "click_signup_for_prime",
                    ClickBack: "back_top_level",
                    CloseSubMenu: "close_subscribe_menu",
                    GiftASub: "gift_a_sub",
                    OpenSubMenu: "open_subscribe_menu",
                    SubWithPrime: "samus_spend_credit"
                };

            function c(e) {
                return i.__awaiter(this, void 0, void 0, function() {
                    var t, n, l, c, d, u, p, m, h, f, g, v, b;
                    return i.__generator(this, function(i) {
                        switch (i.label) {
                            case 0:
                                t = r.o.getVideoPlayerTrackingData().vodID, n = !!t, l = {
                                    channelID: e.channelID,
                                    withVideo: !1
                                }, n && (l.withVideo = !0, l.videoID = t), c = null, i.label = 1;
                            case 1:
                                return i.trys.push([1, 3, , 4]), [4, r.p.apollo.client.query({
                                    query: s,
                                    variables: l
                                })];
                            case 2:
                                return c = i.sent(), [3, 4];
                            case 3:
                                return d = i.sent(), r.k.error(d, "Failed to make query for channel info in FollowEvent reporting.", {
                                    channelID: e.channelID
                                }), [3, 4];
                            case 4:
                                return u = c && c.data && c.data.user || null, c && !u && r.k.error(new Error("GraphQL empty response"), "Query for channel info in SubEvent reporting returned no data.", {
                                    channelID: e.channelID
                                }), p = null, c && n && ((m = c && c.data && c.data.video) ? p = Object(a.a)(m.broadcastType) : r.k.error(new Error("GraphQL empty response"), "Query for video info in SubEvent reporting returned no data.", {
                                    currentVideoID: t
                                })), h = u && u.self, f = h ? !!h.subscriptionBenefit : null, g = h && h.subscriptionBenefit && h.subscriptionBenefit.purchasedWithPrime || !1, v = h ? h.canPrimeSubscribe : null, b = {
                                    action: e.action,
                                    can_subscribe: v,
                                    channel: e.channelLogin,
                                    channel_id: e.channelID,
                                    checkout_button_tier: e.checkoutButtonTier,
                                    has_sub_credit: e.hasSubCredit,
                                    host_channel: e.hostChannelLogin,
                                    host_channel_id: e.hostChannelID,
                                    is_menu_open: e.isMenuOpen,
                                    is_subscribed: f,
                                    is_subscribed_current_tier: h && h.subscriptionBenefit && h.subscriptionBenefit.tier,
                                    mystery_gift_count: e.mysteryGiftCount || null,
                                    sub_location: e.sub_location,
                                    sub_recipient: e.giftRecipient,
                                    modal: e.modal,
                                    modal_level: e.modalLevel || "",
                                    show_prime_content: e.showPrimeContent,
                                    show_resub: u ? v && g : null,
                                    vod_id: t,
                                    vod_type: p,
                                    viewport_height: window.innerHeight,
                                    viewport_width: window.innerWidth
                                }, r.o.track(o.SpadeEventType.Subscription, b), [2]
                        }
                    })
                })
            }
        },
        cMjZ: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("o4DC");

            function r(e) {
                return e && Object(i.c)(e) || ""
            }
        },
        cRsL: function(e, t, n) {},
        cnlr: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                o = n("q1tI"),
                a = n("/MKj"),
                s = n("fvjX"),
                l = n("/7QA"),
                c = n("Lmqf"),
                d = n.n(c),
                u = n("yR8l"),
                p = n("1/iK"),
                m = n("y5D0"),
                h = n("ugtu"),
                f = n("D7An");
            ! function(e) {
                e.Learn = "learn", e.Support = "support", e.LiveUp = "liveup", e.Recommendation = "rec", e.Bullet = "bullet"
            }(i || (i = {}));
            var g, v, b = n("Ue10"),
                k = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            upsellCenterChannelsAssignment: t.props.showDefault ? null : function() {
                                var e = l.p.experiments.getAssignment(f.b.WebSideNavUpsellCenterChannels);
                                return e === i.Learn || e === i.Support || e === i.LiveUp || e === i.Recommendation || e === i.Bullet ? e : null
                            }()
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return o.createElement(b.Xa, {
                            margin: {
                                y: 1
                            }
                        }, this.renderText())
                    }, t.prototype.renderText = function() {
                        if (!this.props.data || this.props.showDefault || !this.state.upsellCenterChannelsAssignment) return this.renderDefault();
                        switch (this.state.upsellCenterChannelsAssignment) {
                            case i.Learn:
                                return this.renderTextContent(Object(l.d)("Want to master <x:bold>{game}</x:bold>?", {
                                    game: this.props.data.game,
                                    "x:bold": h.j
                                }, "UpsellCenterText"), Object(l.d)("Sign up to learn from the best.", "UpsellCenterText"));
                            case i.Support:
                                return this.renderTextContent(Object(l.d)("Sign up and follow to support <x:bold>{name}</x:bold> and all your favorite streamers!", {
                                    name: this.props.data.channelDisplayName,
                                    "x:bold": h.j
                                }, "UpsellCenterText"));
                            case i.LiveUp:
                                return this.renderTextContent(Object(l.d)("Late to the show?", "UpsellCenterText"), Object(l.d)("Sign up and get notifications next time <x:bold>{name}</x:bold> goes live.", {
                                    name: this.props.data.channelDisplayName,
                                    "x:bold": h.j
                                }, "UpsellCenterText"));
                            case i.Recommendation:
                                return this.renderTextContent(Object(l.d)("Discover more streamers like <x:bold>{name}</x:bold>!", {
                                    name: this.props.data.channelDisplayName,
                                    "x:bold": h.j
                                }, "UpsellCenterText"), Object(l.d)("Sign up to see which channels we've picked just for you.", "UpsellCenterText"));
                            case i.Bullet:
                                return this.renderBulletPoints(Object(l.d)("Sign up to experience the best of <x:bold>{name}</x:bold>:", {
                                    name: this.props.data.channelDisplayName,
                                    "x:bold": h.j
                                }, "UpsellCenterText"), [Object(l.d)("Chat with other fans", "UpsellCenterText"), Object(l.d)("Capture your favorite moments", "UpsellCenterText"), Object(l.d)("Watch in Dark Mode!", "UpsellCenterText")]);
                            default:
                                return this.renderDefault()
                        }
                    }, t.prototype.renderDefault = function() {
                        return this.renderTextContent(Object(l.d)("Join the Twitch community!", "UpsellCenterText"), Object(l.d)("Discover the best live streams anywhere.", "UpsellCenterText"))
                    }, t.prototype.renderTextContent = function(e, t) {
                        return o.createElement(o.Fragment, null, o.createElement(b.W, {
                            color: b.O.Base,
                            fontSize: b.Ca.Size4
                        }, e), o.createElement(b.W, {
                            color: b.O.Alt2,
                            fontSize: b.Ca.Size5
                        }, t))
                    }, t.prototype.renderBulletPoints = function(e, t) {
                        var n = t.map(function(e, t) {
                            return o.createElement(b.Xa, {
                                key: "upsell-center-text-" + t,
                                display: b.X.Flex,
                                flexDirection: b.Aa.Row,
                                alignItems: b.f.Start
                            }, o.createElement(b.sb, {
                                type: b.ub.Alt2,
                                asset: b.tb.Check
                            }), o.createElement(b.Xa, {
                                margin: {
                                    left: 1
                                },
                                textAlign: b.Rb.Left
                            }, o.createElement(b.W, {
                                color: b.O.Alt2,
                                fontSize: b.Ca.Size6
                            }, e)))
                        });
                        return o.createElement(o.Fragment, null, o.createElement(b.W, {
                            color: b.O.Base,
                            fontSize: b.Ca.Size4
                        }, e), o.createElement(b.Xa, {
                            margin: {
                                top: 1
                            }
                        }, n))
                    }, t
                }(o.Component),
                y = n("2xye");
            ! function(e) {
                e.SideNav = "sidenav"
            }(g || (g = {})),
            function(e) {
                e.Upsell = "upsell"
            }(v || (v = {}));
            var C = n("Ve5Q"),
                S = (n("wqI2"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.impressionEventFired = !1, t.signup = function() {
                            ! function(e) {
                                var t = r.__assign({
                                    section: g.SideNav,
                                    click_subsection: v.Upsell
                                }, e);
                                l.o.track(y.SpadeEventType.ItemClick, t)
                            }(), t.props.signup()
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.trackImpression()
                    }, t.prototype.componentDidUpdate = function() {
                        this.trackImpression()
                    }, t.prototype.render = function() {
                        return o.createElement(b.Eb, {
                            background: b.r.AccentAlt2,
                            display: b.X.Flex,
                            flexDirection: b.Aa.Column,
                            padding: {
                                y: 2,
                                x: 1
                            },
                            margin: 1
                        }, this.renderImage(), o.createElement(b.Xa, {
                            textAlign: b.Rb.Center
                        }, this.renderText(), o.createElement(b.z, {
                            onClick: this.signup,
                            size: b.D.Large
                        }, o.createElement(b.Xa, {
                            padding: {
                                x: 1
                            }
                        }, o.createElement(b.W, {
                            color: b.O.Base
                        }, Object(l.d)("Sign up", "UpsellCenter"))))))
                    }, t.prototype.renderText = function() {
                        if (!this.props.channelLogin) return o.createElement(k, {
                            showDefault: !0
                        });
                        if (this.props.data && this.props.data.user) {
                            var e = {
                                game: this.props.data.user.broadcastSettings && this.props.data.user.broadcastSettings.game && this.props.data.user.broadcastSettings.game.displayName || "",
                                channelDisplayName: this.props.data.user.displayName || ""
                            };
                            return o.createElement(k, {
                                data: e
                            })
                        }
                    }, t.prototype.renderImage = function() {
                        var e = o.createElement(b.S, {
                            alt: Object(l.d)("Upsell Center", "UpsellCenter"),
                            src: d.a
                        });
                        return this.props.channelLogin && this.props.data && this.props.data.user && this.props.data.user.profileImageURL ? o.createElement(b.Xa, {
                            position: b.jb.Relative
                        }, o.createElement(b.Xa, {
                            className: "upsell-center__avatar",
                            position: b.jb.Absolute,
                            zIndex: b.ic.Above
                        }, o.createElement(b.q, {
                            src: this.props.data.user.profileImageURL,
                            alt: Object(l.d)("{displayName}'s Profile Image", {
                                displayName: this.props.data.user.displayName || ""
                            }, "UpsellCenter"),
                            borderRadius: b.x.Large,
                            size: 40
                        })), e) : e
                    }, t.prototype.trackImpression = function() {
                        this.impressionEventFired || (! function(e) {
                            var t = r.__assign({
                                section: g.SideNav
                            }, e);
                            l.o.track(y.SpadeEventType.ItemDisplay, t)
                        }(), this.impressionEventFired = !0)
                    }, t
                }(o.PureComponent));
            var E = Object(s.compose)(Object(u.a)(C, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin || ""
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(a.connect)(null, function(e) {
                    return Object(s.bindActionCreators)({
                        signup: function() {
                            return Object(m.g)(p.a.SideNavUpsellCenter)
                        }
                    }, e)
                }))(S),
                _ = n("kRBY"),
                w = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        return this.props.isLoggedIn || this.props.collapsed ? null : o.createElement(E, r.__assign({}, this.props))
                    }, t
                }(o.PureComponent);
            var O = Object(a.connect)(function(e) {
                return {
                    collapsed: !e.ui.sideNavExpanded,
                    isLoggedIn: Object(_.f)(e)
                }
            })(w);
            n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return S
            }), n.d(t, !1, function() {
                return w
            }), n.d(t, "a", function() {
                return O
            })
        },
        cpJf: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "d", function() {
                    return o
                }), n.d(t, "c", function() {
                    return a
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.Chat = "stream_chat", e.Feeds = "feeds", e.Room = "chatroom", e.Whisper = "whisper", e.VodChat = "vod-chat"
                }(i || (i = {}));
            var r, o = {
                    TriHard: {
                        count: 196568036
                    },
                    Kappa: {
                        count: 192158118
                    },
                    "4Head": {
                        count: 155758710
                    },
                    PogChamp: {
                        count: 151485090
                    },
                    cmonBruh: {
                        count: 146352878
                    },
                    BibleThump: {
                        count: 56472964
                    },
                    WutFace: {
                        count: 45069031
                    },
                    Kreygasm: {
                        count: 41387580
                    },
                    DansGame: {
                        count: 38097659
                    },
                    hi5F: {
                        count: 34986404
                    },
                    SMOrc: {
                        count: 34734484
                    },
                    KappaPride: {
                        count: 34262839
                    },
                    VoHiYo: {
                        count: 27886434
                    },
                    SwiftRage: {
                        count: 24561900
                    },
                    ResidentSleeper: {
                        count: 24438298
                    },
                    EleGiggle: {
                        count: 19891526
                    },
                    FailFish: {
                        count: 19118343
                    },
                    NotLikeThis: {
                        count: 18802905
                    },
                    Keepo: {
                        count: 18351415
                    },
                    BabyRage: {
                        count: 18220906
                    },
                    MingLee: {
                        count: 18026207
                    },
                    pbfSSH: {
                        count: 16911241
                    },
                    forsenE: {
                        count: 14960299
                    },
                    HeyGuys: {
                        count: 14851569
                    },
                    ANELE: {
                        count: 14648986
                    },
                    PJSalt: {
                        count: 14438861
                    }
                },
                a = ["354", "49106", "4339", "48", "25", "55338", "70433", "1902", "68856", "81103", "76171", "27509"];
            ! function(e) {
                e.Web = "WEB", e.IOS = "IOS", e.Android = "ANDROID"
            }(r || (r = {}))
        },
        cr2a: function(e, t, n) {},
        cys1: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                o = n("gvGA"),
                a = n("5zf8"),
                s = n("4rCz"),
                l = n("x0+1"),
                c = n("j0ar"),
                d = function(e) {
                    var t, n = e.emote,
                        r = n.alt || "";
                    return n.cheerAmount && (r += " " + n.cheerAmount.toString(), t = i.createElement("strong", {
                        className: "chat-line__message--cheer-amount",
                        style: {
                            color: n.cheerColor
                        }
                    }, n.cheerAmount)), i.createElement(c.a, {
                        alt: r,
                        cheerText: t,
                        className: "chat-line__message--emote",
                        srcKey: "1x",
                        srcSet: n.images
                    })
                };
            d.displayName = "Emote";
            var u, p = function(e) {
                    var t = e.displayText,
                        n = e.url;
                    return i.createElement("a", {
                        className: "link-fragment",
                        href: n,
                        target: "_blank",
                        rel: "noreferrer noopener"
                    }, t)
                },
                m = n("TSYQ"),
                h = n("RcPG"),
                f = (n("VN3V"), function(e) {
                    var t, n = e.content,
                        r = e.highlightType,
                        o = m("text-fragment", ((t = {})["text-fragment--moderated-highlight"] = r === h.a.ModeratedText, t));
                    return i.createElement("span", {
                        className: o,
                        "data-a-target": "chat-message-text"
                    }, n)
                }),
                g = n("mrSG"),
                v = n("yR8l"),
                b = n("+GjP"),
                k = n("2xye"),
                y = n("Ue10"),
                C = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasImageLoadingError: !1
                        }, t.handleImageError = function() {
                            t.setState({
                                hasImageLoadingError: !0
                            })
                        }, t
                    }
                    return g.__extends(t, e), t.prototype.componentWillReceiveProps = function() {
                        this.setState({
                            hasImageLoadingError: !1
                        })
                    }, t.prototype.render = function() {
                        var e = r.a.defaultStreamPreviewURL;
                        return !this.state.hasImageLoadingError && this.props.imageURL && (e = this.props.imageURL), i.createElement(y.I, {
                            aspect: y.p.Aspect16x9,
                            alt: this.props.altText,
                            src: e,
                            onError: this.handleImageError
                        })
                    }, t
                }(i.Component),
                S = (n("Epr8"), "https://static-cdn.jtvnw.net/emoticons/v1/58765/2.0"),
                E = {
                    ERROR: "chat-card-error",
                    TITLE: "chat-card-title",
                    DESCRIPTION: "chat-card-description"
                },
                _ = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.renderErrorCard = function() {
                            var e = i.createElement("img", {
                                "data-test-selector": E.ERROR,
                                src: S,
                                className: "chat-card__error-img"
                            });
                            return t.renderCardContent(e, t.props.error)
                        }, t.renderCardContent = function(e, t) {
                            var n, r;
                            return t ? (n = i.createElement(y.W, {
                                type: y.Vb.Span,
                                fontSize: y.Ca.Size5,
                                "data-test-selector": E.TITLE,
                                title: t.title
                            }, t.title), r = i.createElement(y.W, {
                                type: y.Vb.Span,
                                fontSize: y.Ca.Size6,
                                color: y.O.Alt2,
                                "data-test-selector": E.DESCRIPTION
                            }, t.description)) : (e = i.createElement(y.ib, {
                                overlay: !0
                            }), n = i.createElement(y.ib, {
                                width: 180
                            }), r = i.createElement(y.ib, {
                                width: 120
                            })), i.createElement(y.Eb, {
                                background: y.r.Base,
                                display: y.X.Flex,
                                flexWrap: y.Ba.NoWrap,
                                padding: .5
                            }, i.createElement(y.Eb, {
                                className: "chat-card__preview-img",
                                background: y.r.Alt2,
                                display: y.X.Flex,
                                alignItems: y.f.Center,
                                justifyContent: y.Wa.Center,
                                flexShrink: 0
                            }, e), i.createElement(y.Xa, {
                                display: y.X.Flex,
                                alignItems: y.f.Center,
                                overflow: y.cb.Hidden
                            }, i.createElement(y.Xa, {
                                padding: {
                                    left: 1
                                },
                                fullWidth: !0
                            }, i.createElement(y.Xa, {
                                className: "chat-card__title",
                                ellipsis: !0
                            }, n), i.createElement(y.Xa, {
                                ellipsis: !0
                            }, r))))
                        }, t
                    }
                    return g.__extends(t, e), t.prototype.render = function() {
                        var e;
                        if (this.props.error) e = this.renderErrorCard();
                        else if (this.props.data) {
                            var t = Object(b.e)(this.props.data.contentURL, {
                                    tt_medium: k.PageviewMedium.Chat,
                                    tt_content: k.PageviewContent.ChatCard
                                }),
                                n = i.createElement(C, {
                                    altText: this.props.data.title,
                                    imageURL: this.props.data.previewImageURL
                                });
                            e = i.createElement(y.U, {
                                className: "chat-card__link",
                                to: t,
                                targetBlank: !0
                            }, this.renderCardContent(n, {
                                title: this.props.data.title,
                                description: this.props.data.description
                            }))
                        } else e = this.renderCardContent();
                        return i.createElement(y.Eb, {
                            elevation: 1,
                            margin: {
                                top: .5
                            }
                        }, e)
                    }, t
                }(i.Component),
                w = n("SceP"),
                O = {
                    isTimedOut: !1
                },
                T = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = O, t.timeoutID = null, t
                    }
                    return g.__extends(t, e), t.prototype.componentDidMount = function() {
                        var e = this;
                        this.props.data.clip || (this.timeoutID = setTimeout(function() {
                            e.setState({
                                isTimedOut: !0
                            })
                        }, 5e3))
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        !this.props.data.clip && e.data.clip && (this.timeoutID && (clearTimeout(this.timeoutID), this.timeoutID = null), this.setState({
                            isTimedOut: !1
                        }))
                    }, t.prototype.render = function() {
                        var e = this.props.data,
                            t = e.clip,
                            n = e.error,
                            o = e.loading;
                        return n || this.state.isTimedOut ? i.createElement(_, {
                            error: {
                                title: Object(r.d)("Something went wrong", "ClipsChatCard"),
                                description: Object(r.d)("We couldn't find that Clip", "ClipsChatCard")
                            }
                        }) : o || !t ? i.createElement(_, null) : i.createElement(_, {
                            data: {
                                title: t.title || (t.broadcaster && t.broadcaster.displayName ? Object(r.d)("Clip of {broadcaster}", {
                                    broadcaster: t.broadcaster.displayName
                                }, "ClipsChatCard") : ""),
                                description: t.curator && t.curator.displayName ? Object(r.d)("Clipped by {curator}", {
                                    curator: t.curator.displayName
                                }, "ClipsChatCard") : "",
                                previewImageURL: t.thumbnailURL,
                                contentURL: t.url
                            }
                        })
                    }, t
                }(i.Component),
                D = Object(v.a)(w, {
                    options: function(e) {
                        return {
                            variables: {
                                slug: e.slug
                            },
                            notifyOnNetworkStatusChange: !0,
                            fetchPolicy: e.forceNetworkRequest ? "cache-first" : "cache-only"
                        }
                    }
                })(T),
                N = n("gTu3"),
                I = (n("lpj/"), (u = {})[N.a.Default] = "", u[N.a.Recipient] = "mention-fragment--recipient", u[N.a.Sender] = "mention-fragment--sender", u),
                x = function(e) {
                    var t = e.isAtMention ? "@" : "",
                        n = m("mention-fragment", I[e.currentUserMentionRelation]);
                    return i.createElement("span", {
                        className: n,
                        "data-a-target": "chat-message-mention"
                    }, "" + t + e.recipient)
                };
            x.displayName = "MentionFragment";
            var R = n("QVaV"),
                j = n("sU0Q"),
                M = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return g.__extends(t, e), t.prototype.render = function() {
                        var e = this.props.data,
                            t = e.video,
                            n = e.error,
                            o = e.loading;
                        if (n || t && !t.owner) return i.createElement(_, {
                            error: {
                                title: Object(r.d)("Something went wrong", "VideoChatCard"),
                                description: Object(r.d)("We couldn't find that video", "VideoChatCard")
                            }
                        });
                        if (o || !t) return i.createElement(_, null);
                        var a = i.createElement(y.W, null, Object(r.c)(new Date(t.publishedAt), "medium"), i.createElement("span", null, " · "), Object(R.a)(t.owner.login, t.owner.displayName));
                        return i.createElement(_, {
                            data: {
                                title: t.title,
                                description: a,
                                previewImageURL: t.previewThumbnailURL,
                                contentURL: this.props.url
                            }
                        })
                    }, t
                }(i.Component),
                F = Object(v.a)(j, {
                    options: function(e) {
                        return {
                            variables: {
                                videoID: e.id
                            },
                            notifyOnNetworkStatusChange: !0,
                            fetchPolicy: "cache-first"
                        }
                    }
                })(M),
                L = n("ZtEv");

            function V(e, t, n) {
                void 0 === n && (n = !1);
                var r = t.content,
                    o = r.displayText,
                    a = r.url;
                return n ? i.createElement(f, {
                    key: "message-span-" + e,
                    content: o
                }) : i.createElement(p, {
                    key: e,
                    displayText: o,
                    url: a
                })
            }

            function U(e, t) {
                void 0 === t && (t = {});
                var n = null,
                    r = e.reduce(function(r, a, s) {
                        var l = [];
                        switch (s > 0 && e[s - 1].type !== h.a.Text && a.type !== h.a.Text && l.push(" "), a.type) {
                            case h.a.Text:
                            case h.a.ModeratedText:
                                var c = a.content,
                                    u = a.type;
                                l.push(i.createElement(f, {
                                    key: s,
                                    content: c,
                                    highlightType: u
                                }));
                                break;
                            case h.a.CurrentUserHighlight:
                                l.push(i.createElement(x, {
                                    isAtMention: !1,
                                    currentUserMentionRelation: N.a.Recipient,
                                    recipient: a.content,
                                    key: s
                                }));
                                break;
                            case h.a.Mention:
                                l.push(i.createElement(x, {
                                    isAtMention: !0,
                                    currentUserMentionRelation: a.content.currentUserMentionRelation,
                                    recipient: a.content.recipient,
                                    key: s
                                }));
                                break;
                            case h.a.Emote:
                                l.push(i.createElement(d, {
                                    key: s,
                                    emote: a.content
                                }));
                                break;
                            case h.a.Link:
                                l.push(V(s, a, t.disableLinks));
                                break;
                            case h.a.ClipLink:
                                n || (n = i.createElement(o.a, {
                                    key: s
                                }, i.createElement(D, {
                                    slug: a.content.slug,
                                    forceNetworkRequest: t.forceClipsNetworkRequest
                                }))), l.push(V(s, a, t.disableLinks));
                                break;
                            case h.a.VideoLink:
                                n || (n = i.createElement(F, {
                                    key: s,
                                    id: a.content.id,
                                    url: a.content.url
                                })), l.push(V(s, a, t.disableLinks))
                        }
                        return r.concat(l)
                    }, []);
                return n && (r = r.concat(n)), r
            }

            function A(e) {
                if (e.moderationType === L.e.Delete) {
                    var t = e,
                        n = t.userLogin,
                        o = t.body;
                    return i.createElement(l.a, {
                        targetLogin: n,
                        messageBody: o
                    })
                }
                if ((e = e).moderationType === L.e.Ban) return e.reason ? i.createElement("span", {
                    className: "chat-line__moderation--ban-with-reason"
                }, Object(r.d)("{userLogin} has been banned. Reason: {reason}", {
                    userLogin: e.userLogin,
                    reason: e.reason
                }, "ChatLine")) : i.createElement("span", {
                    className: "chat-line__moderation--ban"
                }, Object(r.d)("{userLogin} is now banned from this channel.", {
                    userLogin: e.userLogin
                }, "ChatLine"));
                if (e.reason && e.duration) {
                    var a = Object(r.d)("{userLogin} has been timed out for {duration} seconds. Reason: {reason}", {
                        duration: e.duration,
                        reason: e.reason,
                        userLogin: e.userLogin
                    }, "ChatLine");
                    return i.createElement("span", {
                        className: "chat-line__moderation--timeout-with-reason"
                    }, a)
                }
                return e.duration ? i.createElement("span", {
                    className: "chat-line__moderation--timeout"
                }, Object(r.d)("{userLogin} has been timed out for {duration} seconds.", {
                    userLogin: e.userLogin,
                    duration: e.duration
                }, "ChatLine")) : void 0
            }

            function P(e) {
                var t = e.daysLeft;
                0 === t && (t = e.hoursLeft);
                var n = {
                    bitsTotal: i.createElement("strong", null, Object(s.f)(e.total, {
                        style: "currency",
                        currency: "USD"
                    })),
                    charityName: i.createElement("strong", null, e.charityName),
                    learnMoreURL: i.createElement("a", {
                        href: e.learnMore,
                        target: "_blank"
                    }, e.learnMore),
                    hashtag: i.createElement("strong", null, e.hashtag),
                    timeRemaining: Object(s.f)(t)
                };
                return i.createElement("span", null, 0 === e.daysLeft ? function(e) {
                    return Object(r.d)("{bitsTotal} total raised so far for {charityName}! {timeRemaining} more hours to show support. Cheer and include {hashtag}. Learn More at {learnMoreURL}", {
                        bitsTotal: e.bitsTotal,
                        charityName: e.charityName,
                        timeRemaining: e.timeRemaining,
                        hashtag: e.hashtag,
                        learnMoreURL: e.learnMoreURL
                    }, "ChatLine")
                }(n) : function(e) {
                    return Object(r.d)("{bitsTotal} total raised so far for {charityName}! {timeRemaining} more days to show support. Cheer and include {hashtag}. Learn More at {learnMoreURL}", {
                        bitsTotal: e.bitsTotal,
                        charityName: e.charityName,
                        timeRemaining: e.timeRemaining,
                        hashtag: e.hashtag,
                        learnMoreURL: e.learnMoreURL
                    }, "ChatLine")
                }(n))
            }

            function B(e) {
                var t = e.enabled ? Object(r.d)("This room is now in slow mode. You may send messages every {length} seconds.", {
                    length: e.length
                }, "ChatLine") : Object(r.d)("This room is no longer in slow mode.", "ChatLine");
                return i.createElement("span", null, t)
            }

            function W(e) {
                var t;
                if (e.length > 0) {
                    var n = e.join(", ");
                    t = Object(r.d)("The moderators of this channel are: {moderatorList}", {
                        moderatorList: n
                    }, "ChatLine")
                } else t = Object(r.d)("There are no moderators of this channel.", "ChatLine");
                return i.createElement("span", null, t)
            }

            function X(e) {
                if (e.enabled) {
                    var t = 0 === e.length ? Object(r.d)("This room is in followers-only mode.", "ChatLine") : Object(r.d)("This room is now in {length} followers-only mode.", {
                        length: Object(a.b)(60 * e.length)
                    }, "ChatLine");
                    return i.createElement("span", null, t)
                }
                return i.createElement("span", null, Object(r.d)("This room is no longer in followers-only mode.", "ChatLine"))
            }

            function G(e) {
                return e.enabled ? i.createElement("span", null, Object(r.d)("This room is now in emote-only mode.", "ChatLine")) : i.createElement("span", null, Object(r.d)("This room is no longer in emote-only mode.", "ChatLine"))
            }

            function z(e) {
                var t = e.enabled ? Object(r.d)("This room is now in subscriber-only mode.", "ChatLine") : Object(r.d)("This room is no longer in subscriber-only mode.", "ChatLine");
                return i.createElement("span", null, t)
            }

            function H(e) {
                return e.enabled ? i.createElement("span", null, Object(r.d)("r9k mode has been enabled for this room.", "ChatLine")) : i.createElement("span", null, Object(r.d)("r9k mode has been disabled for this room.", "ChatLine"))
            }

            function q(e) {
                return e.isAutohost ? Object(r.d)("{host} is now auto hosting you for up to {viewerCount, number} viewers.", {
                    host: e.hostingChannel,
                    viewerCount: e.viewerCount
                }, "ChatLine") : e.viewerCount <= 2 ? Object(r.d)("{host} is now hosting you.", {
                    host: e.hostingChannel
                }, "ChatLine") : Object(r.d)("{host} is now hosting you for up to {viewerCount, number} viewers.", {
                    host: e.hostingChannel,
                    viewerCount: e.viewerCount
                }, "ChatLine")
            }

            function Q(e) {
                var t = e.getHours() % 12;
                0 === t && (t = 12);
                var n = e.getMinutes(),
                    i = n.toString();
                return n < 10 && (i = "0" + i), t + ":" + i
            }

            function K(e) {
                return i.createElement("span", {
                    key: "timestamp",
                    className: "chat-line__timestamp",
                    "data-a-target": "chat-timestamp",
                    "data-test-selector": "chat-timestamp"
                }, Q(new Date(e)))
            }

            function Y(e) {
                return i.createElement("span", {
                    key: "timestamp",
                    className: "chat-line__timestamp",
                    "data-a-target": "chat-timestamp",
                    "data-test-selector": "chat-timestamp"
                }, function(e, t) {
                    void 0 === t && (t = {});
                    var n = r.p.intl.getLanguageCode() || "en";
                    return Intl.DateTimeFormat(n, t).format(e)
                }(new Date(e), {
                    hour: "numeric",
                    minute: "numeric"
                }))
            }
            n.d(t, "f", function() {
                return U
            }), n.d(t, "g", function() {
                return A
            }), n.d(t, "b", function() {
                return P
            }), n.d(t, "j", function() {
                return B
            }), n.d(t, "i", function() {
                return W
            }), n.d(t, "d", function() {
                return X
            }), n.d(t, "c", function() {
                return G
            }), n.d(t, "k", function() {
                return z
            }), n.d(t, "h", function() {
                return H
            }), n.d(t, "e", function() {
                return q
            }), n.d(t, "a", function() {
                return Q
            }), n.d(t, "l", function() {
                return K
            }), n.d(t, "m", function() {
                return Y
            })
        },
        dAHa: function(e, t, n) {
            "use strict";
            var i, r, o = n("mrSG"),
                a = n("q1tI"),
                s = n("/MKj"),
                l = n("fvjX"),
                c = n("/7QA"),
                d = n("yR8l"),
                u = n("BhFH"),
                p = n("iS14"),
                m = n("geRD"),
                h = n("f00E"),
                f = n("D7An"),
                g = n("DMoW"),
                v = n("2xye"),
                b = n("GnwI"),
                k = n("QVaV"),
                y = n("Ue10"),
                C = (n("MPK0"), "report-wizard-block"),
                S = "report-wizard-unblock",
                E = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            userBlocked: t.props.userBlocked || !1
                        }, t.renderBlock = function() {
                            return a.createElement(y.U, {
                                hoverUnderlineNone: !0,
                                onClick: t.handleBlock,
                                "data-test-selector": C
                            }, a.createElement(y.Xa, {
                                display: y.X.Flex,
                                alignItems: y.f.Center
                            }, a.createElement(y.sb, {
                                type: y.ub.Brand,
                                asset: y.tb.Ban
                            }), a.createElement(y.Xa, {
                                margin: {
                                    left: .5
                                }
                            }, Object(c.d)("Block {user}", {
                                user: t.displayName()
                            }, "ReportWizardBlockActions"))))
                        }, t.renderUnblock = function() {
                            return a.createElement(y.Xa, {
                                className: "reporting-wizard__block-actions",
                                display: y.X.Flex,
                                alignItems: y.f.Center
                            }, a.createElement(y.sb, {
                                type: y.ub.Success,
                                asset: y.tb.FollowCheck
                            }), a.createElement(y.Xa, {
                                margin: {
                                    right: 1
                                }
                            }, a.createElement(y.W, {
                                className: "block-user__success",
                                type: y.Vb.Span
                            }, Object(c.d)("{user} blocked", {
                                user: t.displayName()
                            }, "ReportWizardBlockActions"))), a.createElement(y.U, {
                                hoverUnderlineNone: !0,
                                onClick: t.handleUnblock,
                                "data-test-selector": S
                            }, a.createElement(y.Xa, {
                                margin: {
                                    left: .5
                                }
                            }, Object(c.d)("Unblock", "ReportWizardBlockActions"))))
                        }, t.handleBlock = function() {
                            return o.__awaiter(t, void 0, void 0, function() {
                                return o.__generator(this, function(e) {
                                    return this.props.onBlock(), this.setState({
                                        userBlocked: !0
                                    }), [2]
                                })
                            })
                        }, t.handleUnblock = function() {
                            t.props.onUnblock(), t.setState({
                                userBlocked: !1
                            })
                        }, t.displayName = function() {
                            var e = t.props.targetUser.displayName,
                                n = t.props.targetUser.login;
                            return e || (n || "")
                        }, t
                    }
                    return o.__extends(t, e), t.prototype.render = function() {
                        var e = this.state.userBlocked ? this.renderUnblock() : this.renderBlock(),
                            t = Object(k.a)(this.props.targetUser.login, this.props.targetUser.displayName, !0);
                        return a.createElement(y.Eb, {
                            borderTop: !0,
                            padding: {
                                y: 1
                            },
                            margin: {
                                top: 1
                            }
                        }, a.createElement(y.Xa, null, Object(c.d)("Would you like to block {user}?", {
                            user: t
                        }, "ReportWizardBlockActions")), a.createElement(y.Eb, {
                            color: y.O.Alt2,
                            margin: {
                                y: 1
                            }
                        }, a.createElement(y.ec, {
                            baseFontSize: y.Ca.Size6
                        }, a.createElement("p", null, Object(c.d)("Blocking {user} will:", {
                            user: t
                        }, "ReportWizardBlockActions")), a.createElement("ul", null, a.createElement("li", null, Object(c.d)("Prevent them from sending you whispers", "ReportWizardBlockActions")), a.createElement("li", null, Object(c.d)("Prevent them from hosting you", "ReportWizardBlockActions")), a.createElement("li", null, Object(c.d)("Prevent them from adding you as a friend", "ReportWizardBlockActions")), a.createElement("li", null, Object(c.d)("Filter their messages out of chats you don’t moderate", "ReportWizardBlockActions"))))), a.createElement(y.Xa, {
                            margin: {
                                top: 1
                            }
                        }, e))
                    }, t
                }(a.Component);
            ! function(e) {
                e.BitsViolation = "bits_violation", e.ChatBanEvasion = "chat_ban_evasion", e.Cheating = "cheating", e.Gore = "gore", e.Harassment = "harassment", e.Harm = "harm", e.HatefulConduct = "hateful_conduct", e.Impersonation = "impersonation", e.Miscategorized = "miscategorized", e.OffensiveUsername = "offensive_username", e.Other = "other", e.Porn = "porn", e.Prohibited = "prohibited", e.SelfHarm = "selfharm", e.SexualContent = "sexual_content", e.SexualViolence = "sexual_violence", e.Spam = "spam", e.TosBanEvasion = "tos_ban_evasion", e.Underaged = "underaged"
            }(i || (i = {})),
            function(e) {
                e.Link = "link", e.MultipleChoice = "multiple choice", e.Text = "text", e.Textarea = "textarea"
            }(r || (r = {}));
            var _, w = {
                    generalFilter: function() {
                        return Object(c.d)("I don't think their content or behavior is allowed on Twitch", "ReportModalWizard")
                    },
                    me: function() {
                        return Object(c.d)("Me", "ReportModalWizard")
                    },
                    someoneElse: function() {
                        return Object(c.d)("Someone else", "ReportModalWizard")
                    },
                    sexuallyCoercive: function() {
                        return Object(c.d)("acting in a sexually coercive or inappropriate way", "ReportModalWizard")
                    },
                    abusiveViolence: function() {
                        return Object(c.d)("They're threatening violence or physical harm", "ReportModalWizard")
                    },
                    commitingViolence: function() {
                        return Object(c.d)("They're committing acts of violence or physical harm", "ReportModalWizard")
                    },
                    threatening: function() {
                        return Object(c.d)("threatening, harming, or endangering someone", "ReportModalWizard")
                    },
                    abusive: function() {
                        return Object(c.d)("being hateful, harassing, or abusive", "ReportModalWizard")
                    }
                },
                O = {
                    input_description: {
                        getTitle: function() {
                            return Object(c.d)("Could you provide more detail about this issue? You may include links to videos, clips, and content outside Twitch.", "ReportModalWizard")
                        },
                        value: "description",
                        type: r.Textarea,
                        required: !0
                    },
                    input_link: {
                        getTitle: function() {
                            return Object(c.d)("If possible, please provide a link to show us where the issue occurred. Links that do not lead to the original source of the content may not be usable as evidence.", "ReportModalWizard")
                        },
                        rows: 2,
                        value: "external links",
                        type: r.Textarea
                    },
                    input_usernames: {
                        getTitle: function() {
                            return Object(c.d)("If you know the usernames of any other Twitch accounts that may be owned by this person, please list them in this space.", "ReportModalWizard")
                        },
                        value: "other usernames",
                        rows: 2,
                        type: r.Textarea
                    },
                    input_connection: {
                        getTitle: function() {
                            return Object(c.d)("Please describe how you connected the offsite content to this Twitch account.", "ReportModalWizard")
                        },
                        value: "offsite content connection",
                        type: r.Textarea
                    },
                    input_comments: {
                        getTitle: function() {
                            return Object(c.d)("If you have any other comments you would like to add, please do so here.", "ReportModalWizard")
                        },
                        value: "comments",
                        type: r.Textarea
                    },
                    input_identifyOwner: {
                        getTitle: function() {
                            return Object(c.d)("Please describe how you identified this person as the owner of this Twitch account.", "ReportModalWizard")
                        },
                        rows: 2,
                        value: "connect account owner",
                        type: r.Textarea
                    },
                    endBlurb_socialmedia: {
                        getTitle: function() {
                            return Object(c.d)("Please submit a report to the site or service where the incident occurred as well if you have not already done so.", "ReportModalWizard")
                        },
                        type: r.Text
                    },
                    endBlurb_threat: {
                        getTitle: function() {
                            return Object(c.d)("If you feel you are in immediate danger, please contact your local law enforcement.", "ReportModalWizard")
                        },
                        type: r.Text
                    },
                    endLink_selfharm: {
                        getTitle: function() {
                            return Object(c.d)("Learn more about mental health support", "ReportModalWizard")
                        },
                        value: "https://help.twitch.tv/customer/en/portal/articles/2904486-twitch-cares-mental-health-support-information",
                        type: r.Link
                    },
                    endLink_DMCA: {
                        getTitle: function() {
                            return Object(c.d)("View our DMCA Notification Guidelines", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/dmca-guidelines/",
                        type: r.Link
                    },
                    endLink_trademark: {
                        getTitle: function() {
                            return Object(c.d)("View our Trademark Policy", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/trademark-policy/",
                        type: r.Link
                    },
                    endLink_devAgreement: {
                        getTitle: function() {
                            return Object(c.d)("View our Developer Agreement", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/developer-agreement/",
                        type: r.Link
                    },
                    endLink_eventCoC: {
                        getTitle: function() {
                            return Object(c.d)("View our Events Code of Conduct", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/events-code-of-conduct",
                        type: r.Link
                    },
                    messaging_general: {
                        getTitle: w.generalFilter,
                        value: "general_messaging",
                        omitFromDescription: !0
                    },
                    profile_general: {
                        getTitle: w.generalFilter,
                        value: "general_profile",
                        omitFromDescription: !0
                    },
                    maliciousRaid: {
                        getTitle: function() {
                            return Object(c.d)("They're participating in a malicious raid", "ReportModalWizard")
                        },
                        value: "malicious raid",
                        reportReason: i.Harassment
                    },
                    violence: {
                        getTitle: function() {
                            return Object(c.d)("It contains threats, harm, or endangerment of someone", "ReportModalWizard")
                        },
                        value: "violence/threats",
                        reportReason: i.Harm
                    },
                    report_username: {
                        getTitle: function() {
                            return Object(c.d)("They're using an inappropriate or offensive username", "ReportModalWizard")
                        },
                        value: "inappropriate username",
                        reportReason: i.OffensiveUsername
                    },
                    report_emotes: {
                        getTitle: function() {
                            return Object(c.d)("The emotes are inappropriate or offensive", "ReportModalWizard")
                        },
                        value: "inappropriate emotes",
                        reportReason: i.Other
                    },
                    abusive: {
                        getTitle: function() {
                            return Object(c.d)("It's hateful, harassing, or abusive", "ReportModalWizard")
                        },
                        value: "abusive"
                    },
                    scam: {
                        getTitle: function() {
                            return Object(c.d)("It contains attempts to scam other community members", "ReportModalWizard")
                        },
                        value: "scam",
                        reportReason: i.Spam
                    },
                    emptyStream: {
                        getTitle: function() {
                            return Object(c.d)("There's nobody on the stream", "ReportModalWizard")
                        },
                        value: "empty stream"
                    },
                    impersonation: {
                        getTitle: function() {
                            return Object(c.d)("They're impersonating someone", "ReportModalWizard")
                        },
                        value: "impersonation",
                        reportReason: i.Impersonation
                    },
                    underage: {
                        getTitle: function() {
                            return Object(c.d)("They're underage (12 or younger)", "ReportModalWizard")
                        },
                        value: "underage",
                        reportReason: i.Underaged
                    },
                    report_ip: {
                        getTitle: function() {
                            return Object(c.d)("I think they're using copyrighted content, trademarks, or other intellectual property that's not theirs", "ReportModalWizard")
                        },
                        value: "intellectual property"
                    },
                    inappropriateContent: {
                        getTitle: function() {
                            return Object(c.d)("It's inappropriate or obscene", "ReportModalWizard")
                        },
                        value: "inappropriate content"
                    },
                    violateDevAgreement: {
                        getTitle: function() {
                            return Object(c.d)("I think they're violating Twitch's Developer Agreement", "ReportModalWizard")
                        },
                        value: "violating developer agreement"
                    },
                    revealPersonalInfo: {
                        getTitle: function() {
                            return Object(c.d)("They might have revealed someone's personal information", "ReportModalWizard")
                        },
                        value: "revealing personal info",
                        reportReason: i.Other
                    },
                    inappropriateBadge: {
                        getTitle: function() {
                            return Object(c.d)("Their emote or subscriber badge violates Twitch's Guidelines", "ReportModalWizard")
                        },
                        value: "emote/subscriber badge",
                        reportReason: i.Other
                    },
                    noModeration: {
                        getTitle: function() {
                            return Object(c.d)("They're not moderating their chat appropriately", "ReportModalWizard")
                        },
                        value: "not moderating chat",
                        reportReason: i.Other
                    },
                    inappropriateExtension: {
                        getTitle: function() {
                            return Object(c.d)("Their extension contains malicious or inappropriate content", "ReportModalWizard")
                        },
                        value: "inappropriate extension",
                        reportReason: i.Other
                    },
                    cheating: {
                        getTitle: function() {
                            return Object(c.d)("They're cheating in an online game", "ReportModalWizard")
                        },
                        value: "cheating",
                        reportReason: i.Cheating
                    },
                    bitsViolation: {
                        getTitle: function() {
                            return Object(c.d)("Their use of Bits goes against Twitch's Policy", "ReportModalWizard")
                        },
                        value: "bits violation",
                        reportReason: i.BitsViolation
                    },
                    video_labeling: {
                        getTitle: function() {
                            return Object(c.d)("Their content is labeled incorrectly", "ReportModalWizard")
                        },
                        value: "incorrect label",
                        reportReason: i.Miscategorized
                    },
                    video_inactive: {
                        getTitle: function() {
                            return Object(c.d)("The stream is inactive (sleeping/AFK)", "ReportModalWizard")
                        },
                        value: "inactive stream",
                        reportReason: i.Miscategorized
                    },
                    video_general: {
                        getTitle: w.generalFilter,
                        value: "general_video",
                        omitFromDescription: !0
                    },
                    hateSpeech: {
                        getTitle: function() {
                            return Object(c.d)("They're using hate speech, hateful symbols, or hateful media", "ReportModalWizard")
                        },
                        value: "hate speech",
                        reportReason: i.HatefulConduct
                    },
                    harassment: {
                        getTitle: function() {
                            return Object(c.d)("They're harassing or bullying someone", "ReportModalWizard")
                        },
                        value: "harassment",
                        reportReason: i.Harassment
                    },
                    abusiveViolence: {
                        getTitle: w.abusiveViolence,
                        value: "threatening violence",
                        reportReason: i.Harm
                    },
                    commitingViolence: {
                        getTitle: w.commitingViolence,
                        value: "committing violence",
                        reportReason: i.Harm
                    },
                    swatting: {
                        getTitle: function() {
                            return Object(c.d)("They're inciting or committing swatting or a DDOS attack", "ReportModalWizard")
                        },
                        value: "swatting/ddosing",
                        reportReason: i.Harassment
                    },
                    personalInfo: {
                        getTitle: function() {
                            return Object(c.d)("They're purposely revealing personal information", "ReportModalWizard")
                        },
                        value: "revealing personal info",
                        reportReason: i.Harassment
                    },
                    threat_me: {
                        getTitle: function() {
                            return Object(c.d)("At me", "ReportModalWizard")
                        },
                        value: "against me",
                        reportReason: i.Harm
                    },
                    threat_person: {
                        getTitle: function() {
                            return Object(c.d)("At someone else", "ReportModalWizard")
                        },
                        value: "against another person",
                        reportReason: i.Harm
                    },
                    threat_group: {
                        getTitle: function() {
                            return Object(c.d)("At a group of people", "ReportModalWizard")
                        },
                        value: "against group of people",
                        reportReason: i.Harm
                    },
                    threat_selfharm: {
                        getTitle: function() {
                            return Object(c.d)("They're threatening self-harm", "ReportModalWizard")
                        },
                        value: "selfharm"
                    },
                    inappropriate_game: {
                        getTitle: function() {
                            return Object(c.d)("The game isn't allowed on Twitch", "ReportModalWizard")
                        },
                        value: "prohibited game",
                        reportReason: i.Prohibited
                    },
                    sexuallyViolent: {
                        getTitle: function() {
                            return Object(c.d)("Violent sexual conduct", "ReportModalWizard")
                        },
                        value: "sexually violent",
                        reportReason: i.SexualViolence
                    },
                    childAnimal: {
                        getTitle: function() {
                            return Object(c.d)("Sexual conduct involving a child or animal", "ReportModalWizard")
                        },
                        value: "sexual conduct; child or animal",
                        reportReason: i.SexualViolence
                    },
                    pornographic: {
                        getTitle: function() {
                            return Object(c.d)("Sexually explicit or pornographic content", "ReportModalWizard")
                        },
                        value: "pornographic",
                        reportReason: i.SexualContent
                    },
                    gory: {
                        getTitle: function() {
                            return Object(c.d)("Extreme violence or gore", "ReportModalWizard")
                        },
                        value: "gory",
                        reportReason: i.Gore
                    },
                    suggestive: {
                        getTitle: function() {
                            return Object(c.d)("Sexually suggestive content", "ReportModalWizard")
                        },
                        value: "sexually suggestive",
                        reportReason: i.SexualContent
                    },
                    nudity: {
                        getTitle: function() {
                            return Object(c.d)("Full or partial nudity", "ReportModalWizard")
                        },
                        value: "nudity",
                        reportReason: i.SexualContent
                    },
                    other: {
                        getTitle: function() {
                            return Object(c.d)("There's something else wrong with it...", "ReportModalWizard")
                        },
                        value: "other",
                        reportReason: i.Other
                    },
                    evasion: {
                        getTitle: function() {
                            return Object(c.d)("They were banned or suspended and are trying to get around it (ban evasion)", "ReportModalWizard")
                        },
                        value: "ban evasion"
                    },
                    evasion_sitewide: {
                        getTitle: function() {
                            return Object(c.d)("A sitewide ban from Twitch", "ReportModalWizard")
                        },
                        value: "sitewide ban",
                        reportReason: i.TosBanEvasion
                    },
                    evasion_chat: {
                        getTitle: function() {
                            return Object(c.d)("A chat ban from one or more channels", "ReportModalWizard")
                        },
                        value: "chat ban",
                        reportReason: i.ChatBanEvasion
                    },
                    evasion_messaging: {
                        getTitle: function() {
                            return Object(c.d)("A block from messaging me", "ReportModalWizard")
                        },
                        value: "messaging block",
                        reportReason: i.ChatBanEvasion
                    },
                    impersonation_me: {
                        getTitle: w.me,
                        value: "impersonating me",
                        reportReason: i.Impersonation
                    },
                    impersonation_brand: {
                        getTitle: function() {
                            return Object(c.d)("Someone I represent, or a brand/company I work for", "ReportModalWizard")
                        },
                        value: "impersonating brand",
                        reportReason: i.Impersonation
                    },
                    impersonation_other: {
                        getTitle: w.someoneElse,
                        value: "impersonating someone else",
                        reportReason: i.Impersonation
                    },
                    selfharm: {
                        getTitle: function() {
                            return Object(c.d)("I'm concerned for their wellbeing", "ReportModalWizard")
                        },
                        value: "selfharm",
                        reportReason: i.SelfHarm
                    },
                    chat: {
                        getTitle: function() {
                            return Object(c.d)("In a stream chat message", "ReportModalWizard")
                        },
                        value: "chat"
                    },
                    profile: {
                        getTitle: function() {
                            return Object(c.d)("In the profile content, extensions, or emotes", "ReportModalWizard")
                        },
                        value: "profile"
                    },
                    video: {
                        getTitle: function() {
                            return Object(c.d)("In a live stream, video, or clip", "ReportModalWizard")
                        },
                        value: "video"
                    },
                    room: {
                        getTitle: function(e) {
                            return Object(c.d)("In one of {username}'s rooms", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        value: "room"
                    },
                    whisper: {
                        getTitle: function() {
                            return Object(c.d)("In a whisper (private message)", "ReportModalWizard")
                        },
                        value: "whisper",
                        reportContext: g.N.WHISPER_REPORT
                    },
                    username: {
                        getTitle: function() {
                            return Object(c.d)("In the username", "ReportModalWizard")
                        },
                        value: "username",
                        reportReason: i.OffensiveUsername
                    },
                    report_other: {
                        getTitle: function() {
                            return Object(c.d)("Somewhere else...", "ReportModalWizard")
                        },
                        value: "somewhere else",
                        omitFromDescription: !0
                    },
                    video_streamer: {
                        getTitle: function() {
                            return Object(c.d)("The streamer or channel owner", "ReportModalWizard")
                        },
                        value: "streamer"
                    },
                    video_someoneElse: {
                        getTitle: function() {
                            return Object(c.d)("Someone else in the video", "ReportModalWizard")
                        },
                        value: "someone else in video"
                    },
                    video_chatSomeone: {
                        getTitle: function() {
                            return Object(c.d)("Someone in chat", "ReportModalWizard")
                        },
                        value: "someone in chat",
                        differentTarget: !0
                    },
                    report_channelOwner: {
                        getTitle: function() {
                            return Object(c.d)("The channel owner", "ReportModalWizard")
                        },
                        value: "channel owner"
                    },
                    report_member: {
                        getTitle: function() {
                            return Object(c.d)("Another community member", "ReportModalWizard")
                        },
                        value: "community member",
                        differentTarget: !0
                    },
                    location_onTwitch: {
                        getTitle: function() {
                            return Object(c.d)("On Twitch", "ReportModalWizard")
                        },
                        value: "on twitch"
                    },
                    location_anotherSite: {
                        getTitle: function() {
                            return Object(c.d)("On another site or service", "RpoertModalWizard")
                        },
                        value: "another site"
                    },
                    location_TwitchEvent: {
                        getTitle: function() {
                            return Object(c.d)("In person, at a Twitch event", "ReportModalWizard")
                        },
                        value: "twitch event"
                    },
                    external_incitingRaids: {
                        getTitle: function() {
                            return Object(c.d)("inciting brigading or malicious raids", "ReportModalWizard")
                        },
                        reportReason: i.Harassment,
                        value: "brigading/raids"
                    },
                    external_threatening: {
                        getTitle: w.threatening,
                        value: "threatening"
                    },
                    external_harassment: {
                        getTitle: w.abusive,
                        value: "hateful/harassing"
                    },
                    external_abusiveViolence: {
                        getTitle: w.abusiveViolence,
                        value: "external site; threatening violence",
                        reportReason: i.Harm
                    },
                    external_commitingViolence: {
                        getTitle: w.commitingViolence,
                        value: "external site; committing violence",
                        reportReason: i.Harm
                    },
                    conduct_impersonation: {
                        getTitle: function() {
                            return Object(c.d)("impersonating someone", "ReportModalWizard")
                        },
                        value: "impersonation",
                        reportReason: i.Impersonation
                    },
                    spam: {
                        getTitle: function() {
                            return Object(c.d)("They're spamming or spreading malicious links", "ReportModalWizard")
                        },
                        value: "spam",
                        reportReason: i.Spam
                    },
                    spam_bot: {
                        getTitle: function() {
                            return Object(c.d)("I think this is a bot account", "ReportModalWizard")
                        },
                        value: "bot"
                    },
                    spam_scam: {
                        getTitle: function() {
                            return Object(c.d)("They're trying to scam other community members or sending malicious links", "ReportModalWizard")
                        },
                        value: "scam or malicious links"
                    },
                    spam_repeated: {
                        getTitle: function() {
                            return Object(c.d)("They're sending repeated messages (spam)", "ReportModalWizard")
                        },
                        value: "repeat messages"
                    }
                },
                T = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onChange = function(e) {
                            var n = e.target,
                                i = n.name,
                                r = n.value;
                            t.props.onChangeText(i, r)
                        }, t.onSelect = function(e) {
                            if (t.props.currentCard.items && e.currentTarget.parentElement) {
                                var n = Number(e.currentTarget.parentElement.getAttribute("data-a-index")),
                                    i = t.props.currentCard.items[n];
                                t.props.onChangeRadio(i)
                            }
                        }, t
                    }
                    return o.__extends(t, e), t.prototype.render = function() {
                        var e = this.props.currentCard.getDescription ? a.createElement(y.Xa, {
                            padding: {
                                bottom: 1
                            }
                        }, this.props.currentCard.getDescription()) : null;
                        return a.createElement(y.Xa, {
                            className: "reporting-wizard-card"
                        }, e, a.createElement(y.Ea, {
                            label: this.props.currentCard.getLabel ? this.props.currentCard.getLabel() : ""
                        }, this.renderCardItems()))
                    }, t.prototype.renderCardItems = function() {
                        var e = this,
                            t = this.props.currentCard,
                            n = [];
                        return t.items && t.type && (n = t.items.filter(function(e) {
                            return !!e
                        }).map(function(t, n) {
                            switch (t.type) {
                                case r.Text:
                                    return a.createElement(y.Xa, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, t.getTitle());
                                case r.Link:
                                    return a.createElement(y.Xa, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, a.createElement(y.U, {
                                        to: t.value,
                                        targetBlank: !0
                                    }, a.createElement(y.Xa, {
                                        display: y.X.Flex
                                    }, a.createElement(y.Xa, {
                                        display: y.X.Inline,
                                        padding: {
                                            right: .5
                                        }
                                    }, a.createElement(y.sb, {
                                        asset: y.tb.Document
                                    })), t.getTitle())));
                                case r.Textarea:
                                    var i = t.value ? e.props.userTextInputs[t.value] : void 0,
                                        o = t.required && (!i || !!i && 0 === i.trim().length);
                                    return a.createElement(y.Xa, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, a.createElement(y.Ea, {
                                        label: t.getTitle(),
                                        labelOptional: t.required ? "" : Object(c.d)("Optional", "ReportModalWizardCard")
                                    }, a.createElement(y.Sb, {
                                        onChange: e.onChange,
                                        rows: t.rows || 3,
                                        name: t.value,
                                        error: e.props.error && o,
                                        value: i,
                                        "data-test-selector": "report-wizard-textarea"
                                    })));
                                case r.MultipleChoice:
                                default:
                                    return a.createElement(y.Xa, {
                                        key: n,
                                        padding: {
                                            y: .5
                                        }
                                    }, a.createElement(y.pb, {
                                        checked: !!e.props.currentSelection && e.props.currentSelection.value === t.value,
                                        onChange: e.onSelect,
                                        label: t.getTitle(e.props.targetUser.displayName),
                                        "data-a-index": n,
                                        name: "card",
                                        value: t.value
                                    }))
                            }
                        })), n
                    }, t
                }(a.Component),
                D = n("RQ6e");
            ! function(e) {
                e.Confirm = "Confirm", e.MultipleChoice = "MultipleChoice", e.Info = "End Card"
            }(_ || (_ = {}));
            var N, I, x, R = {
                    contentGeneral: function() {
                        return Object(c.d)("What would you like to report?", "ReportModalWizard")
                    },
                    content: function() {
                        return Object(c.d)("What's wrong with this content?", "ReportModalWizard")
                    },
                    identifyUser: function() {
                        return Object(c.d)("Who do you want to report?", "ReportModalWizard")
                    },
                    thisPersonIs: function() {
                        return Object(c.d)("This person is...", "ReportModalWizard")
                    },
                    relevantStatements: function() {
                        return Object(c.d)("What would you like to report? (Please choose the most relevant statement that applies.)", "ReportModalWizard")
                    }
                },
                j = {
                    report: function(e) {
                        return Object(c.d)("Report {username}", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportVideo: function(e) {
                        return Object(c.d)("Report {username}'s Video", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportMessage: function(e) {
                        return Object(c.d)("Report {username}'s Message", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportProfile: function(e) {
                        return Object(c.d)("Report {username}'s Profile Or Other Content", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportAbusive: function(e) {
                        return Object(c.d)("Report {username} for Abusive Conduct", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    tellUsMore: function() {
                        return Object(c.d)("Tell Us More", "ReportModalWizard")
                    },
                    thanks: function() {
                        return Object(c.d)("Thanks for letting us know", "ReportModalWizard")
                    },
                    thanksConcern: function() {
                        return Object(c.d)("Thank you for your concern", "ReportModalWizard")
                    }
                },
                M = {
                    getDescription: function() {
                        return Object(c.d)("Reports are reviewed by Twitch Staff 24 hours a day. We will issue penalties, such as account suspension and/or content removal, once we verify that a violation of our policies has occurred.", "ReportModalWizard")
                    },
                    blockPrompt: !0,
                    getTitle: j.thanks,
                    type: _.Info,
                    value: "end card"
                },
                F = {
                    socialMedia: o.__assign({}, M, {
                        items: [O.endBlurb_socialmedia]
                    }),
                    violence: o.__assign({}, M, {
                        items: [O.endBlurb_threat]
                    }),
                    legal: {
                        getTitle: j.thanksConcern,
                        getDescription: function() {
                            return Object(c.d)("To submit a claim or report a violation of this type, you will need to follow the steps listed on the relevant page below.", "ReportModalWizard")
                        },
                        items: [O.endLink_DMCA, O.endLink_trademark, O.endLink_devAgreement],
                        type: _.Info,
                        value: "ip end"
                    },
                    selfharm: {
                        getTitle: j.thanksConcern,
                        getDescription: function() {
                            return Object(c.d)("If you know the user personally, and you believe them to be in danger, please contact their local authorities immediately. The link below contains some general information that may be of use.", "ReportModalWizard")
                        },
                        items: [O.endLink_selfharm],
                        type: _.Info,
                        value: "selfharm end"
                    },
                    twitchEvent: {
                        getTitle: j.thanksConcern,
                        getDescription: function() {
                            return Object(c.d)("Please bring this concern to the attention of staff or security at the event if you have not already done so. More information is available at the link below.", "ReportModalWizard")
                        },
                        items: [O.endLink_eventCoC],
                        value: "twitch event end",
                        type: _.Info
                    }
                },
                L = {
                    getTitle: j.report,
                    getLabel: function() {
                        return Object(c.d)("Where is the problem?", "ReportModalWizard")
                    },
                    items: [O.video, O.whisper, O.chat, O.room, O.profile, O.username, O.report_other],
                    type: _.MultipleChoice,
                    value: "content type"
                },
                V = {
                    identifyUser: {
                        getTitle: j.reportVideo,
                        getLabel: R.identifyUser,
                        items: [O.video_streamer, O.video_someoneElse, O.video_chatSomeone],
                        type: _.MultipleChoice,
                        value: "video identify user"
                    },
                    content: {
                        getTitle: j.reportVideo,
                        getLabel: R.contentGeneral,
                        items: [O.revealPersonalInfo, O.video_labeling, O.video_inactive, O.video_general, O.report_ip, O.violateDevAgreement, O.selfharm],
                        type: _.MultipleChoice,
                        value: "video report reason"
                    },
                    general: {
                        getTitle: j.reportVideo,
                        getLabel: R.content,
                        items: [O.report_username, O.violence, O.abusive, O.cheating, O.scam, O.inappropriateContent, O.evasion, O.impersonation, O.underage, O.bitsViolation],
                        type: _.MultipleChoice,
                        value: "video general report reason"
                    }
                },
                U = {
                    content: {
                        getTitle: j.reportMessage,
                        getLabel: R.contentGeneral,
                        items: [O.revealPersonalInfo, O.evasion, O.spam, O.maliciousRaid, O.report_username, O.messaging_general, O.selfharm],
                        type: _.MultipleChoice,
                        value: "message report reason"
                    },
                    general: {
                        getTitle: j.reportMessage,
                        getLabel: R.content,
                        items: [O.report_emotes, O.violence, O.abusive, O.inappropriateContent, O.impersonation, O.underage, O.bitsViolation],
                        type: _.MultipleChoice,
                        value: "message general report reason"
                    }
                },
                A = o.__assign({}, U.content, {
                    getDescription: function() {
                        return Object(c.d)("Please note that we may review additional messages in this conversation to determine the context of your report.", "ReportModalWizard")
                    }
                }),
                P = {
                    content: {
                        getTitle: j.reportProfile,
                        getLabel: R.contentGeneral,
                        items: [O.revealPersonalInfo, O.inappropriateBadge, O.inappropriateExtension, O.noModeration, O.profile_general, O.report_ip, O.violateDevAgreement, O.selfharm],
                        type: _.MultipleChoice,
                        value: "profile report reason"
                    },
                    general: {
                        getTitle: j.reportProfile,
                        getLabel: R.content,
                        items: [O.report_username, O.violence, O.abusive, O.scam, O.inappropriateContent, O.evasion, O.impersonation, O.underage, O.bitsViolation],
                        type: _.MultipleChoice,
                        value: "profile general report reason"
                    }
                },
                B = {
                    getTitle: function(e) {
                        return Object(c.d)("Report {username}'s Room", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: R.identifyUser,
                    items: [O.report_channelOwner, O.report_member],
                    value: "room report user",
                    type: _.MultipleChoice
                },
                W = {
                    getTitle: j.tellUsMore,
                    items: [O.input_description],
                    type: _.Confirm,
                    value: "tell us more"
                },
                X = {
                    banEvasion: o.__assign({}, W, {
                        items: [O.input_usernames, O.input_description],
                        value: "ban evasion tell us more"
                    }),
                    socialMedia: o.__assign({}, W, {
                        items: [O.input_link, O.input_connection, O.input_description],
                        nextCard: F.socialMedia,
                        value: "social media tell us more"
                    })
                },
                G = {
                    content: {
                        getTitle: j.reportAbusive,
                        getLabel: R.relevantStatements,
                        items: [O.hateSpeech, O.harassment, O.abusiveViolence, O.commitingViolence, O.swatting, O.personalInfo],
                        type: _.MultipleChoice,
                        value: "abuse type"
                    },
                    violence: {
                        getTitle: function(e) {
                            return Object(c.d)("Report {username} for Violence or Threats", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: function() {
                            return Object(c.d)("Are the threats or actions directed at you or someone else?", "ReportModalWizard")
                        },
                        items: [O.threat_me, O.threat_person, O.threat_group, O.threat_selfharm],
                        type: _.MultipleChoice,
                        value: "violence type"
                    }
                },
                z = {
                    identifyLocation: {
                        getTitle: function(e) {
                            return Object(c.d)("Report {username} for something else...", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: function() {
                            return Object(c.d)("Where did the problem happen?", "ReportModalWizard")
                        },
                        items: [O.location_onTwitch, O.location_anotherSite, O.location_TwitchEvent],
                        type: _.MultipleChoice,
                        value: "off-site conduct location"
                    },
                    externalSite: {
                        getTitle: function(e) {
                            return Object(c.d)("Report {username}'s Conduct on Another Site or Service", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: R.thisPersonIs,
                        getDescription: function() {
                            return Object(c.d)("Please note that incidents reported through this form must involve Twitch community members. If possible, please submit a report to the site or service where the incident occurred as well.", "ReportModalWizard")
                        },
                        items: [O.external_incitingRaids, O.external_threatening, O.external_harassment],
                        type: _.MultipleChoice,
                        nextCard: X.socialMedia,
                        value: "external site conduct"
                    },
                    external_violence: o.__assign({}, G.violence, {
                        items: [O.threat_me, O.threat_person, O.threat_group],
                        nextCard: X.socialMedia
                    }),
                    external_abusive: o.__assign({}, G.content, {
                        items: [O.hateSpeech, O.harassment, O.external_abusiveViolence, O.external_commitingViolence, O.swatting, O.personalInfo],
                        nextCard: X.socialMedia
                    })
                },
                H = {
                    getTitle: function(e) {
                        return Object(c.d)("Report {username}'s Spam or Malicious Links", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: R.contentGeneral,
                    items: [O.spam_bot, O.spam_scam, O.spam_repeated],
                    type: _.MultipleChoice,
                    value: "spam type"
                },
                q = {
                    getTitle: function(e) {
                        return Object(c.d)("Report {username} for Inappropriate Content", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: R.relevantStatements,
                    items: [O.inappropriate_game, O.gory, O.sexuallyViolent, O.childAnimal, O.pornographic, O.suggestive, O.nudity, O.other],
                    type: _.MultipleChoice,
                    value: "inappropriate content type"
                },
                Q = {
                    getTitle: function(e) {
                        return Object(c.d)("Report {username} for Evading a Ban", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: function() {
                        return Object(c.d)("What kind of ban are they evading?", "ReportModalWizard")
                    },
                    value: "ban type",
                    items: [O.evasion_chat, O.evasion_sitewide, O.evasion_messaging],
                    type: _.MultipleChoice,
                    nextCard: X.banEvasion
                },
                K = {
                    getTitle: function(e) {
                        return Object(c.d)("Report {username} for Impersonation", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: function() {
                        return Object(c.d)("Who is being impersonated?", "ReportModalWizard")
                    },
                    getDescription: function() {
                        return Object(c.d)("Parody, cosplay, and other portrayals without the intent to deceive or defraud are allowed under Twitch's Community Guidelines. If you would still like to submit a report, please continue.", "ReportModalWizard")
                    },
                    items: [O.impersonation_me, O.impersonation_brand, O.impersonation_other],
                    type: _.MultipleChoice,
                    value: "impersonation type"
                },
                Y = L,
                $ = W,
                Z = M,
                J = {
                    video: V.identifyUser,
                    whisper: A,
                    chat: U.content,
                    profile: P.content,
                    room: B,
                    "somewhere else": z.identifyLocation,
                    streamer: V.content,
                    "someone else in video": V.content,
                    "someone in chat": U.content,
                    general_video: V.general,
                    general_messaging: U.general,
                    general_profile: P.general,
                    "channel owner": P.content,
                    "community member": U.content,
                    "on twitch": P.content,
                    "another site": z.externalSite,
                    "twitch event": F.twitchEvent,
                    "brigading/raids": X.socialMedia,
                    threatening: z.external_violence,
                    "hateful/harassing": z.external_abusive,
                    "external site; threatening violence": z.external_violence,
                    "external site; committing violence": z.external_violence,
                    "external site; scam": X.socialMedia,
                    "ban evasion": Q,
                    spam: H,
                    hateful: G.content,
                    impersonation: K,
                    "violence/threats": G.violence,
                    "threatening violence": G.violence,
                    "committing violence": G.violence,
                    abusive: G.content,
                    "inappropriate content": q,
                    "intellectual property": F.legal,
                    "violating developer agreement": F.legal
                },
                ee = {
                    selfharm: F.selfharm,
                    harm: F.violence,
                    other: Z
                },
                te = {
                    CHANNEL_FEED_POST_REPORT: P.content,
                    COMMUNITY_REPORT: P.content,
                    CHAT_REPORT: U.content,
                    CLIP_REPORT: V.content,
                    EVENT_REPORT: P.content,
                    EXTENSION_REPORT: P.content,
                    LIVE_UP_REPORT: P.content,
                    ROOM_REPORT: B,
                    WHISPER_REPORT: A,
                    VOD_COMMENT_REPORT: U.content
                },
                ne = "report-wizard-back",
                ie = "report-wizard-close",
                re = "report-wizard-next",
                oe = "report-wizard-submit",
                ae = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            currentCard: t.props.currentCard || te[t.props.reportContentType] || Y,
                            prevCards: [],
                            currentSelection: null,
                            prevSelections: [],
                            displacedSelections: [],
                            userTextInput: {},
                            error: "",
                            reportReason: t.props.reportReason || "",
                            modalCloseTracked: !1,
                            targetUnknown: !1,
                            reportContext: t.props.reportContentType
                        }, t.renderPrimer = function() {
                            return a.createElement(y.Xa, {
                                margin: {
                                    top: 1
                                }
                            }, a.createElement(y.W, null, Object(c.d)("We are going to ask you a few questions to help us investigate your report quickly and accurately.", "ReportModalWizard")))
                        }, t.renderButtons = function() {
                            var e = Object(c.d)("Close", "ReportModalWizard"),
                                n = t.handleClose,
                                i = ie,
                                r = !1,
                                o = t.state.prevCards.length ? t.renderBack() : null;
                            switch (t.state.currentCard.type) {
                                case _.MultipleChoice:
                                    e = Object(c.d)("Next", "ReportModalWizard"), n = t.handleNext, i = re, r = !t.state.currentSelection;
                                    break;
                                case _.Confirm:
                                    e = Object(c.d)("Submit Report", "ReportModalWizard"), n = t.handleSubmit, r = !t.state.userTextInput, i = oe
                            }
                            return a.createElement(y.Xa, null, o, a.createElement(y.z, {
                                onClick: n,
                                disabled: r,
                                "data-test-selector": i
                            }, a.createElement(y.Xa, {
                                padding: {
                                    x: 1
                                }
                            }, e)))
                        }, t.renderBack = function() {
                            return a.createElement(y.Xa, {
                                margin: {
                                    right: 1
                                },
                                display: y.X.InlineBlock
                            }, a.createElement(y.z, {
                                type: y.F.Hollow,
                                onClick: t.handleBack,
                                "data-test-selector": ne
                            }, a.createElement(y.Xa, {
                                padding: {
                                    x: 1
                                }
                            }, Object(c.d)("Back", "ReportModalWizard"))))
                        }, t.getTitle = function() {
                            return t.state.currentCard.getTitle && t.props.targetUser.displayName && t.props.targetUser.id ? t.state.targetUnknown ? t.state.currentCard.getTitle(Object(c.d)("Another User", "ReportModalWizard")) : t.state.currentCard.getTitle(t.props.targetUser.displayName) : t.state.targetUnknown ? Object(c.d)("Report User", "ReportModalWizard") : t.props.title
                        }, t.handleClose = function() {
                            t.setState({
                                modalCloseTracked: !0
                            }, function() {
                                return t.props.trackClose(x.Finish, t.state.currentCard.value)
                            }), t.props.onClose()
                        }, t.handleNext = function() {
                            if (t.state.currentSelection && t.state.currentSelection.value) {
                                var e = t.state.currentCard,
                                    n = t.state.prevCards.concat(e),
                                    i = t.state.prevSelections.concat(t.state.currentSelection),
                                    r = t.state.displacedSelections[t.state.displacedSelections.length - 1],
                                    o = t.state.currentSelection.differentTarget || t.state.targetUnknown,
                                    a = t.state.currentSelection.reportContext || t.state.reportContext,
                                    s = e.nextCard || $;
                                J[t.state.currentSelection.value] && (s = J[t.state.currentSelection.value]);
                                var l = t.state.currentSelection.reportReason || t.state.reportReason,
                                    c = s.type === _.Info;
                                t.setState({
                                    currentCard: s,
                                    reportReason: l,
                                    prevCards: c ? [] : n,
                                    prevSelections: i,
                                    targetUnknown: o,
                                    currentSelection: r || null,
                                    displacedSelections: t.state.displacedSelections.slice(0, -1),
                                    reportContext: a
                                }, function() {
                                    return t.trackNavigation(I.Next, e.value)
                                })
                            }
                        }, t.createReportDescription = function() {
                            return "" + (t.state.reportContext !== t.props.reportContentType ? "report context: " + t.props.reportContentType + "\n\n" : "") + t.state.prevSelections.map(function(e) {
                                if (!e.omitFromDescription) return e.value
                            }).filter(function(e) {
                                return !!e
                            }).join(" > ") + "\n\n" + Object.keys(t.state.userTextInput).map(function(e) {
                                return e + ": " + t.state.userTextInput[e]
                            }).join("\n")
                        }, t.requiredInputsNonEmpty = function() {
                            if (t.state.currentCard.items) return 0 === t.state.currentCard.items.filter(function(e) {
                                if (e.type !== r.Textarea || !e.required) return !1;
                                var n = t.state.userTextInput[e.value],
                                    i = n && 0 === n.trim().length;
                                return !n || i
                            }).length
                        }, t.handleSubmit = function() {
                            return o.__awaiter(t, void 0, void 0, function() {
                                var e, t, n, i, r = this;
                                return o.__generator(this, function(o) {
                                    switch (o.label) {
                                        case 0:
                                            return e = Object(c.d)("Additional information is required.", "ReportModalWizard"), this.requiredInputsNonEmpty() ? (t = this.state.reportReason || "other", n = this.createReportDescription(), [4, this.props.onSubmit(t, n, this.state.reportContext)]) : [3, 2];
                                        case 1:
                                            switch (o.sent(), this.props.submitStatus) {
                                                case D.a.FormError:
                                                    this.setState({
                                                        error: e
                                                    });
                                                    break;
                                                case D.a.Success:
                                                    i = Z, ee[t] && (i = ee[t]), this.state.currentCard.nextCard && (i = this.state.currentCard.nextCard), this.setState({
                                                        currentCard: i,
                                                        prevCards: [],
                                                        prevSelections: [],
                                                        currentSelection: null,
                                                        displacedSelections: [],
                                                        userTextInput: {},
                                                        error: ""
                                                    }, function() {
                                                        return r.trackNavigation(I.Submit)
                                                    });
                                                    break;
                                                case D.a.UserError:
                                                    this.setState({
                                                        error: Object(c.d)("This account could not be reported. It may have already been suspended, or the owner may have deleted it.", "ReportModalWizard")
                                                    });
                                                    break;
                                                case D.a.MutationError:
                                                default:
                                                    this.setState({
                                                        error: Object(c.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "ReportModalWizard")
                                                    })
                                            }
                                            return [3, 3];
                                        case 2:
                                            this.props.onError(D.a.FormError), this.setState({
                                                error: e
                                            }), o.label = 3;
                                        case 3:
                                            return [2]
                                    }
                                })
                            })
                        }, t.handleBack = function() {
                            return o.__awaiter(t, void 0, void 0, function() {
                                var e, t, n, i, r, a = this;
                                return o.__generator(this, function(o) {
                                    return e = this.state.currentCard, t = this.state.prevCards[this.state.prevCards.length - 1], n = this.state.prevSelections[this.state.prevSelections.length - 1], i = !n.differentTarget && this.state.targetUnknown, r = this.state.displacedSelections, this.state.currentSelection && (r = r.concat(this.state.currentSelection)), t && n && this.setState({
                                        currentCard: t,
                                        currentSelection: n,
                                        displacedSelections: r,
                                        prevCards: this.state.prevCards.slice(0, -1),
                                        prevSelections: this.state.prevSelections.slice(0, -1),
                                        error: "",
                                        targetUnknown: i
                                    }, function() {
                                        return a.trackNavigation(I.Back, e.value)
                                    }), [2]
                                })
                            })
                        }, t.handleTextInput = function(e, n) {
                            var i = t.state.userTextInput;
                            i[e] = n, t.setState({
                                userTextInput: i
                            })
                        }, t.handleSelection = function(e) {
                            if (t.state.currentCard.items && e !== t.state.currentSelection) {
                                var n = t.state.targetUnknown;
                                if (n) n = 0 === t.state.displacedSelections.filter(function(e) {
                                    return e.differentTarget
                                }).length;
                                var i = t.state.reportContext;
                                (t.state.displacedSelections.filter(function(e) {
                                    return e.reportContext
                                }).length || t.state.currentSelection && t.state.currentSelection.reportContext) && (i = t.props.reportContentType), t.setState({
                                    currentSelection: e,
                                    displacedSelections: [],
                                    userTextInput: {},
                                    targetUnknown: n,
                                    reportContext: i
                                })
                            }
                        }, t.trackNavigation = function(e, n) {
                            t.props.trackAction(e, n, t.state.currentCard.value)
                        }, t
                    }
                    return o.__extends(t, e), t.prototype.componentWillUnmount = function() {
                        this.state.modalCloseTracked || this.props.trackClose(x.Close, this.state.currentCard.value)
                    }, t.prototype.render = function() {
                        var e = this.state.currentCard.type === _.Info && this.state.currentCard.blockPrompt ? a.createElement(E, {
                                targetUser: this.props.targetUser,
                                onBlock: this.props.onBlock,
                                onUnblock: this.props.onUnblock,
                                userBlocked: this.props.userBlocked
                            }) : null,
                            t = this.state.error ? a.createElement(y.Eb, {
                                fullWidth: !0,
                                margin: {
                                    bottom: 1
                                },
                                padding: 1,
                                className: "reporting__error-container"
                            }, this.state.error) : null,
                            n = this.state.prevCards.length || this.state.currentCard.type === _.Info ? null : this.renderPrimer();
                        return a.createElement(y.Eb, {
                            className: "reporting-wizard",
                            display: y.X.Flex,
                            margin: {
                                x: 1
                            },
                            flexDirection: y.Aa.Column,
                            fullHeight: !0,
                            "data-test-card-value": this.state.currentCard.value
                        }, t, a.createElement(y.W, {
                            bold: !0,
                            fontSize: y.Ca.Size4
                        }, this.getTitle()), n, a.createElement(y.Xa, {
                            margin: {
                                y: 1
                            }
                        }, a.createElement(T, {
                            currentCard: this.state.currentCard,
                            currentSelection: this.state.currentSelection,
                            targetUser: this.props.targetUser,
                            targetUserID: this.props.targetUser.id,
                            onChangeRadio: this.handleSelection,
                            onChangeText: this.handleTextInput,
                            userTextInputs: this.state.userTextInput,
                            error: this.props.submitStatus === D.a.FormError && !!this.state.error
                        }), e), this.renderButtons())
                    }, t
                }(a.Component),
                se = n("s8Ou"),
                le = n("0hI/");
            n.d(t, "c", function() {
                    return I
                }), n.d(t, "a", function() {
                    return x
                }), n.d(t, "b", function() {
                    return de
                }),
                function(e) {
                    e.Close = "close", e.Open = "open", e.Submit = "submit_report", e.ToggleSettings = "modal_settings"
                }(N || (N = {})),
                function(e) {
                    e.Back = "back", e.Close = "close", e.Open = "open", e.Next = "next", e.Submit = "submit_report", e.ToggleSettings = "modal_settings"
                }(I || (I = {})),
                function(e) {
                    e.Close = "close", e.Finish = "finish"
                }(x || (x = {}));
            var ce = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.handleSubmit = function(e, t, i) {
                        return o.__awaiter(n, void 0, void 0, function() {
                            var n, r, a, s, l = this;
                            return o.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        if (n = i === g.N.WHISPER_REPORT ? i : this.props.reportContext.contentType, r = g.N[n], null === (a = {
                                                description: t,
                                                reason: e,
                                                content: r,
                                                contentID: this.props.reportContext.contentID,
                                                extra: this.props.reportContext.extra,
                                                targetID: this.props.data.targetUser.id
                                            }).targetID) return this.setState({
                                            submitStatus: D.a.UserError
                                        }), [2];
                                        o.label = 1;
                                    case 1:
                                        return o.trys.push([1, 3, , 4]), [4, this.props.reportUser(Object(m.a)(a))];
                                    case 2:
                                        return o.sent(), this.setState({
                                            submitStatus: D.a.Success
                                        }, function() {
                                            l.state.showWizard || l.trackAction(N.Submit)
                                        }), [3, 4];
                                    case 3:
                                        return s = o.sent(), c.k.error(s, "ReportUser Mutation failed."), this.setState({
                                            submitStatus: D.a.MutationError
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, n.handleChildError = function(e) {
                        return n.setState({
                            submitStatus: e
                        })
                    }, n.handleClose = function() {
                        n.props.onClose && n.props.onClose(n.state.submitStatus, n.state.userBlocked)
                    }, n.onBlock = function() {
                        n.props.blockUserMutation(n.props.data.targetUser.id, void 0, void 0, o.__assign({}, n.props.sessionUser, {
                            __typename: "User"
                        })), n.setState({
                            userBlocked: !0
                        })
                    }, n.onUnblock = function() {
                        n.props.unblockUserMutation(n.props.data.targetUser.id, o.__assign({}, n.props.sessionUser, {
                            __typename: "User"
                        })), n.setState({
                            userBlocked: !1
                        })
                    }, n.trackOpen = function(e) {
                        n.state.openEventSent || (n.state.showWizard ? n.trackWizardAction(I.Open, void 0, e) : n.trackAction(N.Open), n.setState({
                            openEventSent: !0
                        }))
                    }, n.trackClose = function(e, t) {
                        n.state.closeEventSent || (n.state.showWizard ? n.trackWizardAction(I.Close, t, void 0, e) : n.trackAction(N.Close), n.setState({
                            closeEventSent: !0
                        }))
                    }, n.trackWizardAction = function(e, t, i, r) {
                        c.p.tracking.track(v.SpadeEventType.ReportWizardFlowAction, {
                            ui_context: n.props.reportContext.contentType,
                            target_user_id: n.props.reportContext.targetUserID,
                            report_sent: n.state.submitStatus === D.a.Success,
                            modal_type: "wizard_v1",
                            extra_user_id: n.props.reportContext.additionalTrackingID,
                            action: e,
                            close_type: r,
                            report_session_id: n.reportID,
                            current_step: t,
                            navigated_to: i
                        })
                    }, n.trackAction = function(e) {
                        c.p.tracking.track(v.SpadeEventType.ReportFlowAction, {
                            ui_context: n.props.reportContext.contentType,
                            target_user_id: n.props.reportContext.targetUserID,
                            report_sent: n.state.submitStatus === D.a.Success,
                            extra_user_id: n.props.reportContext.additionalTrackingID,
                            action: e,
                            report_session_id: n.reportID
                        })
                    }, n.reportID = Object(h.a)();
                    var i = c.p.experiments.getAssignment(f.b.NewReportingWizard);
                    return n.state = {
                        submitStatus: D.a.Unsubmitted,
                        showWizard: "yes" === i,
                        openEventSent: !1,
                        closeEventSent: !1,
                        userBlocked: !1
                    }, n
                }
                return o.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.trackOpen()
                }, t.prototype.componentWillUnmount = function() {
                    this.handleClose(), this.state.showWizard || this.trackClose()
                }, t.prototype.render = function() {
                    if (this.props.data.error) return a.createElement(y.Xa, {
                        margin: {
                            bottom: 1
                        }
                    }, a.createElement(y.W, {
                        fontSize: y.Ca.Size5
                    }, Object(c.d)("There was an unexpected error. Please refresh the page and try again", "ReportUser")));
                    if (this.props.data.loading) return a.createElement(y.ib, {
                        lineCount: 3
                    });
                    if (this.props.data.targetUser) {
                        var e = {
                            onClose: this.handleClose,
                            onError: this.handleChildError,
                            onSubmit: this.handleSubmit,
                            reportContentType: this.props.reportContext.contentType,
                            submitStatus: this.state.submitStatus,
                            title: this.props.title,
                            defaultDescription: this.props.defaultDescription
                        };
                        return this.state.showWizard ? this.props.data.loading ? a.createElement(y.Za, null) : a.createElement(ae, o.__assign({}, e, {
                            user: this.props.sessionUser,
                            onBlock: this.onBlock,
                            onUnblock: this.onUnblock,
                            targetUser: this.props.data.targetUser,
                            trackAction: this.trackWizardAction,
                            trackClose: this.trackClose,
                            userBlocked: this.userBlocked
                        })) : a.createElement(D.b, o.__assign({}, e, {
                            targetUser: this.props.data.targetUser
                        }))
                    }
                    return a.createElement(y.Xa, {
                        margin: {
                            bottom: 1
                        }
                    }, a.createElement(y.W, {
                        fontSize: y.Ca.Size5
                    }, Object(c.d)("The user you are trying to report does not exist", "ReportUser")))
                }, Object.defineProperty(t.prototype, "userBlocked", {
                    get: function() {
                        var e = this;
                        return !!(this.props.data.currentUser && this.props.data.currentUser.blockedUsers && this.props.data.currentUser.blockedUsers.find(function(t) {
                            return !!t && t.id === e.props.reportContext.targetUserID
                        }))
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(a.Component);
            var de = Object(l.compose)(Object(d.a)(se, {
                name: "reportUser"
            }), Object(d.a)(le, {
                options: function(e) {
                    return {
                        variables: {
                            targetUserID: e.reportContext.targetUserID
                        }
                    }
                }
            }), Object(b.b)("ReportUser", {
                autoReportInteractive: !0
            }), Object(u.a)(), Object(p.a)(), Object(s.connect)(function(e) {
                return {
                    sessionUser: e.session.user
                }
            }, null))(ce)
        },
        dIEm: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("oJmH"),
                a = n("/7QA"),
                s = n("yR8l"),
                l = n("2xye"),
                c = n("GnwI"),
                d = n("hkkJ"),
                u = n("wo0O"),
                p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (this.props.data.error) return null;
                        if (!(this.props.data.loading || this.props.data.user && this.props.data.user.collections)) return null;
                        var e = null;
                        if (this.props.data && this.props.data.user && this.props.data.user.collections) {
                            var t = this.props.data.user.collections.edges;
                            if (0 === t.length) return null;
                            e = t[0].node
                        }
                        return r.createElement(d.a, {
                            collection: e,
                            fallbackTitle: Object(a.d)("Latest Collection", "LatestCollectionCarousel"),
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.LatestCollection,
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location,
                                source: {
                                    source_channel: this.props.creatorLogin,
                                    source_item_type: l.TwitchDataType.Channel
                                },
                                itemType: l.TwitchDataType.Video
                            },
                            userCanEdit: !1
                        })
                    }, t.prototype.componentDidUpdate = function(e) {
                        e.data.loading && !this.props.data.loading && this.props.latencyTracking.reportInteractive()
                    }, t
                }(r.Component),
                m = Object(o.compose)(Object(s.a)(u), Object(c.b)("LatestCollectionCarousel"))(p),
                h = n("YBPT"),
                f = n("GFmA"),
                g = n("6h5w"),
                v = n("eqgM"),
                b = n("XEwr"),
                k = n("GG88"),
                y = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (this.props.noGameSpecified) return null;
                        var e = this.props.data && !this.props.data.loading && this.props.data.game && Object(b.b)(this.props.data.game.videos) || null;
                        return !this.props.data || this.props.data.loading || e && 0 !== e.length ? r.createElement("div", null, r.createElement(g.a, {
                            titleMessage: this.props.gameName ? Object(a.d)("Popular videos from {game}", {
                                game: this.props.gameName
                            }, "PopularVideosByGameCarousel") : null
                        }), r.createElement(v.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: f.b.SingleGameList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.PopularVideos,
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location,
                                source: {
                                    source_item_type: l.TwitchDataType.Game,
                                    source_game: this.props.gameName || void 0
                                },
                                itemType: l.TwitchDataType.Video
                            },
                            videos: e
                        })) : null
                    }, t
                }(r.Component),
                C = Object(o.compose)(Object(c.b)("PopularVideosByGameCarousel", {
                    autoReportInteractive: !0
                }), Object(s.a)(k, {
                    skip: function(e) {
                        return !e.gameName
                    }
                }))(y),
                S = n("N+yD"),
                E = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = null;
                        return !this.props.data || this.props.data.loading || this.props.data.videos ? this.props.data && this.props.data.videos && 0 === (e = Object(b.b)(this.props.data.videos)).length ? null : r.createElement("div", null, r.createElement(g.a, {
                            titleMessage: Object(a.d)("Popular Videos On Twitch", "PopularVideosCarousel")
                        }), r.createElement(v.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: f.b.MixedGameAndChannelList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.PopularOverallVideos,
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location,
                                source: {},
                                itemType: l.TwitchDataType.Video
                            },
                            videos: e
                        })) : null
                    }, t = i.__decorate([Object(c.b)("PopularVideosCarousel", {
                        autoReportInteractive: !0
                    }), Object(s.a)(S)], t)
                }(r.Component),
                _ = n("TQ+e"),
                w = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (this.props.data && (this.props.data.error || !this.props.data.user)) return null;
                        var e = !this.props.data || this.props.data.loading ? null : Object(b.b)(this.props.data.user.videos);
                        return e && 0 === e.length ? null : r.createElement("div", null, r.createElement(g.a, {
                            titleMessage: this.props.creatorDisplayName ? Object(a.d)("Recent videos from {displayName}", {
                                displayName: this.props.creatorDisplayName
                            }, "RecentCreatorVideosFromUserCarousel") : null
                        }), r.createElement(v.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: f.b.SingleChannelList,
                            videos: e,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.RecentVideos,
                                location: this.props.tracking.location,
                                medium: this.props.tracking.medium,
                                source: {
                                    source_item_type: l.TwitchDataType.Channel,
                                    source_channel: this.props.data ? this.props.data.user.login : ""
                                },
                                itemType: l.TwitchDataType.Video
                            }
                        }))
                    }, t
                }(r.Component),
                O = Object(o.compose)(Object(c.b)("RecentCreatorVideosCarousel", {
                    autoReportInteractive: !0
                }), Object(s.a)(_, {
                    skip: function(e) {
                        return !e.creatorID
                    }
                }))(w),
                T = n("/MKj"),
                D = n("kRBY"),
                N = n("0NVZ"),
                I = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (!this.props.isLoggedIn || !this.props.data || this.props.data.error) return null;
                        var e = this.props.data && this.props.data.currentUser && this.props.data.currentUser.recommendations && Object(b.b)(this.props.data.currentUser.recommendations.videos) || null;
                        if (this.props.data && !this.props.data.loading && (!e || 0 === e.length)) return null;
                        var t = this.props.data.currentUser ? this.props.data.currentUser.login : "";
                        return r.createElement("div", null, r.createElement(g.a, {
                            titleMessage: Object(a.d)("Based On Your Viewing History", "RecommendedVideoCarousel")
                        }), r.createElement(v.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: f.b.MixedGameAndChannelList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.RecommendedVideos,
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location,
                                source: {
                                    source_item_type: l.TwitchDataType.User,
                                    source_channel: t
                                },
                                itemType: l.TwitchDataType.Video
                            },
                            videos: e
                        }))
                    }, t
                }(r.Component),
                x = Object(o.compose)(Object(c.b)("RecommendedVideoCarousel", {
                    autoReportInteractive: !0
                }), Object(s.a)(N, {
                    skip: function(e) {
                        return !e.isLoggedIn
                    }
                }))(I);
            var R = Object(T.connect)(function(e) {
                    return {
                        isLoggedIn: Object(D.f)(e)
                    }
                })(x),
                j = n("NAv5"),
                M = n("fvjX"),
                F = n("fena"),
                L = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        if (!this.props.isLoggedIn || !this.props.data || this.props.data.error) return null;
                        var e = this.props.data && this.props.data.currentUser && Object(b.b)(this.props.data.currentUser.viewedVideos) || null;
                        if (!(!this.props.data || this.props.data.loading || e && 0 !== e.length)) return null;
                        e = function(e) {
                            return e.filter(function(e) {
                                if (!e.self || !e.self.viewingHistory || !e.self.viewingHistory.position) return !1;
                                var t = e.self.viewingHistory.position,
                                    n = t / (e.lengthSeconds || 1 / 0);
                                return !(n <= .05 || n >= .95)
                            }).sort(function(e, t) {
                                return Object(j.compareDesc)(new Date(e.publishedAt || 0), new Date(t.publishedAt || 0))
                            })
                        }(e || []);
                        var t = this.props.data.currentUser ? this.props.data.currentUser.login : "";
                        return r.createElement("div", null, r.createElement(g.a, {
                            titleMessage: Object(a.d)("Finish Watching", "ResumeWatchingVideoCarousel")
                        }), r.createElement(v.a, {
                            currentlyWatchingVideoID: this.props.currentlyWatchingVideoID,
                            listContext: f.b.MixedGameAndChannelList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            tracking: {
                                content: l.PageviewContent.ResumeWatchingVideos,
                                location: this.props.tracking.location,
                                medium: this.props.tracking.medium,
                                source: {
                                    source_item_type: l.TwitchDataType.User,
                                    source_channel: t
                                },
                                itemType: l.TwitchDataType.Video
                            },
                            videos: e
                        }))
                    }, t
                }(r.Component);
            var V = Object(M.compose)(Object(s.a)(F, {
                skip: function(e) {
                    return !e.isLoggedIn
                }
            }), Object(c.b)("ResumeWatchingVideoCarousel", {
                autoReportInteractive: !0
            }))(L);
            var U = Object(T.connect)(function(e) {
                    return {
                        isLoggedIn: Object(D.f)(e)
                    }
                })(V),
                A = n("7g+E");
            n.d(t, "a", function() {
                return m
            }), n.d(t, !1, function() {
                return h.LatestVideosFromFollowedCarousel
            }), n.d(t, "b", function() {
                return C
            }), n.d(t, "c", function() {
                return E
            }), n.d(t, "d", function() {
                return O
            }), n.d(t, "e", function() {
                return R
            }), n.d(t, "f", function() {
                return U
            }), n.d(t, !1, function() {
                return A.a
            })
        },
        efEE: function(e, t, n) {},
        ehEd: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return o
            });
            var i = "https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_150x150.png",
                r = function(e) {
                    return "https://static-cdn.jtvnw.net/emoticons/v1/" + e + "/1.0"
                },
                o = function(e) {
                    return "https://static-cdn.jtvnw.net/emoticons/v1/" + e + "/2.0 2x"
                }
        },
        eqgM: function(e, t, n) {
            "use strict";
            var i, r, o = n("/MKj"),
                a = n("mrSG"),
                s = n("q1tI"),
                l = n("/7QA"),
                c = n("GnwI"),
                d = n("TSYQ"),
                u = n("17x9"),
                p = n("Ue10");
            n("A7Y/");
            var m = "carousel-content",
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            currentElementIndex: 0,
                            hasBeenVisible: !1
                        }, t.moveCarouselToCardIndex = function(e) {
                            if (t.props.children && !(t.props.children.length <= 1)) {
                                var n = t.getNumberOfVisibleElements();
                                t.props.children.length < n || (e < t.props.children.length && e > t.props.children.length - n ? t.setState({
                                    currentElementIndex: t.props.children.length - n
                                }) : t.setState({
                                    currentElementIndex: e
                                }))
                            }
                        }, t.moveCarouselForward = function() {
                            if (!t.isForwardButtonDisabled() && t.props.children) {
                                var e = t.getNumberOfVisibleElements();
                                t.state.currentElementIndex + 2 * e > t.props.children.length ? t.setState({
                                    currentElementIndex: t.props.children.length - e
                                }) : t.setState({
                                    currentElementIndex: t.state.currentElementIndex + e
                                })
                            }
                        }, t.moveCarouselBackward = function() {
                            if (!t.isBackButtonDisabled()) {
                                var e = t.getNumberOfVisibleElements();
                                t.setState({
                                    currentElementIndex: Math.max(t.state.currentElementIndex - e, 0)
                                })
                            }
                        }, t.isForwardButtonDisabled = function() {
                            if (!t.carouselContainerRef) return !1;
                            if (t.props.children) {
                                var e = 0,
                                    n = t.carouselContainerRef.querySelector("[data-js-selector=" + m + "]");
                                return n && (e = n.childElementCount), t.getLastVisibleIndex() >= e
                            }
                            return !0
                        }, t.isBackButtonDisabled = function() {
                            return 0 === t.state.currentElementIndex
                        }, t.getLastVisibleIndex = function() {
                            return t.state.currentElementIndex + t.getNumberOfVisibleElements()
                        }, t.getNumberOfVisibleElements = function() {
                            var e = t.carouselContainerRef.getBoundingClientRect(),
                                n = e.left,
                                i = e.right - n,
                                r = t.getVideoCardEndPadding();
                            return Math.floor((i + r) / t.getChildWidth())
                        }, t.refHandler = function(e) {
                            return t.carouselContainerRef = e
                        }, t.getChildWidth = function() {
                            if (!t.carouselContainerRef) return 0;
                            var e = t.carouselContainerRef.querySelector("[data-js-selector=" + m + "]");
                            return e && e.children.length ? e.children[0].getBoundingClientRect().width : 0
                        }, t.getVideoCardEndPadding = function() {
                            var e = t.carouselContainerRef.querySelector("[data-js-selector=" + m + "]");
                            if (!e || 0 === e.children.length) return 0;
                            var n = window.getComputedStyle(e.children[0]).paddingRight || "";
                            return 2 * parseInt(n, 10) || 0
                        }, t.pixelOffset = function() {
                            return t.getChildWidth() * t.state.currentElementIndex * -1
                        }, t.transformString = function() {
                            return "translate3d(" + t.pixelOffset() + "px, 0px, 0px)"
                        }, t
                    }
                    return a.__extends(t, e), t.prototype.componentDidMount = function() {
                        var e = this.context.registerReceiver;
                        e && (this.unregisterScrollHandler = e(this)), null !== this.props.children && this.checkVisible()
                    }, t.prototype.componentDidUpdate = function(e) {
                        null === e.children && null !== this.props.children && this.checkVisible(), (!e.options && this.props.options || e.options && this.props.options && this.props.options.videoIndex !== e.options.videoIndex) && this.moveCarouselToCardIndex(this.props.options.videoIndex)
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregisterScrollHandler && this.unregisterScrollHandler()
                    }, t.prototype.render = function() {
                        return s.createElement(p.Pa, {
                            margin: {
                                y: 1
                            },
                            position: p.jb.Relative
                        }, s.createElement("div", {
                            className: "preview-card-carousel",
                            ref: this.refHandler
                        }, s.createElement(p.Xa, {
                            className: "preview-card-carousel__child-container",
                            overflow: p.cb.Hidden,
                            position: p.jb.Relative,
                            fullWidth: !0,
                            "data-test-selector": "child-container"
                        }, s.createElement(p.Pa, {
                            margin: {
                                bottom: 1
                            }
                        }, s.createElement("div", {
                            className: "preview-card-carousel__body",
                            style: {
                                transform: this.transformString()
                            },
                            "data-test-selector": "carousel-body"
                        }, s.createElement(p.bc, {
                            noWrap: !0,
                            noGrow: !0,
                            childWidth: this.props.cardWidth || p.cc.Large,
                            gutterSize: p.dc.Small,
                            "data-js-selector": m
                        }, this.props.children)))), s.createElement(p.Xa, {
                            className: "preview-card-carousel__nav",
                            display: p.X.Flex,
                            alignItems: p.f.Center,
                            position: p.jb.Absolute,
                            attachTop: !0,
                            attachLeft: !0,
                            fullHeight: !0
                        }, s.createElement(b, {
                            direction: f.DirectionPrevious,
                            disabled: !this.props.children || this.isBackButtonDisabled(),
                            onClickHandler: this.moveCarouselBackward
                        })), s.createElement(p.Xa, {
                            className: "preview-card-carousel__nav",
                            display: p.X.Flex,
                            alignItems: p.f.Center,
                            position: p.jb.Absolute,
                            attachTop: !0,
                            attachRight: !0,
                            fullHeight: !0
                        }, s.createElement(b, {
                            direction: f.DirectionNext,
                            disabled: !this.props.children || this.isForwardButtonDisabled(),
                            onClickHandler: this.moveCarouselForward
                        }))))
                    }, t.prototype.checkVisible = function(e) {
                        this.props.children && this.props.children.length > 0 && !this.state.hasBeenVisible && function(e) {
                            if (!e) return !1;
                            var t = e.getBoundingClientRect(),
                                n = window.innerWidth,
                                i = window.innerHeight;
                            return !(t.right < 0 || t.bottom < 0 || t.left > n || t.top > i)
                        }(this.carouselContainerRef) && this.props.onFirstVisible()
                    }, t.contextTypes = {
                        registerReceiver: u.func
                    }, t
                }(s.Component),
                f = {
                    DirectionPrevious: "previous",
                    DirectionNext: "next"
                },
                g = ((i = {})[f.DirectionPrevious] = "previous", i[f.DirectionNext] = "next", i),
                v = ((r = {})[f.DirectionPrevious] = p.tb.AngleLeft, r[f.DirectionNext] = p.tb.AngleRight, r),
                b = function(e) {
                    var t, n = g[e.direction],
                        i = ((t = {})[f.DirectionPrevious] = Object(l.d)("previous", "CarouselNavButton"), t[f.DirectionNext] = Object(l.d)("next", "CarouselNavButton"), t),
                        r = d("preview-card-carousel__button", "preview-card-carousel__button--" + n, {
                            "preview-card-carousel__button--disabled": e.disabled
                        });
                    return s.createElement(p.Xa, {
                        className: r,
                        position: p.jb.Relative,
                        display: p.X.Flex,
                        alignItems: p.f.Stretch
                    }, s.createElement(p.A, {
                        ariaLabel: i[e.direction],
                        blurAfterClick: !0,
                        "data-test-selector": n + "-button",
                        disabled: e.disabled,
                        icon: v[e.direction],
                        onClick: e.onClickHandler,
                        size: p.B.Large
                    }))
                },
                k = n("bdIb"),
                y = n("XEwr"),
                C = n("RXle"),
                S = 10,
                E = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasTrackedItemSectionLoad: !1
                        }, t.handleFirstVisible = function() {
                            if (!t.state.hasTrackedItemSectionLoad) {
                                for (var e = t.props.videos ? t.props.videos : [], n = [], i = [], r = 0, o = e; r < o.length; r++) {
                                    var s = o[r];
                                    n.push(s.id), i.push(s.viewCount || 0)
                                }
                                l.o.trackItemSectionLoad(a.__assign({
                                    carousel_content: t.props.tracking.content,
                                    location: t.props.tracking.location,
                                    rendered_item_count: e.length,
                                    rendered_item_list: n,
                                    rendered_item_types: [t.props.tracking.itemType],
                                    rendered_items_viewcounts: i
                                }, t.props.tracking.source)), t.setState({
                                    hasTrackedItemSectionLoad: !0
                                })
                            }
                        }, t.onPreviewCardClick = function(e) {
                            if (t.props.videos) {
                                var n = t.props.videos[e];
                                l.o.trackItemSectionClick(a.__assign({
                                    carousel_content: t.props.tracking.content,
                                    item_id: n.id,
                                    item_index: e,
                                    item_type: t.props.tracking.itemType,
                                    item_viewcount: n.viewCount,
                                    location: t.props.tracking.location
                                }, t.props.tracking.source)), t.props.scrollToCurrentlyWatching && t.props.videos.length > 0 && t.setCarouselOptions({
                                    videoIndex: e
                                })
                            }
                        }, t.setCarouselOptions = function(e) {
                            t.props.videos && t.props.videos.length > 0 && t.setState({
                                scrollToOptions: e
                            })
                        }, t.getCurrentlyWatchingVideoIndex = function() {
                            var e = 0;
                            if (t.props.videos && t.props.videos.length > 0)
                                for (var n = 0; n < t.props.videos.length; n++) {
                                    if (t.props.videos[n].id === t.props.currentlyWatchingVideoID) {
                                        e = n;
                                        break
                                    }
                                }
                            return e
                        }, t.getVideoCards = function() {
                            var e = t.props.videos;
                            if (null === e) {
                                for (var n = [], i = 0; i < S; i++) n.push(s.createElement(C.VideoPreviewCardPlaceholder, {
                                    key: "carousel-placeholder-" + i
                                }));
                                return n
                            }
                            var r = [];
                            if (t.props.spotlight) {
                                var o = s.createElement(C.VideoPreviewCard, {
                                    key: "spotlight",
                                    collectionID: t.props.collectionID,
                                    topBar: {
                                        title: t.props.spotlight.title,
                                        subTitle: t.props.spotlight.subTitle
                                    },
                                    context: t.props.listContext,
                                    tracking: {
                                        content: t.props.tracking.content,
                                        content_index: r.length,
                                        medium: t.props.tracking.medium
                                    },
                                    video: t.props.spotlight.card,
                                    hideTags: t.props.hideTags
                                });
                                r.push(o)
                            }
                            var a = r.length;
                            if (t.props.currentlyWatchingVideoID && t.props.renderCurrentlyWatchingCard && t.props.scrollToCurrentlyWatching)
                                for (var l = t.getCurrentlyWatchingVideoIndex(), c = 0; c < e.length; c++) {
                                    var d = e[c];
                                    t.props.firstPageLoaded || !(c < l || c > l + S) ? Object(y.a)(d) || r.push(s.createElement(C.VideoPreviewCard, {
                                        context: t.props.listContext,
                                        collectionID: t.props.collectionID,
                                        onClick: t.onPreviewCardClick,
                                        key: "video-" + c,
                                        tracking: {
                                            content: t.props.tracking.content,
                                            content_index: c,
                                            medium: t.props.tracking.medium
                                        },
                                        video: d,
                                        multipleVideoGameMarkersType: t.props.multipleVideoGameMarkersType,
                                        listPosition: t.getPositionLabel(c),
                                        topBar: t.getPositionBanner(c),
                                        hideDuration: t.willRenderPositionBanner(c),
                                        hideTags: t.props.hideTags
                                    })) : r.push(s.createElement(C.VideoPreviewCardPlaceholder, {
                                        key: "carousel-placeholder-" + c
                                    }))
                                } else
                                    for (c = 0; c < e.length; c++)
                                        if (c + a < S || t.props.firstPageLoaded) {
                                            d = e[c];
                                            if (Object(y.a)(d)) {
                                                if (d.slug === t.props.currentlyWatchingVideoID) continue;
                                                r.push(s.createElement(k.a, {
                                                    context: t.props.listContext,
                                                    onClick: t.onPreviewCardClick,
                                                    key: "video-" + c,
                                                    tracking: {
                                                        content: t.props.tracking.content,
                                                        content_index: a + c,
                                                        medium: t.props.tracking.medium
                                                    },
                                                    clip: d
                                                }))
                                            } else {
                                                if (d.id === t.props.currentlyWatchingVideoID && !t.props.renderCurrentlyWatchingCard) continue;
                                                r.push(s.createElement(C.VideoPreviewCard, {
                                                    context: t.props.listContext,
                                                    collectionID: t.props.collectionID,
                                                    onClick: t.onPreviewCardClick,
                                                    key: "video-" + c,
                                                    tracking: {
                                                        content: t.props.tracking.content,
                                                        content_index: a + c,
                                                        medium: t.props.tracking.medium
                                                    },
                                                    video: d,
                                                    multipleVideoGameMarkersType: t.props.multipleVideoGameMarkersType,
                                                    listPosition: t.getPositionLabel(c),
                                                    topBar: t.getPositionBanner(c),
                                                    hideDuration: t.willRenderPositionBanner(c),
                                                    hideTags: t.props.hideTags
                                                }))
                                            }
                                        } else r.push(s.createElement(C.VideoPreviewCardPlaceholder, {
                                            key: "carousel-placeholder-" + c
                                        }));
                            return r
                        }, t.getPositionBanner = function(e) {
                            if (t.props.renderPositionBanner && t.props.renderCurrentlyWatchingCard && t.props.videos) {
                                var n = t.getCurrentlyWatchingVideoIndex(),
                                    i = e === n,
                                    r = e === n + 1,
                                    o = Object(l.d)("{totalVideos, plural, one {{position} / # video} other {{position} / # videos}}", {
                                        position: e + 1,
                                        totalVideos: t.props.videos.length
                                    }, "VideoCarousel");
                                return i ? {
                                    title: Object(l.d)("Now playing", "VideoCarousel"),
                                    subTitle: o,
                                    selected: !0
                                } : r ? {
                                    title: Object(l.d)("Up next", "VideoCarousel"),
                                    subTitle: o
                                } : void 0
                            }
                        }, t.willRenderPositionBanner = function(e) {
                            if (!t.props.renderPositionBanner || !t.props.videos) return !1;
                            var n = t.getCurrentlyWatchingVideoIndex();
                            return e === n || e === n + 1
                        }, t.getPositionLabel = function(e) {
                            if (t.props.renderPositionLabel && !t.willRenderPositionBanner(e) && t.props.videos) return {
                                position: e + 1,
                                totalVideos: t.props.videos.length
                            }
                        }, t
                    }
                    return a.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.videos && this.props.scrollToCurrentlyWatching && this.props.currentlyWatchingVideoID && !this.state.scrollToOptions && this.setCarouselOptions({
                            videoIndex: this.getCurrentlyWatchingVideoIndex()
                        })
                    }, t.prototype.componentDidUpdate = function(e) {
                        null === e.videos && null !== this.props.videos && this.props.scrollToCurrentlyWatching && this.props.currentlyWatchingVideoID ? this.setCarouselOptions({
                            videoIndex: this.getCurrentlyWatchingVideoIndex()
                        }) : this.props.videos && this.props.scrollToCurrentlyWatching && this.props.currentlyWatchingVideoID !== e.currentlyWatchingVideoID && this.setCarouselOptions({
                            videoIndex: this.getCurrentlyWatchingVideoIndex()
                        })
                    }, t.prototype.render = function() {
                        return s.createElement(h, {
                            options: this.state.scrollToOptions,
                            cardWidth: this.props.videoCardSize,
                            onFirstVisible: this.handleFirstVisible
                        }, this.getVideoCards())
                    }, t
                }(s.Component),
                _ = Object(c.b)("VideoCarousel", {
                    autoReportInteractive: !0
                })(E);
            n.d(t, "a", function() {
                return w
            });
            var w = Object(o.connect)(function(e) {
                return {
                    firstPageLoaded: e.session.firstPageLoaded
                }
            })(_)
        },
        f3GI: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return f
            }), n.d(t, "a", function() {
                return v
            });
            var i = n("mrSG"),
                r = n("TSYQ"),
                o = n("17x9"),
                a = n("q1tI"),
                s = n("wIs1"),
                l = n("N0BP"),
                c = n("zxEZ"),
                d = n("Bh3T"),
                u = n("JoTo"),
                p = n("cnlr"),
                m = n("sSlw"),
                h = n("Ue10"),
                f = (n("b7X6"), "channel-page-layout__scroll-area--theatre-mode"),
                g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e, t = r(((e = {})[f] = !!this.props.theatreMode, e));
                        return a.createElement(h.Xa, i.__assign({
                            className: "channel-page-layout",
                            display: h.X.Flex,
                            flexDirection: h.Aa.Column,
                            flexWrap: h.Ba.NoWrap,
                            fullHeight: !0
                        }, Object(l.a)(this.props)), a.createElement(d.b, {
                            className: t,
                            suppressScrollX: !0,
                            addPaddingWhenPlayerIsPersisting: !0
                        }), a.createElement(u.a, null, a.createElement(p.a, {
                            channelLogin: this.props.ownerLogin
                        })), a.createElement(m.a, null, a.createElement(c.a, {
                            currentPage: this.props.currentPage,
                            channelLogin: this.props.ownerLogin,
                            channelIsHosting: this.props.channelIsHosting
                        })), a.createElement(h.Xa, {
                            padding: {
                                top: 2,
                                x: 3
                            }
                        }, this.props.children))
                    }, t.contextTypes = {
                        scrollToTop: o.func
                    }, t
                }(a.Component),
                v = Object(s.a)(g)
        },
        fCiU: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            });
            var i = n("p52R"),
                r = /^[\x00-\x7F]*$/,
                o = function(e) {
                    return !r.test(e)
                },
                a = function(e) {
                    return o(e.displayName) ? e.displayName + " (" + e.name + ")" : e.displayName
                },
                s = function(e, t) {
                    return {
                        userID: e.id,
                        userDisplayName: e.displayName,
                        userType: i.a.User,
                        isIntl: o(e.displayName),
                        userLogin: e.name,
                        color: t
                    }
                }
        },
        fI4C: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return m
            }), n.d(t, "d", function() {
                return h
            }), n.d(t, "b", function() {
                return f
            }), n.d(t, "a", function() {
                return g
            }), n.d(t, "m", function() {
                return v
            }), n.d(t, "l", function() {
                return b
            }), n.d(t, "f", function() {
                return k
            }), n.d(t, "g", function() {
                return y
            }), n.d(t, "e", function() {
                return C
            }), n.d(t, "i", function() {
                return S
            }), n.d(t, "h", function() {
                return E
            }), n.d(t, "j", function() {
                return _
            }), n.d(t, "k", function() {
                return w
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("vRsq"),
                a = n("2xye"),
                s = n("L9xt"),
                l = n("I6K6"),
                c = n("ahza"),
                d = n("DpwM"),
                u = n("BQs+"),
                p = n("CJLt"),
                m = "replay_mode",
                h = "timestamp_mode",
                f = "on",
                g = "off",
                v = function(e) {
                    r.o.track(s.SpadeEventType.VideoChatSettingChanged, e)
                },
                b = function(e, t) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var n, c, d, m;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, r.p.apollo.client.query({
                                        query: p,
                                        variables: {
                                            videoCreatorID: e.channelId,
                                            videoID: e.contentId
                                        }
                                    })];
                                case 1:
                                    return n = i.sent().data, c = {
                                        channel: n.video.owner.login,
                                        channel_id: Number(e.channelId),
                                        game: n.video.game ? n.video.game.name : null,
                                        location: a.PageviewLocation.VideoWatchPage,
                                        share_platform: u.a.Link,
                                        share_context: a.ShareItemContext.Chomment,
                                        shared_item_id: Object(o.p)(e.contentId),
                                        shared_item_type: Object(l.a)(n.video.broadcastType),
                                        shared_item_url: t.toString(),
                                        partner: n.video.owner.roles.isPartner,
                                        source_item_id: e.id,
                                        source_item_type: a.SourceItemType.Chomment
                                    }, d = O(e, n, u.a.Link), r.o.track(s.SpadeEventType.ChommentUIAction, d), r.o.track(s.SpadeEventType.ShareItem, c), [3, 3];
                                case 2:
                                    return m = i.sent(), r.k.error(m.toString(), b.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                k = function(e, t) {
                    var n = e.users[0],
                        i = e.comments[0];
                    return {
                        channel: t.user.login,
                        channel_id: Number(i.channelId),
                        comment_id: i.id,
                        comment_state: i.state,
                        event_source: "frontend",
                        game: t.video.game ? t.video.game.name : null,
                        login: n.name,
                        play_session_id: r.o.getVideoPlayerTrackingData().playSessionID,
                        reply_to_comment_id: Object(d.h)(i) ? i.parentId : null,
                        user_id: Number(n.id),
                        vod_id: Number(i.contentId),
                        vod_title: t.video.title,
                        vod_ts: i.contentOffset,
                        vod_type: Object(l.a)(t.video.broadcastType)
                    }
                },
                y = function(e, t, n) {
                    return {
                        author_id: Number(e.comment.commenter),
                        author_login: n.users[1].login,
                        channel: n.users[0].login,
                        channel_id: Number(e.comment.channelId),
                        comment_id: e.comment.id,
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user.login,
                        user_id: Number(t.session.user.id),
                        vod_id: Number(e.comment.contentId),
                        vod_title: n.video.title,
                        vod_type: Object(l.a)(n.video.broadcastType),
                        vod_ts: e.comment.contentOffset
                    }
                },
                C = function(e, t, n) {
                    return {
                        action: "ban_user",
                        author_id: Number(e.bannedUser),
                        channel_id: Number(e.targetChannel),
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user.login,
                        target_user_id: Number(e.bannedUser),
                        user_id: Number(t.session.user.id),
                        vod_id: Number(n.video.id),
                        vod_title: n.video.title,
                        vod_type: Object(l.a)(n.video.broadcastType),
                        vod_ts: e.comment.contentOffset
                    }
                },
                S = function(e, t, n) {
                    return {
                        action: "delete",
                        author_id: Number(e.commenter),
                        author_login: n.users[1].login,
                        channel: n.users[0].login,
                        channel_id: Number(e.channelId),
                        comment_id: e.id,
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user.login,
                        reply_to_comment_id: e.parentId ? e.parentId : null,
                        user_id: Number(t.session.user.id),
                        vod_id: Number(e.contentId),
                        vod_title: n.video.title,
                        vod_type: Object(l.a)(n.video.broadcastType),
                        vod_ts: e.contentOffset
                    }
                },
                E = function(e, t, n) {
                    var i = null,
                        r = Object.keys(t.vodChat.comments.comments.parentComments);
                    if (r.length > 0) {
                        var o = r[0];
                        i = t.vodChat.comments.comments.parentComments[o].channelId
                    }
                    return {
                        action: "create",
                        channel_id: i ? Number(i) : null,
                        comment_body: e.message,
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user ? t.session.user.login : null,
                        reply_to_comment_id: Object(c.e)(e) ? e.parentId : null,
                        user_id: t.session.user ? Number(t.session.user.id) : null,
                        vod_id: Number(n.video.id),
                        vod_title: n.video.title,
                        vod_ts: Object(c.e)(e) ? null : Number(e.contentOffsetSeconds),
                        vod_type: Object(l.a)(n.video.broadcastType)
                    }
                },
                _ = function(e, t, n) {
                    var i = e.comment.id,
                        r = e.comment.channelId;
                    return {
                        action: e.state === d.c ? "publish" : "unpublish",
                        channel_id: Number(r),
                        comment_id: i,
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user.login,
                        user_id: Number(t.session.user.id),
                        vod_id: Number(n.video.id),
                        vod_title: n.video.title,
                        vod_ts: e.comment.contentOffset,
                        vod_type: Object(l.a)(n.video.broadcastType)
                    }
                },
                w = function(e, t, n) {
                    return {
                        action: "sync_vod_to_time",
                        author_id: Number(e.commenter),
                        channel: n.user.login,
                        channel_id: Number(e.channelId),
                        comment_id: e.id,
                        event_source: "frontend",
                        game: n.video.game ? n.video.game.name : null,
                        login: t.session.user ? t.session.user.login : null,
                        user_id: t.session.user ? Number(t.session.user.id) : null,
                        vod_id: Number(e.contentId),
                        vod_title: n.video.title,
                        vod_ts: e.contentOffset,
                        vod_type: Object(l.a)(n.video.broadcastType)
                    }
                },
                O = function(e, t, n) {
                    return {
                        action: "share",
                        author_id: Number(e.commenter),
                        channel: t.video.owner.login,
                        channel_id: Number(e.channelId),
                        comment_id: e.id,
                        event_source: "frontend",
                        game: t.video.game ? t.video.game.name : null,
                        login: t.currentUser ? t.currentUser.login : null,
                        user_id: t.currentUser ? Number(t.currentUser.id) : null,
                        vod_id: Number(e.contentId),
                        vod_title: t.video.title,
                        vod_ts: e.contentOffset,
                        vod_type: Object(l.a)(t.video.broadcastType),
                        share_platform: n
                    }
                }
        },
        fIj0: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoChatChannelAndVideoTrackingContext"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoCreatorID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "game"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoCreatorID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 186
                }
            };
            n.loc.source = {
                body: "query VideoChatChannelAndVideoTrackingContext($videoCreatorID: ID $videoID: ID) {\nvideo(id: $videoID) {\nid\nbroadcastType\ntitle\ngame {\nid\nname\n}\n}\nuser(id: $videoCreatorID) {\nid\nlogin\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        fQWD: function(e, t, n) {
            "use strict";
            var i = n("vHGB");
            n.d(t, "a", function() {
                return i.a
            })
        },
        fena: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ResumeWatchingVideoCarousel_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "viewedVideos"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "30"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "FragmentSpread",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PreviewCardVideo"
                                                            },
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 228
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-preview-card/models/preview-card-video-fragment.gql"\nquery ResumeWatchingVideoCarousel_CurrentUser {\ncurrentUser {\nid\nlogin\nviewedVideos (first: 30) {\nedges {\nnode {\n...PreviewCardVideo\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("he03").definitions)), e.exports = i
        },
        g807: function(e, t, n) {
            "use strict";
            var i = n("RNNG"),
                r = function() {
                    function e(e) {
                        this.videoComments = e, this.currentOffset = e.minOffset
                    }
                    return e.prototype[Symbol.iterator] = function() {
                        var e = this;
                        return {
                            next: function() {
                                var t = e.videoComments.offsets[e.currentOffset] || [],
                                    n = {
                                        done: e.currentOffset > e.videoComments.maxOffset,
                                        value: {
                                            offset: e.currentOffset,
                                            comments: t
                                        }
                                    };
                                return e.currentOffset++, n
                            }
                        }
                    }, e
                }();
            n.d(t, "b", function() {
                return i.b
            }), n.d(t, "c", function() {
                return i.c
            }), n.d(t, !1, function() {
                return i.d
            }), n.d(t, !1, function() {
                return i.e
            }), n.d(t, "d", function() {
                return i.f
            }), n.d(t, !1, function() {}), n.d(t, "a", function() {
                return r
            })
        },
        gAd6: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoPreviewCardGameID"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "name"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "game"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "name"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 73
                }
            };
            n.loc.source = {
                body: "query VideoPreviewCardGameID($name: String!) {\ngame(name: $name) {\nid\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        gDzh: function(e, t, n) {},
        gFHd: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ShareVideo_Content"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "collectionID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "hasVideo"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "hasCollection"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "options"
                                },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [{
                                        kind: "ObjectField",
                                        name: {
                                            kind: "Name",
                                            value: "includePrivate"
                                        },
                                        value: {
                                            kind: "BooleanValue",
                                            value: !0
                                        }
                                    }]
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "hasVideo"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "collection"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "collectionID"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "hasCollection"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 451
                }
            };
            n.loc.source = {
                body: "query ShareVideo_Content($videoID: ID! $collectionID: ID! $hasVideo: Boolean! $hasCollection: Boolean!) {\n# If the page specifies a video ID query it directly.\nvideo(id: $videoID options: { includePrivate: true }) @include(if: $hasVideo) {\nid\nowner {\nid\ndisplayName\n}\ntitle\n}\n# If the page is a collection page grab the first video from the collection.\ncollection(id: $collectionID) @include(if: $hasCollection) {\nid\nowner {\nid\ndisplayName\n}\ntitle\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        gIsd: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportReasons"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "content"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportContentType"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportReasons"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "content"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "content"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "text"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 114
                }
            };
            n.loc.source = {
                body: "query ReportUserModal_ReportReasons($content: ReportContentType!) {\nreportReasons(content: $content) {\nid\ntext\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        gPTj: function(e, t, n) {},
        gTu3: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Default = 0] = "Default", e[e.Recipient = 1] = "Recipient", e[e.Sender = 2] = "Sender"
                }(i || (i = {}))
        },
        gh9h: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Save = 0] = "Save", e[e.Thumbnail = 1] = "Thumbnail", e[e.Initialize = 2] = "Initialize"
                }(i || (i = {}))
        },
        h92S: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                o = n("z36O"),
                a = n("kduP"),
                s = n("2xye"),
                l = n("GnwI"),
                c = n("VtCy");

            function d(e) {
                return "slug" in e
            }
            var u, p = n("Ue10"),
                m = /\S/,
                h = function(e) {
                    var t = e.video,
                        n = "";
                    if (d(t)) n = t.title + " · " + Object(r.i)(new Date(t.createdAt));
                    else {
                        var o = "",
                            a = t.title && "" !== t.title && m.test(t.title),
                            s = !!t.publishedAt;
                        s && (o = Object(r.i)(new Date(t.publishedAt))), a && s ? n = t.title + " · " + o : t.title && a && !s ? n = t.title : !a && s && (n = o)
                    }
                    return i.createElement(p.Eb, {
                        margin: {
                            bottom: .5
                        }
                    }, i.createElement(p.W, {
                        ellipsis: !0,
                        title: t.title,
                        fontSize: p.Ca.Size4
                    }, n))
                };
            ! function(e) {
                e[e.InfoPlaceholder = 0] = "InfoPlaceholder", e[e.GameImagePlaceholder = 1] = "GameImagePlaceholder", e[e.ClipCurator = 2] = "ClipCurator", e[e.ClipCuratorDot = 3] = "ClipCuratorDot"
            }(u || (u = {}));
            var f = function(e) {
                    var t = e.video,
                        n = null;
                    t && !d(t) && t.scope === c.VideoScope.Private && (n = i.createElement(p.Eb, {
                        fontSize: p.Ca.Size4
                    }, i.createElement(p.gb, {
                        label: Object(r.d)("Private", "VideoTitle")
                    })));
                    var l = null;
                    if (t && d(t) && t.curator) {
                        var m = Object(r.d)("Clipped by {curator}", {
                                curator: i.createElement(p.U, {
                                    to: {
                                        pathname: "/" + t.curator.login,
                                        state: {
                                            medium: s.PageviewMedium.ClipsWatchPage,
                                            content: s.PageviewContent.ClipCuratorName
                                        }
                                    }
                                }, t.curator.login)
                            }, "VideoInfo"),
                            f = null;
                        t.game && (f = i.createElement(p.Xa, {
                            "data-test-selector": u.ClipCuratorDot,
                            margin: {
                                right: 1
                            }
                        }, i.createElement(p.W, {
                            fontSize: p.Ca.Size5,
                            type: p.Vb.Span
                        }, "·"))), l = i.createElement(p.Xa, {
                            display: p.X.Flex
                        }, f, i.createElement(p.W, {
                            fontSize: p.Ca.Size5,
                            type: p.Vb.Span,
                            "data-test-selector": u.ClipCurator
                        }, m))
                    }
                    if (t && null === t.game) return i.createElement("div", null, n, i.createElement(h, {
                        video: t
                    }), l);
                    var g = null;
                    null === t ? g = i.createElement(p.ib, {
                        "data-test-selector": u.GameImagePlaceholder,
                        height: 55,
                        width: 40
                    }) : null !== t.game && (g = i.createElement(p.U, {
                        to: Object(a.c)(t.game.name),
                        "data-a-target": "video-info-game-boxart-link"
                    }, i.createElement(p.I, {
                        src: t.game.boxArtURL,
                        alt: t.game.name,
                        aspect: p.p.BoxArt,
                        size: p.J.Size4
                    })));
                    var v = null;
                    return null === t ? v = i.createElement(p.Xa, {
                        "data-test-selector": u.InfoPlaceholder,
                        display: p.X.Flex,
                        flexDirection: p.Aa.Column
                    }, i.createElement(p.ib, {
                        lineCount: 1,
                        width: 320
                    }), i.createElement(p.ib, {
                        lineCount: 1,
                        width: 240
                    })) : null !== t.game && (v = i.createElement("div", null, n, i.createElement(h, {
                        video: t
                    }), i.createElement(p.Xa, {
                        display: p.X.InlineFlex
                    }, i.createElement(o.a, {
                        linkTo: {
                            pathname: Object(a.c)(t.game.name),
                            state: {
                                content: s.PageviewContent.Game,
                                medium: s.PageviewMedium.VideoWatchPage
                            }
                        },
                        tooltip: Object(r.d)("Game", "VideoInfo"),
                        svgAsset: p.tb.NavGames,
                        title: t.game.name,
                        "data-a-target": "video-info-game-link"
                    }), l))), i.createElement(p.G, {
                        row: !0
                    }, i.createElement(p.Xa, {
                        flexShrink: 0,
                        margin: {
                            right: 1
                        }
                    }, g), i.createElement(p.H, {
                        overflow: p.cb.Hidden
                    }, v))
                },
                g = Object(l.b)("VideoInfo", {
                    autoReportInteractive: !0
                })(f);
            n.d(t, !1, function() {
                return u
            }), n.d(t, !1, function() {
                return f
            }), n.d(t, "a", function() {
                return g
            })
        },
        he03: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "PreviewCardVideo"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Video"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "animatedPreviewURL"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "game"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "boxArtURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "40"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "height"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "56"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "name"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "lengthSeconds"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "owner"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "50"
                                        }
                                    }],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "previewThumbnailURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "width"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "320"
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "height"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "180"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "publishedAt"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "self"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isRestricted"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "viewingHistory"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "position"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "updatedAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "title"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "viewCount"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "restriction"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "productName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "productTitle"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "contentTags"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "tagFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 454
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/tags/models/tag-fragment.gql"\nfragment PreviewCardVideo on Video {\nanimatedPreviewURL\ngame {\nboxArtURL(width: 40 height: 56)\nid\ndisplayName\nname\n}\nid\nlengthSeconds\nowner {\ndisplayName\nid\nlogin\nprofileImageURL(width: 50)\n}\npreviewThumbnailURL(width: 320 height: 180)\npublishedAt\nself {\nisRestricted\nviewingHistory {\nposition\nupdatedAt\n}\n}\ntitle\nviewCount\nrestriction {\nproductName\nproductTitle\n}\ncontentTags {\n...tagFragment\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("iiOx").definitions)), e.exports = i
        },
        hkkJ: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                o = n("q1tI"),
                a = n("/7QA"),
                s = n("GFmA"),
                l = n("DMoW"),
                c = n("tuvy"),
                d = n("GnwI"),
                u = n("NAv5");
            ! function(e) {
                e.KeepWatching = "keep-watching", e.WatchNext = "watch-next"
            }(i || (i = {}));
            var p = .8;
            var m = n("6h5w"),
                h = n("eqgM"),
                f = n("Ue10");
            n.d(t, "a", function() {
                return b
            });
            var g;
            ! function(e) {
                e.Metadata = "collection-metadata", e.PlayAllButton = "play-all-button", e.TitleLink = "collection-title-link"
            }(g || (g = {}));
            var v = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e, t = this.props.collection,
                            n = this.getCollectionVideos();
                        if (n && 0 === n.length) return null;
                        var r = 0,
                            d = t && t.type === l.p.SERIES && n && n.length >= 4;
                        if (t && n && d && Object(c.a)() && Object(c.c)()) {
                            var m = function(e) {
                                for (var t = e.items.edges, n = t.length, r = null, o = 0; o < t.length; o++) {
                                    var a = t[o];
                                    if (a) {
                                        var s = a.node,
                                            l = s.self && s.self.viewingHistory && s.self.viewingHistory;
                                        if (l && l.updatedAt && l.position)
                                            if (r) {
                                                var c = new Date(r.viewedAt),
                                                    d = new Date(l.updatedAt);
                                                Object(u.isAfter)(d, c) && (r = {
                                                    index: o,
                                                    value: s,
                                                    viewedAt: l.updatedAt,
                                                    viewingPosition: l.position
                                                })
                                            } else r = {
                                                index: o,
                                                value: s,
                                                viewedAt: l.updatedAt,
                                                viewingPosition: l.position
                                            }
                                    }
                                }
                                if (!r) return null;
                                if (r.viewingPosition / (r.value.lengthSeconds || 1 / 0) > p) {
                                    var m = r.index + 1;
                                    if (m < n) {
                                        var h = t[m];
                                        if (h && h.node) return {
                                            item: h.node,
                                            position: m,
                                            type: i.WatchNext
                                        }
                                    }
                                }
                                return {
                                    item: r.value,
                                    position: r.index,
                                    type: i.KeepWatching
                                }
                            }(t);
                            if (m && (e = {
                                    card: m.item,
                                    title: function(e) {
                                        switch (e) {
                                            case i.KeepWatching:
                                                return Object(a.d)("Continue Watching", "SeriesResumeRecommendation");
                                            case i.WatchNext:
                                                return Object(a.d)("Watch Next", "SeriesResumeRecommendation");
                                            default:
                                                return e
                                        }
                                    }(m.type)
                                }, r = m.position + 1), !e) e = {
                                card: n[n.length - 1],
                                title: Object(a.d)("Latest Video", "CollectionCarousel")
                            }, r = n.length;
                            e.subTitle = Object(a.d)("{totalVideos, plural, one {{position} / # video} other {{position} / # videos}}", {
                                position: r,
                                totalVideos: n.length
                            }, "CollectionCarousel")
                        }
                        return o.createElement(o.Fragment, null, this.renderCarouselHeader(), o.createElement(h.a, {
                            collectionID: t ? t.id : void 0,
                            listContext: s.b.SingleChannelList,
                            multipleVideoGameMarkersType: this.props.multipleVideoGameMarkersType,
                            spotlight: e,
                            tracking: {
                                content: this.props.tracking.content,
                                medium: this.props.tracking.medium,
                                location: this.props.tracking.location,
                                source: this.props.tracking.source,
                                itemType: this.props.tracking.itemType
                            },
                            videos: n,
                            renderPositionLabel: !!e
                        }))
                    }, t.prototype.renderCarouselHeader = function() {
                        var e = this.props.collection;
                        return e ? o.createElement(f.Xa, null, o.createElement(f.Xa, {
                            display: f.X.Flex,
                            flexDirection: f.Aa.Row
                        }, o.createElement(f.Xa, {
                            margin: {
                                right: 1
                            }
                        }, o.createElement(f.U, {
                            "data-test-selector": g.TitleLink,
                            to: "/collections/" + e.id,
                            type: f.V.Inherit
                        }, o.createElement(m.a, {
                            titleMessage: e.title || this.props.fallbackTitle || ""
                        }))), !Object(c.a)() && o.createElement(f.z, {
                            type: f.F.Hollow,
                            size: f.D.Small,
                            icon: f.tb.Play,
                            linkTo: "/collections/" + e.id,
                            "data-test-selector": g.PlayAllButton
                        }, Object(a.d)("Play all", "LatestCollectionCarousel"))), o.createElement(f.W, {
                            color: f.O.Alt2,
                            type: f.Vb.Span,
                            "data-test-selector": g.Metadata
                        }, this.renderSubTitle(e))) : o.createElement(f.ib, {
                            width: 250,
                            lineCount: 1
                        })
                    }, t.prototype.renderSubTitle = function(e) {
                        var t = e.items ? e.items.totalCount : 0,
                            n = Object(a.d)("{videoCountText, plural, one {# video} other {# videos}}", {
                                videoCountText: t
                            }, "LatestCollectionCarousel");
                        return this.props.subTitle ? o.createElement(o.Fragment, null, this.props.subTitle, " · ", n) : e.description ? o.createElement(o.Fragment, null, e.description, " · ", n) : n
                    }, t.prototype.getCollectionVideos = function() {
                        var e = this.props.collection;
                        if (!e) return null;
                        var t = [];
                        return e.items.edges.forEach(function(e) {
                            e && "" !== e.node.id && t.push(e.node)
                        }), t
                    }, t
                }(o.Component),
                b = Object(d.b)("CollectionCarousel", {
                    autoReportInteractive: !0
                })(v)
        },
        i6WW: function(e, t, n) {
            "use strict";
            var i = n("/7QA"),
                r = n("RcPG"),
                o = new RegExp("(?:^|\\s)(?:https?://)?clips.twitch.tv/(\\w+)(?:/)?(\\w+)?(?:/edit)?(?:$|\\s)?"),
                a = new RegExp("(?:^|\\s)(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/(\\w+)\\/clip\\/(\\w+)(?:$|\\s)?");
            var s = new RegExp("(?:^|\\s)(?:https?://)?(?:(?:www|go).)?twitch.tv/videos/(\\d+)(?:$|\\s)?");
            n.d(t, "a", function() {
                return c
            });
            var l = /^(?:(https?:\/\/)?((?:[\w#%\-+=:~]+\.)+[a-z]{2,8}(?:\/[\w./#%&()\-+=:?~]*)?))$/;

            function c(e, t) {
                var n = e.match(l);
                if (!n) return null;
                if (t.blockLinks) return {
                    type: r.a.Text,
                    content: " <" + Object(i.d)("deleted link", "CreateMessageData") + "> "
                };
                var c = n[1],
                    d = n[2],
                    u = "" + (c || "https://") + d;
                if (t.parseClips && function(e) {
                        void 0 === e && (e = "");
                        var t = o.test(e) && !e.includes("clips.twitch.tv/2017/"),
                            n = a.test(e);
                        return t || n
                    }(u)) {
                    var p = function(e) {
                        void 0 === e && (e = "");
                        var t = e.match(o);
                        if (t && t.length > 0 && void 0 !== t.index) return t[1];
                        var n = e.match(a);
                        return n && n.length > 0 && void 0 !== n.index ? n[2] : ""
                    }(u);
                    return {
                        type: r.a.ClipLink,
                        content: {
                            slug: p,
                            url: u,
                            displayText: e
                        }
                    }
                }
                if (t.parseVods && function(e) {
                        return void 0 === e && (e = ""), s.test(e)
                    }(u)) {
                    var m = function(e) {
                        void 0 === e && (e = "");
                        var t = e.match(s);
                        return null === t ? "" : t && t.length > 0 && void 0 !== t.index ? t[1] : ""
                    }(u);
                    return {
                        type: r.a.VideoLink,
                        content: {
                            id: m,
                            url: u,
                            displayText: e
                        }
                    }
                }
                return {
                    type: r.a.Link,
                    content: {
                        displayText: e,
                        url: u
                    }
                }
            }
        },
        iS14: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("yR8l"),
                o = n("8jSG"),
                a = n("cMjZ"),
                s = n("zixI");

            function l() {
                var e = this;
                return Object(r.a)(s, {
                    props: function(t) {
                        return {
                            unblockUserMutation: function(n, r) {
                                return i.__awaiter(e, void 0, void 0, function() {
                                    return i.__generator(this, function(e) {
                                        switch (e.label) {
                                            case 0:
                                                return t.mutate ? [4, t.mutate({
                                                    variables: {
                                                        input: {
                                                            targetUserID: n
                                                        }
                                                    },
                                                    optimisticResponse: {
                                                        unblockUser: {
                                                            __typename: "UnblockUserPayload",
                                                            targetUser: {
                                                                __typename: "User",
                                                                id: n
                                                            }
                                                        }
                                                    },
                                                    update: function(e) {
                                                        var t = e.readFragment({
                                                            id: Object(a.a)(r),
                                                            fragment: o
                                                        });
                                                        t && (t.blockedUsers = t.blockedUsers.filter(function(e) {
                                                            return null !== e && e.id !== n
                                                        }), e.writeFragment({
                                                            id: Object(a.a)(r),
                                                            fragment: o,
                                                            data: t
                                                        }))
                                                    }
                                                })] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 3];
                                            case 2:
                                                throw new Error("unblockUserMutation is not ready");
                                            case 3:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }
        },
        j0ar: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                o = n("q1tI"),
                a = n("x1M1"),
                s = n("Ue10"),
                l = (n("9KaG"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.onImageLoad = function() {
                            n.setState({
                                imageLoaded: !0
                            })
                        }, n.onMouseOver = function() {
                            n.setState({
                                isHovering: !0
                            })
                        }, n.onMouseOut = function() {
                            n.setState({
                                isHovering: !1
                            })
                        }, n.renderImage = function() {
                            var e = null,
                                t = r("chat-image", {
                                    "chat-image__animated": !!n.props.cheerText && n.state.imageLoaded
                                }, n.props.className);
                            if (n.props.srcSet.themed) e = o.createElement(s.Pa, {
                                display: n.state.imageLoaded ? s.X.InlineBlock : s.X.Hide
                            }, o.createElement(a.a, {
                                alt: n.props.alt,
                                className: t,
                                defaultRes: n.props.srcKey,
                                onLoad: n.onImageLoad,
                                onMouseOver: n.onMouseOver,
                                onMouseOut: n.onMouseOut,
                                sources: n.props.srcSet
                            }));
                            else {
                                for (var i = [], l = 0, c = Object.keys(n.props.srcSet.sources); l < c.length; l++) {
                                    var d = c[l];
                                    i.push(n.props.srcSet.sources[d] + " " + d)
                                }
                                e = o.createElement(s.Pa, {
                                    display: n.state.imageLoaded ? s.X.InlineBlock : s.X.Hide
                                }, o.createElement("img", {
                                    className: t,
                                    onLoad: n.onImageLoad,
                                    onMouseOver: n.onMouseOver,
                                    onMouseOut: n.onMouseOut,
                                    src: n.props.srcSet.sources[n.props.srcKey],
                                    srcSet: i.join(","),
                                    alt: n.props.alt
                                }))
                            }
                            return e
                        }, n.renderPlaceholder = function() {
                            return n.state.imageLoaded ? null : o.createElement(s.Pa, {
                                display: s.X.InlineBlock
                            }, o.createElement(s.W, {
                                type: s.Vb.Span,
                                className: "chat-image__placeholder",
                                align: s.fc.Top
                            }, o.createElement(s.ib, {
                                height: 28,
                                width: 28
                            })))
                        }, n.state = {
                            imageLoaded: !1,
                            isHovering: !1
                        }, n
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e;
                        return e = this.state.isHovering && this.state.imageLoaded ? o.createElement(s.Yb, {
                            direction: this.props.tooltipDirection || s.ac.Top,
                            label: this.props.alt,
                            display: s.X.Inline,
                            offsetY: "0.9rem",
                            "data-a-target": "emote-name"
                        }, this.renderPlaceholder(), this.renderImage(), this.props.cheerText) : o.createElement("span", {
                            "data-a-target": "emote-name"
                        }, this.renderPlaceholder(), this.renderImage(), this.props.cheerText), this.props.cheerText ? o.createElement(s.W, {
                            type: s.Vb.Span,
                            noWrap: !0
                        }, e) : e
                    }, t
                }(o.Component));
            n.d(t, "a", function() {
                return l
            })
        },
        "jQ+3": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                PageError: "page-error",
                Error: "error",
                Success: "success",
                Info: "info"
            }
        },
        je0y: function(e, t, n) {},
        jeZI: function(e, t, n) {},
        jr2J: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "PreviewCollection"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Collection"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "FragmentSpread",
                            name: {
                                kind: "Name",
                                value: "CollectionFields"
                            },
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "items"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "first"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "30"
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "CollectionConnectionFields"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 350
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-carousel/components/collection-carousel/models/collection-fields-fragment.gql"\n#import "twilight/features/video-carousel/components/collection-carousel/models/collection-connection-fields-fragment.gql"\nfragment PreviewCollection on Collection {\n...CollectionFields\nitems (first:30) {\n...CollectionConnectionFields\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};

            function o(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }
            i.definitions = i.definitions.concat(o(n("msok").definitions)), i.definitions = i.definitions.concat(o(n("+Vfn").definitions)), e.exports = i
        },
        "kF1+": function(e, t, n) {},
        kPBf: function(e, t) {},
        kSkr: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "BlockUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "BlockUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "blockUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "targetUser"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 94
                }
            };
            n.loc.source = {
                body: "mutation BlockUser($input: BlockUserInput!) {\nblockUser(input: $input) {\ntargetUser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        kVMo: function(e, t, n) {},
        kVrx: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return p
            }), n.d(t, "a", function() {
                return m
            }), n.d(t, "c", function() {
                return h
            });
            var i = n("/7QA"),
                r = n("f00E"),
                o = n("4rCz"),
                a = n("BKFw"),
                s = n("NZDK"),
                l = n("9kXc"),
                c = n("BZOq"),
                d = n("V3Pk"),
                u = n("WK0g"),
                p = function(e, t) {
                    return Object(u.b)(t).then(function(n) {
                        e.dispatch(Object(d.h)(n, t.bitsConfig))
                    }, function() {
                        e.dispatch(Object(d.g)(Object(o.d)("Unable to retrieve messages, please try again.", "routines-moderation")))
                    })
                },
                m = function(e, t) {
                    return Object(u.a)(t).then(function() {
                        e.dispatch(Object(d.f)(t.bannedUser))
                    }).catch(function(t) {
                        return e.dispatch(Object(d.e)(t))
                    })
                },
                h = function(e, t) {
                    var n = new s.a({
                            appId: i.a.algoliaApplicationID,
                            apiKey: i.a.algoliaAPIKey,
                            apolloClient: i.p.apollo.client,
                            logger: i.k,
                            config: i.a,
                            stats: i.p.stats
                        }),
                        o = r.a(),
                        u = Object(c.b)({
                            broadcastType: a.c,
                            broadcasterId: t.creatorId
                        }),
                        p = u.typeID,
                        m = u.params;
                    return n.queryForType(p, t.searchTerm, o, m).then(function(t) {
                        var n = Object(l.b)({
                            searchResults: t
                        });
                        n.currentVideoResults && e.dispatch(Object(d.i)(n.currentVideoResults))
                    }).catch(function() {})
                }
        },
        km1c: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                o = n("q1tI"),
                a = n("oJmH"),
                s = n("/7QA"),
                l = n("ZS2+"),
                c = n("MJbm"),
                d = n("eJ65"),
                u = n("yR8l"),
                p = n("x7UT"),
                m = n("0Log"),
                h = n("/aPz"),
                f = n("D7An"),
                g = n("gOYK"),
                v = n("d2C5"),
                b = n("jSzL"),
                k = n("Ahlu"),
                y = n("/MKj"),
                C = n("fvjX"),
                S = n("aCAx"),
                E = n("7CzK"),
                _ = n("94Uw"),
                w = n("Ue10"),
                O = (n("/nm5"), n("41XU")),
                T = l.a.wrap(function() {
                    return n.e(144).then(n.bind(null, "7lJP"))
                }, "UserImageUploader"),
                D = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.openModal = function() {
                            var e = t.props.data && t.props.data.user;
                            e && e.id && e.login && t.props.showModal(T, {
                                userID: e.id,
                                login: e.login,
                                displayName: e.displayName || e.login,
                                imageType: _.a.ProfileBanner,
                                showCloser: !0,
                                successCallback: t.imageUploaded
                            })
                        }, t.imageUploaded = function() {
                            t.props.data && t.props.data.refetch()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e, t, n = "channel-banner__image-default",
                            i = "channel-banner__header-type",
                            a = {
                                "channel-banner--open": !this.props.collapsed,
                                "channel-banner--side-nav": this.props.isSideNavBanner
                            },
                            l = {
                                "channel-banner__image--side-nav": this.props.isSideNavBanner
                            },
                            c = {
                                "channel-banner__edit-overlay-button--side-nav": this.props.isSideNavBanner
                            },
                            d = this.props.data;
                        d && !d.loading && this.props.firstPageLoaded && d.user && d.user.bannerImageURL ? (n = "channel-banner__image-loaded", t = {
                            backgroundImage: "url(" + d.user.bannerImageURL + ")"
                        }) : (l["channel-banner__image--default"] = !0, t = {
                            backgroundImage: "url(" + E + ")"
                        }), this.props.isSideNavBanner && (i = "channel-banner__side-nav-type");
                        var u = null;
                        if (this.props.canEdit) {
                            var p = this.props.isSideNavBanner ? o.createElement(w.Xa, {
                                display: w.X.Flex,
                                padding: {
                                    x: 3
                                },
                                justifyContent: w.Wa.Between,
                                fullWidth: !0
                            }, o.createElement(w.sb, {
                                asset: w.tb.Edit
                            }), o.createElement(w.W, null, Object(s.d)("Edit", "ChannelBanner"))) : o.createElement(w.Xa, null, o.createElement(w.Xa, null, o.createElement(w.sb, {
                                asset: w.tb.Edit
                            })), Object(s.d)("Update Profile Banner", "ChannelBanner"));
                            u = o.createElement(w.Eb, {
                                className: r("channel-banner__edit-overlay", c),
                                background: w.r.Overlay,
                                position: w.jb.Absolute,
                                attachTop: !0,
                                attachLeft: !0,
                                fullWidth: !0
                            }, o.createElement("button", {
                                className: "channel-banner__edit-overlay-button",
                                "data-test-selector": "channel-banner__edit-overlay-interactable",
                                onClick: this.openModal
                            }, o.createElement(w.Xa, {
                                display: w.X.Flex,
                                alignItems: w.f.Center,
                                flexDirection: w.Aa.Column,
                                justifyContent: w.Wa.Center
                            }, p)))
                        }
                        return e = o.createElement("div", {
                            className: r("channel-banner__image", l),
                            "data-test-selector": n,
                            style: t
                        }, u), o.createElement("div", {
                            className: r("channel-banner", a),
                            "data-test-selector": i,
                            onTransitionEnd: this.props.onTransitionEnd
                        }, o.createElement(w.Pa, {
                            fullWidth: !0,
                            fullHeight: !0
                        }, e))
                    }, t.prototype.componentWillUnmount = function() {
                        this.props.closeModal()
                    }, t
                }(o.Component),
                N = Object(u.a)(O, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin || !e.firstPageLoaded
                    }
                })(D);
            var I, x = Object(y.connect)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                }, function(e) {
                    return Object(C.bindActionCreators)({
                        closeModal: S.c,
                        showModal: S.d
                    }, e)
                })(N),
                R = n("tuvy"),
                j = n("i4un"),
                M = n("dIU+"),
                F = n("GnwI"),
                L = n("Ba7Q"),
                V = n("QjI3"),
                U = (n("BOil"), n("HXcb"));
            n.d(t, "a", function() {
                return z
            }), n.d(t, "b", function() {
                return H
            }), n.d(t, "d", function() {
                return B
            }), n.d(t, "c", function() {
                return Q
            });
            var A, P = l.a.wrap(function() {
                return n.e(145).then(n.bind(null, "g9Rq"))
            }, "EditProfileOverlay");
            ! function(e) {
                e.SocialButtonsDefault = "channel-header__social-buttons-default", e.SocialButtonsVariantB = "channel-header__social-buttons-variant-b"
            }(A || (A = {}));
            var B, W = "channel-header__edit-profile-overlay",
                X = "channel-header__verified-badge",
                G = "channel-header__live-indicator",
                z = "yes",
                H = "browser-notifications-upsell-seen";
            ! function(e) {
                e[e.Channel = 1] = "Channel", e[e.Clips = 2] = "Clips", e[e.Collections = 3] = "Collections", e[e.Events = 4] = "Events", e[e.Success = 5] = "Success", e[e.Followers = 6] = "Followers", e[e.Following = 7] = "Following", e[e.Videos = 8] = "Videos"
            }(B || (B = {}));
            var q = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.verifiedBadgeElement = o.createElement(w.Yb, {
                            label: Object(s.d)("Verified", "ChannelHeader"),
                            direction: w.ac.Right
                        }, o.createElement(w.Xa, {
                            className: "channel-header__verified",
                            "data-target": X,
                            display: w.X.Flex,
                            alignItems: w.f.Center,
                            margin: {
                                left: 1
                            }
                        }, o.createElement(w.sb, {
                            asset: w.tb.Verified
                        }))), n.ChannelStatusIndicatorElement = o.createElement(w.Xa, {
                            margin: {
                                left: 1
                            },
                            "data-target": G
                        }, o.createElement(w.Yb, {
                            label: Object(s.d)("Live Now", "ChannelHeader"),
                            direction: w.ac.Right
                        }, o.createElement(w.K, {
                            status: w.M.Live,
                            pulse: !0
                        }))), n.onResetOffline = function() {
                            n.resetOfflineTimer = void 0, n.setState({
                                live: !1
                            })
                        }, n.renderAvatarEditButton = function() {
                            return n.props.data && n.props.data.user && n.props.data.user.id && n.props.data.user.login && n.isChannelEditor() ? o.createElement(w.Eb, {
                                className: W,
                                background: w.r.Overlay,
                                position: w.jb.Absolute,
                                attachTop: !0,
                                attachLeft: !0,
                                fullHeight: !0,
                                fullWidth: !0,
                                display: w.X.InlineFlex,
                                alignItems: w.f.Center,
                                justifyContent: w.Wa.Center
                            }, o.createElement(P, {
                                userID: n.props.data.user.id,
                                login: n.props.data.user.login,
                                displayName: n.props.data.user.displayName || n.props.data.user.login
                            })) : null
                        }, n.toggleChannelBanner = function() {
                            n.setState(function(e) {
                                var t = !e.bannerSlideIn;
                                return t ? {
                                    bannerHidden: !e.bannerHidden,
                                    bannerSlideIn: t
                                } : {
                                    bannerSlideIn: t
                                }
                            })
                        }, n.completedBannerAnimation = function() {
                            n.setState(function(e) {
                                return e.bannerSlideIn ? e : {
                                    bannerHidden: !0
                                }
                            })
                        }, n.onUpdateDebounce = function() {
                            if (n.resizeAnimationFrame && (clearTimeout(n.resizeAnimationFrame), n.resizeAnimationFrame = null), n.channelHeader) {
                                var e = n.channelHeader.querySelector('[data-target="channel-header-left"]');
                                n.updateWidth(n.getWidth(e).width), n.resizeAnimationFrame = setTimeout(n.handleWindowResize, 0)
                            }
                        }, n.handleWindowResize = function() {
                            n.resizeAnimationFrame = null, n.getChannelHeaderSize()
                        }, n.maybeShowBrowserNotificationsUpsell = function() {
                            return i.__awaiter(n, void 0, void 0, function() {
                                return i.__generator(this, function(e) {
                                    switch (e.label) {
                                        case 0:
                                            return !s.m.get(H, !1) && Object(v.a)() && Object(b.c)() && s.p.experiments.getAssignment(f.b.BrowserNotificationsUpsell) === z ? [4, g.a.hasPushSubscription()] : [3, 3];
                                        case 1:
                                            return e.sent() ? [3, 3] : (s.m.set(H, !0), this.props.showBrowserNotificationsUpsellModal(), [4, g.a.userSubscribe(k.a.Channel)]);
                                        case 2:
                                            e.sent(), this.props.closeBrowserNotificationsUpsellModal(), e.label = 3;
                                        case 3:
                                            return [2]
                                    }
                                })
                            })
                        }, n.saveChannelHeaderRef = function(e) {
                            return n.channelHeader = e
                        }, n.toggleLiveNotificationsBtnShown = function(e) {
                            n.setState({
                                showLiveNotificationsButton: e
                            })
                        }, n.state = {
                            live: !1,
                            bannerHidden: !0,
                            bannerSlideIn: !1
                        }, n
                    }
                    return i.__extends(t, e), t.prototype.componentWillMount = function() {
                        this.setState({
                            live: this.isLiveGraphQL(this.props)
                        })
                    }, t.prototype.componentDidMount = function() {
                        window.addEventListener("resize", this.onUpdateDebounce), !this.props.data || this.props.data.loading || this.props.data.error || this.getChannelHeaderSize(), this.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = this.props,
                            n = e.pubsub.messages.viewCount,
                            i = t.pubsub.messages.viewCount;
                        e.channelLogin !== t.channelLogin ? (this.clearResetOfflineTimer(), this.setState({
                            live: this.isLiveGraphQL(e),
                            showLiveNotificationsButton: void 0
                        })) : n && n !== i ? (this.clearResetOfflineTimer(), this.resetOfflineTimer = setTimeout(this.onResetOffline, 6e4), this.setState({
                            live: !0
                        })) : this.isLiveGraphQL(e) !== this.isLiveGraphQL(t) && (this.clearResetOfflineTimer(), this.setState({
                            live: this.isLiveGraphQL(e)
                        })), e.data && !e.data.loading && void 0 === this.state.showLiveNotificationsButton && this.setState({
                            showLiveNotificationsButton: this.getFollowingState(e)
                        })
                    }, t.prototype.componentDidUpdate = function() {
                        this.channelHeader && this.updateWidth(this.getWidth(this.channelHeader.querySelector('[data-target="channel-header-left"]')).width), this.onUpdateDebounce(), this.reportInteractive()
                    }, t.prototype.componentWillUnmount = function() {
                        this.clearResetOfflineTimer(), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame), window.removeEventListener("resize", this.onUpdateDebounce)
                    }, t.prototype.updateWidth = function(e) {
                        var t = e !== this.width || this.width !== this.prevWidth;
                        void 0 !== this.width && (this.prevWidth = this.width), this.width !== e && (this.width = e), t && (this.resizeAnimationFrame && (clearTimeout(this.resizeAnimationFrame), this.resizeAnimationFrame = null), this.onUpdateDebounce())
                    }, t.prototype.render = function() {
                        var e, t, n = 0,
                            i = 0,
                            a = 0,
                            l = s.a.defaultAvatarURL;
                        this.props.data && this.props.data.user && !this.props.data.loading && !this.props.data.error && (n = this.props.data.user.videos && this.props.data.user.videos.totalCount || 0, i = this.props.data.user.followers && this.props.data.user.followers.totalCount || 0, a = this.props.data.user.follows && this.props.data.user.follows.totalCount || 0, l = this.props.data.user.profileImageURL || s.a.defaultAvatarURL, e = this.props.data.user.displayName, t = this.props.data.user.roles && this.props.data.user.roles.isPartner);
                        var u, p = this.state.live && !this.isActiveTab(B.Channel),
                            m = this.createChannelLinks(n, i, a),
                            h = {
                                "channel-header__user": !0,
                                "channel-header__user--selected": this.isActiveTab(B.Channel)
                            },
                            f = o.createElement(w.Xa, {
                                display: w.X.Flex,
                                flexWrap: w.Ba.NoWrap,
                                alignItems: w.f.Center,
                                flexShrink: 0
                            }, o.createElement(w.Xa, {
                                className: "channel-header__user-avatar channel-header__user-avatar--active",
                                margin: {
                                    right: 1
                                },
                                display: w.X.Flex,
                                flexShrink: 0,
                                alignItems: w.f.Stretch
                            }, o.createElement(w.Xa, {
                                position: w.jb.Relative
                            }, o.createElement(w.q, {
                                size: 36,
                                src: l,
                                alt: e || ""
                            }), this.renderAvatarEditButton())), e ? o.createElement(w.W, {
                                type: w.Vb.H5
                            }, e) : o.createElement(w.Xa, {
                                alignItems: w.f.Center
                            }, o.createElement(w.ib, {
                                lineCount: 1,
                                width: 120
                            })), p && this.ChannelStatusIndicatorElement, t && this.verifiedBadgeElement);
                        u = this.isActiveTab(B.Channel) ? o.createElement("div", {
                            className: "channel-header__banner-toggle",
                            onClick: this.toggleChannelBanner,
                            "data-target": "channel-header__channel-link",
                            "data-a-target": "user-channel-header-item"
                        }, f) : this.props.channelLogin ? o.createElement(w.U, {
                            to: "/" + this.props.channelLogin || "#",
                            "data-target": "channel-header__channel-link",
                            "data-a-target": "user-channel-header-item",
                            hoverUnderlineNone: !0
                        }, f) : f;
                        var g = this.state.bannerHidden ? w.X.HideAccessible : w.X.Block,
                            v = null,
                            b = this.renderSocialButtons();
                        return this.isActiveTab(B.Channel) && (v = o.createElement(w.Xa, {
                            display: g
                        }, o.createElement(x, {
                            channelLogin: this.props.channelLogin,
                            canEdit: this.isChannelEditor(),
                            collapsed: !this.state.bannerSlideIn,
                            onTransitionEnd: this.completedBannerAnimation
                        }))), o.createElement(w.Xa, {
                            className: "channel-header",
                            flexShrink: 0
                        }, v, o.createElement(w.Xa, {
                            display: w.X.Flex,
                            justifyContent: w.Wa.Between,
                            flexWrap: w.Ba.NoWrap,
                            fullHeight: !0,
                            refDelegate: this.saveChannelHeaderRef,
                            margin: {
                                x: 3
                            }
                        }, o.createElement(w.Xa, {
                            display: w.X.Flex,
                            alignItems: w.f.Stretch,
                            flexShrink: 0,
                            flexWrap: w.Ba.NoWrap,
                            "data-target": "channel-header-left"
                        }, o.createElement(w.Pa, {
                            className: r(h),
                            padding: {
                                y: .5,
                                right: 2
                            },
                            display: w.X.Flex,
                            flexWrap: w.Ba.NoWrap,
                            alignItems: w.f.Center,
                            flexShrink: 0
                        }, u), this.renderTabs(m), o.createElement(w.Xa, {
                            className: "channel-header__item channel-header__item--no-underline",
                            padding: {
                                x: 1
                            },
                            flexShrink: 0,
                            alignSelf: w.g.Center,
                            "data-target": "channel-header-button"
                        }, o.createElement(d.a, {
                            alwaysMountBalloonContent: !0
                        }, o.createElement(w.A, {
                            icon: w.tb.NavMore,
                            ariaLabel: Object(s.d)("More", "ChannelHeader")
                        }), o.createElement(w.u, {
                            direction: w.v.Bottom,
                            noTail: !0
                        }, o.createElement(w.Xa, {
                            padding: {
                                y: 1
                            }
                        }, this.renderDropdown(m)))))), b), o.createElement(c.a, {
                            onResize: this.onUpdateDebounce
                        }))
                    }, t.prototype.isLiveGraphQL = function(e) {
                        if (e.data && e.data.user) return !!e.data.user.stream && "" !== e.data.user.stream.id
                    }, t.prototype.clearResetOfflineTimer = function() {
                        this.resetOfflineTimer && (clearTimeout(this.resetOfflineTimer), this.resetOfflineTimer = void 0)
                    }, t.prototype.generateUserLink = function(e) {
                        void 0 === e && (e = "");
                        var t = this.props.channelLogin;
                        return t ? "/" + t + "/" + e : "#"
                    }, t.prototype.renderTabs = function(e) {
                        var t = this;
                        return e.map(function(e) {
                            var n = e.count ? o.createElement(w.Xa, {
                                    className: "channel-header__item-count",
                                    display: w.X.Flex,
                                    margin: {
                                        left: .5
                                    }
                                }, o.createElement(w.W, {
                                    type: w.Vb.Span,
                                    fontSize: w.Ca.Size5
                                }, e.count)) : null,
                                i = t.generateUserLink(e.pathSuffix),
                                r = e.label.toLowerCase() + "-channel-header-item";
                            return o.createElement(w.Pa, {
                                key: "channel-header__item--" + e.label,
                                alignItems: w.f.Center,
                                flexShrink: 0
                            }, o.createElement(w.U, {
                                className: "channel-header__item channel-header__item--hide " + (e.isSelected ? "channel-header__item--selected" : ""),
                                to: i,
                                "data-target": "channel-header-item",
                                "data-a-target": r,
                                "data-test-selector": r,
                                hoverUnderlineNone: !0
                            }, o.createElement(w.Xa, {
                                padding: {
                                    x: 2,
                                    y: .5
                                },
                                display: w.X.Flex
                            }, o.createElement(w.W, {
                                type: w.Vb.Span,
                                fontSize: w.Ca.Size5
                            }, e.label), n)))
                        })
                    }, t.prototype.renderDropdown = function(e) {
                        var t = this;
                        return e.map(function(e) {
                            var n = e.count ? o.createElement(w.Xa, {
                                    className: "channel-header__item-count",
                                    display: w.X.Flex,
                                    margin: {
                                        left: .5
                                    }
                                }, o.createElement(w.W, {
                                    type: w.Vb.Span
                                }, e.count)) : null,
                                i = t.generateUserLink(e.pathSuffix);
                            return o.createElement(w.Xa, {
                                key: "channel-header__dropdown-item--" + e.label,
                                "data-target": "channel-header-dropdown-item"
                            }, o.createElement(w.Ua, {
                                linkTo: i,
                                disabled: "#" === i
                            }, o.createElement(w.Xa, {
                                className: "channel-header__dropdown-hover-target",
                                padding: {
                                    y: .5,
                                    x: 1
                                },
                                display: w.X.Flex
                            }, o.createElement(w.W, {
                                type: w.Vb.Span
                            }, e.label), n)))
                        })
                    }, t.prototype.createChannelLinks = function(e, t, n) {
                        var i = [{
                            label: Object(s.d)("Videos", "ChannelHeader"),
                            count: Object(s.f)(e),
                            pathSuffix: Object(R.b)() ? "videos" : "videos/all",
                            isSelected: this.isActiveTab(B.Videos)
                        }];
                        return Object(R.b)() || Object(R.a)() || (i = i.concat([{
                            label: Object(s.d)("Clips", "ChannelHeader"),
                            pathSuffix: "clips",
                            isSelected: this.isActiveTab(B.Clips)
                        }, {
                            label: Object(s.d)("Collections", "ChannelHeader"),
                            pathSuffix: "collections",
                            isSelected: this.isActiveTab(B.Collections)
                        }])), i.concat([{
                            label: Object(s.d)("Events", "ChannelHeader"),
                            pathSuffix: "events",
                            isSelected: this.isActiveTab(B.Events)
                        }, {
                            label: Object(s.d)("Followers", "ChannelHeader"),
                            count: Object(s.f)(t),
                            pathSuffix: "followers",
                            isSelected: this.isActiveTab(B.Followers)
                        }, {
                            label: Object(s.d)("Following", "ChannelHeader"),
                            count: Object(s.f)(n),
                            pathSuffix: "following",
                            isSelected: this.isActiveTab(B.Following)
                        }])
                    }, t.prototype.isActiveTab = function(e) {
                        return B[this.props.currentPage] === B[e]
                    }, t.prototype.isChannelEditor = function() {
                        return !!(this.props.data && this.props.data.currentUser && this.props.data.user && this.props.data.currentUser.roles && (this.props.data.currentUser.id === this.props.data.user.id || this.props.data.currentUser.roles.isStaff || this.props.data.currentUser.roles.isSiteAdmin))
                    }, t.prototype.getChannelHeaderSize = function() {
                        if (this.channelHeader) {
                            var e = this.channelHeader.querySelector('[data-target="channel-header-left"]'),
                                t = this.channelHeader.querySelector('[data-target="channel-header-right"]'),
                                n = this.channelHeader.querySelectorAll('[data-target="channel-header-item"]'),
                                i = this.channelHeader.querySelectorAll('[data-target="channel-header-dropdown-item"]');
                            if (n.length) {
                                for (var r = 0; r < n.length; r++) {
                                    var o = n[r];
                                    o.classList.contains("channel-header__item--hide") && (o.classList.remove("channel-header__item--hide"), i[r].classList.add("channel-header__item--hide"))
                                }
                                var a = this.getWidth(this.channelHeader).width,
                                    s = this.getWidth(e).width + this.getWidth(t).width + 20 - a,
                                    l = [];
                                if (s > 0) {
                                    var c = function(e) {
                                            var t = n[e];
                                            if (!t.classList.contains("channel-header__item--hide")) {
                                                var r = d.getWidth(t);
                                                if (l.push(function() {
                                                        t.classList.add("channel-header__item--hide"), i[e].classList.remove("channel-header__item--hide")
                                                    }), (s -= r.width) <= 0) return "break"
                                            }
                                        },
                                        d = this;
                                    for (r = n.length - 1; r >= 0; r--) {
                                        if ("break" === c(r)) break
                                    }
                                }
                                l.forEach(function(e) {
                                    return e()
                                });
                                var u = this.channelHeader.querySelector('[data-target="channel-header-button"]');
                                if (u) {
                                    var p = !this.channelHeader.querySelectorAll('[data-target="channel-header-item"].channel-header__item--hide').length;
                                    u.classList.toggle("channel-header__item--hide", p)
                                }
                            }
                        }
                    }, t.prototype.getWidth = function(e) {
                        return e ? {
                            width: e.clientWidth
                        } : {
                            width: 0
                        }
                    }, t.prototype.reportInteractive = function() {
                        !this.props.data || this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.renderSocialButtons = function() {
                        var e = this.getFollowingState(),
                            t = null,
                            n = A.SocialButtonsDefault;
                        if (Object(j.c)()) {
                            var i = r("channel-header__follow-btn", {
                                    "channel-header__follow-btn--following": !!this.state.showLiveNotificationsButton
                                }),
                                a = r("channel-header__notification-toggle-container", {
                                    "channel-header__notification-toggle-container--visible": !!this.state.showLiveNotificationsButton
                                });
                            n = A.SocialButtonsVariantB, t = o.createElement(o.Fragment, null, o.createElement(w.Xa, {
                                className: "channel-header__follow-btn-container",
                                display: w.X.Flex,
                                overflow: w.cb.Hidden,
                                alignItems: w.f.Center,
                                padding: {
                                    x: 1
                                },
                                fullHeight: !0
                            }, o.createElement(w.Xa, {
                                display: w.X.Flex,
                                justifyContent: w.Wa.Center,
                                flexDirection: w.Aa.Column,
                                margin: {
                                    right: 1
                                }
                            }, o.createElement(w.Xa, {
                                display: w.X.InlineFlex,
                                justifyContent: w.Wa.Center
                            }, o.createElement("div", {
                                className: i
                            }, o.createElement(M.a, {
                                updateContainerWidth: this.onUpdateDebounce,
                                channelLogin: this.props.channelLogin,
                                onFollow: this.maybeShowBrowserNotificationsUpsell,
                                followUIType: M.b.IconAndText,
                                unfollowUIType: M.b.IconOnly,
                                onToggleAnimationComplete: this.toggleLiveNotificationsBtnShown,
                                hideDropdownWhenFollowing: !0,
                                fullWidthButton: !0,
                                hollowIcons: !0,
                                animatedButton: !0,
                                useContextualModals: !0
                            })))), o.createElement("div", {
                                className: a
                            }, o.createElement(L.a, {
                                channelLogin: this.props.channelLogin,
                                toggleType: L.b.Button,
                                tabIndex: this.state.showLiveNotificationsButton ? 0 : -1,
                                followData: this.getFollowData(),
                                showTooltips: !0
                            }))), o.createElement(w.Xa, null, o.createElement(V.a, {
                                updateContainerWidth: this.onUpdateDebounce,
                                channelLogin: this.props.channelLogin,
                                hideEsportsSubscription: this.props.hideEsportsSubscription,
                                subscribedButtonType: w.F.Default,
                                unsubscribedButtonType: e ? w.F.Default : w.F.Hollow,
                                forceIcon: !0
                            })))
                        } else(this.props.channelIsHosting || Object(j.e)()) && (n = A.SocialButtonsDefault, t = o.createElement(o.Fragment, null, o.createElement(w.Xa, {
                            display: w.X.Flex,
                            alignItems: w.f.Stretch,
                            margin: {
                                left: 1
                            }
                        }, o.createElement(M.a, {
                            updateContainerWidth: this.onUpdateDebounce,
                            channelLogin: this.props.channelLogin,
                            onFollow: this.maybeShowBrowserNotificationsUpsell,
                            followUIType: M.b.IconAndText,
                            unfollowUIType: M.b.IconOnly,
                            useContextualModals: !0
                        })), o.createElement(w.Xa, {
                            margin: {
                                left: 1
                            }
                        }, o.createElement(V.a, {
                            updateContainerWidth: this.onUpdateDebounce,
                            channelLogin: this.props.channelLogin,
                            hideEsportsSubscription: this.props.hideEsportsSubscription
                        }))));
                        return o.createElement(w.Xa, {
                            display: w.X.Flex,
                            flexWrap: w.Ba.NoWrap,
                            flexShrink: 0,
                            alignItems: w.f.Center,
                            className: "channel-header__right",
                            "data-test-selector": n,
                            "data-target": "channel-header-right"
                        }, t)
                    }, t.prototype.getFollowingState = function(e) {
                        return void 0 === e && (e = this.props), !!(e.data && e.data.user && e.data.user.self && e.data.user.self.follower) && null !== e.data.user.self.follower.disableNotifications
                    }, t.prototype.getFollowData = function() {
                        if (this.props.data && this.props.data.user && this.props.data.user.id) return this.props.data.user
                    }, t
                }(o.Component),
                Q = Object(a.compose)(Object(u.a)(U, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(p.a)([{
                    topic: function(e) {
                        return e.channelLogin ? Object(h.J)(e.channelLogin) : ""
                    },
                    skip: function(e) {
                        return !e.channelLogin || !e.firstPageLoaded
                    },
                    mapMessageTypesToProps: (I = {}, I[m.PubsubMessageType.ViewCount] = "viewCount", I)
                }]), Object(F.b)("ChannelHeader"))(q)
        },
        l41m: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return d
            }), n.d(t, "c", function() {
                return p
            }), n.d(t, "d", function() {
                return m
            }), n.d(t, "b", function() {
                return k
            });
            var i = n("mrSG"),
                r = n("QzU5"),
                o = n("DpwM"),
                a = n("g807"),
                s = n("RNNG"),
                l = n("pU2t"),
                c = n("KD05"),
                d = {
                    beginSec: Number.MIN_VALUE,
                    endSec: Number.MAX_VALUE
                },
                u = function(e, t) {
                    return t.commenter in e
                },
                p = function(e, t, n, i) {
                    var r = e.vodChat.comments,
                        o = r.currentVideoTime,
                        c = r.comments;
                    return 0 === c.commentCount ? [] : Array.from(new a.a(c)).reduce(function(r, a) {
                        return a.offset > o ? r : (a.comments.forEach(function(o) {
                            var a = Object(s.b)(c, o);
                            if (void 0 !== a && (n || !u(i, a))) return a.source === l.b && y(e.vodChat.comments.isReplayFilterOn, t) ? r : r.push(g(a, e, n, i, t))
                        }), r)
                    }, []).sort(h)
                },
                m = function(e) {
                    var t = function(e) {
                        return e.vodChat.comments.comments
                    }(e);
                    return Object.keys(t.parentComments).map(function(n) {
                        return b(t.parentComments[n], e)
                    }).filter(function(e) {
                        return void 0 !== e.video
                    }).sort(f)
                },
                h = function(e, t) {
                    return e.comment.contentOffset === t.comment.contentOffset ? e.comment.createdAt.getTime() - t.comment.createdAt.getTime() : e.comment.contentOffset - t.comment.contentOffset
                },
                f = function(e, t) {
                    return e.comment.createdAt.getTime() === t.comment.createdAt.getTime() ? t.comment.contentOffset - e.comment.contentOffset : t.lastUpdated.getTime() - e.lastUpdated.getTime()
                },
                g = function(e, t, n, i, r) {
                    var a = new Array,
                        s = new Array,
                        l = t.vodChat.comments.comments.replies[e.id],
                        c = e.createdAt;
                    return Array.isArray(l) && l.forEach(function(e) {
                        !n && u(i, e) || (e.source === o.f && y(t.vodChat.comments.isReplayFilterOn, r) ? (s.push(g(e, t, n, i)), c = C(c, e.createdAt)) : (a.push(g(e, t, n, i)), c = C(c, e.createdAt)))
                    }), y(t.vodChat.comments.isReplayFilterOn, r) ? {
                        author: t.vodChat.users.users[e.commenter],
                        comment: e,
                        lastUpdated: c,
                        replies: s.sort(h)
                    } : {
                        author: t.vodChat.users.users[e.commenter],
                        comment: e,
                        lastUpdated: c,
                        replies: a.sort(h)
                    }
                },
                v = function(e, t) {
                    var n = new Array,
                        i = t.vodChat.comments.comments.replies[e.id],
                        r = e.createdAt;
                    return Array.isArray(i) && i.forEach(function(e) {
                        n.push(v(e, t)), r = C(r, e.createdAt)
                    }), {
                        author: t.vodChat.users.users[e.commenter],
                        comment: e,
                        lastUpdated: r,
                        replies: n.sort(h)
                    }
                },
                b = function(e, t) {
                    var n = v(e, t);
                    return i.__assign({}, n, {
                        video: t.vodChat.moderation.videos[Object(c.a)(e.contentId)]
                    })
                },
                k = function(e) {
                    return 0 === e.commentCount ? d : {
                        beginSec: e.minOffset,
                        endSec: e.maxOffset
                    }
                },
                y = function(e, t) {
                    return !!t && (e && (t === r.a.Archive || t === r.a.Highlight))
                },
                C = function(e, t) {
                    return e.getTime() > t.getTime() ? e : t
                }
        },
        lRNp: function(e, t, n) {},
        lZdE: function(e, t, n) {
            "use strict";

            function i(e) {
                return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")
            }
            n.d(t, "a", function() {
                return i
            })
        },
        llur: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return s
            });
            var i = n("QzU5"),
                r = n("2xye"),
                o = n("XKWF");

            function a(e) {
                switch (e) {
                    case i.a.Archive:
                        return r.SpadeVideoBroadcastType.Archive;
                    case i.a.Highlight:
                        return r.SpadeVideoBroadcastType.Highlight;
                    case i.a.Upload:
                        return r.SpadeVideoBroadcastType.Upload;
                    case i.a.PastPremiere:
                        return r.SpadeVideoBroadcastType.PastPremiere;
                    case i.a.PremiereUpload:
                        return r.SpadeVideoBroadcastType.PremiereUpload;
                    default:
                        return e
                }
            }

            function s(e) {
                switch (e) {
                    case o.a.Popular:
                        return r.PageviewContent.PopularVideos;
                    case o.a.Newest:
                        return r.PageviewContent.RecentVideos;
                    default:
                        return e
                }
            }
        },
        "lpj/": function(e, t, n) {},
        m493: function(e, t, n) {},
        mSxK: function(e, t, n) {
            "use strict";
            var i = n("km1c"),
                r = n("/MKj"),
                o = n("fvjX"),
                a = n("aCAx"),
                s = n("wxwP");
            var l = Object(r.connect)(function(e) {
                return {
                    firstPageLoaded: e.session.firstPageLoaded
                }
            }, function(e) {
                return Object(o.bindActionCreators)({
                    showBrowserNotificationsUpsellModal: function() {
                        return Object(a.d)(s.a, {})
                    },
                    closeBrowserNotificationsUpsellModal: a.c
                }, e)
            })(i.c);
            n.d(t, "d", function() {
                return i.d
            }), n.d(t, !1, function() {}), n.d(t, "a", function() {
                return i.a
            }), n.d(t, "b", function() {
                return i.b
            }), n.d(t, "c", function() {
                return l
            })
        },
        mmRu: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("mrSG"),
                o = n("q1tI"),
                a = n("u5aL"),
                s = n("/7QA"),
                l = n("Ue10"),
                c = function(e) {
                    return o.createElement(l.A, {
                        icon: l.tb.Emoticons,
                        ariaLabel: Object(s.d)("Emote picker", "EmotePickerButton"),
                        type: e.isActive ? l.C.Default : l.C.Secondary,
                        onClick: e.onClick,
                        "data-a-target": "emote-picker-button"
                    })
                },
                d = n("oJmH"),
                u = n("fvjX"),
                p = n("lZCe"),
                m = n("ZS2+"),
                h = n("yR8l"),
                f = n("x7UT"),
                g = n("Mj6i"),
                v = n("UUve"),
                b = n("1/iK"),
                k = n("aCAx"),
                y = n("D7An"),
                C = n("kRBY"),
                S = n("+pBb"),
                E = n("KriR"),
                _ = n("GzyO"),
                w = n("OpME"),
                O = n("cpJf"),
                T = n("W8Fi"),
                D = n("0WFu"),
                N = function(e, t) {
                    return t.map(function(t) {
                        return t.emotes && t.emoteSetID && !e.has(parseInt(t.emoteSetID, 10)) ? r.__assign({}, t, {
                            emotes: t.emotes.map(function(e) {
                                return r.__assign({}, e, {
                                    isLocked: !0
                                })
                            })
                        }) : t
                    }).map(function(e) {
                        return r.__assign({}, e, {
                            emotes: Object(w.e)(e.emotes, e.emoteSetID)
                        })
                    })
                },
                I = function(e) {
                    return e.tier && !isNaN(parseInt(e.tier, 10)) ? parseInt(e.tier, 10) / 1e3 : 1
                },
                x = n("GnwI"),
                R = n("br9A"),
                j = n("TSYQ"),
                M = n("8/mp"),
                F = n("8Ad5");

            function L(e) {
                return e.charCode === F.a.Enter || e.charCode === F.a.Space
            }
            var V, U = n("2xye"),
                A = n("7SjK"),
                P = n("4rCz"),
                B = (n("/Kya"), function(e) {
                    var t = {
                            "emote-picker__tab": !0
                        },
                        n = null,
                        i = null;
                    if (e.channelTabVisible) {
                        var a = j(r.__assign({}, t, {
                            "emote-picker__tab--active": e.channelTabEnabled && e.channelTabSelected,
                            "emote-picker__tab--disabled": !e.channelTabEnabled
                        }));
                        n = o.createElement(l.Pa, {
                            padding: {
                                x: 1
                            }
                        }, o.createElement("div", {
                            key: "ChannelTabLink",
                            id: "emote-picker__channel",
                            className: a,
                            onClick: e.channelTabEnabled ? e.selectChannelTab : void 0,
                            onKeyPress: e.channelTabEnabled ? e.selectChannelTabKeypress : void 0,
                            "data-a-target": "emote-channel-tab",
                            tabIndex: 0
                        }, o.createElement("span", null, Object(P.d)("Channel", "EmotePicker"))))
                    }
                    if (e.allTabVisible) {
                        var s = j(r.__assign({}, t, {
                            "emote-picker__tab--active": !(e.channelTabSelected && e.channelTabEnabled)
                        }));
                        i = o.createElement(l.Pa, {
                            padding: {
                                x: 1
                            }
                        }, o.createElement("div", {
                            key: "allTabLink",
                            id: "emote-picker__all",
                            className: s,
                            onClick: e.selectAllTab,
                            onKeyPress: e.selectAllTabKeypress,
                            "data-a-target": "emote-all-tab",
                            tabIndex: 0
                        }, o.createElement("span", null, Object(P.d)("All", "EmotePicker"))))
                    }
                    return o.createElement(l.Eb, {
                        background: l.r.Base,
                        borderTop: !0,
                        className: "emote-picker__tabs-container"
                    }, n, i)
                }),
                W = n("DnOo"),
                X = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = [];
                        if (this.props.subscribeTexts)
                            for (var t = 0; t <= this.props.plan.level; t++) {
                                var n = this.props.subscribeTexts[t];
                                n && (t < this.props.plan.level ? (e.push(o.createElement("span", {
                                    key: "upsell-predicate:" + t
                                }, n)), e.push(o.createElement("span", {
                                    key: "upsell-plus:" + t
                                }, " + "))) : this.props.plan.level > 0 ? e.push(o.createElement("strong", {
                                    key: "upsell-strong-end:" + this.props.plan.level
                                }, n)) : e.push(o.createElement("span", {
                                    key: "upsell-end:" + t
                                }, n)))
                            }
                        if (!this.props.plan.emoteSetID) return null;
                        var i = {
                                id: this.props.plan.emoteSetID,
                                emotes: this.props.plan.emotes || []
                            },
                            r = {};
                        if (this.props.plan.tier) {
                            var a = Object(D.a)(this.props.plan.tier);
                            null === a && (a = 1), r.purchase = Object(s.d)("Tier { tierNum }", {
                                tierNum: a
                            }, "assembleSubscribeTexts")
                        }
                        return o.createElement(l.Xa, {
                            className: "emote-picker-plan-upsell",
                            display: l.X.Flex,
                            flexDirection: l.Aa.Column,
                            alignItems: l.f.Center,
                            margin: {
                                bottom: 1
                            }
                        }, o.createElement(A.a, {
                            emotes: i.emotes,
                            locked: !0
                        }), o.createElement(l.Xa, {
                            margin: 1,
                            alignItems: l.f.Center
                        }, e), o.createElement(W.a, {
                            isSubbedToTier: !1,
                            tierPrice: r.purchase || "",
                            handleSubAction: this.props.handleSubAction,
                            productName: this.props.plan.name,
                            url: this.props.plan.url,
                            isEsportChannel: this.props.isEsportChannel
                        }))
                    }, t
                }(o.Component),
                G = (n("JGCS"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.channelTabSelectionKeypress = function(e) {
                            L(e) && n.selectChannelTab(e)
                        }, n.allTabSelectionKeypress = function(e) {
                            L(e) && n.selectAllTab(e)
                        }, n.onClickEmote = function(e) {
                            if (n.props.onClickEmote) {
                                n.props.onClickEmote(e.displayName || e.token, e.id);
                                var t = {
                                    channel_id: n.props.channelID,
                                    chatroom_id: n.props.roomID,
                                    emote_picker_sid: n.props.emotePickerSessionID,
                                    emote_id: e.id,
                                    emoticon_set_id: e.setID,
                                    generated_by: n.props.emotePickerSource
                                };
                                s.o.track(U.SpadeEventType.EmotePickerClickthrough, t)
                            }
                        }, n.closeOnEsc = function(e) {
                            e.keyCode === F.a.Esc && n.props.toggleVisibility()
                        }, n.handleFilterChange = function(e) {
                            var t = e.target.value,
                                i = t.toLowerCase(),
                                r = n.filterAvailableUpsells(n.props.availableUpsells, i),
                                o = n.filterEmoteSets(n.props.ownedChannelEmoteSets, i);
                            n.setState({
                                filter: i,
                                filteredAllEmoteSets: n.filterEmoteSets(n.props.allEmoteSets, i),
                                filteredAvailableUpsells: r,
                                filteredOwnedChannelEmoteSets: o,
                                inputValue: t,
                                channelTabEnabled: o.length > 0 || r.length > 0
                            })
                        }, n.state = {
                            filter: "",
                            filteredOwnedChannelEmoteSets: t.ownedChannelEmoteSets,
                            filteredAvailableUpsells: t.availableUpsells,
                            filteredAllEmoteSets: t.allEmoteSets,
                            inputValue: "",
                            channelTabSelected: !0,
                            channelTabEnabled: t.ownedChannelEmoteSets.length > 0 || t.availableUpsells.length > 0
                        }, n.selectAllTab = function() {
                            return n.setChannelTabSelected(!1)
                        }, n.selectChannelTab = function() {
                            return n.setChannelTabSelected(!0)
                        }, n
                    }
                    return r.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        if (e.channelID && e.emotePickerSessionID && !this.props.emotePickerSessionID) {
                            var t = {
                                channel_id: e.channelID,
                                emote_picker_sid: e.emotePickerSessionID,
                                generated_by: e.emotePickerSource,
                                chatroom_id: e.roomID
                            };
                            s.o.track(U.SpadeEventType.ViewedEmotePicker, t)
                        }
                        if (!e.gqlError)
                            if (this.state.filter.length > 0) {
                                var n = this.filterAvailableUpsells(this.props.availableUpsells, this.state.filter),
                                    i = this.filterEmoteSets(this.props.ownedChannelEmoteSets, this.state.filter);
                                this.setState({
                                    filteredAllEmoteSets: this.filterEmoteSets(this.props.allEmoteSets, this.state.filter),
                                    filteredAvailableUpsells: n,
                                    filteredOwnedChannelEmoteSets: i,
                                    channelTabEnabled: i.length > 0 || n.length > 0
                                })
                            } else this.setState({
                                filteredOwnedChannelEmoteSets: e.ownedChannelEmoteSets,
                                filteredAvailableUpsells: e.availableUpsells,
                                filteredAllEmoteSets: e.allEmoteSets,
                                channelTabEnabled: e.ownedChannelEmoteSets.length > 0 || e.availableUpsells.length > 0
                            })
                    }, t.prototype.render = function() {
                        return o.createElement(l.u, {
                            "data-a-target": "emote-picker",
                            direction: this.props.direction ? this.props.direction : l.v.TopRight,
                            size: this.props.size ? this.props.size : l.w.Medium,
                            noTail: !0,
                            show: !0
                        }, o.createElement(l.Xa, {
                            className: j("emote-picker")
                        }, this.renderTabContent(), o.createElement(l.Xa, {
                            className: "emote-picker__controls-container",
                            position: l.jb.Relative
                        }, o.createElement(l.Eb, {
                            padding: 1,
                            borderTop: !0
                        }, o.createElement(l.Ra, {
                            autoFocus: !0,
                            onChange: this.handleFilterChange,
                            onKeyDown: this.closeOnEsc,
                            placeholder: Object(s.d)("Search for Emotes", "EmotePicker"),
                            type: l.Ta.Text,
                            value: this.state.inputValue
                        })), o.createElement(B, {
                            allTabVisible: this.props.allEmoteSets.length > 0,
                            channelTabEnabled: this.state.channelTabEnabled,
                            channelTabSelected: this.state.channelTabSelected,
                            channelTabVisible: !!this.props.channelTabVisible,
                            selectAllTab: this.selectAllTab,
                            selectAllTabKeypress: this.allTabSelectionKeypress,
                            selectChannelTab: this.selectChannelTab,
                            selectChannelTabKeypress: this.channelTabSelectionKeypress
                        }))))
                    }, t.prototype.renderTabContent = function() {
                        var e = this,
                            t = [];
                        if (this.props.gqlError) t.push(o.createElement(l.Xa, {
                            key: "emotePicker-error"
                        }, o.createElement(l.W, {
                            color: l.O.Error
                        }, Object(s.d)("Unable to load available emotes.", "EmotePicker"))));
                        else if (this.props.loading) t.push(o.createElement(l.Xa, {
                            alignItems: l.f.Center,
                            display: l.X.Flex,
                            key: "loading",
                            fullHeight: !0,
                            fullWidth: !0,
                            justifyContent: l.Wa.Center
                        }, o.createElement(l.Za, {
                            key: "LoadingSpinner"
                        })));
                        else if (this.state.channelTabEnabled && this.state.channelTabSelected) {
                            if (this.state.filteredOwnedChannelEmoteSets.length > 0) {
                                var n = this.state.filteredOwnedChannelEmoteSets[0].emotes.map(function(t) {
                                    return t.setID = e.state.filteredOwnedChannelEmoteSets[0].id, t
                                });
                                t.push(o.createElement(l.Xa, {
                                    className: "emote-picker__content-block",
                                    key: "ownedChannelEmoteSets",
                                    padding: 1,
                                    position: l.jb.Relative
                                }, o.createElement(A.a, {
                                    emotes: n,
                                    onClickEmote: this.onClickEmote
                                })))
                            }
                            t = t.concat(this.state.filteredAvailableUpsells.map(function(t) {
                                return o.createElement(l.Xa, {
                                    className: "emote-picker__content-block",
                                    key: "planUpsell:" + t.level,
                                    padding: 1,
                                    position: l.jb.Relative
                                }, o.createElement(X, {
                                    plan: t,
                                    isEsportChannel: e.props.isEsportChannel,
                                    subscribeTexts: e.props.subscribeTexts,
                                    handleSubAction: e.props.handleSubAction
                                }))
                            }))
                        } else t = this.state.filteredAllEmoteSets.map(function(t) {
                            var n = [];
                            return t.emotes.forEach(function(e) {
                                e.setID = t.id, n.push(e)
                            }), o.createElement(l.Xa, {
                                key: "emoteGrid" + t.id,
                                position: l.jb.Relative,
                                padding: {
                                    top: 1,
                                    bottom: 2
                                },
                                className: "emote-picker__content-block"
                            }, o.createElement(A.a, {
                                emotes: n,
                                onClickEmote: e.onClickEmote
                            }))
                        });
                        return t.length > 0 ? o.createElement(M.b, {
                            className: "emote-picker__tab-content"
                        }, o.createElement(l.Xa, {
                            padding: 1
                        }, t)) : null
                    }, t.prototype.filterEmoteSet = function(e, t) {
                        return e.filter(function(e) {
                            return e.token.toLowerCase().includes(t)
                        })
                    }, t.prototype.setChannelTabSelected = function(e) {
                        this.setState({
                            channelTabSelected: e
                        })
                    }, t.prototype.filterEmoteSets = function(e, t) {
                        for (var n = [], i = 0, r = e; i < r.length; i++) {
                            var o = r[i],
                                a = this.filterEmoteSet(o.emotes, t);
                            a.length > 0 && n.push({
                                id: o.id,
                                emotes: a
                            })
                        }
                        return n
                    }, t.prototype.filterAvailableUpsells = function(e, t) {
                        for (var n = [], i = 0, o = e; i < o.length; i++) {
                            var a = o[i];
                            if (a.emotes) {
                                var s = this.filterEmoteSet(a.emotes, t);
                                s.length > 0 && n.push(r.__assign({}, a, {
                                    emotes: s
                                }))
                            }
                        }
                        return n
                    }, t = r.__decorate([Object(x.b)("EmotePickerMenu", {
                        autoReportInteractive: !0
                    })], t)
                }(o.Component)),
                z = (n("zyUW"), function(e) {
                    var t = null;
                    return e.imgSrc && (t = o.createElement(o.Fragment, null, o.createElement(l.S, {
                        className: "emote-grid-section__header-image",
                        src: e.imgSrc,
                        alt: e.label
                    }), o.createElement(l.Xa, {
                        padding: {
                            right: .5
                        }
                    }))), o.createElement(l.Xa, {
                        position: l.jb.Relative,
                        padding: 1,
                        className: "emote-grid-section"
                    }, o.createElement(l.Eb, {
                        alignItems: l.f.Center,
                        display: l.X.Flex,
                        padding: {
                            x: 1,
                            bottom: .5
                        }
                    }, t, o.createElement(l.W, {
                        align: l.fc.Middle,
                        bold: !0,
                        color: l.O.Alt
                    }, e.label)), o.createElement(A.a, {
                        context: e.context,
                        emotes: e.emotes,
                        onClickEmote: e.onClickEmote,
                        spaced: !0
                    }))
                }),
                H = n("17x9"),
                q = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.checkVisible = function(e, n) {
                            t.props.checkVisible(e, n)
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.unregister = this.context.registerReceiver(this)
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister && this.unregister()
                    }, t.prototype.render = function() {
                        return o.createElement(o.Fragment, null, this.props.children)
                    }, t.contextTypes = {
                        registerReceiver: H.func
                    }, t
                }(o.Component),
                Q = (n("cr2a"), function(e) {
                    return o.createElement(l.Xa, {
                        className: "emote-picker-tab-item " + (e.isActive ? "emote-picker-tab-item--active" : ""),
                        position: l.jb.Relative
                    }, o.createElement(l.Ua, {
                        "data-a-target": e.label,
                        onClick: e.onClick
                    }, o.createElement(l.Xa, {
                        padding: 1,
                        display: l.X.InlineFlex
                    }, o.createElement(l.sb, {
                        asset: e.icon
                    }))))
                }),
                K = n("a5fV"),
                Y = (n("GLn2"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.channelSubscriptionProducts.find(function(t) {
                                return !!t.emotes.find(function(t) {
                                    return e.props.subUpsellClickedEmote.id === t.id
                                })
                            }),
                            n = this.props.channelSubscriptionProducts.filter(function(e) {
                                return !e.emotes.find(function(e) {
                                    return !e.isLocked
                                })
                            }).sort(function(e, t) {
                                var n = I(e);
                                return I(t) - n
                            });
                        if (t && this.props.subUpsellClickedEmote.srcSet && this.props.channelDisplayName) {
                            var i = I(t),
                                a = Object(s.d)("Subscribe at Tier {tierNumber}", {
                                    tierNumber: i
                                }, "EmotePickerCard"),
                                c = [],
                                d = [];
                            n.forEach(function(e) {
                                if (I(e) <= i) {
                                    var t = e.emotes.map(function(e) {
                                        return r.__assign({}, e, {
                                            isLocked: !1
                                        })
                                    });
                                    d.push.apply(d, t)
                                } else c.push.apply(c, e.emotes)
                            });
                            var u = c.concat(d),
                                p = t.price.toString() || "";
                            if (t.priceInfo) {
                                var m = t.priceInfo;
                                p = Object(K.a)(Object(K.b)(m.total, m.exponent), m.currency)
                            }
                            return o.createElement(l.Xa, {
                                className: "emote-sub-upsell"
                            }, o.createElement(l.Eb, {
                                padding: {
                                    top: .5
                                }
                            }, o.createElement(l.z, {
                                type: l.F.Text,
                                icon: l.tb.AngleLeft,
                                onClick: this.props.onBackClick,
                                size: l.D.Small
                            }, Object(s.d)("Back", "EmotePickerCard"))), o.createElement(l.Eb, {
                                display: l.X.Flex,
                                padding: {
                                    x: 2,
                                    bottom: 1
                                }
                            }, o.createElement(l.Xa, {
                                flexGrow: 0,
                                flexShrink: 0,
                                padding: {
                                    top: .5
                                }
                            }, o.createElement(l.S, {
                                src: this.getBigImageSrc(this.props.subUpsellClickedEmote.srcSet),
                                alt: this.props.subUpsellClickedEmote.displayName || ""
                            })), o.createElement(l.Xa, {
                                flexGrow: 1,
                                flexShrink: 1,
                                padding: {
                                    left: 1
                                }
                            }, o.createElement(l.W, {
                                bold: !0
                            }, this.renderCopyHeader(i.toString())), o.createElement(l.W, null, this.renderCopyBody(i.toString(), d.length)))), o.createElement(l.Xa, {
                                display: l.X.Flex,
                                alignItems: l.f.Center,
                                justifyContent: l.Wa.Center,
                                padding: {
                                    x: 2
                                }
                            }, o.createElement(W.a, {
                                customSubscribeNowMessage: a,
                                isSubbedToTier: !1,
                                fullWidth: !0,
                                tierPrice: p,
                                handleSubAction: this.props.handleSubAction,
                                productName: t.name,
                                url: t.url,
                                isEsportChannel: this.props.isEsportChannel
                            })), o.createElement(l.ec, null, o.createElement("hr", {
                                className: "emote-sub-upsell__divider"
                            })), o.createElement(M.b, {
                                className: "emote-sub-upsell__content"
                            }, o.createElement(l.Xa, null, o.createElement(l.Xa, {
                                padding: {
                                    x: 2
                                }
                            }, o.createElement(l.W, {
                                bold: !0
                            }, Object(s.d)("{numUnlocked} Emotes Included", {
                                numUnlocked: d.length
                            }, "EmotePickerCard"))), o.createElement(l.Xa, {
                                padding: {
                                    x: 1,
                                    top: .5,
                                    bottom: 3
                                }
                            }, o.createElement(A.a, {
                                emotes: u,
                                spaced: !0,
                                onClickEmote: this.props.onClickEmote
                            })))))
                        }
                        return null
                    }, t.prototype.renderCopyHeader = function(e) {
                        return Object(s.d)("{channelDisplayName} - Tier {tierNumber} Subscription", {
                            tierNumber: e,
                            channelDisplayName: this.props.channelDisplayName
                        }, "EmotePickerCard")
                    }, t.prototype.renderCopyBody = function(e, t) {
                        return 1 === t ? Object(s.d)("To unlock 1 emote and more subscriber benefits, subscribe at Tier {tierNumber}", {
                            tierNumber: e
                        }, "EmotePickerCard") : Object(s.d)("To unlock {numEmotes} emotes and more subscriber benefits, subscribe at Tier {tierNumber}.", {
                            tierNumber: e,
                            numEmotes: t
                        }, "EmotePickercard")
                    }, t.prototype.getBigImageSrc = function(e) {
                        var t = e.split(" ");
                        return 6 === t.length ? t[2] : t[0]
                    }, t
                }(o.Component)),
                $ = n("XQnt"),
                Z = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        (!this.props.channelID || this.props.data && !this.props.data.loading) && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return null === this.props.subUpsellClickedEmote ? null : o.createElement(Y, {
                            channelDisplayName: this.props.channelDisplayName,
                            channelSubscriptionProducts: this.subscriptionProducts,
                            handleSubAction: this.props.handleSubAction,
                            isEsportChannel: this.props.isEsportChannel,
                            onBackClick: this.props.onBackClick,
                            onClickEmote: this.props.onClickEmote,
                            subUpsellClickedEmote: this.props.subUpsellClickedEmote
                        })
                    }, Object.defineProperty(t.prototype, "subscriptionProducts", {
                        get: function() {
                            if (this.props.data && this.props.data.user && this.props.data.user.subscriptionProducts) {
                                var e = this.props.data.user.subscriptionProducts.filter(function(e) {
                                    return e
                                });
                                return N(this.props.ownedSetIDs, e)
                            }
                            return this.props.channelSubscriptionProducts
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(o.Component),
                J = Object(d.compose)(Object(h.a)($, {
                    options: function(e) {
                        return {
                            variables: {
                                channelID: e.channelID
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelID
                    }
                }), Object(x.b)("EmoteSubUpsell"))(Z);
            ! function(e) {
                e.FrequentlyUsed = "frequently_used", e.CurrentChannel = "current_channel", e.OtherChannel = "other_subbed_channel", e.Unlocked = "unlocked", e.Global = "global"
            }(V || (V = {}));
            var ee;
            ! function(e) {
                e.FrequentlyUsedEmotes = "FREQUENTLY_USED_EMOTES", e.ChannelEmotes = "CHANNEL_EMOTES", e.AllEmotes = "ALL_EMOTES"
            }(ee || (ee = {}));
            var te = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.onTabNavClick = function(e) {
                            if (n.scroll && n.scroll.scrollContent && e.currentTarget.getAttribute("data-a-target")) {
                                var t = e.currentTarget.getAttribute("data-a-target"),
                                    i = ee.FrequentlyUsedEmotes;
                                switch (t) {
                                    case ee.FrequentlyUsedEmotes:
                                        n.frequentlyUsedEmotesRef && (n.frequentlyUsedEmotesRef.scrollIntoView(), i = ee.FrequentlyUsedEmotes);
                                        break;
                                    case ee.ChannelEmotes:
                                        n.channelEmotesRef && (n.channelEmotesRef.scrollIntoView(), i = ee.ChannelEmotes);
                                        break;
                                    case ee.AllEmotes:
                                        n.allEmotesRef && (n.allEmotesRef.scrollIntoView(), i = ee.AllEmotes)
                                }
                                n.setState({
                                    selectedNavTab: i
                                })
                            }
                        }, n.onClickEmote = function(e, t) {
                            if (n.props.onClickEmote && !e.isLocked) {
                                n.props.onClickEmote(e.displayName || e.token, e.id);
                                var i = {
                                    channel_id: n.props.channelID,
                                    chatroom_id: n.props.roomID,
                                    context: t,
                                    emote_picker_sid: n.props.emotePickerSessionID,
                                    emote_id: e.id,
                                    emoticon_set_id: e.setID,
                                    generated_by: n.props.emotePickerSource
                                };
                                s.o.track(U.SpadeEventType.EmotePickerClickthrough, i)
                            } else e.isLocked && n.onClickLockedEmote(e)
                        }, n.saveScrollRef = function(e) {
                            return n.scroll = e
                        }, n.saveAllEmotesRef = function(e) {
                            return n.allEmotesRef = e
                        }, n.saveChannelEmotesRef = function(e) {
                            return n.channelEmotesRef = e
                        }, n.saveFrequentlyUsedEmotesRef = function(e) {
                            return n.frequentlyUsedEmotesRef = e
                        }, n.checkVisible = function(e, t) {
                            if (t) {
                                var i = n.state.selectedNavTab;
                                n.channelEmotesRef ? t.offset > 0 && t.offset < n.channelEmotesRef.offsetTop ? i = ee.FrequentlyUsedEmotes : t.offset > n.channelEmotesRef.offsetTop && t.offset < n.allEmotesRef.offsetTop ? i = ee.ChannelEmotes : t.offset > n.allEmotesRef.offsetTop && (i = ee.AllEmotes) : t.offset > 0 && t.offset < n.allEmotesRef.offsetTop ? i = ee.FrequentlyUsedEmotes : t.offset > n.allEmotesRef.offsetTop && (i = ee.AllEmotes), n.state.selectedNavTab !== i && n.setState({
                                    selectedNavTab: i
                                })
                            }
                        }, n.onClickLockedEmote = function(e) {
                            n.setState({
                                subUpsellClickedEmote: e
                            })
                        }, n.onBackClick = function() {
                            n.setState({
                                subUpsellClickedEmote: null,
                                selectedNavTab: ee.FrequentlyUsedEmotes
                            })
                        }, n.handleFilterChange = function(e) {
                            var t = e.target.value,
                                i = t.toLowerCase();
                            n.setState({
                                filter: i,
                                inputValue: t,
                                filteredEmotes: n.filterEmoteSets(n.props.allEmoteSets, i),
                                selectedNavTab: ee.FrequentlyUsedEmotes
                            })
                        }, n.filterEmoteSets = function(e, t) {
                            var n = [];
                            e.forEach(function(e) {
                                e.emotes.filter(function(e) {
                                    return e.token.toLowerCase().includes(t)
                                }).forEach(function(t) {
                                    t.setID = e.id, n.push(t)
                                })
                            });
                            var i = Object(_.d)(),
                                r = 0 === Object.keys(i).length ? void 0 : i;
                            return Object(w.f)(n, t, r)
                        }, n.updateChannelEmotes = function(e) {
                            var t = e.channelSubscriptionProducts.reduce(function(e, t) {
                                return e.concat(t.emotes)
                            }, []);
                            if (0 === t.length || !e.channelDisplayName) return null;
                            var i = [],
                                r = [];
                            t.forEach(function(e) {
                                e.isLocked ? i.push(e) : r.push(e)
                            });
                            var o = r.concat(i);
                            n.setState({
                                sortedChannelEmotes: o
                            })
                        }, n.state = {
                            filter: "",
                            filteredEmotes: [],
                            inputValue: "",
                            selectedNavTab: ee.FrequentlyUsedEmotes,
                            sortedChannelEmotes: [],
                            subUpsellClickedEmote: null
                        }, n
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        if (this.props.channelID) {
                            var e = {
                                channel_id: this.props.channelID,
                                emote_picker_sid: this.props.emotePickerSessionID,
                                generated_by: this.props.emotePickerSource,
                                chatroom_id: this.props.roomID
                            };
                            s.o.track(U.SpadeEventType.ViewedEmotePicker, e), this.updateChannelEmotes(this.props)
                        }
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.props.channelID !== e.channelID && this.updateChannelEmotes(e)
                    }, t.prototype.render = function() {
                        return o.createElement(l.u, {
                            "data-a-target": "emote-picker",
                            direction: this.props.direction ? this.props.direction : l.v.TopRight,
                            size: this.props.size ? this.props.size : l.w.Medium,
                            noTail: !0,
                            show: !0
                        }, o.createElement(l.Xa, {
                            className: "emote-picker"
                        }, this.renderView()))
                    }, t.prototype.renderView = function() {
                        var e = null;
                        return null === this.state.subUpsellClickedEmote && (e = o.createElement(o.Fragment, null, o.createElement(l.Eb, {
                            padding: {
                                top: 2,
                                x: 2
                            }
                        }, o.createElement(l.Ra, {
                            autoFocus: !0,
                            onChange: this.handleFilterChange,
                            placeholder: Object(s.d)("Search for Emotes", "EmotePickerCard"),
                            type: l.Ta.Text,
                            value: this.state.inputValue
                        })), this.renderTabContent())), o.createElement(o.Fragment, null, o.createElement(J, {
                            channelDisplayName: this.props.channelDisplayName,
                            channelID: this.props.channelID,
                            channelSubscriptionProducts: this.props.channelSubscriptionProducts,
                            isEsportChannel: this.props.isEsportChannel || !1,
                            handleSubAction: this.props.handleSubAction,
                            onBackClick: this.onBackClick,
                            onClickEmote: this.onClickLockedEmote,
                            ownedSetIDs: this.props.ownedSetIDs,
                            subUpsellClickedEmote: this.state.subUpsellClickedEmote
                        }), e)
                    }, t.prototype.renderTabContent = function() {
                        return this.props.gqlError ? o.createElement(l.Xa, null, o.createElement(l.W, {
                            "data-test-selector": "emote-picker-menu-error-text",
                            color: l.O.Error
                        }, Object(s.d)("Unable to load available emotes.", "EmotePickerCard"))) : this.props.loading ? o.createElement(l.Xa, {
                            alignItems: l.f.Center,
                            display: l.X.Flex,
                            fullHeight: !0,
                            fullWidth: !0,
                            justifyContent: l.Wa.Center,
                            padding: 1
                        }, o.createElement(l.Za, null)) : "" !== this.state.filter ? this.renderSearchContent() : o.createElement(o.Fragment, null, o.createElement(M.b, {
                            scrollRef: this.saveScrollRef,
                            className: "emote-picker__tab-content"
                        }, o.createElement(l.Xa, {
                            padding: {
                                bottom: 2
                            }
                        }, o.createElement(q, {
                            checkVisible: this.checkVisible
                        }, this.getFrequentlyUsedEmoteGrid(), this.getCurrentChannelEmoteGrid(), this.getOtherSubEmoteGrids(), this.getResidualEmoteGrids()))), this.renderTabNav())
                    }, t.prototype.getFrequentlyUsedEmoteGrid = function() {
                        return 0 === this.props.frequentlyUsedEmotes.length ? null : o.createElement(l.Xa, {
                            refDelegate: this.saveFrequentlyUsedEmotesRef
                        }, o.createElement(z, {
                            context: V.FrequentlyUsed,
                            emotes: this.props.frequentlyUsedEmotes,
                            label: Object(s.d)("Frequently Used", "EmotePickerCard"),
                            onClickEmote: this.onClickEmote
                        }))
                    }, t.prototype.getCurrentChannelEmoteGrid = function() {
                        return 0 !== this.state.sortedChannelEmotes.length && this.props.channelDisplayName ? o.createElement(l.Xa, {
                            className: "emote-picker__content-block",
                            refDelegate: this.saveChannelEmotesRef
                        }, o.createElement(z, {
                            context: V.CurrentChannel,
                            emotes: this.state.sortedChannelEmotes,
                            imgSrc: this.props.channelProfileImageURL || void 0,
                            label: this.props.channelDisplayName,
                            onClickEmote: this.onClickEmote
                        })) : null
                    }, t.prototype.getOtherSubEmoteGrids = function() {
                        var e = this,
                            t = [];
                        return this.props.otherChannelEmoteSets.forEach(function(n) {
                            n.owner && n.owner.displayName && t.push(o.createElement(l.Xa, {
                                key: "emote-grid--" + n.id + "-emotes",
                                className: "emote-picker__content-block"
                            }, o.createElement(z, {
                                context: V.OtherChannel,
                                emotes: n.emotes,
                                imgSrc: n.owner.profileImageURL || void 0,
                                label: n.owner.displayName,
                                onClickEmote: e.onClickEmote
                            })))
                        }), o.createElement(o.Fragment, null, t)
                    }, t.prototype.getResidualEmoteGrids = function() {
                        var e = [];
                        return this.props.unlockedEmotes.length > 0 && e.push(o.createElement(l.Xa, {
                            key: "emote-grid--unlocked-emotes",
                            className: "emote-picker__content-block"
                        }, o.createElement(z, {
                            context: V.Unlocked,
                            emotes: this.props.unlockedEmotes,
                            label: Object(s.d)("Unlocked", "EmotePickerCard"),
                            onClickEmote: this.onClickEmote
                        }))), this.props.globalEmotes.length > 0 && e.push(o.createElement(l.Xa, {
                            key: "emote-grid--global-emotes",
                            className: "emote-picker__content-block"
                        }, o.createElement(z, {
                            context: V.Global,
                            emotes: this.props.globalEmotes,
                            label: Object(s.d)("Global", "EmotePickerCard"),
                            onClickEmote: this.onClickEmote
                        }))), o.createElement(l.Xa, {
                            refDelegate: this.saveAllEmotesRef
                        }, e)
                    }, t.prototype.renderSearchContent = function() {
                        var e = Object(s.d)('No Search Results for "{inputValue}"', {
                            inputValue: this.state.inputValue
                        }, "EmotePickerCard");
                        return this.state.filteredEmotes.length > 0 && (e = Object(s.d)('Search Results for "{inputValue}"', {
                            inputValue: this.state.inputValue
                        }, "EmotePickerCard")), o.createElement(M.b, {
                            className: "emote-picker__tab-content"
                        }, o.createElement(l.Xa, {
                            position: l.jb.Relative,
                            padding: {
                                x: 1,
                                top: 1,
                                bottom: 3
                            },
                            className: "emote-picker__content-block"
                        }, o.createElement(l.Eb, {
                            padding: {
                                x: 1
                            }
                        }, o.createElement(l.W, {
                            bold: !0
                        }, e)), o.createElement(A.a, {
                            emotes: this.state.filteredEmotes,
                            onClickEmote: this.onClickEmote,
                            spaced: !0
                        })))
                    }, t.prototype.renderTabNav = function() {
                        var e = null;
                        return this.state.sortedChannelEmotes.length > 0 && (e = o.createElement(Q, {
                            isActive: this.state.selectedNavTab === ee.ChannelEmotes,
                            label: ee.ChannelEmotes,
                            icon: l.tb.NavChannels,
                            onClick: this.onTabNavClick
                        })), o.createElement(l.Eb, {
                            background: l.r.Alt,
                            display: l.X.Flex,
                            className: "emote-picker__tab-nav-container"
                        }, o.createElement(Q, {
                            isActive: this.state.selectedNavTab === ee.FrequentlyUsedEmotes,
                            label: ee.FrequentlyUsedEmotes,
                            icon: l.tb.GlyphLength,
                            onClick: this.onTabNavClick
                        }), e, o.createElement(Q, {
                            isActive: this.state.selectedNavTab === ee.AllEmotes,
                            label: ee.AllEmotes,
                            icon: l.tb.EmoticonsAll,
                            onClick: this.onTabNavClick
                        }))
                    }, t
                }(o.Component),
                ne = n("DB+C"),
                ie = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.handleSubEvent = function(e) {
                            e.action === R.a.ClickCheckout && n.checkAndDisplaySubscriptionCheckout(), Object(R.b)(r.__assign({}, e, {
                                action: R.a.ClickCheckout,
                                channelID: n.props.channelData && n.props.channelData.user && n.props.channelData.user.id || "",
                                channelLogin: n.props.channelData && n.props.channelData.user && n.props.channelData.user.displayName || "",
                                isMenuOpen: null,
                                hasSubCredit: null,
                                sub_location: "emote_picker",
                                modal: !1,
                                showPrimeContent: !0,
                                giftRecipient: null
                            }))
                        };
                        var i = {
                            allEmoteSets: [],
                            availableUpsells: [],
                            channelSubscriptionProducts: [],
                            channelDisplayName: void 0,
                            channelTabVisible: !1,
                            frequentlyUsedEmotes: [],
                            globalEmotes: [],
                            gqlError: t.emoteSetsData && !!t.emoteSetsData.error || t.channelData && !!t.channelData.error || !1,
                            gqlLoading: t.emoteSetsData && !!t.emoteSetsData.loading || t.channelData && !!t.channelData.loading || !1,
                            otherChannelEmoteSets: [],
                            ownedChannelEmoteSets: [],
                            ownedSetIDs: new Set([]),
                            subscribeTexts: [],
                            unlockedEmotes: []
                        };
                        return i = n.applyDataPropsToState(t, i), n.state = r.__assign({}, i), n
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        Object(_.b)(), this.checkDataLoaded(this.props) && (this.props.onLoad && this.props.onLoad(this.checkForContent(this.props)), this.props.latencyTracking.reportInteractive())
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (e.emoteSetsData && e.emoteSetsData.error || e.channelData && e.channelData.error) this.setState({
                            gqlError: !0
                        });
                        else {
                            var t = this.applyDataPropsToState(e, this.state);
                            this.props.pubsub.messages.subscriptionInfo !== e.pubsub.messages.subscriptionInfo && (this.props.channelData && this.props.channelData.refetch(), this.props.emoteSetsData && this.props.emoteSetsData.refetch()), this.checkDataLoaded(e) && (e.latencyTracking.reportInteractive(), e.onLoad && e.onLoad(this.checkForContent(e)), t.gqlLoading = !1), this.setState(r.__assign({}, t, {
                                gqlError: !1
                            }))
                        }
                        if (e.visible && !this.props.visible && e.emoteSetsData && e.emoteSetsData.emoteMap) {
                            var n = Object(_.c)(e.emoteSetsData.emoteMap);
                            this.props.openEmotePicker(), this.setState({
                                frequentlyUsedEmotes: n
                            })
                        } else this.props.visible && !e.visible && this.props.closeEmotePicker()
                    }, t.prototype.componentWillUnmount = function() {
                        this.props.closeEmotePicker()
                    }, t.prototype.render = function() {
                        if (!this.props.visible) return null;
                        var e = this.props.channelData && this.props.channelData.user && this.props.channelData.user.campaignProperties && this.props.channelData.user.campaignProperties.domains && this.props.channelData.user.campaignProperties.domains.length > 0 || !1,
                            t = o.createElement(G, {
                                allEmoteSets: this.state.allEmoteSets,
                                availableUpsells: this.state.availableUpsells,
                                channelTabVisible: this.state.channelTabVisible,
                                channelID: this.props.channelOwnerID,
                                direction: this.props.direction,
                                emotePickerSessionID: this.props.emotePickerSessionID,
                                emotePickerSource: this.props.emotePickerSource,
                                gqlError: this.state.gqlError,
                                handleSubAction: this.handleSubEvent,
                                isEsportChannel: e,
                                loading: this.state.gqlLoading,
                                onClickEmote: this.props.onClickEmote,
                                ownedChannelEmoteSets: this.state.ownedChannelEmoteSets,
                                roomID: this.props.roomID,
                                size: this.props.size,
                                subscribeTexts: this.state.subscribeTexts,
                                toggleVisibility: this.props.toggleVisibility
                            }),
                            n = o.createElement(te, {
                                allEmoteSets: this.state.allEmoteSets,
                                channelID: this.props.channelOwnerID,
                                channelDisplayName: this.state.channelDisplayName,
                                channelProfileImageURL: this.state.channelProfileImageURL,
                                channelSubscriptionProducts: this.state.channelSubscriptionProducts,
                                direction: this.props.direction,
                                emotePickerSessionID: this.props.emotePickerSessionID,
                                emotePickerSource: this.props.emotePickerSource,
                                frequentlyUsedEmotes: this.state.frequentlyUsedEmotes,
                                globalEmotes: this.state.globalEmotes,
                                gqlError: this.state.gqlError,
                                handleSubAction: this.handleSubEvent,
                                isEsportChannel: e,
                                loading: this.state.gqlLoading,
                                onClickEmote: this.props.onClickEmote,
                                ownedSetIDs: this.state.ownedSetIDs,
                                otherChannelEmoteSets: this.state.otherChannelEmoteSets,
                                roomID: this.props.roomID,
                                size: this.props.size,
                                toggleVisibility: this.props.toggleVisibility,
                                unlockedEmotes: this.state.unlockedEmotes
                            });
                        return o.createElement(p.a, {
                            assignments: {
                                fallback: function() {
                                    return t
                                },
                                off: function() {
                                    return t
                                },
                                on: function() {
                                    return n
                                }
                            },
                            name: y.b.EmotePickerV2
                        })
                    }, t.prototype.checkDataLoaded = function(e) {
                        var t = !e.channelOwnerID || e.channelData && !e.channelData.loading,
                            n = !e.isLoggedIn || e.emoteSetsData && !e.emoteSetsData.loading;
                        return t && n
                    }, t.prototype.checkForContent = function(e) {
                        var t = e.emoteSetsData && e.emoteSetsData.emoteSets && e.emoteSetsData.emoteSets.length > 0 || !1,
                            n = e.channelData && e.channelData.user && e.channelData.user.subscriptionProducts.filter(this.subscriptionProductHasEmotes).length > 0 || !1;
                        return t || n
                    }, t.prototype.applyDataPropsToState = function(e, t) {
                        var n = r.__assign({}, t);
                        if (e.emoteSetsData && e.emoteSetsData.emoteSets && e.emoteSetsData.emoteSets.length > 0) {
                            n.ownedSetIDs = new Set;
                            for (var i = 0, o = e.emoteSetsData.emoteSets; i < o.length; i++) {
                                var a = o[i];
                                a && a.id && n.ownedSetIDs.add(parseInt(a.id, 10))
                            }
                            n.allEmoteSets = Object(w.a)(e.emoteSetsData.emoteSets);
                            var l = [],
                                c = [],
                                d = [];
                            n.allEmoteSets.forEach(function(t) {
                                t.owner || "0" !== t.id ? t.owner && "" !== t.owner.id ? e.channelData && e.channelData.user && e.channelData.user.id === t.owner.id || l.push(t) : d.push.apply(d, t.emotes) : c.push.apply(c, t.emotes)
                            }), n.otherChannelEmoteSets = function(e) {
                                var t = {};
                                e.forEach(function(e) {
                                    var n;
                                    e.owner && e.owner.id && (t[e.owner.id] ? (n = t[e.owner.id].emotes).push.apply(n, e.emotes) : t[e.owner.id] = r.__assign({}, e))
                                });
                                var n = [];
                                return Object.keys(t).forEach(function(e) {
                                    n.push(t[e])
                                }), n
                            }(l), n.globalEmotes = c, n.unlockedEmotes = d
                        }
                        if (e.channelData && e.channelData.user) {
                            var u = void 0;
                            e.channelData.user.self && e.channelData.user.self.subscriptionBenefit && (u = e.channelData.user.self.subscriptionBenefit.platform), n.availableUpsells = function(e, t, n) {
                                var i = [];
                                return !n || n !== O.b.IOS && n !== O.b.Android ? (t.forEach(function(n, o) {
                                    var a = n.price;
                                    0 === o && Object(T.g)(t) && (a = Object(T.c)(t[0])), n.emotes && n.emotes.length && n.emoteSetID && !e.has(parseInt(n.emoteSetID, 10)) && i.push(r.__assign({}, n, {
                                        emotes: Object(w.e)(n.emotes, n.emoteSetID),
                                        level: o,
                                        price: a
                                    }))
                                }), i) : i
                            }(n.ownedSetIDs, e.channelData.user.subscriptionProducts, u), n.channelDisplayName = e.channelData.user.displayName, n.channelProfileImageURL = e.channelData.user.profileImageURL, n.channelSubscriptionProducts = N(n.ownedSetIDs, e.channelData.user.subscriptionProducts), n.ownedChannelEmoteSets = function(e, t) {
                                for (var n = [{
                                        id: "0",
                                        emotes: []
                                    }], i = 0, r = t; i < r.length; i++) {
                                    var o = r[i];
                                    o.emotes && o.emoteSetID && e.has(parseInt(o.emoteSetID, 10)) && (n[0].emotes = n[0].emotes.concat(Object(w.e)(o.emotes, o.emoteSetID)))
                                }
                                return n[0].emotes.length ? n : []
                            }(n.ownedSetIDs, e.channelData.user.subscriptionProducts), n.subscribeTexts = function(e) {
                                for (var t = [], n = 0; n < e.length; n++) {
                                    var i = e[n],
                                        r = Object(D.a)(i.tier);
                                    null === r && (r = 1), 0 === n && i.emotes && i.emotes.length > 1 ? t[n] = Object(s.d)("Unlock {numEmotes, number} Sub Emotes", {
                                        numEmotes: i.emotes.length
                                    }, "assembleSubscribeTexts") : 0 === n ? t[n] = Object(s.d)("Unlock 1 Sub Emote", "assembleSubscribeTexts") : i.emotes && i.emotes.length > 1 ? t[n] = Object(s.d)("{numEmotes, number} Extra Tier {tier} Sub Emotes", {
                                        numEmotes: i.emotes.length,
                                        tier: r
                                    }, "assembleSubscribeTexts") : i.emotes && i.emotes.length && (t[n] = Object(s.d)("1 Extra Tier {tier} Sub Emote", {
                                        tier: r
                                    }, "assembleSubscribeTexts"))
                                }
                                return t
                            }(e.channelData.user.subscriptionProducts)
                        }
                        return n.channelTabVisible = e.channelData && e.channelData.user && e.channelData.user.subscriptionProducts.filter(this.subscriptionProductHasEmotes).length > 0 || !1, n
                    }, t.prototype.subscriptionProductHasEmotes = function(e) {
                        return void 0 !== e.emoteSetID && !!e.emotes && e.emotes.length > 0
                    }, t.prototype.checkAndDisplaySubscriptionCheckout = function() {
                        var e = s.n.get(v.c, ""),
                            t = s.n.get(v.d, ""),
                            n = s.n.get(v.b, ""),
                            i = Number(n);
                        e && (this.props.channelData && this.props.channelData.user && this.props.channelData.user.subscriptionProducts.map(function(e) {
                            return e.name
                        }).includes(e) ? this.props.sessionUser ? this.props.showSubscriptionCheckoutModal({
                            recipientLogin: t,
                            productName: e,
                            mysteryGiftCount: i,
                            trackingContext: {
                                source: E.c.EmotePicker
                            }
                        }) : this.props.showLoginModal() : Object(v.e)())
                    }, t
                }(o.Component);
            var re = Object(d.compose)(Object(i.connect)(function(e) {
                    return {
                        currentUserID: e.session.user && e.session.user.id,
                        emotePickerSessionID: e.chat && e.chat.emotePickerSessionID || null,
                        sessionUser: e.session.user,
                        isLoggedIn: Object(C.f)(e)
                    }
                }, function(e) {
                    return Object(u.bindActionCreators)({
                        closeEmotePicker: S.A,
                        openEmotePicker: S.M,
                        showLoginModal: Object(v.f)(b.a.EmotePickerSubscriptionButton),
                        showSubscriptionCheckoutModal: function(e) {
                            var t = r.__rest(e, []);
                            return Object(k.d)(m.a, {
                                component: "CheckoutModal",
                                loader: function() {
                                    return Promise.all([n.e(0), n.e(212)]).then(n.bind(null, "KJv/"))
                                },
                                componentProps: t
                            })
                        }
                    }, e)
                }), Object(h.a)(ne, {
                    name: "channelData",
                    skip: function(e) {
                        return !e.channelOwnerID
                    },
                    options: function(e) {
                        return {
                            variables: {
                                channelOwnerID: e.channelOwnerID
                            }
                        }
                    }
                }), Object(f.a)([{
                    topic: function(e) {
                        return "user-subscribe-events-v1." + e.currentUserID
                    },
                    mapMessageTypesToProps: {
                        "*": "subscriptionInfo"
                    },
                    skip: function(e) {
                        return !e.currentUserID
                    }
                }]), Object(x.b)("EmotePicker"), Object(g.a)())(ie),
                oe = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasInteracted: !1,
                            isEmotePickerMenuVisible: !1,
                            isEmotePickerButtonVisible: !1
                        }, t.onClickOut = function() {
                            t.setState({
                                isEmotePickerMenuVisible: !1
                            })
                        }, t.onClickEmote = function(e, n) {
                            t.props.onClickEmote && t.props.onClickEmote(e, n)
                        }, t.toggleEmotePicker = function() {
                            t.setState(function(e) {
                                return {
                                    isEmotePickerMenuVisible: !e.isEmotePickerMenuVisible
                                }
                            })
                        }, t.onEmotePickerDataLoaded = function(e) {
                            e && t.setState({
                                isEmotePickerButtonVisible: !0
                            })
                        }, t.onInteraction = function() {
                            return t.setState({
                                hasInteracted: !0
                            })
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), this.props.inputRef && (this.props.inputRef.addEventListener("mouseenter", this.onInteraction), this.props.inputRef.addEventListener("focus", this.onInteraction))
                    }, t.prototype.componentWillUnmount = function() {
                        this.props.inputRef && (this.props.inputRef.removeEventListener("mouseenter", this.onInteraction), this.props.inputRef.removeEventListener("focus", this.onInteraction))
                    }, t.prototype.render = function() {
                        var e = null;
                        this.state.isEmotePickerButtonVisible && (e = o.createElement(c, {
                            onClick: this.toggleEmotePicker,
                            isActive: this.state.isEmotePickerMenuVisible
                        }));
                        var t = null;
                        this.hasInteractedOrPageload && (t = o.createElement(re, {
                            channelOwnerID: this.props.channelOwnerID,
                            emotePickerSource: this.props.emotePickerSource,
                            onClickEmote: this.onClickEmote,
                            onLoad: this.onEmotePickerDataLoaded,
                            toggleVisibility: this.toggleEmotePicker,
                            visible: this.state.isEmotePickerMenuVisible,
                            direction: this.props.direction
                        }));
                        var n = o.createElement(l.Xa, r.__assign({
                            className: "emote-picker-and-button"
                        }, this.layoutProps), e, t);
                        return this.props.shouldCloseOnClickOut ? o.createElement(a.a, {
                            onClickOut: this.onClickOut
                        }, n) : n
                    }, Object.defineProperty(t.prototype, "hasInteractedOrPageload", {
                        get: function() {
                            return !(!this.props.firstPageLoaded && !this.state.hasInteracted)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "layoutProps", {
                        get: function() {
                            var e = {
                                attachTop: !!this.props.attachTop,
                                attachRight: !!this.props.attachRight,
                                attachBottom: !!this.props.attachBottom,
                                attachLeft: !!this.props.attachLeft,
                                padding: this.props.padding
                            };
                            return this.props.position && (e.position = this.props.position), e
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(o.Component),
                ae = Object(x.b)("EmotePicker")(oe);
            var se = Object(i.connect)(function(e) {
                return {
                    firstPageLoaded: e.session.firstPageLoaded
                }
            })(ae);
            n.d(t, "a", function() {
                return se
            }), n.d(t, "c", function() {
                return re
            }), n.d(t, !1, function() {
                return O.a
            }), n.d(t, !1, function() {
                return O.d
            }), n.d(t, !1, function() {
                return O.c
            }), n.d(t, !1, function() {
                return O.b
            }), n.d(t, "b", function() {
                return c
            })
        },
        msok: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "CollectionFields"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Collection"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "description"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "owner"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "thumbnailURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "width"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "320"
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "height"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "180"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "title"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "type"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updatedAt"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "viewCount"
                            },
                            arguments: [],
                            directives: []
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 221
                }
            };
            n.loc.source = {
                body: "fragment CollectionFields on Collection {\nid\ndescription\nowner {\nid\nlogin\n}\nthumbnailURL(width: 320 height: 180) # only used for legacy CollectionCard\ntitle\ntype\nupdatedAt\nviewCount # only used for legacy CollectionCard\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "n+IG": function(e, t, n) {},
        nxZp: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = function() {
                return function(e) {
                    this.bio = e.bio, this.createdAt = e.createdAt, this.displayName = e.displayName, this.id = e.id, this.logo = e.logo, this.name = e.name, this.type = e.type, this.updatedAt = e.updatedAt
                }
            }()
        },
        oK83: function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e[e.recent_raids = 0] = "recent_raids", e[e.chat_message = 1] = "chat_message", e[e.room_message = 2] = "room_message", e[e.extension_message = 3] = "extension_message", e[e.viewer_list = 4] = "viewer_list", e[e.viewer_list_mod_section = 5] = "viewer_list_mod_section", e[e.member_list = 6] = "member_list", e[e.test = 7] = "test"
                }(i || (i = {})),
                function(e) {
                    e[e.Viewer = 0] = "Viewer", e[e.Extension = 1] = "Extension"
                }(r || (r = {}))
        },
        oVvm: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/MKj"),
                o = n("9C/b"),
                a = n("fvjX"),
                s = n("1/iK"),
                l = n("aCAx"),
                c = n("y5D0"),
                d = n("/HY+"),
                u = n("kduP"),
                p = n("b6Yk"),
                m = n("4rCz");

            function h(e, t) {
                var n = this;
                return function() {
                    return i.__awaiter(n, void 0, void 0, function() {
                        var n, r;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return n = "kraken/videos/" + e, [4, p.a.delete(n)];
                                case 1:
                                    if (200 !== (r = i.sent()).status) {
                                        if (r && r.error) throw new Error(JSON.stringify(r.error));
                                        if (r && r.requestError) throw r.requestError;
                                        throw new Error("Could not delete video. Request returned " + r.status)
                                    }
                                    return m.q.history.push(Object(u.d)(t)), [2]
                            }
                        })
                    })
                }
            }
            var f = n("q1tI"),
                g = n("cZKs"),
                v = n("hyVY"),
                b = n("Ue10"),
                k = (n("ESOY"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            requestInProgress: !1,
                            errorMessage: ""
                        }, t.onClickCancel = function() {
                            return t.props.onClose()
                        }, t.onClickDelete = function() {
                            t.setState({
                                errorMessage: "",
                                requestInProgress: !0
                            }, function() {
                                return i.__awaiter(t, void 0, void 0, function() {
                                    var e;
                                    return i.__generator(this, function(t) {
                                        switch (t.label) {
                                            case 0:
                                                if (!this.props.video.owner || !this.props.video.owner.login) return this.setState({
                                                    errorMessage: Object(m.d)("This video is temporarily unable to be deleted.", "VideoDeleteModal"),
                                                    requestInProgress: !1
                                                }), [2];
                                                t.label = 1;
                                            case 1:
                                                return t.trys.push([1, 3, , 4]), [4, this.props.onDeleteRequest(this.props.video.id, this.props.video.owner.login)];
                                            case 2:
                                                return t.sent(), this.props.onClose(), [3, 4];
                                            case 3:
                                                return e = t.sent(), this.setState({
                                                    errorMessage: Object(m.d)("Unexpected error, please try again.", "VideoDeleteModal"),
                                                    requestInProgress: !1
                                                }), m.l.withCategory("video delete modal").error(e, "Attempted to delete video."), [3, 4];
                                            case 4:
                                                return [2]
                                        }
                                    })
                                })
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return f.createElement(b.Eb, {
                            background: b.r.Base,
                            "data-test-selector": "qa-video-delete-modal",
                            className: "video-delete-modal",
                            padding: 3
                        }, f.createElement(b.Xa, null, f.createElement(b.Xa, {
                            margin: {
                                bottom: 1
                            }
                        }, f.createElement(b.W, {
                            type: b.Vb.H4
                        }, Object(m.d)("Delete Video", "VideoDeleteModal"))), this.renderErrorMessage(), f.createElement(b.W, {
                            type: b.Vb.P,
                            color: b.O.Alt2
                        }, Object(m.d)("Are you sure you want to delete this video?", "VideoDeleteModal"), f.createElement("br", null), Object(m.d)("This action cannot be undone.", "VideoDeleteModal"))), f.createElement(b.Eb, {
                            padding: {
                                y: 2
                            },
                            margin: {
                                y: 2
                            },
                            borderTop: !0,
                            borderBottom: !0
                        }, f.createElement(b.G, {
                            row: !0
                        }, f.createElement("img", {
                            alt: this.props.video.title || Object(m.d)("Video Thumbnail", "VideoDeleteModal"),
                            src: this.props.video.previewThumbnailURL,
                            className: "video-delete-modal__thumb"
                        }), f.createElement(b.H, {
                            overflow: b.cb.Hidden
                        }, f.createElement(b.Xa, {
                            margin: {
                                left: 1
                            }
                        }, f.createElement(b.Xa, {
                            ellipsis: !0
                        }, this.props.video.title), f.createElement(b.Eb, {
                            ellipsis: !0,
                            color: b.O.Alt2
                        }, Object(m.d)("{created, date, medium}", {
                            created: new Date(this.props.video.publishedAt)
                        }, "VideoDeleteModal"), " · ", Object(v.b)(this.props.video.lengthSeconds)), f.createElement(b.Eb, {
                            ellipsis: !0,
                            color: b.O.Alt2
                        }, Object(m.d)("{viewCount, plural, one {# View} other {# Views}}", {
                            viewCount: this.props.video.viewCount
                        }, "VideoDeleteModal")))))), f.createElement(b.Xa, {
                            display: b.X.Flex,
                            justifyContent: b.Wa.Center
                        }, f.createElement(b.Xa, {
                            display: b.X.InlineBlock,
                            margin: {
                                x: 1
                            }
                        }, f.createElement(b.z, {
                            type: b.F.Text,
                            onClick: this.onClickCancel,
                            "data-test-selector": "qa-video-delete-modal-cancel-button"
                        }, Object(m.d)("Cancel", "VideoDeleteModal"))), f.createElement(b.Xa, {
                            display: b.X.InlineBlock,
                            margin: {
                                x: 1
                            }
                        }, f.createElement(b.z, {
                            type: b.F.Alert,
                            onClick: this.onClickDelete,
                            disabled: this.state.requestInProgress,
                            "data-test-selector": "qa-video-delete-modal-delete-button"
                        }, Object(m.d)("Delete", "VideoDeleteModal")))), f.createElement(g.a, {
                            closeOnBackdropClick: !0
                        }))
                    }, t.prototype.renderErrorMessage = function() {
                        return this.state.errorMessage ? f.createElement(b.Eb, {
                            className: "video-delete-modal__error-container",
                            fullWidth: !0,
                            "data-test-selector": "qa-video-delete-modal-error-container",
                            margin: {
                                bottom: 1
                            },
                            padding: 1
                        }, f.createElement(b.W, {
                            color: b.O.Error
                        }, this.state.errorMessage)) : null
                    }, t
                }(f.Component));
            var y = Object(r.connect)(null, function(e) {
                    return Object(a.bindActionCreators)({
                        onClose: l.c,
                        onDeleteRequest: h
                    }, e)
                })(k),
                C = n("oJmH"),
                S = n("eJ65"),
                E = n("yR8l"),
                _ = n("QzU5"),
                w = n("vRsq"),
                O = n("DMoW"),
                T = n("GnwI"),
                D = n("RQ6e"),
                N = n("16Gl"),
                I = n("aJDl"),
                x = n("ZaHG"),
                R = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleReportModalClose = function(e) {
                            (e === D.a.MutationError || e === D.a.Success) && t.props.history.push("/")
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return f.createElement(S.a, null, f.createElement(b.A, {
                            "data-test-selector": "qa-video-options-button",
                            type: b.C.Hollow,
                            icon: b.tb.More,
                            ariaLabel: Object(m.d)("Video Options", "VideoOptions"),
                            disabled: !this.props.video
                        }), this.props.video ? f.createElement(b.u, {
                            direction: b.v.TopRight
                        }, f.createElement(b.Eb, {
                            padding: {
                                y: 1
                            },
                            color: b.O.Link
                        }, f.createElement("ul", {
                            "data-test-selector": "qa-video-options-container"
                        }, this.renderReportOption(this.props.video, this.props.currentUser), this.renderHighlightOption(this.props.video, this.props.currentUser), this.renderDeleteOption(this.props.video, this.props.currentUser)))) : f.createElement(b.u, null))
                    }, t.prototype.renderDeleteOption = function(e, t) {
                        var n = this;
                        if (this.isVODOwner(e, t) || this.isEditor()) {
                            var i = {
                                type: b.Va.Alert,
                                onClick: function() {
                                    n.props.onShowDeleteVideoModal({
                                        video: e
                                    })
                                }
                            };
                            return f.createElement(I.a, {
                                key: "delete-option",
                                interactableProps: i,
                                testSelector: "qa-video-delete-button"
                            }, Object(m.d)("Delete", "VideoOptions"))
                        }
                    }, t.prototype.renderReportOption = function(e, t) {
                        var n = this;
                        if (!this.isVODOwner(e, t)) {
                            var i = {
                                onClick: function() {
                                    if (t) {
                                        var i = void 0;
                                        i = e.owner && e.owner.displayName ? Object(m.d)("Report {ownerDisplayName}", {
                                            ownerDisplayName: e.owner.displayName
                                        }, "ReportVideoModal") : Object(m.d)("Report this video", "ReportVideoModal"), n.props.onShowReportUserModal({
                                            onClose: n.handleReportModalClose,
                                            reportContext: {
                                                contentType: O.N.VOD_REPORT,
                                                contentID: e.id,
                                                targetUserID: e.owner && e.owner.id ? e.owner.id : "",
                                                extra: n.getVideoReportExtraField()
                                            },
                                            title: i
                                        })
                                    } else n.props.onShowLogin()
                                }
                            };
                            return f.createElement(I.a, {
                                key: "report-option",
                                interactableProps: i,
                                testSelector: "qa-video-report-button"
                            }, Object(m.d)("Report", "VideoOptions"))
                        }
                    }, t.prototype.renderHighlightOption = function(e, t) {
                        if (e.broadcastType === _.a.Archive && (this.isVODOwner(e, t) || this.isEditor()) && e.owner) return f.createElement(I.a, {
                            key: "highlight-option",
                            interactableProps: {
                                linkTo: Object(N.c)(e.owner.login, e.id)
                            },
                            testSelector: "qa-video-highlight-button"
                        }, Object(m.d)("Highlight", "VideoOptions"))
                    }, t.prototype.isVODOwner = function(e, t) {
                        return t && e.owner && t.id === e.owner.id
                    }, t.prototype.isEditor = function() {
                        return !(!this.props.data || this.props.data.loading || this.props.data.error || !this.props.data.user || !this.props.data.user.self) && this.props.data.user.self.isEditor
                    }, t.prototype.getVideoReportExtraField = function() {
                        var e = Object(w.m)(this.props),
                            t = 0;
                        this.props.getCurrentVideoTime ? t = this.props.getCurrentVideoTime() : this.props.lastVideoOffset && (t = this.props.lastVideoOffset);
                        var n = {
                            timestamp: Object(v.b)(t, {
                                zeroPadAll: !0
                            })
                        };
                        return e && (n.collection = e), JSON.stringify(n)
                    }, t
                }(f.Component),
                j = Object(C.compose)(Object(E.a)(x, {
                    options: function(e) {
                        return {
                            variables: {
                                contentOwnerID: e.video.owner.id
                            }
                        }
                    },
                    skip: function(e) {
                        return null === e.currentUser || null === e.video || null === e.video.owner
                    }
                }), Object(T.b)("VideoOptions", {
                    autoReportInteractive: !0
                }))(R);
            var M = Object(r.connect)(null, function(e) {
                return Object(a.bindActionCreators)({
                    onShowLogin: function() {
                        return Object(c.e)(s.a.VODOptions)
                    },
                    onShowDeleteVideoModal: function(e) {
                        var t = i.__rest(e, []);
                        return Object(l.d)(y, t)
                    },
                    onShowReportUserModal: function(e) {
                        var t = i.__rest(e, []);
                        return Object(l.d)(d.a, t)
                    }
                }, e)
            })(Object(o.a)(j));
            n.d(t, "a", function() {
                return M
            })
        },
        oe5X: function(e, t, n) {
            "use strict";
            var i = n("XmgI"),
                r = n("RcPG"),
                o = n("0FG4"),
                a = n("i6WW"),
                s = n("gTu3"),
                l = n("6j5V"),
                c = /^(['"*([{</]*)@((?:[^\u0000-\u007F]|[\w-])+)/;

            function d(e, t) {
                if (!t) return !1;
                var n = t.displayName,
                    i = t.login;
                return e === n || e.toLowerCase() === i
            }

            function u(e, t) {
                void 0 === t && (t = {});
                var n = t.cheers,
                    u = t.emotes,
                    f = t.links,
                    g = t.mentions,
                    v = m(e),
                    b = "",
                    k = 0;
                return p(v.reduce(function(e, t, p) {
                    if (h(t)) return b = "", e;
                    if (0 === b.length && (k = p), b += t, p !== v.length - 1 && !h(v[p + 1])) return e;
                    var m = u && Object(o.c)(b, k, u);
                    if (m) return e.concat(m);
                    var y = n && Object(i.e)(b, n);
                    if (y) return e.concat(y);
                    var C = f && Object(a.a)(b, f);
                    if (C) return e.concat(C);
                    var S = g && function(e, t) {
                        var n = e.match(c);
                        if (!n) return d(e, t.sessionUser) ? [{
                            type: r.a.CurrentUserHighlight,
                            content: e
                        }] : null;
                        var i = [],
                            o = n[1],
                            a = n[2],
                            u = e.slice(n[0].length);
                        o.length && i.push(Object(l.a)(o));
                        var p = s.a.Default;
                        return d(a, t.sessionUser) ? p = s.a.Recipient : t.sessionUser && t.sessionUser.login === t.senderLogin && (p = s.a.Sender), i.push({
                            type: r.a.Mention,
                            content: {
                                recipient: a,
                                currentUserMentionRelation: p
                            }
                        }), u.length && i.push(Object(l.a)(u)), i
                    }(b, g);
                    return S ? e.concat([S]) : e.concat(Object(l.a)(b))
                }, []))
            }

            function p(e) {
                return e.reduce(function(e, t, n) {
                    return 0 === n ? [].concat.call(e, t) : [].concat.call(e, Object(l.a)(" "), t)
                }, []).reduce(function(e, t, n) {
                    if (0 === n) return e.concat(t);
                    var i = e[e.length - 1];
                    return t.type === r.a.Text && i.type === r.a.Text ? (i.content = "" + i.content + t.content, e) : e.concat(t)
                }, [])
            }

            function m(e) {
                return e.match(/[^\uD800-\uDFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDFFF]/g) || []
            }

            function h(e) {
                return /\s/.test(e)
            }
            n.d(t, "a", function() {
                return u
            }), n.d(t, !1, function() {
                return p
            }), n.d(t, !1, function() {
                return m
            })
        },
        oi4T: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                o = n("/7QA"),
                a = n("2xye");
            ! function(e) {
                e.Everyone = "everyone", e.ModsOnly = "mod", e.StreamChat = "twitch_chat", e.SubsOnly = "sub"
            }(i || (i = {}));
            var s = n("UJc8");
            n.d(t, "a", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            });
            var l = function(e) {
                    var t;
                    switch (e.roomMinimumRole) {
                        case s.b.Everyone:
                            t = i.Everyone;
                            break;
                        case s.b.Moderator:
                            t = i.ModsOnly;
                            break;
                        case s.b.Subscriber:
                            t = i.SubsOnly;
                            break;
                        default:
                            t = i.StreamChat
                    }
                    var n = {
                        channel: e.channelLogin,
                        chatroom_type: t,
                        is_host_mode: e.isHostMode,
                        is_using_web_sockets: !0
                    };
                    return e.roomID && (n.chatroom_id = e.roomID), n
                },
                c = function(e) {
                    o.o.track(a.SpadeEventType.ChatRoomJoined, l(e))
                },
                d = function(e) {
                    o.o.track(a.SpadeEventType.ChatRoomWatched, r.__assign({}, l(e), {
                        channel_id: e.channelID
                    }))
                }
        },
        okS7: function(e, t, n) {
            "use strict";
            n("kPBf");
            var i, r = n("mrSG"),
                o = n("17x9"),
                a = n("q1tI"),
                s = n("8Ad5"),
                l = n("TSYQ"),
                c = n("/7QA"),
                d = n("u5aL"),
                u = n("8/mp"),
                p = n("Ue10"),
                m = (n("JzSO"), "autocomplete-balloon-matches"),
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {}, t.resizeAnimationFrame = 0, t.messages = {
                            noMatches: Object(c.d)("No matches.", "AutocompleteBalloon")
                        }, t.logger = c.k.withCategory("AutocompleteBalloon"), t.renderMatches = function() {
                            return t.props.matches.map(function(e, n) {
                                var i = t.state.selectedMatch,
                                    r = i && i.replacement === e.replacement,
                                    o = l("autocomplete-balloon__item", {
                                        "autocomplete-balloon__item--selected": r
                                    });
                                return a.createElement(p.Xa, {
                                    key: "autocomplete-match-" + n,
                                    refDelegate: r ? t.focusOnOption : void 0,
                                    "data-test-selector": m
                                }, a.createElement(p.Pa, {
                                    display: p.X.Block,
                                    fullWidth: !0
                                }, a.createElement("button", {
                                    onMouseEnter: t.handleMatchMouseEnter,
                                    className: o,
                                    "data-a-target": e.replacement,
                                    "data-click-index": n,
                                    onClick: t.onMatchClick
                                }, a.createElement(p.Xa, {
                                    padding: {
                                        x: .5
                                    },
                                    display: p.X.Flex,
                                    alignItems: p.f.Center
                                }, e.element))))
                            })
                        }, t.handleMatchMouseEnter = function(e) {
                            var n = t.getMatchFromEvent(e);
                            n && t.setState({
                                selectedMatch: n
                            })
                        }, t.onMatchClick = function(e) {
                            var n = t.getMatchFromEvent(e);
                            n && t.props.onMatchSelect(n)
                        }, t.getMatchFromEvent = function(e) {
                            var n = t.props.matches,
                                i = e.currentTarget.getAttribute("data-click-index");
                            return !i || +i >= n.length ? (t.logger.error(new Error, "The index received from the UI element was not found in props.matches."), null) : n[+i]
                        }, t.handleKeydown = function(e) {
                            var n = e.charCode || e.keyCode,
                                i = function() {
                                    e.preventDefault(), e.stopPropagation()
                                };
                            switch (n) {
                                case s.a.Tab:
                                case s.a.Enter:
                                    i(), t.props.matches.length && t.state.selectedMatch ? t.props.onMatchSelect(t.state.selectedMatch) : t.props.onDismiss();
                                    break;
                                case s.a.Up:
                                case s.a.Down:
                                    if (!t.state.selectedMatch || !t.props.matches.length) return;
                                    var r = t.props.matches.indexOf(t.state.selectedMatch);
                                    if (-1 === r) return void t.logger.error(new Error, "The selected match was not found in props.matches.");
                                    i();
                                    var o = n === s.a.Up ? -1 : 1,
                                        a = t.getIndexWithinLength(r + o, t.props.matches.length),
                                        l = t.props.matches[a];
                                    t.setState({
                                        selectedMatch: l
                                    })
                            }
                        }, t.getIndexWithinLength = function(e, t) {
                            var n = e % t;
                            return n < 0 ? n + t : n
                        }, t.onResize = function() {
                            t.resizeAnimationFrame || (t.resizeAnimationFrame = requestAnimationFrame(t.setContainerHeight))
                        }, t.setContainerHeight = function() {
                            var e = t.props.containerElement && t.props.containerElement.clientHeight || 1080;
                            t.setState({
                                containerHeight: e
                            }), t.resizeAnimationFrame = 0
                        }, t.focusOnOption = function(e) {
                            if (e && t.autocompleteBalloonElement) {
                                var n = e.getBoundingClientRect(),
                                    i = t.autocompleteBalloonElement.getBoundingClientRect();
                                (n.bottom > i.bottom || n.top < i.top) && e.scrollIntoView()
                            }
                        }, t.setAutocompleteBalloonElement = function(e) {
                            t.autocompleteBalloonElement = e
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        window.addEventListener("keydown", this.handleKeydown, !0), window.addEventListener("resize", this.onResize, !0), this.setContainerHeight(), this.props.matches.length > 0 && this.setState({
                            selectedMatch: this.props.matches[0]
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        window.removeEventListener("resize", this.onResize, !0), window.removeEventListener("keydown", this.handleKeydown, !0), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = this,
                            n = e.matches.reduce(function(e, n, i) {
                                return t.state.selectedMatch ? n.replacement === t.state.selectedMatch.replacement ? i : e : 0
                            }, 0);
                        this.setState({
                            selectedMatch: e.matches[n]
                        })
                    }, t.prototype.render = function() {
                        var e;
                        return e = 0 === this.props.matches.length ? a.createElement(p.Xa, {
                            padding: {
                                x: .5
                            },
                            "data-test-selector": "autocomplete-balloon-no-matches"
                        }, a.createElement(p.W, {
                            type: p.Vb.Span,
                            color: p.O.Alt2
                        }, this.messages.noMatches)) : this.renderMatches(), a.createElement(p.Xa, {
                            position: p.jb.Relative
                        }, a.createElement(d.a, {
                            onClickOut: this.props.onDismiss
                        }, a.createElement(p.u, {
                            direction: p.v.TopLeft,
                            "data-a-target": "autocomplete-balloon",
                            "data-test-selector": "autocomplete-balloon",
                            show: !0
                        }, a.createElement(p.Pa, {
                            "data-test-selector": "autocomplete-matches-container",
                            className: "autocomplete-balloon",
                            overflow: p.cb.Hidden,
                            display: p.X.Flex,
                            flexDirection: p.Aa.Column
                        }, a.createElement("div", {
                            style: {
                                maxHeight: this.state.containerHeight
                            },
                            ref: this.setAutocompleteBalloonElement
                        }, a.createElement(u.b, null, a.createElement(p.Xa, {
                            padding: {
                                y: 1
                            }
                        }, e)))))))
                    }, t
                }(a.Component),
                f = n("uu1w"),
                g = n("2xye"),
                v = {
                    Chat: "chat",
                    Feed: "feed",
                    Whisper: "whisper"
                },
                b = ":",
                k = "#",
                y = "@",
                C = function(e) {
                    switch (e) {
                        case f.a.Emote:
                            return b;
                        case f.a.Hashtag:
                            return k;
                        case f.a.Mention:
                            return y;
                        default:
                            return void c.k.warn("Chat Suggestions tracking was passed an unknown autocomplete type.")
                    }
                },
                S = function(e) {
                    var t = C(e.autocompleteType);
                    if (t) {
                        var n = {
                            channel: e.channelLogin,
                            completed_text: e.completedText,
                            source: e.source,
                            start_character: t
                        };
                        c.o.track(g.SpadeEventType.ChatSuggestionComplete, n)
                    }
                };
            ! function(e) {
                e.Input = "input", e.TextArea = "textarea"
            }(i || (i = {}));
            var E = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            autocompleteType: f.a.None,
                            matchedCursorPosition: 0,
                            matches: null,
                            value: ""
                        }, t.providers = [], t.onChange = function(e) {
                            t.setState({
                                value: e.target.value
                            }, function() {
                                t.getMatches()
                            }), t.props.onChange && t.props.onChange(e)
                        }, t.onKeyDown = function(e) {
                            var n = function() {
                                    t.props.onKeyDown && t.props.onKeyDown(e)
                                },
                                i = function() {
                                    e.preventDefault(), e.stopPropagation()
                                },
                                r = e.charCode || e.keyCode;
                            if (r !== s.a.Enter) {
                                switch (r) {
                                    case s.a.Tab:
                                        if (!t.state.matches) t.getMatches(!0) && i();
                                        break;
                                    case s.a.Esc:
                                        t.state.matches && (i(), t.resetDisplayState())
                                }
                                n()
                            } else n()
                        }, t.setComponentRefDelegate = function(e) {
                            t.componentRef = e, t.props.componentRefDelegate && t.props.componentRefDelegate(e)
                        }, t.getMatches = function(e) {
                            var n = t.state.value;
                            if (0 === t.providers.length || 0 === n.length) return t.resetDisplayState(), !1;
                            var i = t.getCurrentCursorPosition();
                            if (i > n.length);
                            else
                                for (; i < n.length && !/\s/.test(n.charAt(i));) i++;
                            var r = n.substring(0, i);
                            if (0 === r.length || /\s/.test(r.substring(r.length - 1))) return t.resetDisplayState(), !1;
                            for (var o = r.split(/\s/), a = o[o.length - 1], s = 0, l = t.providers; s < l.length; s++) {
                                var c = l[s];
                                if (!e || c.canBeTriggeredByTab) {
                                    var d = c.getMatches(a, e);
                                    if (d) return t.setState({
                                        autocompleteType: c.autocompleteType,
                                        matchedCursorPosition: i,
                                        matches: d
                                    }), !0
                                }
                            }
                            return t.resetDisplayState(), !1
                        }, t.resetDisplayState = function(e, n) {
                            var i = r.__assign({}, t.state, {
                                autocompleteType: f.a.None,
                                matches: null
                            }, e || {});
                            t.setState(i, n)
                        }, t.insertReplacement = function(e) {
                            var n = t.state.value,
                                i = t.state.matchedCursorPosition,
                                o = n.substring(0, i),
                                a = o.lastIndexOf(e.current);
                            if (-1 === a) o = o.concat(e.replacement + " "), i = o.length;
                            else {
                                var s = o.substring(0, a),
                                    l = n.length > a + e.current.length ? n.substring(a + e.current.length) : "",
                                    c = l.startsWith(" ") ? e.replacement : e.replacement + " ";
                                o = "" + s + c + l, i = s.length + c.length
                            }
                            S(r.__assign({}, t.props.trackingParams || {}, {
                                autocompleteType: t.state.autocompleteType,
                                completedText: e.replacement,
                                source: t.props.suggestionSource
                            })), t.resetDisplayState({
                                value: o
                            }, function() {
                                t.setCursorPosition(i)
                            })
                        }, t.getCurrentCursorPosition = function() {
                            return t.componentRef.selectionStart || 0
                        }, t.setCursorPosition = function(e) {
                            t.componentRef && (t.componentRef.setSelectionRange(e, e), t.componentRef.focus())
                        }, t.registerAutocompleteProvider = function(e) {
                            return t.providers.push(e),
                                function() {
                                    var n = t.providers.indexOf(e);
                                    t.providers.splice(n, 1)
                                }
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.refDelegate && this.props.refDelegate(this)
                    }, t.prototype.getChildContext = function() {
                        return {
                            registerAutocompleteProvider: this.registerAutocompleteProvider
                        }
                    }, t.prototype.componentWillUpdate = function(e, t) {
                        !this.state.matches && t.matches && function(e) {
                            var t = C(e.autocompleteType);
                            if (t) {
                                var n = {
                                    source: e.source,
                                    start_character: t
                                };
                                c.o.track(g.SpadeEventType.ChatSuggestion, n)
                            }
                        }({
                            autocompleteType: t.autocompleteType,
                            source: e.suggestionSource
                        })
                    }, t.prototype.componentDidUpdate = function(e, t) {
                        t.value !== this.state.value && this.props.onValueUpdate && this.props.onValueUpdate(this.state.value)
                    }, t.prototype.render = function() {
                        var e = r.__assign({}, this.props, {
                            onChange: this.onChange,
                            onKeyDown: this.onKeyDown,
                            refDelegate: this.setComponentRefDelegate,
                            value: this.state.value
                        });
                        return a.createElement(p.Xa, null, this.state.matches && a.createElement(h, {
                            matches: this.state.matches,
                            onMatchSelect: this.insertReplacement,
                            onDismiss: this.resetDisplayState,
                            containerElement: this.props.containerElement
                        }), this.props.componentType === i.Input ? a.createElement(p.Ra, r.__assign({}, e, {
                            type: e.type || p.Ta.Text
                        })) : a.createElement(p.Sb, r.__assign({}, e)), this.props.children)
                    }, t.prototype.getValue = function() {
                        return this.state.value
                    }, t.prototype.setValue = function(e) {
                        this.resetDisplayState({
                            value: e
                        })
                    }, t.childContextTypes = {
                        registerAutocompleteProvider: o.func
                    }, t
                }(a.Component),
                _ = n("lZdE"),
                w = n("OpME"),
                O = (n("gDzh"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.autocompleteType = f.a.Emote, t.canBeTriggeredByTab = !1, t.getMatches = function(e) {
                            return e.startsWith(":") ? e.length < 3 ? null : t.getMatchedEmotes(e) : null
                        }, t.getMatchedEmotes = function(e) {
                            var n = t.state.hydratedEmotes;
                            if (!n || 0 === n.length) return null;
                            var i = e.substring(1),
                                r = n.reduce(function(e, n) {
                                    var r = n.emotes.filter(function(e) {
                                        if (e.token) return t.doesEmoteMatchTerm(e, i)
                                    });
                                    return e.concat([r])
                                }, []).filter(function(e) {
                                    return e.length > 0
                                }).reduce(function(e, t) {
                                    return e.concat(t)
                                }, []);
                            return r = Object(w.d)(r), (r = Object(w.f)(r, i)).map(function(e) {
                                return {
                                    current: ":" + i,
                                    replacement: e.token,
                                    element: t.renderEmoteSuggestion(e)
                                }
                            })
                        }, t.doesEmoteMatchTerm = function(e, t) {
                            var n = new RegExp("^" + Object(_.a)(t), "i");
                            if (e.token.match(n)) return !0;
                            var i = new RegExp("" + Object(_.a)(t.charAt(0)).toUpperCase()),
                                r = new RegExp("^" + Object(_.a)(t.slice(1)), "i"),
                                o = e.token.match(i);
                            return !!(o && o.index && e.token.slice(o.index + 1).match(r))
                        }, t.renderEmoteSuggestion = function(e) {
                            return [a.createElement(p.Xa, {
                                padding: {
                                    right: .5
                                },
                                flexShrink: 0,
                                key: "emote-img-" + e.id
                            }, a.createElement("img", {
                                className: "emote-autocomplete-provider__image",
                                srcSet: e.srcSet
                            })), a.createElement(p.W, {
                                type: p.Vb.Span,
                                key: "emote-text-" + e.id,
                                ellipsis: !0
                            }, e.token)]
                        }, t.hydrateEmotes = function(e) {
                            for (var n = [], i = 0, r = e; i < r.length; i++) {
                                var o = r[i];
                                o && o.id && o.emotes && n.push({
                                    id: o.id,
                                    emotes: Object(w.b)(o.emotes)
                                })
                            }
                            t.setState({
                                hydratedEmotes: n
                            })
                        }, t
                    }
                    return r.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.emotes && this.props.emotes !== e.emotes && this.hydrateEmotes(e.emotes)
                    }, t.prototype.componentWillMount = function() {
                        this.hydrateEmotes(this.props.emotes)
                    }, t.prototype.componentDidMount = function() {
                        this.unregister = this.context.registerAutocompleteProvider(this)
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister()
                    }, t.prototype.render = function() {
                        return null
                    }, t.contextTypes = {
                        registerAutocompleteProvider: o.func
                    }, t
                }(a.Component));
            n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "b", function() {
                return E
            }), n.d(t, "a", function() {
                return i
            }), n.d(t, !1, function() {}), n.d(t, "d", function() {
                return O
            }), n.d(t, "c", function() {
                return v
            })
        },
        p52R: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Admin = "admin", e.GlobalMod = "global_mod", e.Moderator = "mod", e.Owner = "owner", e.Staff = "staff", e.Subscriber = "subscriber", e.User = ""
                }(i || (i = {}))
        },
        pU2t: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("XmgI"),
                o = n("ahza"),
                a = n("DpwM"),
                s = n("a1OF"),
                l = function(e, t, n) {
                    var i = e.body,
                        r = function(e) {
                            void 0 === e && (e = []);
                            return e.reduce(function(e, t) {
                                return e[t.begin] = {
                                    id: t._id,
                                    startIndex: t.begin
                                }, e
                            }, {})
                        }(e.emoticons),
                        o = Object(s.e)(i, r, e.bits_spent || 0, n, !1, t);
                    return {
                        id: "1",
                        isAction: e.is_action,
                        tokens: o,
                        userColor: e.user_color ? e.user_color : Object(s.b)(t)
                    }
                };
            var c = n("XeJ1");
            n.d(t, "b", function() {
                return d
            }), n.d(t, "g", function() {
                return u
            }), n.d(t, "c", function() {
                return p
            }), n.d(t, "f", function() {
                return m
            }), n.d(t, "d", function() {
                return h
            }), n.d(t, "e", function() {
                return f
            }), n.d(t, "a", function() {
                return v
            });
            var d = "comment";

            function u(e) {
                return Object(o.e)(e) ? {
                    message: e.message,
                    parent_id: e.parentId
                } : {
                    content_id: e.contentId,
                    content_offset_seconds: e.contentOffsetSeconds,
                    content_type: e.contentType,
                    message: e.message
                }
            }
            var p = function(e) {
                    return {
                        comments: [v.normalizeRecord(e, r.a)],
                        users: [c.a.normalizeRecord(e.commenter)]
                    }
                },
                m = function(e, t) {
                    var n = i.__assign({}, e, {
                        more_replies: t.moreReplies
                    });
                    return {
                        comments: [v.normalizeRecord(n, r.a)],
                        users: [c.a.normalizeRecord(e.commenter)]
                    }
                },
                h = function(e, t) {
                    var n = e.comments.map(function(e) {
                            return c.a.normalizeRecord(e.commenter)
                        }),
                        i = {
                            past: a.g,
                            future: a.g
                        };
                    return void 0 !== e._next && (i.future = e._next), void 0 !== e._prev && (i.past = e._prev), {
                        comments: e.comments.reduce(function(e, i) {
                            return i.replies && i.replies.map(function(e) {
                                n.push(c.a.normalizeRecord(e.commenter))
                            }), e.concat(v.normalizeRecords(i, t))
                        }, []),
                        cursor: i,
                        users: n
                    }
                },
                f = function(e) {
                    var t = e.comments.map(function(e) {
                        return c.a.normalizeRecord(e.commenter)
                    });
                    return {
                        comments: e.comments.map(function(e) {
                            return v.normalizeRecord(e, r.a)
                        }),
                        cursor: {
                            future: e._next || a.g
                        },
                        users: t
                    }
                };

            function g(e) {
                return e.reduce(function(e, t) {
                    return e[t._id] = t.version, e
                }, {})
            }
            var v = {
                    normalizeRecords: function(e, t) {
                        var n = [v.normalizeRecord(e, t)];
                        return Array.isArray(e.replies) && e.replies.forEach(function(e) {
                            n.push(b.normalizeRecord(e, t))
                        }), n
                    },
                    normalizeRecord: function(e, t) {
                        return {
                            channelId: e.channel_id,
                            commenter: e.commenter._id,
                            contentId: e.content_id,
                            contentOffset: Math.floor(e.content_offset_seconds),
                            contentType: e.content_type,
                            createdAt: new Date(e.created_at),
                            id: e._id,
                            message: l(e.message, e.commenter._id, t),
                            moreReplies: e.more_replies || !1,
                            parentId: void 0 !== e.parent_id ? e.parent_id : "",
                            state: e.state,
                            source: e.source,
                            userBadges: g(e.message.user_badges || [])
                        }
                    }
                },
                b = {
                    normalizeRecord: function(e, t) {
                        return {
                            channelId: e.channel_id,
                            commenter: e.commenter._id,
                            contentId: e.content_id,
                            contentOffset: Math.floor(e.content_offset_seconds),
                            contentType: e.content_type,
                            createdAt: new Date(e.created_at),
                            id: e._id,
                            message: l(e.message, e.commenter._id, t),
                            moreReplies: !1,
                            parentId: void 0 !== e.parent_id ? e.parent_id : "",
                            state: e.state,
                            source: e.source,
                            userBadges: g(e.message.user_badges || [])
                        }
                    }
                }
        },
        "pq/L": function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoComments"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "hasVideoID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "badges"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "badge"
                                    },
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isStaff"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isSiteAdmin"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isGlobalMod"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "blockedUsers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "emoteSets"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "options"
                                },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [{
                                        kind: "ObjectField",
                                        name: {
                                            kind: "Name",
                                            value: "includePrivate"
                                        },
                                        value: {
                                            kind: "BooleanValue",
                                            value: !0
                                        }
                                    }]
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "hasVideoID"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "broadcastBadges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "FragmentSpread",
                                                    name: {
                                                        kind: "Name",
                                                        value: "badge"
                                                    },
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "cheer"
                                            },
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "self"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isModerator"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 497
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/badges/models/badge-fragment.gql"\n#import "twilight/features/chat/models/cheer-fragment.gql"\nquery VideoComments($videoID: ID! $hasVideoID: Boolean!) {\nbadges {\n...badge\n}\ncurrentUser {\nid\nroles {\nisStaff\nisSiteAdmin\nisGlobalMod\n}\nblockedUsers {\nid\n}\nemoteSets {\nid\nemotes {\nid\ntoken\n}\n}\n}\nvideo(id: $videoID options: { includePrivate: true }) @include(if: $hasVideoID) {\nid\nbroadcastType\nowner {\nid\nlogin\nbroadcastBadges {\n...badge\n}\n...cheer\nself {\nisModerator\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};

            function o(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }
            i.definitions = i.definitions.concat(o(n("IKE4").definitions)), i.definitions = i.definitions.concat(o(n("F9eG").definitions)), e.exports = i
        },
        pwkZ: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                o = n("q1tI"),
                a = n("QzU5"),
                s = n("4rCz"),
                l = n("uIkQ"),
                c = n("0Lz3"),
                d = n("GnwI"),
                u = n("Sfdh"),
                p = n("Ue10"),
                m = 15e3,
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.autoDismissErrorTimeoutId = 0, t.clearDismissTimeout = function() {
                            window.clearTimeout(t.autoDismissErrorTimeoutId)
                        }, t.onManualErrorDismissClickHandler = function() {
                            t.props.onErrorDismissed(!0)
                        }, t.setAutoDismissTimeout = function() {
                            t.autoDismissErrorTimeoutId = window.setTimeout(function() {
                                t.props.onErrorDismissed()
                            }, m)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.setAutoDismissTimeout()
                    }, t.prototype.componentWillUpdate = function(e) {
                        this.props.message !== e.message && (this.clearDismissTimeout(), this.setAutoDismissTimeout())
                    }, t.prototype.componentWillUnmount = function() {
                        this.clearDismissTimeout()
                    }, t.prototype.render = function() {
                        var e = null;
                        return this.props.message === Object(u.a)().chatReplayFilterError && (e = o.createElement(p.W, {
                            type: p.Vb.Span
                        }, " ", o.createElement(p.W, {
                            type: p.Vb.Span,
                            decoration: p.Tb.Underline
                        }, o.createElement("a", {
                            onClick: this.props.onMessageClick
                        }, Object(s.d)("Click here to show all messages.", "CommentError"))))), o.createElement(p.Eb, {
                            alignItems: p.f.Center,
                            background: p.r.Base,
                            className: "anim-swoop",
                            color: p.O.Error,
                            "data-test-selector": "vod-chat-error",
                            display: p.X.Flex,
                            flexWrap: p.Ba.NoWrap,
                            fullWidth: !0,
                            padding: {
                                y: 1,
                                x: 2
                            },
                            position: p.jb.Absolute,
                            zIndex: p.ic.Above
                        }, o.createElement(p.W, {
                            type: p.Vb.Span
                        }, this.props.message, e), o.createElement(p.Xa, {
                            alignSelf: p.g.Start
                        }, o.createElement(p.A, {
                            ariaLabel: Object(s.d)("Close", "CommentErrorComponent"),
                            icon: p.tb.Close,
                            onClick: this.onManualErrorDismissClickHandler
                        })))
                    }, t
                }(o.Component),
                f = n("/7QA"),
                g = n("hyVY"),
                v = n("0FG4"),
                b = n("okS7"),
                k = n("tFCv"),
                y = n("mmRu"),
                C = n("cpJf"),
                S = n("OpME"),
                E = n("/MKj"),
                _ = n("ZuiC"),
                w = n("fI4C"),
                O = (n("UZgS"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buildModerationDashboardURL = function() {
                            return "/" + t.props.videoOwnerLogin + "/dashboard/moderation"
                        }, t.buildModerationPrefsURL = function() {
                            return "/" + t.props.videoOwnerLogin + "/dashboard/settings/moderation"
                        }, t.onReplayModeChange = function(e) {
                            t.props.onReplayModeChange(e.currentTarget.checked)
                        }, t.onTimestampModeChange = function(e) {
                            t.props.onTimestampModeChange(e.currentTarget.checked)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = null;
                        this.props.isUpload || (e = o.createElement(p.Xa, {
                            display: p.X.Flex,
                            flexWrap: p.Ba.NoWrap,
                            justifyContent: p.Wa.Between,
                            key: "viewerReplayOption",
                            padding: {
                                bottom: 1
                            }
                        }, o.createElement(p.Xa, null, Object(f.d)("Show me only messages posted during the live broadcast", "VideoChatSettings")), o.createElement(p.Xa, {
                            flexShrink: 0
                        }, o.createElement(p.Xb, {
                            checked: this.props.isReplayFilterOn,
                            "data-test-selector": "reply-mode",
                            onChange: this.onReplayModeChange
                        }))));
                        var t = [o.createElement(p.W, {
                            key: "moderationHeader",
                            bold: !0
                        }, Object(f.d)("Mod Tools", "VideoChatSettings"))];
                        return this.props.canSessionEditModerationSettings && t.push(o.createElement(p.Pa, {
                            key: "moderationPrefs",
                            display: p.X.InlineBlock
                        }, o.createElement(p.U, {
                            to: this.buildModerationPrefsURL(),
                            "data-test-selector": "video_chat_settings_mod_prefs"
                        }, Object(f.d)("Change moderation preferences", "VideoChatSettings")))), this.props.canSessionModerateMessages && t.push(o.createElement(p.Pa, {
                            key: "moderationDashboard",
                            display: p.X.InlineBlock
                        }, o.createElement(p.U, {
                            to: this.buildModerationDashboardURL(),
                            "data-test-selector": "video_chat_settings_mod_dashboard"
                        }, Object(f.d)("Moderate messages", "VideoChatSettings")))), o.createElement(p.Xa, {
                            className: "video-chat__settings",
                            padding: {
                                x: 2,
                                y: 2
                            }
                        }, o.createElement(p.W, {
                            bold: !0
                        }, Object(f.d)("Viewer Settings", "VideoChatSettings")), e, o.createElement(p.Xa, {
                            display: p.X.Flex,
                            justifyContent: p.Wa.Between,
                            padding: {
                                bottom: 1
                            }
                        }, o.createElement(p.Xa, null, Object(f.d)("Hide timestamps", "VideoChatSettings")), o.createElement(p.Xa, {
                            flexShrink: 0
                        }, o.createElement(p.Xb, {
                            "data-test-selector": "timestamp-mode",
                            checked: this.props.hideTimestamps,
                            onChange: this.onTimestampModeChange
                        }))), t.length > 1 ? t : null)
                    }, t
                }(o.Component)),
                T = Object(d.b)("ChatSettings")(O);
            var D, N = Object(E.connect)(function(e) {
                    return {
                        isReplayFilterOn: e.vodChat.comments.isReplayFilterOn,
                        hideTimestamps: e.vodChat.comments.hideTimestamps
                    }
                }, function(e) {
                    return {
                        onReplayModeChange: function(t) {
                            Object(w.m)({
                                setting: w.c,
                                value: t ? w.b : w.a
                            }), e(Object(_.C)(t))
                        },
                        onTimestampModeChange: function(t) {
                            Object(w.m)({
                                setting: w.d,
                                value: t ? w.b : w.a
                            }), e(Object(_.F)(t))
                        }
                    }
                })(T),
                I = n("Tqc9");
            ! function(e) {
                e.CurrentTime = "current-time"
            }(D || (D = {}));
            var x = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.onKeyDown = function(e) {
                        switch (e.key) {
                            case I.b:
                                e.preventDefault(), n.createComment();
                                break;
                            case I.d:
                                n.maybeUnpauseScrolling();
                                break;
                            case I.a:
                                n.setState({
                                    isMentionPaused: !n.state.isMentionPaused && n.props.isScrollingSynced || n.state.isMentionPaused
                                }), n.props.onScrollPause()
                        }
                    }, n.createComment = function() {
                        if ("" !== n.state.newMessageText) {
                            if (n.props.isPostCooldownActive) return n.setState({
                                showCoolDownState: !0
                            }), void n.props.onError(Object(u.a)().messageCreatedTooQuickError);
                            n.props.onCreateComment(n.state.newMessageText), n.setState({
                                newMessageText: ""
                            }), n.autocompleteInputRef.setValue(""), n.maybeUnpauseScrolling()
                        }
                    }, n.setTextareaRef = function(e) {
                        n.textArea = e
                    }, n.setAutocompleteInputRef = function(e) {
                        n.autocompleteInputRef = e
                    }, n.maybeUnpauseScrolling = function() {
                        n.state.isMentionPaused && (n.setState({
                            isMentionPaused: !1
                        }), n.props.onScrollResume())
                    }, n.onChange = function(e) {
                        n.setState({
                            newMessageText: e
                        })
                    }, n.onEmoticonClick = function(e) {
                        n.autocompleteInputRef.setValue(n.state.newMessageText + " " + e), n.setState({
                            newMessageText: n.state.newMessageText + " " + e
                        }), n.maybeUnpauseScrolling()
                    }, n.getSessionSpecificEmotes = function() {
                        var e = Object(v.b)(n.props.currentUser.emoteSets);
                        return Object.keys(e).map(function(t) {
                            return {
                                id: t,
                                emotes: Object(S.b)([e[t]])
                            }
                        })
                    };
                    var i = null !== n.props.currentUser && (n.props.currentUser.id === n.props.videoOwnerID || !!n.props.currentUser.roles.isStaff),
                        r = null !== n.props.currentUser && (n.props.isModerator || n.props.currentUser.roles.isSiteAdmin || i);
                    return n.state = {
                        isMentionPaused: !1,
                        canSessionModerateMessages: r,
                        canSessionEditModerationSettings: i,
                        newMessageText: "",
                        showCoolDownState: !1
                    }, n
                }
                return i.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    e.isPostCooldownActive || this.setState({
                        showCoolDownState: !1
                    })
                }, t.prototype.render = function() {
                    var e = null;
                    (!this.props.isUpload || this.state.canSessionModerateMessages || this.state.canSessionEditModerationSettings) && (e = o.createElement(k.b, null, o.createElement(N, {
                        canSessionEditModerationSettings: this.state.canSessionEditModerationSettings,
                        canSessionModerateMessages: this.state.canSessionModerateMessages,
                        videoOwnerLogin: this.props.videoOwnerLogin,
                        isUpload: this.props.isUpload
                    })));
                    var t = null;
                    return this.props.currentUser && (t = o.createElement(b.d, {
                        emotes: this.getSessionSpecificEmotes()
                    })), o.createElement("div", null, o.createElement(p.Xa, {
                        position: p.jb.Relative
                    }, o.createElement(b.b, {
                        componentType: b.a.TextArea,
                        suggestionSource: b.c.Chat,
                        onValueUpdate: this.onChange,
                        onKeyDown: this.onKeyDown,
                        componentRefDelegate: this.setTextareaRef,
                        refDelegate: this.setAutocompleteInputRef,
                        paddingRight: 30,
                        placeholder: Object(f.d)("Post a message", "VideoChatInput"),
                        noResize: !0,
                        "data-a-target": "video-chat-input",
                        disabled: this.state.showCoolDownState
                    }, t), o.createElement(y.a, {
                        channelOwnerID: this.props.videoOwnerID,
                        emotePickerSource: C.a.VodChat,
                        inputRef: this.textArea,
                        onClickEmote: this.onEmoticonClick,
                        attachTop: !0,
                        attachRight: !0,
                        position: p.jb.Absolute
                    })), o.createElement(p.Xa, {
                        margin: {
                            top: 1
                        },
                        justifyContent: p.Wa.Between,
                        display: p.X.Flex
                    }, e, o.createElement("span", null), " ", o.createElement(p.z, {
                        onClick: this.createComment,
                        disabled: this.state.showCoolDownState,
                        "data-a-target": "video-chat-submit-button"
                    }, o.createElement(p.Xa, {
                        display: p.X.Flex
                    }, o.createElement("span", null, Object(f.d)("Post at ", "CommentInput")), o.createElement(p.Xa, {
                        margin: {
                            x: .5
                        },
                        display: p.X.Flex
                    }, o.createElement(p.sb, {
                        asset: p.tb.GlyphLength
                    })), o.createElement("span", {
                        "data-test-selector": D.CurrentTime
                    }, Object(g.b)(this.props.currentVideoTime))))))
                }, t
            }(o.Component);
            var R, j = Object(d.b)("MessageInput", {
                    autoReportInteractive: !0
                })(x),
                M = function(e) {
                    var t = e.offset,
                        n = e.onClick;
                    return o.createElement(p.Xa, {
                        margin: {
                            right: .5
                        }
                    }, o.createElement(p.Yb, {
                        align: p.Zb.Left,
                        direction: p.ac.Top,
                        label: Object(f.d)("Jump to video", "TimeStamp")
                    }, o.createElement(p.Ua, {
                        onClick: n,
                        blurAfterClick: !0
                    }, o.createElement(p.Xa, {
                        padding: {
                            x: .5
                        }
                    }, o.createElement(p.W, {
                        fontSize: p.Ca.Size7
                    }, Object(g.b)(t))))))
                },
                F = n("ZEQw"),
                L = n("ZVTe"),
                V = n("Zkco"),
                U = n("u5aL"),
                A = n("Jxh/"),
                P = n("GCGb"),
                B = n("fCiU"),
                W = n("cr+I"),
                X = function(e, t) {
                    var n = new URL("https://www.twitch.tv/videos/" + e);
                    if (t) {
                        var i = W.stringify(t);
                        n.search = i
                    }
                    return n
                },
                G = n("Addw"),
                z = "ban-user",
                H = "delete-comment-button",
                q = "reply-button",
                Q = "relative-time-title",
                K = "share-button",
                Y = "share-button-clicked",
                $ = 3e3,
                Z = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            confirmationAction: null,
                            isMenuOpen: !1,
                            isLinkCopied: !1
                        }, t.dismissTimeoutID = 0, t.onToggleMenu = function() {
                            t.state.isMenuOpen ? t.closeMenu() : (t.setState({
                                isMenuOpen: !0
                            }), t.props.onOpen())
                        }, t.getContent = function() {
                            if ("function" == typeof t.state.confirmationAction) return o.createElement(p.Xa, {
                                padding: {
                                    y: 1
                                }
                            }, o.createElement(p.Eb, {
                                display: p.X.Flex,
                                margin: {
                                    x: 1
                                },
                                padding: {
                                    bottom: .5
                                }
                            }, o.createElement(p.W, {
                                type: p.Vb.Span
                            }, Object(f.d)("Are you sure you want to perform this action?", "chomments.moderation.confirmAction"))), o.createElement(p.Xa, {
                                display: p.X.Flex,
                                justifyContent: p.Wa.Center,
                                alignItems: p.f.Center
                            }, o.createElement(p.Xa, {
                                display: p.X.Inline,
                                padding: {
                                    right: 1
                                }
                            }, o.createElement(p.z, {
                                type: p.F.Alert,
                                onClick: t.onContinueClickHandler,
                                "data-test-selector": P.a
                            }, Object(f.d)("Yes", "MessageOptionsMenu"))), o.createElement(p.z, {
                                type: p.F.Hollow,
                                onClick: t.onCancelClickHandler,
                                "data-test-selector": P.c
                            }, Object(f.d)("No", "MessageOptionsMenu"))));
                            var e = [];
                            t.props.isExpandedLayout || e.push(o.createElement(p.Eb, {
                                key: t.props.context.comment.id,
                                color: p.O.Alt2,
                                display: p.X.Flex,
                                "data-test-selector": Q
                            }, o.createElement(p.Eb, {
                                margin: {
                                    x: 1
                                },
                                padding: {
                                    bottom: .5
                                },
                                fullWidth: !0,
                                borderBottom: !0
                            }, o.createElement(p.W, {
                                type: p.Vb.Span
                            }, Object(f.d)("Posted ", "MessageOptionsMenu"), Object(f.i)(t.props.context.comment.createdAt)))), o.createElement(p.Eb, {
                                key: t.props.context.comment.id + "2",
                                display: p.X.Flex,
                                color: p.O.Link
                            }, o.createElement(p.Ua, {
                                onClick: t.onReplyClickHandler,
                                "data-test-selector": q
                            }, o.createElement(p.Xa, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, Object(f.d)("Reply to {userName}", {
                                userName: Object(B.b)(t.props.context.author)
                            }, "MessageOptionsMenu")))));
                            var n = [];
                            t.props.isCurrentUserModerator && n.push(o.createElement(p.Xa, {
                                key: t.props.context.comment.id,
                                display: p.X.Flex
                            }, o.createElement(p.Ua, {
                                type: p.Va.Alert,
                                onClick: t.onDeleteButtonClickHandler,
                                "data-test-selector": H
                            }, o.createElement(p.Eb, {
                                margin: {
                                    x: 1
                                },
                                padding: {
                                    y: .5
                                },
                                borderBottom: !0
                            }, Object(f.d)("Delete", "MessageOptionsMenu")))), o.createElement(p.Xa, {
                                key: t.props.context.comment.id + "2",
                                display: p.X.Flex
                            }, o.createElement(p.Ua, {
                                type: p.Va.Alert,
                                onClick: t.onBanUserClickHandler,
                                "data-test-selector": z
                            }, o.createElement(p.Xa, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, Object(f.d)("Ban User", "MessageOptionsMenu")))));
                            var i = o.createElement(p.Ua, {
                                onClick: t.onShareClick,
                                "data-test-selector": K
                            }, o.createElement(p.Xa, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, Object(f.d)("Copy Link", "MessageOptionsMenu")));
                            t.state.isLinkCopied && (i = o.createElement(p.z, {
                                fullWidth: !0,
                                icon: p.tb.Check,
                                type: p.F.Success,
                                "data-test-selector": Y
                            }, o.createElement(p.Xa, {
                                display: p.X.Flex,
                                alignItems: p.f.Center,
                                justifyContent: p.Wa.Start
                            }, Object(f.d)("Copied to clipboard", "MessageOptionsMenu"))));
                            var r = o.createElement(p.Eb, {
                                display: p.X.Flex,
                                fullWidth: !0,
                                key: t.props.context.comment.id + "-share",
                                color: p.O.Link
                            }, i);
                            return o.createElement(p.Xa, {
                                padding: {
                                    y: 1
                                }
                            }, e, r, n)
                        }, t.closeMenu = function() {
                            t.setState({
                                isMenuOpen: !1,
                                confirmationAction: null,
                                isLinkCopied: !1
                            }), t.props.onClose()
                        }, t.onShareClick = function() {
                            var e = t.props.context.comment,
                                n = e.contentId,
                                i = X(n, {
                                    tt_medium: "video_chat",
                                    tt_content: "message_share_link",
                                    t: Object(G.a)(e.contentOffset),
                                    comment: e.id
                                });
                            return Object(A.a)(i.toString()), t.setState({
                                isLinkCopied: !0
                            }, function() {
                                return t.dismissTimeoutID = setTimeout(function() {
                                    t.setState({
                                        isLinkCopied: !1
                                    })
                                }, $)
                            }), Object(w.l)(e, i)
                        }, t.onReplyClickHandler = function() {
                            t.props.onReplyClick(Object(B.b)(t.props.context.author)), t.closeMenu()
                        }, t.onBanUserClickHandler = function() {
                            t.setState(function(e) {
                                return i.__assign({}, e, {
                                    confirmationAction: t.props.onBanUserClick
                                })
                            })
                        }, t.onDeleteButtonClickHandler = function() {
                            t.setState(function(e) {
                                return i.__assign({}, e, {
                                    confirmationAction: t.props.onDeleteCommentClick
                                })
                            })
                        }, t.onContinueClickHandler = function() {
                            t.state.confirmationAction && t.state.confirmationAction(), t.closeMenu()
                        }, t.onCancelClickHandler = function() {
                            t.setState(function(e) {
                                return i.__assign({}, e, {
                                    confirmationAction: null
                                })
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentWillUnmount = function() {
                        clearTimeout(this.dismissTimeoutID)
                    }, t.prototype.render = function() {
                        return o.createElement(p.Xa, {
                            position: p.jb.Relative
                        }, o.createElement(U.a, {
                            onClickOut: this.closeMenu
                        }, o.createElement(p.A, {
                            ariaLabel: Object(f.d)("Message Actions Menu", "VideoCommentsMenu"),
                            size: p.B.Small,
                            type: p.C.Secondary,
                            "data-test-selector": "menu-button",
                            icon: p.tb.More,
                            onClick: this.onToggleMenu
                        }), o.createElement(p.u, {
                            direction: p.v.BottomRight,
                            show: this.state.isMenuOpen,
                            size: p.w.Small,
                            offsetX: "0.5rem"
                        }, this.getContent())))
                    }, t
                }(o.Component),
                J = (n("Nimz"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            forceMenuVisibility: !1
                        }, t.onBanUserClickHandler = function() {
                            t.props.onBanUserClick({
                                bannedUser: t.props.context.comment.commenter,
                                targetChannel: t.props.context.comment.channelId,
                                comment: t.props.context.comment
                            })
                        }, t.onDeleteCommentClickHandler = function() {
                            t.props.onDeleteCommentClick(t.props.context.comment)
                        }, t.onMenuOpenHandler = function() {
                            t.props.onDisableSync(), t.setState({
                                forceMenuVisibility: !0
                            })
                        }, t.onMenuCloseHandler = function() {
                            t.setState({
                                forceMenuVisibility: !1
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e, t = this.props,
                            n = t.context,
                            i = t.badgeSets,
                            a = t.currentUser,
                            s = !!a && n.comment.commenter === a.id,
                            c = void 0 !== n.comment.userBadges[F.a],
                            d = r("video-chat__message-menu", {
                                "video-chat__message-menu--force-visible": this.state.forceMenuVisibility
                            }),
                            u = o.createElement(p.Xa, {
                                className: d,
                                "data-test-selector": "menu-options-wrapper",
                                flexShrink: 0
                            }, o.createElement(Z, {
                                context: n,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                isExpandedLayout: this.props.isExpandedLayout,
                                onBanUserClick: this.onBanUserClickHandler,
                                onClose: this.onMenuCloseHandler,
                                onDeleteCommentClick: this.onDeleteCommentClickHandler,
                                onOpen: this.onMenuOpenHandler,
                                onReplyClick: this.props.onReplyClick
                            })),
                            m = r("video-chat__message-author", ((e = {})["video-chat__message-author--me"] = s, e["video-chat__message-author--creator"] = c, e)),
                            h = s || c ? "" : n.comment.message.userColor,
                            f = o.createElement(p.Pa, {
                                padding: {
                                    right: .5
                                }
                            }, o.createElement("span", null, ":"));
                        return n.comment.message.isAction && (f = o.createElement(p.Pa, {
                            padding: {
                                right: .5
                            }
                        }, o.createElement("span", null))), o.createElement(p.Xa, {
                            alignItems: p.f.Start,
                            display: p.X.Flex,
                            flexWrap: p.Ba.NoWrap
                        }, o.createElement(p.Xa, {
                            flexGrow: 1
                        }, o.createElement(l.b, {
                            badgesToRender: n.comment.userBadges,
                            badgeSets: i
                        }), o.createElement("a", {
                            className: m,
                            "data-test-selector": "comment-author-selector",
                            "data-tt_content": "tab_videos",
                            "data-tt_medium": "video-message-author",
                            href: "/" + n.author.name,
                            rel: "noopener noreferrer",
                            target: "_blank"
                        }, o.createElement(L.a, {
                            userData: Object(B.a)(n.author, h),
                            highlighted: s || c
                        })), o.createElement(p.Xa, {
                            display: p.X.Inline,
                            className: "video-chat__message",
                            "data-test-selector": "comment-message-selector"
                        }, f, o.createElement(V.a, {
                            message: n.comment.message,
                            allowActionTextColors: !0
                        }))), u)
                    }, t
                }(o.Component)),
                ee = n("GEnX"),
                te = n("4OCo"),
                ne = function(e) {
                    return o.createElement(p.Xa, {
                        padding: {
                            y: .5,
                            left: 1
                        }
                    }, o.createElement(p.Xa, {
                        className: "vod-message__content"
                    }, o.createElement(J, {
                        badgeSets: e.badgeSets,
                        context: e.context,
                        currentUser: e.currentUser,
                        isCurrentUserModerator: e.isCurrentUserModerator,
                        isExpandedLayout: e.isExpandedLayout,
                        onBanUserClick: e.onBanUserClick,
                        onDeleteCommentClick: e.onDeleteCommentClick,
                        onDisableSync: e.onDisableSync,
                        onReplyClick: e.onReplyClick
                    })))
                },
                ie = "vod-message-reply",
                re = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.makeReplyButtonAndRelativeTime = function(e) {
                            return o.createElement(p.Xa, {
                                display: p.X.Flex,
                                alignItems: p.f.Center
                            }, o.createElement(ee.a, {
                                context: ie,
                                onReplyClick: t.props.onReplyClick,
                                replyCommentContext: e
                            }), o.createElement(p.Pa, {
                                margin: {
                                    left: .5
                                }
                            }, o.createElement(p.W, {
                                color: p.O.Alt2,
                                fontSize: p.Ca.Size7,
                                type: p.Vb.Span
                            }, " • " + Object(f.i)(e.comment.createdAt))))
                        }, t.makeReply = function(e) {
                            var n = null;
                            return t.props.isExpandedLayout && (n = t.makeReplyButtonAndRelativeTime(e)), o.createElement("li", {
                                key: e.comment.id
                            }, o.createElement(ne, {
                                badgeSets: t.props.badgeSets,
                                context: e,
                                currentUser: t.props.currentUser,
                                isCurrentUserModerator: t.props.isCurrentUserModerator,
                                isExpandedLayout: t.props.isExpandedLayout,
                                onBanUserClick: t.props.onBanUserClick,
                                onDeleteCommentClick: t.props.onDeleteCommentClick,
                                onDisableSync: t.props.onDisableSync,
                                onReplyClick: t.props.onReplyClick
                            }), n)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = this.props.replies.map(this.makeReply.bind(this));
                        return o.createElement("ul", null, e)
                    }, t
                }(o.Component),
                oe = n("82xK"),
                ae = (n("lRNp"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = null;
                        !this.props.parentMessage.comment.moreReplies || this.props.isReplayFilterOn && !this.props.isExpandedLayout || (e = o.createElement(p.Xa, {
                            display: p.X.InlineBlock,
                            className: "vod-message__show-more-replies"
                        }, o.createElement(oe.a, {
                            onClick: this.props.onLoadMoreRepliesClick
                        })));
                        var t = null;
                        this.props.showReplyForm && (t = o.createElement(p.Xa, {
                            margin: {
                                top: .5,
                                bottom: 1,
                                x: 1
                            }
                        }, o.createElement(te.a, {
                            isCreationCoolDownActive: this.props.isCreationCoolDownActive || !1,
                            onError: this.props.onError,
                            onReplyFormClose: this.props.onReplyFormClose,
                            onReplySubmit: this.props.onReplySubmit,
                            replyToUserDisplayName: this.props.replyToUserDisplayName,
                            videoOwnerID: this.props.parentMessage.comment.channelId
                        })));
                        var n = null;
                        return this.props.isExpandedLayout && (n = o.createElement(p.Xa, {
                            alignItems: p.f.Center,
                            display: p.X.Flex
                        }, o.createElement(ee.a, {
                            context: "vod-message",
                            onReplyClick: this.props.onReplyClick,
                            replyCommentContext: this.props.parentMessage
                        }), o.createElement(p.Pa, {
                            margin: {
                                left: .5
                            }
                        }, o.createElement(p.W, {
                            color: p.O.Alt2,
                            fontSize: p.Ca.Size7,
                            type: p.Vb.Span
                        }, " • " + Object(f.i)(this.props.parentMessage.comment.createdAt))))), o.createElement(p.Xa, null, n, o.createElement(p.Xa, {
                            margin: {
                                y: .5,
                                left: .5
                            },
                            className: r("vod-message__reply", "qa-vod-chat-reply")
                        }, e, o.createElement(re, {
                            badgeSets: this.props.badgeSets,
                            currentUser: this.props.currentUser,
                            isCurrentUserModerator: this.props.isCurrentUserModerator,
                            isExpandedLayout: this.props.isExpandedLayout,
                            onBanUserClick: this.props.onBanUserClick,
                            onDeleteCommentClick: this.props.onDeleteCommentClick,
                            onDisableSync: this.props.onDisableSync,
                            onReplyClick: this.props.onReplyClick,
                            replies: this.props.parentMessage.replies
                        }), t))
                    }, t
                }(o.Component)),
                se = (n("ya7N"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            showReplyForm: !1,
                            replyToUserDisplayName: ""
                        }, t.onReplyClickHandler = function(e) {
                            t.setState({
                                showReplyForm: !0,
                                replyToUserDisplayName: e
                            }, t.props.onDisableSync)
                        }, t.onReplyFormCloseHandler = function() {
                            t.setState({
                                showReplyForm: !1,
                                replyToUserDisplayName: ""
                            })
                        }, t.onReplySubmitHandler = function(e) {
                            t.props.onCreateReply(e, t.props.messageContext.comment.id), t.setState({
                                showReplyForm: !1,
                                replyToUserDisplayName: ""
                            })
                        }, t.onTimestampClickHandler = function() {
                            t.props.onTimeStampClick(t.props.messageContext.comment.contentOffset, t.props.messageContext.comment)
                        }, t.onLoadMoreRepliesClickHandler = function() {
                            t.props.onLoadMoreRepliesClick(t.props.messageContext.comment.id, t.props.messageContext.comment.contentId)
                        }, t.refHandler = function(e) {
                            t.shouldFocusMessage() && t.props.onFocus(e)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e, t = null;
                        (this.props.isExpandedLayout || this.props.messageContext.replies.length > 0 || this.state.showReplyForm) && (t = o.createElement(ae, {
                            badgeSets: this.props.badgeSets,
                            currentUser: this.props.currentUser,
                            isCreationCoolDownActive: this.props.isCreationCoolDownActive,
                            isCurrentUserModerator: this.props.isCurrentUserModerator,
                            isExpandedLayout: this.props.isExpandedLayout,
                            isReplayFilterOn: this.props.isReplayFilterOn,
                            onBanUserClick: this.props.onBanUserClick,
                            onDeleteCommentClick: this.props.onDeleteCommentClick,
                            onDisableSync: this.props.onDisableSync,
                            onError: this.props.onError,
                            onLoadMoreRepliesClick: this.onLoadMoreRepliesClickHandler,
                            onReplyClick: this.onReplyClickHandler,
                            onReplyFormClose: this.onReplyFormCloseHandler,
                            onReplySubmit: this.onReplySubmitHandler,
                            parentMessage: this.props.messageContext,
                            replyToUserDisplayName: this.state.replyToUserDisplayName,
                            showReplyForm: this.state.showReplyForm
                        }));
                        var n = null;
                        this.props.hideTimestamp || (n = o.createElement(p.Xa, {
                            className: "vod-message__header",
                            "data-test-selector": "message-timestamp",
                            display: p.X.Flex,
                            flexShrink: 0,
                            textAlign: p.Rb.Right
                        }, o.createElement(M, {
                            offset: this.props.timeStampOffset,
                            onClick: this.onTimestampClickHandler
                        })));
                        var i = r("vod-message", ((e = {})["vod-message--focused"] = this.shouldFocusMessage(), e)),
                            a = this.props.messageContext.comment.highlight || !1;
                        return o.createElement(p.i, {
                            duration: p.k.Medium,
                            enabled: a,
                            type: p.n.FadeIn
                        }, o.createElement(p.Xa, {
                            alignItems: p.f.Start,
                            className: i,
                            "data-test-selector": "message-layout",
                            display: p.X.Flex,
                            flexWrap: p.Ba.NoWrap,
                            fullWidth: !0,
                            padding: {
                                y: .5,
                                left: this.props.hideTimestamp ? 2 : .5
                            },
                            refDelegate: this.refHandler
                        }, n, o.createElement(p.Xa, {
                            fullWidth: !0
                        }, o.createElement(J, {
                            badgeSets: this.props.badgeSets,
                            context: this.props.messageContext,
                            currentUser: this.props.currentUser,
                            isCurrentUserModerator: this.props.isCurrentUserModerator,
                            isExpandedLayout: this.props.isExpandedLayout,
                            onBanUserClick: this.props.onBanUserClick,
                            onDeleteCommentClick: this.props.onDeleteCommentClick,
                            onDisableSync: this.props.onDisableSync,
                            onReplyClick: this.onReplyClickHandler
                        }), t)))
                    }, t.prototype.shouldComponentUpdate = function(e, t) {
                        return e.focus !== this.props.focus || e.isReplayFilterOn !== this.props.isReplayFilterOn || e.hideTimestamp !== this.props.hideTimestamp || t.showReplyForm !== this.state.showReplyForm || e.messageContext.replies.length !== this.props.messageContext.replies.length || t.replyToUserDisplayName !== this.state.replyToUserDisplayName
                    }, t.prototype.shouldFocusMessage = function() {
                        return this.props.focus
                    }, t
                }(o.Component)),
                le = (n("52dQ"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            firstScroll: !0
                        }, t.componentInitiatedScroll = !1, t.mouseDragging = !1, t.preventScrolling = !1, t.allowScrolling = function() {
                            t.preventScrolling = !1
                        }, t.atBottom = function() {
                            var e = t.commentListRef.scrollTop,
                                n = t.commentListRef.scrollHeight;
                            return e + t.commentListRef.clientHeight === n
                        }, t.bindCommentListRef = function(e) {
                            t.commentListRef = e
                        }, t.onMouseDown = function() {
                            t.preventScrolling = !1, t.mouseDragging = !0
                        }, t.onMouseUp = function() {
                            t.mouseDragging = !1
                        }, t.onScroll = function() {
                            t.shouldFireOnScroll() && (t.componentInitiatedScroll || (t.atBottom() ? t.props.onScrollBottom() : t.props.onScrollOffBottom()), t.componentInitiatedScroll = !1, t.preventScrolling = !0)
                        }, t.syncButtonClick = function() {
                            t.preventScrolling = !1, t.props.onSyncScrollClick()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidMount = function() {
                        this.props.onMount()
                    }, t.prototype.componentDidUpdate = function() {
                        this.preventScrolling = !0, this.props.isScrollingSynced && (this.preventScrolling = !1, this.componentInitiatedScroll = !0, this.commentListRef.scrollTop = this.commentListRef.scrollHeight)
                    }, t.prototype.render = function() {
                        var e, t = r("video-chat__message-list-wrapper", ((e = {})["video-chat__message-list-wrapper--unsynced"] = !this.props.isScrollingSynced, e)),
                            n = null;
                        return !1 === this.props.isScrollingSynced && (n = o.createElement(p.Pa, {
                            className: "video-chat__sync-button",
                            padding: {
                                x: 1
                            },
                            position: p.jb.Absolute,
                            attachBottom: !0
                        }, o.createElement("button", {
                            onClick: this.syncButtonClick
                        }, Object(s.d)("Resume auto scroll", "MessageScrollArea")))), o.createElement(p.Eb, {
                            fullHeight: !0,
                            overflow: p.cb.Hidden,
                            position: p.jb.Relative
                        }, o.createElement("div", {
                            className: t,
                            onKeyDown: this.allowScrolling,
                            onMouseMove: this.allowScrolling,
                            onMouseDown: this.onMouseDown,
                            onMouseUp: this.onMouseUp,
                            onScroll: this.onScroll,
                            onWheel: this.allowScrolling,
                            ref: this.bindCommentListRef,
                            tabIndex: -1,
                            "data-test-selector": "video-chat-message-list-wrapper"
                        }, this.props.children), n)
                    }, t.prototype.shouldFireOnScroll = function() {
                        return !this.mouseDragging && this.preventScrolling ? (this.componentInitiatedScroll = !1, !1) : !(this.state.firstScroll && !this.props.startSynced) || (this.setState({
                            firstScroll: !1
                        }), !1)
                    }, t
                }(o.Component)),
                ce = n("DpwM"),
                de = n("l41m"),
                ue = n("ehEd"),
                pe = function(e, t) {
                    return !!e && (t >= e.offset && e.offset + e.duration >= t)
                };
            n("n+IG");
            n.d(t, "a", function() {
                    return fe
                }),
                function(e) {
                    e.MessageInputPlaceholder = "message-input-placeholder", e.ChatContentPlaceholder = "message-content-placeholder", e.VideoChatError = "video-chat-error", e.NoCommentCTA = "no-comments-cta"
                }(R || (R = {}));
            var me = 5e3;
            var he = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            commentAlreadyFocused: !1
                        }, t.badgeSets = new l.c([], [], ""), t.createComment = function(e) {
                            if (t.props.videoID) {
                                var n = {
                                    contentId: t.props.videoID,
                                    contentOffsetSeconds: t.props.currentVideoTime,
                                    contentType: ce.e,
                                    message: e
                                };
                                t.onCreate(n)
                            }
                        }, t.createReply = function(e, n) {
                            var i = {
                                message: e,
                                parentId: n
                            };
                            t.onCreate(i)
                        }, t.onErrorDismissedHandler = function(e) {
                            t.props.onError("");
                            var n = t.props.errorMessage === Object(u.a)().chatReplayFilterError;
                            e && t.props.shouldSendReplayFilterError && n && t.props.onErrorDismissClick()
                        }, t.onErrorMessageClickHandler = function() {
                            t.props.onError(""), t.props.onTurnOffReplayFilter()
                        }, t.onMessageScrollAreaMount = function() {
                            t.props.highlightedMessageID && "" !== t.props.highlightedMessageID && t.props.onDisableSync()
                        }, t.onError = function(e) {
                            t.props.onError(e)
                        }, t.onLoadMoreRepliesHandler = function(e, n) {
                            var i = t.props.data.video,
                                r = i && i.owner.cheer && i.owner.cheer.emotes || [];
                            t.props.onLoadMoreReplies(e, t.props.replyCursorMap, n, Object(c.a)(r))
                        }, t.focusedCommentCallback = function(e) {
                            t.setState({
                                commentToFocus: e
                            })
                        }, t.startUnfocusTimeout = function() {
                            t.focusTimer = setTimeout(function() {
                                t.setState({
                                    commentAlreadyFocused: !0
                                })
                            }, me)
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentWillMount = function() {
                        this.props.onWillMount()
                    }, t.prototype.componentDidMount = function() {
                        this.props.startInReplayMode && this.props.onDidMount(this.props.startInReplayMode)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        void 0 !== e.highlightedMessageID && this.props.highlightedMessageID !== e.highlightedMessageID && (this.props.onPlayerSeekRequest(e.highlightTimestamp), this.props.onDisableSync(), this.setState({
                                commentAlreadyFocused: !1
                            })),
                            function(e, t) {
                                if (!t.data.loading && !t.data.error) {
                                    var n = t.data.video !== e.data.video,
                                        i = t.data.badges !== e.data.badges;
                                    return n || i
                                }
                                return !1
                            }(this.props, e) && (this.badgeSets = new l.c([], [], ""), !e.data.loading && !e.data.error && e.data.video && e.data.video.owner && (this.badgeSets = new l.c(e.data.badges, e.data.video.owner.broadcastBadges, e.data.video.owner.login))), this.props.onUpdateBegan(e, this.props)
                    }, t.prototype.componentDidUpdate = function() {
                        (this.props.data.loading || this.props.data.error || !this.props.hasFetchedComments || this.props.latencyTracking.reportInteractive(), this.props.data.loading || this.props.data.error || !this.props.disableChatForVideo || this.props.latencyTracking.reportInteractive(), this.state.commentToFocus) && ((this.state.commentToFocus.nextElementSibling || this.state.commentToFocus).scrollIntoView(!0), this.setState({
                            commentToFocus: void 0
                        }), this.startUnfocusTimeout())
                    }, t.prototype.componentWillUnmount = function() {
                        clearTimeout(this.focusTimer), this.props.latencyTracking.reportInteractive(), this.props.onUnmount()
                    }, t.prototype.render = function() {
                        var e, t = this,
                            n = this.props,
                            i = n.comments,
                            l = n.highlightedMessageID,
                            c = n.data,
                            d = c.video;
                        if (this.props.disableChatForVideo) e = o.createElement("div", {
                            "data-test-selector": R.ChatContentPlaceholder
                        });
                        else if (!d || c.loading) e = o.createElement(p.Za, {
                            fillContent: !0
                        });
                        else if (c.error) e = o.createElement(p.Xa, {
                            alignItems: p.f.Center,
                            "data-test-selector": R.VideoChatError,
                            fullHeight: !0,
                            justifyContent: p.Wa.Center
                        }, o.createElement(p.W, {
                            italic: !0
                        }, Object(s.d)("Video Chat is currently unavailable.", "VideoChat")));
                        else {
                            var u = void 0;
                            if (this.props.hasFetchedComments && this.props.offsetRange === de.a) u = o.createElement(p.Pa, {
                                display: p.X.Flex,
                                margin: {
                                    x: 1,
                                    top: 2,
                                    bottom: 1
                                },
                                alignItems: p.f.Center
                            }, o.createElement("li", {
                                "data-test-selector": R.NoCommentCTA
                            }, o.createElement(p.Pa, {
                                margin: {
                                    right: 1
                                }
                            }, o.createElement("img", {
                                src: Object(ue.b)(65),
                                srcSet: Object(ue.c)(65)
                            })), Object(s.d)("Join the chat while watching the video!", "VideoChatComponent")));
                            else {
                                u = (this.props.messageWindow ? i.filter(function(e) {
                                    return pe(t.props.messageWindow, e.comment.contentOffset)
                                }) : i).map(function(e, n) {
                                    var i = !t.state.commentAlreadyFocused && e.comment.id === l,
                                        r = n + 1 === t.props.comments.length,
                                        s = !t.props.isScrollingSynced && r,
                                        u = e.comment.contentOffset;
                                    return t.props.messageWindow && pe(t.props.messageWindow, e.comment.contentOffset) && (u = e.comment.contentOffset - t.props.messageWindow.offset), o.createElement(p.Pa, {
                                        padding: s ? {
                                            bottom: 4
                                        } : {},
                                        key: e.comment.id,
                                        fullWidth: !0
                                    }, o.createElement("li", null, o.createElement(se, {
                                        badgeSets: t.badgeSets,
                                        currentUser: c.currentUser,
                                        focus: i,
                                        isCreationCoolDownActive: t.props.isCreationCoolDownActive,
                                        isCurrentUserModerator: t.props.isCurrentUserModerator,
                                        isExpandedLayout: d.broadcastType === a.a.Upload,
                                        isReplayFilterOn: t.props.isReplayFilterOn,
                                        messageContext: e,
                                        onBanUserClick: t.props.onBanUser,
                                        onCreateReply: t.createReply,
                                        onDeleteCommentClick: t.props.onDeleteComment,
                                        onDisableSync: t.props.onDisableSync,
                                        onError: t.onError,
                                        onFocus: t.focusedCommentCallback,
                                        onLoadMoreRepliesClick: t.onLoadMoreRepliesHandler,
                                        onTimeStampClick: t.props.onPlayerSeekRequest,
                                        hideTimestamp: t.props.hideTimestamps,
                                        timeStampOffset: u
                                    })))
                                })
                            }
                            e = o.createElement("ul", {
                                style: {
                                    minHeight: 0
                                }
                            }, u)
                        }
                        var m, f = void 0 === this.props.highlightedMessageID,
                            g = null;
                        if ("" !== this.props.errorMessage && (g = o.createElement(h, {
                                message: this.props.errorMessage,
                                onErrorDismissed: this.onErrorDismissedHandler,
                                onMessageClick: this.onErrorMessageClickHandler
                            })), !d || !d.owner || c.loading || c.error || this.props.disableChatForVideo) m = o.createElement(p.ib, {
                            "data-test-selector": R.MessageInputPlaceholder,
                            height: 90,
                            width: 340
                        });
                        else {
                            var v = this.props.currentVideoTime;
                            this.props.messageWindow && pe(this.props.messageWindow, this.props.currentVideoTime) && (v = this.props.currentVideoTime - this.props.messageWindow.offset), m = o.createElement(j, {
                                currentUser: c.currentUser,
                                currentVideoTime: v,
                                onError: this.onError,
                                isModerator: !!d.owner.self && d.owner.self.isModerator,
                                isReplayMode: this.props.isReplayFilterOn,
                                isScrollingSynced: this.props.isScrollingSynced,
                                isPostCooldownActive: this.props.isCreationCoolDownActive,
                                isUpload: d.broadcastType === a.a.Upload,
                                onCreateComment: this.createComment,
                                onScrollPause: this.props.onDisableSync,
                                onScrollResume: this.props.onEnableSync,
                                videoOwnerID: d.owner.id,
                                videoOwnerLogin: d.owner.login
                            })
                        }
                        return o.createElement(p.Eb, {
                            className: r("video-chat", "qa-vod-chat"),
                            display: p.X.Flex,
                            borderLeft: !0,
                            color: p.O.Alt,
                            flexDirection: p.Aa.Column,
                            flexShrink: 0,
                            flexWrap: p.Ba.NoWrap,
                            fullHeight: !0,
                            fullWidth: !0,
                            position: p.jb.Relative
                        }, o.createElement(p.Eb, {
                            alignItems: p.f.Center,
                            background: p.r.Alt,
                            className: "video-chat__header",
                            display: p.X.Flex,
                            flexShrink: 0,
                            justifyContent: p.Wa.Center
                        }, o.createElement(p.W, {
                            type: p.Vb.Span
                        }, Object(s.d)("Chat on Videos", "VideoChatPresentation"))), g, o.createElement(le, {
                            startSynced: f,
                            isScrollingSynced: this.props.isScrollingSynced,
                            onScrollOffBottom: this.props.onDisableSync,
                            onScrollBottom: this.props.onEnableSync,
                            onMount: this.onMessageScrollAreaMount,
                            onSyncScrollClick: this.props.onEnableSync
                        }, o.createElement(p.Xa, {
                            display: p.X.Flex,
                            flexDirection: p.Aa.Column,
                            fullHeight: !0,
                            justifyContent: p.Wa.End
                        }, o.createElement(p.Pa, {
                            display: p.X.Flex,
                            flexWrap: p.Ba.Wrap,
                            alignItems: p.f.End,
                            fullWidth: !0
                        }, e))), o.createElement(p.Xa, {
                            className: "video-chat__input",
                            padding: {
                                top: 1,
                                bottom: 2,
                                x: 2
                            },
                            flexShrink: 0,
                            fullWidth: !0
                        }, m))
                    }, t.prototype.onCreate = function(e) {
                        this.props.isLoggedIn ? this.props.onCreate(e) : this.props.onShowLogin()
                    }, t
                }(o.Component),
                fe = Object(d.b)("VideoChat")(he)
        },
        r2Xj: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                DarkMode: "darkMode",
                FollowerDuration: "followerDuration",
                FollowerMode: "followerMode",
                HideChat: "hideChat",
                ShowMessageFlags: "showMessageFlags",
                ShowAutoModActions: "showAutoModActions",
                ShowModActions: "showModerationActions",
                ShowModIcons: "showModIcons",
                ShowTimestamps: "showTimestamps",
                UseHighContrastColors: "useHighContrastColors",
                SlowMode: "slowMode"
            }
        },
        r62z: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            }), n.d(t, "d", function() {
                return u
            });
            var i = n("+GjP"),
                r = "https://www.facebook.com/sharer/sharer.php",
                o = "https://www.twitter.com/share",
                a = "https://www.reddit.com/submit",
                s = "https://vk.com/share.php";

            function l(e) {
                return Object(i.e)(r, {
                    u: e
                })
            }

            function c(e, t) {
                return Object(i.e)(o, {
                    url: e,
                    text: t
                })
            }

            function d(e, t) {
                return Object(i.e)(a, {
                    url: e,
                    title: t
                })
            }

            function u(e) {
                return Object(i.e)(s, {
                    url: e
                })
            }
        },
        rv2W: function(e, t, n) {},
        s8Ou: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportContentInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportContent"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "contentID"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 111
                }
            };
            n.loc.source = {
                body: "mutation ReportUserModal_ReportUser($input: ReportContentInput!) {\nreportContent(input: $input) {\ncontentID\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        sPFP: function(e, t, n) {},
        sU0Q: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoChatCard_Video"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "previewThumbnailURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "90"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "height"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "51"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "publishedAt"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 162
                }
            };
            n.loc.source = {
                body: "query VideoChatCard_Video($videoID: ID!) {\nvideo(id: $videoID) {\nid\ntitle\npreviewThumbnailURL(width: 90 height: 51)\npublishedAt\nowner {\nid\nlogin\ndisplayName\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        sbEw: function(e, t, n) {},
        "sf7/": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return a
            });
            var i = "vodChat.video.CURRENT_VIDEO_CHANGED",
                r = "vodChat.video.CURRENT_VIDEO_TIME_CHANGED",
                o = function(e) {
                    return {
                        type: i,
                        id: e
                    }
                },
                a = function(e) {
                    return {
                        type: r,
                        updatedTime: e
                    }
                }
        },
        tFCv: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/MKj"),
                a = n("9C/b"),
                s = n("fvjX"),
                l = n("ZS2+"),
                c = n("/0dD"),
                d = n("SDEh"),
                u = n("edgk"),
                p = n("1/iK"),
                m = n("y5D0"),
                h = n("jZLd"),
                f = n("kRBY"),
                g = n("XDQu"),
                v = n("+pBb"),
                b = n("tY8L"),
                k = n("r2Xj"),
                y = n("WytW"),
                C = n("F6GT"),
                S = n("x0gr"),
                E = l.a.wrap(function() {
                    return n.e(199).then(n.bind(null, "8MX0"))
                }, "ChatSettingsComponent"),
                _ = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            editAppearance: !1,
                            shouldMountChild: !1
                        }, t.handleSettingsToggle = function(e) {
                            t.setState({
                                shouldMountChild: !0
                            }), t.props.onToggle && t.props.onToggle(e), t.state.editAppearance && t.setState({
                                editAppearance: !1
                            })
                        }, t.onEdit = function() {
                            t.setState({
                                editAppearance: !0
                            })
                        }, t.onLeaveEdit = function() {
                            t.setState({
                                editAppearance: !1
                            })
                        }, t.onDarkModeToggle = function() {
                            var e = t.props.darkModeEnabled ? c.a.Light : c.a.Dark;
                            t.props.onThemeChanged(e, !t.props.isPopout), Object(S.a)({
                                channelLogin: t.props.channelLogin,
                                isHostMode: t.props.isHostMode,
                                newValue: !t.props.darkModeEnabled,
                                settingName: k.a.DarkMode
                            })
                        }, t.onTimestampToggle = function() {
                            Object(C.b)("showTimestamps", !t.props.showTimestamps), t.props.showTimestamps ? t.props.onTimestampsDisable() : t.props.onTimestampsEnable(), Object(S.a)({
                                channelLogin: t.props.channelLogin,
                                isHostMode: t.props.isHostMode,
                                newValue: !t.props.showTimestamps,
                                settingName: k.a.ShowTimestamps
                            })
                        }, t.onHighContrastColorsToggle = function() {
                            Object(C.b)("useHighContrastColors", !t.props.useHighContrastColors), t.props.useHighContrastColors ? t.props.onUseHighContrastColorsDisable() : t.props.onUseHighContrastColorsEnable(), Object(S.a)({
                                channelLogin: t.props.channelLogin,
                                isHostMode: t.props.isHostMode,
                                newValue: !t.props.useHighContrastColors,
                                settingName: k.a.UseHighContrastColors
                            })
                        }, t.onChatHide = function() {
                            t.props.onChatHide(), Object(S.a)({
                                channelLogin: t.props.channelLogin,
                                isHostMode: t.props.isHostMode,
                                newValue: !0,
                                settingName: k.a.HideChat
                            })
                        }, t.onChatPopout = function() {
                            t.props.isPopout || t.props.onChatHide();
                            var e = window.open("/popout/" + t.props.channelLogin + "/chat?popout=", "_blank", "right=50,top=50,width=400,height=600,resizable=yes,scrollbars=no,toolbar=no,location=no,directories=no,status=no,menubar=no,copyhistory=no");
                            e && !Object(d.a)() && (e.focus(), Object(u.a)(e, function() {
                                t.props.onChatUnhide()
                            }))
                        }, t.onColorSelected = function(e) {
                            t.props.isLoggedIn ? t.props.onChatCommand(Object(y.a)(e)) : t.props.login()
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement(r.Fragment, null, r.createElement(E.Preload, null), r.createElement(x, {
                            onToggle: this.handleSettingsToggle
                        }, this.state.shouldMountChild && r.createElement(E, {
                            authToken: this.props.authToken,
                            darkModeEnabled: this.props.darkModeEnabled,
                            editAppearance: this.state.editAppearance,
                            isCurrentUserModerator: this.props.isCurrentUserModerator,
                            isHostMode: this.props.isHostMode,
                            isPopout: this.props.isPopout,
                            isEmbedded: this.props.isEmbedded,
                            onChatCommand: this.props.onChatCommand,
                            onChatHide: this.onChatHide,
                            onChatPopout: this.onChatPopout,
                            onShowChatRules: this.props.onShowChatRules,
                            onDarkModeToggle: this.onDarkModeToggle,
                            onTimestampToggle: this.onTimestampToggle,
                            onHighContrastColorsToggle: this.onHighContrastColorsToggle,
                            showTimestamps: this.props.showTimestamps,
                            useHighContrastColors: this.props.useHighContrastColors,
                            theatreModeEnabled: this.props.theatreModeEnabled,
                            onColorSelected: this.onColorSelected,
                            channelLogin: this.props.channelLogin,
                            channelID: this.props.channelID,
                            isLoggedIn: this.props.isLoggedIn,
                            onClickEditAppearance: this.onEdit,
                            onLeaveEditAppearance: this.onLeaveEdit,
                            onShowViewerCard: this.props.onShowViewerCard,
                            containerElement: this.props.containerElement,
                            "data-test-selector": "chat-settings-component"
                        })))
                    }, t
                }(r.Component);
            var w = Object(o.connect)(function(e) {
                    return {
                        isLoggedIn: Object(f.f)(e),
                        darkModeEnabled: Object(g.a)(e) === c.a.Dark,
                        showTimestamps: e.chat.showTimestamps,
                        useHighContrastColors: e.chat.useHighContrastColors,
                        theatreModeEnabled: e.ui.theatreModeEnabled
                    }
                }, function(e) {
                    return Object(s.bindActionCreators)({
                        login: function() {
                            return Object(m.e)(p.a.Chat)
                        },
                        onChatHide: function() {
                            return v.L()
                        },
                        onChatUnhide: function() {
                            return v.O()
                        },
                        onThemeChanged: function(e) {
                            return Object(h.b)(e, void 0, !1)
                        },
                        onTimestampsDisable: function() {
                            return v.E()
                        },
                        onTimestampsEnable: function() {
                            return v.J()
                        },
                        onUseHighContrastColorsDisable: function() {
                            return v.F()
                        },
                        onUseHighContrastColorsEnable: function() {
                            return v.K()
                        },
                        onShowViewerCard: b.e
                    }, e)
                })(_),
                O = Object(a.a)(w),
                T = n("/7QA"),
                D = n("eJ65"),
                N = n("Ue10"),
                I = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.setToggleBalloonRef = function(e) {
                            return t.toggleBalloonRef = e
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.componentDidUpdate = function(e) {
                        this.props.onToggle && this.props.isChatRulesOpen && !e.isChatRulesOpen && this.toggleBalloonRef.toggleBalloon(!1)
                    }, t.prototype.render = function() {
                        return r.createElement(D.a, {
                            onToggle: this.props.onToggle,
                            ref: this.setToggleBalloonRef
                        }, r.createElement(N.A, {
                            icon: N.tb.Gear,
                            ariaLabel: Object(T.d)("Chat settings", "ChatInput"),
                            "data-a-target": "chat-settings",
                            disabled: !!this.props.disabled
                        }), r.createElement(N.u, {
                            direction: N.v.Top,
                            noTail: !0,
                            offsetY: "11px",
                            "data-a-target": "chat-settings-balloon"
                        }, this.props.children))
                    }, t
                }(r.Component);
            var x = Object(o.connect)(function(e) {
                return {
                    isChatRulesOpen: e.chat.isChatRulesOpen
                }
            })(I);
            n.d(t, "a", function() {
                return O
            }), n.d(t, "b", function() {
                return x
            })
        },
        tIid: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            }), n.d(t, "b", function() {
                return s
            });
            var i = n("/7QA"),
                r = "esport_insider_pass_whitelist",
                o = "esports_room_cheering_whitelist";

            function a(e, t, n) {
                return void 0 === n && (n = !1), l(r, e, t, n)
            }

            function s(e, t) {
                return l(o, e, t)
            }

            function l(e, t, n, r) {
                void 0 === r && (r = !1);
                var o = i.b.get(e, []),
                    a = n && n.roles && n.roles.isStaff || r;
                return o.includes(t) || o.includes(t + "-staff") && a
            }
        },
        tY8L: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return o
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "e", function() {
                return s
            }), n.d(t, "d", function() {
                return l
            });
            var i = n("oK83"),
                r = "viewer-card.VIEWER_CARD_HIDDEN",
                o = "viewer-card.VIEWER_CARD_SHOWN";

            function a() {
                return {
                    type: r
                }
            }

            function s(e, t, n, r) {
                return void 0 === r && (r = 0), {
                    type: o,
                    viewerCardOptions: {
                        viewerCardType: i.b.Viewer,
                        initialTopOffset: r,
                        sourceID: n,
                        sourceType: t,
                        targetID: e
                    }
                }
            }

            function l(e, t, n, r) {
                return void 0 === r && (r = 0), {
                    type: o,
                    viewerCardOptions: {
                        viewerCardType: i.b.Extension,
                        initialTopOffset: r,
                        sourceID: n,
                        targetID: e,
                        extensionVersion: t
                    }
                }
            }
        },
        uIkQ: function(e, t, n) {
            "use strict";
            var i = n("b5C3"),
                r = n("fQWD"),
                o = n("ZEQw"),
                a = (n("yzyL"), n("mrSG")),
                s = function() {
                    function e(e, t, n) {
                        this.globalsBySet = new Map, this.channelsBySet = new Map, this.indexBadges(e, this.globalsBySet, n), Array.isArray(t) && this.indexBadges(t, this.channelsBySet, n)
                    }
                    return e.prototype.getBadge = function(e, t) {
                        var n = this.channelsBySet.get(e);
                        return n && n.has(t) ? n.get(t) || null : void 0 !== (n = this.globalsBySet.get(e)) && n.get(t) || null
                    }, e.prototype.indexBadges = function(e, t, n) {
                        e.forEach(function(e) {
                            n && e.clickAction === o.c && (e = a.__assign({}, e, {
                                channelName: n
                            }));
                            var i = t.get(e.setID);
                            i || (i = new Map, t.set(e.setID, i)), i.set(e.version, e)
                        })
                    }, e
                }();
            new s([], [], "");
            n.d(t, "b", function() {
                return i.a
            }), n.d(t, "a", function() {
                return r.a
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "c", function() {
                return s
            })
        },
        uNjw: function(e, t) {},
        ugtu: function(e, t, n) {
            "use strict";
            n.d(t, "j", function() {
                return s
            }), n.d(t, "k", function() {
                return l
            }), n.d(t, "l", function() {
                return c
            }), n.d(t, "e", function() {
                return d
            }), n.d(t, "d", function() {
                return u
            }), n.d(t, "h", function() {
                return p
            }), n.d(t, "b", function() {
                return m
            }), n.d(t, "i", function() {
                return h
            }), n.d(t, "c", function() {
                return f
            }), n.d(t, "f", function() {
                return g
            }), n.d(t, "g", function() {
                return v
            }), n.d(t, "a", function() {
                return b
            });
            var i = n("q1tI"),
                r = n("/7QA"),
                o = n("GxR5"),
                a = n("Ue10");

            function s(e) {
                return i.createElement(a.W, {
                    type: a.Vb.Strong
                }, e)
            }

            function l(e, t) {
                return i.createElement(a.U, {
                    to: t,
                    targetBlank: !0
                }, e)
            }

            function c(e, t) {
                return i.createElement(a.U, {
                    onClick: t
                }, e)
            }

            function d() {
                return Object(r.d)("<x:link>Forgot your username</x:link>?", {
                    "x:link": function(e) {
                        return l(e, o.b)
                    }
                }, "ServerMessage")
            }

            function u() {
                return Object(r.d)("<x:link>Forgot your password</x:link>?", {
                    "x:link": function(e) {
                        return l(e, Object(o.e)())
                    }
                }, "ServerMessage")
            }

            function p() {
                return Object(r.d)("Please <x:link>reset your password</x:link>.", {
                    "x:link": function(e) {
                        return l(e, Object(o.e)())
                    }
                }, "ServerMessage")
            }

            function m() {
                return Object(r.d)("Please <x:link>contact support</x:link> for assistance.", {
                    "x:link": function(e) {
                        return l(e, o.a)
                    }
                }, "ServerMessage")
            }

            function h() {
                return Object(r.d)("To learn more, please read <x:link>this article</x:link>.", {
                    "x:link": function(e) {
                        return l(e, o.c)
                    }
                }, "ServerMessage")
            }

            function f(e) {
                return Object(r.d)("Want to <x:click>create a new account</x:click>?", {
                    "x:click": function(t) {
                        return c(t, e)
                    }
                }, "ServerMessage")
            }

            function g(e) {
                return Object(r.d)("Want to <x:click>log in</x:click> instead?", {
                    "x:click": function(t) {
                        return c(t, e)
                    }
                }, "ServerMessage")
            }

            function v(e) {
                return Object(r.d)("If you need a Twitch account, you can <x:click>create one here</x:click>.", {
                    "x:click": function(t) {
                        return c(t, e)
                    }
                }, "ServerMessage")
            }

            function b(e) {
                return Object(r.d)("If you want to use an existing Twitch ID, you can <x:click>connect it here</x:click>.", {
                    "x:click": function(t) {
                        return c(t, e)
                    }
                }, "ServerMessage")
            }
        },
        uu1w: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Emote = "emote", e.Mention = "mention", e.Hashtag = "hashtag", e.None = "none"
                }(i || (i = {}))
        },
        vDRX: function(e, t, n) {},
        vHGB: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("ZEQw"),
                a = n("Ue10"),
                s = (n("E78O"), n("/7QA")),
                l = n("2xye"),
                c = function(e) {
                    e.badge_type = e.badge_type.toLowerCase().replace(/( |\s)/g, "_"), s.p.tracking.track(l.SpadeEventType.ChatBadgeClick, e)
                };
            n.d(t, "a", function() {
                return d
            });
            var d = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isHovering: !1
                    }, t.onMouseOver = function() {
                        t.setState({
                            isHovering: !0
                        })
                    }, t.onMouseOut = function() {
                        t.setState({
                            isHovering: !1
                        })
                    }, t.onBadgeClickHandler = function() {
                        c({
                            badge_type: t.props.badge.title,
                            badge_url_target: t.targetURL
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.badge,
                        t = e.title,
                        n = e.image1x,
                        i = e.image2x,
                        o = e.image4x,
                        l = r.createElement("img", {
                            alt: t,
                            "aria-label": Object(s.d)("{badgeTitle} badge", {
                                badgeTitle: t
                            }, "Badge"),
                            className: "chat-badge",
                            src: n,
                            srcSet: n + " 1x, " + i + " 2x, " + o + " 4x",
                            onMouseOver: this.onMouseOver,
                            onMouseOut: this.onMouseOut
                        });
                    return this.targetURL = this.getTargetURL(), "" !== this.targetURL && (l = r.createElement("a", {
                        href: this.targetURL,
                        onClick: this.onBadgeClickHandler,
                        target: "_blank",
                        "data-a-target": "chat-badge"
                    }, l)), this.state.isHovering ? r.createElement(a.Yb, {
                        align: a.Zb.Left,
                        "data-a-target": "chat-badge",
                        display: a.X.Inline,
                        key: n,
                        label: t,
                        offsetY: "0.9rem"
                    }, l) : l
                }, t.prototype.getTargetURL = function() {
                    var e = this.props.badge;
                    switch (e.clickAction) {
                        case o.e:
                            return e.clickURL;
                        case o.c:
                            return e.channelName ? this.getSubscriberLink() : "";
                        case o.d:
                            return "https://www.twitch.tv/products/turbo?ref=chat_badge";
                        default:
                            return ""
                    }
                }, t.prototype.getSubscriberLink = function() {
                    return "https://www.twitch.tv/" + this.props.badge.channelName + "/subscribe?ref=in_chat_subscriber_link"
                }, t
            }(r.Component)
        },
        vrNp: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("i4un"),
                o = n("dIU+"),
                a = n("QjI3"),
                s = n("Ue10"),
                l = function(e) {
                    return Object(r.d)() ? i.createElement(s.Xa, {
                        display: s.X.Flex,
                        flexWrap: s.Ba.NoWrap,
                        justifyContent: s.Wa.Between,
                        margin: {
                            right: 1
                        }
                    }, i.createElement(s.Xa, null, i.createElement(o.a, {
                        channelLogin: e.login,
                        followUIType: o.b.IconAndText,
                        unfollowUIType: o.b.IconOnly,
                        balloonDirection: s.v.TopRight
                    })), i.createElement(s.Xa, {
                        margin: {
                            left: 1
                        }
                    }, i.createElement(a.a, {
                        channelLogin: e.login,
                        balloonDirection: s.v.TopRight
                    }))) : null
                };
            l.displayName = "SocialButtonsGroup", n.d(t, "a", function() {
                return l
            })
        },
        wbMx: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return d
            });
            var i, r = n("mrSG"),
                o = n("q1tI"),
                a = n("/7QA"),
                s = n("Jxh/"),
                l = n("r62z"),
                c = n("Ue10");
            n("jeZI");
            ! function(e) {
                e[e.Twitter = 0] = "Twitter", e[e.Reddit = 1] = "Reddit", e[e.VKontakte = 2] = "VKontakte", e[e.Facebook = 3] = "Facebook", e[e.Copy = 4] = "Copy", e[e.CopyInput = 5] = "CopyInput", e[e.Download = 6] = "Download"
            }(i || (i = {}));
            var d = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.renderLink = function() {
                        var e = "social-button__link " + n.addSocialClassModifier("social-button__link");
                        return n.props.type === i.Download ? o.createElement("a", r.__assign({
                            href: n.props.url,
                            target: "_blank",
                            className: e,
                            onClick: n.onShareClickHandler
                        }, Object(c.jc)(n.props), {
                            download: n.props.text
                        }), n.renderIcon()) : n.isLink() ? o.createElement("a", r.__assign({
                            href: n.getLinkTarget(),
                            target: "_blank",
                            className: e,
                            onClick: n.onShareClickHandler
                        }, Object(c.jc)(n.props)), n.renderIcon()) : o.createElement("button", r.__assign({
                            onClick: n.copyPageUrl,
                            onMouseLeave: n.clearIsCopiedStatus,
                            className: e
                        }, Object(c.jc)(n.props)), n.renderIcon())
                    }, n.onShareClickHandler = function() {
                        n.props.onShareClick && n.props.onShareClick(n.props.type)
                    }, n.clearIsCopiedStatus = function() {
                        n.setState({
                            isCopied: !1
                        })
                    }, n.getUrl = function() {
                        return n.props.url || window.location.href
                    }, n.copyPageUrl = function(e) {
                        e && e.preventDefault(), n.props.onShareClick && n.props.onShareClick(n.props.type), Object(s.a)(n.getUrl()), n.setState({
                            isCopied: !0
                        })
                    }, n.renderIcon = function() {
                        var e = n.getAssetFromType();
                        return o.createElement(c.Xa, {
                            className: "social-button__icon " + n.addSocialClassModifier("social-button__icon"),
                            display: c.X.Flex,
                            alignItems: c.f.Center,
                            justifyContent: c.Wa.Center
                        }, o.createElement(c.sb, {
                            asset: e
                        }))
                    }, n.isLink = function() {
                        return n.props.type !== i.Copy
                    }, n.getTooltipFromType = function() {
                        switch (n.props.type) {
                            case i.Twitter:
                                return "Twitter";
                            case i.Reddit:
                                return "Reddit";
                            case i.Facebook:
                                return "Facebook";
                            case i.VKontakte:
                                return "VKontakte";
                            case i.Download:
                                return Object(a.d)("Download", "SocialButton");
                            case i.Copy:
                                return n.state.isCopied ? Object(a.d)("Copied", "SocialButton") : Object(a.d)("Copy to clipboard", "SocialButton");
                            default:
                                return ""
                        }
                    }, n.getAssetFromType = function() {
                        switch (n.props.type) {
                            case i.Twitter:
                                return c.tb.Twitter;
                            case i.Facebook:
                                return c.tb.Facebook;
                            case i.VKontakte:
                                return c.tb.VKontakte;
                            case i.Reddit:
                                return c.tb.Reddit;
                            case i.Download:
                                return c.tb.Download;
                            case i.Copy:
                            default:
                                return c.tb.Copy
                        }
                    }, n.addSocialClassModifier = function(e) {
                        switch (n.props.type) {
                            case i.Twitter:
                                return e + "--twitter";
                            case i.Reddit:
                                return e + "--reddit";
                            case i.Facebook:
                                return e + "--facebook";
                            case i.VKontakte:
                                return e + "--vkontakte";
                            case i.Download:
                                return e + "--download";
                            case i.Copy:
                                return e + "--copy";
                            default:
                                return ""
                        }
                    }, n.getLinkTarget = function() {
                        var e = n.props,
                            t = e.text,
                            r = e.type,
                            o = n.getUrl(),
                            a = t || "";
                        switch (r) {
                            case i.Reddit:
                                return Object(l.b)(o, a);
                            case i.VKontakte:
                                return Object(l.d)(o);
                            case i.Facebook:
                                return Object(l.a)(o);
                            case i.Twitter:
                                return Object(l.c)(o, a);
                            default:
                                return ""
                        }
                    }, n.state = {
                        isCopied: !1
                    }, n
                }
                return r.__extends(t, e), t.prototype.render = function() {
                    return o.createElement(c.Xa, {
                        className: "social-button"
                    }, o.createElement(c.Yb, {
                        label: this.getTooltipFromType(),
                        direction: c.ac.Bottom
                    }, this.renderLink()))
                }, t
            }(o.Component)
        },
        wo0O: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "LatestCollectionCarousel_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "creatorLogin"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "creatorLogin"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "collections"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "1"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "FragmentSpread",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PreviewCollection"
                                                            },
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 287
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/video-carousel/components/collection-carousel/models/preview-collection-fragment.gql"\nquery LatestCollectionCarousel_User($creatorLogin: String!) {\nuser(login: $creatorLogin) {\nid\ndisplayName\ncollections(first:1) {\nedges {\nnode {\n...PreviewCollection\n}\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(function(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }(n("jr2J").definitions)), e.exports = i
        },
        wqI2: function(e, t, n) {},
        wxwP: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/MKj"),
                a = n("fvjX"),
                s = n("/7QA"),
                l = n("CFw/"),
                c = n.n(l),
                d = n("aCAx"),
                u = n("Ue10"),
                p = (n("9RDd"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        return r.createElement("div", {
                            onClick: this.props.closeModal
                        }, r.createElement(u.i, {
                            type: u.n.FadeIn,
                            duration: u.k.Long,
                            timing: u.m.EaseInOut,
                            enabled: !0
                        }, r.createElement(u.Eb, {
                            className: "browser-push-notifications-upsell",
                            alignItems: u.f.Center,
                            justifyContent: u.Wa.Center,
                            position: u.jb.Fixed,
                            display: u.X.Flex,
                            background: u.r.Overlay,
                            fullHeight: !0,
                            fullWidth: !0,
                            attachTop: !0,
                            attachLeft: !0
                        }, r.createElement(u.Xa, {
                            className: "browser-push-notifications-upsell__container",
                            display: u.X.Flex,
                            textAlign: u.Rb.Center,
                            padding: {
                                x: 1
                            },
                            position: u.jb.Relative
                        }, r.createElement(u.i, {
                            type: u.n.SlideInBottom,
                            duration: u.k.Long,
                            timing: u.m.EaseInOut,
                            enabled: !0
                        }, r.createElement(u.W, {
                            type: u.Vb.H3,
                            fontSize: u.Ca.Size3,
                            lineHeight: u.Ya.Body
                        }, Object(s.d)("Don't miss out when your favorite streamers go live!", "BrowserNotificationsUpsellModal")), r.createElement(u.Xa, {
                            margin: {
                                top: 1
                            }
                        }, r.createElement(u.W, {
                            type: u.Vb.H4,
                            fontSize: u.Ca.Size4,
                            color: u.O.OverlayAlt,
                            lineHeight: u.Ya.Body
                        }, Object(s.d)("Turn on Browser Notifications to get updates even when your browser window is minimized", "BrowserNotificationsUpsellModal")))), r.createElement(u.Xa, {
                            className: "browser-push-notifications-upsell__arrow",
                            position: u.jb.Absolute,
                            attachTop: !0,
                            attachLeft: !0
                        }, r.createElement(u.i, {
                            type: u.n.SlideInBottom,
                            delay: u.j.Short,
                            duration: u.k.Long,
                            timing: u.m.EaseInOut,
                            enabled: !0
                        }, r.createElement("img", {
                            src: c.a
                        })))))))
                    }, t
                }(r.Component));
            var m = Object(o.connect)(null, function(e) {
                return Object(a.bindActionCreators)({
                    closeModal: d.c
                }, e)
            })(p);
            n.d(t, !1, function() {
                return p
            }), n.d(t, "a", function() {
                return m
            })
        },
        "x0+1": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("/7QA"),
                a = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            alwaysShowMessage: !1
                        }, t.renderBody = function() {
                            return t.state.alwaysShowMessage ? t.props.messageBody : r.createElement("span", {
                                key: "deleted",
                                className: "chat-line__message--deleted"
                            }, r.createElement("a", {
                                href: "",
                                onClick: t.alwaysShowMessage
                            }, "<" + Object(o.d)("click to show", "MessageDeletedLine") + ">"))
                        }, t.alwaysShowMessage = function(e) {
                            e && e.preventDefault(), t.setState({
                                alwaysShowMessage: !0
                            })
                        }, t
                    }
                    return i.__extends(t, e), t.prototype.render = function() {
                        var e = this.props,
                            t = e.targetLogin,
                            n = e.moderatorLogin;
                        return n ? Object(o.d)("{moderatorLogin} deleted {targetLogin}'s message: {body}", {
                            moderatorLogin: n,
                            targetLogin: t,
                            body: this.renderBody()
                        }, "MessageDeletedLine") : Object(o.d)("A moderator deleted {targetLogin}'s message: {body}", {
                            targetLogin: t,
                            body: this.renderBody()
                        }, "MessageDeletedLine")
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return a
            })
        },
        x0gr: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("2xye"),
                a = n("r2Xj"),
                s = n("oi4T"),
                l = function(e) {
                    r.o.track(o.SpadeEventType.ChatSettingsOpened, Object(s.a)(e))
                },
                c = function(e) {
                    var t = i.__assign({}, Object(s.a)(e), {
                        setting_name: e.settingName,
                        new_value: e.newValue.toString()
                    });
                    r.o.track(o.SpadeEventType.ChatSettingsChanged, t)
                },
                d = function(e) {
                    var t = i.__assign({}, Object(s.a)(e), {
                        setting_name: a.a.FollowerDuration,
                        new_value: e.newValue.toString(),
                        follower_mode_on: e.followerModeOn
                    });
                    r.o.track(o.SpadeEventType.ChatSettingsChanged, t)
                }
        },
        x3L2: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoWatchPage_Video"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "collectionID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "useCollectionID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "options"
                                },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [{
                                        kind: "ObjectField",
                                        name: {
                                            kind: "Name",
                                            value: "includePrivate"
                                        },
                                        value: {
                                            kind: "BooleanValue",
                                            value: !0
                                        }
                                    }]
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "skip"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "useCollectionID"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "videoWatchData"
                                    },
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "collection"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "collectionID"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "useCollectionID"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "items"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "1"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Video"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "FragmentSpread",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "videoWatchData"
                                                                    },
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "owner"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }, {
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "videoWatchData"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Video"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "broadcastType"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "title"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "description"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "lengthSeconds"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "publishedAt"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "viewCount"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "scope"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "previewThumbnailURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "width"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "126"
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "height"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "71"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "game"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "boxArtURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "138"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "height"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "190"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "name"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "owner"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "language"
                            },
                            arguments: [],
                            directives: []
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 835
                }
            };
            n.loc.source = {
                body: "query VideoWatchPage_Video($videoID: ID $collectionID: ID! $useCollectionID: Boolean!) {\ncurrentUser {\nid\ndisplayName\n}\n# If the page specifies a video ID query it directly.\nvideo(id: $videoID options: { includePrivate: true }) @skip(if: $useCollectionID) {\n...videoWatchData\n}\n# If the page is a collection page grab the first video from the collection.\ncollection(id: $collectionID) @include(if: $useCollectionID) {\nid\nitems(first: 1) {\ntotalCount\nedges {\nnode {\n... on Video {\n...videoWatchData\n}\n}\n}\n}\nowner {\nid\nlogin\ndisplayName\n}\n}\n}\n# These are the fields used by the watch page.\nfragment videoWatchData on Video {\nid\nbroadcastType\ntitle\ndescription\nlengthSeconds\npublishedAt\nviewCount\nscope\npreviewThumbnailURL(width: 126 height: 71)\ngame {\nid\nboxArtURL(width: 138 height: 190)\nname\n}\nowner {\nid\ndisplayName\nlogin\n}\nlanguage\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        xM4F: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "VideoChatChannelAndCommentCreatorAndVideoTrackingContext"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoCreatorID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "commentCreator"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "users"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "ids"
                                },
                                value: {
                                    kind: "ListValue",
                                    values: [{
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "videoCreatorID"
                                        }
                                    }, {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "commentCreator"
                                        }
                                    }]
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "game"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 245
                }
            };
            n.loc.source = {
                body: "query VideoChatChannelAndCommentCreatorAndVideoTrackingContext($videoCreatorID: ID! $commentCreator: ID! $videoID: ID) {\nusers(ids: [$videoCreatorID $commentCreator]) {\nid\nlogin\n}\nvideo(id: $videoID) {\nid\nbroadcastType\ntitle\ngame {\nid\nname\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        y4Ne: function(e, t, n) {},
        y6KF: function(e, t, n) {
            "use strict";
            n.d(t, "f", function() {
                return o
            }), n.d(t, "e", function() {
                return a
            }), n.d(t, "r", function() {
                return r
            }), n.d(t, "p", function() {
                return d
            }), n.d(t, "k", function() {
                return u
            }), n.d(t, "n", function() {
                return p
            }), n.d(t, "j", function() {
                return m
            }), n.d(t, "l", function() {
                return h
            }), n.d(t, "m", function() {
                return f
            }), n.d(t, "o", function() {
                return g
            }), n.d(t, "s", function() {
                return v
            }), n.d(t, "t", function() {
                return b
            }), n.d(t, "h", function() {
                return k
            }), n.d(t, "g", function() {
                return y
            }), n.d(t, "i", function() {
                return C
            }), n.d(t, "q", function() {
                return S
            }), n.d(t, "b", function() {
                return s
            }), n.d(t, "c", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            });
            var i = n("YwGE");
            n.d(t, "a", function() {
                return i.a
            });
            var r, o = "generated",
                a = "custom";
            ! function(e) {
                e.Private = "PRIVATE", e.Public = "PUBLIC"
            }(r || (r = {}));
            var s, l, c, d = "uploading",
                u = "pending_transcode",
                p = "transcoding",
                m = "failed",
                h = "recorded",
                f = "recording",
                g = "unprocessed",
                v = [h, f],
                b = [p, u, m, g, d],
                k = "FORMAT_NOT_SUPPORTED",
                y = "BAD_ASSET",
                C = "INTERNAL_ERROR",
                S = {
                    VIDEO_PREMIERE_STATUS_UNSCHEDULED: "unscheduled",
                    VIDEO_PREMIERE_STATUS_SCHEDULED: "scheduled",
                    VIDEO_PREMIERE_STATUS_STARTED: "started",
                    VIDEO_PREMIERE_STATUS_FAILED: "failed"
                };
            ! function(e) {
                e.Youtube = "youtube"
            }(s || (s = {})),
            function(e) {
                e.None = "NONE", e.Expiring = "EXPIRING"
            }(l || (l = {})),
            function(e) {
                e.Everyone = "", e.SubOnly = "sub_only"
            }(c || (c = {}))
        },
        "yI+y": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            }), n.d(t, "c", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            });
            var i = n("/7QA"),
                r = n("d0ua"),
                o = n("D7An");

            function a() {
                return i.p.experiments.getAssignment(o.b.TheatreFullscreen) || "control"
            }

            function s(e) {
                return "theatre" === e
            }

            function l(e) {
                return s(e) ? document.body : void 0
            }

            function c(e) {
                s(a()) && (e ? i.p.store.dispatch(Object(r.D)()) : i.p.store.dispatch(Object(r.A)()))
            }
        },
        yWUM: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = "0h0m1s";

            function r(e) {
                if (0 === e) return i;
                if (!e || e < 0) return "";
                var t = e,
                    n = Math.floor(t / 3600);
                return t %= 3600, n + "h" + Math.floor(t / 60) + "m" + (t %= 60) + "s"
            }
        },
        ya7N: function(e, t, n) {},
        yzyL: function(e, t) {},
        "z+dA": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelPage_SubscribeButton_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "endsAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isDNRd"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "platform"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "pendingSubscription"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "price"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "startsAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "tier"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "type"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "gift"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "isGift"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 355
                }
            };
            n.loc.source = {
                body: "query ChannelPage_SubscribeButton_User($login: String!) {\nuser(login: $login) {\nid\ndisplayName\nsubscriptionProducts {\nid\nemoteSetID\nname\n}\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\npurchasedWithPrime\ntier\nendsAt\nisDNRd\nplatform\npendingSubscription {\nprice\nstartsAt\ntier\ntype\n}\ngift {\nisGift\n}\n}\n}\n}\ncurrentUser {\nid\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        z1lk: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "d", function() {
                    return r
                }), n.d(t, "b", function() {
                    return o
                }), n.d(t, "c", function() {
                    return a
                }),
                function(e) {
                    e[e.Left = 0] = "Left", e[e.Right = 1] = "Right"
                }(i || (i = {}));
            var r = "root",
                o = "addTo",
                a = "collections"
        },
        z36O: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                o = n("Ue10"),
                a = function(e) {
                    return r.createElement(o.Xa, {
                        margin: {
                            right: 1
                        },
                        display: o.X.Flex,
                        alignItems: o.f.Center
                    }, r.createElement(o.Yb, {
                        align: o.Zb.Left,
                        label: e.tooltip,
                        direction: o.ac.Bottom
                    }, r.createElement(o.Xa, {
                        margin: {
                            right: .5
                        }
                    }, r.createElement(o.Eb, {
                        display: o.X.Flex,
                        alignItems: o.f.Center,
                        color: o.O.Alt2
                    }, r.createElement(o.sb, {
                        asset: e.svgAsset
                    }))), r.createElement(o.W, {
                        fontSize: o.Ca.Size5,
                        ellipsis: !0
                    }, r.createElement(o.U, i.__assign({
                        to: e.linkTo
                    }, Object(o.jc)(e), {
                        targetBlank: !0
                    }), e.title))))
                };
            n.d(t, "a", function() {
                return a
            })
        },
        zClW: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return b
            }), n.d(t, "a", function() {
                return k
            }), n.d(t, "b", function() {
                return y
            }), n.d(t, "i", function() {
                return C
            }), n.d(t, "d", function() {
                return _
            }), n.d(t, "f", function() {
                return w
            }), n.d(t, "e", function() {
                return O
            }), n.d(t, "g", function() {
                return T
            }), n.d(t, "h", function() {
                return D
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                o = n("2xye"),
                a = n("ZuiC"),
                s = n("ahza"),
                l = n("pU2t"),
                c = n("ZUUl"),
                d = n("fI4C"),
                u = n("fIj0"),
                p = n("xM4F"),
                m = n("8uuy");
            var h = function(e) {
                    if (e.includes("FollowersOnlyError")) return function(e) {
                        return Object(r.d)("This room is in {duration} followers-only mode. Follow this channel to join the community", {
                            duration: e
                        }, "routines-comments")
                    }(function(e) {
                        var t = e.split(" "),
                            n = t[t.length - 1].match(/((\d+)h)?(\d+)m(\d+)s/);
                        if (!Array.isArray(n)) return "";
                        return {
                            600: "10 Minutes",
                            1800: "30 Minutes",
                            3600: "1 Hour",
                            86400: "1 Day",
                            604800: "1 Week",
                            2592000: "1 Month",
                            7776000: "3 Months"
                        }[60 * parseInt(n[2] || "0", 10) * 60 + 60 * parseInt(n[3], 10) + parseInt(n[4], 10)]
                    }(e));
                    var t = {
                            CommenterBannedError: Object(r.d)("You are banned from sending messages in this channel", "routines-comments"),
                            CommentingDisabledError: Object(r.d)("Sending messages in this channel is disabled", "routines-comments"),
                            UserNotVerifiedError: Object(r.d)("Account email verification required to send a message", "routines-comments"),
                            MaxChildCommentsError: Object(r.d)("The reply limit for this message has been reached", "routines-comments"),
                            MessageLikelySpamError: Object(r.d)("Your message was blocked by the spam filter", "routines-comments"),
                            MessageContainsBannedWordsError: Object(r.d)("Your message wasn't posted due to conflicts with the channel's moderation settings", "routines-comments")
                        },
                        n = Object.keys(t).find(function(t) {
                            return e.includes(t)
                        });
                    return n ? t[n] : Object(r.d)("Unable to send a new message at this time", "routines-comments")
                },
                f = "",
                g = -1,
                v = !1,
                b = function(e, t) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        return i.__generator(this, function(n) {
                            if (v) return [2, Promise.resolve()];
                            if (Object(s.f)(t)) {
                                if (t.offset === g) return [2, Promise.resolve()];
                                g = t.offset
                            }
                            if (Object(s.d)(t)) {
                                if (t.cursor === f) return [2, Promise.resolve()];
                                f = t.cursor
                            }
                            return v = !0, [2, Object(s.g)(t).then(function(n) {
                                v = !1, Object(s.f)(t) && t.offset === g ? e.dispatch(Object(a.A)(n)) : e.dispatch(Object(a.z)(n))
                            }, function(t) {
                                v = !1, r.k.error(t, "VideoChat: unable to fetch messages"), e.dispatch(Object(a.B)())
                            })]
                        })
                    })
                },
                k = function(e, t) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var n, o, d;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, Object(s.b)(t)];
                                case 1:
                                    return (n = i.sent()).requestError ? (r.k.error(n.requestError, k.name), e.dispatch(Object(a.r)(h(""))), [2]) : n.error ? (r.k.error(new Error(n.error.error), k.name), e.dispatch(Object(a.r)(h(n.error.message))), [2]) : void 0 === n.body ? (e.dispatch(Object(a.r)(h(""))), [2]) : (o = Object(l.c)(n.body), e.dispatch(Object(a.s)(o)), e.dispatch(Object(c.b)(S, o)), setTimeout(function() {
                                        e.dispatch(Object(a.q)())
                                    }, 5e3), [3, 3]);
                                case 2:
                                    return d = i.sent(), r.k.error(d, k.name), e.dispatch(Object(a.r)(h(""))), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                y = function(e, t) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var n;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, Object(s.c)(t)];
                                case 1:
                                    return i.sent(), e.dispatch(Object(a.t)({
                                        comment: t
                                    })), e.dispatch(Object(c.b)(E, {
                                        comment: t
                                    })), [3, 3];
                                case 2:
                                    return n = i.sent(), r.k.error(n, y.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                C = function(e, t) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var n, o;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, Object(s.h)(t)];
                                case 1:
                                    return n = i.sent(), e.dispatch(Object(a.v)(n)), [3, 3];
                                case 2:
                                    return o = i.sent(), r.k.error(o, C.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                S = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var e, s;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: u,
                                        variables: {
                                            videoCreatorID: t.comments[0].channelId,
                                            videoID: t.comments[0].contentId
                                        }
                                    })];
                                case 1:
                                    return e = i.sent().data, a.track(o.SpadeEventType.ChommentCreated, Object(d.f)(t, e)), [3, 3];
                                case 2:
                                    return s = i.sent(), r.k.error(s, S.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                E = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var s, l;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: p,
                                        variables: {
                                            videoCreatorID: t.comment.channelId,
                                            commentCreator: t.comment.commenter,
                                            videoID: t.comment.contentId
                                        }
                                    })];
                                case 1:
                                    return s = i.sent().data, a.track(o.SpadeEventType.ChommentDeleted, Object(d.g)(t, e.getState(), s)), [3, 3];
                                case 2:
                                    return l = i.sent(), r.k.error(l, E.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                _ = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var s, l;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: m,
                                        variables: {
                                            videoID: t.comment.contentId
                                        }
                                    })];
                                case 1:
                                    return s = i.sent().data, a.track(o.SpadeEventType.ChommentUIAction, Object(d.e)(t, e.getState(), s)), [3, 3];
                                case 2:
                                    return l = i.sent(), r.k.error(l, _.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                w = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var s, l;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: p,
                                        variables: {
                                            videoCreatorID: t.channelId,
                                            commentCreator: t.commenter,
                                            videoID: t.contentId
                                        }
                                    })];
                                case 1:
                                    return s = i.sent().data, a.track(o.SpadeEventType.ChommentUIAction, Object(d.i)(t, e.getState(), s)), [3, 3];
                                case 2:
                                    return l = i.sent(), r.k.error(l, w.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                O = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var l, c, u, p;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), l = e.getState(), c = Object(s.e)(t) ? l.vodChat.comments.comments.parentComments[t.parentId].contentId : t.contentId, [4, n.query({
                                        query: m,
                                        variables: {
                                            videoID: c
                                        }
                                    })];
                                case 1:
                                    return u = i.sent().data, a.track(o.SpadeEventType.ChommentUIAction, Object(d.h)(t, e.getState(), u)), [3, 3];
                                case 2:
                                    return p = i.sent(), r.k.error(p, O.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                T = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var s, l;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: m,
                                        variables: {
                                            videoID: t.comment.contentId
                                        }
                                    })];
                                case 1:
                                    return s = i.sent().data, a.track(o.SpadeEventType.ChommentUIAction, Object(d.j)(t, e.getState(), s)), [3, 3];
                                case 2:
                                    return l = i.sent(), r.k.error(l, T.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                },
                D = function(e, t, n, a) {
                    return i.__awaiter(void 0, void 0, void 0, function() {
                        var s, l;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, n.query({
                                        query: u,
                                        variables: {
                                            videoCreatorID: t.channelId,
                                            videoID: t.contentId
                                        }
                                    })];
                                case 1:
                                    return s = i.sent().data, a.track(o.SpadeEventType.ChommentUIAction, Object(d.k)(t, e.getState(), s)), [3, 3];
                                case 2:
                                    return l = i.sent(), r.k.error(l, D.name), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }
        },
        zixI: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "UnblockUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UnblockUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "unblockUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "targetUser"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 100
                }
            };
            n.loc.source = {
                body: "mutation UnblockUser($input: UnblockUserInput!) {\nunblockUser(input: $input) {\ntargetUser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        znm4: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/MKj"),
                o = n("yR8l"),
                a = n("QzU5"),
                s = n("kRBY"),
                l = n("4rCz"),
                c = n("0Lz3"),
                d = n("WytW"),
                u = n("ZuiC"),
                p = n("sf7/"),
                m = n("HjbF"),
                h = n("kVrx"),
                f = n("zClW"),
                g = n("l41m"),
                v = function(e, t, n) {
                    return e && t && !n
                },
                b = n("Sfdh"),
                k = n("ZUUl"),
                y = n("pwkZ"),
                C = n("pq/L");
            n.d(t, "a", function() {
                return _
            });
            var S = 2;
            var E = Object(r.connect)(function(e, t) {
                    var n = {
                        comments: [],
                        currentVideoTime: e.vodChat.comments.currentVideoTime,
                        cursor: e.vodChat.comments.cursor,
                        errorMessage: e.vodChat.comments.errorMessage,
                        hasFetchedComments: e.vodChat.comments.hasLoadedData,
                        hasRequestedCurrentUserBlockList: e.vodChat.comments.hasLoadedCurrentUserBlockedList,
                        isCreationCoolDownActive: e.vodChat.comments.isPostCooldownActive,
                        isCurrentUserModerator: !1,
                        isLoggedIn: Object(s.f)(e),
                        isReplayFilterOn: e.vodChat.comments.isReplayFilterOn,
                        isScrollingSynced: e.vodChat.comments.isScrollingSynced,
                        offsetRange: Object(g.b)(e.vodChat.comments.comments),
                        replyCursorMap: e.vodChat.comments.replyCursorMap,
                        shouldSendReplayFilterError: !1,
                        hideTimestamps: e.vodChat.comments.hideTimestamps
                    };
                    if (!t.data.loading && !t.data.error && t.data.video) {
                        var i = t.data,
                            r = i.currentUser,
                            o = i.video;
                        null !== r && r.roles && (n.isCurrentUserModerator = Object(m.b)(r, o.owner)), n.comments = Object(g.c)(e, t.data.video.broadcastType, n.isCurrentUserModerator, t.blockedUsers), n.shouldSendReplayFilterError = v(e.vodChat.comments.isReplayFilterOn, t.data.video.broadcastType !== a.a.Upload, e.vodChat.comments.hasDismissedChatReplayError)
                    }
                    return n
                }, function(e, t) {
                    return {
                        onUpdateBegan: function(n, i) {
                            if (n.videoID)
                                if (i.videoID === n.videoID) {
                                    if (!n.hasFetchedComments) {
                                        var r = {
                                            bitsConfig: t.bitsConfig,
                                            offset: n.currentVideoTime,
                                            videoID: n.videoID
                                        };
                                        if (n.highlightTimestamp && n.currentVideoTime !== n.highlightTimestamp) return;
                                        return n.highlightedMessageID && (r.highlightedMessageID = n.highlightedMessageID), void e(Object(k.a)(f.c, r))
                                    }
                                    if (n.offsetRange !== g.a) {
                                        if (Object(m.f)({
                                                cursor: n.cursor,
                                                currentVideoTime: n.currentVideoTime,
                                                offsetEndTime: n.offsetRange.endSec,
                                                offsetThreshold: S
                                            })) return void e(Object(k.a)(f.c, {
                                            bitsConfig: t.bitsConfig,
                                            cursor: n.cursor.future,
                                            videoID: n.videoID
                                        }));
                                        if (Object(m.e)(n)) return void e(Object(k.a)(f.c, {
                                            bitsConfig: t.bitsConfig,
                                            offset: n.currentVideoTime,
                                            videoID: n.videoID
                                        }))
                                    }
                                } else e(Object(p.c)(n.videoID))
                        },
                        onCreate: function(t) {
                            if (Object(d.j)(t.message)) {
                                var n = Object(l.d)("Sorry, commands are not supported in Chat on Videos yet.", "VideoChatPresentation");
                                e(Object(u.u)(n))
                            } else e(Object(k.a)(f.a, t)), e(Object(k.b)(f.e, t))
                        },
                        onError: function(t) {
                            e(Object(u.u)(t))
                        },
                        onErrorDismissClick: function() {
                            e(Object(u.w)())
                        },
                        onUnmount: function() {
                            e(Object(u.y)())
                        },
                        onLoadMoreReplies: function(t, n, i, r) {
                            e(Object(k.a)(f.c, Object(m.a)(t, n, i, r)))
                        },
                        onDisableSync: function() {
                            e(Object(u.D)())
                        },
                        onEnableSync: function() {
                            e(Object(u.E)())
                        },
                        onBanUser: function(t) {
                            e(Object(k.a)(h.a, t)), e(Object(k.b)(f.d, t))
                        },
                        onDeleteComment: function(t) {
                            e(Object(k.a)(f.b, t)), e(Object(k.b)(f.f, t))
                        },
                        onPlayerSeekRequest: function(n, i) {
                            t.onPlayerSeekRequest(n), void 0 !== i && e(Object(k.b)(f.h, i))
                        },
                        onTurnOffReplayFilter: function() {
                            e(Object(u.C)(!1))
                        },
                        onWillMount: function() {
                            e(Object(u.x)())
                        },
                        onDidMount: function(t) {
                            e(Object(u.C)(t))
                        }
                    }
                }, function(e, t, n) {
                    var r = t.onDisableSync;
                    e.isScrollingSynced || (r = function() {});
                    var o = t.onCreate;
                    return e.shouldSendReplayFilterError && (o = function(e) {
                        t.onError(Object(b.a)().chatReplayFilterError), t.onCreate(e)
                    }), i.__assign({}, e, t, n, {
                        onDisableSync: r,
                        onCreate: o,
                        data: n.data
                    })
                })(y.a),
                _ = Object(o.a)(C, {
                    options: function(e) {
                        return {
                            variables: {
                                videoID: e.videoID,
                                hasVideoID: !!e.videoID
                            }
                        }
                    },
                    props: function(e) {
                        var t = e.ownProps,
                            n = e.data,
                            r = n && n.video && n.video.owner && n.video.owner.cheer && n.video.owner.cheer.emotes || [],
                            o = Object(c.a)(r),
                            a = {};
                        return n && !n.loading && !n.error && n.currentUser && n.currentUser.blockedUsers && (a = n.currentUser.blockedUsers.reduce(function(e, t) {
                            return t && (e[t.id] = !0), e
                        }, {})), i.__assign({}, t, {
                            data: n,
                            bitsConfig: o,
                            blockedUsers: a
                        })
                    }
                })(E)
        },
        zxEZ: function(e, t, n) {
            "use strict";
            var i = n("mSxK");
            n.d(t, "a", function() {
                return i.c
            }), n.d(t, "b", function() {
                return i.d
            })
        },
        zyUW: function(e, t, n) {}
    }
]);