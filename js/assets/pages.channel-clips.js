webpackJsonp([41], {
    1009: function(e, t, n) {
        "use strict";
        n.d(t, "b", function() {
            return i
        }), n.d(t, "a", function() {
            return p
        }), n.d(t, "c", function() {
            return g
        });
        var i, a = n(0),
            r = n(1),
            s = (n.n(r), n(2)),
            o = n(47),
            l = n(5),
            c = n(3);
        ! function(e) {
            e[e.All = 0] = "All", e[e.Month = 1] = "Month", e[e.Week = 2] = "Week", e[e.Day = 3] = "Day", e[e.Trending = 4] = "Trending"
        }(i || (i = {}));
        var u, d, p = (u = {}, u[i.All] = "ALL_TIME", u[i.Day] = "LAST_DAY", u[i.Week] = "LAST_WEEK", u[i.Month] = "LAST_MONTH", u[i.Trending] = "TRENDING", u),
            m = (d = {}, d[i.Trending] = "", d[i.Day] = Object(s.d)("24h", "TopClipsTimeFilter"), d[i.Week] = Object(s.d)("7d", "TopClipsTimeFilter"), d[i.Month] = Object(s.d)("30d", "TopClipsTimeFilter"), d[i.All] = Object(s.d)("all", "TopClipsTimeFilter"), d),
            h = [i.Trending, i.Day, i.Week, i.Month, i.All],
            f = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.renderFilterButton = function(e) {
                        return r.createElement(c.S, {
                            key: e,
                            onClick: n.updateFilterFuncs[e],
                            "data-a-target": "time-filter-option-" + m[e],
                            selected: e === n.props.timeFilterValue
                        }, r.createElement(c.U, {
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, n.renderFilterText(e)))
                    }, n.state = {
                        isShowingMenu: !1
                    }, n.updateFilterFuncs = h.reduce(function(e, t) {
                        return e[t] = function() {
                            n.props.updateTimeFilter(t), n.setState({
                                isShowingMenu: !1
                            })
                        }, e
                    }, {}), n
                }
                return a.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return r.createElement(c.U, {
                        className: "top-clips-time-filter"
                    }, r.createElement(o.a, null, r.createElement(c.u, {
                        dropdown: !0,
                        type: c.z.Hollow,
                        "data-a-target": "time-filter-selection"
                    }, this.renderFilterText(this.props.timeFilterValue)), r.createElement(c.p, {
                        direction: c.q.BottomLeft,
                        noTail: !0
                    }, r.createElement(c.U, {
                        padding: {
                            y: .5
                        }
                    }, h.map(this.renderFilterButton)))))
                }, t.prototype.renderFilterText = function(e) {
                    return e === i.Trending ? r.createElement("span", null, Object(s.d)("Trending", "TopClipsTimeFilter")) : r.createElement(c.U, {
                        display: c.H.Flex
                    }, Object(s.d)("Top", "TopClipsTimeFilter"), r.createElement(c.U, {
                        margin: {
                            left: .5
                        }
                    }, r.createElement(c.Z, {
                        type: c._0.Brand,
                        label: m[e]
                    })))
                }, t
            }(r.Component),
            g = Object(l.c)("TopClipsTimeFilter")(f)
    },
    1010: function(e, t) {},
    1050: function(e, t, n) {
        "use strict";

        function i(e) {
            return Object(b.a)(k, e)
        }
        var a = n(0),
            r = n(1),
            s = n(2),
            o = n(64),
            l = n(3),
            c = (n(1071), {
                TITLE: "clips-modal-title",
                MAIN_BODY: "clips-modal-main-body",
                SUCCESS_BODY: "clips-modal-success-body",
                ERROR_BODY: "clips-modal-error-body",
                SUBMIT_BUTTON: "clips-modal-submit-button",
                CANCEL_BUTTON: "clips-modal-cancel-button"
            }),
            u = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderSuccess = function() {
                        return t.props.successContent ? r.createElement(l._17, {
                            "data-test-selector": c.SUCCESS_BODY,
                            padding: {
                                x: 2,
                                y: 1
                            },
                            margin: {
                                bottom: 1
                            },
                            borderMarked: !0,
                            background: l.m.Alt,
                            fullWidth: !0
                        }, r.createElement(l._21, {
                            type: l._26.Strong
                        }, t.props.successContent)) : null
                    }, t.renderError = function() {
                        return t.props.errorContent ? r.createElement(l._17, {
                            "data-test-selector": c.ERROR_BODY,
                            padding: {
                                x: 1,
                                y: .5
                            },
                            margin: {
                                bottom: 1
                            },
                            borderMarked: !0,
                            background: l.m.Alt,
                            fullWidth: !0
                        }, r.createElement(l._21, {
                            type: l._26.Strong,
                            color: l.F.Error
                        }, t.props.errorContent)) : null
                    }, t.onSubmit = function() {
                        t.props.onSubmit()
                    }, t
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    return this.props.successContent ? r.createElement(o.a, {
                        onClickOut: this.props.onClose
                    }, r.createElement(l._17, {
                        padding: 2,
                        background: l.m.Base,
                        className: "clip-modal"
                    }, this.renderSuccess(), r.createElement(l.U, {
                        display: l.H.Flex,
                        justifyContent: l.T.Center
                    }, r.createElement(l.U, {
                        margin: {
                            x: 1
                        }
                    }, r.createElement(l.u, {
                        "data-test-selector": c.CANCEL_BUTTON,
                        onClick: this.props.onClose
                    }, Object(s.d)("Close", "ClipsModal")))))) : r.createElement(o.a, {
                        onClickOut: this.props.onClose
                    }, r.createElement(l._17, {
                        padding: 2,
                        background: l.m.Base,
                        className: "clip-modal"
                    }, r.createElement(l._17, {
                        "data-test-selector": c.TITLE,
                        borderBottom: !0,
                        margin: {
                            bottom: 2
                        },
                        padding: {
                            bottom: 1
                        }
                    }, this.props.title), r.createElement(l._17, {
                        "data-test-selector": c.MAIN_BODY,
                        borderBottom: !0,
                        margin: {
                            bottom: 2
                        },
                        padding: {
                            bottom: 2
                        }
                    }, this.renderError(), this.props.body), r.createElement(l.U, {
                        display: l.H.Flex,
                        justifyContent: l.T.Center
                    }, r.createElement(l.U, {
                        margin: {
                            x: 1
                        }
                    }, r.createElement(l.u, {
                        "data-test-selector": c.CANCEL_BUTTON,
                        type: l.z.Text,
                        onClick: this.props.onClose
                    }, Object(s.d)("Cancel", "ClipsModal"))), r.createElement(l.U, {
                        margin: {
                            x: 1
                        }
                    }, r.createElement(l.u, {
                        "data-test-selector": c.SUBMIT_BUTTON,
                        type: this.props.buttonType ? this.props.buttonType : l.z.Default,
                        onClick: this.onSubmit,
                        disabled: this.props.submitDisabled
                    }, this.props.buttonContent), this.props.isLoading && r.createElement(l.X, {
                        delay: 0
                    })))))
                }, t
            }(r.Component),
            d = n(879),
            p = n(5),
            m = 86400,
            h = {
                isLoading: !1,
                hasErrored: !1,
                hasSucceeded: !1
            },
            f = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.renderTitle = function() {
                        return t.props.isTemporary ? r.createElement(l._21, {
                            type: l._26.H5,
                            ellipsis: !0
                        }, Object(s.d)("Timeout this Clip Creator for 24 hours from Your Channel", "ClipsModalBanUser")) : r.createElement(l._21, {
                            type: l._26.H5,
                            ellipsis: !0
                        }, Object(s.d)("Ban this Clip Creator from Your Channel", "ClipsModalBanUser"))
                    }, t.renderBodyText = function() {
                        return t.props.isTemporary ? r.createElement(l._21, null, Object(s.d)("{clipCreator} will temporarily be timed out from creating clips and chatting in your channel for 24 hours.", {
                            clipCreator: t.props.clip.curator.displayName
                        }, "ClipsModalBanUser")) : r.createElement(l._21, null, Object(s.d)("{clipCreator} will be permanently banned from creating clips and chatting in your channel.", {
                            clipCreator: t.props.clip.curator.displayName
                        }, "ClipsModalBanUser"))
                    }, t.renderButtonText = function() {
                        return t.props.isTemporary ? Object(s.d)("Timeout User", "ClipsModalBanUser") : Object(s.d)("Ban User", "ClipsModalBanUser")
                    }, t.renderSuccess = function() {
                        return t.state.hasSucceeded ? Object(s.d)("Success!", "ClipsModalBanUser") : null
                    }, t.renderFailure = function() {
                        return t.state.hasErrored ? t.props.isTemporary ? Object(s.d)("There was a problem timing out this clip creator", "ClipsModalBanUser") : Object(s.d)("There was a problem banning this clip creator", "ClipsModalBanUser") : null
                    }, t.banUser = function() {
                        return a.__awaiter(t, void 0, void 0, function() {
                            var e, t, n;
                            return a.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        this.setState({
                                            isLoading: !0,
                                            hasSucceeded: !1,
                                            hasErrored: !1
                                        }), e = this.props.clip.curator.login, t = this.props.isTemporary ? this.props.onBanUser(e, m) : this.props.onBanUser(e), i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, , 4]), [4, t];
                                    case 2:
                                        return i.sent(), this.setState({
                                            hasSucceeded: !0,
                                            isLoading: !1
                                        }), [3, 4];
                                    case 3:
                                        return n = i.sent(), this.setState({
                                            hasErrored: !0,
                                            isLoading: !1
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.state = h, t
                }
                return a.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return r.createElement(u, {
                        onSubmit: this.banUser,
                        onClose: this.props.onClose,
                        title: this.renderTitle(),
                        body: this.renderBodyText(),
                        buttonContent: this.renderButtonText(),
                        buttonType: l.z.Alert,
                        submitDisabled: this.state.isLoading || this.state.hasSucceeded,
                        successContent: this.renderSuccess(),
                        errorContent: this.renderFailure(),
                        isLoading: this.state.isLoading
                    })
                }, t
            }(r.Component),
            g = function(e) {
                return {
                    channelID: e.clip.broadcaster.id
                }
            },
            v = Object(p.c)("ClipsModalBanUser")(Object(d.a)(g)(f)),
            b = n(7),
            k = n(1072),
            y = (n(1073), this),
            _ = {
                isLoading: !1,
                hasErrored: !1,
                hasSucceeded: !1
            },
            C = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.onDeleteClick = function() {
                        return a.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return a.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        this.setState({
                                            isLoading: !0,
                                            hasSucceeded: !1,
                                            hasErrored: !1
                                        }), t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, , 4]), [4, this.props.deleteClip(this.props.clip)];
                                    case 2:
                                        return t.sent(), this.setState({
                                            isLoading: !1,
                                            hasSucceeded: !0
                                        }), [3, 4];
                                    case 3:
                                        return e = t.sent(), this.setState({
                                            isLoading: !1,
                                            hasErrored: !0
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.state = _, t
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    var e = [r.createElement(l._21, {
                            key: "title",
                            type: l._26.H4
                        }, Object(s.d)("Delete This Clip", "ClipsModalDelete")), r.createElement(l.U, {
                            key: "message",
                            margin: {
                                top: 1
                            }
                        }, r.createElement(l._21, {
                            type: l._26.P,
                            color: l.F.Alt2
                        }, Object(s.d)("This clip will be permanently deleted.", "ClipsModalDelete")))],
                        t = r.createElement(l._17, {
                            display: l.H.Flex,
                            flexWrap: l.K.NoWrap
                        }, r.createElement(l.U, {
                            className: "clips-modal-delete__thumb",
                            margin: {
                                right: 1
                            }
                        }, r.createElement(l.j, {
                            ratio: l.k.Aspect16x9
                        }, r.createElement("img", {
                            src: this.props.clip.thumbnailURL
                        }))), r.createElement(l.U, null, r.createElement(l._21, {
                            type: l._26.H5
                        }, this.props.clip.title), r.createElement(l._21, {
                            color: l.F.Alt2
                        }, Object(s.d)("{created, date, medium}", {
                            created: new Date(this.props.clip.createdAt)
                        }, "ClipsModalDelete"), " • ", Object(s.d)("Clipped by {curator}", {
                            curator: this.props.clip.curator.login
                        }, "ClipsModalDelete")), r.createElement(l._21, {
                            color: l.F.Alt2
                        }, Object(s.d)("{viewCount, number} views", {
                            viewCount: this.props.clip.viewCount
                        }, "ClipsModalDelete"))));
                    return r.createElement(u, {
                        onSubmit: this.onDeleteClick,
                        onClose: this.props.onClose,
                        title: e,
                        body: t,
                        buttonContent: Object(s.d)("Delete", "ClipsModalDelete"),
                        buttonType: l.z.Alert,
                        submitDisabled: this.state.hasSucceeded || this.state.isLoading,
                        successContent: this.state.hasSucceeded ? Object(s.d)("Success!", "ClipsModalDelete") : null,
                        errorContent: this.state.hasErrored ? Object(s.d)("There was a problem deleting this clip.", "ClipsModalDelete") : null,
                        isLoading: this.state.isLoading
                    })
                }, t
            }(r.Component),
            S = function(e) {
                return {
                    deleteClip: function(t) {
                        return a.__awaiter(y, void 0, void 0, function() {
                            var n;
                            return a.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return i.trys.push([0, 2, , 3]), [4, e.mutate({
                                            variables: {
                                                input: {
                                                    slugs: [t.slug]
                                                }
                                            }
                                        })];
                                    case 1:
                                        return i.sent(), e.ownProps.onDelete && e.ownProps.onDelete(t), [3, 3];
                                    case 2:
                                        throw n = i.sent(), s.i.error(n, "Failed to delete clip"), n;
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }
                }
            },
            E = i({
                props: S
            })(C),
            w = n(32),
            N = n(1074),
            O = this,
            D = {
                isLoading: !1,
                hasErrored: !1,
                hasSucceeded: !1
            },
            U = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.deleteAll = function() {
                        return a.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return a.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        this.setState({
                                            isLoading: !0,
                                            hasSucceeded: !1,
                                            hasErrored: !1
                                        }), t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, , 4]), [4, this.props.deleteAllClips(this.props.broadcastID, this.props.videoID)];
                                    case 2:
                                        return t.sent(), this.setState({
                                            isLoading: !1,
                                            hasSucceeded: !0
                                        }), [3, 4];
                                    case 3:
                                        return e = t.sent(), this.setState({
                                            isLoading: !1,
                                            hasErrored: !0
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.renderSuccess = function() {
                        return t.state.hasSucceeded ? Object(s.d)("A request has been made to delete the clip. Please wait a few minutes for this to take effect.", "ClipsModalDeleteAll") : null
                    }, t.renderFailure = function() {
                        return t.state.hasErrored ? Object(s.d)("There was a problem deleting this clip.", "ClipsModalDeleteAll") : null
                    }, t.state = D, t
                }
                return a.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = r.createElement(l._21, {
                        type: l._26.P
                    }, Object(s.d)("This clip and all other clips created from the same video will be permanently deleted.", "ClipsModalDeleteAll"));
                    return r.createElement(u, {
                        onSubmit: this.deleteAll,
                        onClose: this.props.onClose,
                        title: r.createElement(l._21, {
                            type: l._26.H4
                        }, Object(s.d)("Delete All Clips from Related Video", "ClipsModalDeleteAll")),
                        body: e,
                        buttonContent: Object(s.d)("Delete", "ClipsModalDeleteAll"),
                        buttonType: l.z.Alert,
                        submitDisabled: this.state.isLoading || this.state.hasSucceeded || "" === this.props.broadcastID,
                        isLoading: this.state.isLoading,
                        successContent: this.renderSuccess(),
                        errorContent: this.renderFailure()
                    })
                }, t
            }(r.Component),
            I = function(e) {
                return {
                    deleteAllClips: function(t, n) {
                        return a.__awaiter(O, void 0, void 0, function() {
                            var i, r, r, o;
                            return a.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        return a.trys.push([0, 6, , 7]), i = void 0, n ? [4, e.mutate({
                                            variables: {
                                                input: {
                                                    videoID: n
                                                }
                                            }
                                        })] : [3, 2];
                                    case 1:
                                        return r = a.sent(), i = r.data, [3, 5];
                                    case 2:
                                        return t ? [4, e.mutate({
                                            variables: {
                                                input: {
                                                    broadcastID: t
                                                }
                                            }
                                        })] : [3, 4];
                                    case 3:
                                        return r = a.sent(), i = r.data, [3, 5];
                                    case 4:
                                        throw new Error("Invalid broadcastID specified for deleteAllClips");
                                    case 5:
                                        return e.ownProps.onDeleteAll && e.ownProps.onDeleteAll(i.deleteClips.clips), [3, 7];
                                    case 6:
                                        throw o = a.sent(), s.i.error(o, "Failed to delete clips from VOD"), o;
                                    case 7:
                                        return [2]
                                }
                            })
                        })
                    }
                }
            },
            x = function(e) {
                var t = e.data.clip;
                return t ? {
                    videoID: t.video ? t.video.id : null,
                    broadcastID: t.broadcast.id
                } : {
                    videoID: null,
                    broadcastID: ""
                }
            },
            T = function(e) {
                return {
                    variables: {
                        slug: e.clip.slug
                    }
                }
            },
            F = Object(w.compose)(Object(p.c)("ClipsModalDeleteAll"), i({
                props: I
            }), Object(b.a)(N, {
                props: x,
                options: T
            }))(U),
            j = this,
            L = {
                isLoading: !1,
                hasErrored: !1,
                hasSucceeded: !1
            },
            R = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.renderSuccess = function() {
                        return t.state.hasSucceeded ? Object(s.d)("Clips successfully deleted.", "ClipsModalBatchDelete") : null
                    }, t.renderError = function() {
                        return t.state.hasErrored ? Object(s.d)("There was a problem deleting this clip.", "ClipsModalBatchDelete") : null
                    }, t.onDeleteClick = function() {
                        return a.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return a.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        this.setState({
                                            isLoading: !0,
                                            hasSucceeded: !1,
                                            hasErrored: !1
                                        }), t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, , 4]), [4, this.props.deleteClips()];
                                    case 2:
                                        return t.sent(), this.setState({
                                            hasSucceeded: !0,
                                            isLoading: !1
                                        }), [3, 4];
                                    case 3:
                                        return e = t.sent(), this.setState({
                                            hasErrored: !0,
                                            isLoading: !1
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.state = L, t
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    var e = r.createElement(l._21, {
                            type: l._26.H4
                        }, Object(s.d)("Delete these clips?", "ClipsModalBatchDelete")),
                        t = r.createElement(l._21, {
                            type: l._26.P
                        }, Object(s.d)("These clips will be permanently deleted. Are you sure?", "ClipsModalBatchDelete"));
                    return r.createElement(u, {
                        onSubmit: this.onDeleteClick,
                        onClose: this.props.onClose,
                        title: e,
                        body: t,
                        buttonContent: Object(s.d)("Delete", "ClipsModalBatchDelete"),
                        buttonType: l.z.Alert,
                        submitDisabled: this.state.hasSucceeded || this.state.isLoading,
                        isLoading: this.state.isLoading,
                        successContent: this.renderSuccess(),
                        errorContent: this.renderError()
                    })
                }, t
            }(r.Component),
            A = function(e) {
                return {
                    deleteClips: function() {
                        return a.__awaiter(j, void 0, void 0, function() {
                            var t;
                            return a.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return n.trys.push([0, 2, , 3]), [4, e.mutate({
                                            variables: {
                                                input: {
                                                    slugs: e.ownProps.clips.map(function(e) {
                                                        return e.slug
                                                    })
                                                }
                                            }
                                        })];
                                    case 1:
                                        return n.sent(), e.ownProps.onBatchDelete && e.ownProps.onBatchDelete(), [3, 3];
                                    case 2:
                                        throw t = n.sent(), s.i.error(t, "Failed to delete clips"), t;
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }
                }
            },
            M = i({
                props: A
            })(R);
        n.d(t, "a", function() {
            return u
        }), n.d(t, "b", function() {
            return v
        }), n.d(t, "d", function() {
            return E
        }), n.d(t, "e", function() {
            return F
        }), n.d(t, "c", function() {
            return M
        })
    },
    1071: function(e, t) {},
    1072: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Clips_DeleteClips"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DeleteClipsInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "deleteClips"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "clips"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "slug"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 131
            }
        };
        n.loc.source = {
            body: "mutation Clips_DeleteClips($input: DeleteClipsInput!) {\n  deleteClips(input: $input) {\n    clips {\n      id\n      slug\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1073: function(e, t) {},
    1074: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ClipsModalDeleteAll_Clip"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "slug"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clip"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "slug"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "video"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "broadcast"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 138
            }
        };
        n.loc.source = {
            body: "query ClipsModalDeleteAll_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    video {\n      id\n    }\n    broadcast {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1299: function(e, t, n) {
        "use strict";

        function i(e) {
            return Object(m.bindActionCreators)({
                showModal: h.d,
                closeModal: h.c
            }, e)
        }

        function a(e) {
            return Object(m.bindActionCreators)({
                showModal: h.d
            }, e)
        }

        function r(e) {
            return Object(m.bindActionCreators)({
                showModal: h.d
            }, e)
        }

        function s(e) {
            return Object(m.bindActionCreators)({
                showModal: h.d
            }, e)
        }
        var o, l = n(1),
            c = n(2),
            u = n(992),
            d = n(5),
            p = n(6),
            m = n(9),
            h = n(37),
            f = n(0),
            g = n(69),
            v = n(10),
            b = n(377),
            k = n(4),
            y = n(105),
            _ = n(1050),
            C = n(379),
            S = n(262),
            E = n(40),
            w = n(64),
            N = n(3),
            O = (n(1300), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.selectOnFocus = function(e) {
                        e.currentTarget.select(), t.props.onSelection && t.props.onSelection()
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return l.createElement(N.U, f.__assign({
                        position: N._2.Relative,
                        className: "selectable-input-wrapper"
                    }, Object(N._39)(this.props)), l.createElement(N.Q, {
                        type: N.R.Text,
                        value: this.props.text,
                        readOnly: !0,
                        onFocus: this.selectOnFocus,
                        icon: this.props.iconAsset,
                        id: this.props.id
                    }), this.props.children)
                }, t = f.__decorate([Object(d.c)("SelectableInput")], t)
            }(l.Component)),
            D = O,
            U = n(848),
            I = n(856),
            x = n(68),
            T = n(908),
            F = [{
                type: U.b.Twitter,
                params: {
                    tt_medium: "twtr"
                }
            }, {
                type: U.b.Facebook,
                params: {
                    tt_medium: "fb"
                }
            }, {
                type: U.b.Reddit,
                params: {
                    tt_medium: "redt"
                }
            }, {
                type: U.b.Copy
            }],
            j = function(e) {
                return l.createElement(N.U, {
                    className: "clips-social-share",
                    display: N.H.Flex,
                    flexWrap: N.K.NoWrap
                }, F.map(function(t) {
                    return l.createElement(N.U, {
                        key: t.type,
                        margin: {
                            right: 1
                        }
                    }, l.createElement(U.a, {
                        key: t.type,
                        type: t.type,
                        text: e.clip.title,
                        url: Object(x.a)(e.clip.url, t.params),
                        onShareClick: Object(T.c)(e.clip, e.pageType)
                    }))
                }))
            },
            L = j,
            R = n(398),
            A = n(7);
        ! function(e) {
            e[e.View = 0] = "View", e[e.Report = 1] = "Report", e[e.Delete = 2] = "Delete", e[e.DeleteAll = 3] = "DeleteAll", e[e.Ban = 4] = "Ban", e[e.Timeout = 5] = "Timeout"
        }(o || (o = {}));
        var M = n(1301),
            B = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.renderMenuItem = function(e) {
                        var t = n.menuData.get(e);
                        return e && t ? l.createElement(N.S, {
                            key: t.display,
                            onClick: t.destinationHandler,
                            "data-a-target": "clip-moderation-button-" + t.display
                        }, l.createElement(N.U, {
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, t.display)) : null
                    }, n.menuData = new Map([
                        [o.Report, {
                            display: Object(g.d)("Report", "ModerationMenu"),
                            destinationHandler: function() {
                                return n.props.updateModalViewState(o.Report)
                            }
                        }],
                        [o.Delete, {
                            display: Object(g.d)("Delete", "ModerationMenu"),
                            destinationHandler: function() {
                                return n.props.updateModalViewState(o.Delete)
                            }
                        }],
                        [o.DeleteAll, {
                            display: Object(g.d)("Delete All Clips from Video", "ModerationMenu"),
                            destinationHandler: function() {
                                return n.props.updateModalViewState(o.DeleteAll)
                            }
                        }],
                        [o.Ban, {
                            display: Object(g.d)("Ban User", "ModerationMenu"),
                            destinationHandler: function() {
                                return n.props.updateModalViewState(o.Ban)
                            }
                        }],
                        [o.Timeout, {
                            display: Object(g.d)("Timeout User (24 hr)", "ModerationMenu"),
                            destinationHandler: function() {
                                return n.props.updateModalViewState(o.Timeout)
                            }
                        }]
                    ]), n
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.data,
                        t = this.props.clip;
                    if (!e || !e.currentUser) return null;
                    var n = e.currentUser.isStaff || e.currentUser.isSiteAdmin,
                        i = e.currentUser.id === t.curator.id,
                        a = e.currentUser.id === t.broadcaster.id,
                        r = i || a || n,
                        s = a || n,
                        c = [o.Report];
                    return r && c.push(o.Delete), s && (c.push(o.DeleteAll), c.push(o.Ban), c.push(o.Timeout)), l.createElement(N.U, {
                        className: "moderation-menu"
                    }, l.createElement(R.a, null, l.createElement(N.u, {
                        type: N.z.Hollow,
                        icon: N._9.More,
                        ariaLabel: Object(g.d)("More Options", "ModerationMenu"),
                        "data-a-target": "moderation-menu-button"
                    }), l.createElement(N.p, {
                        direction: N.q.TopRight
                    }, l.createElement(N.U, {
                        padding: {
                            y: .5
                        }
                    }, this.moderationMenuRender(c)))))
                }, t.prototype.moderationMenuRender = function(e) {
                    var t = this;
                    return e.map(function(e) {
                        return t.renderMenuItem(e)
                    })
                }, t = f.__decorate([Object(A.a)(M), Object(d.c)("ModerationMenu")], t)
            }(l.Component),
            P = B,
            H = (n(1302), 2e3),
            V = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isShowingBalloon: !1
                    }, t.timeoutID = null, t.copyClipURL = function() {
                        var e;
                        try {
                            e = Object(I.a)(t.props.clip.url)
                        } catch (e) {
                            return void c.i.warn("Failed to copy", e)
                        }
                        e && (t.setState({
                            isShowingBalloon: !0
                        }), t.timeoutID = setTimeout(function() {
                            t.setState({
                                isShowingBalloon: !1
                            })
                        }, H), Object(T.c)(t.props.clip, t.props.pageType)(U.b.CopyInput))
                    }, t.dismissBalloon = function() {
                        t.setState({
                            isShowingBalloon: !1
                        }), t.timeoutID && (clearTimeout(t.timeoutID), t.timeoutID = null)
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e, t = l.createElement(v.a, {
                        to: "/" + this.props.clip.broadcaster.login,
                        onClick: this.props.closeModal,
                        "data-a-target": "clip-modal-broadcaster-link"
                    }, this.props.clip.broadcaster.login);
                    return e = this.props.clip.game ? Object(c.d)("{broadcaster} playing {game}", {
                        broadcaster: t,
                        game: l.createElement(v.a, {
                            to: "" + Object(b.d)(this.props.clip.game.name),
                            onClick: this.props.closeModal,
                            "data-a-target": "clip-modal-game-link"
                        }, this.props.clip.game.name)
                    }, "ClipsViewModalContent") : Object(c.d)("{broadcaster}", {
                        broadcaster: t
                    }, "ClipsViewModalContent"), l.createElement(N.U, {
                        className: "clips-view-modal-content"
                    }, l.createElement(N.U, {
                        padding: {
                            bottom: 2
                        }
                    }, l.createElement(N.j, {
                        ratio: N.k.Aspect16x9
                    }, l.createElement("iframe", {
                        src: this.props.clip.embedURL,
                        width: "100%",
                        height: "100%",
                        className: "block aspect__fill",
                        allowFullScreen: !0
                    }))), l.createElement(N.U, {
                        padding: {
                            x: 2,
                            bottom: 2
                        }
                    }, l.createElement(N.U, {
                        display: N.H.Flex,
                        flexWrap: N.K.NoWrap
                    }, l.createElement(N.U, {
                        flexGrow: 1,
                        margin: {
                            right: 1
                        }
                    }, l.createElement(w.a, {
                        onClickOut: this.dismissBalloon
                    }, l.createElement(D, {
                        text: this.props.clip.url,
                        icon: !0,
                        iconAsset: N._9.Link,
                        onSelection: this.copyClipURL,
                        "data-a-target": "clip-share-input"
                    }, l.createElement(N.p, {
                        show: this.state.isShowingBalloon,
                        direction: N.q.TopRight
                    }, l.createElement(N.S, {
                        onClick: this.dismissBalloon
                    }, l.createElement(N.U, {
                        padding: 1
                    }, l.createElement(N._21, {
                        bold: !0
                    }, Object(c.d)("Link copied to clipboard", "ClipsViewModalContent")))))))), l.createElement(L, {
                        clip: this.props.clip,
                        pageType: this.props.pageType
                    }), l.createElement(P, {
                        clip: this.props.clip,
                        updateModalViewState: this.props.updateModalViewState
                    }))), l.createElement(N.U, {
                        padding: {
                            x: 2,
                            bottom: 2
                        },
                        display: N.H.Flex,
                        flexWrap: N.K.NoWrap,
                        justifyContent: N.T.Between,
                        fullWidth: !0
                    }, l.createElement(N.U, {
                        flexGrow: 1
                    }, l.createElement(N.P, {
                        ellipsis: !0
                    }, l.createElement(N._17, {
                        display: N.H.Flex,
                        flexWrap: N.K.NoWrap,
                        fontSize: N.L.Size5
                    }, l.createElement(N.U, {
                        ellipsis: !0
                    }, this.props.clip.title), l.createElement(N.U, {
                        flexShrink: 0
                    }, l.createElement(N._21, {
                        type: N._26.Span,
                        color: N.F.Alt2
                    }, " • ", Object(c.d)("{created, date, medium}", {
                        created: new Date(this.props.clip.createdAt)
                    }, "ClipsViewModalContent"))))), l.createElement(N.P, {
                        ellipsis: !0
                    }, l.createElement(N._17, {
                        color: N.F.Alt2
                    }, e, " • ", Object(c.d)("Clipped by {curator}", {
                        curator: l.createElement(v.a, {
                            to: "/" + this.props.clip.curator.login,
                            onClick: this.props.closeModal,
                            "data-a-target": "clip-modal-curator-link"
                        }, this.props.clip.curator.login)
                    }, "ClipsViewModalContent")))), l.createElement(N._17, {
                        display: N.H.Flex,
                        margin: {
                            bottom: 2,
                            left: 2
                        },
                        fontSize: N.L.Size5,
                        color: N.F.Alt2,
                        flexShrink: 0
                    }, l.createElement(N.U, {
                        margin: {
                            right: .5
                        },
                        alignItems: N.c.Center,
                        display: N.H.Flex
                    }, l.createElement(N._8, {
                        asset: N._9.GlyphViews
                    })), Object(c.d)("{viewCount, number} views", {
                        viewCount: this.props.clip.viewCount
                    }, "ClipsViewModalContent"))))
                }, t = f.__decorate([Object(d.c)("ClipsViewModalContent")], t)
            }(l.Component),
            W = V,
            q = (n(1303), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onKeyDown = function(e) {
                        var n = e.charCode || e.keyCode;
                        n === E.a.Left ? t.updateClipBackward() : n === E.a.Right && t.updateClipForward()
                    }, t.updateClipForward = function() {
                        t.updateClipIndex(t.props.clipIndex + 1)
                    }, t.updateClipBackward = function() {
                        t.updateClipIndex(t.props.clipIndex - 1)
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive(), this.setUpArrowListeners()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.clipIndex && this.props.clipIndex > 0 && (e = l.createElement(N.U, {
                        position: N._2.Absolute,
                        display: N.H.Flex,
                        alignItems: N.c.Stretch,
                        className: "clip-carousel-button clip-carousel-button--left"
                    }, l.createElement(N.v, {
                        ariaLabel: Object(c.d)("Previous clip", "ClipsViewModalNavigation"),
                        type: N.w.Primary,
                        icon: N._9.AngleLeft,
                        onClick: this.updateClipBackward,
                        "data-test-selector": "clips-view-modal-content-back"
                    }))), l.createElement(N.U, {
                        className: "clips-view-modal-content"
                    }, e, l.createElement(W, {
                        clip: this.props.clip,
                        updateModalViewState: this.props.updateModalViewState,
                        pageType: this.props.pageType,
                        closeModal: this.props.closeModal
                    }), l.createElement(N.U, {
                        position: N._2.Absolute,
                        display: N.H.Flex,
                        alignItems: N.c.Stretch,
                        className: "clip-carousel-button clip-carousel-button--right"
                    }, l.createElement(N.v, {
                        ariaLabel: Object(c.d)("Next clip", "ClipsViewModalNavigation"),
                        type: N.w.Primary,
                        icon: N._9.AngleRight,
                        onClick: this.updateClipForward,
                        "data-test-selector": "clips-view-modal-content-forward"
                    })))
                }, t.prototype.componentWillUnmount = function() {
                    document.removeEventListener("keydown", this.onKeyDown)
                }, t.prototype.setUpArrowListeners = function() {
                    document.addEventListener("keydown", this.onKeyDown)
                }, t.prototype.updateClipIndex = function(e) {
                    var t = Math.max(0, e),
                        n = this.props.getClips();
                    n.length - t < 4 && this.props.loadMoreClips(), t < n.length && this.props.showModal(K, {
                        getClips: this.props.getClips,
                        clip: n[t],
                        clipIndex: t,
                        loadMoreClips: this.props.loadMoreClips,
                        pageType: this.props.pageType
                    })
                }, t
            }(l.Component)),
            z = Object(d.c)("ClipsViewModalNavigation")(q),
            G = Object(p.a)(null, i)(z),
            $ = (n(1304), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        modalView: o.View
                    }, t.setToViewState = function() {
                        t.updateClipsModalViewState(o.View)
                    }, t.updateClipsModalViewState = function(e) {
                        t.setState({
                            modalView: e
                        })
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e, t = (n = {}, n["clips-modal-view"] = !0, n["clips-modal-view--wide"] = !1, n);
                    return this.state.modalView === o.Report ? e = l.createElement(C.a, {
                        title: Object(c.d)("Report this Clip", "ClipsViewModal"),
                        reportContext: {
                            contentType: S.a.Clip,
                            contentID: this.props.clip.slug,
                            targetUserID: this.props.clip.broadcaster.id
                        },
                        onClose: this.setToViewState
                    }) : this.state.modalView === o.Delete ? e = l.createElement(_.d, {
                        clip: this.props.clip,
                        onClose: this.setToViewState
                    }) : this.state.modalView === o.DeleteAll ? e = l.createElement(_.e, {
                        clip: this.props.clip,
                        onClose: this.setToViewState
                    }) : this.state.modalView === o.Ban ? e = l.createElement(_.b, {
                        clip: this.props.clip,
                        isTemporary: !1,
                        onClose: this.setToViewState
                    }) : this.state.modalView === o.Timeout ? e = l.createElement(_.b, {
                        clip: this.props.clip,
                        isTemporary: !0,
                        onClose: this.setToViewState
                    }) : (e = l.createElement(G, {
                        getClips: this.props.getClips,
                        clip: this.props.clip,
                        clipIndex: this.props.clipIndex,
                        updateModalViewState: this.updateClipsModalViewState,
                        loadMoreClips: this.props.loadMoreClips,
                        pageType: this.props.pageType
                    }), t["clips-modal-view--wide"] = !0), l.createElement(N.U, {
                        className: k(t)
                    }, e, l.createElement(y.a, {
                        closeOnBackdropClick: !0,
                        closeOnPageNavigation: !0
                    }));
                    var n
                }, t = f.__decorate([Object(d.c)("ClipsViewModal")], t)
            }(l.Component)),
            J = $,
            K = Object(p.a)(null, a)(J),
            Q = (n(1305), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getClips = function() {
                        return t.props.clips
                    }, t.openModal = function(e) {
                        e.preventDefault(), t.props.showModal(K, {
                            getClips: t.getClips,
                            clip: t.props.clip,
                            clipIndex: t.props.clipIndex,
                            loadMoreClips: t.props.loadMoreClips,
                            pageType: t.props.pageType
                        })
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = null,
                        t = null;
                    return this.props.pageType === T.b.Channel && this.props.clip.game && (e = l.createElement(N._17, {
                        position: N._2.Absolute,
                        attachBottom: !0,
                        attachRight: !0,
                        borderRight: !1,
                        borderBottom: !1,
                        className: "clips-preview-card__boxart"
                    }, l.createElement(v.a, {
                        to: Object(b.d)(this.props.clip.game.name) + "/clips",
                        "data-test-selector": "card-view-game-link",
                        "data-a-target": "clip-game-link"
                    }, l.createElement(N._30, {
                        display: N.H.Block,
                        direction: N._32.Bottom,
                        label: this.props.clip.game.name
                    }, l.createElement(N.C, {
                        imageAlt: this.props.clip.game.name,
                        imageSrc: this.props.clip.game.boxArtURL,
                        aspect: N.k.BoxArt,
                        size: N.D.Size4
                    }))))), this.props.pageType === T.b.Game && (t = l.createElement(N.U, null, l.createElement(v.a, {
                        className: "clips-preview-card__display-name",
                        to: "/" + this.props.clip.broadcaster.login + "/clips"
                    }, this.props.clip.broadcaster.login))), l.createElement(N.U, {
                        margin: {
                            bottom: 2
                        }
                    }, l.createElement(N.A, f.__assign({
                        row: !0
                    }, Object(N._39)(this.props)), l.createElement(N.U, {
                        position: N._2.Relative,
                        margin: {
                            right: 1
                        },
                        flexShrink: 0
                    }, l.createElement(v.a, {
                        to: this.props.clip.url,
                        onClick: this.openModal,
                        "data-a-target": "clip-thumbnail-link"
                    }, l.createElement(N.C, {
                        imageSrc: this.props.clip.thumbnailURL || c.n.config.defaultStreamPreviewURL,
                        imageAlt: this.props.clip.title,
                        aspect: N.k.Aspect16x9,
                        size: N.D.Size24
                    })), e), l.createElement(N.B, null, l.createElement(N._21, {
                        type: N._26.H3,
                        fontSize: N.L.Size5
                    }, l.createElement(v.a, {
                        className: "clips-preview-card__title",
                        to: this.props.clip.url,
                        onClick: this.openModal,
                        "data-a-target": "clip-title-link"
                    }, this.props.clip.title)), l.createElement(N._21, {
                        ellipsis: !0
                    }, t), l.createElement(N._21, {
                        color: N.F.Alt2,
                        ellipsis: !0
                    }, Object(c.d)("{created, date, medium}", {
                        created: new Date(this.props.clip.createdAt)
                    }, "ClipsCardView"), l.createElement(N.P, {
                        padding: {
                            x: .5
                        }
                    }, l.createElement("span", null, "·")), l.createElement(N.P, {
                        padding: {
                            right: .5
                        }
                    }, l.createElement("span", null, Object(c.d)("Clipped by", "ClipsCardView"))), l.createElement(v.a, {
                        className: "clips-preview-card__display-name",
                        to: "/" + this.props.clip.curator.login,
                        "data-a-target": "clip-curator-link"
                    }, this.props.clip.curator.login)), l.createElement(N._21, {
                        color: N.F.Alt2
                    }, Object(c.d)("{viewCount, number} views", {
                        viewCount: this.props.clip.viewCount
                    }, "ClipsCardView")))))
                }, t = f.__decorate([Object(d.c)("ClipsCardView")], t)
            }(l.Component)),
            Y = Q,
            X = Object(p.a)(null, r)(Y),
            Z = n(1009),
            ee = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.updateToAllTime = function() {
                        t.props.updateTimeFilter(Z.b.All)
                    }, t
                }
                return f.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return l.createElement(N.U, {
                        className: "clips-cards"
                    }, l.createElement(N.N, {
                        gutterSize: N.O.None
                    }, 0 === this.props.clips.length ? this.renderEmpty() : this.renderClips()))
                }, t.prototype.renderEmpty = function() {
                    var e = l.createElement(N.U, null, l.createElement(N._21, {
                        fontSize: N.L.Size4
                    }, Object(g.d)("No clips were created in this time period.", "ClipsCards"), l.createElement("br", null), Object(g.d)("Check out all popular clips from this channel instead.", "ClipsCards")), l.createElement(N.U, {
                        margin: 3
                    }, l.createElement(N.u, {
                        type: N.z.Hollow,
                        onClick: this.updateToAllTime
                    }, Object(g.d)("See all popular clips", "ClipCards"))));
                    return this.props.timeFilterValue === Z.b.All && (e = l.createElement(N.U, null, l.createElement(N._21, {
                        fontSize: N.L.Size4
                    }, Object(g.d)("No Clips Found", "ClipsCards")), l.createElement(N.U, {
                        margin: 3
                    }, Object(g.d)("{learnClipsLink} to make and share clips of this channel", {
                        learnClipsLink: l.createElement("a", {
                            href: "https://help.twitch.tv/customer/portal/articles/2442508-how-to-use-clips",
                            target: "_blank"
                        }, Object(g.d)("Learn how", "ClipsCards"))
                    }, "ClipsCards")))), l.createElement(N.U, {
                        fullWidth: !0
                    }, l.createElement(N.N, null, l.createElement(N.G, {
                        cols: 3
                    }), l.createElement(N.G, {
                        cols: 6
                    }, l.createElement(N.U, {
                        textAlign: N._22.Center
                    }, e)), l.createElement(N.G, {
                        cols: 3
                    })))
                }, t.prototype.renderClips = function() {
                    var e = this;
                    return this.props.clips.map(function(t, n) {
                        return l.createElement(N.G, {
                            cols: {
                                default: 12,
                                xl: 6
                            },
                            key: t.slug
                        }, l.createElement(X, {
                            clip: t,
                            clips: e.props.clips,
                            clipIndex: n,
                            pageType: e.props.pageType,
                            loadMoreClips: e.props.loadMoreClips,
                            "data-target": "clips-card-view",
                            "data-a-target": "clips-card-" + n
                        }))
                    })
                }, t = f.__decorate([Object(d.c)("ClipCards")], t)
            }(l.Component),
            te = ee,
            ne = Object(p.a)(null, s)(te),
            ie = function(e) {
                return l.createElement(N.U, null, l.createElement(N.U, {
                    display: N.H.Flex,
                    flexWrap: N.K.NoWrap,
                    justifyContent: N.T.Between,
                    margin: {
                        bottom: 2
                    },
                    fullWidth: !0
                }, l.createElement(N.U, {
                    display: N.H.Flex,
                    flexWrap: N.K.NoWrap
                }, e.pageType === T.b.Game && l.createElement(N.U, {
                    margin: {
                        right: 1
                    }
                }, l.createElement(u.a, null)), l.createElement(N.U, null, l.createElement(Z.c, {
                    updateTimeFilter: e.updateTimeFilter,
                    timeFilterValue: e.timeFilterValue
                }))), l.createElement(N.u, {
                    linkTo: "https://twitch.tv/manager/clips",
                    targetBlank: !0,
                    type: N.z.Hollow,
                    "data-a-target": "manage-clips-button"
                }, Object(c.d)("Manage my clips", "TopClips"))), l.createElement(N.U, null, e.isLoading ? l.createElement(N.X, {
                    fillContent: !0
                }) : l.createElement(ne, {
                    clips: e.clips,
                    pageType: e.pageType,
                    loadMoreClips: e.loadMoreClips,
                    updateTimeFilter: e.updateTimeFilter,
                    timeFilterValue: e.timeFilterValue
                })))
            },
            ae = Object(d.c)("TopClips", {
                autoReportInteractive: !0
            })(ie);
        n.d(t, !1, function() {
            return ie
        }), n.d(t, "a", function() {
            return ae
        })
    },
    130: function(e, t, n) {
        "use strict";

        function i(e) {
            return r.b.get(o.a, !1) || r.a.buildType !== s.a.Production ? "string" == typeof e ? e : e.pathname || "" : "string" == typeof e ? l + e : l + e.pathname
        }

        function a() {
            return !r.b.get(o.a, !1) && r.a.buildType === s.a.Production
        }
        var r = n(2),
            s = n(15),
            o = n(264);
        t.a = i, t.b = a;
        var l = "https://www.twitch.tv"
    },
    1300: function(e, t) {},
    1301: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ModerationMenu_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isSiteAdmin"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isStaff"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 85
            }
        };
        n.loc.source = {
            body: "query ModerationMenu_User {\n  currentUser {\n    id\n    isSiteAdmin\n    isStaff\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1302: function(e, t) {},
    1303: function(e, t) {},
    1304: function(e, t) {},
    1305: function(e, t) {},
    133: function(e, t, n) {
        "use strict";

        function i(e, t) {
            var n = a.b.get(l, "https://twitch.amazon.com/prime"),
                i = "";
            try {
                i = btoa(t)
            } catch (e) {
                c.error(e, "Could not decode location pathname substring for redirect")
            }
            return i ? n + "?ref_=" + e + "&redirectRoute=" + i : n + "?ref_=" + e
        }
        n.d(t, "b", function() {
            return r
        }), n.d(t, "a", function() {
            return s
        }), n.d(t, "c", function() {
            return o
        }), t.d = i;
        var a = n(2),
            r = "sm_tw_tup_ntp_t_all",
            s = "sm_tw_thp_blue_t_all",
            o = "sm_w_tup_ntp_t_c",
            l = "prime_landing_page_base_url",
            c = a.i.withCategory("PrimeUtilsLogger")
    },
    136: function(e, t, n) {
        "use strict";

        function i(e) {
            return C.debug("Updating activity", e), E = h.__assign({}, E, {
                activity: e
            }), p()
        }

        function a(e) {
            C.debug("Updating visibility", e), m(e)
        }

        function r(e) {
            C.debug("Saving current availability", e), E = h.__assign({}, E, {
                availability: e
            })
        }

        function s() {
            r(g.a.Online)
        }

        function o() {
            r(g.a.Idle)
        }

        function l() {
            C.debug("Clearing activity"), E = h.__assign({}, E, {
                activity: null
            }), p()
        }

        function c() {
            return h.__awaiter(this, void 0, void 0, function() {
                var e;
                return h.__generator(this, function(t) {
                    switch (t.label) {
                        case 0:
                            C.debug("Clearing previous session"), E = {
                                sessionID: u(),
                                availability: g.a.Online,
                                activity: null
                            }, t.label = 1;
                        case 1:
                            return t.trys.push([1, 4, , 5]), [4, p()];
                        case 2:
                            return t.sent(), C.debug("Setting new session"), E = h.__assign({}, E, {
                                sessionID: f.n.session.tabID
                            }), d(f.n.session.tabID), [4, p()];
                        case 3:
                            return [2, t.sent()];
                        case 4:
                            return e = t.sent(), [2, e];
                        case 5:
                            return [2]
                    }
                })
            })
        }

        function u() {
            return f.k.get(y, "")
        }

        function d(e) {
            f.k.set(y, e)
        }

        function p() {
            return h.__awaiter(this, void 0, void 0, function() {
                return h.__generator(this, function(e) {
                    return Object(v.d)(f.n.store.getState()) ? (C.debug("Setting status on server", {
                        state: E
                    }), _ && clearTimeout(_), [2, f.n.apollo.client.mutate({
                        mutation: b,
                        variables: {
                            input: E
                        }
                    }).then(function(e) {
                        C.debug("Status scheduled to be set again", {
                            seconds: e.data.setSessionStatus.setAgainInSeconds
                        }), _ = setTimeout(p, 1e3 * e.data.setSessionStatus.setAgainInSeconds)
                    }, function(e) {
                        C.warn("Failed to update status. Trying again in 60 seconds.", e), _ = setTimeout(p, 6e4)
                    })]) : [2]
                })
            })
        }

        function m(e) {
            Object(v.d)(f.n.store.getState()) && (C.debug("Setting visibility on server", {
                visibility: e
            }), f.n.apollo.client.mutate({
                mutation: k,
                variables: {
                    input: {
                        visibility: e
                    }
                }
            }).then(function(e) {
                C.debug("Visibility set", {
                    visibility: e.data.updateVisibility.user.availability
                })
            }, function(e) {
                C.warn("Failed to update visibility.", e)
            }))
        }
        t.f = i, t.e = a, t.c = r, t.b = s, t.d = o, t.a = l, t.g = c;
        var h = n(0),
            f = n(2),
            g = n(50),
            v = n(17),
            b = n(417),
            k = (n.n(b), n(418)),
            y = (n.n(k), "twilight.sessionID"),
            _ = 0,
            C = f.i.withCategory("Session Status"),
            S = {
                sessionID: f.n.session.tabID,
                availability: "",
                activity: null
            },
            E = S
    },
    1697: function(e, t) {},
    1698: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ClipsCards__User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "limit"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Int"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "cursor"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Cursor"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "criteria"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "UserClipsInput"
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hosting"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "login"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "profileImageURL"
                                        },
                                        arguments: [{
                                            kind: "Argument",
                                            name: {
                                                kind: "Name",
                                                value: "width"
                                            },
                                            value: {
                                                kind: "IntValue",
                                                value: "70"
                                            }
                                        }],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "clips"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "first"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "limit"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "after"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "cursor"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "criteria"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "criteria"
                                        }
                                    }
                                }],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "pageInfo"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "hasNextPage"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "edges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cursor"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "node"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "slug"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "url"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "embedURL"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "title"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "viewCount"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "language"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "curator"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "login"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "displayName"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "game"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "name"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "boxArtURL"
                                                                },
                                                                arguments: [{
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "width"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "52"
                                                                    }
                                                                }, {
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "height"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "72"
                                                                    }
                                                                }],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "broadcaster"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "login"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "displayName"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "thumbnailURL"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "createdAt"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "durationSeconds"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 929
            }
        };
        n.loc.source = {
            body: "query ClipsCards__User($login: String!, $limit: Int, $cursor: Cursor, $criteria: UserClipsInput) {\n  user(login: $login) {\n    id,\n    displayName,\n    login,\n    hosting {\n      id\n      login\n      displayName\n      profileImageURL(width: 70)\n    },\n    clips(first: $limit, after: $cursor, criteria: $criteria) {\n      pageInfo {\n        hasNextPage\n      },\n      edges {\n        cursor\n        node {\n          id,\n          slug,\n          url,\n          embedURL,\n          title,\n          viewCount,\n          language,\n          curator {\n            id,\n            login,\n            displayName,\n          },\n          game {\n            id,\n            name,\n            boxArtURL(width: 52 height: 72),\n          },\n          broadcaster {\n            id,\n            login,\n            displayName,\n          },\n          thumbnailURL,\n          createdAt,\n          durationSeconds\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    2057: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = n(0),
            a = n(1),
            r = n(2),
            s = n(819),
            o = n(817),
            l = n(13),
            c = n(5),
            u = n(1009),
            d = n(67),
            p = n(28),
            m = n(910),
            h = n(7),
            f = n(20),
            g = n(69),
            v = n(878),
            b = n(928),
            k = n(451),
            y = n(1299),
            _ = n(908),
            C = n(3),
            S = (n(1697), n(1698)),
            E = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        leftEdge: 0,
                        containerWidth: 0,
                        hostedChannelDisplayName: null
                    }, t.loadMoreTopClips = function() {
                        return i.__awaiter(t, void 0, void 0, function() {
                            return i.__generator(this, function(e) {
                                return this.canLoadMore() ? [2, this.props.loadMore()] : [2]
                            })
                        })
                    }, t.canLoadMore = function() {
                        var e = t.props.data;
                        return !e.loading && !e.error && e.user && e.user.clips.pageInfo.hasNextPage
                    }, t.handleHostingChange = function(e) {
                        null === e ? t.setState({
                            hostedChannelDisplayName: null
                        }) : t.props.data.user && e !== t.props.data.user.hosting.login ? t.refetchTimer = setTimeout(function() {
                            return t.props.data.refetch({
                                currentChannelLogin: t.props.channelName
                            })
                        }, g.o.config.hostingCacheDelay) : t.props.data.user && t.props.data.user.hosting.login && t.setState({
                            hostedChannelDisplayName: t.props.data.user.hosting.displayName
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    clearTimeout(this.refetchTimer)
                }, t.prototype.render = function() {
                    var e = a.createElement(C.X, {
                            fillContent: !0
                        }),
                        t = [];
                    return this.props.data.loading || this.props.data.error || !this.props.data.user || (t = this.props.data.user.clips.edges.map(function(e) {
                        return e.node
                    })), e = this.props.data.error ? a.createElement(d.a, {
                        message: Object(r.d)("Error loading data.", "ChannelClipsContent")
                    }) : this.props.data.user || this.props.data.loading ? a.createElement(y.a, {
                        clips: t,
                        isLoading: this.props.data.loading,
                        pageType: _.b.Channel,
                        updateTimeFilter: this.props.updateTimeFilter,
                        timeFilterValue: this.props.timeFilterValue,
                        loadMoreClips: this.loadMoreTopClips
                    }) : a.createElement(d.a, {
                        message: Object(r.d)("User does not exist", "ChannelClipsContent")
                    }), a.createElement(C.U, {
                        className: "channel-clips-content",
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        flexWrap: C.K.NoWrap,
                        fullHeight: !0,
                        fullWidth: !0
                    }, a.createElement(m.a, null, a.createElement(v.a, {
                        currentPage: v.b.Clips,
                        channelLogin: this.props.channelName
                    })), a.createElement(C.U, {
                        display: C.H.Flex,
                        flexGrow: 1,
                        fullHeight: !0
                    }, a.createElement(C.U, {
                        fullWidth: !0,
                        padding: {
                            y: 2,
                            x: 3
                        }
                    }, e, a.createElement(p.a, {
                        loadMore: this.props.loadMore,
                        enabled: this.canLoadMore()
                    })), a.createElement(k.b, null, a.createElement(C._17, {
                        className: "channel-clips__sidebar",
                        background: C.m.Alt2,
                        display: C.H.Flex,
                        flexGrow: 0,
                        flexShrink: 0,
                        overflow: C.Y.Hidden,
                        flexDirection: C.J.Column,
                        flexWrap: C.K.NoWrap,
                        fullHeight: !0
                    }, a.createElement(b.a, {
                        channelLogin: this.props.channelName,
                        clientID: g.o.config.legacyClientID,
                        onHostingChange: this.handleHostingChange
                    })))))
                }, t = i.__decorate([Object(c.c)("ChannelClipsContent"), Object(h.a)(S, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelName,
                                limit: 20,
                                criteria: {
                                    filter: u.a[e.timeFilterValue]
                                }
                            }
                        }
                    },
                    props: function(e) {
                        return i.__assign({}, e, {
                            loadMore: function() {
                                return e.data.fetchMore({
                                    query: S,
                                    variables: i.__assign({}, e.data.variables, {
                                        cursor: e.data.user.clips.edges.length ? e.data.user.clips.edges[e.data.user.clips.edges.length - 1].cursor : null
                                    }),
                                    updateQuery: function(e, t) {
                                        var n = t.fetchMoreResult,
                                            a = n;
                                        return {
                                            user: i.__assign({}, a.user, {
                                                clips: i.__assign({}, a.user.clips, {
                                                    edges: Object(f.b)(e.user.clips.edges, a.user.clips.edges)
                                                })
                                            })
                                        }
                                    }
                                })
                            }
                        })
                    }
                })], t)
            }(a.Component),
            w = E,
            N = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        timeFilterValue: u.b.Week
                    }, t.updateTimeFilter = function(e) {
                        t.setState({
                            timeFilterValue: e
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive(), r.n.setPageTitle(this.props.match.params.channelName)
                }, t.prototype.render = function() {
                    return a.createElement(w, {
                        channelName: this.props.match.params.channelName,
                        updateTimeFilter: this.updateTimeFilter,
                        timeFilterValue: this.state.timeFilterValue
                    })
                }, t = i.__decorate([Object(c.c)("ClipsChannelPage", {
                    destination: o.a.ChannelClips
                }), Object(s.a)({
                    location: l.PageviewLocation.ChannelClips
                })], t)
            }(a.Component),
            O = N;
        n.d(t, "ChannelClipsPage", function() {
            return O
        })
    },
    264: function(e, t, n) {
        "use strict";
        var i = n(0),
            a = n(21),
            r = n(1),
            s = n(2),
            o = n(15),
            l = "legacy_routes_enabled",
            c = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.isEnabled = !1, n.onHistoryChange = function(e, t) {
                        return n.isEnabled ? "REPLACE" === t ? void n.logger.debug("Skipping legacy route processing, due to history replace.") : e && e.pathname ? (n.logger.debug("Location changed", {
                            path: e.pathname
                        }), void n.legacyRoutes.forEach(function(t) {
                            try {
                                if (e.pathname.match(t)) {
                                    n.logger.debug("Found legacy route. Reloading...");
                                    var i = "" !== e.search ? a.parse(e.search) : {};
                                    i["from-redirect"] = "true";
                                    var r = a.stringify(i),
                                        l = s.a.buildType === o.a.Dev ? window.location.host : window.location.hostname,
                                        c = window.location.protocol + "//" + l + e.pathname + "?" + r;
                                    return n.logger.debug("Redirecting to legacy route", {
                                        newUrl: c
                                    }), void window.location.replace(c)
                                }
                            } catch (e) {
                                s.i.withCategory("legacy").error(e, "Unable to determine legacy reload match", {
                                    regex: t
                                })
                            }
                        })) : void n.logger.debug("Unable to process history change. Path is null or empty.") : void n.logger.debug("Legacy routing not enabled.")
                    }, n.processRedirectParam = function(e) {
                        if (e && e.pathname && e.search) {
                            var t = "" !== e.search ? a.parse(e.search) : {};
                            if (t["from-redirect"]) {
                                delete t["from-redirect"];
                                var i = a.stringify(t),
                                    r = "";
                                i.length > 0 && (r = "?" + i), n.props.history.replace({
                                    pathname: e.pathname,
                                    hash: e.hash,
                                    search: r
                                })
                            }
                        }
                    }, n.isEnabled = s.b.get(l, !1), n.logger = s.i.withCategory("legacy-routes"), n.legacyRoutes = n.buildRoutes(), n.props.history.listen(n.onHistoryChange), n
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    return null
                }, t.prototype.componentDidMount = function() {
                    this.processRedirectParam(this.props.history.location)
                }, t.prototype.buildRoutes = function() {
                    if (!this.isEnabled) return [];
                    this.logger.debug("Building legacy routes...");
                    var e = s.b.get("legacy_routes", []),
                        t = [];
                    if (!e || 0 === e.length) return this.logger.debug("No legacy routes found in settings."), t;
                    for (var n = 0, i = e; n < i.length; n++) {
                        var a = i[n];
                        try {
                            var r = new RegExp(a, "i");
                            t.push(r)
                        } catch (e) {
                            this.logger.debug("Failed to parse route!", {
                                val: a,
                                err: e
                            })
                        }
                    }
                    return this.logger.debug("Done building legacy routes!", {
                        count: t.length
                    }), t
                }, t
            }(r.Component),
            u = c;
        n.d(t, "a", function() {
            return l
        }), n.d(t, !1, function() {
            return "legacy_routes"
        }), n.d(t, "b", function() {
            return u
        })
    },
    380: function(e, t, n) {
        "use strict";

        function i(e, t) {
            var n = Math.floor(e % 60),
                i = Math.floor(e % 3600 / 60),
                r = Math.floor(e / 3600);
            return t && t.zeroPadAll ? a(r, 2) + ":" + a(i, 2) + ":" + a(n, 2) : r ? r + ":" + a(i, 2) + ":" + a(n, 2) : i + ":" + a(n, 2)
        }

        function a(e, t) {
            return t -= e.toString().length, t > 0 ? new Array(t + (/\./.test(e.toString()) ? 2 : 1)).join("0") + e : e.toString()
        }
        t.a = i
    },
    385: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i;
        ! function(e) {
            e[e.Ready = 0] = "Ready", e[e.Dimensions = 1] = "Dimensions", e[e.RequestAd = 2] = "RequestAd", e[e.OnStart = 3] = "OnStart", e[e.OnCredit = 4] = "OnCredit", e[e.OnFinish = 5] = "OnFinish", e[e.OnClose = 6] = "OnClose", e[e.OnError = 7] = "OnError", e[e.Adblock = 8] = "Adblock", e[e.LimitReached = 9] = "LimitReached"
        }(i || (i = {}))
    },
    386: function(e, t, n) {
        "use strict";
        var i = n(0),
            a = n(1),
            r = n(2),
            s = n(7),
            o = n(56),
            l = n(3),
            c = n(407),
            u = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    return a.createElement(l.S, i.__assign({
                        onClick: this.props.onClick,
                        linkTo: this.props.linkTo,
                        hover: this.props.hover,
                        tabIndex: -1,
                        key: this.props.id
                    }, Object(o.a)(this.props)), a.createElement(l.U, {
                        className: "search-game-result-card",
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, a.createElement(l.A, {
                        row: !0
                    }, a.createElement(l.C, {
                        imageAlt: this.props.imageAlt,
                        imageSrc: this.props.data && !this.props.data.loading && this.props.data.game ? this.props.data.game.boxArtURL : r.a.defaultBoxArtURL,
                        size: l.D.Size4,
                        aspect: l.k.BoxArt
                    }), a.createElement(l.B, null, a.createElement(l.P, {
                        padding: {
                            x: 1
                        }
                    }, a.createElement(l._21, {
                        type: l._26.H5,
                        ellipsis: !0
                    }, this.props.title))))))
                }, t = i.__decorate([Object(s.a)(c, {
                    options: function(e) {
                        return {
                            variables: {
                                name: e.title
                            }
                        }
                    }
                })], t)
            }(a.Component);
        n.d(t, "a", function() {
            return u
        })
    },
    387: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                firstPageLoaded: !!e.session.firstPageLoaded
            }
        }
        var a = n(6),
            r = n(0),
            s = n(21),
            o = n(1),
            l = n(2),
            c = n(47),
            u = n(7),
            d = n(106),
            p = n(5),
            m = n(3),
            h = (n(422), function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m.U, null, o.createElement(m._17, {
                        className: "prime-offer-header",
                        borderBottom: !0,
                        background: m.m.Alt2,
                        padding: {
                            x: 1,
                            y: .5
                        }
                    }, o.createElement(m.U, {
                        flexGrow: 1
                    }, o.createElement(m._21, {
                        bold: !0,
                        type: m._26.H6
                    }, Object(l.d)("Free with Prime", "PrimeOfferHeader")))), this.getNumOfUnseenOffersDisplay())
                }, t.prototype.getNumOfUnseenOffersDisplay = function() {
                    var e = this.props.numOfUnseenOffers;
                    if (e) return o.createElement(m._17, {
                        className: "prime-offer__new-offer-header",
                        borderBottom: !0,
                        background: m.m.Alt2,
                        padding: {
                            x: 1,
                            y: .5
                        }
                    }, o.createElement(m.U, {
                        fullWidth: !0,
                        display: m.H.Flex
                    }, o.createElement(m.U, {
                        flexGrow: 1
                    }, o.createElement(m._21, {
                        bold: !0,
                        type: m._26.H6
                    }, Object(l.d)("New Prime Loot", "PrimeOfferHeader"))), o.createElement(m.U, {
                        className: "prime-offer__new-offer-header-count",
                        display: m.H.Flex,
                        alignItems: m.c.Center,
                        textAlign: m._22.Center
                    }, o.createElement(m._17, {
                        className: "prime-offer__new-offer-header-count__text",
                        background: m.m.Base,
                        color: m.F.Base
                    }, o.createElement(m._21, null, e.toString())))))
                }, t = r.__decorate([Object(p.c)("PrimeOfferHeader")], t)
            }(o.Component)),
            f = h,
            g = n(28),
            v = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = Object(l.d)("You'll get characters, vehicles, skins, and boosts for games like {hearthstone} and {smite}, plus surprises like a rotating selection of indie games.", {
                        hearthstone: o.createElement(m._21, {
                            italic: !0,
                            type: m._26.Span
                        }, Object(l.d)("Hearthstone", "PrimeEmpty")),
                        smite: o.createElement(m._21, {
                            italic: !0,
                            type: m._26.Span
                        }, Object(l.d)("Smite", "PrimeEmpty"))
                    }, "PrimeEmpty");
                    return o.createElement(m.U, {
                        className: "prime-empty",
                        margin: 2
                    }, o.createElement(m.U, {
                        textAlign: m._22.Center,
                        margin: 2
                    }, o.createElement("img", {
                        className: "prime-empty__image",
                        src: "https://m.media-amazon.com/images/G/01/sm/landing/Trunk_w_Star_transparent._V530838660_.png",
                        alt: Object(l.d)("Prime Treasure Chest", "PrimeEmpty")
                    })), o.createElement(m._21, {
                        type: m._26.P,
                        bold: !0
                    }, Object(l.d)("Free in-game loot every month, plus surprises", "PrimeEmpty")), o.createElement("div", null, e))
                }, t = r.__decorate([Object(p.c)("PrimeEmpty")], t)
            }(o.Component),
            b = v,
            k = n(65),
            y = n(20),
            _ = {
                DIRECT_ENTITLEMENT: "DIRECT_ENTITLEMENT",
                CLAIM_CODE: "CLAIM_CODE",
                EXTERNAL_OFFER: "EXTERNAL_OFFER"
            },
            C = function(e, t) {
                return e + "-" + t
            },
            S = function() {
                return D("claimedOffers")
            },
            E = function(e) {
                l.k.set("claimedOffers", e)
            },
            w = function() {
                return D("seenOffers")
            },
            N = function(e) {
                l.k.set("seenOffers", e)
            },
            O = function(e, t) {
                return (e && (e.priority || 0 === e.priority) ? e.priority : 99999) - (t && (t.priority || 0 === t.priority) ? t.priority : 99999)
            },
            D = function(e) {
                return l.k.get(e, [])
            },
            U = function() {
                var e = location.search,
                    t = s.parse(e);
                return t && t.dateOverride || void 0
            },
            I = (n(423), n(424)),
            x = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m.U, {
                        className: "prime-claim-button"
                    }, this.getClaimButton())
                }, t.prototype.getClaimButton = function() {
                    var e = this.props,
                        t = this.getButtonText(),
                        n = o.createElement(m.u, {
                            fullWidth: !0,
                            state: this.props.claiming ? m.y.Loading : m.y.Default,
                            disabled: this.props.claiming,
                            onClick: this.props.claimCallback,
                            "data-a-target": "prime-claim-button"
                        }, t);
                    return e.offerType === _.EXTERNAL_OFFER ? o.createElement(m.u, {
                        fullWidth: !0,
                        linkTo: e.offerLinkUri,
                        targetBlank: !0
                    }, t) : o.createElement(m.U, {
                        position: m._2.Relative
                    }, n)
                }, t.prototype.getButtonText = function() {
                    return this.props.offerType === _.CLAIM_CODE ? Object(l.d)("Get Code", "PrimeClaimButton") : this.props.offerType === _.EXTERNAL_OFFER ? Object(l.d)("Learn More", "PrimeClaimButton") : Object(l.d)("Claim Offer", "PrimeClaimButton")
                }, t = r.__decorate([Object(u.a)(I), Object(p.c)("PrimeClaimButton")], t)
            }(o.Component),
            T = x,
            F = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.toggleShowDescription = function() {
                        t.setState({
                            showDescription: !t.state.showDescription
                        })
                    }, t.state = {
                        showDescription: !1
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m.U, {
                        className: "prime-claim-description",
                        margin: {
                            top: 1
                        }
                    }, o.createElement(m.u, {
                        fullWidth: !0,
                        type: m.z.Hollow,
                        onClick: this.toggleShowDescription
                    }, this.getDescriptionButtonText()), this.getDescriptionBlock())
                }, t.prototype.getDescriptionButtonText = function() {
                    return this.state.showDescription ? Object(l.d)("Close Info", "PrimeClaimDescription") : Object(l.d)("More Info", "PrimeClaimDescription")
                }, t.prototype.getDescriptionBlock = function() {
                    var e = null;
                    return this.state.showDescription && (e = o.createElement(m._17, {
                        className: "prime-claim-description__body",
                        background: m.m.Alt2,
                        border: !0
                    }, o.createElement(m.U, {
                        margin: {
                            bottom: 2
                        },
                        padding: 1
                    }, o.createElement(k, {
                        source: this.props.description || ""
                    })))), e
                }, t = r.__decorate([Object(p.c)("PrimeClaimDescription")], t)
            }(o.Component),
            j = F,
            L = n(133),
            R = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.getLink = function() {
                    return this.props.externalUri ? this.props.externalUri : Object(L.d)(L.c, window.location.pathname.substring(1))
                }, t.prototype.render = function() {
                    return o.createElement(m.U, {
                        className: "prime-upsell-button",
                        margin: {
                            top: 2,
                            bottom: 1
                        }
                    }, o.createElement(m.u, {
                        fullWidth: !0,
                        linkTo: this.getLink(),
                        targetBlank: !0
                    }, Object(l.d)("Start Your Free Trial", "PrimeUpsellButton")))
                }, t = r.__decorate([Object(p.c)("PrimeUpsellButton")], t)
            }(o.Component),
            A = R,
            M = n(425),
            B = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m.U, {
                        className: "prime-claim",
                        margin: {
                            top: 2,
                            bottom: 1
                        }
                    }, this.getCallToAction(), this.getClaimDescriptionSection())
                }, t.prototype.getCallToAction = function() {
                    var e = this.props.data;
                    return !e.loading && !e.error && e.currentUser && e.currentUser.hasPrime ? o.createElement(T, {
                        offerType: this.props.offerType,
                        offerId: this.props.offerId,
                        claimCallback: this.props.claimCallback,
                        claiming: this.props.claiming,
                        offerLinkUri: this.props.externalUri
                    }) : o.createElement(A, {
                        externalUri: this.props.externalUri
                    })
                }, t.prototype.getClaimDescriptionSection = function() {
                    return this.props.offerType === _.EXTERNAL_OFFER ? null : o.createElement(j, {
                        description: this.props.offerDescription
                    })
                }, t = r.__decorate([Object(u.a)(M), Object(p.c)("PrimeInstructions")], t)
            }(o.Component),
            P = B,
            H = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m._17, {
                        background: m.m.Alt2,
                        display: m.H.Flex,
                        justifyContent: m.T.Center,
                        padding: {
                            y: 1
                        },
                        margin: {
                            bottom: 1
                        },
                        textAlign: m._22.Center
                    }, o.createElement(m._21, {
                        type: m._26.H4,
                        align: m._37.Middle
                    }, o.createElement(m._17, {
                        padding: 1,
                        display: m.H.InlineFlex,
                        flexGrow: 1,
                        flexWrap: m.K.NoWrap,
                        alignItems: m.c.Center,
                        fontSize: this.props.fontSize ? this.props.fontSize : m.L.Size5,
                        "data-a-target": "prime-error-glitch"
                    }, o.createElement(m.U, {
                        margin: {
                            right: 1
                        },
                        display: m.H.InlineFlex,
                        flexGrow: 1,
                        flexWrap: m.K.NoWrap,
                        alignItems: m.c.Center
                    }, o.createElement(m._8, {
                        asset: m._9.DeadGlitch,
                        type: m._10.Alert,
                        width: 20,
                        height: 20
                    })), Object(l.d)("Something has gone wrong. Please try again later.", "PrimeError"))))
                }, t = r.__decorate([Object(p.c)("PrimeError")], t)
            }(o.Component),
            V = H,
            W = (n(426), function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.setRef = function(e) {
                        t.setState({
                            clipboardInput: e
                        })
                    }, t.copy = function() {
                        var e;
                        try {
                            t.state.clipboardInput && t.state.clipboardInput.select(), e = document.execCommand("copy")
                        } catch (t) {
                            e = !1
                        }
                        return t.setState({
                            copied: e
                        }), e
                    }, t.state = {
                        copied: !1,
                        clipboardInput: void 0
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.state.copied ? Object(l.d)("copied", "CopyButton") : Object(l.d)("copy", "CopyButton");
                    return o.createElement(m.U, {
                        className: "copy-button copy-btn",
                        display: m.H.Flex
                    }, o.createElement(m.P, {
                        className: "copy-button__btn"
                    }, o.createElement(m.u, {
                        onClick: this.copy,
                        type: this.state.copied ? m.z.Success : m.z.Default
                    }, e)), o.createElement("input", {
                        className: "copy-button__copy-input",
                        ref: this.setRef,
                        value: this.props.clipboardText,
                        readOnly: !0
                    }))
                }, t = r.__decorate([Object(p.c)("CopyButton")], t)
            }(o.Component)),
            q = W,
            z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onChange = function(e) {
                        t.setState({
                            value: e.currentTarget.value,
                            copied: !1
                        })
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillMount = function() {
                    this.props.initialText && this.setState({
                        value: this.props.initialText,
                        copied: !1
                    })
                }, t.prototype.render = function() {
                    return this.state && this.state.value ? o.createElement(m.U, {
                        className: "copyable-item",
                        display: m.H.Flex,
                        flexGrow: 1
                    }, o.createElement(m.U, {
                        flexGrow: 1
                    }, o.createElement(m.Q, {
                        type: m.R.Text,
                        onChange: this.onChange,
                        value: this.state.value,
                        disabled: this.props.disabled,
                        readOnly: this.props.readOnly
                    })), o.createElement(m.U, null, o.createElement(q, {
                        clipboardText: this.state.value
                    }))) : null
                }, t = r.__decorate([Object(p.c)("CopyableItem")], t)
            }(o.Component),
            G = z,
            $ = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m._17, {
                        className: "prime-claim-instructions",
                        background: m.m.Alt2,
                        border: !0,
                        padding: 1,
                        fontSize: m.L.Size6
                    }, o.createElement(m._36, null, o.createElement(k, {
                        source: this.props.claimInstructions || "",
                        escapeHtml: !0
                    })))
                }, t = r.__decorate([Object(p.c)("PrimeClaimInstructions")], t)
            }(o.Component),
            J = $,
            K = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m.U, {
                        className: "prime-redeem",
                        margin: {
                            top: 1
                        }
                    }, this.getCodeOrConfirmation(), this.getPrimeClaimInstructions())
                }, t.prototype.getCodeOrConfirmation = function() {
                    return this.props.code && this.props.deliveryMethod === _.CLAIM_CODE ? o.createElement(m.U, null, o.createElement(G, {
                        initialText: this.props.code,
                        readOnly: !0,
                        textCenter: !0
                    })) : o.createElement(m._17, {
                        background: m.m.Alt2,
                        display: m.H.Flex,
                        justifyContent: m.T.Center,
                        padding: {
                            y: 1
                        },
                        margin: {
                            bottom: 1
                        }
                    }, o.createElement(m._21, {
                        type: m._26.H4,
                        align: m._37.Middle
                    }, o.createElement(m.U, {
                        padding: 1,
                        display: m.H.InlineFlex,
                        flexGrow: 1,
                        flexWrap: m.K.NoWrap,
                        alignItems: m.c.Center,
                        "data-a-target": "prime-redeem-check"
                    }, o.createElement(m.U, {
                        margin: {
                            right: 1
                        },
                        display: m.H.InlineFlex,
                        flexGrow: 1,
                        flexWrap: m.K.NoWrap,
                        alignItems: m.c.Center
                    }, o.createElement(m._8, {
                        asset: m._9.Check,
                        type: m._10.Success,
                        width: 20,
                        height: 20
                    })), Object(l.d)("Added To Your Twitch Account", "PrimeRedeem"))))
                }, t.prototype.getPrimeClaimInstructions = function() {
                    if (this.props.claimInstructions) return o.createElement(J, {
                        claimInstructions: this.props.claimInstructions || ""
                    })
                }, t = r.__decorate([Object(p.c)("PrimeRedeem")], t)
            }(o.Component),
            Q = K,
            Y = n(427),
            X = (n(428), n(429)),
            Z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        claimed: !1,
                        claiming: !1,
                        error: !1,
                        claimData: ""
                    }, t.renderRedeemUpsellOrClaimSection = function(e) {
                        var n = e.content || {},
                            i = e.self || {
                                claimData: ""
                            },
                            a = t.props.data || {},
                            r = a.currentUser || {};
                        if (t.state.error) return o.createElement(V, {
                            fontSize: m.L.Size6
                        });
                        if ((t.isCurrentOfferClaimed(e) || t.state.claimed) && r && r.hasPrime) {
                            var s = t.state.claimData || i.claimData;
                            return o.createElement(Q, {
                                claimInstructions: e.claimInstructions,
                                code: s,
                                deliveryMethod: e.deliveryMethod
                            })
                        }
                        return o.createElement(P, {
                            offerId: e.id,
                            offerDescription: e.description || "",
                            offerType: e.deliveryMethod || "",
                            externalUri: n.externalURL || "",
                            claimCallback: t.claimOffer,
                            claiming: t.state.claiming
                        })
                    }, t.claimOffer = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.setState({
                            claiming: !0
                        });
                        var n = t.props.data;
                        if (!n.loading && !n.error && n.currentUser.id) {
                            var i = n.currentUser.id,
                                a = t.props.offer,
                                r = Object(y.a)({
                                    offerID: a.id
                                });
                            t.props.claimPrimeOffer(r).then(function(e) {
                                var n = e.data || {},
                                    r = n.claimPrimeOffer || {},
                                    s = r.self || {};
                                s && a && t.setState({
                                    claimData: s.claimData
                                }), t.markAsClaimedInLocalStorage(i)
                            }).catch(function() {
                                t.setState({
                                    claiming: !1,
                                    claimed: !1,
                                    error: !0
                                })
                            })
                        }
                    }, t.markAsClaimedInLocalStorage = function(e) {
                        var n = t.props.offer,
                            i = C(n.id, e),
                            a = S();
                        a.push(i), E(a), t.setState({
                            claiming: !1,
                            claimed: !0,
                            error: !1
                        })
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.offer,
                        t = this.props.isLast || !1;
                    if (e) {
                        var n = e.content || {},
                            i = n.game || {},
                            a = n.categories || [];
                        return o.createElement(m._17, {
                            className: "prime-offer",
                            alignItems: m.c.Center,
                            borderBottom: !t,
                            padding: {
                                x: 2,
                                y: 1
                            }
                        }, o.createElement(m.U, {
                            className: "prime-offer__title",
                            padding: {
                                y: .5
                            }
                        }, o.createElement(k, {
                            className: "prime-offer__title__markdown",
                            containerTagName: "h4",
                            source: e.title || ""
                        })), o.createElement("img", {
                            src: e.imageURL
                        }), o.createElement(m.U, {
                            className: "prime-offer__description",
                            padding: {
                                top: .5
                            }
                        }, o.createElement(m._21, {
                            type: m._26.P
                        }, i.name, " ", a[0])), o.createElement(m.U, {
                            className: "prime-offer__publisher"
                        }, o.createElement(m._21, {
                            type: m._26.P,
                            color: m.F.Alt2,
                            fontSize: m.L.Size7
                        }, n.publisher)), this.renderRedeemUpsellOrClaimSection(e))
                    }
                    return null
                }, t.prototype.isCurrentOfferClaimed = function(e) {
                    return (e.self || {
                        hasEntitlement: !1
                    }).hasEntitlement || this.isCurrentOfferClaimedInLocalStorage()
                }, t.prototype.isCurrentOfferClaimedInLocalStorage = function() {
                    var e = this.props.data,
                        t = this.props.offer;
                    if (!e.loading && !e.error && e.currentUser) {
                        var n = e.currentUser.id,
                            i = C(t.id, n);
                        return S().includes(i)
                    }
                }, t = r.__decorate([Object(u.a)(X, {
                    name: "data"
                }), Object(u.a)(Y, {
                    name: "claimPrimeOffer"
                }), Object(p.c)("PrimeOffer")], t)
            }(o.Component),
            ee = Z,
            te = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m._17, {
                        className: "prime-offer-placeholder",
                        alignItems: m.c.Center,
                        borderBottom: !0,
                        padding: {
                            x: 2,
                            y: 1
                        }
                    }, o.createElement(m.U, {
                        className: "prime-offer-placeholder__title",
                        padding: {
                            y: .5
                        }
                    }, o.createElement(m._1, {
                        height: 20
                    })), o.createElement(m._1, {
                        height: 160
                    }), o.createElement(m.U, {
                        className: "prime-offer-placeholder__description",
                        padding: {
                            y: .5
                        }
                    }, o.createElement(m._1, {
                        height: 20,
                        width: 160
                    })), o.createElement(m.U, {
                        className: "prime-offer-placeholder__publisher"
                    }, o.createElement(m._1, {
                        height: 20,
                        width: 80
                    })), o.createElement(m.U, {
                        className: "prime-offer-placeholder__claim",
                        margin: {
                            top: 2,
                            bottom: 1
                        }
                    }, o.createElement(m._1, {
                        height: 40
                    })))
                }, t = r.__decorate([Object(p.c)("PrimeOfferPlaceholder")], t)
            }(o.Component),
            ne = te,
            ie = (n(430), function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return o.createElement(m._17, {
                        "data-a-target": "prime-offers-upsell",
                        className: "prime-offers-upsell",
                        alignItems: m.c.Center,
                        padding: {
                            x: 2,
                            y: 1
                        },
                        borderBottom: !0
                    }, o.createElement(m._21, {
                        type: m._26.H4
                    }, Object(l.d)("Claim With Twitch Prime", "PrimeUpsell")), o.createElement(m.U, {
                        className: "prime-upsell__logo-container",
                        fullWidth: !0,
                        margin: {
                            y: 2
                        },
                        textAlign: m._22.Center
                    }, o.createElement(m._8, {
                        asset: m._9.LogoTwitchPrime,
                        width: 330,
                        height: 150,
                        type: m._10.Brand
                    })), o.createElement(m._21, {
                        type: m._26.P
                    }, Object(l.d)("Get free game loot like this every month plus surprises, ad-free viewing, and loads more with Twitch Prime.", "PrimeUpsell")), o.createElement(A, null))
                }, t = r.__decorate([Object(p.c)("PrimeUpsell")], t)
            }(o.Component)),
            ae = ie,
            re = n(431),
            se = (n(432), n(433)),
            oe = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.shouldShowPlaceholders = function() {
                        var e = t.props.offersData,
                            n = e.primeOffers,
                            i = void 0 === n || null === n;
                        return e.loading || !e.error && i && t.props.showByDefault
                    }, t.renderOfferPlaceholders = function() {
                        for (var e = [], t = 0; t < 3; ++t) e.push(o.createElement(ne, {
                            key: t
                        }));
                        return e
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidUpdate = function() {
                    var e = this.props.offersData;
                    e && e.primeOffers && this.props.latencyTracking.reportInteractive(e.primeOffers.length)
                }, t.prototype.render = function() {
                    return o.createElement(g.b, {
                        className: "prime-offer-listing"
                    }, o.createElement(m.U, {
                        className: "prime-offer-listing__content",
                        alignItems: m.c.Center,
                        padding: {
                            top: 1,
                            bottom: 2,
                            left: 1,
                            right: 1
                        }
                    }, this.renderUpsell(), this.renderOfferExperience()))
                }, t.prototype.renderUpsell = function() {
                    var e = this.props.userData;
                    if (!e.loading && !e.error && !this.currentUserHasPrime(e)) return o.createElement(ae, null)
                }, t.prototype.renderOfferExperience = function() {
                    var e = this.props.offersData;
                    if (this.shouldShowPlaceholders()) return this.renderOfferPlaceholders();
                    if (!e.error && e.primeOffers && e.primeOffers.length) {
                        var t = this.getSortedOffers(),
                            n = t[t.length - 1];
                        return t.map(function(e) {
                            return o.createElement(ee, {
                                key: e.id,
                                offer: e,
                                isLast: n.id === e.id
                            })
                        })
                    }
                    return o.createElement(b, null)
                }, t.prototype.getSortedOffers = function() {
                    var e = this.props.offersData.primeOffers,
                        t = this.getUserId();
                    if (t) {
                        var n = S(),
                            i = e.filter(function(e) {
                                return !n.includes(C(e.id, t))
                            }).sort(O),
                            a = e.filter(function(e) {
                                return !i.includes(e)
                            }).sort(O);
                        return i.concat(a)
                    }
                    return e.slice().sort(O)
                }, t.prototype.getUserId = function() {
                    var e = this.props.userData;
                    return !e.loading && !e.error && e.currentUser && e.currentUser.id ? e.currentUser.id : ""
                }, t.prototype.currentUserHasPrime = function(e) {
                    var t = e.currentUser;
                    return t && t.hasPrime
                }, t = r.__decorate([Object(u.a)(re, {
                    name: "offersData"
                }), Object(u.a)(se, {
                    name: "userData"
                }), Object(p.c)("PrimeOfferList")], t)
            }(o.Component),
            le = oe,
            ce = n(434),
            ue = (n(435), n(436)),
            de = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        numOfUnseenOffers: 0
                    }, t.showOffersByDefault = function() {
                        var e = location.search,
                            n = s.parse(e);
                        return n && !!n.expandoffers || t.props.openByDefault
                    }, t.onToggleMenu = function(e) {
                        t.seeOffers(), e && t.setState({
                            numOfUnseenOffers: 0
                        })
                    }, t.getUnseenOffers = function(e) {
                        var n = e.offersData;
                        if (n && !n.loading && !n.error) {
                            var i = n.primeOffers || [],
                                a = w();
                            t.setState({
                                numOfUnseenOffers: i.filter(function(e) {
                                    return !(a.includes(e.id) || t.offerIsClaimed(e))
                                }).length
                            })
                        }
                    }, t.offerIsClaimed = function(e) {
                        return e.self && e.self.hasEntitlement
                    }, t.seeOffers = function() {
                        var e = t.props.offersData;
                        if (e && !e.loading && !e.error) {
                            var n = e.primeOffers || [],
                                i = n.map(function(e) {
                                    return "" + e.id
                                });
                            N(i)
                        }
                    }, t.renderOfferList = function() {
                        var e = t.props.offersData,
                            n = t.showOffersByDefault() || !1;
                        return e && !e.loading && !e.error || n ? o.createElement(m.U, {
                            "data-a-target": "offers-list",
                            className: "prime-offers__list"
                        }, o.createElement(f, {
                            numOfUnseenOffers: t.state.numOfUnseenOffers
                        }), o.createElement(le, {
                            showByDefault: n
                        })) : null
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.getUnseenOffers(this.props)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.getUnseenOffers(e)
                }, t.prototype.render = function() {
                    var e = this.props.userData && this.props.userData.requestInfo && Object(d.b)(this.props.userData.requestInfo.countryCode),
                        t = this.props.userData && this.props.userData.currentUser && this.props.userData.currentUser.hasPrime;
                    if (!e && !t) return null;
                    var n = {
                        align: m._31.Center,
                        direction: m._32.Bottom,
                        label: ""
                    };
                    return this.state.numOfUnseenOffers > 0 ? n.label = Object(l.d)("New Prime Loot", "PrimeOffers") : n.label = Object(l.d)("Prime Loot", "PrimeOffers"), o.createElement(m.U, {
                        className: "prime-offers",
                        position: m._2.Relative
                    }, o.createElement(c.a, {
                        onToggle: this.onToggleMenu,
                        openByDefault: this.showOffersByDefault(),
                        tooltipProps: n
                    }, o.createElement(m.v, {
                        ariaLabel: Object(l.d)("Prime offers", "PrimeOffers"),
                        overlay: !0,
                        size: m.x.Large,
                        icon: m._9.Crown,
                        "data-a-target": "prime-offers-icon",
                        "data-target": "prime-offers-icon"
                    }), o.createElement(m.p, {
                        direction: m.q.BottomRight,
                        size: m.r.Large,
                        offsetX: "9px"
                    }, this.renderOfferList())), this.renderUnseenOffersDisplay())
                }, t.prototype.renderUnseenOffersDisplay = function() {
                    var e = this.state.numOfUnseenOffers;
                    if (e) return o.createElement(m.U, {
                        className: "prime-offers__pill",
                        position: m._2.Absolute
                    }, o.createElement(m.e, {
                        type: m.i.BounceIn,
                        duration: m.g.Medium,
                        timing: m.h.EaseIn,
                        enabled: e > 0
                    }, o.createElement(m.Z, {
                        label: e.toString(),
                        type: m._0.Notification
                    })))
                }, t = r.__decorate([Object(u.a)(ce, {
                    name: "offersData",
                    skip: function(e) {
                        return !e.firstPageLoaded
                    }
                }), Object(u.a)(ue, {
                    name: "userData"
                }), Object(p.c)("PrimeOffers", {
                    autoReportInteractive: !0
                })], t)
            }(o.Component),
            pe = de,
            me = Object(a.a)(i)(pe),
            he = (n(437), n(438)),
            fe = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.data.requestInfo && Object(d.b)(this.props.data.requestInfo.countryCode);
                    if (this.props.data.currentUser && this.props.data.currentUser.hasPrime || !e) return null;
                    if (this.props.data.loading) return null;
                    var t = Object(L.d)(L.a, ""),
                        n = Object(l.d)("Twitch Prime", "BlueBar"),
                        i = o.createElement("span", null, Object(l.d)("Free loot every month, plus exclusives and surprises, ad-free viewing, and loads more.", "BlueBar")),
                        a = Object(L.d)(L.a, ""),
                        r = Object(l.d)("Start Your Free Trial", "BlueBar");
                    if (!this.props.data.loading && !this.props.data.error) {
                        var s = this.props.data;
                        s && s.primePromotions && s.primePromotions.forEach(function(e) {
                            switch (e.id) {
                                case "twitch.prime.bluebar.left1":
                                    t = e.externalURL, n = e.text;
                                    break;
                                case "twitch.prime.bluebar.center1":
                                    i = o.createElement(k, {
                                        source: e.text,
                                        renderers: {
                                            Link: function(e) {
                                                return o.createElement("a", {
                                                    href: e.href,
                                                    target: "_blank",
                                                    rel: "noopener noreferrer"
                                                }, e.children)
                                            }
                                        }
                                    });
                                    break;
                                case "twitch.prime.bluebar.right1":
                                    a = e.externalURL, r = e.text
                            }
                        })
                    }
                    return o.createElement(m._17, {
                        color: m.F.Base,
                        className: "blue-bar",
                        position: m._2.Relative,
                        fullWidth: !0
                    }, o.createElement(m.U, {
                        className: "blue-bar__bar",
                        display: m.H.Flex,
                        alignItems: m.c.Center,
                        justifyContent: m.T.Between,
                        flexWrap: m.K.NoWrap,
                        margin: "auto",
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, o.createElement(m.U, {
                        display: m.H.InlineFlex,
                        alignItems: m.c.Center,
                        padding: {
                            right: .5
                        }
                    }, o.createElement(m.U, {
                        className: "blue-bar__logo",
                        display: m.H.InlineFlex,
                        margin: {
                            right: .5
                        },
                        flexShrink: 0
                    }, o.createElement(m._8, {
                        asset: m._9.Crown,
                        width: 20,
                        height: 13
                    })), o.createElement(m._21, {
                        bold: !0,
                        type: m._26.Span,
                        noWrap: !0,
                        fontSize: m.L.Size6
                    }, o.createElement(m.P, {
                        padding: {
                            x: 1
                        }
                    }, o.createElement("a", {
                        className: "blue-bar__link",
                        href: t,
                        target: "_blank",
                        rel: "noopener noreferrer"
                    }, n))), o.createElement(m._21, {
                        className: "blue-bar__headline",
                        type: m._26.Span,
                        fontSize: m.L.Size6
                    }, i)), o.createElement(m.U, {
                        display: m.H.InlineFlex,
                        flexShrink: 0
                    }, o.createElement(m._21, {
                        bold: !0,
                        type: m._26.Span,
                        noWrap: !0,
                        fontSize: m.L.Size6,
                        color: m.F.Base
                    }, o.createElement("a", {
                        className: "blue-bar__link",
                        href: a,
                        target: "_blank",
                        rel: "noopener noreferrer"
                    }, r)))))
                }, t = r.__decorate([Object(u.a)(he, {
                    options: function() {
                        return {
                            variables: {
                                stringIds: ["twitch.prime.bluebar.left1", "twitch.prime.bluebar.center1", "twitch.prime.bluebar.right1"],
                                dateOverride: U()
                            }
                        }
                    }
                }), Object(p.c)("BlueBarComponent")], t)
            }(o.Component),
            ge = fe;
        n.d(t, "b", function() {
            return me
        }), n.d(t, "a", function() {
            return ge
        }), n.d(t, "c", function() {
            return U
        })
    },
    389: function(e, t, n) {
        "use strict";

        function i(e) {
            return function() {
                Object(l.c)(e), window.location.reload(!0)
            }
        }

        function a() {
            return {}
        }

        function r(e) {
            return Object(o.bindActionCreators)({
                changeLanguage: i
            }, e)
        }
        var s = n(6),
            o = n(9),
            l = n(73),
            c = n(0),
            u = n(1),
            d = n(2),
            p = n(3),
            m = (n(397), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderLink = function(e) {
                        var n = function() {
                            return t.props.changeLanguage(e.languageCode)
                        };
                        return u.createElement(p.S, {
                            key: e.languageCode,
                            onClick: n,
                            "data-target": "language-selector-link"
                        }, u.createElement(p.U, {
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, e.name))
                    }, t
                }
                return c.__extends(t, e), t.prototype.render = function() {
                    var e = Math.floor(d.a.locales.length / 2);
                    return u.createElement(p.U, {
                        className: "language-selector",
                        display: p.H.Flex,
                        padding: {
                            y: 1
                        }
                    }, u.createElement("div", {
                        className: "language-selector__list language-selector__list--border-right"
                    }, d.a.locales.slice(0, e).map(this.renderLink)), u.createElement("div", {
                        className: "language-selector__list"
                    }, d.a.locales.slice(e).map(this.renderLink)))
                }, t
            }(u.Component)),
            h = Object(s.a)(a, r)(m);
        n.d(t, "a", function() {
            return h
        })
    },
    390: function(e, t, n) {
        "use strict";

        function i(e, t) {
            var n = {},
                i = s(e);
            if (!i) return n;
            var o;
            try {
                o = new URL(i)
            } catch (t) {
                return _.i.error(t.toString(), i + " was malformed from notification id:[" + e.id + "]"), n
            }
            return r(e.type, o) ? n.linkTo = {
                pathname: o.pathname,
                search: o.search,
                state: {
                    content: e.type,
                    medium: t
                }
            } : (n.linkTo = a(o.toString(), e.type, t), n.targetBlank = !0), n
        }

        function a(e, t, n) {
            var i = e.split("?");
            if (1 === i.length) return e + "?tt_content=" + t + "&tt_medium=" + n;
            var a = k.parse(i[1]);
            return a.tt_content = a.tt_content ? a.tt_content : t, a.tt_medium = a.tt_medium ? a.tt_medium : n, [i[0], k.stringify(a, {
                encode: !1
            })].join("?")
        }

        function r(e, t) {
            return !A.has(e) && "https://www.twitch.tv" === t.origin
        }

        function s(e) {
            var t = e.actions.filter(function(e) {
                return "click" === e.type
            });
            return t.length > 0 ? t[0].url : ""
        }

        function o(e, t) {
            return {
                id: e.id,
                body: e.body_md,
                type: e.type,
                thumbnailURL: e.thumbnail_url,
                createdAt: e.created_at,
                updatedAt: e.updated_at,
                isRead: e.read,
                actions: e.actions.map(function(e) {
                    return {
                        body: e.body,
                        type: e.type,
                        url: e.url,
                        __typename: "OnsiteNotificationAction"
                    }
                }),
                isTransient: !t,
                __typename: "OnsiteNotification"
            }
        }

        function l(e) {
            return {
                currentUser: Object(re.c)(e)
            }
        }

        function c(e, t) {
            for (var n = [], i = 0; i < e.length; i += t) {
                var a = e.slice(i, i + t);
                n.push(a)
            }
            return n
        }

        function u(e) {
            return e.type === N.c.OnsiteNotificationsRead
        }

        function d(e) {
            return e.type === N.c.OnsiteNotificationCreate || e.type === N.c.OnsiteNotificationUpdate
        }

        function p(e) {
            return e.type === N.c.OnsiteNotificationDelete
        }

        function m(e, t) {
            return me.debug("Received pubsub summary update", e), t && t.currentUser && t.currentUser.notifications && t.currentUser.notifications.summary && e.data.summary ? (t.currentUser.notifications.summary.lastSeenAt = e.data.summary.last_seen_at, t.currentUser.notifications.summary.unseenCount = e.data.summary.unseen_view_count, t) : t
        }

        function h(e, t) {
            if (me.debug("Received pubsub notification update", e), !(t && t.currentUser && t.currentUser.notifications && t.currentUser.notifications.edges && t.currentUser.notifications.edges)) return t;
            if (u(e)) {
                var n = new Set(e.data.notification_ids),
                    i = t.currentUser.notifications.edges.map(function(e) {
                        return n.has(e.node.id) ? b.__assign({}, e, {
                            node: b.__assign({}, e.node, {
                                isRead: !0
                            })
                        }) : e
                    });
                t.currentUser.notifications.edges = i
            } else if (d(e)) {
                if (e.data.persistent) {
                    var a = o(e.data.notification, !0),
                        i = f(t.currentUser.notifications.edges, a.id);
                    i.unshift({
                        cursor: null,
                        node: a,
                        __typename: "OnsiteNotificationEdge"
                    }), t.currentUser.notifications.edges = i
                }
            } else p(e) && (t.currentUser.notifications.edges = f(t.currentUser.notifications.edges, e.data.notification_id));
            return t
        }

        function f(e, t) {
            return e.filter(function(e) {
                return e.node.id !== t
            })
        }

        function g() {
            return function(e) {
                return function(t) {
                    function n() {
                        var e = null !== t && t.apply(this, arguments) || this;
                        return e.state = {
                            shouldDefer: !0
                        }, e.stopDeferring = function() {
                            e.state.shouldDefer && e.setState({
                                shouldDefer: !1
                            })
                        }, e
                    }
                    return b.__extends(n, t), n.prototype.render = function() {
                        var t = {
                            shouldDefer: this.state.shouldDefer,
                            stopDeferring: this.stopDeferring
                        };
                        return y.createElement(e, b.__assign({}, this.props, t))
                    }, n
                }(y.Component)
            }
        }
        var v, b = n(0),
            k = n(21),
            y = n(1),
            _ = n(2),
            C = n(47),
            S = n(7),
            E = n(107),
            w = n(15),
            N = n(38),
            O = n(20),
            D = n(30),
            U = n(5),
            I = n(28),
            x = n(32),
            T = n(399),
            F = n.n(T),
            j = n(11),
            L = n(65),
            R = n(13),
            A = new Set(["affiliateinvite", "feedcomment", "friendrequests", "partneragreementupdate", "partnerinvite"]),
            M = {
                Center: "center",
                Toast: "toast",
                Browser: "browser"
            },
            B = {
                Open: "open",
                Close: "close",
                MarkAllRead: "mark_all_read"
            },
            P = {
                PrimaryCta: "primary_cta",
                Dismiss: "dismiss"
            },
            H = function(e) {
                var t = {
                    notification_id: e.notification.id,
                    notification_type: e.notification.type,
                    ui_context: e.uiContext
                };
                _.m.track(R.SpadeEventType.NotificationImpression, t)
            },
            V = function(e) {
                var t = {
                    unseen_view_count: e.unseenCount,
                    action: e.action
                };
                _.m.track(R.SpadeEventType.NotificationCenterInteraction, t)
            },
            W = function(e) {
                var t = {
                    notification_id: e.notification.id,
                    notification_type: e.notification.type,
                    ui_context: e.uiContext,
                    action: e.action
                };
                _.m.track(R.SpadeEventType.NotificationInteraction, t)
            },
            q = n(3),
            z = (n(400), "persistent-notification__delete"),
            G = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.impressionEventFired = !1, t.isVisible = function(e) {
                        if (null !== t.element) {
                            var n = t.element.getBoundingClientRect();
                            return n.top < e.bottom && n.bottom > e.top
                        }
                        return !1
                    }, t.setRef = function(e) {
                        return t.element = e
                    }, t.deleteNotification = function() {
                        W({
                            uiContext: M.Center,
                            notification: t.props.data,
                            action: P.Dismiss
                        }), t.props.onDeleteNotification(t.props.data.id)
                    }, t.clickNotification = function() {
                        W({
                            uiContext: M.Center,
                            notification: t.props.data,
                            action: P.PrimaryCta
                        }), t.props.onViewNotification(t.props.data.id)
                    }, t.renderDeleteNotification = function() {
                        return y.createElement(q.U, {
                            className: "persistent-notification__delete",
                            padding: {
                                top: 1,
                                left: 1,
                                right: .5
                            },
                            position: q._2.Absolute
                        }, y.createElement(q.U, {
                            display: q.H.Flex,
                            flexWrap: q.K.NoWrap,
                            alignItems: q.c.Start
                        }, y.createElement(q.v, {
                            ariaLabel: "delete-notification",
                            "data-test-selector": z,
                            icon: q._9.Close,
                            size: q.x.Small,
                            onClick: t.deleteNotification
                        })))
                    }, t
                }
                return b.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive();
                    var e = this.context.registerReceiver;
                    e ? this.unregister = e(this) : _.i.warn("<PersistentNotification /> initialized missing a <ScrollableArea /> provider")
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister && this.unregister()
                }, t.prototype.render = function() {
                    return y.createElement(q.U, {
                        className: "persistent-notification",
                        position: q._2.Relative,
                        refDelegate: this.setRef,
                        "data-test-selector": "persistent-notification"
                    }, y.createElement(q._17, {
                        display: q.H.Flex,
                        className: this.props.data.isRead ? "persistent-notification__read" : "persistent-notification__unread",
                        borderBottom: !0,
                        flexWrap: q.K.NoWrap
                    }, y.createElement(q.S, b.__assign({
                        "data-test-selector": "persistent-notification__click",
                        onClick: this.clickNotification
                    }, i(this.props.data, R.PageviewMedium.NotificationCenter), {
                        alpha: !0
                    }), y.createElement(q.U, {
                        className: "persistent-notification__area",
                        display: q.H.Flex,
                        flexWrap: q.K.NoWrap,
                        padding: {
                            top: 1,
                            bottom: 1,
                            left: 1,
                            right: 3
                        }
                    }, y.createElement(q.C, {
                        aspect: q.k.Aspect1x1,
                        imageSrc: this.props.data.thumbnailURL,
                        imageAlt: Object(_.d)("Notification center item thumbnail", "OnsiteNotifications"),
                        size: q.D.Size4
                    }), y.createElement(q.U, {
                        display: q.H.Flex,
                        flexDirection: q.J.Column,
                        flexWrap: q.K.NoWrap,
                        margin: {
                            x: 1
                        }
                    }, y.createElement(q.U, {
                        className: "persistent-notification__body",
                        overflow: q.Y.Hidden,
                        "data-test-selector": "persistent-notification__body"
                    }, y.createElement(q._21, {
                        type: q._26.Span,
                        color: q.F.Alt
                    }, y.createElement(L, {
                        source: this.props.data.body || ""
                    }))), y.createElement(q.U, {
                        display: q.H.Flex,
                        alignItems: q.c.Center,
                        flexShrink: 0,
                        margin: {
                            top: .5
                        }
                    }, y.createElement(q._8, {
                        asset: q._9.MessagesSC,
                        height: 12,
                        width: 12,
                        type: q._10.Alt2
                    }), y.createElement(q.U, {
                        margin: {
                            left: .5
                        }
                    }, y.createElement(q._21, {
                        type: q._26.Span,
                        color: q.F.Alt2
                    }, Object(_.g)(new Date(this.props.data.updatedAt)))))))), this.renderDeleteNotification()))
                }, t.prototype.checkVisible = function(e) {
                    return b.__awaiter(this, void 0, void 0, function() {
                        return b.__generator(this, function(t) {
                            return !this.impressionEventFired && this.isVisible(e) && (H({
                                uiContext: M.Center,
                                notification: this.props.data
                            }), this.impressionEventFired = !0), [2]
                        })
                    })
                }, t.contextTypes = {
                    registerReceiver: j.func
                }, t = b.__decorate([Object(U.c)("PersistentNotification")], t)
            }(y.Component),
            $ = G,
            J = n(401),
            K = n(402),
            Q = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isRead: !1
                    }, t.createNotificationData = function() {
                        return {
                            id: "friendrequests",
                            type: "friendrequests",
                            body: Object(_.d)("{count, plural, one {You have # new friend request} other {You have # new friend requests}}", {
                                count: t.props.count
                            }, "FriendRequestsNotification"),
                            createdAt: t.props.date,
                            updatedAt: t.props.date,
                            isRead: t.props.isOldNotification || t.state.isRead,
                            thumbnailURL: F.a,
                            actions: [{
                                body: "View",
                                type: "click",
                                url: "https://www.twitch.tv/friends/requests"
                            }]
                        }
                    }, t.clearUnseenCount = function() {
                        Object(O.d)(K, {}, function(e) {
                            return e.currentUser.incomingFriendRequests.totalUnreadCount = 0, e
                        }), t.props.clearUnreadFriendRequests().then(function() {}).catch(function(e) {
                            return _.i.error(e, "[FriendRequestsNotification] Failed to clear unread requests.")
                        })
                    }, t.viewFriendRequests = function() {
                        t.setState({
                            isRead: !0
                        })
                    }, t
                }
                return b.__extends(t, e), t.prototype.render = function() {
                    return y.createElement($, {
                        key: "friendRequestsNotification",
                        data: this.createNotificationData(),
                        onDeleteNotification: this.clearUnseenCount,
                        onViewNotification: this.viewFriendRequests
                    })
                }, t
            }(y.Component),
            Y = Object(x.compose)(Object(S.a)(J, {
                name: "clearUnreadFriendRequests"
            }))(Q),
            X = (n(403), "center-window__empty"),
            Z = "center-window__content-footer",
            ee = "center-window__footer__text",
            te = "center-window__read-all",
            ne = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isLoadingMore: !1
                    }, t.renderContent = function() {
                        if (!t.props.hasInitiallyLoaded || t.props.data.length || t.props.friendRequestsData) {
                            return [t.mapPersistentNotificationElements(), t.renderContentFooter()]
                        }
                        return t.renderEmptyCenterWindowElement()
                    }, t.renderContentFooter = function() {
                        var e = !t.props.hasInitiallyLoaded || t.state.isLoadingMore ? y.createElement(q.X, {
                            delay: 0,
                            fillContent: !0
                        }) : y.createElement(q._8, {
                            asset: q._9.LogoGlitch,
                            width: 24,
                            height: 24,
                            type: q._10.Alt2
                        });
                        return y.createElement(q.U, {
                            className: "center-window__content-footer",
                            key: "center-window__content-footer",
                            "data-test-selector": Z,
                            display: q.H.Flex,
                            flexDirection: q.J.Column,
                            justifyContent: q.T.Center,
                            alignItems: q.c.Center,
                            textAlign: q._22.Center,
                            padding: 1,
                            flexGrow: 1
                        }, e)
                    }, t.mapPersistentNotificationElements = function() {
                        var e = t.props.data.map(function(e) {
                            return y.createElement($, {
                                key: "onsite-notification-" + e.node.id,
                                data: e.node,
                                onDeleteNotification: t.props.onDeleteNotification,
                                onViewNotification: t.props.onViewNotification
                            })
                        });
                        return t.props.friendRequestsData && e.unshift(y.createElement(Y, b.__assign({}, t.props.friendRequestsData))), e
                    }, t.renderEmptyCenterWindowElement = function() {
                        return y.createElement(q._17, {
                            "data-test-selector": X,
                            className: "center-window__empty-state",
                            background: q.m.Alt,
                            display: q.H.Flex,
                            justifyContent: q.T.Center,
                            alignItems: q.c.Center,
                            textAlign: q._22.Center,
                            flexDirection: q.J.Column,
                            padding: 2,
                            fullWidth: !0
                        }, y.createElement(q._8, {
                            asset: q._9.LogoGlitch,
                            width: 100,
                            height: 100,
                            type: q._10.Placeholder
                        }), y.createElement(q.U, {
                            margin: {
                                top: 1
                            }
                        }, y.createElement(q._21, {
                            type: q._26.H5,
                            color: q.F.Alt2
                        }, Object(_.d)("Hooray! You're in the clear!", "OnsiteNotifications"))))
                    }, t.renderMarkAsRead = function() {
                        return 0 !== t.props.data.length || t.props.friendRequestsData ? y.createElement(q.u, {
                            "data-test-selector": te,
                            type: q.z.Text,
                            size: q.x.Small,
                            disabled: 0 === t.props.data.length && !t.props.friendRequestsData,
                            onClick: t.props.onReadAllNotifications
                        }, Object(_.d)("Mark All as Read", "OnsiteNotifications")) : null
                    }, t.renderNotificationsHeaderElement = function() {
                        return y.createElement(q._17, {
                            className: "center-window__header",
                            background: q.m.Alt,
                            padding: {
                                x: 1,
                                y: .5
                            },
                            display: q.H.Flex,
                            alignItems: q.c.Center,
                            justifyContent: q.T.Between,
                            borderBottom: !0
                        }, y.createElement(q._21, {
                            type: q._26.H6,
                            color: q.F.Alt2,
                            bold: !0
                        }, Object(_.d)("Notifications", "OnsiteNotifications")), t.renderMarkAsRead())
                    }, t.renderUnreadNotificationsFooterElement = function() {
                        var e = 0 === t.props.newNotificationsCount ? null : y.createElement(q._21, {
                            "data-test-selector": ee,
                            type: q._26.H6,
                            color: q.F.Alt2
                        }, Object(_.d)("{num, plural, one {1 New Notification} other {{num, number} New Notifications} }", {
                            num: t.props.newNotificationsCount
                        }, "OnsiteNotifications"));
                        return y.createElement(q._17, {
                            className: "center-window__footer",
                            background: q.m.Alt,
                            padding: .5,
                            alignItems: q.c.Center,
                            textAlign: q._22.Center,
                            borderTop: !0
                        }, e)
                    }, t.loadMore = function() {
                        return b.__awaiter(t, void 0, void 0, function() {
                            var e = this;
                            return b.__generator(this, function(t) {
                                return this.state.isLoadingMore ? [2] : (this.setState({
                                    isLoadingMore: !0
                                }), [2, this.props.onLoadMore().then(function() {
                                    return e.setState({
                                        isLoadingMore: !1
                                    })
                                })])
                            })
                        })
                    }, t
                }
                return b.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return y.createElement(q._17, {
                        className: "center-window",
                        "data-test-selector": "center-window",
                        background: q.m.Alt
                    }, this.renderNotificationsHeaderElement(), y.createElement(I.b, {
                        className: "center-window__scroll",
                        contentClassName: "center-window__scroll-container"
                    }, y.createElement(q.U, {
                        display: q.H.Flex,
                        alignItems: q.c.Center,
                        flexDirection: q.J.Column,
                        flexGrow: 1,
                        flexWrap: q.K.NoWrap
                    }, this.renderContent(), y.createElement(I.a, {
                        enabled: this.props.data.length > 0 && !!this.props.data[this.props.data.length - 1].cursor,
                        contentLength: this.props.data.length,
                        loadMore: this.loadMore,
                        pixelThreshold: 200
                    }))), this.renderUnreadNotificationsFooterElement())
                }, t = b.__decorate([Object(U.c)("OnsiteNotificationsCenterWindow")], t)
            }(y.Component),
            ie = ne,
            ae = n(6),
            re = n(17),
            se = n(87),
            oe = (n(404), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.closeTimeout = 0, t.close = function() {
                        W({
                            uiContext: M.Toast,
                            notification: t.props.item,
                            action: P.Dismiss
                        }), t.props.close(t.props.index)
                    }, t.onMouseEnter = function() {
                        t.cancelCloseTimer()
                    }, t.onMouseLeave = function() {
                        t.scheduleCloseTimer()
                    }, t.view = function() {
                        W({
                            uiContext: M.Toast,
                            notification: t.props.item,
                            action: P.PrimaryCta
                        }), t.props.view(t.props.index)
                    }, t
                }
                return b.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.scheduleCloseTimer()
                }, t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive(), H({
                        uiContext: M.Toast,
                        notification: this.props.item
                    })
                }, t.prototype.componentWillUnmount = function() {
                    this.cancelCloseTimer()
                }, t.prototype.render = function() {
                    return y.createElement(q.e, {
                        type: q.i.BounceIn,
                        duration: q.g.Medium,
                        enabled: !0
                    }, y.createElement("div", {
                        onMouseEnter: this.onMouseEnter,
                        onMouseLeave: this.onMouseLeave,
                        "data-test-selector": "onsite-notification-toast__mouse-enter-detector"
                    }, y.createElement(q._17, {
                        className: "onsite-notification-toast",
                        background: q.m.Base,
                        display: q.H.Flex,
                        flexWrap: q.K.NoWrap,
                        margin: {
                            bottom: 1
                        },
                        border: !0
                    }, y.createElement(q.S, b.__assign({
                        onClick: this.view,
                        alpha: !0
                    }, i(this.props.item, R.PageviewMedium.NotificationToast)), y.createElement(q.U, {
                        className: "onsite-notification-toast__container",
                        display: q.H.Flex,
                        flexWrap: q.K.NoWrap
                    }, y.createElement(q.U, {
                        padding: {
                            y: 1,
                            left: 1
                        },
                        display: q.H.Flex,
                        flexShrink: 0
                    }, y.createElement(q.C, {
                        aspect: q.k.Aspect1x1,
                        imageSrc: this.props.item.thumbnailURL,
                        imageAlt: Object(_.d)("Notification toast thumbnail", "OnsiteNotifications"),
                        size: q.D.Size4
                    })), y.createElement(q.U, {
                        display: q.H.Flex,
                        flexDirection: q.J.Column,
                        flexWrap: q.K.NoWrap,
                        flexGrow: 1,
                        padding: 1
                    }, y.createElement(q.U, {
                        className: "onsite-notification-toast__body",
                        overflow: q.Y.Hidden
                    }, y.createElement(q._17, {
                        color: q.F.Alt
                    }, y.createElement(L, {
                        source: this.props.item.body
                    }))), y.createElement(q.U, {
                        margin: {
                            top: .5
                        },
                        flexShrink: 0
                    }, y.createElement(q._17, {
                        color: q.F.Alt2
                    }, Object(_.g)(new Date(this.props.item.updatedAt))))))), this.renderActions())))
                }, t.prototype.renderActions = function() {
                    return y.createElement(q._17, {
                        className: "onsite-notification-toast__action-wrapper",
                        display: q.H.Flex,
                        alignContent: q.b.Stretch,
                        flexGrow: 0,
                        flexShrink: 0,
                        flexDirection: q.J.Column,
                        borderLeft: !0
                    }, y.createElement(q._17, {
                        className: "onsite-notification-toast__action",
                        display: q.H.Flex,
                        alignContent: q.b.Stretch,
                        flexGrow: 1,
                        borderBottom: !0
                    }, y.createElement(q.S, b.__assign({
                        onClick: this.view,
                        "data-test-selector": "onsite-notification-toast__view",
                        alpha: !0
                    }, i(this.props.item, R.PageviewMedium.NotificationToast)), y.createElement(q._17, {
                        display: q.H.Flex,
                        alignItems: q.c.Center,
                        justifyContent: q.T.Center,
                        fullHeight: !0,
                        flexGrow: 1,
                        padding: .5
                    }, y.createElement(q._21, {
                        color: q.F.Link
                    }, this.primaryCTAText())))), y.createElement(q._17, {
                        className: "onsite-notification-toast__action",
                        display: q.H.Flex,
                        alignContent: q.b.Stretch,
                        flexGrow: 1
                    }, y.createElement(q.S, {
                        onClick: this.close,
                        "data-test-selector": "onsite-notification-toast__close",
                        alpha: !0
                    }, y.createElement(q._17, {
                        display: q.H.Flex,
                        alignItems: q.c.Center,
                        justifyContent: q.T.Center,
                        fullHeight: !0,
                        flexGrow: 1,
                        padding: .5
                    }, y.createElement(q._21, {
                        color: q.F.Alt2
                    }, Object(_.d)("Close", "OnsiteNotifications"))))))
                }, t.prototype.primaryCTAText = function() {
                    var e = this.props.item.actions.find(function(e) {
                        return "click" === e.type
                    });
                    return e ? e.body : Object(_.d)("View", "OnsiteNotifications")
                }, t.prototype.scheduleCloseTimer = function() {
                    var e = this;
                    this.cancelCloseTimer(), this.closeTimeout = setTimeout(function() {
                        e.props.close(e.props.index), e.closeTimeout = 0
                    }, 1e4)
                }, t.prototype.cancelCloseTimer = function() {
                    this.closeTimeout && (clearTimeout(this.closeTimeout), this.closeTimeout = 0)
                }, t
            }(y.Component)),
            le = Object(U.c)("OnsiteNotificationToast")(oe),
            ce = le,
            ue = (n(405), _.i.withCategory("toast-manager")),
            de = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        notifications: []
                    }, t.view = function(e) {
                        var n = t.state.notifications[e];
                        t.props.onViewNotification(n.id, !n.isTransient), t.close(e)
                    }, t.close = function(e) {
                        var n = t.state.notifications.slice();
                        n.splice(e, 1), t.setState({
                            notifications: n
                        })
                    }, t
                }
                return b.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive(), this.conditionallyInsertTestData()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    var t = this.props.pubsub.messages.info,
                        n = e.pubsub.messages.info;
                    if (n && n.data.toast && (!t || n.data.notification.id !== t.data.notification.id || n.data.notification.updated_at !== t.data.notification.updated_at)) {
                        ue.debug("Received pubsub update", e.pubsub.messages.info);
                        var i = o(n.data.notification, n.data.persistent);
                        this.onNewNotification(i)
                    }
                }, t.prototype.render = function() {
                    return y.createElement(q.U, {
                        className: "onsite-notifications-toast-manager",
                        position: q._2.Absolute,
                        margin: {
                            top: 5
                        },
                        "data-test-selector": "onsite-notifications-toast-manager"
                    }, this.renderToasts())
                }, t.prototype.conditionallyInsertTestData = function() {
                    return b.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return b.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return _.a.buildType !== w.a.Production && k.parse(window.location.search).onsite_test_data ? [4, n.e(35).then(n.bind(null, 2053))] : [3, 2];
                                case 1:
                                    e = i.sent().MockOnsiteNotifications, t = e.getMockOnsiteNotificationModels(3), this.setState({
                                        notifications: t
                                    }), i.label = 2;
                                case 2:
                                    return [2]
                            }
                        })
                    })
                }, t.prototype.renderToasts = function() {
                    var e = this,
                        t = this.state.notifications.map(function(t, n) {
                            return y.createElement(ce, {
                                key: t.id,
                                item: t,
                                index: n,
                                view: e.view,
                                close: e.close
                            })
                        });
                    return 0 === t.length ? null : t
                }, t.prototype.onNewNotification = function(e) {
                    var t = this.state.notifications.slice(),
                        n = t.findIndex(function(t) {
                            return t.id === e.id
                        });
                    n > -1 && t.splice(n, 1), t.unshift(e), t.length > 3 && t.pop(), this.setState({
                        notifications: t
                    })
                }, t = b.__decorate([Object(U.c)("OnsiteNotificationToastManager"), Object(se.a)([{
                    topic: function(e) {
                        return Object(D.e)("" + (e.currentUser && e.currentUser.id))
                    },
                    mapMessageTypesToProps: (v = {}, v[N.c.OnsiteNotificationCreate] = "info", v[N.c.OnsiteNotificationUpdate] = "info", v),
                    skip: function(e) {
                        return !e.currentUser
                    }
                }])], t)
            }(y.Component),
            pe = Object(ae.a)(l)(de),
            me = _.i.withCategory("onsite-pubsub-mutators"),
            he = n(391),
            fe = n(392),
            ge = n(393),
            ve = n(394),
            be = n(395);
        n(406);
        n.d(t, "a", function() {
            return Se
        }), n.d(t, "b", function() {
            return De
        });
        var ke = _.i.withCategory("onsite-notifications"),
            ye = "onsite-notifications__badge",
            _e = "99+",
            Ce = 5e3,
            Se = 10,
            Ee = 100,
            we = {
                align: q._31.Center,
                direction: q._32.Bottom,
                label: ""
            },
            Ne = {
                limit: Se,
                cursor: ""
            },
            Oe = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        newNotificationsCount: 0,
                        newFriendRequestsBadgeCount: 0,
                        isFriendRequestsNotificationUnread: !1
                    }, t.newNotificationsCountTimer = 0, t.hasInsertedSummaryData = !1, t.hasInsertedListNotificationsData = !1, t.viewNotification = function(e, n) {
                        void 0 === n && (n = !0), t.centerWindowToggleBalloon.toggleBalloon(!1), n && t.readNotification(e)
                    }, t.conditionallyInsertSummaryTestData = function() {
                        t.summaryDataLoaded(t.props) && !t.hasInsertedSummaryData && _.a.buildType !== w.a.Production && k.parse(window.location.search).onsite_test_data && (t.hasInsertedSummaryData = !0, Object(O.d)(ve, b.__assign({}, t.props.summaryData.variables), function(e) {
                            return e.currentUser.notifications.summary.unseenCount = k.parse(window.location.search).onsite_test_data, e
                        }))
                    }, t.conditionallyInsertListNotificationsTestData = function() {
                        return b.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return b.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return this.listDataLoaded() && !this.hasInsertedListNotificationsData && _.a.buildType !== w.a.Production && k.parse(window.location.search).onsite_test_data ? (this.hasInsertedListNotificationsData = !0, [4, n.e(35).then(n.bind(null, 2053))]) : [3, 2];
                                    case 1:
                                        e = t.sent().MockOnsiteNotifications, Object(O.d)(fe, b.__assign({}, this.props.listData.variables), function(t) {
                                            return t.currentUser.notifications.edges = e.getMockOnsiteNotificationEdges(k.parse(window.location.search).onsite_test_data), t
                                        }), t.label = 2;
                                    case 2:
                                        return [2]
                                }
                            })
                        })
                    }, t.summaryDataLoaded = function(e) {
                        return e.summaryData && !e.summaryData.loading && !e.summaryData.error && e.summaryData.currentUser && e.summaryData.currentUser.notifications && e.summaryData.currentUser.notifications.summary && e.summaryData.currentUser.incomingFriendRequests
                    }, t.listDataLoaded = function() {
                        return t.props.listData && t.props.listData.currentUser && t.props.listData.currentUser.notifications && void 0 !== t.props.listData.currentUser.notifications.edges
                    }, t.hasNewFriendRequests = function(e) {
                        var t = e.summaryData.currentUser;
                        if (t.incomingFriendRequests && t.incomingFriendRequests.newestEdge && t.incomingFriendRequests.newestEdge.createdAt) {
                            var n = new Date(t.incomingFriendRequests.newestEdge.createdAt),
                                i = new Date(t.notifications.summary.lastSeenAt);
                            return t.incomingFriendRequests.totalUnreadCount > 0 && n > i
                        }
                        return !1
                    }, t.getFriendRequestsData = function() {
                        if (t.summaryDataLoaded(t.props)) {
                            var e = t.props.summaryData.currentUser;
                            if (e.incomingFriendRequests && e.incomingFriendRequests.newestEdge) {
                                var n = e.incomingFriendRequests.totalUnreadCount,
                                    i = e.incomingFriendRequests.newestEdge.createdAt;
                                return n && i ? {
                                    count: n,
                                    date: i,
                                    isOldNotification: !t.state.isFriendRequestsNotificationUnread
                                } : void 0
                            }
                        }
                    }, t.toggleCenter = function(e) {
                        e || (t.props.stopDeferring(), t.getUnseenNotificationsAndApplyTimer(), t.viewNotifications()), V({
                            unseenCount: t.getUnseenNotificationsCount(t.props),
                            action: e ? B.Close : B.Open
                        })
                    }, t.getUnseenNotificationsAndApplyTimer = function() {
                        var e = t.state.newNotificationsCount;
                        t.summaryDataLoaded(t.props) && (e = t.getUnseenNotificationsCount(t.props), t.setState({
                            newNotificationsCount: e
                        })), t.clearTimeout(), e > 0 && (t.newNotificationsCountTimer = setTimeout(function() {
                            t.setState({
                                newNotificationsCount: 0
                            }), t.clearTimeout()
                        }, Ce))
                    }, t.viewNotifications = function() {
                        if (t.summaryDataLoaded(t.props)) {
                            t.setState({
                                newFriendRequestsBadgeCount: 0
                            });
                            var e = b.__assign({}, Object(O.a)({}), {
                                optimisticResponse: {
                                    viewedNotifications: {
                                        user: {
                                            notifications: {
                                                summary: {
                                                    unseenCount: 0,
                                                    lastSeenAt: new Date,
                                                    __typename: "OnsiteNotificationsSummary"
                                                },
                                                __typename: "OnsiteNotificationConnection"
                                            },
                                            __typename: "User"
                                        },
                                        __typename: "ViewedNotificationsPayload"
                                    }
                                }
                            });
                            Object(O.d)(ve, b.__assign({}, t.props.summaryData.variables), function(e) {
                                return e.currentUser.notifications.summary.unseenCount = 0, e
                            }), t.props.viewNotifications(e).then(function() {}).catch(function(e) {
                                return ke.error(e, "failure to read message... ")
                            })
                        }
                    }, t.getUnseenNotificationsCount = function(e) {
                        return t.summaryDataLoaded(e) ? e.summaryData.currentUser.notifications.summary.unseenCount + t.state.newFriendRequestsBadgeCount : 0
                    }, t.renderUnseenNotificationsBadge = function() {
                        var e = t.getUnseenNotificationsCount(t.props);
                        if (e > 0) {
                            var n = e >= 100 ? _e : e.toString();
                            return y.createElement(q.U, {
                                className: "onsite-notifications__badge",
                                "data-test-selector": ye,
                                position: q._2.Absolute
                            }, y.createElement(q.Z, {
                                label: n,
                                type: q._0.Notification
                            }))
                        }
                    }, t.deleteNotification = function(e) {
                        var n = b.__assign({}, Object(O.a)({
                            id: e
                        }), {
                            optimisticResponse: {
                                deleteNotification: {
                                    __typename: "DeleteNotificationPayload",
                                    notification: {
                                        __typename: "OnsiteNotification",
                                        id: e
                                    }
                                }
                            }
                        });
                        return Object(O.d)(fe, b.__assign({}, t.props.listData.variables), function(t) {
                            return t.currentUser.notifications.edges = t.currentUser.notifications.edges.filter(function(t) {
                                return t.node.id !== e
                            }), t
                        }), t.props.deleteOnsiteNotification(n).then(function() {}).catch(function(t) {
                            ke.error(t, "Unable to delete notification " + e)
                        })
                    }, t.readAllNotifications = function() {
                        if (t.setState({
                                isFriendRequestsNotificationUnread: !1
                            }), t.listDataLoaded()) {
                            V({
                                unseenCount: t.getUnseenNotificationsCount(t.props),
                                action: B.MarkAllRead
                            });
                            var e = t.props.listData.currentUser.notifications.edges.filter(function(e) {
                                return !e.node.isRead
                            }).map(function(e) {
                                return e.node.id
                            });
                            if (0 !== e.length) {
                                for (var n = c(e, Ee), i = 0, a = n; i < a.length; i++) {
                                    var r = a[i];
                                    t.markIDsAsRead(r)
                                }
                                Object(O.d)(fe, b.__assign({}, t.props.listData.variables), function(e) {
                                    return e.currentUser.notifications.edges = e.currentUser.notifications.edges.map(function(e) {
                                        return b.__assign({}, e, {
                                            node: b.__assign({}, e.node, {
                                                isRead: !0
                                            })
                                        })
                                    }), e
                                })
                            }
                        }
                    }, t.markIDsAsRead = function(e) {
                        return b.__awaiter(t, void 0, void 0, function() {
                            var t, n, i;
                            return b.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        t = e.map(function(e) {
                                            return {
                                                id: e,
                                                isRead: !0,
                                                __typename: "OnsiteNotification"
                                            }
                                        }), n = b.__assign({}, Object(O.a)({
                                            ids: e
                                        }), {
                                            optimisticResponse: {
                                                readNotifications: {
                                                    __typename: "ReadNotificationsPayload",
                                                    notifications: t,
                                                    count: e.length
                                                }
                                            }
                                        }), a.label = 1;
                                    case 1:
                                        return a.trys.push([1, 3, , 4]), [4, this.props.readOnsiteNotification(n)];
                                    case 2:
                                        return a.sent(), [3, 4];
                                    case 3:
                                        return i = a.sent(), ke.error(i, "Unable to read notifications", {
                                            ids: e
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.readNotification = function(e) {
                        return b.__awaiter(t, void 0, void 0, function() {
                            var t, n;
                            return b.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        t = b.__assign({}, Object(O.a)({
                                            ids: [e]
                                        }), {
                                            optimisticResponse: {
                                                readNotifications: {
                                                    __typename: "ReadNotificationsPayload",
                                                    notifications: [{
                                                        id: e,
                                                        isRead: !0,
                                                        __typename: "OnsiteNotification"
                                                    }],
                                                    count: 1
                                                }
                                            }
                                        }), i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, , 4]), [4, this.props.readOnsiteNotification(t)];
                                    case 2:
                                        return i.sent(), [3, 4];
                                    case 3:
                                        return n = i.sent(), ke.error(n, "Unable to read notification", {
                                            id: e
                                        }), [3, 4];
                                    case 4:
                                        return this.listDataLoaded() && Object(O.d)(fe, b.__assign({}, this.props.listData.variables), function(t) {
                                            return t.currentUser.notifications.edges = t.currentUser.notifications.edges.map(function(t) {
                                                return t.node.id === e ? b.__assign({}, t, {
                                                    node: b.__assign({}, t.node, {
                                                        isRead: !0
                                                    })
                                                }) : t
                                            }), t
                                        }), [2]
                                }
                            })
                        })
                    }, t.loadMore = function() {
                        return b.__awaiter(t, void 0, void 0, function() {
                            return b.__generator(this, function(e) {
                                return this.props.listData.loading ? [2] : [2, this.props.loadMore()]
                            })
                        })
                    }, t.clearTimeout = function() {
                        t.newNotificationsCountTimer && (clearTimeout(t.newNotificationsCountTimer), t.newNotificationsCountTimer = 0)
                    }, t.saveCenterWindowToggleBalloonRef = function(e) {
                        return t.centerWindowToggleBalloon = e
                    }, t
                }
                return b.__extends(t, e), t.prototype.componentDidUpdate = function() {
                    this.conditionallyInsertSummaryTestData(), this.conditionallyInsertListNotificationsTestData()
                }, t.prototype.componentWillUnmount = function() {
                    this.clearTimeout()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    if (this.summaryDataLoaded(e)) {
                        var t = this.hasNewFriendRequests(e);
                        this.setState({
                            newFriendRequestsBadgeCount: t ? 1 : 0
                        }), this.summaryDataLoaded(this.props) || this.setState({
                            isFriendRequestsNotificationUnread: t
                        }), _.n.setBadgeCount(this.getUnseenNotificationsCount(e))
                    }
                }, t.prototype.render = function() {
                    var e = this.props.shouldDefer || !this.listDataLoaded() ? [] : this.props.listData.currentUser.notifications.edges;
                    return we.label = Object(_.d)("Notifications", "OnsiteNotificationsToolTip"), y.createElement(q.U, {
                        className: "onsite-notifications"
                    }, y.createElement(pe, {
                        onViewNotification: this.viewNotification
                    }), y.createElement(q.U, {
                        position: q._2.Relative
                    }, y.createElement(C.a, {
                        onToggle: this.toggleCenter,
                        ref: this.saveCenterWindowToggleBalloonRef,
                        tooltipProps: we
                    }, y.createElement(q.v, {
                        ariaLabel: Object(_.d)("Open Notifications", "OnsiteNotifications"),
                        size: q.x.Large,
                        icon: q._9.NotificationBell,
                        overlay: !0
                    }), y.createElement(q.p, {
                        "data-test-selector": "center-window__balloon",
                        direction: q.q.BottomRight,
                        size: q.r.Large,
                        offsetX: "10px"
                    }, y.createElement(ie, {
                        newNotificationsCount: this.state.newNotificationsCount,
                        hasInitiallyLoaded: this.listDataLoaded(),
                        data: e,
                        friendRequestsData: this.getFriendRequestsData(),
                        onLoadMore: this.loadMore,
                        onViewNotification: this.viewNotification,
                        onReadAllNotifications: this.readAllNotifications,
                        onDeleteNotification: this.deleteNotification
                    }))), this.renderUnseenNotificationsBadge()))
                }, t = b.__decorate([g(), Object(S.a)(ve, {
                    name: "summaryData",
                    skip: function(e) {
                        return !e.firstPageLoaded
                    }
                }), Object(S.a)(be, {
                    name: "viewNotifications"
                }), Object(S.a)(fe, {
                    name: "listData",
                    options: function(e) {
                        return {
                            variables: b.__assign({}, Ne, {
                                language: e.languageCode
                            })
                        }
                    },
                    skip: function(e) {
                        return e.shouldDefer
                    },
                    props: function(e) {
                        return b.__assign({}, e, {
                            loadMore: function() {
                                return e.listData.fetchMore({
                                    query: fe,
                                    variables: b.__assign({}, e.listData.variables, {
                                        cursor: e.listData.currentUser ? e.listData.currentUser.notifications.edges[e.listData.currentUser.notifications.edges.length - 1].cursor : ""
                                    }),
                                    updateQuery: function(e, t) {
                                        var n = t.fetchMoreResult,
                                            i = n;
                                        return {
                                            currentUser: b.__assign({}, i.currentUser, {
                                                notifications: b.__assign({}, i.currentUser.notifications, {
                                                    edges: e.currentUser.notifications.edges.concat(i.currentUser.notifications.edges)
                                                })
                                            })
                                        }
                                    }
                                })
                            }
                        })
                    }
                }), Object(S.a)(he, {
                    name: "deleteOnsiteNotification"
                }), Object(S.a)(ge, {
                    name: "readOnsiteNotification"
                }), Object(E.a)(function(e) {
                    return {
                        query: ve,
                        skip: !e.currentUser,
                        topic: Object(D.e)("" + (e.currentUser && e.currentUser.id)),
                        types: [N.c.OnsiteNotificationSummaryUpdate, N.c.OnsiteNotificationUpdate, N.c.OnsiteNotificationCreate, N.c.OnsiteNotificationDelete],
                        mutator: m
                    }
                }), Object(E.a)(function(e) {
                    return {
                        query: fe,
                        variables: b.__assign({}, Ne, {
                            language: e.languageCode
                        }),
                        skip: !e.currentUser,
                        topic: Object(D.e)("" + (e.currentUser && e.currentUser.id)),
                        types: [N.c.OnsiteNotificationsRead, N.c.OnsiteNotificationUpdate, N.c.OnsiteNotificationCreate, N.c.OnsiteNotificationDelete],
                        mutator: h
                    }
                }), Object(U.c)("OnsiteNotifications", {
                    autoReportInteractive: !0
                })], t)
            }(y.Component),
            De = Oe
    },
    391: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "OnsiteNotifications_DeleteNotification"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DeleteNotificationInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "deleteNotification"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "notification"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 162
            }
        };
        n.loc.source = {
            body: "mutation OnsiteNotifications_DeleteNotification($input: DeleteNotificationInput!) {\n  deleteNotification(input: $input) {\n    notification {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    392: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "OnsiteNotifications_ListNotifications"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "limit"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Int"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "cursor"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Cursor"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "language"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "String"
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "notifications"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "first"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "limit"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "after"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "cursor"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "language"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "language"
                                        }
                                    }
                                }],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "pageInfo"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "hasNextPage"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "edges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cursor"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "node"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "type"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "body"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "createdAt"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "updatedAt"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "isRead"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "thumbnailURL"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "actions"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "body"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "type"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "url"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 514
            }
        };
        n.loc.source = {
            body: "query OnsiteNotifications_ListNotifications($limit: Int, $cursor: Cursor, $language: String) {\n  currentUser {\n    id\n    notifications(first: $limit, after: $cursor, language: $language) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          type\n          body\n          createdAt\n          updatedAt\n          isRead\n          thumbnailURL\n          actions {\n            body\n            type\n            url\n          }\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    393: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "OnsiteNotifications_ReadNotifications"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ReadNotificationsInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "readNotifications"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "notifications"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isRead"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 167
            }
        };
        n.loc.source = {
            body: "mutation OnsiteNotifications_ReadNotifications($input: ReadNotificationsInput!) {\n readNotifications(input: $input) {\n   notifications {\n     id\n     isRead\n   }\n }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    394: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "OnsiteNotifications_Summary"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "notifications"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "summary"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "unseenCount"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "lastSeenAt"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "incomingFriendRequests"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "first"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "1"
                                    }
                                }],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalUnreadCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "newestEdge"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "createdAt"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 267
            }
        };
        n.loc.source = {
            body: "query OnsiteNotifications_Summary {\n  currentUser {\n    id\n    notifications {\n      summary {\n        unseenCount\n        lastSeenAt\n      }\n    }\n    incomingFriendRequests(first: 1) {\n      totalUnreadCount\n      newestEdge {\n        createdAt\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    395: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "OnsiteNotifications_View"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "viewedNotifications"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "user"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "notifications"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "summary"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "unseenCount"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "lastSeenAt"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 184
            }
        };
        n.loc.source = {
            body: "mutation OnsiteNotifications_View {\n  viewedNotifications {\n    user {\n      notifications {\n        summary {\n          unseenCount\n          lastSeenAt\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    396: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                firstPageLoaded: e.session.firstPageLoaded,
                languageCode: e.session.languageCode,
                currentUser: Object(f.c)(e)
            }
        }

        function a(e) {
            return {
                isLoggedIn: Object(f.d)(e)
            }
        }

        function r(e) {
            return {
                theme: Object(ye.a)(e),
                firstPageLoaded: e.session.firstPageLoaded,
                initialUserAvailabilityIsSet: e.session.initialUserAvailabilityIsSet
            }
        }

        function s(e) {
            return Object(p.bindActionCreators)({
                changeTheme: ke.b,
                initialUserAvailabilitySet: be.g
            }, e)
        }

        function o(e) {
            return Object(p.bindActionCreators)({
                login: function() {
                    return Object(h.f)(m.a.TopNavSignupButton)
                },
                logout: h.g,
                signup: function() {
                    return Object(h.h)(m.a.TopNavSignupButton)
                }
            }, e)
        }

        function l(e) {
            return {
                isLoggedIn: Object(f.d)(e)
            }
        }
        var c, u = n(6),
            d = n(10),
            p = n(9),
            m = n(54),
            h = n(39),
            f = n(17),
            g = n(0),
            v = n(1),
            b = n(2),
            k = n(389),
            y = n(47),
            _ = n(13),
            C = n(5),
            S = n(390),
            E = Object(u.a)(i)(S.b),
            w = n(22),
            N = n(40),
            O = n(18),
            D = n(108),
            U = n(267),
            I = n(64),
            x = n(4),
            T = n(28),
            F = n(130),
            j = n(48),
            L = n(380),
            R = n(386),
            A = n(7),
            M = n(56),
            B = n(3),
            P = (n(408), n(409)),
            H = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return g.__extends(t, e), t.prototype.render = function() {
                    var e, t = {
                        "search-live-result-card": !0,
                        "search-live-result-card--hover": this.props.borderHover
                    };
                    return this.props.data && !this.props.data.loading && this.props.data.user && this.props.data.user.stream && (e = this.props.data.user.stream.previewImageURL), v.createElement(B.U, {
                        className: x(t),
                        key: this.props.id,
                        fullWidth: !0
                    }, v.createElement(B.S, g.__assign({
                        linkTo: this.props.linkTo,
                        hover: this.props.borderHover,
                        tabIndex: -1,
                        "data-a-target": "search-live-result-card-link"
                    }, Object(M.a)(this.props)), v.createElement(B.A, null, v.createElement(B.U, {
                        className: "search-live-result-card__wrapper",
                        position: B._2.Relative,
                        overflow: B.Y.Hidden,
                        fullWidth: !0
                    }, v.createElement(B.C, {
                        imageSrc: e || b.a.defaultStreamPreviewURL,
                        imageAlt: this.props.imageAlt,
                        aspect: B.k.Aspect16x9
                    }), v.createElement(B._17, {
                        className: "search-live-result-card__overlay",
                        position: B._2.Absolute,
                        attachLeft: !0,
                        attachTop: !0,
                        attachRight: !0,
                        attachBottom: !0,
                        display: B.H.Flex,
                        flexDirection: B.J.Column,
                        justifyContent: B.T.End,
                        overflow: B.Y.Hidden,
                        color: B.F.Overlay
                    }, v.createElement(B.B, null, v.createElement(B.U, {
                        className: "search-live-result-card__body",
                        padding: .5
                    }, v.createElement(B._21, {
                        type: B._26.H5,
                        ellipsis: !0,
                        className: "search-live-result-card__title"
                    }, this.props.channelName), v.createElement(B.U, {
                        className: "search-live-result-card__viewer-count-container",
                        display: B.H.Flex,
                        alignItems: B.c.Center
                    }, v.createElement(B.U, {
                        margin: {
                            right: .5
                        },
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        flexShrink: 0
                    }, v.createElement(B._8, {
                        asset: B._9.GlyphLive,
                        type: B._10.Live,
                        width: 14,
                        height: 14
                    })), v.createElement(B._21, {
                        className: "search-live-result-card__viewer-count",
                        ellipsis: !0
                    }, Object(b.e)(this.props.viewerCount))), v.createElement(B._21, {
                        className: "search-live-result-card__info",
                        ellipsis: !0
                    }, this.props.title))))))))
                }, t = g.__decorate([Object(A.a)(P, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.login
                            }
                        }
                    }
                })], t)
            }(v.Component),
            V = (n(410), function(e) {
                var t, n, i;
                e.title && (e.hitsCount && e.hitsCount > 0 ? t = Object(b.d)("more", "SearchResultSection") : e.totalHitsCount && e.totalHitsCount > 0 && (t = Object(b.d)("Show", "SearchResultSection")), void 0 !== e.totalHitsCount && (i = v.createElement(B.Z, {
                    type: B._0.Brand,
                    label: e.totalHitsCount < 100 ? Object(b.e)(e.totalHitsCount) : "99+"
                })), n = v.createElement(B.S, g.__assign({
                    onClick: e.onHeaderClick,
                    tabIndex: -1
                }, Object(B._39)(e), {
                    "data-ts_selectable": !0
                }), v.createElement(B.U, {
                    className: "search-result-view__titlesep search-result-view--no-hover",
                    display: B.H.Flex,
                    justifyContent: B.T.Between
                }, v.createElement("div", null, v.createElement(B.U, {
                    display: B.H.Inline,
                    margin: {
                        right: 1
                    }
                }, v.createElement(B._21, {
                    type: B._26.Span,
                    color: B.F.Link,
                    fontSize: B.L.Size7,
                    transform: B._25.Uppercase
                }, e.title)), i), v.createElement(B._21, {
                    fontSize: B.L.Size7,
                    transform: B._25.Uppercase
                }, t))));
                var a;
                return (Array.isArray(e.children) && e.children.length > 0 || e.children && !Array.isArray(e.children)) && (a = v.createElement(B.U, {
                    className: "search-result-view__listing-wrapper",
                    margin: {
                        top: .5,
                        bottom: .5
                    }
                }, e.children)), v.createElement("div", {
                    className: "search-result-view__block"
                }, n, a)
            }),
            W = (n(411), function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return g.__extends(t, e), t.prototype.render = function() {
                    return v.createElement(B.U, {
                        className: "search-title-bar " + (this.props.showBack ? "search-title-bar--show" : ""),
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        "data-a-target": "nav-search-title-bar"
                    }, v.createElement(B._17, {
                        className: "search-title-bar__back-container",
                        display: B.H.Flex,
                        alignItems: B.c.Stretch,
                        borderRight: !0
                    }, v.createElement(B.v, {
                        icon: B._9.AngleLeft,
                        type: B.w.Secondary,
                        size: B.x.Large,
                        onClick: this.props.onBackClick,
                        ariaLabel: Object(b.d)("Back button", "SearchTitleBar"),
                        "data-ts_selectable": this.props.showBack,
                        "data-a-target": "nav-search-back"
                    })), v.createElement(B.U, {
                        className: "search-title-bar__title"
                    }, v.createElement(B._21, {
                        fontSize: B.L.Size5
                    }, this.props.title)))
                }, t
            }(v.Component)),
            q = n(271),
            z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleOptionChange = function(e) {
                        var n = e.currentTarget.elements;
                        t.props.onOptionsChange({
                            type: +n.type.value,
                            length: +n.video_length.value,
                            sort: +n.sort.value
                        })
                    }, t
                }
                return g.__extends(t, e), t.prototype.render = function() {
                    return v.createElement(B._17, {
                        className: "search__video-filters",
                        background: B.m.Alt,
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, v.createElement(B.P, {
                        display: B.H.Flex,
                        justifyContent: B.T.Between
                    }, v.createElement("form", {
                        onInput: this.handleOptionChange
                    }, v.createElement(B.U, {
                        flexShrink: 0
                    }, v.createElement(B.U, {
                        display: B.H.InlineFlex,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._14, {
                        name: "type"
                    }, v.createElement("option", {
                        value: q.c.AllVideos
                    }, Object(b.d)("All Videos", "search__video-filters")), v.createElement("option", {
                        value: q.c.PastBroadcasts
                    }, Object(b.d)("Past Broadcasts", "search__video-filters")), v.createElement("option", {
                        value: q.c.Uploads
                    }, Object(b.d)("Uploads", "search__video-filters")), v.createElement("option", {
                        value: q.c.Highlights
                    }, Object(b.d)("Highlights", "search__video-filters")))), v.createElement(B.U, {
                        display: B.H.InlineFlex
                    }, v.createElement(B._14, {
                        name: "video_length"
                    }, v.createElement("option", {
                        value: q.a.AnyLength
                    }, Object(b.d)("Any Length", "search__video-filters")), v.createElement("option", {
                        value: q.a.Short
                    }, Object(b.d)("Short", "search__video-filters")), v.createElement("option", {
                        value: q.a.Long
                    }, Object(b.d)("Long", "search__video-filters"))))), v.createElement(B.U, {
                        display: B.H.InlineFlex,
                        flexShrink: 0
                    }, v.createElement(B._14, {
                        name: "sort"
                    }, v.createElement("option", {
                        value: q.b.Popular
                    }, Object(b.d)("Popular", "search__video-filters")), v.createElement("option", {
                        value: q.b.Newest
                    }, Object(b.d)("Newest", "search__video-filters")))))))
                }, t
            }(v.Component),
            G = n(66),
            $ = (n(412), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onBackClick = function() {
                        return t.headerSelect(null)
                    }, t.gameHeaderSelect = function() {
                        return t.headerSelect(G.a.Games)
                    }, t.liveHeaderSelect = function() {
                        return t.headerSelect(G.a.Channels)
                    }, t.userHeaderSelect = function() {
                        return t.headerSelect(G.a.Users)
                    }, t.videoHeaderSelect = function() {
                        return t.headerSelect(G.a.Videos)
                    }, t.communityHeaderSelect = function() {
                        return t.headerSelect(G.a.Communities)
                    }, t.headerSelect = function(e) {
                        t.props.onCategorySelected(e)
                    }, t.onClick = function(e) {
                        if (e.nativeEvent.stopImmediatePropagation(), e.target !== e.currentTarget) {
                            var n = e.target,
                                i = n.querySelector("a"),
                                a = i ? i.querySelector("[data-tt_content]") : null;
                            a || (i = n.closest("a")), a = i && i.dataset.tt_content ? i : null, a && t.props.onResultSelected()
                        }
                    }, t.setScrollRef = function(e) {
                        return t.scroll = e
                    }, t
                }
                return g.__extends(t, e), t.prototype.componentDidUpdate = function() {
                    this.previousCategory !== this.props.currentCategory && (this.previousCategory = this.props.currentCategory, this.scroll.scrollToTop())
                }, t.prototype.render = function() {
                    var e, t = {
                        "search-result-view": !0,
                        "search-result-view--active": !0,
                        "search-result-view--filtered": this.props.currentCategory === G.a.Videos
                    };
                    e = this.props.currentCategory && null !== this.props.currentCategory ? v.createElement(W, {
                        title: this.getCategoryTitle(this.props.currentCategory),
                        showBack: !0,
                        onBackClick: this.onBackClick
                    }) : v.createElement(W, {
                        title: Object(b.d)("Top Results", "SearchResultPanel__titlebar"),
                        showBack: !1
                    });
                    var n;
                    n = this.props.isWaiting ? v.createElement(B.X, {
                        fillContent: !0
                    }) : this.props.isErrored ? this.getErrorMessage() : this.props.currentCategory && null !== this.props.currentCategory ? this.getCategoryDrillDown(this.props.currentCategory) : this.props.gameResults && this.props.gameResults.totalHits > 0 || this.props.userResults && this.props.userResults.totalHits > 0 || this.props.communityResults && this.props.communityResults.totalHits > 0 || this.props.videoResults && this.props.videoResults.totalHits > 0 || this.props.liveResults && this.props.liveResults.totalHits > 0 ? this.getResultSections() : this.getNoResultsMessage();
                    var i;
                    return this.props.currentCategory === G.a.Videos && (i = v.createElement(z, {
                        key: "video-filters",
                        onOptionsChange: this.props.onVideoOptionsChange
                    })), v.createElement("div", {
                        className: "search-panel " + (this.props.isOpen ? "" : "search-panel--closed"),
                        tabIndex: 0,
                        onKeyDown: this.props.onKeyDown
                    }, e, i, v.createElement(B._17, {
                        className: x(t),
                        background: B.m.Base,
                        position: B._2.Absolute,
                        overflow: B.Y.Hidden,
                        display: B.H.Block
                    }, v.createElement(T.b, {
                        className: "search-result-view__wrapper",
                        contentClassName: "search-result-view__scroll-container",
                        onClick: this.onClick,
                        scrollRef: this.setScrollRef,
                        suppressScrollX: !0,
                        "data-a-target": "search-scroller"
                    }, v.createElement(B.U, {
                        fullWidth: !0
                    }, n, v.createElement(T.a, {
                        key: this.props.currentCategory || "none",
                        enabled: !this.props.isWaiting && this.props.isOpen,
                        loadMore: this.props.loadMore
                    })))))
                }, t.prototype.getResultSections = function() {
                    var e, t = [],
                        n = [],
                        i = this.getGameCards(),
                        a = this.getUserCards(),
                        r = this.getCommunityCards(),
                        s = this.getVideoCards(),
                        o = this.getLiveCards();
                    return o.length > 0 && (e = v.createElement(B.U, {
                        className: "search-result-view__live",
                        margin: {
                            y: 1,
                            x: 1
                        }
                    }, v.createElement(B.N, null, o))), this.getResultSection("games-section", G.a.Games, this.gameHeaderSelect, this.props.gameResults, i.length, i, n, t), this.getResultSection("live-section", G.a.Channels, this.liveHeaderSelect, this.props.liveResults, o.length, e, n, t), this.getResultSection("channels-section", G.a.Users, this.userHeaderSelect, this.props.userResults, a.length, a, n, t), this.getResultSection("videos-section", G.a.Videos, this.videoHeaderSelect, this.props.videoResults, s.length, s, n, t), this.getResultSection("communities-section", G.a.Communities, this.communityHeaderSelect, this.props.communityResults, r.length, r, n, t), t.concat(n)
                }, t.prototype.getResultSection = function(e, t, n, i, a, r, s, o) {
                    var l = v.createElement(V, {
                        key: e,
                        totalHitsCount: i ? i.totalHits : 0,
                        hitsCount: a,
                        title: this.getCategoryTitle(t),
                        onHeaderClick: n,
                        "data-a-target": e
                    }, r);
                    0 === a ? s.push(l) : o.push(l)
                }, t.prototype.getGameCards = function() {
                    return this.props.gameResults ? this.props.gameResults.results.map(function(e) {
                        return v.createElement(R.a, {
                            id: "game_" + e.id,
                            key: "game_" + e.id,
                            imageAlt: e.thumbnailAltText,
                            linkTo: e.linkTo,
                            title: e.title,
                            "data-ts_selectable": !0,
                            "data-tt_content": !0
                        })
                    }) : []
                }, t.prototype.getLiveCards = function() {
                    return this.props.liveResults ? this.props.liveResults.results.map(function(e) {
                        var t = Object(j.a)(e.login || "", e.name || "");
                        return v.createElement(B.G, {
                            key: "live_" + e.id,
                            cols: 6
                        }, v.createElement(B.U, {
                            margin: {
                                bottom: 1
                            }
                        }, v.createElement(H, {
                            id: "live_" + e.id,
                            imageAlt: e.thumbnailAltText,
                            linkTo: e.linkTo,
                            title: e.status || "",
                            login: e.login ? e.login : "",
                            channelName: t,
                            viewerCount: e.viewerCount || 0,
                            "data-ts_selectable": !0,
                            "data-tt_content": !0
                        })))
                    }) : []
                }, t.prototype.getUserCards = function() {
                    return this.props.userResults ? this.props.userResults.results.map(function(e) {
                        var t = Object(j.a)(e.login || "", e.name || "");
                        return v.createElement(B.S, {
                            linkTo: e.linkTo,
                            tabIndex: -1,
                            "data-ts_selectable": !0,
                            "data-tt_content": !0,
                            key: e.id
                        }, v.createElement(B.U, {
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, v.createElement(B.A, {
                            row: !0
                        }, v.createElement(B.C, {
                            imageAlt: e.thumbnailAltText,
                            imageSrc: e.thumbnail ? e.thumbnail : "",
                            size: B.D.Size4,
                            aspect: B.k.Aspect1x1
                        }), v.createElement(B.B, null, v.createElement(B.P, {
                            padding: {
                                x: 1
                            }
                        }, v.createElement(B._21, {
                            type: B._26.H5,
                            ellipsis: !0
                        }, t))))))
                    }) : []
                }, t.prototype.getVideoCards = function() {
                    return this.props.videoResults ? this.props.videoResults.results.map(function(e) {
                        var t = Object(j.a)(e.login || "", e.name || ""),
                            n = Object(L.a)(e.length || 0);
                        return v.createElement(B.S, {
                            key: "video_" + e.id,
                            linkTo: e.linkTo,
                            tabIndex: -1,
                            "data-ts_selectable": !0,
                            "data-tt_content": !0
                        }, v.createElement(B.U, {
                            className: "search-panel__card",
                            fullWidth: !0,
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, v.createElement(B.A, {
                            row: !0
                        }, v.createElement(B.C, {
                            imageSrc: e.thumbnail ? e.thumbnail : "",
                            imageAlt: e.thumbnailAltText,
                            size: B.D.Size8,
                            aspect: B.k.Aspect16x9
                        }), v.createElement(B.B, null, v.createElement(B.P, {
                            margin: {
                                left: 1
                            }
                        }, v.createElement(B._21, {
                            type: B._26.H5,
                            ellipsis: !0
                        }, e.title)), v.createElement(B.P, {
                            margin: {
                                left: 1
                            }
                        }, v.createElement(B._21, {
                            className: "search-panel__link",
                            ellipsis: !0
                        }, e.createdAt ? Object(b.c)(new Date(1e3 * e.createdAt), "medium") : "", " · ", n || "", " · ", v.createElement(B._21, {
                            className: "search-pannel__highlight-link",
                            type: B._26.Span
                        }, t)))))))
                    }) : []
                }, t.prototype.getCommunityCards = function() {
                    return this.props.communityResults ? this.props.communityResults.results.map(function(e) {
                        return v.createElement(B.S, {
                            key: "community_" + e.id,
                            targetBlank: Object(F.b)(),
                            linkTo: Object(F.a)(e.linkTo),
                            tabIndex: -1,
                            "data-ts_selectable": !0,
                            "data-tt_content": !0
                        }, v.createElement(B.U, {
                            className: "search-panel__card",
                            fullWidth: !0,
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, v.createElement(B.A, {
                            row: !0
                        }, v.createElement(B.C, {
                            imageSrc: e.thumbnail ? e.thumbnail : "",
                            imageAlt: e.thumbnailAltText,
                            size: B.D.Size4,
                            aspect: B.k.BoxArt
                        }), v.createElement(B.B, null, v.createElement(B.P, {
                            margin: {
                                left: 1
                            }
                        }, v.createElement(B._21, {
                            type: B._26.H5,
                            ellipsis: !0
                        }, e.name)), v.createElement(B.P, {
                            margin: {
                                left: 1
                            }
                        }, v.createElement(B._21, {
                            className: "search-panel__link",
                            ellipsis: !0
                        }, Object(b.d)("{viewerCount,number} Viewers", {
                            viewerCount: e.viewerCount || 0
                        }, "SearchResultPanel")))))))
                    }) : []
                }, t.prototype.getCategoryDrillDown = function(e) {
                    var t;
                    switch (e) {
                        case G.a.Games:
                            if (!this.props.gameResults || 0 === this.props.gameResults.totalHits) return this.getNoResultsMessage();
                            t = this.getGameCards();
                            break;
                        case G.a.Users:
                            if (!this.props.userResults || 0 === this.props.userResults.totalHits) return this.getNoResultsMessage();
                            t = this.getUserCards();
                            break;
                        case G.a.Communities:
                            if (!this.props.communityResults || 0 === this.props.communityResults.totalHits) return this.getNoResultsMessage();
                            t = this.getCommunityCards();
                            break;
                        case G.a.Videos:
                            if (!this.props.videoResults || 0 === this.props.videoResults.totalHits) return this.getNoResultsMessage();
                            t = this.getVideoCards();
                            break;
                        case G.a.Channels:
                            if (!this.props.liveResults || 0 === this.props.liveResults.totalHits) return this.getNoResultsMessage();
                            t = [v.createElement(B.U, {
                                className: "search-result-view__live",
                                margin: {
                                    x: 1
                                },
                                key: "live_drill-down-container"
                            }, v.createElement(B.N, null, this.getLiveCards()))];
                            break;
                        default:
                            return this.getNoResultsMessage()
                    }
                    return v.createElement(V, null, t)
                }, t.prototype.getCategoryTitle = function(e) {
                    switch (e) {
                        case G.a.Games:
                            return Object(b.d)("Games", "SearchResultPanel");
                        case G.a.Users:
                            return Object(b.d)("Channels", "SearchResultPanel");
                        case G.a.Communities:
                            return Object(b.d)("Communities", "SearchResultPanel");
                        case G.a.Videos:
                            return Object(b.d)("Videos", "SearchResultPanel");
                        case G.a.Channels:
                            return Object(b.d)("Live", "SearchResultPanel");
                        default:
                            return Object(b.d)("Top Results", "SearchResultPanel")
                    }
                }, t.prototype.getNoResultsMessage = function() {
                    return v.createElement(B.U, {
                        display: B.H.Flex,
                        flexDirection: B.J.Column,
                        justifyContent: B.T.Center,
                        alignItems: B.c.Center,
                        className: "notice-wrap aspect__fill"
                    }, v.createElement(B.U, {
                        className: "notice-wrap__visual",
                        textAlign: B._22.Center,
                        flexShrink: 1
                    }, v.createElement(B._8, {
                        asset: B._9.SearchNoResults,
                        width: 46,
                        height: 48
                    })), v.createElement("h4", {
                        className: "notice-wrap__title flex__item",
                        "data-test-selector": "panel-body-no-results"
                    }, Object(b.d)("No results found", "SearchResultPanel")), v.createElement("p", {
                        className: "notice-wrap__text flex__item"
                    }, Object(b.d)("They're probably in another castle", "SearchResultPanel")))
                }, t.prototype.getErrorMessage = function() {
                    return v.createElement(B.U, {
                        display: B.H.Flex,
                        flexDirection: B.J.Column,
                        justifyContent: B.T.Center,
                        alignItems: B.c.Center,
                        className: "notice-wrap aspect__fill"
                    }, v.createElement(B.U, {
                        className: "notice-wrap__visual",
                        textAlign: B._22.Center,
                        flexShrink: 1
                    }, v.createElement(B._8, {
                        asset: B._9.DeadGlitch,
                        width: 46,
                        height: 48
                    })), v.createElement("h4", {
                        "data-test-selector": "search-error-message",
                        className: "notice-wrap__title flex__item"
                    }, Object(b.d)("Search is not available at this time", "SearchResultPanel")), v.createElement("p", {
                        className: "notice-wrap__text flex__item"
                    }, Object(b.d)("Please try again later", "SearchResultPanel")))
                }, t
            }(v.Component)),
            J = (n(413), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.state = {
                        isAnimating: !1,
                        currentCategory: t.currentCategory
                    }, n
                }
                return g.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    var t = this;
                    e.currentCategory && e.currentCategory !== this.props.currentCategory && this.setState({
                        currentCategory: e.currentCategory
                    }), this.props.isVisible !== e.isVisible && (this.animationTimeout && window.clearTimeout(this.animationTimeout), this.setState({
                        isAnimating: !0
                    }), this.animationTimeout = window.setTimeout(function() {
                        t.setState({
                            isAnimating: !1
                        })
                    }, 300))
                }, t.prototype.componentWillUnmount = function() {
                    this.animationTimeout && window.clearTimeout(this.animationTimeout)
                }, t.prototype.render = function() {
                    if (!this.state.currentCategory) return null;
                    var e = this.getAssetName(this.state.currentCategory);
                    return this.props.isVisible || this.state.isAnimating ? v.createElement(B.U, {
                        className: "search-tag"
                    }, v.createElement(B.e, {
                        enabled: !0,
                        type: this.props.isVisible ? B.i.BounceIn : B.i.BounceOut
                    }, v.createElement(B._20, {
                        label: this.state.currentCategory,
                        icon: e,
                        onClose: this.props.onClick,
                        "data-test-selector": "filter-icon",
                        "data-a-target": "nav-search-clear"
                    }))) : null
                }, t.prototype.getAssetName = function(e) {
                    switch (e) {
                        case G.a.Games:
                            return B._9.NavGames;
                        case G.a.Users:
                            return B._9.NavProfile;
                        case G.a.Communities:
                            return B._9.Communities;
                        case G.a.Videos:
                            return B._9.NavVideos;
                        case G.a.Channels:
                        default:
                            return B._9.NavChannels
                    }
                }, t
            }(v.Component)),
            K = (n(414), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleChange = function(e) {
                        t.props.onChange(e.target.value)
                    }, t.categoryTagClicked = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.props.onCategorySelected(null)
                    }, t
                }
                return g.__extends(t, e), t.prototype.render = function() {
                    return v.createElement("div", null, v.createElement("div", {
                        className: "top-nav__search-container",
                        "data-click-out-id": "nav-search-balloon"
                    }, v.createElement(I.a, {
                        onClickOut: this.props.onClickOut
                    }, v.createElement(B._11, {
                        onChange: this.handleChange,
                        onFocus: this.props.onFocus,
                        onKeyDown: this.props.onKeyDown,
                        placeholder: Object(b.d)("Search", "NavSearch"),
                        id: "nav-search-input",
                        "data-a-target": "nav-search-input",
                        spellCheck: !1
                    }), v.createElement(B.p, {
                        direction: B.q.Bottom,
                        noTail: !0,
                        size: B.r.Large,
                        show: this.props.isOpen,
                        offsetY: "5px",
                        "data-a-target": "nav-search-balloon"
                    }, v.createElement($, {
                        isOpen: this.props.isOpen,
                        gameResults: this.props.gameResults,
                        userResults: this.props.userResults,
                        communityResults: this.props.communityResults,
                        videoResults: this.props.videoResults,
                        liveResults: this.props.liveResults,
                        isErrored: this.props.isErrored,
                        isWaiting: this.props.isWaiting,
                        onResultSelected: this.props.onResultSelected,
                        onCategorySelected: this.props.onCategorySelected,
                        currentCategory: this.props.currentCategory,
                        onVideoOptionsChange: this.props.onVideoOptionsChange,
                        loadMore: this.props.loadMore,
                        onKeyDown: this.props.onKeyDown
                    })), v.createElement(J, {
                        isVisible: this.props.isOpen && !!this.props.currentCategory,
                        currentCategory: this.props.currentCategory,
                        onClick: this.categoryTagClicked
                    }))))
                }, t
            }(v.Component)),
            Q = 50,
            Y = function(e) {
                function t() {
                    var t = e.call(this) || this;
                    return t.onCategorySelected = function(e) {
                        t.setState(g.__assign({}, t.getEmptyState(), {
                            term: t.state.term,
                            currentCategory: e,
                            isOpen: !0,
                            isWaiting: !0
                        }), function() {
                            t.doSearch(t.state.term)
                        })
                    }, t.onChange = function(e) {
                        if (t.inputTimer && (clearTimeout(t.inputTimer), t.inputTimer = 0), !e) return void t.setState(t.getEmptyState());
                        t.setState({
                            topGameResults: null,
                            topUserResults: null,
                            topLiveResults: null,
                            topVideoResults: null,
                            topCommunityResults: null,
                            isWaiting: !0
                        }), t.inputTimer = setTimeout(function() {
                            return t.doSearch(e)
                        }, Q)
                    }, t.onHistoryChange = function() {
                        t.state.isOpen && t.setState({
                            isOpen: !1
                        })
                    }, t.onClickOut = function() {
                        t.state.isOpen && t.setState({
                            isOpen: !1
                        })
                    }, t.onFocus = function() {
                        t.state.term && !t.state.isOpen && t.setState({
                            isOpen: !0
                        })
                    }, t.onKeyDown = function(e) {
                        t.state.term && (e.keyCode === N.a.Esc ? t.setState({
                            isOpen: !1
                        }) : e.keyCode === N.a.Up ? t.focusNext(-1) : e.keyCode === N.a.Down && t.focusNext(1))
                    }, t.onResultSelected = function() {
                        t.setState({
                            isOpen: !1
                        })
                    }, t.loadMore = function() {
                        return g.__awaiter(t, void 0, void 0, function() {
                            var e, t, n, i;
                            return g.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        if (this.state.queryID || null === this.state.currentCategory || !0 === this.state.exhaustedHits) return [2];
                                        e = this.state.currentPage + 1, a.label = 1;
                                    case 1:
                                        return a.trys.push([1, 3, , 4]), [4, this.searchClient.queryForType(this.state.currentCategory, this.state.term, "", {
                                            page: e
                                        })];
                                    case 2:
                                        return t = a.sent(), [3, 4];
                                    case 3:
                                        return n = a.sent(), b.i.error(n, "Algolia page search failed"), this.setState(g.__assign({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            isOpen: !0
                                        })), [2];
                                    case 4:
                                        return t ? (i = Object(U.b)({
                                            searchResults: t,
                                            append: e > 0,
                                            currentGameResults: this.state.currentGameResults,
                                            currentUserResults: this.state.currentUserResults,
                                            currentCommunityResults: this.state.currentCommunityResults,
                                            currentVideoResults: this.state.currentVideoResults,
                                            currentLiveResults: this.state.currentLiveResults
                                        }), this.setState(g.__assign({}, i, {
                                            term: this.state.term,
                                            isOpen: !0,
                                            isWaiting: !1,
                                            currentPage: e,
                                            exhaustedHits: i.exhaustedHits
                                        })), [2]) : (this.setState(g.__assign({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            isOpen: !0
                                        })), [2])
                                }
                            })
                        })
                    }, t.changeVideoOptions = function(e) {
                        return g.__awaiter(t, void 0, void 0, function() {
                            var t, n, i;
                            return g.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        t = O.a(), a.label = 1;
                                    case 1:
                                        return a.trys.push([1, 3, , 4]), [4, this.searchClient.queryVideos(this.state.term, t, e)];
                                    case 2:
                                        return n = a.sent(), n.hits && this.setState({
                                            currentVideoResults: {
                                                totalHits: n.totalHits,
                                                results: n.hits.map(U.a)
                                            },
                                            queryID: ""
                                        }), [3, 4];
                                    case 3:
                                        return i = a.sent(), b.i.error(i, "Algolia video search failed"), this.setState({
                                            isErrored: !0
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.searchClient = new D.a(b.a.algoliaApplicationID, b.a.algoliaAPIKey), t.state = t.getEmptyState(), t
                }
                return g.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive(), this.props.history.listen(this.onHistoryChange)
                }, t.prototype.componentDidUpdate = function() {
                    !this.state.focusSelectable || this.state.queryID || this.inputTimer || (this.focusNext(1), this.setState({
                        focusSelectable: !1
                    }))
                }, t.prototype.render = function() {
                    return v.createElement(K, {
                        onChange: this.onChange,
                        onClickOut: this.onClickOut,
                        onFocus: this.onFocus,
                        onKeyDown: this.onKeyDown,
                        onResultSelected: this.onResultSelected,
                        gameResults: this.state.currentGameResults,
                        userResults: this.state.currentUserResults,
                        communityResults: this.state.currentCommunityResults,
                        videoResults: this.state.currentVideoResults,
                        liveResults: this.state.currentLiveResults,
                        isOpen: this.state.isOpen,
                        isErrored: this.state.isErrored,
                        isWaiting: this.state.isWaiting,
                        onCategorySelected: this.onCategorySelected,
                        currentCategory: this.state.currentCategory,
                        onVideoOptionsChange: this.changeVideoOptions,
                        loadMore: this.loadMore
                    })
                }, t.prototype.focusNext = function(e) {
                    var t, n = document.querySelectorAll("[data-ts_selectable=true]"),
                        i = document.activeElement,
                        a = Array.prototype.indexOf.call(n, i);
                    if (t = a < 0 ? e > 0 ? 0 : n.length - 1 : a + e, t < 0 && (t = 0), !(t >= n.length)) {
                        var r = n.item(t);
                        r.focus(), r.tabIndex = 0, this.state.currentFocus && (this.state.currentFocus.tabIndex = -1), this.setState({
                            currentFocus: r
                        })
                    }
                }, t.prototype.doSearch = function(e) {
                    return g.__awaiter(this, void 0, void 0, function() {
                        var t, n, i, a, r, s;
                        return g.__generator(this, function(o) {
                            switch (o.label) {
                                case 0:
                                    this.inputTimer = 0, t = -1, n = O.a(), i = "INPUT" === document.activeElement.tagName, this.setState({
                                        queryID: n,
                                        focusSelectable: !i && !!this.state.currentFocus
                                    }), o.label = 1;
                                case 1:
                                    return o.trys.push([1, 6, , 7]), this.state.currentCategory && null !== this.state.currentCategory ? (t = 0, [4, this.searchClient.queryForType(this.state.currentCategory, e, n)]) : [3, 3];
                                case 2:
                                    return a = o.sent(), [3, 5];
                                case 3:
                                    return this.state.topGameResults && this.state.topUserResults && this.state.topLiveResults && this.state.topVideoResults && this.state.topCommunityResults ? (this.setState({
                                        currentGameResults: this.state.topGameResults,
                                        currentUserResults: this.state.topUserResults,
                                        currentLiveResults: this.state.topLiveResults,
                                        currentVideoResults: this.state.topVideoResults,
                                        currentCommunityResults: this.state.topCommunityResults,
                                        queryID: "",
                                        term: e,
                                        isOpen: !0,
                                        isWaiting: !1,
                                        currentPage: t
                                    }), [2]) : [4, this.searchClient.queryTopResults(e, n)];
                                case 4:
                                    a = o.sent(), o.label = 5;
                                case 5:
                                    return [3, 7];
                                case 6:
                                    return r = o.sent(), b.i.error(r, "Algolia top results search failed"), this.setState(g.__assign({}, this.getEmptyState(), {
                                        isErrored: !0,
                                        isOpen: !0,
                                        term: e
                                    })), [2];
                                case 7:
                                    return a ? this.state.queryID !== a.id ? [2] : (s = Object(U.b)({
                                        searchResults: a,
                                        append: !1,
                                        currentGameResults: this.state.currentGameResults,
                                        currentUserResults: this.state.currentUserResults,
                                        currentCommunityResults: this.state.currentCommunityResults,
                                        currentVideoResults: this.state.currentVideoResults,
                                        currentLiveResults: this.state.currentLiveResults
                                    }), this.state.currentCategory && null === this.state.currentCategory && (s = g.__assign({}, s, {
                                        topGameResults: s.currentGameResults,
                                        topUserResults: s.currentUserResults,
                                        topLiveResults: s.currentLiveResults,
                                        topVideoResults: s.currentVideoResults,
                                        topCommunityResults: s.currentCommunityResults,
                                        exhaustedHits: s.exhaustedHits
                                    })), this.setState(function(n) {
                                        return g.__assign({}, n, s, {
                                            queryID: "",
                                            term: e,
                                            isOpen: !0,
                                            isWaiting: !1,
                                            currentPage: t
                                        })
                                    }), [2]) : (this.setState(g.__assign({}, this.getEmptyState(), {
                                        isErrored: !0,
                                        isOpen: !0,
                                        term: e
                                    })), [2])
                            }
                        })
                    })
                }, t.prototype.getEmptyState = function() {
                    return {
                        term: "",
                        currentGameResults: {
                            totalHits: 0,
                            results: []
                        },
                        currentUserResults: {
                            totalHits: 0,
                            results: []
                        },
                        currentLiveResults: {
                            totalHits: 0,
                            results: []
                        },
                        currentCommunityResults: {
                            totalHits: 0,
                            results: []
                        },
                        currentVideoResults: {
                            totalHits: 0,
                            results: []
                        },
                        isOpen: !1,
                        isErrored: !1,
                        queryID: "",
                        isWaiting: !1,
                        currentCategory: null,
                        currentPage: -1,
                        focusSelectable: !1,
                        exhaustedHits: !1
                    }
                }, t = g.__decorate([Object(C.c)("NavSearch")], t)
            }(v.Component),
            X = Object(w.e)(Y),
            Z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onLoginClick = function(e) {
                        e.preventDefault(), t.props.login()
                    }, t.onSignUpClick = function(e) {
                        e.preventDefault(), t.props.signup()
                    }, t
                }
                return g.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return v.createElement(B.U, {
                        className: "anon-user",
                        flexWrap: B.K.NoWrap,
                        display: B.H.Flex,
                        margin: {
                            left: 1
                        },
                        "data-a-target": "user-card"
                    }, v.createElement(B.U, {
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B.u, {
                        onClick: this.onLoginClick,
                        "data-a-target": "login-button"
                    }, Object(b.d)("Log in", "top-nav"))), v.createElement(B.U, {
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B.u, {
                        onClick: this.onSignUpClick,
                        "data-a-target": "signup-button"
                    }, Object(b.d)("Sign up", "top-nav"))))
                }, t = g.__decorate([Object(C.c)("AnonUser")], t)
            }(v.Component),
            ee = Z,
            te = n(415),
            ne = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return g.__extends(t, e), t.prototype.render = function() {
                    var e = !1;
                    if (this.props.data) {
                        if (this.props.data.loading || this.props.data.error) return null;
                        e = !!this.props.data.currentUser && this.props.data.currentUser.hasPrime
                    }
                    return !this.props.isLoggedIn || e ? v.createElement(d.b, {
                        to: {
                            pathname: "/store/merch",
                            state: {
                                medium: _.PageviewMedium.TopNav,
                                content: _.PageviewContent.Games
                            }
                        },
                        className: "top-nav__nav-link",
                        "data-a-target": "store-link",
                        activeClassName: "active"
                    }, Object(b.d)("Store", "TopNavStore")) : null
                }, t = g.__decorate([Object(A.a)(te, {
                    skip: function(e) {
                        return !e.isLoggedIn
                    }
                }), Object(C.c)("TopNavStoreComponent", {
                    autoReportInteractive: !0
                })], t)
            }(v.Component),
            ie = ne,
            ae = Object(u.a)(a)(ie),
            re = n(106),
            se = n(133),
            oe = n(416),
            le = Object(F.a)("/products/turbo?ref=top_nav"),
            ce = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return g.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.props.data.loading || this.props.data.error) return null;
                    var e = this.props.data.requestInfo && !Object(re.b)(this.props.data.requestInfo.countryCode),
                        t = !this.props.data.currentUser || !this.props.data.currentUser.hasTurbo;
                    if (e && t) return v.createElement("a", {
                        href: le,
                        target: "_blank",
                        className: "top-nav__nav-link",
                        "data-a-target": "try-prime-link"
                    }, Object(b.d)("Go Turbo", "TopNavUpsell"));
                    if (!this.props.data.currentUser || !this.props.data.currentUser.hasPrime) {
                        var n = Object(se.d)(se.b, window.location.pathname.substring(1));
                        return v.createElement("a", {
                            href: n,
                            target: "_blank",
                            className: "top-nav__nav-link",
                            "data-a-target": "try-prime-link"
                        }, Object(b.d)("Try Prime", "TopNavUpsell"))
                    }
                    return null
                }, t = g.__decorate([Object(A.a)(oe), Object(C.c)("TopNavUpsellComponent")], t)
            }(v.Component),
            ue = ce,
            de = n(87),
            pe = n(107),
            me = n(50),
            he = n(38),
            fe = n(20),
            ge = n(30),
            ve = n(136),
            be = n(52),
            ke = n(132),
            ye = n(51),
            _e = function() {
                return v.createElement(B.U, {
                    display: B.H.Flex,
                    flexGrow: 1,
                    alignItems: B.c.Center,
                    fullHeight: !0,
                    className: "top-nav__user-card",
                    "data-a-target": "user-card"
                }, v.createElement(B.U, {
                    display: B.H.Flex,
                    flexWrap: B.K.NoWrap,
                    alignItems: B.c.Center,
                    flexGrow: 1,
                    padding: {
                        right: 1
                    },
                    fullHeight: !0,
                    className: "top-nav__user-card-wrapper"
                }, v.createElement(B.U, {
                    margin: {
                        x: 1
                    }
                }, v.createElement(C.a, {
                    size: 30,
                    imageSrc: b.a.defaultAvatarURL,
                    imageAlt: Object(b.d)("User Avatar", "UserError"),
                    "data-a-target": "top-nav-avatar"
                })), v.createElement(B.U, {
                    flexGrow: 1
                }, v.createElement(B._17, {
                    color: B.F.Base,
                    className: "top-nav__username"
                }, ""))))
            },
            Ce = function() {
                return v.createElement(B.U, {
                    display: B.H.Flex,
                    flexGrow: 1,
                    alignItems: B.c.Center,
                    fullHeight: !0,
                    className: "top-nav__user-card top-nav__user-card--placeholder",
                    "data-a-target": "user-card"
                }, v.createElement(B.U, {
                    display: B.H.Flex,
                    flexWrap: B.K.NoWrap,
                    alignItems: B.c.Center,
                    flexGrow: 1,
                    padding: {
                        right: 1
                    },
                    fullHeight: !0,
                    className: "top-nav__user-card-wrapper"
                }, v.createElement(B.U, {
                    margin: {
                        x: 1
                    }
                }, v.createElement("div", {
                    className: "top-nav__user-card-placeholder-avatar"
                })), v.createElement(B.U, {
                    flexGrow: 1,
                    display: B.H.Flex,
                    flexDirection: B.J.Column,
                    justifyContent: B.T.Center
                }, v.createElement(B._17, {
                    color: B.F.Base,
                    className: "top-nav__username"
                }, v.createElement("div", {
                    className: "top-nav__user-card-placeholder-name"
                })), v.createElement(B.U, {
                    className: "top-nav__user-status"
                }, v.createElement(B.U, {
                    ellipsis: !0,
                    display: B.H.Flex,
                    alignItems: B.c.Center
                }, v.createElement(B.U, {
                    display: B.H.InlineFlex,
                    margin: {
                        right: .5
                    }
                }, v.createElement("div", {
                    className: "top-nav__user-card-placeholder-presence"
                })), v.createElement(B._17, {
                    display: B.H.InlineFlex,
                    color: B.F.Alt
                }, v.createElement("div", {
                    className: "top-nav__user-card-placeholder-status"
                }))))), v.createElement(B.U, {
                    display: B.H.Flex,
                    flexShrink: 0,
                    className: "top-nav__user-card-dropdown-arrow top-nav__user-card-dropdown-arrow--presence",
                    "data-a-target": "top-nav-dropdown-arrow"
                }, v.createElement(B._8, {
                    asset: B._9.GlyphArrDown
                }))))
            },
            Se = n(31),
            Ee = n(71),
            we = (n(419), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.onCardClick = function() {
                        n.setState({
                            dropdownOpen: !n.state.dropdownOpen
                        })
                    }, n.onClickOut = function() {
                        n.setState({
                            dropdownOpen: !1
                        })
                    }, n.onLogoutClick = function(e) {
                        e.preventDefault(), n.props.logout()
                    }, n.onShareCheckboxClick = function() {
                        n.props.toggleShareActivity()
                    }, n.onDarkModeCheckboxClick = function() {
                        var e = n.props.theme === Se.a.Dark ? Se.a.Light : Se.a.Dark;
                        n.props.changeTheme(e, ke.a.UserMenu)
                    }, n.onOnlineClick = function(e) {
                        e && e.stopPropagation(), n.props.toggleVisibility(me.a.Online)
                    }, n.onInvisibleClick = function(e) {
                        e && e.stopPropagation(), n.props.toggleVisibility(me.a.Offline)
                    }, n.unsubscribeFromHistory = n.props.history.listen(function() {
                        n.setState({
                            dropdownOpen: !1
                        })
                    }), n.state = {
                        dropdownOpen: !1
                    }, n
                }
                return g.__extends(t, e), t.prototype.componentWillUnmount = function() {
                    this.unsubscribeFromHistory()
                }, t.prototype.render = function() {
                    var e = this.props.gqlData.currentUser.profileImageURL || b.a.defaultAvatarURL,
                        t = x("top-nav__dropdown-wrapper", {
                            toggled: this.state.dropdownOpen
                        }),
                        n = x("top-nav__user-card", "theme--dark", {
                            "top-nav__dropdown-open": this.state.dropdownOpen
                        }),
                        i = this.state.dropdownOpen ? "dropdown-down" : "dropdown-up",
                        a = this.state.dropdownOpen ? "dropdown-down" : "dropdown-up",
                        r = this.props.gqlData.currentUser.availability === me.a.Offline ? B.F.Base : B.F.Alt2,
                        s = this.props.gqlData.currentUser.availability === me.a.Online ? B.F.Base : B.F.Alt2,
                        o = this.props.gqlData.currentUser.settings.isSharingActivity,
                        l = this.props.gqlData.currentUser.availability || this.props.gqlData.currentUser.settings.visibility,
                        c = v.createElement(B.U, {
                            margin: {
                                x: 2,
                                bottom: 1
                            }
                        }, v.createElement(B.E, {
                            id: "dark-mode-toggle",
                            label: Object(b.d)("Dark Mode", "TopNavUser"),
                            "data-a-target": "dark-mode-toggle",
                            "data-test-selector": "dark-mode-toggle",
                            "data-a-value": this.props.theme,
                            checked: this.props.theme === Se.a.Dark,
                            onChange: this.onDarkModeCheckboxClick
                        }));
                    return v.createElement(B.U, {
                        position: B._2.Relative,
                        display: B.H.Flex,
                        flexGrow: 1,
                        alignItems: B.c.Stretch,
                        fullHeight: !0
                    }, v.createElement(I.a, {
                        onClickOut: this.onClickOut,
                        className: n
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        flexGrow: 1,
                        alignItems: B.c.Stretch,
                        fullHeight: !0
                    }, v.createElement(B.S, {
                        onClick: this.onCardClick,
                        "data-a-target": "user-menu-toggle",
                        "data-test-selector": "user-menu-toggle"
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        flexWrap: B.K.NoWrap,
                        alignItems: B.c.Center,
                        flexGrow: 1,
                        padding: {
                            right: 1
                        },
                        fullHeight: !0,
                        className: "top-nav__user-card-wrapper"
                    }, v.createElement(B.U, {
                        margin: {
                            x: 1
                        },
                        flexShrink: 0
                    }, v.createElement(B.U, {
                        className: "top-nav__user-card-avatar-container"
                    }, v.createElement(C.a, {
                        size: 30,
                        imageSrc: e,
                        imageAlt: "User avatar",
                        "data-a-target": "top-nav-avatar"
                    }))), v.createElement(B.U, {
                        flexGrow: 1,
                        flexShrink: 1,
                        flexDirection: B.J.Column
                    }, v.createElement(B._17, {
                        color: B.F.Base,
                        className: "top-nav__username",
                        "data-a-target": "user-display-name"
                    }, this.props.gqlData.currentUser.displayName), v.createElement(B.U, {
                        className: "top-nav__user-status",
                        ellipsis: !0,
                        fullWidth: !0,
                        alignItems: B.c.Center,
                        display: B.H.Flex,
                        flexWrap: B.K.NoWrap
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        flexShrink: 0,
                        margin: {
                            right: .5
                        }
                    }, v.createElement(Ee.a, {
                        availability: l
                    })), v.createElement(B._17, {
                        ellipsis: !0,
                        color: B.F.Alt
                    }, v.createElement(B._21, {
                        type: B._26.Span,
                        noWrap: !0,
                        "data-a-target": "online-status"
                    }, this.props.gqlData.currentUser && v.createElement(Ee.b, {
                        activity: this.props.gqlData.currentUser.activity,
                        availability: l === me.a.Offline ? me.a.Invisible : l
                    }))))), v.createElement(B._17, {
                        display: B.H.Flex,
                        flexShrink: 0,
                        color: B.F.Base,
                        className: "user-card-wrapper__dropdown-arrow",
                        "data-a-target": "top-nav-dropdown-arrow"
                    }, v.createElement(B._8, {
                        asset: B._9.GlyphArrDown
                    }))))), v.createElement(B._17, {
                        fullWidth: !0,
                        overflow: B.Y.Hidden,
                        position: B._2.Absolute,
                        className: t,
                        background: B.m.Base,
                        color: B.F.Base,
                        "data-a-target": i,
                        "data-test-selector": a
                    }, v.createElement(B._17, {
                        padding: {
                            y: 1
                        },
                        background: B.m.Alt
                    }, v.createElement(B.S, {
                        onClick: this.onOnlineClick,
                        "data-a-target": "online-dropdown-button",
                        "data-test-selector": "online-dropdown-button"
                    }, v.createElement(B._17, {
                        color: B.F.Alt2,
                        display: B.H.Flex,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        alignItems: B.c.Center,
                        display: B.H.InlineFlex,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._3, {
                        status: B._4.Online
                    })), v.createElement(B._21, {
                        bold: this.props.gqlData.currentUser.availability === me.a.Online,
                        color: s
                    }, Object(b.d)("Online", "TopNavUser")))), v.createElement(B.S, {
                        onClick: this.onInvisibleClick,
                        "data-a-target": "invisible-dropdown-button",
                        "data-test-selector": "invisible-dropdown-button"
                    }, v.createElement(B._17, {
                        color: B.F.Base,
                        display: B.H.Flex,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        alignItems: B.c.Center,
                        display: B.H.InlineFlex,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._3, {
                        status: B._4.Invisible
                    })), v.createElement(B._21, {
                        bold: this.props.gqlData.currentUser.availability === me.a.Offline,
                        color: r
                    }, Object(b.d)("Invisible", "TopNavUser")))), v.createElement(B.U, {
                        margin: {
                            x: 2,
                            bottom: 1,
                            top: .5
                        }
                    }, v.createElement(B.E, {
                        id: "share-activity-toggle",
                        label: Object(b.d)("Share my activity", "TopNavUser"),
                        "data-a-target": "share-activity-toggle",
                        "data-test-selector": "share-activity-toggle",
                        "data-a-value": o,
                        checked: o,
                        onChange: this.onShareCheckboxClick,
                        disabled: this.props.gqlData.currentUser.availability === me.a.Offline
                    }), v.createElement(B._21, {
                        type: B._26.Span,
                        color: B.F.Alt
                    }, Object(b.d)("Share what you're watching, playing, or streaming with your friends.", "TopNavUser"))), v.createElement(B._17, {
                        borderBottom: !0,
                        margin: {
                            x: 2,
                            y: 1
                        }
                    }), c), v.createElement(B.U, {
                        margin: {
                            y: 1
                        }
                    }, v.createElement(B.S, {
                        linkTo: {
                            pathname: "/" + this.props.gqlData.currentUser.login,
                            state: {
                                content: "self-channel",
                                medium: "twitch-topnav"
                            }
                        },
                        "data-a-target": "channel-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavMyChannel,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Channel", "TopNavUser")))), v.createElement(B.S, {
                        linkTo: Object(F.a)("/" + this.props.gqlData.currentUser.login + "/manager/past_broadcasts"),
                        "data-a-target": "video-manager-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavManager,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Video Manager", "TopNavUser")))), v.createElement(B.S, {
                        linkTo: Object(F.a)("/" + this.props.gqlData.currentUser.login + "/dashboard"),
                        "data-a-target": "dashboard-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavDashboard,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Dashboard", "TopNavUser")))), v.createElement(B._17, {
                        borderBottom: !0,
                        margin: {
                            x: 2,
                            y: 1
                        }
                    }), v.createElement(B.S, {
                        targetBlank: Object(F.b)(),
                        linkTo: Object(F.a)("/friends"),
                        "data-a-target": "friends-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.Friends,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Friends", "TopNavUser")))), v.createElement(B.S, {
                        targetBlank: Object(F.b)(),
                        linkTo: Object(F.a)("/messages/inbox"),
                        "data-a-target": "inbox-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavMessages,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Messages", "TopNavUser")))), v.createElement(B.S, {
                        targetBlank: Object(F.b)(),
                        linkTo: Object(F.a)("/subscriptions"),
                        "data-a-target": "subscriptions-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavBackpack,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Subscriptions", "TopNavUser")))), v.createElement(B.S, {
                        targetBlank: Object(F.b)(),
                        linkTo: Object(F.a)("/inventory"),
                        "data-a-target": "inventory-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.Crate,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Inventory", "TopNavUser")))), v.createElement(B._17, {
                        borderBottom: !0,
                        margin: {
                            x: 2,
                            y: 1
                        }
                    }), v.createElement(B.S, {
                        targetBlank: Object(F.b)(),
                        linkTo: Object(F.a)("/settings/profile"),
                        "data-a-target": "settings-dropdown-link"
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavSettings,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Settings", "TopNavUser")))), v.createElement(B.S, {
                        "data-a-target": "dropdown-logout",
                        onClick: this.onLogoutClick
                    }, v.createElement(B._17, {
                        color: B.F.Alt,
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        padding: {
                            x: 2,
                            y: .5
                        }
                    }, v.createElement(B.U, {
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        margin: {
                            right: 1
                        }
                    }, v.createElement(B._8, {
                        asset: B._9.NavLogout,
                        height: 18,
                        width: 18
                    })), v.createElement(B._21, null, Object(b.d)("Log Out", "TopNavUser"))))))))
                }, t
            }(v.Component)),
            Ne = Object(w.e)(we),
            Oe = n(420),
            De = n(421),
            Ue = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.isSettingNewSession = !1, t.dataIsReady = function(e) {
                        return e.data && !e.data.loading && !e.data.error
                    }, t.setUserToOffline = function() {
                        Object(ve.c)(me.a.Offline), Object(ve.a)()
                    }, t.toggleShareActivity = function() {
                        var e = !t.props.data.currentUser.settings.isSharingActivity,
                            n = g.__assign({}, Object(fe.a)({
                                isSharingActivity: e
                            }), {
                                optimisticResponse: {
                                    updateIsSharingActivity: {
                                        __typename: "UpdateIsSharingActivityPayload",
                                        user: {
                                            __typename: "User",
                                            id: t.props.data.currentUser.id,
                                            settings: {
                                                isSharingActivity: e,
                                                __typename: "UserSettings"
                                            }
                                        }
                                    }
                                }
                            });
                        t.props.updateIsSharingActivity(n)
                    }, t.toggleVisibility = function(e) {
                        t.dataIsReady(t.props) && Object(ve.e)(e)
                    }, t.setNewSession = function() {
                        return g.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return g.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        if (this.isSettingNewSession) return [2];
                                        this.isSettingNewSession = !0, t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, 4, 5]), [4, Object(ve.g)()];
                                    case 2:
                                        return t.sent(), this.props.initialUserAvailabilitySet(), [3, 5];
                                    case 3:
                                        return e = t.sent(), b.i.warn("Failed to set new user availability session.", e), [3, 5];
                                    case 4:
                                        return this.isSettingNewSession = !1, [7];
                                    case 5:
                                        return [2]
                                }
                            })
                        })
                    }, t.maybeRefetchData = function(e) {
                        var n = e.pubsub.messages.presence;
                        n && e.data.currentUser.id && n.data.user_id === +e.data.currentUser.id && t.props.pubsub.messages.presence !== n && e.data.refetch()
                    }, t
                }
                return g.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.maybeRefetchData(this.props), this.props.firstPageLoaded && this.dataIsReady(this.props) && !this.props.initialUserAvailabilityIsSet && this.setNewSession(), this.reportInteractive()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.maybeRefetchData(e), e.firstPageLoaded && this.dataIsReady(e) && !e.initialUserAvailabilityIsSet && this.setNewSession()
                }, t.prototype.componentDidUpdate = function() {
                    this.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    this.setUserToOffline()
                }, t.prototype.render = function() {
                    return this.props.data && !this.props.data.loading && this.props.data.currentUser ? this.props.data.error ? v.createElement(_e, null) : v.createElement(Ne, {
                        gqlData: this.props.data,
                        toggleShareActivity: this.toggleShareActivity,
                        toggleVisibility: this.toggleVisibility,
                        changeTheme: this.props.changeTheme,
                        firstPageLoaded: this.props.firstPageLoaded,
                        logout: this.props.logout,
                        theme: this.props.theme
                    }) : v.createElement(Ce, null)
                }, t.prototype.reportInteractive = function() {
                    !this.props.data || this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                }, t = g.__decorate([Object(A.a)(Oe), Object(A.a)(De, {
                    name: "updateIsSharingActivity"
                }), Object(pe.a)(function(e) {
                    return {
                        query: Oe,
                        topic: e.data.currentUser ? Object(ge.f)(e.data.currentUser.id) : "",
                        skip: !(e.data && !e.data.loading && !e.data.error && e.data.currentUser),
                        type: he.c.PresenceSettings,
                        mutator: function(e, t) {
                            return t.currentUser.settings.visibility = e.data.availability_override.toUpperCase(), t.currentUser.settings.isSharingActivity = e.data.share_activity, t
                        }
                    }
                }), Object(de.a)([{
                    topic: function(e) {
                        return Object(ge.f)(e.data.currentUser.id)
                    },
                    mapMessageTypesToProps: (c = {}, c[he.c.Presence] = "presence", c),
                    skip: function(e) {
                        return !(e.data && !e.data.loading && !e.data.error && e.data.currentUser)
                    }
                }]), Object(C.c)("User")], t)
            }(v.Component),
            Ie = Object(u.a)(r, s)(Object(d.f)(Ue)),
            xe = n(387),
            Te = (n(439), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderOnsiteNotifications = function() {
                        return t.props.isLoggedIn ? v.createElement(B.U, {
                            flexGrow: 0,
                            alignSelf: B.d.Center,
                            flexWrap: B.K.NoWrap,
                            padding: {
                                left: .5,
                                right: 1
                            },
                            flexShrink: 0
                        }, v.createElement(E, null)) : null
                    }, t.renderTwitchPrimeCrown = function(e) {
                        return v.createElement(B.U, {
                            className: "top-nav__prime",
                            flexGrow: 0,
                            flexShrink: 0,
                            padding: {
                                x: .5
                            },
                            alignSelf: B.d.Center,
                            flexWrap: B.K.NoWrap
                        }, !e && v.createElement(xe.b, null))
                    }, t.saveEllipsisRef = function(e) {
                        return t.ellipsisMenu = e
                    }, t.onNavigationClicked = function() {
                        t.ellipsisMenu.toggleBalloon(!1)
                    }, t.renderBrowseLink = function(e) {
                        var t = e.match,
                            n = t && "following" !== t.params.subpage,
                            i = Object(b.d)("Browse", "TopNav");
                        return v.createElement(d.a, {
                            className: "top-nav__nav-link" + (n ? " active" : ""),
                            "data-a-target": "browse-link",
                            title: i,
                            to: {
                                pathname: "/directory",
                                state: {
                                    medium: _.PageviewMedium.TopNav,
                                    content: _.PageviewContent.Games
                                }
                            }
                        }, i)
                    }, t
                }
                return g.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = null;
                    if (this.props.isLoggedIn) {
                        var t = Object(b.d)("Following", "TopNav");
                        e = v.createElement(d.b, {
                            activeClassName: "active",
                            to: {
                                pathname: "/directory/following",
                                state: {
                                    medium: _.PageviewMedium.TopNav,
                                    content: _.PageviewContent.Following
                                }
                            },
                            className: "top-nav__nav-link",
                            "data-a-target": "following-link",
                            title: t
                        }, t)
                    }
                    return v.createElement(B.P, {
                        position: B._2.Fixed,
                        attachTop: !0,
                        fullWidth: !0
                    }, v.createElement("nav", {
                        className: "top-nav",
                        "data-a-target": "top-nav-container",
                        style: {
                            height: "5rem"
                        }
                    }, v.createElement(B.U, {
                        className: "top-nav__menu",
                        display: B.H.Flex,
                        alignItems: B.c.Stretch,
                        flexWrap: B.K.NoWrap
                    }, v.createElement(B.P, {
                        display: B.H.InlineFlex,
                        alignItems: B.c.Center,
                        flexShrink: 0
                    }, v.createElement(d.a, {
                        to: {
                            pathname: "/",
                            state: {
                                medium: _.PageviewMedium.TopNav,
                                content: _.PageviewContent.Logo
                            }
                        },
                        className: "top-nav__home-link",
                        "data-a-target": "home-link"
                    }, v.createElement(B._8, {
                        asset: B._9.LogoTwitch,
                        width: 94,
                        height: 32
                    }))), v.createElement(B.U, {
                        className: "top-nav__nav-items-container",
                        display: B.H.Flex,
                        flexGrow: 1,
                        flexWrap: B.K.NoWrap,
                        flexShrink: 0
                    }, e, v.createElement(d.d, {
                        path: "/directory/:subpage?",
                        children: this.renderBrowseLink
                    }), v.createElement("a", {
                        href: "https://app.twitch.tv/download",
                        "data-a-target": "get-desktop-link",
                        className: "top-nav__nav-link"
                    }, Object(b.d)("Get Desktop", "TopNav")), v.createElement(ue, null), v.createElement(ae, null), v.createElement(B.U, {
                        className: "top-nav__ellipsis-button",
                        display: B.H.Flex,
                        alignItems: B.c.Center
                    }, v.createElement(y.a, {
                        ref: this.saveEllipsisRef
                    }, v.createElement(B.v, {
                        icon: B._9.NavMore,
                        overlay: !0,
                        ariaLabel: Object(b.d)("More nav items", "TopNav"),
                        "data-a-target": "ellipsis-button"
                    }), v.createElement(B.p, {
                        direction: B.q.Bottom,
                        tailOffset: 7,
                        size: B.r.Small,
                        "data-a-target": "overflow-menu"
                    }, v.createElement(B.U, {
                        padding: 1
                    }, v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/about",
                        "data-a-target": "about-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("About", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "http://twitchadvertising.tv/",
                        "data-a-target": "advertisers-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Advertisers", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://blog.twitch.tv/",
                        "data-a-target": "blog-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Blog", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/legal/community-guidelines",
                        "data-a-target": "community-guidelines-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Community Guidelines", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/cookie-policy",
                        "data-a-target": "cookie-policy-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Cookie Policy", "TopNav"))), v.createElement(B.S, {
                        onClick: this.onNavigationClicked,
                        linkTo: "/directory/game/Creative",
                        "data-a-target": "creative-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Creative", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://dev.twitch.tv/",
                        "data-a-target": "developers-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Developers", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://help.twitch.tv/",
                        "data-a-target": "help-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Help", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/jobs",
                        "data-a-target": "jobs-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Jobs", "TopNav"))), v.createElement(y.a, {
                        display: B.H.Block
                    }, v.createElement(B.S, {
                        "data-target": "language-selector-click",
                        "data-a-target": "language-selector"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Language", "TopNav"))), v.createElement(B.p, {
                        size: B.r.Small,
                        direction: B.q.Right,
                        offsetY: "4px",
                        offsetX: "20px",
                        "data-target": "language-selector",
                        "data-a-target": "language-selector-menu"
                    }, v.createElement(k.a, null))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://music.twitch.tv/",
                        "data-a-target": "music-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Music", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/partners",
                        "data-a-target": "partners-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Partners", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/press",
                        "data-a-target": "press-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Press", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://twitch.tv/p/security",
                        "data-a-target": "security-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Security", "TopNav"))), v.createElement(B.S, {
                        targetBlank: !0,
                        linkTo: "https://www.twitch.tv/p/terms-of-service",
                        "data-a-target": "terms-link"
                    }, v.createElement(B.U, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(b.d)("Terms", "TopNav"))))))), v.createElement(B.U, {
                        className: "top-nav__search",
                        flexGrow: 1,
                        alignSelf: B.d.Center
                    }, v.createElement(X, null))), this.renderTwitchPrimeCrown(), this.renderOnsiteNotifications(), v.createElement(B.U, {
                        className: "top-nav__nav-items-container",
                        display: B.H.Flex,
                        alignItems: B.c.Center,
                        flexWrap: B.K.NoWrap,
                        flexGrow: 0,
                        flexShrink: 0
                    }, this.props.isLoggedIn ? v.createElement(Ie, {
                        logout: this.props.logout
                    }) : v.createElement(ee, {
                        login: this.props.login,
                        signup: this.props.signup
                    })))))
                }, t = g.__decorate([Object(C.c)("TopNav")], t)
            }(v.Component)),
            Fe = Te,
            je = Object(d.f)(Object(u.a)(l, o)(Fe));
        n.d(t, "a", function() {
            return "5rem"
        }), n.d(t, "b", function() {
            return je
        })
    },
    397: function(e, t) {},
    399: function(e, t, n) {
        e.exports = n.p + "assets/friend_requests-aec9595d7e19764bc23d982c8c0f43d9.png"
    },
    400: function(e, t) {},
    401: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "FriendRequestsNotification_Clear"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clearUnreadFriendRequests"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "user"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 106
            }
        };
        n.loc.source = {
            body: "mutation FriendRequestsNotification_Clear {\n  clearUnreadFriendRequests {\n    user {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    402: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "FriendRequestsNotification_Query"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "incomingFriendRequests"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "first"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "1"
                                    }
                                }],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalUnreadCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 138
            }
        };
        n.loc.source = {
            body: "query FriendRequestsNotification_Query {\n  currentUser {\n    id\n    incomingFriendRequests(first: 1) {\n      totalUnreadCount\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    403: function(e, t) {},
    404: function(e, t) {},
    405: function(e, t) {},
    406: function(e, t) {},
    407: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Search_SearchGameResultCard_Game"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "name"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "game"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "name"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "boxArtURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "40"
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "height"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "55"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 128
            }
        };
        n.loc.source = {
            body: "query Search_SearchGameResultCard_Game($name: String!) {\n  game(name: $name) {\n    id\n    boxArtURL(width: 40 height: 55)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    408: function(e, t) {},
    409: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Search_SearchLiveResultCard_UserStream"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "stream"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "previewImageURL"
                                        },
                                        arguments: [{
                                            kind: "Argument",
                                            name: {
                                                kind: "Name",
                                                value: "width"
                                            },
                                            value: {
                                                kind: "IntValue",
                                                value: "156"
                                            }
                                        }, {
                                            kind: "Argument",
                                            name: {
                                                kind: "Name",
                                                value: "height"
                                            },
                                            value: {
                                                kind: "IntValue",
                                                value: "88"
                                            }
                                        }],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 174
            }
        };
        n.loc.source = {
            body: "query Search_SearchLiveResultCard_UserStream($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      previewImageURL(width: 156 height: 88)\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    410: function(e, t) {},
    411: function(e, t) {},
    412: function(e, t) {},
    413: function(e, t) {},
    414: function(e, t) {},
    415: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "TopNav_Store_CurrentUser"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 75
            }
        };
        n.loc.source = {
            body: "query TopNav_Store_CurrentUser {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    416: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "TopNav_PrimeUpsell_CurrentUser"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasTurbo"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "requestInfo"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "countryCode"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 130
            }
        };
        n.loc.source = {
            body: "query TopNav_PrimeUpsell_CurrentUser {\n  currentUser {\n    id\n    hasPrime\n    hasTurbo\n  }\n  requestInfo {\n    countryCode\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    417: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ChannelPage_SetSessionStatus"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "SetSessionStatusInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "setSessionStatus"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "setAgainInSeconds"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 136
            }
        };
        n.loc.source = {
            body: "mutation ChannelPage_SetSessionStatus($input: SetSessionStatusInput!) {\n  setSessionStatus(input: $input) {\n    setAgainInSeconds\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    418: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "TopNav_User_UpdateVisibility"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UpdateVisibilityInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "updateVisibility"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "user"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "availability"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 159
            }
        };
        n.loc.source = {
            body: "mutation TopNav_User_UpdateVisibility($input: UpdateVisibilityInput!) {\n  updateVisibility(input: $input) {\n    user {\n      id\n      availability\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    419: function(e, t) {},
    420: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "TopNav_User_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "availability"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "settings"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSharingActivity"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "visibility"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "activity"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "type"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "InlineFragment",
                                        typeCondition: {
                                            kind: "NamedType",
                                            name: {
                                                kind: "Name",
                                                value: "Watching"
                                            }
                                        },
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "user"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "displayName"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "stream"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "game"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "name"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "hosting"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "displayName"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "stream"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "game"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: {
                                                                            kind: "SelectionSet",
                                                                            selections: [{
                                                                                kind: "Field",
                                                                                alias: null,
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "name"
                                                                                },
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null
                                                                            }]
                                                                        }
                                                                    }]
                                                                }
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }, {
                                        kind: "InlineFragment",
                                        typeCondition: {
                                            kind: "NamedType",
                                            name: {
                                                kind: "Name",
                                                value: "Streaming"
                                            }
                                        },
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "stream"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "game"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "name"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }, {
                                        kind: "InlineFragment",
                                        typeCondition: {
                                            kind: "NamedType",
                                            name: {
                                                kind: "Name",
                                                value: "Playing"
                                            }
                                        },
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "game"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "name"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 710
            }
        };
        n.loc.source = {
            body: "query TopNav_User_User {\n  currentUser {\n    id\n    displayName\n    profileImageURL(width: 70)\n    login\n    availability\n    settings {\n      isSharingActivity\n      visibility\n    }\n    activity {\n      type\n      ... on Watching {\n        user {\n          displayName\n          stream {\n            game {\n              name\n            }\n          }\n          hosting {\n            displayName\n            stream {\n              game {\n                name\n              }\n            }\n          }\n        }\n      }\n      ... on Streaming {\n        stream {\n          game {\n            name\n          }\n        }\n      }\n      ... on Playing {\n        game {\n          name\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    421: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "TopNav_User_UpdateIsSharingActivity"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UpdateIsSharingActivityInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "updateIsSharingActivity"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "user"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isSharingActivity"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 212
            }
        };
        n.loc.source = {
            body: "mutation TopNav_User_UpdateIsSharingActivity($input: UpdateIsSharingActivityInput!) {\n  updateIsSharingActivity(input: $input) {\n    user {\n      id\n      settings {\n        isSharingActivity\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    422: function(e, t) {},
    423: function(e, t) {},
    424: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Current_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 50
            }
        };
        n.loc.source = {
            body: "query Current_User {\n  currentUser {\n    id\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    425: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Current_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 63
            }
        };
        n.loc.source = {
            body: "query Current_User {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    426: function(e, t) {},
    427: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "claimPrimeOffer"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ClaimPrimeOfferInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "claimPrimeOffer"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "claimData"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "hasEntitlement"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 153
            }
        };
        n.loc.source = {
            body: "mutation claimPrimeOffer($input: ClaimPrimeOfferInput!) {\n  claimPrimeOffer(input: $input) {\n    self {\n      claimData\n      hasEntitlement\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    428: function(e, t) {},
    429: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Current_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 63
            }
        };
        n.loc.source = {
            body: "query Current_User {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    430: function(e, t) {},
    431: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Prime_PrimeOfferList_PrimeOffers"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "primeOffers"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "title"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "imageURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "claimInstructions"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "description"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "deliveryMethod"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "priority"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "content"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "game"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "name"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "externalURL"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "publisher"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "categories"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "hasEntitlement"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "claimData"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 333
            }
        };
        n.loc.source = {
            body: "query Prime_PrimeOfferList_PrimeOffers {\n  primeOffers {\n    id\n    title\n    imageURL\n    claimInstructions\n    description\n    deliveryMethod\n    priority\n    content {\n      game {\n        id\n        name\n      }\n      externalURL\n      publisher\n      categories\n    }\n    self {\n      hasEntitlement\n      claimData\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    432: function(e, t) {},
    433: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Current_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 63
            }
        };
        n.loc.source = {
            body: "query Current_User {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    434: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Prime_PrimeOffers_PrimeOfferIds"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "primeOffers"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "hasEntitlement"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "claimData"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 123
            }
        };
        n.loc.source = {
            body: "query Prime_PrimeOffers_PrimeOfferIds {\n  primeOffers {\n    id\n    self {\n      hasEntitlement\n      claimData\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    435: function(e, t) {},
    436: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Prime_PrimeOffers_CurrentUser"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "requestInfo"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "countryCode"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 116
            }
        };
        n.loc.source = {
            body: "query Prime_PrimeOffers_CurrentUser {\n  currentUser {\n    id\n    hasPrime\n  }\n  requestInfo {\n    countryCode\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    437: function(e, t) {},
    438: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Prime_BlueBar_CurrentUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "stringIds"
                        }
                    },
                    type: {
                        kind: "ListType",
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "dateOverride"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Time"
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "hasPrime"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "primePromotions"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "ids"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "stringIds"
                                }
                            }
                        }, {
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "dateOverride"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "dateOverride"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "text"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "externalURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isExternalLink"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "requestInfo"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "countryCode"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 274
            }
        };
        n.loc.source = {
            body: "query Prime_BlueBar_CurrentUser($stringIds: [ID!], $dateOverride: Time) {\n  currentUser {\n    id\n    hasPrime\n  }\n  primePromotions (ids: $stringIds, dateOverride: $dateOverride) {\n    id\n    text\n    externalURL\n    isExternalLink\n  }\n  requestInfo {\n    countryCode\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    439: function(e, t) {},
    452: function(e, t) {
        function n(e) {
            var t = !1;
            if (null != e && "function" != typeof e.toString) try {
                t = !!(e + "")
            } catch (e) {}
            return t
        }

        function i(e) {
            return !!e && "object" == typeof e
        }

        function a(e) {
            if (!i(e) || d.call(e) != r || n(e)) return !1;
            var t = p(e);
            if (null === t) return !0;
            var a = c.call(t, "constructor") && t.constructor;
            return "function" == typeof a && a instanceof a && l.call(a) == u
        }
        var r = "[object Object]",
            s = Function.prototype,
            o = Object.prototype,
            l = s.toString,
            c = o.hasOwnProperty,
            u = l.call(Object),
            d = o.toString,
            p = function(e, t) {
                return function(n) {
                    return e(t(n))
                }
            }(Object.getPrototypeOf, Object);
        e.exports = a
    },
    814: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i;
        ! function(e) {
            e[e.Post = 0] = "Post", e[e.Action = 1] = "Action", e[e.PostWithMention = 2] = "PostWithMention", e[e.Ban = 3] = "Ban", e[e.Timeout = 4] = "Timeout", e[e.AutoModRejectedPrompt = 5] = "AutoModRejectedPrompt", e[e.AutoModMessageRejected = 6] = "AutoModMessageRejected", e[e.AutoModMessageAllowed = 7] = "AutoModMessageAllowed", e[e.AutoModMessageDenied = 8] = "AutoModMessageDenied", e[e.Connected = 9] = "Connected", e[e.Disconnected = 10] = "Disconnected", e[e.Reconnect = 11] = "Reconnect", e[e.Hosting = 12] = "Hosting", e[e.Unhost = 13] = "Unhost", e[e.Subscription = 14] = "Subscription", e[e.Resubscription = 15] = "Resubscription", e[e.SubGift = 16] = "SubGift", e[e.Clear = 17] = "Clear", e[e.SubscriberOnlyMode = 18] = "SubscriberOnlyMode", e[e.FollowerOnlyMode = 19] = "FollowerOnlyMode", e[e.SlowMode = 20] = "SlowMode", e[e.EmoteOnlyMode = 21] = "EmoteOnlyMode", e[e.RoomMods = 22] = "RoomMods", e[e.RoomState = 23] = "RoomState", e[e.Raid = 24] = "Raid", e[e.Unraid = 25] = "Unraid", e[e.Notice = 26] = "Notice", e[e.Info = 27] = "Info", e[e.BadgesUpdated = 28] = "BadgesUpdated", e[e.Purchase = 29] = "Purchase"
        }(i || (i = {}))
    },
    815: function(e, t, n) {
        "use strict";

        function i(e) {
            var t = {
                action_name: e.actionName,
                action_type: "click",
                client_time: (new Date).getTime(),
                displayed_balance: e.displayedBalance,
                emote_level: e.emoteLevel,
                emote_type: e.emoteType,
                bits_location: e.location || d.ChatTooltip
            };
            c.m.track(u.SpadeEventType.BitsCardInteraction, t)
        }

        function a(e) {
            return e && m[e] ? m[e] : (c.i.error(new Error('Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), 'Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), p.Buy100)
        }

        function r(e) {
            var t = {
                channel: e.channel,
                channel_id: e.channelID,
                available: e.available,
                host: "twitch.tv"
            };
            c.m.track(u.SpadeEventType.BitsAdsAvailability, t)
        }

        function s(e) {
            var t = {
                distinct_id: c.n.session.deviceID,
                host: "twitch.tv",
                request_id: e.requestID,
                campaign_id: e.campaignID,
                adblock: e.adblock
            };
            c.m.track(u.SpadeEventType.BitsAdsImpression, t)
        }

        function o(e) {
            var t = c.m.getLastPageview(),
                n = {
                    location: t ? t.location || "" : "",
                    ad_returned: null,
                    campaign_id: e.campaignID,
                    distinct_id: c.n.session.deviceID,
                    host: "twitch.tv",
                    request_id: e.requestID,
                    request_method: e.requestMethod
                };
            c.m.track(u.SpadeEventType.BitsAdsRequest, n)
        }
        t.h = i, n.d(t, "b", function() {
            return d
        }), n.d(t, "a", function() {
            return p
        }), t.d = a, t.e = r, t.f = s, n.d(t, "c", function() {
            return l
        }), t.g = o;
        var l, c = n(2),
            u = n(13),
            d = {
                ChatTooltip: "card",
                GetBitsButton: "get_bits_button",
                BitsLandingPage: "bits_landing_page"
            },
            p = {
                BuyMain: "buy_main",
                Buy100: "buy_100",
                Buy500: "buy_500",
                Buy1000: "buy_1000",
                Buy1500: "buy_1500",
                Buy5000: "buy_5000",
                Buy10000: "buy_10000",
                Buy25000: "buy_25000",
                CloseCard: "menu_close",
                OpenCard: "menu_open",
                PreviewEmote: "emote_preview",
                WatchAd: "watch_ad",
                WatchAnotherAd: "watch_another_ad"
            },
            m = {
                100: p.Buy100,
                500: p.Buy500,
                1e3: p.Buy1000,
                1500: p.Buy1500,
                5e3: p.Buy5000,
                1e4: p.Buy10000,
                25e3: p.Buy25000
            };
        ! function(e) {
            e.ShowAdButton = "show_ad_button"
        }(l || (l = {}))
    },
    816: function(e, t, n) {
        "use strict";

        function i(e) {
            return e + "-" + Date.now() + "}"
        }
        t.a = i
    },
    817: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i = {
            BrowseCommunities: "browse.communities",
            BrowseCreative: "browse.creative",
            BrowseForYou: "browse.for-you",
            ChannelIndex: "channel.index.index",
            ChannelDashboardAchievements: "channel.dashboard.achievements",
            ChannelDashboardExtensions: "channel.dashboard.extensions",
            ChannelDashboardModeration: "channel.dashboard.moderation",
            ChannelDashboardStreamSummary: "channel.dashboard.stream-summary",
            ChannelClips: "channel.clips",
            ChannelClipsManager: "videoManager.clips.channel",
            ChannelCollections: "channel.collections",
            ChannelEvents: "channel.events",
            ChatPopout: "chat",
            DevOnly: "dev",
            DirectoryCommunityByLanguage: "directory.community.language",
            DirectoryCommunityIndex: "directory.community.index",
            DirectoryCommunityDetails: "directory.community.details",
            DirectoryGames: "directory.games",
            DirectoryPopular: "directory.popular",
            DirectoryPopularByLanguage: "directory.popular.language",
            DirectoryGameIndex: "directory.game.index",
            DirectoryGameClips: "directory.game.clips",
            DirectoryGameDetails: "directory.game.details",
            DirectoryGameVideos: "directory.game.videos",
            DirectoryFollowingIndex: "directory.following.index",
            DirectoryFollowingGames: "directory.following.games",
            DirectoryFollowingVideos: "directory.following.videos.video-type",
            DirectoryFollowingHosts: "directory.following.hosts",
            DirectoryFollowingLiveChannels: "directory.following.channels",
            DirectoryFollowingCommunities: "directory.following.communities",
            EmailVerification: "emailVerification",
            EventDetails: "event.details",
            Index: "index",
            MyClipsManager: "videoManager.clips",
            NotificationSettingsPage: "settings.notificationSettings",
            OnboardingIndex: "onboarding.index",
            ReportUserPage: "reportUser.page",
            StoreMerchPage: "store.merch",
            SubsLandingPage: "subs.landing",
            SubsBroadcasterPage: "subs.broadcaster",
            TeamsDashboardBasicInfo: "teams.dashboard.basic-info",
            TeamsDashboardCustomize: "teams.dashboard.customize",
            TeamsDashboardFeaturedChannels: "teams.dashboard.featured-channels",
            TeamsDashboardMembers: "teams.dashboard.members",
            TeamsDashboardStats: "teams.dashboard.stats",
            TeamsDashboardRevenue: "teams.dashboard.revenue",
            VideosPage: "videos",
            VideoWatchPage: "video",
            VideoManagerPage: "videoManager.page",
            VideoManagerEditPropertiesPage: "videoManager.edit",
            VideoManagerUploadPage: "videoManager.upload",
            VideoManagerUploadListPage: "videoManager.upload-list"
        }
    },
    819: function(e, t, n) {
        "use strict";

        function i(e) {
            return function(t) {
                var n = function(n) {
                    function i(t) {
                        var i = n.call(this, t) || this;
                        return i.tracked = !1, i.referenceTracking = {}, i.trackPageview = function() {
                            if (!(i.tracked || e.skip && e.skip(i.props))) {
                                i.tracked = !0, l.n.adBlockSentinel.pageTransition();
                                var t = {};
                                "function" == typeof e.properties ? t = e.properties(i.props) : e.properties && (t = a.__assign({}, e.properties));
                                var n = a.__assign({}, i.props);
                                n.location && n.location.state && (t.medium = n.location.state.medium, t.content = n.location.state.content, t.content_index = n.location.state.content_index);
                                var r = i.referenceTracking,
                                    s = r.content,
                                    o = r.medium,
                                    c = r.content_index;
                                l.n.tracking.trackPageview(a.__assign({
                                    content: s,
                                    medium: o,
                                    content_index: c,
                                    location: e.location
                                }, t))
                            }
                        }, l.i.debug("pageViewTracking", e), t.rootLatencyTracker ? t.rootLatencyTracker.setLocation(e.location) : l.i.warn("No latency tracker exists! This means no data will be sent to Spade.", e), i
                    }
                    return a.__extends(i, n), i.prototype.componentDidMount = function() {
                        var e = this;
                        this.referenceTracking = this.stripTTParams(this.props.history.location), this.trackPageview(), this.props.history.listen(function(t, n) {
                            "REPLACE" !== n && (e.tracked = !1, e.referenceTracking = {})
                        })
                    }, i.prototype.componentDidUpdate = function() {
                        this.trackPageview()
                    }, i.prototype.render = function() {
                        return s.createElement(t, a.__assign({}, this.props))
                    }, i.prototype.stripTTParams = function(e) {
                        var t = "" !== e.search ? r.parse(e.search) : {},
                            n = {
                                content: t.tt_content,
                                content_index: t.tt_content_index,
                                medium: t.tt_medium
                            };
                        if (delete t.tt_content, delete t.tt_content_index, delete t.tt_medium, n.medium || n.content) {
                            var i = "",
                                a = r.stringify(t);
                            a.length > 0 && (i = "?" + a), this.props.history.replace({
                                pathname: e.pathname,
                                hash: e.hash,
                                search: i
                            })
                        }
                        return n
                    }, i
                }(s.Component);
                return Object(o.f)(n)
            }
        }
        var a = n(0),
            r = n(21),
            s = n(1),
            o = n(10),
            l = n(2);
        n.d(t, "a", function() {
            return i
        })
    },
    820: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        }), n.d(t, "b", function() {
            return a
        }), n.d(t, "d", function() {
            return r
        }), n.d(t, "e", function() {
            return s
        }), n.d(t, "c", function() {
            return o
        });
        var i = "AD",
            a = "BUNDLE",
            r = "first_time_purchase",
            s = "single_purchase",
            o = "black_friday_2017"
    },
    821: function(e, t, n) {
        "use strict";

        function i(e) {
            return e.type !== d.a && (r(e) && null !== e.promotion && e.promotion.type === d.d)
        }

        function a(e) {
            return e.type !== d.a && (r(e) && null !== e.promotion && e.promotion.type === d.e)
        }

        function r(e) {
            return e.type === d.b && null !== e.promotion && !!e.promotion
        }

        function s(e) {
            var t = 0,
                n = 0,
                i = 0;
            return e.forEach(function(e) {
                e.cheerAmount && (t = Math.max(t, e.cheerAmount), n = n ? Math.min(n, e.cheerAmount) : e.cheerAmount, i += e.cheerAmount)
            }), {
                total: i,
                smallestCheermote: n,
                largestCheermote: t
            }
        }

        function o(e) {
            var t = e.messageBits,
                n = t.total,
                i = t.largestCheermote,
                a = t.smallestCheermote;
            if (n) {
                var r = {
                    cheerAboveMaxBitsPerEmote: i > p.l,
                    totalAboveBalance: n > e.balance,
                    totalBelowCheerMinimum: n < e.cheerMinimumBits,
                    totalBelowEmoteMinimum: a < e.emoteMinimumBits,
                    inputLongerThanMaxBitsMessage: e.inputValue.length > p.k,
                    inputStartsWithCommand: e.inputValue.startsWith("/")
                };
                if (Object.keys(r).some(function(e) {
                        return r[e]
                    })) return c.__assign({
                    canSpend: !1
                }, r)
            }
            return {
                canSpend: !0
            }
        }

        function l(e) {
            var t = e.purchaseUrl;
            if (t) {
                e.trackBitsCardInteraction(Object(m.d)(e.bitsAmount), {
                    location: e.location
                });
                var n = t.replace("{channelID}", e.channelID),
                    i = window.open(n, "Twitch", "width=1024,height=600,scrollbars=yes");
                return !i || Object(u.a)() ? (e.closeAllBits && e.closeAllBits(), void e.trackBitsCardInteraction(m.a.CloseCard, {
                    location: e.location
                })) : (i.focus(), i)
            }
        }
        t.c = i, t.e = a, t.d = r, t.a = s, t.f = o, t.b = l;
        var c = n(0),
            u = n(837),
            d = n(820),
            p = n(260),
            m = n(815)
    },
    822: function(e, t, n) {
        "use strict";

        function i(e) {
            return "/ignore " + e
        }

        function a(e) {
            return "/unignore " + e
        }

        function r(e) {
            return "/mod " + e
        }

        function s(e) {
            return "/unmod " + e
        }

        function o(e) {
            return /^[\/]/.test(e)
        }

        function l() {
            return "/clear"
        }

        function c() {
            return "/followersoff"
        }

        function u() {
            return "/slowoff"
        }

        function d(e) {
            return "/followers " + e
        }

        function p() {
            return "/slow"
        }

        function m(e) {
            return "/color " + e
        }

        function h(e) {
            var t = e.trim().match(y);
            return t ? {
                recipientLogin: t[1] || null,
                body: t[2] || null
            } : null
        }

        function f(e) {
            var t = e.trim().match(_);
            return t ? {
                recipientLogin: t[1] || null,
                body: t[2] || null
            } : {
                recipientLogin: null,
                body: null
            }
        }

        function g(e, t) {
            var n = e.match(C);
            if (!n) return {
                handled: !1
            };
            var i = v.n.store.getState().chat.commandHandlers[n[1].toLowerCase()];
            if (!i) return {
                handled: !1
            };
            var a = (n[2] || "").trim(),
                r = {
                    channelLogin: t
                };
            try {
                return {
                    handled: !0,
                    result: i(a, r)
                }
            } catch (e) {
                return b.warn("Exception thrown from chat command handler", {
                    command: n[1],
                    err: e
                }), {
                    handled: !1
                }
            }
        }
        n.d(t, "a", function() {
            return k
        }), t.h = i, t.j = a, t.i = r, t.k = s, t.m = o, t.c = l, t.d = c, t.e = u, t.f = d, t.g = p, t.b = m, t.n = h, t.o = f, t.l = g;
        var v = n(2),
            b = v.n.logger.withCategory("chat-commands"),
            k = "/unraid",
            y = /^\/w(?:$|\s+)(\S+)?\s*(.+)?/i,
            _ = /^(\S+)?\s+(.+)?$/,
            C = /^[\/.]([a-z0-9]+)(.+)?$/i
    },
    824: function(e, t, n) {
        "use strict";
        var i, a = n(4),
            r = n(1),
            s = n(374),
            o = n(376),
            l = n(375),
            c = n(3);
        n(861);
        ! function(e) {
            e[e.Normal = 0] = "Normal", e[e.Small = 1] = "Small", e[e.Medium = 2] = "Medium", e[e.ExtraSmall = 3] = "ExtraSmall"
        }(i || (i = {}));
        var u;
        ! function(e) {
            e[e.ImageAndText = 0] = "ImageAndText", e[e.ImageOnly = 1] = "ImageOnly", e[e.TextOnly = 2] = "TextOnly", e[e.InlineTextOnly = 3] = "InlineTextOnly", e[e.Inline = 4] = "Inline"
        }(u || (u = {}));
        var d = function(e) {
            var t = e.bitsConfig.indexedActions[e.prefix.toLowerCase()];
            t || (t = Object(o.b)());
            var n = t.orderedTiers.find(function(t) {
                return t.bits <= (e.amount || 100)
            });
            n || (n = t.orderedTiers[0]);
            var d = null,
                p = a("cheermote-for-amount__cheer-amount", {
                    "cheermote-for-amount__cheer-amount--small": e.size === i.Small || e.size === i.ExtraSmall
                }, {
                    "cheermote-for-amount__cheer-amount--medium": e.size === i.Medium
                }, {
                    "cheermote-for-amount__display--table-cell": e.display !== u.InlineTextOnly && e.display !== u.Inline
                });
            e.amount && e.display !== u.ImageOnly && (d = r.createElement(c.P, {
                padding: e.size === i.Small ? 0 : void 0,
                textAlign: e.size === i.Small ? c._22.Center : void 0
            }, r.createElement("strong", {
                className: p,
                style: {
                    color: n.color
                }
            }, e.amount)));
            var m = a("cheermote-for-amount__cheer-image", {
                    "cheermote-for-amount__cheer-image--inline": e.display === u.Inline
                }, {
                    "cheermote-for-amount__cheer-image--small": e.size === i.Small
                }, {
                    "cheermote-for-amount__cheer-image--extra-small": e.size === i.ExtraSmall
                }, {
                    "cheermote-for-amount__display--table-cell": e.display !== u.InlineTextOnly && e.display !== u.Inline && e.size !== i.Small
                }),
                h = r.createElement(l.a, {
                    className: m,
                    sources: Object(s.b)(n, 4, e.animated)
                });
            return e.display !== u.TextOnly && e.display !== u.InlineTextOnly || (h = null), e.display === u.InlineTextOnly || e.display === u.Inline ? r.createElement(c.U, {
                className: "cheermote-for-amount",
                display: c.H.Inline
            }, h, d) : r.createElement(c.U, {
                className: "cheermote-for-amount"
            }, h, d)
        };
        n.d(t, "a", function() {
            return d
        }), n.d(t, "b", function() {
            return i
        }), n.d(t, "c", function() {
            return u
        })
    },
    825: function(e, t, n) {
        "use strict";

        function i() {
            return {
                type: r
            }
        }

        function a(e, t, n) {
            return {
                type: s,
                viewerCardOptions: {
                    targetLogin: e,
                    sourceType: t,
                    sourceID: n
                }
            }
        }
        n.d(t, "a", function() {
            return r
        }), n.d(t, "b", function() {
            return s
        }), t.c = i, t.d = a;
        var r = "viewer-card.VIEWER_CARD_HIDDEN",
            s = "viewer-card.VIEWER_CARD_SHOWN"
    },
    826: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i;
        ! function(e) {
            e.Admin = "admin", e.GlobalMod = "global_mod", e.Moderator = "mod", e.Owner = "owner", e.Staff = "staff", e.Subscriber = "subscriber", e.User = ""
        }(i || (i = {}))
    },
    827: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var i = n(0),
            a = n(2),
            r = n(17),
            s = function() {
                function e() {}
                return e.get = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, void 0, function() {
                        return i.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return [4, this.request(e, i.__assign({}, t, {
                                        method: "GET"
                                    }), n)];
                                case 1:
                                    return [2, a.sent()]
                            }
                        })
                    })
                }, e.put = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, void 0, function() {
                        return i.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return [4, this.request(e, i.__assign({}, t, {
                                        method: "PUT"
                                    }), n)];
                                case 1:
                                    return [2, a.sent()]
                            }
                        })
                    })
                }, e.post = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, void 0, function() {
                        return i.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return [4, this.request(e, i.__assign({}, t, {
                                        method: "POST"
                                    }), n)];
                                case 1:
                                    return [2, a.sent()]
                            }
                        })
                    })
                }, e.delete = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, void 0, function() {
                        return i.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return [4, this.request(e, i.__assign({}, t, {
                                        method: "DELETE"
                                    }), n)];
                                case 1:
                                    return [2, a.sent()]
                            }
                        })
                    })
                }, e.request = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), i.__awaiter(this, void 0, void 0, function() {
                        var a, r;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return t = this.constructOptions(t, n), a = t.headers ? t.headers["Content-Type"] : void 0, t.body = this.serialize(t.body, a), [4, this._fetch(e, t)];
                                case 1:
                                    return r = i.sent(), [4, this.constructLegacyAPIResponse(r)];
                                case 2:
                                    return [2, i.sent()]
                            }
                        })
                    })
                }, e.getAPIURL = function(e) {
                    return new URL(e, a.n.config.apiBaseURL)
                }, e.constructLegacyAPIResponse = function(e) {
                    return i.__awaiter(this, void 0, void 0, function() {
                        var t, n, a;
                        return i.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    t = {
                                        status: e.status
                                    }, i.label = 1;
                                case 1:
                                    return i.trys.push([1, 3, , 4]), [4, e.json()];
                                case 2:
                                    return n = i.sent(), e.ok ? t.body = n : t.error = n, [3, 4];
                                case 3:
                                    return a = i.sent(), t.requestError = a, [3, 4];
                                case 4:
                                    return [2, t]
                            }
                        })
                    })
                }, e._fetch = function(e, t) {
                    return void 0 === t && (t = {}), i.__awaiter(this, void 0, void 0, function() {
                        return i.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return [4, fetch(this.getAPIURL(e).toString(), t)];
                                case 1:
                                    return [2, n.sent()]
                            }
                        })
                    })
                }, e.constructOptions = function(e, t) {
                    return e = Object.assign({}, e, {
                        headers: i.__assign({}, this.getDefaultHeaders(e, t), e.headers)
                    })
                }, e.serialize = function(e, t) {
                    return "application/json; charset=UTF-8" === t ? JSON.stringify(e) : e
                }, e.getDefaultHeaders = function(e, t) {
                    var n = a.n.store.getState(),
                        i = {
                            Accept: "application/vnd.twitchtv.v" + (t.version || 5) + "+json; charset=UTF-8",
                            "Accept-Language": "en-us",
                            "Client-ID": a.n.config.legacyClientID,
                            "X-Requested-With": "XMLHttpRequest"
                        };
                    e.body && FormData.prototype.isPrototypeOf(e.body) || (i["Content-Type"] = "application/json; charset=UTF-8");
                    var s = Object(r.c)(n);
                    return s && (i.Authorization = "OAuth " + s.authToken, s.legacyCSRFToken && (i["Twitch-Api-Token"] = s.legacyCSRFToken)), t.excludeHeaders && t.excludeHeaders.forEach(function(e) {
                        i[e] && delete i[e]
                    }), i
                }, e
            }()
    },
    828: function(e, t, n) {
        "use strict";

        function i() {
            return F.createElement("span", {
                key: "thankyou"
            }, Object(j.d)("Thank you for your feedback!", "ChatLine"))
        }

        function a(e, t, n, i, a) {
            var r = [],
                s = "";
            i && (s = s.concat(" "));
            var l = e.content.split(/\s+/);
            return l.forEach(function(e, i) {
                if ("" !== e) {
                    var a = i < l.length - 1 ? e + " " : e;
                    (t || n) && o(e, t, n) ? (r = r.concat(s), r = r.concat(F.createElement(q.U, {
                        className: "chat-line__message--mention-recipient",
                        display: q.H.InlineFlex,
                        key: "" + e + i,
                        "data-a-target": "chat-message-mention"
                    }, a)), s = "") : s = s.concat(a)
                }
            }), r = r.concat(s), F.createElement("span", {
                key: "chat-line__message-text-" + a,
                "data-a-target": "chat-message-text"
            }, r)
        }

        function r(e, t) {
            return F.createElement("a", {
                key: e,
                className: "chat-line__message--link",
                href: t.content.url,
                target: "_blank",
                rel: "noreferrer noopener"
            }, t.content.displayText)
        }

        function s(e, t, n) {
            var i = null,
                s = e.reduce(function(s, o, u) {
                    switch (o.type) {
                        case oe.a.Text:
                            var d = u > 0;
                            return s.concat(a(o, t, n, d, u));
                        case oe.a.Mention:
                            var p = "";
                            return l(o) && t && o.content.sender.toLowerCase() === t.toLowerCase() ? p = "chat-line__message--mention-sender" : c(o) && t && o.content.recipient.toLowerCase() === t.toLowerCase() && (p = "chat-line__message--mention-recipient"), s.concat(F.createElement(q.U, {
                                className: p,
                                display: q.H.InlineFlex,
                                key: u,
                                "data-a-target": "chat-message-mention"
                            }, "@" + o.content.recipient));
                        case oe.a.Link:
                            return s = s.concat(r(u, o)), e.length > u + 1 && e[u + 1].type === oe.a.Link && s.push(" "), s;
                        case oe.a.Emote:
                            return s = s.concat(F.createElement(B.a, {
                                key: u,
                                emote: o.content
                            })), e.length > u + 1 && e[u + 1].type === oe.a.Emote && s.push(" "), s;
                        case oe.a.ClipLink:
                            return i ? s.concat(r(u, o)) : (i = F.createElement(ee, {
                                key: u,
                                slug: o.content.slug
                            }), s);
                        case oe.a.VideoLink:
                            return i ? s.concat(r(u, o)) : (i = F.createElement(re, {
                                key: u,
                                id: o.content.id,
                                url: o.content.url
                            }), s);
                        default:
                            return s.concat(F.createElement("span", {
                                key: u
                            }))
                    }
                }, []);
            return i && (s = s.concat(i)), s
        }

        function o(e, t, n) {
            var i = e.trim().toLowerCase();
            return t && i === t.toLowerCase() || n && i === n.toLowerCase()
        }

        function l(e) {
            return e.content && e.content.sender
        }

        function c(e) {
            return e.content && e.content.recipient
        }

        function u(e) {
            if (e.type === se.a.Ban) return e.reason ? F.createElement("span", {
                className: "chat-line__moderation--ban-with-reason"
            }, Object(j.d)("{userLogin} has been banned. Reason: {reason}", {
                userLogin: e.userLogin,
                reason: e.reason
            }, "ChatLine")) : F.createElement("span", {
                className: "chat-line__moderation--ban"
            }, Object(j.d)("{userLogin}  is now banned from this room.", {
                userLogin: e.userLogin
            }, "ChatLine"));
            if (e.reason && e.duration) {
                var t = Object(j.d)("{userLogin} has been timed out for {duration} seconds. Reason: {reason}", {
                    duration: e.duration,
                    reason: e.reason,
                    userLogin: e.userLogin
                }, "ChatLine");
                return F.createElement("span", {
                    className: "chat-line__moderation--timeout-with-reason"
                }, t)
            }
            return e.duration ? F.createElement("span", {
                className: "chat-line__moderation--timeout"
            }, Object(j.d)("{userLogin} has been timed out for {duration} seconds.", {
                userLogin: e.userLogin,
                duration: e.duration
            }, "ChatLine")) : void 0
        }

        function d(e) {
            var t = Object(R.a)("https://twitch.amazon.com/prime", {
                ref: "subscriptionMessage",
                channel: e
            });
            return F.createElement("a", {
                className: "chat-line__subscribe--prime",
                href: t,
                target: "_blank",
                rel: "noopener"
            }, Object(j.d)("Twitch Prime", "ChatLine"))
        }

        function p(e, t) {
            return Object(j.d)("{userLogin} just subscribed with {service}!", {
                userLogin: e,
                service: t
            }, "ChatLine")
        }

        function m(e, t) {
            return Object(j.d)("{userLogin} just subscribed with a {subTier} sub!", {
                userLogin: e,
                subTier: t
            }, "ChatLine")
        }

        function h(e, t) {
            return Object(j.d)("{userLogin} gifted a subscription to {recipient}!", {
                userLogin: e,
                recipient: t
            }, "ChatLine")
        }

        function f(e, t, n) {
            return Object(j.d)("{userLogin} gifted a {subTier} sub to {recipient}!", {
                userLogin: e,
                subTier: t,
                recipient: n
            }, "ChatLine")
        }

        function g(e) {
            return e.isPrime ? F.createElement("span", null, p(e.userLogin, d(e.channel))) : F.createElement("span", null, m(e.userLogin, e.tier))
        }

        function v(e) {
            return "custom" === e.tier ? F.createElement("span", null, h(e.userLogin, e.recipient)) : F.createElement("span", null, f(e.userLogin, e.tier, e.recipient))
        }

        function b(e, t, n, i, a) {
            if (e.user) {
                var r = null;
                e.badges && (r = F.createElement(A.b, {
                    badgeSets: a,
                    badgesToRender: e.badges
                }));
                var o = e.isPrime ? p(e.user.userDisplayName, d(e.channel)) : m(e.user.userDisplayName, e.tier),
                    l = [F.createElement("span", {
                        key: "chat--resubbed"
                    }, o, F.createElement("span", {
                        key: "sub-separator"
                    }, " "), Object(j.d)("{userLogin} subscribed for {months} months in a row!", {
                        userLogin: e.user.userDisplayName,
                        months: e.months
                    }, "ChatLine"))];
                if (e.messageParts && e.user && !e.deleted) {
                    var c = null;
                    t && e.timestamp && (c = D(e.timestamp)), l.push(F.createElement("div", {
                        key: "resub-message",
                        className: "chat-line__subscribe--message"
                    }, c, r, F.createElement(M.a, {
                        userData: e.user
                    }), F.createElement("span", {
                        key: "separator"
                    }, " : "), s(e.messageParts, n, i)))
                }
                return l
            }
            return null
        }

        function k(e) {
            var t = e.enabled ? Object(j.d)("This room is now in slow mode. You may send messages every {length} seconds.", {
                length: e.length
            }, "ChatLine") : Object(j.d)("This room is no longer in slow mode.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function y(e) {
            return F.createElement("span", null, e.message)
        }

        function _(e) {
            return F.createElement("span", null, e.message)
        }

        function C(e) {
            var t;
            if (e.length > 0) {
                var n = e.join(", ");
                t = Object(j.d)("The moderators of this room are: {moderatorList}", {
                    moderatorList: n
                }, "ChatLine")
            } else t = Object(j.d)("There are no moderators of this room.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function S(e) {
            if (e.enabled) {
                var t = 0 === e.length ? Object(j.d)("This room is in followers-only mode.", "ChatLine") : Object(j.d)("This room is now in {length} followers-only mode.", {
                    length: Object(L.a)(60 * e.length)
                }, "ChatLine");
                return F.createElement("span", null, t)
            }
            return F.createElement("span", null, Object(j.d)("This room is no longer in followers-only mode.", "ChatLine"))
        }

        function E(e) {
            return e.enabled ? F.createElement("span", null, Object(j.d)("This room is now in emote-only mode.", "ChatLine")) : F.createElement("span", null, Object(j.d)("This room is no longer in emote-only mode.", "ChatLine"))
        }

        function w(e) {
            var t = e.enabled ? Object(j.d)("This room is now in subscriber-only mode.", "ChatLine") : Object(j.d)("This room is no longer in subscriber-only mode.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function N() {
            return F.createElement("span", null, Object(j.d)("Chat was cleared by a moderator", "ChatLine"))
        }

        function O(e) {
            var t = e.getHours() % 12;
            0 === t && (t = 12);
            var n = e.getMinutes(),
                i = n.toString();
            return n < 10 && (i = "0" + i), t + ":" + i
        }

        function D(e) {
            return F.createElement("span", {
                key: "timestamp",
                className: "chat-line__timestamp",
                "data-a-target": "chat-timestamp",
                "data-test-selector": "chat-timestamp"
            }, O(new Date(e)))
        }

        function U(e) {
            return F.createElement("span", {
                key: "timestamp",
                className: "chat-line__timestamp",
                "data-a-target": "chat-timestamp",
                "data-test-selector": "chat-timestamp"
            }, T(new Date(e), {
                hour: "numeric",
                minute: "numeric"
            }))
        }

        function I() {
            return F.createElement("span", null, Object(j.d)("The raid has been cancelled.", "RaidCancelMessage"))
        }

        function x(e, t, n) {
            return 0 === n ? Object(j.d)("<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}!</x:bold>", {
                userName: e,
                gameTitle: t,
                "x:bold": function(e) {
                    return F.createElement("strong", null, e)
                }
            }, "PurchaseNoticeSystemMessage") : Object(j.d)("{numCrates, plural, one {<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}</x:bold> and opened a <x:bold>Twitch Crate!</x:bold>} other {<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}</x:bold> and opened # <x:bold>Twitch Crates!</x:bold>}}", {
                numCrates: n,
                userName: e,
                gameTitle: t,
                "x:bold": function(e) {
                    return F.createElement("strong", null, e)
                }
            }, "PurchaseNoticeSystemMessage")
        }

        function T(e, t) {
            void 0 === t && (t = {});
            var n = j.n.intl.getLanguageCode() || "en";
            return Intl.DateTimeFormat(n, t).format(e)
        }
        var F = n(1),
            j = n(2),
            L = n(873),
            R = n(68),
            A = n(830),
            M = n(833),
            B = n(874),
            P = n(0),
            H = n(7),
            V = n(10),
            W = n(13),
            q = n(3),
            z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hasImageLoadingError: !1
                    }, t.handleImageError = function() {
                        t.setState({
                            hasImageLoadingError: !0
                        })
                    }, t
                }
                return P.__extends(t, e), t.prototype.componentWillReceiveProps = function() {
                    this.setState({
                        hasImageLoadingError: !1
                    })
                }, t.prototype.render = function() {
                    var e = j.a.defaultStreamPreviewURL;
                    return !this.state.hasImageLoadingError && this.props.imageURL && (e = this.props.imageURL), F.createElement(q.C, {
                        aspect: q.k.Aspect16x9,
                        imageAlt: this.props.altText,
                        imageSrc: e,
                        onImageError: this.handleImageError
                    })
                }, t
            }(F.Component),
            G = (n(885), "https://static-cdn.jtvnw.net/emoticons/v1/58765/2.0"),
            $ = {
                ERROR: "chat-card-error",
                TITLE: "chat-card-title",
                DESCRIPTION: "chat-card-description"
            },
            J = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderErrorCard = function() {
                        var e = F.createElement("img", {
                            "data-test-selector": $.ERROR,
                            src: G,
                            className: "chat-card__error-img"
                        });
                        return t.renderCardContent(e, t.props.error)
                    }, t.renderCardContent = function(e, t) {
                        var n, i;
                        return t ? (n = F.createElement(q._21, {
                            type: q._26.Span,
                            fontSize: q.L.Size5,
                            "data-test-selector": $.TITLE,
                            title: t.title
                        }, t.title), i = F.createElement(q._21, {
                            type: q._26.Span,
                            fontSize: q.L.Size6,
                            color: q.F.Alt2,
                            "data-test-selector": $.DESCRIPTION
                        }, t.description)) : (e = F.createElement(q._1, {
                            overlay: !0
                        }), n = F.createElement(q._1, {
                            width: 180
                        }), i = F.createElement(q._1, {
                            width: 120
                        })), F.createElement(q._17, {
                            background: q.m.Base,
                            display: q.H.Flex,
                            flexWrap: q.K.NoWrap,
                            padding: .5
                        }, F.createElement(q._17, {
                            className: "chat-card__preview-img",
                            background: q.m.Alt2,
                            display: q.H.Flex,
                            alignItems: q.c.Center,
                            justifyContent: q.T.Center,
                            flexShrink: 0
                        }, e), F.createElement(q.U, {
                            display: q.H.Flex,
                            alignItems: q.c.Center
                        }, F.createElement(q.U, {
                            margin: {
                                left: 1
                            },
                            fullWidth: !0
                        }, F.createElement(q.U, {
                            className: "chat-card__title",
                            ellipsis: !0
                        }, n), F.createElement(q.U, {
                            ellipsis: !0
                        }, i))))
                    }, t
                }
                return P.__extends(t, e), t.prototype.render = function() {
                    var e;
                    if (this.props.error) e = this.renderErrorCard();
                    else if (this.props.data) {
                        var t = Object(R.a)(this.props.data.contentURL, {
                                tt_medium: W.PageviewMedium.Chat,
                                tt_content: W.PageviewContent.ChatCard
                            }),
                            n = F.createElement(z, {
                                altText: this.props.data.title,
                                imageURL: this.props.data.previewImageURL
                            });
                        e = F.createElement(V.a, {
                            className: "chat-card__link",
                            to: t,
                            target: "_blank"
                        }, this.renderCardContent(n, {
                            title: this.props.data.title,
                            description: this.props.data.description
                        }))
                    } else e = this.renderCardContent();
                    return F.createElement(q._17, {
                        elevation: 1,
                        margin: {
                            top: .5
                        }
                    }, e)
                }, t
            }(F.Component),
            K = J,
            Q = n(854),
            Y = {
                isTimedOut: !1
            },
            X = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = Y, t.timeoutID = null, t
                }
                return P.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this;
                    this.props.data.clip || (this.timeoutID = setTimeout(function() {
                        e.setState({
                            isTimedOut: !0
                        })
                    }, 5e3))
                }, t.prototype.componentWillReceiveProps = function(e) {
                    !this.props.data.clip && e.data.clip && (this.timeoutID && (clearTimeout(this.timeoutID), this.timeoutID = null), this.setState({
                        isTimedOut: !1
                    }))
                }, t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.clip,
                        n = e.error,
                        i = e.loading;
                    return n || this.state.isTimedOut ? F.createElement(K, {
                        error: {
                            title: Object(j.d)("Something went wrong", "ClipsChatCard"),
                            description: Object(j.d)("We couldn't find that Clip", "ClipsChatCard")
                        }
                    }) : i || !t ? F.createElement(K, null) : F.createElement(K, {
                        data: {
                            title: t.title ? t.title : Object(j.d)("Clip of {broadcaster}", {
                                broadcaster: t.broadcaster.displayName
                            }, "ClipsChatCard"),
                            description: Object(j.d)("Clipped by {curator}", {
                                curator: t.curator.displayName
                            }, "ClipsChatCard"),
                            previewImageURL: t.thumbnailURL,
                            contentURL: t.url
                        }
                    })
                }, t
            }(F.Component),
            Z = function(e) {
                return {
                    variables: {
                        slug: e.slug
                    },
                    notifyOnNetworkStatusChange: !0,
                    fetchPolicy: "cache-only"
                }
            },
            ee = Object(H.a)(Q, {
                options: Z
            })(X),
            te = n(48),
            ne = n(886),
            ie = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return P.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.video,
                        n = e.error,
                        i = e.loading;
                    if (n || t && !t.owner) return F.createElement(K, {
                        error: {
                            title: Object(j.d)("Something went wrong", "VideoChatCard"),
                            description: Object(j.d)("We couldn't find that video", "VideoChatCard")
                        }
                    });
                    if (i || !t) return F.createElement(K, null);
                    var a = F.createElement(q._21, null, Object(j.c)(new Date(t.publishedAt), "medium"), F.createElement("span", null, " · "), Object(te.a)(t.owner.login, t.owner.displayName));
                    return F.createElement(K, {
                        data: {
                            title: t.title,
                            description: a,
                            previewImageURL: t.previewThumbnailURL,
                            contentURL: this.props.url
                        }
                    })
                }, t
            }(F.Component),
            ae = function(e) {
                return {
                    variables: {
                        videoID: e.id
                    },
                    notifyOnNetworkStatusChange: !0,
                    fetchPolicy: "cache-first"
                }
            },
            re = Object(H.a)(ne, {
                options: ae
            })(ie),
            se = n(814),
            oe = n(261);
        t.c = i, t.f = s, t.g = u, t.o = g, t.n = v, t.j = b, t.l = k, t.h = y, t.e = _, t.k = C, t.d = S, t.b = E, t.m = w, t.a = N, t.p = D, t.q = U, t.r = I, t.i = x
    },
    829: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "badge"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "Badge"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "setID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "version"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "title"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image1x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "NORMAL"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image2x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "DOUBLE"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image4x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "QUADRUPLE"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clickAction"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clickURL"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 189
            }
        };
        n.loc.source = {
            body: "fragment badge on Badge {\n  id\n  setID\n  version\n  title\n  image1x: imageURL(size: NORMAL)\n  image2x: imageURL(size: DOUBLE)\n  image4x: imageURL(size: QUADRUPLE)\n  clickAction\n  clickURL\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    830: function(e, t, n) {
        "use strict";
        var i = n(853),
            a = n(844),
            r = n(835),
            s = (n(883), n(0)),
            o = function() {
                function e(e, t, n) {
                    this.globalsBySet = new Map, this.channelsBySet = new Map, this.indexBadges(e, this.globalsBySet, n), Array.isArray(t) && this.indexBadges(t, this.channelsBySet, n)
                }
                return e.prototype.getBadge = function(e, t) {
                    var n = this.channelsBySet.get(e);
                    return n && n.has(t) ? n.get(t) || null : (n = this.globalsBySet.get(e), void 0 !== n ? n.get(t) || null : null)
                }, e.prototype.indexBadges = function(e, t, n) {
                    e.forEach(function(e) {
                        n && e.clickAction === r.b && (e = s.__assign({}, e, {
                            channelName: n
                        }));
                        var i = t.get(e.setID);
                        i || (i = new Map, t.set(e.setID, i)), i.set(e.version, e)
                    })
                }, e
            }();
        new o([], [], "");
        n.d(t, "b", function() {
            return i.a
        }), n.d(t, "a", function() {
            return a.a
        }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "c", function() {
            return o
        })
    },
    831: function(e, t, n) {
        "use strict";

        function i(e) {
            var t, n = Object(r.d)("{bitsAmount} Bits", {
                bitsAmount: e.count.toString()
            }, "Bits--BitsCount");
            if (e.withImage) {
                var i = e.bitsConfig.indexedActions[o.f];
                i || (i = Object(c.b)());
                var d = i.orderedTiers.find(function(t) {
                    return t.bits <= e.count
                });
                if (d) {
                    var p = Object(l.b)(d);
                    return void 0 !== e.themeOverride && (e.themeOverride === s.a.Light ? p.dark = p.light : p.light = p.dark), t = a.createElement(u.a, {
                        className: "bits-count--img",
                        sources: p
                    }), a.createElement("strong", {
                        className: "bits-count",
                        "data-a-target": "bits-count"
                    }, a.createElement("span", null, t, " ", e.withText ? n : ""))
                }
            }
            return a.createElement("strong", {
                className: "bits-count",
                "data-a-target": "bits-count"
            }, a.createElement("span", null, n))
        }
        var a = n(1),
            r = n(2),
            s = n(31),
            o = n(260),
            l = n(374),
            c = n(376),
            u = n(375);
        n(871);
        n.d(t, "a", function() {
            return i
        })
    },
    832: function(e, t, n) {
        "use strict";

        function i(e, t) {
            if (!e) return void a.i.warn("[onPopupClose] Attempted to observe a window that failed to open.");
            var n = setInterval(function() {
                var i = !1,
                    a = !1;
                try {
                    i = e.closed, a = !!e.success
                } catch (e) {}
                if (i || a) {
                    t(a);
                    try {
                        e.close()
                    } catch (e) {}
                    clearInterval(n)
                }
            }, 500)
        }
        t.a = i;
        var a = n(2)
    },
    833: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var i = n(4),
            a = (n.n(i), n(1)),
            r = (n.n(a), n(884)),
            s = (n.n(r), function(e) {
                var t = [a.createElement("span", {
                    key: "username-display",
                    className: "chat-author__display-name",
                    "data-a-target": "chat-message-username",
                    "data-test-selector": "message-username",
                    style: {
                        color: e.userData.color
                    }
                }, e.userData.userDisplayName)];
                if (e.userData.isIntl) {
                    var n = i((r = {}, r["chat-author__intl-login"] = !e.highlighted, r["chat-author__intl-login--highlighted"] = e.highlighted, r));
                    t.push(a.createElement("span", {
                        key: "username-login",
                        style: {
                            color: e.userData.color
                        },
                        className: n,
                        "data-test-selector": "message-username-canonical"
                    }, " (" + e.userData.userLogin + ")"))
                }
                return a.createElement("span", {
                    key: e.userData.userID + "-authorlabel"
                }, t);
                var r
            })
    },
    834: function(e, t, n) {
        "use strict";
        var i = n(2),
            a = n(13),
            r = {
                Public: "public"
            };
        n.d(t, "a", function() {
            return s
        }), n.d(t, "b", function() {
            return o
        });
        var s = function(e) {
                return {
                    channel: e.channelLogin,
                    is_host_mode: e.isHostMode,
                    is_using_web_sockets: !0,
                    room_type: r.Public
                }
            },
            o = function(e) {
                i.m.track(a.SpadeEventType.ChatRoomJoined, s(e))
            }
    },
    835: function(e, t, n) {
        "use strict";
        n.d(t, "b", function() {
            return i
        }), n.d(t, "c", function() {
            return a
        }), n.d(t, "d", function() {
            return r
        }), n.d(t, "a", function() {
            return s
        });
        var i = "subscribe_to_channel",
            a = "turbo",
            r = "visit_url",
            s = "broadcaster"
    },
    836: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i;
        ! function(e) {
            e[e.recent_raids = 0] = "recent_raids", e[e.chat_message = 1] = "chat_message", e[e.viewer_list = 2] = "viewer_list", e[e.test = 3] = "test"
        }(i || (i = {}))
    },
    837: function(e, t, n) {
        "use strict";

        function i(e) {
            return e || (e = navigator.userAgent), !!a.exec(e)
        }
        t.a = i;
        var a = /\scurse\/\d/
    },
    838: function(e, t, n) {
        "use strict";

        function i(e) {
            switch (e) {
                case 0:
                    return Object(r.d)("0 minutes (Any followers)", "FollowersOnlyLabel");
                case 10:
                    return Object(r.d)("10 minutes (Most used)", "FollowersOnlyLabel");
                case 30:
                    return Object(r.d)("30 minutes", "FollowersOnlyLabel");
                case 60:
                    return Object(r.d)("1 hour", "FollowersOnlyLabel");
                case 1440:
                    return Object(r.d)("1 day", "FollowersOnlyLabel");
                case 10080:
                    return Object(r.d)("1 week", "FollowersOnlyLabel");
                case 43200:
                    return Object(r.d)("1 month", "FollowersOnlyLabel");
                case 129600:
                    return Object(r.d)("3 months", "FollowersOnlyLabel");
                default:
                    return r.i.warn("[FollowersOnlyLabel] Tried to generate a label for a non-preset.", e), ""
            }
        }

        function a(e) {
            switch (e) {
                case 0:
                    return Object(r.d)("0 min", "FollowersOnlyShorthand");
                case 10:
                    return Object(r.d)("10 min", "FollowersOnlyShorthand");
                case 30:
                    return Object(r.d)("30 min", "FollowersOnlyShorthand");
                case 60:
                    return Object(r.d)("1 hr", "FollowersOnlyShorthand");
                case 1440:
                    return Object(r.d)("1 day", "FollowersOnlyShorthand");
                case 10080:
                    return Object(r.d)("1 wk", "FollowersOnlyShorthand");
                case 43200:
                    return Object(r.d)("1 mo", "FollowersOnlyShorthand");
                case 129600:
                    return Object(r.d)("3 mo", "FollowersOnlyShorthand");
                default:
                    return Object(r.d)("custom", "FollowersOnlyShorthand")
            }
        }
        n.d(t, "a", function() {
            return s
        }), n.d(t, "b", function() {
            return o
        }), t.c = i, t.d = a;
        var r = n(2),
            s = 30,
            o = [0, 10, 30, 60, 1440, 10080, 43200, 129600]
    },
    839: function(e, t, n) {
        "use strict";

        function i(e) {
            var t = [],
                n = {};
            return e.forEach(function(e) {
                var i = e.tiers.map(function(e) {
                    return a(e)
                });
                "Cheer" === e.prefix && i.push(r()), i.sort(function(e, t) {
                    return t.bits - e.bits
                });
                var o = s.__assign({}, e, {
                    indexedTiers: new Map(i.map(function(e) {
                        return [e.bits, e]
                    })),
                    orderedTiers: i
                });
                t.push(o), n[o.prefix.toLowerCase()] = o
            }), {
                indexedActions: n,
                orderedActions: t
            }
        }

        function a(e) {
            var t = new Map,
                n = new Map,
                i = new Map,
                a = new Map;
            return e.images.forEach(function(e) {
                "LIGHT" === e.theme ? e.isAnimated ? n.set(e.dpiScale, e.url) : t.set(e.dpiScale, e.url) : e.isAnimated ? a.set(e.dpiScale, e.url) : i.set(e.dpiScale, e.url)
            }), s.__assign({
                indexedImages: {
                    LIGHT: {
                        static: t,
                        animated: n
                    },
                    DARK: {
                        static: i,
                        animated: a
                    }
                }
            }, e)
        }

        function r() {
            var e = [1, 1.5, 2, 3, 4],
                t = ["DARK", "LIGHT"],
                n = ["static", "animated"],
                i = [];
            return e.forEach(function(e) {
                t.forEach(function(t) {
                    n.forEach(function(n) {
                        i.push({
                            url: l.a + "/cheer/" + t.toLowerCase() + "/" + n + "/100000/" + e + "." + ("static" === n ? "png" : "gif"),
                            isAnimated: "animated" === n,
                            theme: t,
                            dpiScale: e
                        })
                    })
                })
            }), a({
                id: "Cheer:100000",
                bits: 1e5,
                color: l.e[o.a.Yellow],
                images: i
            })
        }
        t.a = i;
        var s = n(0),
            o = n(265),
            l = n(260)
    },
    840: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                type: a.a.Info,
                id: Object(r.a)("notice"),
                message: e
            }
        }
        t.a = i;
        var a = n(814),
            r = n(816)
    },
    841: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "bitsOffersFragment"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "BitsOffer"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "type"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bits"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "InlineFragment",
                        typeCondition: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BitsBundleOffer"
                            }
                        },
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "price"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "discount"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPromo"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "url"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "includesVAT"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "promotion"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "type"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 197
            }
        };
        n.loc.source = {
            body: "fragment bitsOffersFragment on BitsOffer {\n  id\n  type\n  bits\n  ... on BitsBundleOffer {\n    price\n    discount\n    isPromo\n    url\n    includesVAT\n    promotion {\n      id\n      type \n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    842: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "cheer"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "User"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "cheer"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "emotes"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "prefix"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "type"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "tiers"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "bits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "color"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "images"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "url"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "theme"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "isAnimated"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "dpiScale"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 270
            }
        };
        n.loc.source = {
            body: "fragment cheer on User {\n  cheer {\n    id\n    emotes {\n      id\n      prefix\n      type\n      tiers {\n        id\n        bits\n        color\n        images {\n          id\n          url\n          theme\n          isAnimated\n          dpiScale\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    843: function(e, t, n) {
        "use strict";

        function i(e) {
            return Object(h.bindActionCreators)({
                closeModal: c.c
            }, e)
        }

        function a(e) {
            return p.__awaiter(this, void 0, void 0, function() {
                var t, n, i, a, r;
                return p.__generator(this, function(s) {
                    switch (s.label) {
                        case 0:
                            if (t = f.b.get("bits_truex_partner_hash", ""), !(n = f.b.get("bits_truex_api_url", "")) || !t) return f.i.warn("Truex API info missing from dynamic settings"), [2, k.Error];
                            s.label = 1;
                        case 1:
                            return s.trys.push([1, 5, , 6]), [4, fetch(n + "?placement.key=" + t + "&user.uid=" + e + "&max_activities=1")];
                        case 2:
                            return i = s.sent(), i.ok ? [4, i.json()] : [3, 4];
                        case 3:
                            if ((a = s.sent()) && Array.isArray(a) && a.length) return [2, k.Available];
                            s.label = 4;
                        case 4:
                            return [2, k.Unavailable];
                        case 5:
                            return r = s.sent(), f.i.warn("Failed checking ad availability from TrueX, probably due to AdBlock", r), [2, k.AdBlocked];
                        case 6:
                            return [2]
                    }
                })
            })
        }

        function r(e) {
            return {
                adModalOpen: Object(u.b)(e, w),
                isLoggedIn: Object(d.d)(e)
            }
        }

        function s(e) {
            return {
                showWatchAdModal: function(t) {
                    return e(Object(c.d)(w, t))
                }
            }
        }
        var o, l = n(6),
            c = n(37),
            u = n(91),
            d = n(17),
            p = n(0),
            m = n(1),
            h = n(9),
            f = n(2),
            g = n(105),
            v = n(7),
            b = n(20);
        ! function(e) {
            e[e.ExitEarly = 0] = "ExitEarly", e[e.Unknown = 1] = "Unknown", e[e.Adblock = 2] = "Adblock", e[e.LimitReached = 3] = "LimitReached"
        }(o || (o = {}));
        var k, y = n(385),
            _ = n(815),
            C = n(3),
            S = n(857),
            E = (n(858), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.hasAwarded = !1, t.messageHandler = function(e) {
                        return p.__awaiter(t, void 0, void 0, function() {
                            var t, n, i, a, a, r, s;
                            return p.__generator(this, function(l) {
                                switch (l.label) {
                                    case 0:
                                        if (e.origin !== window.location.origin) return [2];
                                        if (!(t = e.data) || "trueXAd" !== t.msgSrc) return [2];
                                        switch (n = t.type) {
                                            case y.a.Ready:
                                                return [3, 1];
                                            case y.a.RequestAd:
                                                return [3, 2];
                                            case y.a.Dimensions:
                                                return [3, 3];
                                            case y.a.OnStart:
                                                return [3, 4];
                                            case y.a.OnCredit:
                                                return [3, 5];
                                            case y.a.OnClose:
                                            case y.a.OnFinish:
                                            case y.a.LimitReached:
                                            case y.a.Adblock:
                                            case y.a.OnError:
                                                return [3, 9]
                                        }
                                        return [3, 10];
                                    case 1:
                                        return i = {
                                            msgSrc: "wateb-ad-modal",
                                            tuid: this.props.tuid
                                        }, e.source.postMessage(i, "*"), [2];
                                    case 2:
                                        try {
                                            if (!(a = JSON.parse(t.activityJSON))) return [2];
                                            Object(_.g)({
                                                campaignID: a.campaign_id.toString(),
                                                requestID: t.requestID,
                                                requestMethod: this.props.requestRef
                                            })
                                        } catch (e) {}
                                        return [2];
                                    case 3:
                                        return t.height && t.width && this.setState({
                                            customDimensions: {
                                                height: t.height,
                                                width: t.width
                                            }
                                        }), [3, 10];
                                    case 4:
                                        try {
                                            if (!(a = JSON.parse(t.activityJSON))) return [2];
                                            Object(_.f)({
                                                requestID: t.requestID,
                                                adblock: !1,
                                                campaignID: a.campaign_id.toString()
                                            })
                                        } catch (e) {}
                                        return [2];
                                    case 5:
                                        return l.trys.push([5, 7, , 8]), [4, this.props.redeemTrueXAd(Object(b.a)({
                                            args: t.engagement.signature_argument_string,
                                            signature: t.engagement.signature,
                                            trueXAd: {
                                                creativeID: t.engagement.ad.creative_id,
                                                campaignID: t.engagement.ad.campaign_id,
                                                name: t.engagement.ad.name,
                                                currencyAmount: t.engagement.ad.currency_amount
                                            },
                                            targetID: this.props.channelID
                                        }))];
                                    case 6:
                                        return r = l.sent(), this.hasAwarded = !0, this.props.onBitsAwarded && this.props.onBitsAwarded(r.data.redeemTrueXAd.grantedBits), [3, 8];
                                    case 7:
                                        return s = l.sent(), f.i.warn("Error while redeeming bits for truex ad", s), this.props.onError && this.props.onError(o.Unknown), [3, 8];
                                    case 8:
                                        return [3, 10];
                                    case 9:
                                        return this.props.onError && (t.type === y.a.LimitReached ? this.props.onError(o.LimitReached) : t.type === y.a.Adblock ? this.props.onError(o.Adblock) : t.type === y.a.OnError ? this.props.onError(o.Unknown) : this.hasAwarded || this.props.onError(o.ExitEarly)), this.props.closeModal(), [3, 10];
                                    case 10:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    window.addEventListener("message", this.messageHandler)
                }, t.prototype.componentWillUnmount = function() {
                    window.removeEventListener("message", this.messageHandler)
                }, t.prototype.render = function() {
                    return m.createElement(C._17, {
                        background: C.m.Base
                    }, m.createElement("div", {
                        className: "t-watch-ads-modal",
                        style: this.state.customDimensions
                    }, m.createElement(g.a, null), m.createElement("iframe", {
                        src: "/products/bits/ad"
                    })))
                }, t = p.__decorate([Object(v.a)(S, {
                    name: "redeemTrueXAd"
                })], t)
            }(m.Component)),
            w = Object(l.a)(null, i)(E),
            N = n(4),
            O = n(832),
            D = n(28);
        ! function(e) {
            e[e.Error = 0] = "Error", e[e.AdBlocked = 1] = "AdBlocked", e[e.Unavailable = 2] = "Unavailable", e[e.Available = 3] = "Available"
        }(k || (k = {}));
        var U, I = function(e) {
                var t = null;
                return e.disableWatchAd && (t = Object(f.d)("Try again later", "Bits--WatchAdOffer")), m.createElement(C._17, {
                    className: "bits-buy-card__offer-row",
                    display: C.H.Flex,
                    flexShrink: 0,
                    borderBottom: !0,
                    justifyContent: C.T.Between,
                    flexWrap: C.K.NoWrap,
                    padding: {
                        x: 2,
                        y: 1
                    }
                }, m.createElement(C.U, {
                    padding: {
                        right: 4
                    }
                }, m.createElement("strong", null, Object(f.d)("Get {minBitsCount} or more Bits by watching short ads", {
                    minBitsCount: e.minPayout
                }, "Bits--WatchAdOffer"))), m.createElement(C.U, {
                    flexShrink: 0,
                    display: C.H.Flex,
                    flexDirection: C.J.Column,
                    alignItems: C.c.End
                }, m.createElement(C.u, {
                    type: C.z.Hollow,
                    "data-a-target": "bits-watch-ad",
                    onClick: e.onWatchAdClick,
                    disabled: e.disableWatchAd
                }, Object(f.d)("Watch Ad", "Bits--WatchAdOffer")), t && m.createElement(C.U, {
                    className: "bits-buy-card__sub-text",
                    alignSelf: C.d.Stretch,
                    textAlign: C._22.Center,
                    margin: {
                        top: .5
                    }
                }, t)))
            },
            x = /version\/([\w\.]+).+?(mobile\s?safari|safari)/i,
            T = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        enableWatchAd: !0
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    return p.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return p.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, a(this.props.truexUserID)];
                                case 1:
                                    return e = t.sent(), Object(_.e)({
                                        channel: this.props.channelLogin,
                                        channelID: this.props.channelID,
                                        available: e === k.Available
                                    }), e !== k.Available && e !== k.AdBlocked && this.setState({
                                        enableWatchAd: !1
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return x.test(navigator.userAgent) ? null : m.createElement(I, p.__assign({}, this.props, {
                        disableWatchAd: !this.state.enableWatchAd
                    }))
                }, t
            }(m.Component),
            F = n(820),
            j = n(260),
            L = n(374),
            R = n(821),
            A = n(376),
            M = n(375),
            B = (n(859), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleBuyClick = function(e) {
                        var n = t.props.channelID || "",
                            i = Object(R.b)({
                                trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                                channelID: n,
                                purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                                bitsAmount: e.currentTarget.dataset.bitsAmount,
                                closeAllBits: t.props.closeAllBits,
                                location: t.props.location
                            });
                        i && (t.props.onBuyPopupClose(i), t.props.onClose())
                    }, t
                }
                return p.__extends(t, e), t.prototype.render = function() {
                    if (this.props.offer.type === F.a) {
                        if (!this.props.channelLogin) return null;
                        var e = this.props.currentUserSHA || "";
                        return m.createElement(T, {
                            key: "wateb",
                            minPayout: this.props.offer.bits,
                            onWatchAdClick: this.props.handleWatchAdClick,
                            truexUserID: e,
                            channelID: this.props.channelID || "",
                            channelLogin: this.props.channelLogin
                        })
                    }
                    var t = null;
                    Object(R.c)(this.props.offer) ? t = m.createElement(C.U, {
                        className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline"
                    }, m.createElement(C._21, {
                        type: C._26.Strong,
                        fontSize: C.L.Size6
                    }, Object(f.d)("Special Offer: 1st Time Buyers", "Bits--BuyCard"))) : Object(R.d)(this.props.offer) && null !== this.props.offer.promotion && this.props.offer.promotion.id === F.c && (t = m.createElement(C.U, {
                        className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline"
                    }, m.createElement(C._21, {
                        type: C._26.Strong,
                        fontSize: C.L.Size6
                    }, Object(f.d)("Flash Sale: Now thru Nov. 27!", "Bits--BuyCard"))));
                    var n = null;
                    this.props.offer.discount && (n = m.createElement("div", {
                        className: "bits-buy-card-offer-row__sub-text"
                    }, Object(f.d)("{percentOff,number,percent} discount", {
                        percentOff: this.props.offer.discount
                    }, "Bits--BuyCard")));
                    var i = null;
                    (Object(R.c)(this.props.offer) || Object(R.e)(this.props.offer)) && (i = m.createElement("div", {
                        className: "bits-buy-card-offer-row__sub-text"
                    }, Object(f.d)("one per account", "Bits--BuyCard")));
                    var a = this.props.isLastRow ? C._17 : C.U;
                    return m.createElement(a, {
                        className: "bits-buy-card-offer-row",
                        flexShrink: 0,
                        display: C.H.Flex,
                        justifyContent: C.T.Center,
                        borderBottom: this.props.isLastRow,
                        flexDirection: C.J.Column,
                        padding: {
                            x: 2,
                            y: 1
                        }
                    }, t, m.createElement(C.U, {
                        display: C.H.Flex,
                        justifyContent: C.T.Between,
                        alignItems: C.c.Center
                    }, m.createElement(C.U, {
                        flexGrow: 1
                    }, m.createElement(C._21, {
                        type: C._26.H5,
                        color: C.F.Base,
                        bold: !0
                    }, this.props.offer.bits, " Bits"), this.getAvailableTiers(this.props.offer.bits)), m.createElement(C.U, {
                        flexShrink: 0,
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.End
                    }, m.createElement(C.u, {
                        onClick: this.handleBuyClick,
                        "data-purchase-url": this.props.offer.url,
                        "data-bits-amount": this.props.offer.bits,
                        "data-a-target": "bits-purchase-button-" + this.props.offer.bits
                    }, this.props.offer.price), (n || i) && m.createElement(C.U, {
                        alignSelf: C.d.Stretch,
                        textAlign: C._22.Right,
                        margin: {
                            top: .5
                        }
                    }, n, i))))
                }, t.prototype.getAvailableTiers = function(e) {
                    var t = this.props.bitsConfig.indexedActions[j.f];
                    t || (t = Object(A.b)());
                    var n = t.orderedTiers.filter(function(t) {
                        return t.bits <= e
                    }).reverse();
                    return m.createElement(C.U, {
                        padding: {
                            top: .5
                        },
                        className: "bits-buy-card-offer-row__tier-bits-images"
                    }, n.map(function(e) {
                        return m.createElement(M.a, {
                            key: e.bits,
                            sources: Object(L.b)(e, 2, !1)
                        })
                    }))
                }, t
            }(m.Component)),
            P = (n(860), function(e) {
                var t = [],
                    n = [],
                    i = null;
                return e.offers.forEach(function(a, r) {
                    var s = m.createElement(B, {
                            key: a.id,
                            offer: a,
                            isLastRow: r + 1 < e.offers.length,
                            bitsConfig: e.bitsConfig,
                            channelID: e.channelID,
                            channelLogin: e.channelLogin,
                            currentUserSHA: e.currentUserSHA,
                            location: e.location,
                            onClose: e.onClose,
                            onBuyPopupClose: e.onBuyPopupClose,
                            handleWatchAdClick: e.handleWatchAdClick,
                            closeAllBits: e.closeAllBits,
                            trackBitsCardInteraction: e.trackBitsCardInteraction
                        }),
                        o = Object(R.d)(a),
                        l = Object(R.c)(a),
                        c = a.type === F.a;
                    l && !e.hidePromos ? t.push(s) : o && !l ? t.push(s) : c && !e.hideWateb ? i = s : c || o || n.push(s)
                }), e.fullsize ? m.createElement(C.U, {
                    className: "bits-buy-card-offers__full-size",
                    flexGrow: 1,
                    flexWrap: C.K.NoWrap,
                    display: C.H.Flex,
                    flexDirection: C.J.Column
                }, i, t, n) : m.createElement(D.b, {
                    className: "bits-buy-card-offers__scroll-view"
                }, m.createElement(C.U, {
                    flexGrow: 1,
                    flexWrap: C.K.NoWrap,
                    display: C.H.Flex,
                    flexDirection: C.J.Column
                }, i, t, n))
            }),
            H = function(e) {
                var t = null;
                e.pricesIncludeVAT && (t = m.createElement(C._21, {
                    italic: !0,
                    type: C._26.P,
                    color: C.F.Alt
                }, Object(f.d)("Prices include VAT", "Bits--BuyCard")));
                var n = null;
                e.minBitsToCheer && e.minBitsToCheer > 1 && (n = m.createElement(C._21, {
                    color: C.F.Alt
                }, Object(f.d)("{displayName} requires {minBits} Bits to Cheer in this channel.", {
                    displayName: e.displayName,
                    minBits: e.minBitsToCheer
                }, "Bits--BuyCard")));
                var i = null;
                return void 0 !== e.bitsBalance && null !== e.bitsBalance && (i = m.createElement(C._21, {
                    color: C.F.Alt
                }, Object(f.d)("You have {totalBits} Bits", {
                    totalBits: m.createElement("strong", {
                        "data-a-target": "buy-card-bits-count"
                    }, e.bitsBalance)
                }, "Bits--BuyCard"))), m.createElement(C._17, {
                    className: "bits-buy-card-header",
                    padding: {
                        x: 1,
                        bottom: 1
                    },
                    borderBottom: !0,
                    flexShrink: 0
                }, m.createElement(C.U, {
                    margin: {
                        bottom: 1
                    }
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    color: C.F.Alt
                }, Object(f.d)("Purchase Bits", "Bits--BuyCard")), t), i, n)
            },
            V = n(824),
            W = function(e) {
                return m.createElement(C.U, {
                    display: C.H.Flex,
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    fullWidth: !0,
                    flexWrap: C.K.NoWrap,
                    padding: {
                        y: 1
                    }
                }, m.createElement(V.a, {
                    prefix: "cheer",
                    amount: e.amount,
                    bitsConfig: e.bitsConfig
                }), m.createElement(C.U, {
                    display: C.H.Flex,
                    padding: {
                        top: 1
                    },
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    flexWrap: C.K.NoWrap
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    bold: !0
                }, Object(f.d)("You got {bitsAmount,number} Bits!", {
                    bitsAmount: e.amount
                }, "Bits--WatchAdAward")), m.createElement(C.P, {
                    padding: {
                        top: 1
                    }
                }, m.createElement(C._21, {
                    color: C.F.Alt2
                }, Object(f.d)("{bitsAmount,number} Bits were added to your Bit inventory.", {
                    bitsAmount: e.amount
                }, "Bits--WatchAdAward"), m.createElement("br", null), Object(f.d)("You can use these Bits to Cheer!", "Bits--WatchAdAward")))), m.createElement(C.U, {
                    display: C.H.Flex,
                    padding: {
                        x: 1,
                        top: 3
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Between
                }, m.createElement(C.u, {
                    onClick: e.onStartCheering
                }, Object(f.d)("Start Cheering", "Bits--WatchAdAward")), m.createElement(C.u, {
                    type: C.z.Hollow,
                    onClick: e.onWatchAnother,
                    disabled: !e.hasAdAvailable
                }, Object(f.d)("Watch Another", "Bits--WatchAdAward"))))
            },
            q = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hasAdAvailable: !0
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    return p.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return p.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, a(this.props.truexUserID)];
                                case 1:
                                    return e = t.sent(), e !== k.Available && this.setState({
                                        hasAdAvailable: !1
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return m.createElement(W, p.__assign({}, this.props, {
                        hasAdAvailable: this.state.hasAdAvailable
                    }))
                }, t
            }(m.Component),
            z = (n(862), function(e) {
                var t = Object(f.d)("Something's wrong!", "Bits--WatchAdError"),
                    n = Object(f.d)("Something went wrong. Wait a while and try again.", "Bits--WatchAdError"),
                    i = "adserrorgeneric";
                switch (e.type) {
                    case o.Adblock:
                        i = "adserroradblock", n = Object(f.d)("We can't load this Ad, probably because Ad Blocking software is running. To watch an ad and get Bits, please disable all Ad Blocking software.", "Bits--WatchAdError");
                        break;
                    case o.LimitReached:
                        i = "adserrorlimit", t = Object(f.d)("Ad Limit Reached", "Bits--WatchAdError"), n = Object(f.d)("That's all the Ads we have for now. Try again tomorrow!", "Bits--WatchAdError");
                        break;
                    case o.ExitEarly:
                        n = Object(f.d)("To get Bits, you must view and interact with the Ad for the minimum amount of time.", "Bits--WatchAdError")
                }
                var a = m.createElement(C.U, {
                    className: "watch-ad-error__footer",
                    display: C.H.Flex,
                    padding: {
                        top: 2
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Center
                }, m.createElement(C.u, {
                    onClick: e.onTryAgain
                }, Object(f.d)("Try Again", "Bits--WatchAdError")));
                return e.type === o.LimitReached && (a = m.createElement(C.U, {
                    className: "watch-ad-error__footer",
                    display: C.H.Flex,
                    padding: {
                        top: 2
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Between
                }, m.createElement(C.u, {
                    onClick: e.onClose
                }, Object(f.d)("Got It", "Bits--WatchAdError")), m.createElement(C.u, {
                    onClick: e.onTryAgain,
                    type: C.z.Hollow
                }, Object(f.d)("Buy Bits", "Bits--WatchAdError")))), m.createElement(C.U, {
                    padding: {
                        x: 1
                    },
                    display: C.H.Flex,
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    fullWidth: !0,
                    flexWrap: C.K.NoWrap
                }, m.createElement(C.U, {
                    padding: {
                        y: 2
                    }
                }, m.createElement("img", {
                    className: "watch-ad-error__error-image",
                    src: j.b + "/light/static/1/" + i + ".png"
                })), m.createElement(C.U, {
                    padding: {
                        bottom: 1
                    }
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    bold: !0
                }, t)), m.createElement(C._21, {
                    color: C.F.Alt2
                }, n), a)
            }),
            G = n(863);
        n(864);
        ! function(e) {
            e[e.Inactive = 0] = "Inactive", e[e.Error = 1] = "Error", e[e.Awarded = 2] = "Awarded"
        }(U || (U = {}));
        var $ = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        wateb: U.Inactive,
                        watebError: null,
                        bitsAwarded: 0
                    }, t.onBuyPopupClose = function(e) {
                        Object(O.a)(e, function() {
                            t.props.data && t.props.data.refetch()
                        })
                    }, t.onAdBitsAwarded = function(e) {
                        t.props.data && !t.props.data.loading && t.props.data.refetch(), t.setState({
                            wateb: U.Awarded,
                            bitsAwarded: e
                        })
                    }, t.handleWatchAdClick = function() {
                        return p.__awaiter(t, void 0, void 0, function() {
                            return p.__generator(this, function(e) {
                                return this.props.data && this.props.data.currentUser && this.props.data.user ? (this.props.showWatchAdModal({
                                    tuid: this.props.data.currentUser.idSHA1,
                                    onBitsAwarded: this.onAdBitsAwarded,
                                    onError: this.receiveAdErrorState,
                                    requestRef: _.c.ShowAdButton,
                                    channelID: this.props.data.user.id
                                }), [2]) : [2]
                            })
                        })
                    }, t.receiveAdErrorState = function(e) {
                        t.setState({
                            wateb: U.Error,
                            watebError: e
                        })
                    }, t.resetAdErrorState = function() {
                        t.state.wateb === U.Error && (t.setState({
                            wateb: U.Inactive
                        }), t.props.data && t.props.data.refetch())
                    }, t
                }
                return p.__extends(t, e), t.prototype.shouldComponentUpdate = function(e) {
                    return !e.adModalOpen
                }, t.prototype.render = function() {
                    var e = {
                            border: !0,
                            background: C.m.Base,
                            fullWidth: !0,
                            elevation: 3
                        },
                        t = N({
                            "bits-buy-card": !0,
                            "bits-buy-card__chat-tooltip": this.props.location === _.b.ChatTooltip
                        }),
                        n = null;
                    if (this.props.location === _.b.ChatTooltip && (n = m.createElement("button", {
                            className: "bits-buy-card__close",
                            onClick: this.props.onClose,
                            "data-a-target": "bits-buy-card-close-button"
                        }, m.createElement(C._8, {
                            asset: C._9.Close,
                            height: 11,
                            width: 11
                        }))), !this.props.data || this.props.data.loading) return m.createElement(C._17, p.__assign({
                        className: t,
                        "data-a-target": "bits-buy-card-loading",
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        textAlign: C._22.Center
                    }, e), m.createElement(C.X, {
                        delay: 0
                    }), m.createElement(C.U, {
                        padding: {
                            top: 2
                        }
                    }, m.createElement(C._21, {
                        italic: !0
                    }, Object(f.d)("Fetching bits", "Bits--BuyCard"))));
                    if (this.props.data.error) return m.createElement(C.U, p.__assign({
                        className: N(t, "bits-buy-card--shorter"),
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        padding: 2,
                        textAlign: C._22.Center,
                        "data-a-target": "bits-buy-card-error"
                    }, e), n, m.createElement(C._21, {
                        italic: !0
                    }, Object(f.d)("Bits prices are unavailable right now. Check back again later.", "Bits--BuyCard")));
                    var i = this.renderWatebCard();
                    if (i) return m.createElement(C._17, p.__assign({
                        className: N(t, "bits-buy-card--shorter"),
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        textAlign: C._22.Center,
                        padding: 1
                    }, e), n, i);
                    var a = [];
                    this.props.data.currentUser ? a = this.props.data.currentUser.bitsOffers : this.props.data.bitsOffers && (a = this.props.data.bitsOffers);
                    var r = a.filter(function(e) {
                            return e.type === F.b
                        }).some(function(e) {
                            return e.includesVAT
                        }),
                        s = this.props.data.user ? this.props.data.user.id : "",
                        o = m.createElement(P, {
                            offers: a,
                            fullsize: this.props.fullsize,
                            hidePromos: this.props.hidePromos,
                            hideWateb: this.props.hideWateb,
                            bitsConfig: this.props.bitsConfig,
                            channelID: s,
                            channelLogin: this.props.channelLogin,
                            closeAllBits: this.props.closeAllBits,
                            currentUserSHA: this.props.data && this.props.data.currentUser && this.props.data.currentUser.idSHA1,
                            handleWatchAdClick: this.handleWatchAdClick,
                            location: this.props.location,
                            onBuyPopupClose: this.onBuyPopupClose,
                            onClose: this.props.onClose,
                            trackBitsCardInteraction: this.props.trackBitsCardInteraction
                        }),
                        l = null;
                    return this.props.location === _.b.ChatTooltip && (l = m.createElement(H, {
                        bitsBalance: this.props.data && this.props.data.currentUser && this.props.data.currentUser.bitsBalance,
                        displayName: this.props.data && this.props.data.user && this.props.data.user.displayName || this.props.channelLogin || "",
                        minBitsToCheer: this.props.data && this.props.data.user && this.props.data.user.cheer && this.props.data.user.cheer.settings.cheerMinimumBits,
                        pricesIncludeVAT: r
                    })), m.createElement(C._17, p.__assign({
                        className: t,
                        padding: {
                            top: 1
                        },
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        "data-a-target": "bits-buy-card"
                    }, e), n, l, o)
                }, t.prototype.renderWatebCard = function() {
                    if (this.props.data && this.props.data.currentUser) switch (this.state.wateb) {
                        case U.Awarded:
                            return m.createElement(q, {
                                bitsConfig: this.props.bitsConfig,
                                amount: this.state.bitsAwarded,
                                onStartCheering: this.props.onClose,
                                onWatchAnother: this.handleWatchAdClick,
                                truexUserID: this.props.data.currentUser.idSHA1
                            });
                        case U.Error:
                            return m.createElement(z, {
                                type: this.state.watebError || o.Unknown,
                                onClose: this.props.onClose,
                                onTryAgain: this.resetAdErrorState
                            });
                        default:
                            return !1
                    }
                }, t = p.__decorate([Object(v.a)(G, {
                    name: "data",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin,
                                withChannel: !!e.channelLogin,
                                isLoggedIn: e.isLoggedIn
                            }
                        }
                    }
                })], t)
            }(m.Component),
            J = $,
            K = Object(l.a)(r, s)(J);
        n.d(t, !1, function() {
            return r
        }), n.d(t, !1, function() {
            return s
        }), n.d(t, "a", function() {
            return K
        })
    },
    844: function(e, t, n) {
        "use strict";

        function i(e) {
            return "https://www.twitch.tv/" + e + "/subscribe?ref=in_chat_subscriber_link"
        }

        function a(e) {
            switch (e.clickAction) {
                case s.d:
                    return e.clickURL;
                case s.b:
                    return e.channelName ? i(e.channelName) : "";
                case s.c:
                    return c;
                default:
                    return ""
            }
        }
        n.d(t, "a", function() {
            return u
        });
        var r = n(1),
            s = (n.n(r), n(835)),
            o = n(3),
            l = n(882),
            c = (n.n(l), "https://www.twitch.tv/products/turbo?ref=chat_badge"),
            u = function(e) {
                var t = e.badge,
                    n = r.createElement("img", {
                        alt: t.title,
                        className: "chat-badge",
                        src: t.image1x,
                        srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                    }),
                    i = a(t);
                return "" !== i && (n = r.createElement("a", {
                    href: i,
                    target: "_blank"
                }, n)), r.createElement(o._30, {
                    key: t.image1x,
                    label: t.title,
                    display: o.H.Inline,
                    align: o._31.Left,
                    offsetY: "0.9rem",
                    "data-a-target": "chat-badge"
                }, n)
            }
    },
    845: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return i
        });
        var i = {
            DarkMode: "darkMode",
            FollowerDuration: "followerDuration",
            FollowerMode: "followerMode",
            HideChat: "hideChat",
            ShowMessageFlags: "showMessageFlags",
            ShowModActions: "showModerationActions",
            ShowModIcons: "showModIcons",
            ShowTimestamps: "showTimestamps",
            SlowMode: "slowMode"
        }
    },
    848: function(e, t, n) {
        "use strict";

        function i(e) {
            return Object(d.a)(p, {
                u: e
            })
        }

        function a(e, t) {
            return Object(d.a)(m, {
                url: e,
                text: t
            })
        }

        function r(e, t) {
            return Object(d.a)(h, {
                url: e,
                title: t
            })
        }

        function s(e) {
            return Object(d.a)(f, {
                url: e
            })
        }
        var o = n(0),
            l = n(1),
            c = n(2),
            u = n(856),
            d = n(68),
            p = "https://www.facebook.com/sharer/sharer.php",
            m = "https://www.twitter.com/share",
            h = "https://www.reddit.com/submit",
            f = "https://vk.com/share.php",
            g = n(3);
        n(898);
        n.d(t, "b", function() {
            return v
        }), n.d(t, "a", function() {
            return b
        });
        var v;
        ! function(e) {
            e[e.Twitter = 0] = "Twitter", e[e.Reddit = 1] = "Reddit", e[e.VKontakte = 2] = "VKontakte", e[e.Facebook = 3] = "Facebook", e[e.Copy = 4] = "Copy", e[e.CopyInput = 5] = "CopyInput"
        }(v || (v = {}));
        var b = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n.renderLink = function() {
                    var e = "social-button__link " + n.addSocialClassModifier("social-button__link");
                    return n.isLink() ? l.createElement("a", o.__assign({
                        href: n.getLinkTarget(),
                        target: "_blank",
                        className: e,
                        onClick: n.onShareClickHandler
                    }, Object(g._39)(n.props)), n.renderIcon()) : l.createElement("button", o.__assign({
                        onClick: n.copyPageUrl,
                        onMouseLeave: n.clearIsCopiedStatus,
                        className: e
                    }, Object(g._39)(n.props)), n.renderIcon())
                }, n.onShareClickHandler = function() {
                    n.props.onShareClick && n.props.onShareClick(n.props.type)
                }, n.clearIsCopiedStatus = function() {
                    n.setState({
                        isCopied: !1
                    })
                }, n.getUrl = function() {
                    return n.props.url || window.location.href
                }, n.copyPageUrl = function(e) {
                    e && e.preventDefault(), n.props.onShareClick && n.props.onShareClick(n.props.type), Object(u.a)(n.getUrl()), n.setState({
                        isCopied: !0
                    })
                }, n.renderIcon = function() {
                    var e = n.getAssetFromType();
                    return l.createElement(g.U, {
                        className: "social-button__icon " + n.addSocialClassModifier("social-button__icon")
                    }, l.createElement(g._8, {
                        asset: e,
                        width: 30,
                        height: 30
                    }))
                }, n.isLink = function() {
                    return n.props.type !== v.Copy
                }, n.getTooltipFromType = function() {
                    switch (n.props.type) {
                        case v.Twitter:
                            return "Twitter";
                        case v.Reddit:
                            return "Reddit";
                        case v.Facebook:
                            return "Facebook";
                        case v.VKontakte:
                            return "VKontakte";
                        case v.Copy:
                            return n.state.isCopied ? Object(c.d)("Copied", "SocialButton") : Object(c.d)("Copy to clipboard", "SocialButton");
                        default:
                            return ""
                    }
                }, n.getAssetFromType = function() {
                    switch (n.props.type) {
                        case v.Twitter:
                            return g._9.Twitter;
                        case v.Facebook:
                            return g._9.Facebook;
                        case v.VKontakte:
                            return g._9.VKontakte;
                        case v.Reddit:
                            return g._9.Reddit;
                        case v.Copy:
                        default:
                            return g._9.Copy
                    }
                }, n.addSocialClassModifier = function(e) {
                    switch (n.props.type) {
                        case v.Twitter:
                            return e + "--twitter";
                        case v.Reddit:
                            return e + "--reddit";
                        case v.Facebook:
                            return e + "--facebook";
                        case v.VKontakte:
                            return e + "--vkontakte";
                        case v.Copy:
                            return e + "--copy";
                        default:
                            return ""
                    }
                }, n.getLinkTarget = function() {
                    var e = n.props,
                        t = e.text,
                        o = e.type,
                        l = n.getUrl(),
                        c = t || "";
                    switch (o) {
                        case v.Reddit:
                            return r(l, c);
                        case v.VKontakte:
                            return s(l);
                        case v.Facebook:
                            return i(l);
                        case v.Twitter:
                            return a(l, c);
                        default:
                            return ""
                    }
                }, n.state = {
                    isCopied: !1
                }, n
            }
            return o.__extends(t, e), t.prototype.render = function() {
                return l.createElement(g.U, {
                    className: "social-button"
                }, l.createElement(g._30, {
                    label: this.getTooltipFromType(),
                    direction: g._32.Top
                }, this.renderLink()))
            }, t
        }(l.Component)
    },
    850: function(e, t, n) {
        "use strict";
        var i = n(1),
            a = n(2),
            r = n(260),
            s = n(375),
            o = n(3),
            l = (n(872), {
                themed: !0,
                dark: {
                    "1x": r.b + "/dark/animated/1/cheertutorial.gif"
                },
                light: {
                    "1x": r.b + "/light/animated/1/cheertutorial.gif"
                }
            }),
            c = function() {
                return i.createElement(o.U, {
                    display: o.H.Flex,
                    padding: {
                        top: 5
                    },
                    flexGrow: 1,
                    flexDirection: o.J.Column,
                    justifyContent: o.T.Center,
                    alignItems: o.c.Center
                }, i.createElement(o._21, {
                    type: o._26.H4,
                    bold: !0
                }, i.createElement(s.a, {
                    className: "cheermote-help__tutorial-image",
                    sources: l
                }), Object(a.d)("How to Cheer", "Bits--CheermoteHelp")), i.createElement("p", {
                    className: "t-bits-card__contents-body t-bits-card__contents-body--narrow"
                }, Object(a.d)('Type "cheer" + the number of Bits you want to Cheer.', "Bits--CheermoteHelp")))
            };
        n.d(t, "a", function() {
            return c
        })
    },
    851: function(e, t, n) {
        "use strict";

        function i() {
            var e = o.k.get(c, {});
            return s.__assign({
                lastUsedFollowerDurations: {},
                showAutoModActions: !0,
                showMessageFlags: !0,
                showModerationActions: !0,
                showModIcons: !1,
                showTimestamps: !1,
                zachModeStatus: l
            }, e)
        }

        function a(e, t) {
            var n = i();
            n[e] = t, o.k.set(c, n)
        }

        function r(e, t) {
            var n = i();
            n.lastUsedFollowerDurations[e] = t, o.k.set(c, n)
        }
        var s = n(0),
            o = n(2),
            l = "control";
        t.a = i, t.b = a, t.c = r;
        var c = "chatSettings"
    },
    852: function(e, t, n) {
        "use strict";

        function i(e, t, n, i) {
            return {
                type: e,
                id: Object(a.a)(t + "-mod"),
                userLogin: t,
                reason: n,
                duration: i
            }
        }
        t.a = i;
        var a = n(816)
    },
    853: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return r
        });
        var i = n(1),
            a = (n.n(i), n(844)),
            r = function(e) {
                var t = Object.keys(e.badgesToRender).map(function(t) {
                        var n = e.badgesToRender[t],
                            r = e.badgeSets.getBadge(t, n);
                        return null === r ? null : i.createElement(a.a, {
                            key: r.setID + "/" + r.version,
                            badge: r
                        })
                    }),
                    n = t.filter(function(e) {
                        return null !== e
                    });
                return i.createElement("span", null, n)
            }
    },
    854: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ClipsChatCard_Clip"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "slug"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clip"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "slug"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "url"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "curator"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "broadcaster"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "game"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "title"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "thumbnailURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 233
            }
        };
        n.loc.source = {
            body: "query ClipsChatCard_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    slug\n    url\n    curator {\n      displayName\n    }\n    broadcaster {\n      displayName\n    }\n    game {\n      displayName\n    }\n    title\n    thumbnailURL\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    855: function(e, t, n) {
        "use strict";
        n.d(t, "b", function() {
            return l
        }), n.d(t, "a", function() {
            return c
        }), n.d(t, "c", function() {
            return u
        });
        var i = n(0),
            a = n(2),
            r = n(13),
            s = n(845),
            o = n(834),
            l = function(e) {
                a.m.track(r.SpadeEventType.ChatSettingsOpened, Object(o.a)(e))
            },
            c = function(e) {
                var t = i.__assign({}, Object(o.a)(e), {
                    setting_name: e.settingName,
                    new_value: e.newValue.toString()
                });
                a.m.track(r.SpadeEventType.ChatSettingsChanged, t)
            },
            u = function(e) {
                var t = i.__assign({}, Object(o.a)(e), {
                    setting_name: s.a.FollowerDuration,
                    new_value: e.newValue.toString(),
                    follower_mode_on: e.followerModeOn
                });
                a.m.track(r.SpadeEventType.ChatSettingsChanged, t)
            }
    },
    856: function(e, t, n) {
        "use strict";

        function i(e) {
            var t = document.createElement("textarea");
            t.style.position = "fixed", t.style.top = "0", t.style.left = "0", t.style.width = "2em", t.style.height = "2em", t.style.padding = "0", t.style.border = "none", t.style.outline = "none", t.style.boxShadow = "none", t.style.background = "transparent", t.value = e, document.body.appendChild(t), t.select();
            var n = !0;
            try {
                n = document.execCommand("copy")
            } catch (e) {
                n = !1
            }
            return document.body.removeChild(t), n
        }
        t.a = i
    },
    857: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "WatchAdModal_Redeeem"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "RedeemTrueXAdInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "redeemTrueXAd"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "grantedBits"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 114
            }
        };
        n.loc.source = {
            body: "mutation WatchAdModal_Redeeem($input:RedeemTrueXAdInput!) {\n  redeemTrueXAd(input:$input) {\n    grantedBits\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    858: function(e, t) {},
    859: function(e, t) {},
    860: function(e, t) {},
    861: function(e, t) {},
    862: function(e, t) {},
    863: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Bits_BuyCard_Offers"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "withChannel"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isLoggedIn"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsOffers"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "skip"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "bitsOffersFragment"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "idSHA1"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsOffers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "bitsOffersFragment"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "withChannel"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 528
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/bits/models/bits-offers-fragment.gql"\n\nquery Bits_BuyCard_Offers($withChannel: Boolean!, $isLoggedIn: Boolean!, $channelLogin: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffersFragment\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffersFragment\n    }\n  }\n  user(login: $channelLogin) @include(if: $withChannel) {\n    id\n    displayName\n    cheer {\n      id\n      settings {\n        cheerMinimumBits\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(841).definitions)), e.exports = i
    },
    864: function(e, t) {},
    865: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var i = n(0),
            a = n(1),
            r = (n.n(a), n(3)),
            s = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isDraggingOver: !1
                    }, t.refHandler = function(e) {
                        t.fileInputRef = e
                    }, t.onFilePickerClick = function() {
                        t.fileInputRef.click()
                    }, t.onDragOver = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !0
                        })
                    }, t.onDragLeave = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !1
                        })
                    }, t.onFileInputChange = function(e) {
                        e.preventDefault(), t.finalizeSelections(e.target.files)
                    }, t.onFileDrop = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !1
                        }), t.finalizeSelections(e.dataTransfer.files)
                    }, t
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    return a.createElement("div", {
                        "data-test-selector": "file-picker-root",
                        onClick: this.onFilePickerClick,
                        onDragLeave: this.onDragLeave,
                        onDragOver: this.onDragOver,
                        onDrop: this.onFileDrop
                    }, a.createElement(r.I, {
                        dragOver: this.state.isDraggingOver
                    }, a.createElement(r.P, {
                        display: r.H.Hide
                    }, a.createElement("input", {
                        accept: this.props.allowedFileTypes.join(","),
                        multiple: this.props.multiFile || !1,
                        onChange: this.onFileInputChange,
                        ref: this.refHandler,
                        type: "file"
                    })), this.props.children))
                }, t.prototype.finalizeSelections = function(e) {
                    e && this.props.onFilesSubmitted(Array.from(e))
                }, t
            }(a.Component)
    },
    867: function(e, t, n) {
        (function(e, i) {
            var a;
            (function() {
                function r(e, t) {
                    return e.set(t[0], t[1]), e
                }

                function s(e, t) {
                    return e.add(t), e
                }

                function o(e, t, n) {
                    switch (n.length) {
                        case 0:
                            return e.call(t);
                        case 1:
                            return e.call(t, n[0]);
                        case 2:
                            return e.call(t, n[0], n[1]);
                        case 3:
                            return e.call(t, n[0], n[1], n[2])
                    }
                    return e.apply(t, n)
                }

                function l(e, t, n, i) {
                    for (var a = -1, r = null == e ? 0 : e.length; ++a < r;) {
                        var s = e[a];
                        t(i, s, n(s), e)
                    }
                    return i
                }

                function c(e, t) {
                    for (var n = -1, i = null == e ? 0 : e.length; ++n < i && !1 !== t(e[n], n, e););
                    return e
                }

                function u(e, t) {
                    for (var n = null == e ? 0 : e.length; n-- && !1 !== t(e[n], n, e););
                    return e
                }

                function d(e, t) {
                    for (var n = -1, i = null == e ? 0 : e.length; ++n < i;)
                        if (!t(e[n], n, e)) return !1;
                    return !0
                }

                function p(e, t) {
                    for (var n = -1, i = null == e ? 0 : e.length, a = 0, r = []; ++n < i;) {
                        var s = e[n];
                        t(s, n, e) && (r[a++] = s)
                    }
                    return r
                }

                function m(e, t) {
                    return !!(null == e ? 0 : e.length) && E(e, t, 0) > -1
                }

                function h(e, t, n) {
                    for (var i = -1, a = null == e ? 0 : e.length; ++i < a;)
                        if (n(t, e[i])) return !0;
                    return !1
                }

                function f(e, t) {
                    for (var n = -1, i = null == e ? 0 : e.length, a = Array(i); ++n < i;) a[n] = t(e[n], n, e);
                    return a
                }

                function g(e, t) {
                    for (var n = -1, i = t.length, a = e.length; ++n < i;) e[a + n] = t[n];
                    return e
                }

                function v(e, t, n, i) {
                    var a = -1,
                        r = null == e ? 0 : e.length;
                    for (i && r && (n = e[++a]); ++a < r;) n = t(n, e[a], a, e);
                    return n
                }

                function b(e, t, n, i) {
                    var a = null == e ? 0 : e.length;
                    for (i && a && (n = e[--a]); a--;) n = t(n, e[a], a, e);
                    return n
                }

                function k(e, t) {
                    for (var n = -1, i = null == e ? 0 : e.length; ++n < i;)
                        if (t(e[n], n, e)) return !0;
                    return !1
                }

                function y(e) {
                    return e.split("")
                }

                function _(e) {
                    return e.match(Pt) || []
                }

                function C(e, t, n) {
                    var i;
                    return n(e, function(e, n, a) {
                        if (t(e, n, a)) return i = n, !1
                    }), i
                }

                function S(e, t, n, i) {
                    for (var a = e.length, r = n + (i ? 1 : -1); i ? r-- : ++r < a;)
                        if (t(e[r], r, e)) return r;
                    return -1
                }

                function E(e, t, n) {
                    return t === t ? Y(e, t, n) : S(e, N, n)
                }

                function w(e, t, n, i) {
                    for (var a = n - 1, r = e.length; ++a < r;)
                        if (i(e[a], t)) return a;
                    return -1
                }

                function N(e) {
                    return e !== e
                }

                function O(e, t) {
                    var n = null == e ? 0 : e.length;
                    return n ? T(e, t) / n : Le
                }

                function D(e) {
                    return function(t) {
                        return null == t ? ae : t[e]
                    }
                }

                function U(e) {
                    return function(t) {
                        return null == e ? ae : e[t]
                    }
                }

                function I(e, t, n, i, a) {
                    return a(e, function(e, a, r) {
                        n = i ? (i = !1, e) : t(n, e, a, r)
                    }), n
                }

                function x(e, t) {
                    var n = e.length;
                    for (e.sort(t); n--;) e[n] = e[n].value;
                    return e
                }

                function T(e, t) {
                    for (var n, i = -1, a = e.length; ++i < a;) {
                        var r = t(e[i]);
                        r !== ae && (n = n === ae ? r : n + r)
                    }
                    return n
                }

                function F(e, t) {
                    for (var n = -1, i = Array(e); ++n < e;) i[n] = t(n);
                    return i
                }

                function j(e, t) {
                    return f(t, function(t) {
                        return [t, e[t]]
                    })
                }

                function L(e) {
                    return function(t) {
                        return e(t)
                    }
                }

                function R(e, t) {
                    return f(t, function(t) {
                        return e[t]
                    })
                }

                function A(e, t) {
                    return e.has(t)
                }

                function M(e, t) {
                    for (var n = -1, i = e.length; ++n < i && E(t, e[n], 0) > -1;);
                    return n
                }

                function B(e, t) {
                    for (var n = e.length; n-- && E(t, e[n], 0) > -1;);
                    return n
                }

                function P(e, t) {
                    for (var n = e.length, i = 0; n--;) e[n] === t && ++i;
                    return i
                }

                function H(e) {
                    return "\\" + Dn[e]
                }

                function V(e, t) {
                    return null == e ? ae : e[t]
                }

                function W(e) {
                    return kn.test(e)
                }

                function q(e) {
                    return yn.test(e)
                }

                function z(e) {
                    for (var t, n = []; !(t = e.next()).done;) n.push(t.value);
                    return n
                }

                function G(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e, i) {
                        n[++t] = [i, e]
                    }), n
                }

                function $(e, t) {
                    return function(n) {
                        return e(t(n))
                    }
                }

                function J(e, t) {
                    for (var n = -1, i = e.length, a = 0, r = []; ++n < i;) {
                        var s = e[n];
                        s !== t && s !== ue || (e[n] = ue, r[a++] = n)
                    }
                    return r
                }

                function K(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e) {
                        n[++t] = e
                    }), n
                }

                function Q(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e) {
                        n[++t] = [e, e]
                    }), n
                }

                function Y(e, t, n) {
                    for (var i = n - 1, a = e.length; ++i < a;)
                        if (e[i] === t) return i;
                    return -1
                }

                function X(e, t, n) {
                    for (var i = n + 1; i--;)
                        if (e[i] === t) return i;
                    return i
                }

                function Z(e) {
                    return W(e) ? te(e) : zn(e)
                }

                function ee(e) {
                    return W(e) ? ne(e) : y(e)
                }

                function te(e) {
                    for (var t = vn.lastIndex = 0; vn.test(e);) ++t;
                    return t
                }

                function ne(e) {
                    return e.match(vn) || []
                }

                function ie(e) {
                    return e.match(bn) || []
                }
                var ae, re = 200,
                    se = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",
                    oe = "Expected a function",
                    le = "__lodash_hash_undefined__",
                    ce = 500,
                    ue = "__lodash_placeholder__",
                    de = 1,
                    pe = 2,
                    me = 4,
                    he = 1,
                    fe = 2,
                    ge = 1,
                    ve = 2,
                    be = 4,
                    ke = 8,
                    ye = 16,
                    _e = 32,
                    Ce = 64,
                    Se = 128,
                    Ee = 256,
                    we = 512,
                    Ne = 30,
                    Oe = "...",
                    De = 800,
                    Ue = 16,
                    Ie = 1,
                    xe = 2,
                    Te = 1 / 0,
                    Fe = 9007199254740991,
                    je = 1.7976931348623157e308,
                    Le = NaN,
                    Re = 4294967295,
                    Ae = Re - 1,
                    Me = Re >>> 1,
                    Be = [
                        ["ary", Se],
                        ["bind", ge],
                        ["bindKey", ve],
                        ["curry", ke],
                        ["curryRight", ye],
                        ["flip", we],
                        ["partial", _e],
                        ["partialRight", Ce],
                        ["rearg", Ee]
                    ],
                    Pe = "[object Arguments]",
                    He = "[object Array]",
                    Ve = "[object AsyncFunction]",
                    We = "[object Boolean]",
                    qe = "[object Date]",
                    ze = "[object DOMException]",
                    Ge = "[object Error]",
                    $e = "[object Function]",
                    Je = "[object GeneratorFunction]",
                    Ke = "[object Map]",
                    Qe = "[object Number]",
                    Ye = "[object Null]",
                    Xe = "[object Object]",
                    Ze = "[object Proxy]",
                    et = "[object RegExp]",
                    tt = "[object Set]",
                    nt = "[object String]",
                    it = "[object Symbol]",
                    at = "[object Undefined]",
                    rt = "[object WeakMap]",
                    st = "[object WeakSet]",
                    ot = "[object ArrayBuffer]",
                    lt = "[object DataView]",
                    ct = "[object Float32Array]",
                    ut = "[object Float64Array]",
                    dt = "[object Int8Array]",
                    pt = "[object Int16Array]",
                    mt = "[object Int32Array]",
                    ht = "[object Uint8Array]",
                    ft = "[object Uint8ClampedArray]",
                    gt = "[object Uint16Array]",
                    vt = "[object Uint32Array]",
                    bt = /\b__p \+= '';/g,
                    kt = /\b(__p \+=) '' \+/g,
                    yt = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                    _t = /&(?:amp|lt|gt|quot|#39);/g,
                    Ct = /[&<>"']/g,
                    St = RegExp(_t.source),
                    Et = RegExp(Ct.source),
                    wt = /<%-([\s\S]+?)%>/g,
                    Nt = /<%([\s\S]+?)%>/g,
                    Ot = /<%=([\s\S]+?)%>/g,
                    Dt = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                    Ut = /^\w*$/,
                    It = /^\./,
                    xt = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                    Tt = /[\\^$.*+?()[\]{}|]/g,
                    Ft = RegExp(Tt.source),
                    jt = /^\s+|\s+$/g,
                    Lt = /^\s+/,
                    Rt = /\s+$/,
                    At = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                    Mt = /\{\n\/\* \[wrapped with (.+)\] \*/,
                    Bt = /,? & /,
                    Pt = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                    Ht = /\\(\\)?/g,
                    Vt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                    Wt = /\w*$/,
                    qt = /^[-+]0x[0-9a-f]+$/i,
                    zt = /^0b[01]+$/i,
                    Gt = /^\[object .+?Constructor\]$/,
                    $t = /^0o[0-7]+$/i,
                    Jt = /^(?:0|[1-9]\d*)$/,
                    Kt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                    Qt = /($^)/,
                    Yt = /['\n\r\u2028\u2029\\]/g,
                    Xt = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                    Zt = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                    en = "[" + Zt + "]",
                    tn = "[" + Xt + "]",
                    nn = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
                    an = "[^\\ud800-\\udfff" + Zt + "\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
                    rn = "\\ud83c[\\udffb-\\udfff]",
                    sn = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                    on = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                    ln = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
                    cn = "(?:" + nn + "|" + an + ")",
                    un = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
                    dn = "(?:\\u200d(?:" + ["[^\\ud800-\\udfff]", sn, on].join("|") + ")[\\ufe0e\\ufe0f]?" + un + ")*",
                    pn = "[\\ufe0e\\ufe0f]?" + un + dn,
                    mn = "(?:" + ["[\\u2700-\\u27bf]", sn, on].join("|") + ")" + pn,
                    hn = "(?:" + ["[^\\ud800-\\udfff]" + tn + "?", tn, sn, on, "[\\ud800-\\udfff]"].join("|") + ")",
                    fn = RegExp("['’]", "g"),
                    gn = RegExp(tn, "g"),
                    vn = RegExp(rn + "(?=" + rn + ")|" + hn + pn, "g"),
                    bn = RegExp([ln + "?" + nn + "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" + [en, ln, "$"].join("|") + ")", "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" + [en, ln + cn, "$"].join("|") + ")", ln + "?" + cn + "+(?:['’](?:d|ll|m|re|s|t|ve))?", ln + "+(?:['’](?:D|LL|M|RE|S|T|VE))?", "\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)", "\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)", "\\d+", mn].join("|"), "g"),
                    kn = RegExp("[\\u200d\\ud800-\\udfff" + Xt + "\\ufe0e\\ufe0f]"),
                    yn = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                    _n = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                    Cn = -1,
                    Sn = {};
                Sn[ct] = Sn[ut] = Sn[dt] = Sn[pt] = Sn[mt] = Sn[ht] = Sn[ft] = Sn[gt] = Sn[vt] = !0, Sn[Pe] = Sn[He] = Sn[ot] = Sn[We] = Sn[lt] = Sn[qe] = Sn[Ge] = Sn[$e] = Sn[Ke] = Sn[Qe] = Sn[Xe] = Sn[et] = Sn[tt] = Sn[nt] = Sn[rt] = !1;
                var En = {};
                En[Pe] = En[He] = En[ot] = En[lt] = En[We] = En[qe] = En[ct] = En[ut] = En[dt] = En[pt] = En[mt] = En[Ke] = En[Qe] = En[Xe] = En[et] = En[tt] = En[nt] = En[it] = En[ht] = En[ft] = En[gt] = En[vt] = !0, En[Ge] = En[$e] = En[rt] = !1;
                var wn = {
                        "À": "A",
                        "Á": "A",
                        "Â": "A",
                        "Ã": "A",
                        "Ä": "A",
                        "Å": "A",
                        "à": "a",
                        "á": "a",
                        "â": "a",
                        "ã": "a",
                        "ä": "a",
                        "å": "a",
                        "Ç": "C",
                        "ç": "c",
                        "Ð": "D",
                        "ð": "d",
                        "È": "E",
                        "É": "E",
                        "Ê": "E",
                        "Ë": "E",
                        "è": "e",
                        "é": "e",
                        "ê": "e",
                        "ë": "e",
                        "Ì": "I",
                        "Í": "I",
                        "Î": "I",
                        "Ï": "I",
                        "ì": "i",
                        "í": "i",
                        "î": "i",
                        "ï": "i",
                        "Ñ": "N",
                        "ñ": "n",
                        "Ò": "O",
                        "Ó": "O",
                        "Ô": "O",
                        "Õ": "O",
                        "Ö": "O",
                        "Ø": "O",
                        "ò": "o",
                        "ó": "o",
                        "ô": "o",
                        "õ": "o",
                        "ö": "o",
                        "ø": "o",
                        "Ù": "U",
                        "Ú": "U",
                        "Û": "U",
                        "Ü": "U",
                        "ù": "u",
                        "ú": "u",
                        "û": "u",
                        "ü": "u",
                        "Ý": "Y",
                        "ý": "y",
                        "ÿ": "y",
                        "Æ": "Ae",
                        "æ": "ae",
                        "Þ": "Th",
                        "þ": "th",
                        "ß": "ss",
                        "Ā": "A",
                        "Ă": "A",
                        "Ą": "A",
                        "ā": "a",
                        "ă": "a",
                        "ą": "a",
                        "Ć": "C",
                        "Ĉ": "C",
                        "Ċ": "C",
                        "Č": "C",
                        "ć": "c",
                        "ĉ": "c",
                        "ċ": "c",
                        "č": "c",
                        "Ď": "D",
                        "Đ": "D",
                        "ď": "d",
                        "đ": "d",
                        "Ē": "E",
                        "Ĕ": "E",
                        "Ė": "E",
                        "Ę": "E",
                        "Ě": "E",
                        "ē": "e",
                        "ĕ": "e",
                        "ė": "e",
                        "ę": "e",
                        "ě": "e",
                        "Ĝ": "G",
                        "Ğ": "G",
                        "Ġ": "G",
                        "Ģ": "G",
                        "ĝ": "g",
                        "ğ": "g",
                        "ġ": "g",
                        "ģ": "g",
                        "Ĥ": "H",
                        "Ħ": "H",
                        "ĥ": "h",
                        "ħ": "h",
                        "Ĩ": "I",
                        "Ī": "I",
                        "Ĭ": "I",
                        "Į": "I",
                        "İ": "I",
                        "ĩ": "i",
                        "ī": "i",
                        "ĭ": "i",
                        "į": "i",
                        "ı": "i",
                        "Ĵ": "J",
                        "ĵ": "j",
                        "Ķ": "K",
                        "ķ": "k",
                        "ĸ": "k",
                        "Ĺ": "L",
                        "Ļ": "L",
                        "Ľ": "L",
                        "Ŀ": "L",
                        "Ł": "L",
                        "ĺ": "l",
                        "ļ": "l",
                        "ľ": "l",
                        "ŀ": "l",
                        "ł": "l",
                        "Ń": "N",
                        "Ņ": "N",
                        "Ň": "N",
                        "Ŋ": "N",
                        "ń": "n",
                        "ņ": "n",
                        "ň": "n",
                        "ŋ": "n",
                        "Ō": "O",
                        "Ŏ": "O",
                        "Ő": "O",
                        "ō": "o",
                        "ŏ": "o",
                        "ő": "o",
                        "Ŕ": "R",
                        "Ŗ": "R",
                        "Ř": "R",
                        "ŕ": "r",
                        "ŗ": "r",
                        "ř": "r",
                        "Ś": "S",
                        "Ŝ": "S",
                        "Ş": "S",
                        "Š": "S",
                        "ś": "s",
                        "ŝ": "s",
                        "ş": "s",
                        "š": "s",
                        "Ţ": "T",
                        "Ť": "T",
                        "Ŧ": "T",
                        "ţ": "t",
                        "ť": "t",
                        "ŧ": "t",
                        "Ũ": "U",
                        "Ū": "U",
                        "Ŭ": "U",
                        "Ů": "U",
                        "Ű": "U",
                        "Ų": "U",
                        "ũ": "u",
                        "ū": "u",
                        "ŭ": "u",
                        "ů": "u",
                        "ű": "u",
                        "ų": "u",
                        "Ŵ": "W",
                        "ŵ": "w",
                        "Ŷ": "Y",
                        "ŷ": "y",
                        "Ÿ": "Y",
                        "Ź": "Z",
                        "Ż": "Z",
                        "Ž": "Z",
                        "ź": "z",
                        "ż": "z",
                        "ž": "z",
                        "Ĳ": "IJ",
                        "ĳ": "ij",
                        "Œ": "Oe",
                        "œ": "oe",
                        "ŉ": "'n",
                        "ſ": "s"
                    },
                    Nn = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#39;"
                    },
                    On = {
                        "&amp;": "&",
                        "&lt;": "<",
                        "&gt;": ">",
                        "&quot;": '"',
                        "&#39;": "'"
                    },
                    Dn = {
                        "\\": "\\",
                        "'": "'",
                        "\n": "n",
                        "\r": "r",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    },
                    Un = parseFloat,
                    In = parseInt,
                    xn = "object" == typeof e && e && e.Object === Object && e,
                    Tn = "object" == typeof self && self && self.Object === Object && self,
                    Fn = xn || Tn || Function("return this")(),
                    jn = "object" == typeof t && t && !t.nodeType && t,
                    Ln = jn && "object" == typeof i && i && !i.nodeType && i,
                    Rn = Ln && Ln.exports === jn,
                    An = Rn && xn.process,
                    Mn = function() {
                        try {
                            return An && An.binding && An.binding("util")
                        } catch (e) {}
                    }(),
                    Bn = Mn && Mn.isArrayBuffer,
                    Pn = Mn && Mn.isDate,
                    Hn = Mn && Mn.isMap,
                    Vn = Mn && Mn.isRegExp,
                    Wn = Mn && Mn.isSet,
                    qn = Mn && Mn.isTypedArray,
                    zn = D("length"),
                    Gn = U(wn),
                    $n = U(Nn),
                    Jn = U(On),
                    Kn = function e(t) {
                        function n(e) {
                            if (rl(e) && !gp(e) && !(e instanceof y)) {
                                if (e instanceof a) return e;
                                if (gu.call(e, "__wrapped__")) return ts(e)
                            }
                            return new a(e)
                        }

                        function i() {}

                        function a(e, t) {
                            this.__wrapped__ = e, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = ae
                        }

                        function y(e) {
                            this.__wrapped__ = e, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Re, this.__views__ = []
                        }

                        function U() {
                            var e = new y(this.__wrapped__);
                            return e.__actions__ = Aa(this.__actions__), e.__dir__ = this.__dir__, e.__filtered__ = this.__filtered__, e.__iteratees__ = Aa(this.__iteratees__), e.__takeCount__ = this.__takeCount__, e.__views__ = Aa(this.__views__), e
                        }

                        function Y() {
                            if (this.__filtered__) {
                                var e = new y(this);
                                e.__dir__ = -1, e.__filtered__ = !0
                            } else e = this.clone(), e.__dir__ *= -1;
                            return e
                        }

                        function te() {
                            var e = this.__wrapped__.value(),
                                t = this.__dir__,
                                n = gp(e),
                                i = t < 0,
                                a = n ? e.length : 0,
                                r = Nr(0, a, this.__views__),
                                s = r.start,
                                o = r.end,
                                l = o - s,
                                c = i ? o : s - 1,
                                u = this.__iteratees__,
                                d = u.length,
                                p = 0,
                                m = Gu(l, this.__takeCount__);
                            if (!n || !i && a == l && m == l) return ba(e, this.__actions__);
                            var h = [];
                            e: for (; l-- && p < m;) {
                                c += t;
                                for (var f = -1, g = e[c]; ++f < d;) {
                                    var v = u[f],
                                        b = v.iteratee,
                                        k = v.type,
                                        y = b(g);
                                    if (k == xe) g = y;
                                    else if (!y) {
                                        if (k == Ie) continue e;
                                        break e
                                    }
                                }
                                h[p++] = g
                            }
                            return h
                        }

                        function ne(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var i = e[t];
                                this.set(i[0], i[1])
                            }
                        }

                        function Pt() {
                            this.__data__ = nd ? nd(null) : {}, this.size = 0
                        }

                        function Xt(e) {
                            var t = this.has(e) && delete this.__data__[e];
                            return this.size -= t ? 1 : 0, t
                        }

                        function Zt(e) {
                            var t = this.__data__;
                            if (nd) {
                                var n = t[e];
                                return n === le ? ae : n
                            }
                            return gu.call(t, e) ? t[e] : ae
                        }

                        function en(e) {
                            var t = this.__data__;
                            return nd ? t[e] !== ae : gu.call(t, e)
                        }

                        function tn(e, t) {
                            var n = this.__data__;
                            return this.size += this.has(e) ? 0 : 1, n[e] = nd && t === ae ? le : t, this
                        }

                        function nn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var i = e[t];
                                this.set(i[0], i[1])
                            }
                        }

                        function an() {
                            this.__data__ = [], this.size = 0
                        }

                        function rn(e) {
                            var t = this.__data__,
                                n = Qn(t, e);
                            return !(n < 0) && (n == t.length - 1 ? t.pop() : Iu.call(t, n, 1), --this.size, !0)
                        }

                        function sn(e) {
                            var t = this.__data__,
                                n = Qn(t, e);
                            return n < 0 ? ae : t[n][1]
                        }

                        function on(e) {
                            return Qn(this.__data__, e) > -1
                        }

                        function ln(e, t) {
                            var n = this.__data__,
                                i = Qn(n, e);
                            return i < 0 ? (++this.size, n.push([e, t])) : n[i][1] = t, this
                        }

                        function cn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var i = e[t];
                                this.set(i[0], i[1])
                            }
                        }

                        function un() {
                            this.size = 0, this.__data__ = {
                                hash: new ne,
                                map: new(Xu || nn),
                                string: new ne
                            }
                        }

                        function dn(e) {
                            var t = Cr(this, e).delete(e);
                            return this.size -= t ? 1 : 0, t
                        }

                        function pn(e) {
                            return Cr(this, e).get(e)
                        }

                        function mn(e) {
                            return Cr(this, e).has(e)
                        }

                        function hn(e, t) {
                            var n = Cr(this, e),
                                i = n.size;
                            return n.set(e, t), this.size += n.size == i ? 0 : 1, this
                        }

                        function vn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.__data__ = new cn; ++t < n;) this.add(e[t])
                        }

                        function bn(e) {
                            return this.__data__.set(e, le), this
                        }

                        function kn(e) {
                            return this.__data__.has(e)
                        }

                        function yn(e) {
                            var t = this.__data__ = new nn(e);
                            this.size = t.size
                        }

                        function wn() {
                            this.__data__ = new nn, this.size = 0
                        }

                        function Nn(e) {
                            var t = this.__data__,
                                n = t.delete(e);
                            return this.size = t.size, n
                        }

                        function On(e) {
                            return this.__data__.get(e)
                        }

                        function Dn(e) {
                            return this.__data__.has(e)
                        }

                        function xn(e, t) {
                            var n = this.__data__;
                            if (n instanceof nn) {
                                var i = n.__data__;
                                if (!Xu || i.length < re - 1) return i.push([e, t]), this.size = ++n.size, this;
                                n = this.__data__ = new cn(i)
                            }
                            return n.set(e, t), this.size = n.size, this
                        }

                        function Tn(e, t) {
                            var n = gp(e),
                                i = !n && fp(e),
                                a = !n && !i && bp(e),
                                r = !n && !i && !a && Sp(e),
                                s = n || i || a || r,
                                o = s ? F(e.length, cu) : [],
                                l = o.length;
                            for (var c in e) !t && !gu.call(e, c) || s && ("length" == c || a && ("offset" == c || "parent" == c) || r && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || jr(c, l)) || o.push(c);
                            return o
                        }

                        function jn(e) {
                            var t = e.length;
                            return t ? e[Zi(0, t - 1)] : ae
                        }

                        function Ln(e, t) {
                            return Yr(Aa(e), ni(t, 0, e.length))
                        }

                        function An(e) {
                            return Yr(Aa(e))
                        }

                        function Mn(e, t, n) {
                            (n === ae || zo(e[t], n)) && (n !== ae || t in e) || ei(e, t, n)
                        }

                        function zn(e, t, n) {
                            var i = e[t];
                            gu.call(e, t) && zo(i, n) && (n !== ae || t in e) || ei(e, t, n)
                        }

                        function Qn(e, t) {
                            for (var n = e.length; n--;)
                                if (zo(e[n][0], t)) return n;
                            return -1
                        }

                        function Yn(e, t, n, i) {
                            return hd(e, function(e, a, r) {
                                t(i, e, n(e), r)
                            }), i
                        }

                        function Xn(e, t) {
                            return e && Ma(t, Pl(t), e)
                        }

                        function Zn(e, t) {
                            return e && Ma(t, Hl(t), e)
                        }

                        function ei(e, t, n) {
                            "__proto__" == t && ju ? ju(e, t, {
                                configurable: !0,
                                enumerable: !0,
                                value: n,
                                writable: !0
                            }) : e[t] = n
                        }

                        function ti(e, t) {
                            for (var n = -1, i = t.length, a = nu(i), r = null == e; ++n < i;) a[n] = r ? ae : Al(e, t[n]);
                            return a
                        }

                        function ni(e, t, n) {
                            return e === e && (n !== ae && (e = e <= n ? e : n), t !== ae && (e = e >= t ? e : t)), e
                        }

                        function ii(e, t, n, i, a, r) {
                            var s, o = t & de,
                                l = t & pe,
                                u = t & me;
                            if (n && (s = a ? n(e, i, a, r) : n(e)), s !== ae) return s;
                            if (!al(e)) return e;
                            var d = gp(e);
                            if (d) {
                                if (s = Ur(e), !o) return Aa(e, s)
                            } else {
                                var p = Nd(e),
                                    m = p == $e || p == Je;
                                if (bp(e)) return wa(e, o);
                                if (p == Xe || p == Pe || m && !a) {
                                    if (s = l || m ? {} : Ir(e), !o) return l ? Pa(e, Zn(s, e)) : Ba(e, Xn(s, e))
                                } else {
                                    if (!En[p]) return a ? e : {};
                                    s = xr(e, p, ii, o)
                                }
                            }
                            r || (r = new yn);
                            var h = r.get(e);
                            if (h) return h;
                            r.set(e, s);
                            var f = u ? l ? br : vr : l ? Hl : Pl,
                                g = d ? ae : f(e);
                            return c(g || e, function(i, a) {
                                g && (a = i, i = e[a]), zn(s, a, ii(i, t, n, a, e, r))
                            }), s
                        }

                        function ai(e) {
                            var t = Pl(e);
                            return function(n) {
                                return ri(n, e, t)
                            }
                        }

                        function ri(e, t, n) {
                            var i = n.length;
                            if (null == e) return !i;
                            for (e = ou(e); i--;) {
                                var a = n[i],
                                    r = t[a],
                                    s = e[a];
                                if (s === ae && !(a in e) || !r(s)) return !1
                            }
                            return !0
                        }

                        function si(e, t, n) {
                            if ("function" != typeof e) throw new uu(oe);
                            return Ud(function() {
                                e.apply(ae, n)
                            }, t)
                        }

                        function oi(e, t, n, i) {
                            var a = -1,
                                r = m,
                                s = !0,
                                o = e.length,
                                l = [],
                                c = t.length;
                            if (!o) return l;
                            n && (t = f(t, L(n))), i ? (r = h, s = !1) : t.length >= re && (r = A, s = !1, t = new vn(t));
                            e: for (; ++a < o;) {
                                var u = e[a],
                                    d = null == n ? u : n(u);
                                if (u = i || 0 !== u ? u : 0, s && d === d) {
                                    for (var p = c; p--;)
                                        if (t[p] === d) continue e;
                                    l.push(u)
                                } else r(t, d, i) || l.push(u)
                            }
                            return l
                        }

                        function li(e, t) {
                            var n = !0;
                            return hd(e, function(e, i, a) {
                                return n = !!t(e, i, a)
                            }), n
                        }

                        function ci(e, t, n) {
                            for (var i = -1, a = e.length; ++i < a;) {
                                var r = e[i],
                                    s = t(r);
                                if (null != s && (o === ae ? s === s && !gl(s) : n(s, o))) var o = s,
                                    l = r
                            }
                            return l
                        }

                        function ui(e, t, n, i) {
                            var a = e.length;
                            for (n = Cl(n), n < 0 && (n = -n > a ? 0 : a + n), i = i === ae || i > a ? a : Cl(i), i < 0 && (i += a), i = n > i ? 0 : Sl(i); n < i;) e[n++] = t;
                            return e
                        }

                        function di(e, t) {
                            var n = [];
                            return hd(e, function(e, i, a) {
                                t(e, i, a) && n.push(e)
                            }), n
                        }

                        function pi(e, t, n, i, a) {
                            var r = -1,
                                s = e.length;
                            for (n || (n = Fr), a || (a = []); ++r < s;) {
                                var o = e[r];
                                t > 0 && n(o) ? t > 1 ? pi(o, t - 1, n, i, a) : g(a, o) : i || (a[a.length] = o)
                            }
                            return a
                        }

                        function mi(e, t) {
                            return e && gd(e, t, Pl)
                        }

                        function hi(e, t) {
                            return e && vd(e, t, Pl)
                        }

                        function fi(e, t) {
                            return p(t, function(t) {
                                return tl(e[t])
                            })
                        }

                        function gi(e, t) {
                            t = Sa(t, e);
                            for (var n = 0, i = t.length; null != e && n < i;) e = e[Xr(t[n++])];
                            return n && n == i ? e : ae
                        }

                        function vi(e, t, n) {
                            var i = t(e);
                            return gp(e) ? i : g(i, n(e))
                        }

                        function bi(e) {
                            return null == e ? e === ae ? at : Ye : Fu && Fu in ou(e) ? wr(e) : zr(e)
                        }

                        function ki(e, t) {
                            return e > t
                        }

                        function yi(e, t) {
                            return null != e && gu.call(e, t)
                        }

                        function _i(e, t) {
                            return null != e && t in ou(e)
                        }

                        function Ci(e, t, n) {
                            return e >= Gu(t, n) && e < zu(t, n)
                        }

                        function Si(e, t, n) {
                            for (var i = n ? h : m, a = e[0].length, r = e.length, s = r, o = nu(r), l = 1 / 0, c = []; s--;) {
                                var u = e[s];
                                s && t && (u = f(u, L(t))), l = Gu(u.length, l), o[s] = !n && (t || a >= 120 && u.length >= 120) ? new vn(s && u) : ae
                            }
                            u = e[0];
                            var d = -1,
                                p = o[0];
                            e: for (; ++d < a && c.length < l;) {
                                var g = u[d],
                                    v = t ? t(g) : g;
                                if (g = n || 0 !== g ? g : 0, !(p ? A(p, v) : i(c, v, n))) {
                                    for (s = r; --s;) {
                                        var b = o[s];
                                        if (!(b ? A(b, v) : i(e[s], v, n))) continue e
                                    }
                                    p && p.push(v), c.push(g)
                                }
                            }
                            return c
                        }

                        function Ei(e, t, n, i) {
                            return mi(e, function(e, a, r) {
                                t(i, n(e), a, r)
                            }), i
                        }

                        function wi(e, t, n) {
                            t = Sa(t, e), e = $r(e, t);
                            var i = null == e ? e : e[Xr(ys(t))];
                            return null == i ? ae : o(i, e, n)
                        }

                        function Ni(e) {
                            return rl(e) && bi(e) == Pe
                        }

                        function Oi(e) {
                            return rl(e) && bi(e) == ot
                        }

                        function Di(e) {
                            return rl(e) && bi(e) == qe
                        }

                        function Ui(e, t, n, i, a) {
                            return e === t || (null == e || null == t || !rl(e) && !rl(t) ? e !== e && t !== t : Ii(e, t, n, i, Ui, a))
                        }

                        function Ii(e, t, n, i, a, r) {
                            var s = gp(e),
                                o = gp(t),
                                l = s ? He : Nd(e),
                                c = o ? He : Nd(t);
                            l = l == Pe ? Xe : l, c = c == Pe ? Xe : c;
                            var u = l == Xe,
                                d = c == Xe,
                                p = l == c;
                            if (p && bp(e)) {
                                if (!bp(t)) return !1;
                                s = !0, u = !1
                            }
                            if (p && !u) return r || (r = new yn), s || Sp(e) ? mr(e, t, n, i, a, r) : hr(e, t, l, n, i, a, r);
                            if (!(n & he)) {
                                var m = u && gu.call(e, "__wrapped__"),
                                    h = d && gu.call(t, "__wrapped__");
                                if (m || h) {
                                    var f = m ? e.value() : e,
                                        g = h ? t.value() : t;
                                    return r || (r = new yn), a(f, g, n, i, r)
                                }
                            }
                            return !!p && (r || (r = new yn), fr(e, t, n, i, a, r))
                        }

                        function xi(e) {
                            return rl(e) && Nd(e) == Ke
                        }

                        function Ti(e, t, n, i) {
                            var a = n.length,
                                r = a,
                                s = !i;
                            if (null == e) return !r;
                            for (e = ou(e); a--;) {
                                var o = n[a];
                                if (s && o[2] ? o[1] !== e[o[0]] : !(o[0] in e)) return !1
                            }
                            for (; ++a < r;) {
                                o = n[a];
                                var l = o[0],
                                    c = e[l],
                                    u = o[1];
                                if (s && o[2]) {
                                    if (c === ae && !(l in e)) return !1
                                } else {
                                    var d = new yn;
                                    if (i) var p = i(c, u, l, e, t, d);
                                    if (!(p === ae ? Ui(u, c, he | fe, i, d) : p)) return !1
                                }
                            }
                            return !0
                        }

                        function Fi(e) {
                            return !(!al(e) || Br(e)) && (tl(e) ? Cu : Gt).test(Zr(e))
                        }

                        function ji(e) {
                            return rl(e) && bi(e) == et
                        }

                        function Li(e) {
                            return rl(e) && Nd(e) == tt
                        }

                        function Ri(e) {
                            return rl(e) && il(e.length) && !!Sn[bi(e)]
                        }

                        function Ai(e) {
                            return "function" == typeof e ? e : null == e ? Ic : "object" == typeof e ? gp(e) ? Wi(e[0], e[1]) : Vi(e) : Mc(e)
                        }

                        function Mi(e) {
                            if (!Pr(e)) return qu(e);
                            var t = [];
                            for (var n in ou(e)) gu.call(e, n) && "constructor" != n && t.push(n);
                            return t
                        }

                        function Bi(e) {
                            if (!al(e)) return qr(e);
                            var t = Pr(e),
                                n = [];
                            for (var i in e)("constructor" != i || !t && gu.call(e, i)) && n.push(i);
                            return n
                        }

                        function Pi(e, t) {
                            return e < t
                        }

                        function Hi(e, t) {
                            var n = -1,
                                i = Go(e) ? nu(e.length) : [];
                            return hd(e, function(e, a, r) {
                                i[++n] = t(e, a, r)
                            }), i
                        }

                        function Vi(e) {
                            var t = Sr(e);
                            return 1 == t.length && t[0][2] ? Vr(t[0][0], t[0][1]) : function(n) {
                                return n === e || Ti(n, e, t)
                            }
                        }

                        function Wi(e, t) {
                            return Rr(e) && Hr(t) ? Vr(Xr(e), t) : function(n) {
                                var i = Al(n, e);
                                return i === ae && i === t ? Bl(n, e) : Ui(t, i, he | fe)
                            }
                        }

                        function qi(e, t, n, i, a) {
                            e !== t && gd(t, function(r, s) {
                                if (al(r)) a || (a = new yn), zi(e, t, s, n, qi, i, a);
                                else {
                                    var o = i ? i(e[s], r, s + "", e, t, a) : ae;
                                    o === ae && (o = r), Mn(e, s, o)
                                }
                            }, Hl)
                        }

                        function zi(e, t, n, i, a, r, s) {
                            var o = e[n],
                                l = t[n],
                                c = s.get(l);
                            if (c) return void Mn(e, n, c);
                            var u = r ? r(o, l, n + "", e, t, s) : ae,
                                d = u === ae;
                            if (d) {
                                var p = gp(l),
                                    m = !p && bp(l),
                                    h = !p && !m && Sp(l);
                                u = l, p || m || h ? gp(o) ? u = o : $o(o) ? u = Aa(o) : m ? (d = !1, u = wa(l, !0)) : h ? (d = !1, u = Ta(l, !0)) : u = [] : ml(l) || fp(l) ? (u = o, fp(o) ? u = wl(o) : (!al(o) || i && tl(o)) && (u = Ir(l))) : d = !1
                            }
                            d && (s.set(l, u), a(u, l, i, r, s), s.delete(l)), Mn(e, n, u)
                        }

                        function Gi(e, t) {
                            var n = e.length;
                            if (n) return t += t < 0 ? n : 0, jr(t, n) ? e[t] : ae
                        }

                        function $i(e, t, n) {
                            var i = -1;
                            return t = f(t.length ? t : [Ic], L(_r())), x(Hi(e, function(e, n, a) {
                                return {
                                    criteria: f(t, function(t) {
                                        return t(e)
                                    }),
                                    index: ++i,
                                    value: e
                                }
                            }), function(e, t) {
                                return ja(e, t, n)
                            })
                        }

                        function Ji(e, t) {
                            return Ki(e, t, function(t, n) {
                                return Bl(e, n)
                            })
                        }

                        function Ki(e, t, n) {
                            for (var i = -1, a = t.length, r = {}; ++i < a;) {
                                var s = t[i],
                                    o = gi(e, s);
                                n(o, s) && ra(r, Sa(s, e), o)
                            }
                            return r
                        }

                        function Qi(e) {
                            return function(t) {
                                return gi(t, e)
                            }
                        }

                        function Yi(e, t, n, i) {
                            var a = i ? w : E,
                                r = -1,
                                s = t.length,
                                o = e;
                            for (e === t && (t = Aa(t)), n && (o = f(e, L(n))); ++r < s;)
                                for (var l = 0, c = t[r], u = n ? n(c) : c;
                                    (l = a(o, u, l, i)) > -1;) o !== e && Iu.call(o, l, 1), Iu.call(e, l, 1);
                            return e
                        }

                        function Xi(e, t) {
                            for (var n = e ? t.length : 0, i = n - 1; n--;) {
                                var a = t[n];
                                if (n == i || a !== r) {
                                    var r = a;
                                    jr(a) ? Iu.call(e, a, 1) : fa(e, a)
                                }
                            }
                            return e
                        }

                        function Zi(e, t) {
                            return e + Bu(Ku() * (t - e + 1))
                        }

                        function ea(e, t, n, i) {
                            for (var a = -1, r = zu(Mu((t - e) / (n || 1)), 0), s = nu(r); r--;) s[i ? r : ++a] = e, e += n;
                            return s
                        }

                        function ta(e, t) {
                            var n = "";
                            if (!e || t < 1 || t > Fe) return n;
                            do {
                                t % 2 && (n += e), (t = Bu(t / 2)) && (e += e)
                            } while (t);
                            return n
                        }

                        function na(e, t) {
                            return Id(Gr(e, t, Ic), e + "")
                        }

                        function ia(e) {
                            return jn(Zl(e))
                        }

                        function aa(e, t) {
                            var n = Zl(e);
                            return Yr(n, ni(t, 0, n.length))
                        }

                        function ra(e, t, n, i) {
                            if (!al(e)) return e;
                            t = Sa(t, e);
                            for (var a = -1, r = t.length, s = r - 1, o = e; null != o && ++a < r;) {
                                var l = Xr(t[a]),
                                    c = n;
                                if (a != s) {
                                    var u = o[l];
                                    c = i ? i(u, l, o) : ae, c === ae && (c = al(u) ? u : jr(t[a + 1]) ? [] : {})
                                }
                                zn(o, l, c), o = o[l]
                            }
                            return e
                        }

                        function sa(e) {
                            return Yr(Zl(e))
                        }

                        function oa(e, t, n) {
                            var i = -1,
                                a = e.length;
                            t < 0 && (t = -t > a ? 0 : a + t), n = n > a ? a : n, n < 0 && (n += a), a = t > n ? 0 : n - t >>> 0, t >>>= 0;
                            for (var r = nu(a); ++i < a;) r[i] = e[i + t];
                            return r
                        }

                        function la(e, t) {
                            var n;
                            return hd(e, function(e, i, a) {
                                return !(n = t(e, i, a))
                            }), !!n
                        }

                        function ca(e, t, n) {
                            var i = 0,
                                a = null == e ? i : e.length;
                            if ("number" == typeof t && t === t && a <= Me) {
                                for (; i < a;) {
                                    var r = i + a >>> 1,
                                        s = e[r];
                                    null !== s && !gl(s) && (n ? s <= t : s < t) ? i = r + 1 : a = r
                                }
                                return a
                            }
                            return ua(e, t, Ic, n)
                        }

                        function ua(e, t, n, i) {
                            t = n(t);
                            for (var a = 0, r = null == e ? 0 : e.length, s = t !== t, o = null === t, l = gl(t), c = t === ae; a < r;) {
                                var u = Bu((a + r) / 2),
                                    d = n(e[u]),
                                    p = d !== ae,
                                    m = null === d,
                                    h = d === d,
                                    f = gl(d);
                                if (s) var g = i || h;
                                else g = c ? h && (i || p) : o ? h && p && (i || !m) : l ? h && p && !m && (i || !f) : !m && !f && (i ? d <= t : d < t);
                                g ? a = u + 1 : r = u
                            }
                            return Gu(r, Ae)
                        }

                        function da(e, t) {
                            for (var n = -1, i = e.length, a = 0, r = []; ++n < i;) {
                                var s = e[n],
                                    o = t ? t(s) : s;
                                if (!n || !zo(o, l)) {
                                    var l = o;
                                    r[a++] = 0 === s ? 0 : s
                                }
                            }
                            return r
                        }

                        function pa(e) {
                            return "number" == typeof e ? e : gl(e) ? Le : +e
                        }

                        function ma(e) {
                            if ("string" == typeof e) return e;
                            if (gp(e)) return f(e, ma) + "";
                            if (gl(e)) return pd ? pd.call(e) : "";
                            var t = e + "";
                            return "0" == t && 1 / e == -Te ? "-0" : t
                        }

                        function ha(e, t, n) {
                            var i = -1,
                                a = m,
                                r = e.length,
                                s = !0,
                                o = [],
                                l = o;
                            if (n) s = !1, a = h;
                            else if (r >= re) {
                                var c = t ? null : Cd(e);
                                if (c) return K(c);
                                s = !1, a = A, l = new vn
                            } else l = t ? [] : o;
                            e: for (; ++i < r;) {
                                var u = e[i],
                                    d = t ? t(u) : u;
                                if (u = n || 0 !== u ? u : 0, s && d === d) {
                                    for (var p = l.length; p--;)
                                        if (l[p] === d) continue e;
                                    t && l.push(d), o.push(u)
                                } else a(l, d, n) || (l !== o && l.push(d), o.push(u))
                            }
                            return o
                        }

                        function fa(e, t) {
                            return t = Sa(t, e), null == (e = $r(e, t)) || delete e[Xr(ys(t))]
                        }

                        function ga(e, t, n, i) {
                            return ra(e, t, n(gi(e, t)), i)
                        }

                        function va(e, t, n, i) {
                            for (var a = e.length, r = i ? a : -1;
                                (i ? r-- : ++r < a) && t(e[r], r, e););
                            return n ? oa(e, i ? 0 : r, i ? r + 1 : a) : oa(e, i ? r + 1 : 0, i ? a : r)
                        }

                        function ba(e, t) {
                            var n = e;
                            return n instanceof y && (n = n.value()), v(t, function(e, t) {
                                return t.func.apply(t.thisArg, g([e], t.args))
                            }, n)
                        }

                        function ka(e, t, n) {
                            var i = e.length;
                            if (i < 2) return i ? ha(e[0]) : [];
                            for (var a = -1, r = nu(i); ++a < i;)
                                for (var s = e[a], o = -1; ++o < i;) o != a && (r[a] = oi(r[a] || s, e[o], t, n));
                            return ha(pi(r, 1), t, n)
                        }

                        function ya(e, t, n) {
                            for (var i = -1, a = e.length, r = t.length, s = {}; ++i < a;) {
                                var o = i < r ? t[i] : ae;
                                n(s, e[i], o)
                            }
                            return s
                        }

                        function _a(e) {
                            return $o(e) ? e : []
                        }

                        function Ca(e) {
                            return "function" == typeof e ? e : Ic
                        }

                        function Sa(e, t) {
                            return gp(e) ? e : Rr(e, t) ? [e] : xd(Ol(e))
                        }

                        function Ea(e, t, n) {
                            var i = e.length;
                            return n = n === ae ? i : n, !t && n >= i ? e : oa(e, t, n)
                        }

                        function wa(e, t) {
                            if (t) return e.slice();
                            var n = e.length,
                                i = Nu ? Nu(n) : new e.constructor(n);
                            return e.copy(i), i
                        }

                        function Na(e) {
                            var t = new e.constructor(e.byteLength);
                            return new wu(t).set(new wu(e)), t
                        }

                        function Oa(e, t) {
                            var n = t ? Na(e.buffer) : e.buffer;
                            return new e.constructor(n, e.byteOffset, e.byteLength)
                        }

                        function Da(e, t, n) {
                            return v(t ? n(G(e), de) : G(e), r, new e.constructor)
                        }

                        function Ua(e) {
                            var t = new e.constructor(e.source, Wt.exec(e));
                            return t.lastIndex = e.lastIndex, t
                        }

                        function Ia(e, t, n) {
                            return v(t ? n(K(e), de) : K(e), s, new e.constructor)
                        }

                        function xa(e) {
                            return dd ? ou(dd.call(e)) : {}
                        }

                        function Ta(e, t) {
                            var n = t ? Na(e.buffer) : e.buffer;
                            return new e.constructor(n, e.byteOffset, e.length)
                        }

                        function Fa(e, t) {
                            if (e !== t) {
                                var n = e !== ae,
                                    i = null === e,
                                    a = e === e,
                                    r = gl(e),
                                    s = t !== ae,
                                    o = null === t,
                                    l = t === t,
                                    c = gl(t);
                                if (!o && !c && !r && e > t || r && s && l && !o && !c || i && s && l || !n && l || !a) return 1;
                                if (!i && !r && !c && e < t || c && n && a && !i && !r || o && n && a || !s && a || !l) return -1
                            }
                            return 0
                        }

                        function ja(e, t, n) {
                            for (var i = -1, a = e.criteria, r = t.criteria, s = a.length, o = n.length; ++i < s;) {
                                var l = Fa(a[i], r[i]);
                                if (l) {
                                    if (i >= o) return l;
                                    return l * ("desc" == n[i] ? -1 : 1)
                                }
                            }
                            return e.index - t.index
                        }

                        function La(e, t, n, i) {
                            for (var a = -1, r = e.length, s = n.length, o = -1, l = t.length, c = zu(r - s, 0), u = nu(l + c), d = !i; ++o < l;) u[o] = t[o];
                            for (; ++a < s;)(d || a < r) && (u[n[a]] = e[a]);
                            for (; c--;) u[o++] = e[a++];
                            return u
                        }

                        function Ra(e, t, n, i) {
                            for (var a = -1, r = e.length, s = -1, o = n.length, l = -1, c = t.length, u = zu(r - o, 0), d = nu(u + c), p = !i; ++a < u;) d[a] = e[a];
                            for (var m = a; ++l < c;) d[m + l] = t[l];
                            for (; ++s < o;)(p || a < r) && (d[m + n[s]] = e[a++]);
                            return d
                        }

                        function Aa(e, t) {
                            var n = -1,
                                i = e.length;
                            for (t || (t = nu(i)); ++n < i;) t[n] = e[n];
                            return t
                        }

                        function Ma(e, t, n, i) {
                            var a = !n;
                            n || (n = {});
                            for (var r = -1, s = t.length; ++r < s;) {
                                var o = t[r],
                                    l = i ? i(n[o], e[o], o, n, e) : ae;
                                l === ae && (l = e[o]), a ? ei(n, o, l) : zn(n, o, l)
                            }
                            return n
                        }

                        function Ba(e, t) {
                            return Ma(e, Ed(e), t)
                        }

                        function Pa(e, t) {
                            return Ma(e, wd(e), t)
                        }

                        function Ha(e, t) {
                            return function(n, i) {
                                var a = gp(n) ? l : Yn,
                                    r = t ? t() : {};
                                return a(n, e, _r(i, 2), r)
                            }
                        }

                        function Va(e) {
                            return na(function(t, n) {
                                var i = -1,
                                    a = n.length,
                                    r = a > 1 ? n[a - 1] : ae,
                                    s = a > 2 ? n[2] : ae;
                                for (r = e.length > 3 && "function" == typeof r ? (a--, r) : ae, s && Lr(n[0], n[1], s) && (r = a < 3 ? ae : r, a = 1), t = ou(t); ++i < a;) {
                                    var o = n[i];
                                    o && e(t, o, i, r)
                                }
                                return t
                            })
                        }

                        function Wa(e, t) {
                            return function(n, i) {
                                if (null == n) return n;
                                if (!Go(n)) return e(n, i);
                                for (var a = n.length, r = t ? a : -1, s = ou(n);
                                    (t ? r-- : ++r < a) && !1 !== i(s[r], r, s););
                                return n
                            }
                        }

                        function qa(e) {
                            return function(t, n, i) {
                                for (var a = -1, r = ou(t), s = i(t), o = s.length; o--;) {
                                    var l = s[e ? o : ++a];
                                    if (!1 === n(r[l], l, r)) break
                                }
                                return t
                            }
                        }

                        function za(e, t, n) {
                            function i() {
                                return (this && this !== Fn && this instanceof i ? r : e).apply(a ? n : this, arguments)
                            }
                            var a = t & ge,
                                r = Ja(e);
                            return i
                        }

                        function Ga(e) {
                            return function(t) {
                                t = Ol(t);
                                var n = W(t) ? ee(t) : ae,
                                    i = n ? n[0] : t.charAt(0),
                                    a = n ? Ea(n, 1).join("") : t.slice(1);
                                return i[e]() + a
                            }
                        }

                        function $a(e) {
                            return function(t) {
                                return v(wc(rc(t).replace(fn, "")), e, "")
                            }
                        }

                        function Ja(e) {
                            return function() {
                                var t = arguments;
                                switch (t.length) {
                                    case 0:
                                        return new e;
                                    case 1:
                                        return new e(t[0]);
                                    case 2:
                                        return new e(t[0], t[1]);
                                    case 3:
                                        return new e(t[0], t[1], t[2]);
                                    case 4:
                                        return new e(t[0], t[1], t[2], t[3]);
                                    case 5:
                                        return new e(t[0], t[1], t[2], t[3], t[4]);
                                    case 6:
                                        return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
                                    case 7:
                                        return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                                }
                                var n = md(e.prototype),
                                    i = e.apply(n, t);
                                return al(i) ? i : n
                            }
                        }

                        function Ka(e, t, n) {
                            function i() {
                                for (var r = arguments.length, s = nu(r), l = r, c = yr(i); l--;) s[l] = arguments[l];
                                var u = r < 3 && s[0] !== c && s[r - 1] !== c ? [] : J(s, c);
                                return (r -= u.length) < n ? sr(e, t, Xa, i.placeholder, ae, s, u, ae, ae, n - r) : o(this && this !== Fn && this instanceof i ? a : e, this, s)
                            }
                            var a = Ja(e);
                            return i
                        }

                        function Qa(e) {
                            return function(t, n, i) {
                                var a = ou(t);
                                if (!Go(t)) {
                                    var r = _r(n, 3);
                                    t = Pl(t), n = function(e) {
                                        return r(a[e], e, a)
                                    }
                                }
                                var s = e(t, n, i);
                                return s > -1 ? a[r ? t[s] : s] : ae
                            }
                        }

                        function Ya(e) {
                            return gr(function(t) {
                                var n = t.length,
                                    i = n,
                                    r = a.prototype.thru;
                                for (e && t.reverse(); i--;) {
                                    var s = t[i];
                                    if ("function" != typeof s) throw new uu(oe);
                                    if (r && !o && "wrapper" == kr(s)) var o = new a([], !0)
                                }
                                for (i = o ? i : n; ++i < n;) {
                                    s = t[i];
                                    var l = kr(s),
                                        c = "wrapper" == l ? Sd(s) : ae;
                                    o = c && Mr(c[0]) && c[1] == (Se | ke | _e | Ee) && !c[4].length && 1 == c[9] ? o[kr(c[0])].apply(o, c[3]) : 1 == s.length && Mr(s) ? o[l]() : o.thru(s)
                                }
                                return function() {
                                    var e = arguments,
                                        i = e[0];
                                    if (o && 1 == e.length && gp(i)) return o.plant(i).value();
                                    for (var a = 0, r = n ? t[a].apply(this, e) : i; ++a < n;) r = t[a].call(this, r);
                                    return r
                                }
                            })
                        }

                        function Xa(e, t, n, i, a, r, s, o, l, c) {
                            function u() {
                                for (var v = arguments.length, b = nu(v), k = v; k--;) b[k] = arguments[k];
                                if (h) var y = yr(u),
                                    _ = P(b, y);
                                if (i && (b = La(b, i, a, h)), r && (b = Ra(b, r, s, h)), v -= _, h && v < c) {
                                    var C = J(b, y);
                                    return sr(e, t, Xa, u.placeholder, n, b, C, o, l, c - v)
                                }
                                var S = p ? n : this,
                                    E = m ? S[e] : e;
                                return v = b.length, o ? b = Jr(b, o) : f && v > 1 && b.reverse(), d && l < v && (b.length = l), this && this !== Fn && this instanceof u && (E = g || Ja(E)), E.apply(S, b)
                            }
                            var d = t & Se,
                                p = t & ge,
                                m = t & ve,
                                h = t & (ke | ye),
                                f = t & we,
                                g = m ? ae : Ja(e);
                            return u
                        }

                        function Za(e, t) {
                            return function(n, i) {
                                return Ei(n, e, t(i), {})
                            }
                        }

                        function er(e, t) {
                            return function(n, i) {
                                var a;
                                if (n === ae && i === ae) return t;
                                if (n !== ae && (a = n), i !== ae) {
                                    if (a === ae) return i;
                                    "string" == typeof n || "string" == typeof i ? (n = ma(n), i = ma(i)) : (n = pa(n), i = pa(i)), a = e(n, i)
                                }
                                return a
                            }
                        }

                        function tr(e) {
                            return gr(function(t) {
                                return t = f(t, L(_r())), na(function(n) {
                                    var i = this;
                                    return e(t, function(e) {
                                        return o(e, i, n)
                                    })
                                })
                            })
                        }

                        function nr(e, t) {
                            t = t === ae ? " " : ma(t);
                            var n = t.length;
                            if (n < 2) return n ? ta(t, e) : t;
                            var i = ta(t, Mu(e / Z(t)));
                            return W(t) ? Ea(ee(i), 0, e).join("") : i.slice(0, e)
                        }

                        function ir(e, t, n, i) {
                            function a() {
                                for (var t = -1, l = arguments.length, c = -1, u = i.length, d = nu(u + l), p = this && this !== Fn && this instanceof a ? s : e; ++c < u;) d[c] = i[c];
                                for (; l--;) d[c++] = arguments[++t];
                                return o(p, r ? n : this, d)
                            }
                            var r = t & ge,
                                s = Ja(e);
                            return a
                        }

                        function ar(e) {
                            return function(t, n, i) {
                                return i && "number" != typeof i && Lr(t, n, i) && (n = i = ae), t = _l(t), n === ae ? (n = t, t = 0) : n = _l(n), i = i === ae ? t < n ? 1 : -1 : _l(i), ea(t, n, i, e)
                            }
                        }

                        function rr(e) {
                            return function(t, n) {
                                return "string" == typeof t && "string" == typeof n || (t = El(t), n = El(n)), e(t, n)
                            }
                        }

                        function sr(e, t, n, i, a, r, s, o, l, c) {
                            var u = t & ke,
                                d = u ? s : ae,
                                p = u ? ae : s,
                                m = u ? r : ae,
                                h = u ? ae : r;
                            t |= u ? _e : Ce, (t &= ~(u ? Ce : _e)) & be || (t &= ~(ge | ve));
                            var f = [e, t, a, m, d, h, p, o, l, c],
                                g = n.apply(ae, f);
                            return Mr(e) && Dd(g, f), g.placeholder = i, Kr(g, e, t)
                        }

                        function or(e) {
                            var t = su[e];
                            return function(e, n) {
                                if (e = El(e), n = null == n ? 0 : Gu(Cl(n), 292)) {
                                    var i = (Ol(e) + "e").split("e");
                                    return i = (Ol(t(i[0] + "e" + (+i[1] + n))) + "e").split("e"), +(i[0] + "e" + (+i[1] - n))
                                }
                                return t(e)
                            }
                        }

                        function lr(e) {
                            return function(t) {
                                var n = Nd(t);
                                return n == Ke ? G(t) : n == tt ? Q(t) : j(t, e(t))
                            }
                        }

                        function cr(e, t, n, i, a, r, s, o) {
                            var l = t & ve;
                            if (!l && "function" != typeof e) throw new uu(oe);
                            var c = i ? i.length : 0;
                            if (c || (t &= ~(_e | Ce), i = a = ae), s = s === ae ? s : zu(Cl(s), 0), o = o === ae ? o : Cl(o), c -= a ? a.length : 0, t & Ce) {
                                var u = i,
                                    d = a;
                                i = a = ae
                            }
                            var p = l ? ae : Sd(e),
                                m = [e, t, n, i, a, u, d, r, s, o];
                            if (p && Wr(m, p), e = m[0], t = m[1], n = m[2], i = m[3], a = m[4], o = m[9] = m[9] === ae ? l ? 0 : e.length : zu(m[9] - c, 0), !o && t & (ke | ye) && (t &= ~(ke | ye)), t && t != ge) h = t == ke || t == ye ? Ka(e, t, o) : t != _e && t != (ge | _e) || a.length ? Xa.apply(ae, m) : ir(e, t, n, i);
                            else var h = za(e, t, n);
                            return Kr((p ? bd : Dd)(h, m), e, t)
                        }

                        function ur(e, t, n, i) {
                            return e === ae || zo(e, mu[n]) && !gu.call(i, n) ? t : e
                        }

                        function dr(e, t, n, i, a, r) {
                            return al(e) && al(t) && (r.set(t, e), qi(e, t, ae, dr, r), r.delete(t)), e
                        }

                        function pr(e) {
                            return ml(e) ? ae : e
                        }

                        function mr(e, t, n, i, a, r) {
                            var s = n & he,
                                o = e.length,
                                l = t.length;
                            if (o != l && !(s && l > o)) return !1;
                            var c = r.get(e);
                            if (c && r.get(t)) return c == t;
                            var u = -1,
                                d = !0,
                                p = n & fe ? new vn : ae;
                            for (r.set(e, t), r.set(t, e); ++u < o;) {
                                var m = e[u],
                                    h = t[u];
                                if (i) var f = s ? i(h, m, u, t, e, r) : i(m, h, u, e, t, r);
                                if (f !== ae) {
                                    if (f) continue;
                                    d = !1;
                                    break
                                }
                                if (p) {
                                    if (!k(t, function(e, t) {
                                            if (!A(p, t) && (m === e || a(m, e, n, i, r))) return p.push(t)
                                        })) {
                                        d = !1;
                                        break
                                    }
                                } else if (m !== h && !a(m, h, n, i, r)) {
                                    d = !1;
                                    break
                                }
                            }
                            return r.delete(e), r.delete(t), d
                        }

                        function hr(e, t, n, i, a, r, s) {
                            switch (n) {
                                case lt:
                                    if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                                    e = e.buffer, t = t.buffer;
                                case ot:
                                    return !(e.byteLength != t.byteLength || !r(new wu(e), new wu(t)));
                                case We:
                                case qe:
                                case Qe:
                                    return zo(+e, +t);
                                case Ge:
                                    return e.name == t.name && e.message == t.message;
                                case et:
                                case nt:
                                    return e == t + "";
                                case Ke:
                                    var o = G;
                                case tt:
                                    var l = i & he;
                                    if (o || (o = K), e.size != t.size && !l) return !1;
                                    var c = s.get(e);
                                    if (c) return c == t;
                                    i |= fe, s.set(e, t);
                                    var u = mr(o(e), o(t), i, a, r, s);
                                    return s.delete(e), u;
                                case it:
                                    if (dd) return dd.call(e) == dd.call(t)
                            }
                            return !1
                        }

                        function fr(e, t, n, i, a, r) {
                            var s = n & he,
                                o = vr(e),
                                l = o.length;
                            if (l != vr(t).length && !s) return !1;
                            for (var c = l; c--;) {
                                var u = o[c];
                                if (!(s ? u in t : gu.call(t, u))) return !1
                            }
                            var d = r.get(e);
                            if (d && r.get(t)) return d == t;
                            var p = !0;
                            r.set(e, t), r.set(t, e);
                            for (var m = s; ++c < l;) {
                                u = o[c];
                                var h = e[u],
                                    f = t[u];
                                if (i) var g = s ? i(f, h, u, t, e, r) : i(h, f, u, e, t, r);
                                if (!(g === ae ? h === f || a(h, f, n, i, r) : g)) {
                                    p = !1;
                                    break
                                }
                                m || (m = "constructor" == u)
                            }
                            if (p && !m) {
                                var v = e.constructor,
                                    b = t.constructor;
                                v != b && "constructor" in e && "constructor" in t && !("function" == typeof v && v instanceof v && "function" == typeof b && b instanceof b) && (p = !1)
                            }
                            return r.delete(e), r.delete(t), p
                        }

                        function gr(e) {
                            return Id(Gr(e, ae, ps), e + "")
                        }

                        function vr(e) {
                            return vi(e, Pl, Ed)
                        }

                        function br(e) {
                            return vi(e, Hl, wd)
                        }

                        function kr(e) {
                            for (var t = e.name + "", n = ad[t], i = gu.call(ad, t) ? n.length : 0; i--;) {
                                var a = n[i],
                                    r = a.func;
                                if (null == r || r == e) return a.name
                            }
                            return t
                        }

                        function yr(e) {
                            return (gu.call(n, "placeholder") ? n : e).placeholder
                        }

                        function _r() {
                            var e = n.iteratee || xc;
                            return e = e === xc ? Ai : e, arguments.length ? e(arguments[0], arguments[1]) : e
                        }

                        function Cr(e, t) {
                            var n = e.__data__;
                            return Ar(t) ? n["string" == typeof t ? "string" : "hash"] : n.map
                        }

                        function Sr(e) {
                            for (var t = Pl(e), n = t.length; n--;) {
                                var i = t[n],
                                    a = e[i];
                                t[n] = [i, a, Hr(a)]
                            }
                            return t
                        }

                        function Er(e, t) {
                            var n = V(e, t);
                            return Fi(n) ? n : ae
                        }

                        function wr(e) {
                            var t = gu.call(e, Fu),
                                n = e[Fu];
                            try {
                                e[Fu] = ae;
                                var i = !0
                            } catch (e) {}
                            var a = ku.call(e);
                            return i && (t ? e[Fu] = n : delete e[Fu]), a
                        }

                        function Nr(e, t, n) {
                            for (var i = -1, a = n.length; ++i < a;) {
                                var r = n[i],
                                    s = r.size;
                                switch (r.type) {
                                    case "drop":
                                        e += s;
                                        break;
                                    case "dropRight":
                                        t -= s;
                                        break;
                                    case "take":
                                        t = Gu(t, e + s);
                                        break;
                                    case "takeRight":
                                        e = zu(e, t - s)
                                }
                            }
                            return {
                                start: e,
                                end: t
                            }
                        }

                        function Or(e) {
                            var t = e.match(Mt);
                            return t ? t[1].split(Bt) : []
                        }

                        function Dr(e, t, n) {
                            t = Sa(t, e);
                            for (var i = -1, a = t.length, r = !1; ++i < a;) {
                                var s = Xr(t[i]);
                                if (!(r = null != e && n(e, s))) break;
                                e = e[s]
                            }
                            return r || ++i != a ? r : !!(a = null == e ? 0 : e.length) && il(a) && jr(s, a) && (gp(e) || fp(e))
                        }

                        function Ur(e) {
                            var t = e.length,
                                n = e.constructor(t);
                            return t && "string" == typeof e[0] && gu.call(e, "index") && (n.index = e.index, n.input = e.input), n
                        }

                        function Ir(e) {
                            return "function" != typeof e.constructor || Pr(e) ? {} : md(Ou(e))
                        }

                        function xr(e, t, n, i) {
                            var a = e.constructor;
                            switch (t) {
                                case ot:
                                    return Na(e);
                                case We:
                                case qe:
                                    return new a(+e);
                                case lt:
                                    return Oa(e, i);
                                case ct:
                                case ut:
                                case dt:
                                case pt:
                                case mt:
                                case ht:
                                case ft:
                                case gt:
                                case vt:
                                    return Ta(e, i);
                                case Ke:
                                    return Da(e, i, n);
                                case Qe:
                                case nt:
                                    return new a(e);
                                case et:
                                    return Ua(e);
                                case tt:
                                    return Ia(e, i, n);
                                case it:
                                    return xa(e)
                            }
                        }

                        function Tr(e, t) {
                            var n = t.length;
                            if (!n) return e;
                            var i = n - 1;
                            return t[i] = (n > 1 ? "& " : "") + t[i], t = t.join(n > 2 ? ", " : " "), e.replace(At, "{\n/* [wrapped with " + t + "] */\n")
                        }

                        function Fr(e) {
                            return gp(e) || fp(e) || !!(xu && e && e[xu])
                        }

                        function jr(e, t) {
                            return !!(t = null == t ? Fe : t) && ("number" == typeof e || Jt.test(e)) && e > -1 && e % 1 == 0 && e < t
                        }

                        function Lr(e, t, n) {
                            if (!al(n)) return !1;
                            var i = typeof t;
                            return !!("number" == i ? Go(n) && jr(t, n.length) : "string" == i && t in n) && zo(n[t], e)
                        }

                        function Rr(e, t) {
                            if (gp(e)) return !1;
                            var n = typeof e;
                            return !("number" != n && "symbol" != n && "boolean" != n && null != e && !gl(e)) || (Ut.test(e) || !Dt.test(e) || null != t && e in ou(t))
                        }

                        function Ar(e) {
                            var t = typeof e;
                            return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e
                        }

                        function Mr(e) {
                            var t = kr(e),
                                i = n[t];
                            if ("function" != typeof i || !(t in y.prototype)) return !1;
                            if (e === i) return !0;
                            var a = Sd(i);
                            return !!a && e === a[0]
                        }

                        function Br(e) {
                            return !!bu && bu in e
                        }

                        function Pr(e) {
                            var t = e && e.constructor;
                            return e === ("function" == typeof t && t.prototype || mu)
                        }

                        function Hr(e) {
                            return e === e && !al(e)
                        }

                        function Vr(e, t) {
                            return function(n) {
                                return null != n && (n[e] === t && (t !== ae || e in ou(n)))
                            }
                        }

                        function Wr(e, t) {
                            var n = e[1],
                                i = t[1],
                                a = n | i,
                                r = a < (ge | ve | Se),
                                s = i == Se && n == ke || i == Se && n == Ee && e[7].length <= t[8] || i == (Se | Ee) && t[7].length <= t[8] && n == ke;
                            if (!r && !s) return e;
                            i & ge && (e[2] = t[2], a |= n & ge ? 0 : be);
                            var o = t[3];
                            if (o) {
                                var l = e[3];
                                e[3] = l ? La(l, o, t[4]) : o, e[4] = l ? J(e[3], ue) : t[4]
                            }
                            return o = t[5], o && (l = e[5], e[5] = l ? Ra(l, o, t[6]) : o, e[6] = l ? J(e[5], ue) : t[6]), o = t[7], o && (e[7] = o), i & Se && (e[8] = null == e[8] ? t[8] : Gu(e[8], t[8])), null == e[9] && (e[9] = t[9]), e[0] = t[0], e[1] = a, e
                        }

                        function qr(e) {
                            var t = [];
                            if (null != e)
                                for (var n in ou(e)) t.push(n);
                            return t
                        }

                        function zr(e) {
                            return ku.call(e)
                        }

                        function Gr(e, t, n) {
                            return t = zu(t === ae ? e.length - 1 : t, 0),
                                function() {
                                    for (var i = arguments, a = -1, r = zu(i.length - t, 0), s = nu(r); ++a < r;) s[a] = i[t + a];
                                    a = -1;
                                    for (var l = nu(t + 1); ++a < t;) l[a] = i[a];
                                    return l[t] = n(s), o(e, this, l)
                                }
                        }

                        function $r(e, t) {
                            return t.length < 2 ? e : gi(e, oa(t, 0, -1))
                        }

                        function Jr(e, t) {
                            for (var n = e.length, i = Gu(t.length, n), a = Aa(e); i--;) {
                                var r = t[i];
                                e[i] = jr(r, n) ? a[r] : ae
                            }
                            return e
                        }

                        function Kr(e, t, n) {
                            var i = t + "";
                            return Id(e, Tr(i, es(Or(i), n)))
                        }

                        function Qr(e) {
                            var t = 0,
                                n = 0;
                            return function() {
                                var i = $u(),
                                    a = Ue - (i - n);
                                if (n = i, a > 0) {
                                    if (++t >= De) return arguments[0]
                                } else t = 0;
                                return e.apply(ae, arguments)
                            }
                        }

                        function Yr(e, t) {
                            var n = -1,
                                i = e.length,
                                a = i - 1;
                            for (t = t === ae ? i : t; ++n < t;) {
                                var r = Zi(n, a),
                                    s = e[r];
                                e[r] = e[n], e[n] = s
                            }
                            return e.length = t, e
                        }

                        function Xr(e) {
                            if ("string" == typeof e || gl(e)) return e;
                            var t = e + "";
                            return "0" == t && 1 / e == -Te ? "-0" : t
                        }

                        function Zr(e) {
                            if (null != e) {
                                try {
                                    return fu.call(e)
                                } catch (e) {}
                                try {
                                    return e + ""
                                } catch (e) {}
                            }
                            return ""
                        }

                        function es(e, t) {
                            return c(Be, function(n) {
                                var i = "_." + n[0];
                                t & n[1] && !m(e, i) && e.push(i)
                            }), e.sort()
                        }

                        function ts(e) {
                            if (e instanceof y) return e.clone();
                            var t = new a(e.__wrapped__, e.__chain__);
                            return t.__actions__ = Aa(e.__actions__), t.__index__ = e.__index__, t.__values__ = e.__values__, t
                        }

                        function ns(e, t, n) {
                            t = (n ? Lr(e, t, n) : t === ae) ? 1 : zu(Cl(t), 0);
                            var i = null == e ? 0 : e.length;
                            if (!i || t < 1) return [];
                            for (var a = 0, r = 0, s = nu(Mu(i / t)); a < i;) s[r++] = oa(e, a, a += t);
                            return s
                        }

                        function is(e) {
                            for (var t = -1, n = null == e ? 0 : e.length, i = 0, a = []; ++t < n;) {
                                var r = e[t];
                                r && (a[i++] = r)
                            }
                            return a
                        }

                        function as() {
                            var e = arguments.length;
                            if (!e) return [];
                            for (var t = nu(e - 1), n = arguments[0], i = e; i--;) t[i - 1] = arguments[i];
                            return g(gp(n) ? Aa(n) : [n], pi(t, 1))
                        }

                        function rs(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            return i ? (t = n || t === ae ? 1 : Cl(t), oa(e, t < 0 ? 0 : t, i)) : []
                        }

                        function ss(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            return i ? (t = n || t === ae ? 1 : Cl(t), t = i - t, oa(e, 0, t < 0 ? 0 : t)) : []
                        }

                        function os(e, t) {
                            return e && e.length ? va(e, _r(t, 3), !0, !0) : []
                        }

                        function ls(e, t) {
                            return e && e.length ? va(e, _r(t, 3), !0) : []
                        }

                        function cs(e, t, n, i) {
                            var a = null == e ? 0 : e.length;
                            return a ? (n && "number" != typeof n && Lr(e, t, n) && (n = 0, i = a), ui(e, t, n, i)) : []
                        }

                        function us(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            if (!i) return -1;
                            var a = null == n ? 0 : Cl(n);
                            return a < 0 && (a = zu(i + a, 0)), S(e, _r(t, 3), a)
                        }

                        function ds(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            if (!i) return -1;
                            var a = i - 1;
                            return n !== ae && (a = Cl(n), a = n < 0 ? zu(i + a, 0) : Gu(a, i - 1)), S(e, _r(t, 3), a, !0)
                        }

                        function ps(e) {
                            return (null == e ? 0 : e.length) ? pi(e, 1) : []
                        }

                        function ms(e) {
                            return (null == e ? 0 : e.length) ? pi(e, Te) : []
                        }

                        function hs(e, t) {
                            return (null == e ? 0 : e.length) ? (t = t === ae ? 1 : Cl(t), pi(e, t)) : []
                        }

                        function fs(e) {
                            for (var t = -1, n = null == e ? 0 : e.length, i = {}; ++t < n;) {
                                var a = e[t];
                                i[a[0]] = a[1]
                            }
                            return i
                        }

                        function gs(e) {
                            return e && e.length ? e[0] : ae
                        }

                        function vs(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            if (!i) return -1;
                            var a = null == n ? 0 : Cl(n);
                            return a < 0 && (a = zu(i + a, 0)), E(e, t, a)
                        }

                        function bs(e) {
                            return (null == e ? 0 : e.length) ? oa(e, 0, -1) : []
                        }

                        function ks(e, t) {
                            return null == e ? "" : Wu.call(e, t)
                        }

                        function ys(e) {
                            var t = null == e ? 0 : e.length;
                            return t ? e[t - 1] : ae
                        }

                        function _s(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            if (!i) return -1;
                            var a = i;
                            return n !== ae && (a = Cl(n), a = a < 0 ? zu(i + a, 0) : Gu(a, i - 1)), t === t ? X(e, t, a) : S(e, N, a, !0)
                        }

                        function Cs(e, t) {
                            return e && e.length ? Gi(e, Cl(t)) : ae
                        }

                        function Ss(e, t) {
                            return e && e.length && t && t.length ? Yi(e, t) : e
                        }

                        function Es(e, t, n) {
                            return e && e.length && t && t.length ? Yi(e, t, _r(n, 2)) : e
                        }

                        function ws(e, t, n) {
                            return e && e.length && t && t.length ? Yi(e, t, ae, n) : e
                        }

                        function Ns(e, t) {
                            var n = [];
                            if (!e || !e.length) return n;
                            var i = -1,
                                a = [],
                                r = e.length;
                            for (t = _r(t, 3); ++i < r;) {
                                var s = e[i];
                                t(s, i, e) && (n.push(s), a.push(i))
                            }
                            return Xi(e, a), n
                        }

                        function Os(e) {
                            return null == e ? e : Qu.call(e)
                        }

                        function Ds(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            return i ? (n && "number" != typeof n && Lr(e, t, n) ? (t = 0, n = i) : (t = null == t ? 0 : Cl(t), n = n === ae ? i : Cl(n)), oa(e, t, n)) : []
                        }

                        function Us(e, t) {
                            return ca(e, t)
                        }

                        function Is(e, t, n) {
                            return ua(e, t, _r(n, 2))
                        }

                        function xs(e, t) {
                            var n = null == e ? 0 : e.length;
                            if (n) {
                                var i = ca(e, t);
                                if (i < n && zo(e[i], t)) return i
                            }
                            return -1
                        }

                        function Ts(e, t) {
                            return ca(e, t, !0)
                        }

                        function Fs(e, t, n) {
                            return ua(e, t, _r(n, 2), !0)
                        }

                        function js(e, t) {
                            if (null == e ? 0 : e.length) {
                                var n = ca(e, t, !0) - 1;
                                if (zo(e[n], t)) return n
                            }
                            return -1
                        }

                        function Ls(e) {
                            return e && e.length ? da(e) : []
                        }

                        function Rs(e, t) {
                            return e && e.length ? da(e, _r(t, 2)) : []
                        }

                        function As(e) {
                            var t = null == e ? 0 : e.length;
                            return t ? oa(e, 1, t) : []
                        }

                        function Ms(e, t, n) {
                            return e && e.length ? (t = n || t === ae ? 1 : Cl(t), oa(e, 0, t < 0 ? 0 : t)) : []
                        }

                        function Bs(e, t, n) {
                            var i = null == e ? 0 : e.length;
                            return i ? (t = n || t === ae ? 1 : Cl(t), t = i - t, oa(e, t < 0 ? 0 : t, i)) : []
                        }

                        function Ps(e, t) {
                            return e && e.length ? va(e, _r(t, 3), !1, !0) : []
                        }

                        function Hs(e, t) {
                            return e && e.length ? va(e, _r(t, 3)) : []
                        }

                        function Vs(e) {
                            return e && e.length ? ha(e) : []
                        }

                        function Ws(e, t) {
                            return e && e.length ? ha(e, _r(t, 2)) : []
                        }

                        function qs(e, t) {
                            return t = "function" == typeof t ? t : ae, e && e.length ? ha(e, ae, t) : []
                        }

                        function zs(e) {
                            if (!e || !e.length) return [];
                            var t = 0;
                            return e = p(e, function(e) {
                                if ($o(e)) return t = zu(e.length, t), !0
                            }), F(t, function(t) {
                                return f(e, D(t))
                            })
                        }

                        function Gs(e, t) {
                            if (!e || !e.length) return [];
                            var n = zs(e);
                            return null == t ? n : f(n, function(e) {
                                return o(t, ae, e)
                            })
                        }

                        function $s(e, t) {
                            return ya(e || [], t || [], zn)
                        }

                        function Js(e, t) {
                            return ya(e || [], t || [], ra)
                        }

                        function Ks(e) {
                            var t = n(e);
                            return t.__chain__ = !0, t
                        }

                        function Qs(e, t) {
                            return t(e), e
                        }

                        function Ys(e, t) {
                            return t(e)
                        }

                        function Xs() {
                            return Ks(this)
                        }

                        function Zs() {
                            return new a(this.value(), this.__chain__)
                        }

                        function eo() {
                            this.__values__ === ae && (this.__values__ = yl(this.value()));
                            var e = this.__index__ >= this.__values__.length;
                            return {
                                done: e,
                                value: e ? ae : this.__values__[this.__index__++]
                            }
                        }

                        function to() {
                            return this
                        }

                        function no(e) {
                            for (var t, n = this; n instanceof i;) {
                                var a = ts(n);
                                a.__index__ = 0, a.__values__ = ae, t ? r.__wrapped__ = a : t = a;
                                var r = a;
                                n = n.__wrapped__
                            }
                            return r.__wrapped__ = e, t
                        }

                        function io() {
                            var e = this.__wrapped__;
                            if (e instanceof y) {
                                var t = e;
                                return this.__actions__.length && (t = new y(this)), t = t.reverse(), t.__actions__.push({
                                    func: Ys,
                                    args: [Os],
                                    thisArg: ae
                                }), new a(t, this.__chain__)
                            }
                            return this.thru(Os)
                        }

                        function ao() {
                            return ba(this.__wrapped__, this.__actions__)
                        }

                        function ro(e, t, n) {
                            var i = gp(e) ? d : li;
                            return n && Lr(e, t, n) && (t = ae), i(e, _r(t, 3))
                        }

                        function so(e, t) {
                            return (gp(e) ? p : di)(e, _r(t, 3))
                        }

                        function oo(e, t) {
                            return pi(ho(e, t), 1)
                        }

                        function lo(e, t) {
                            return pi(ho(e, t), Te)
                        }

                        function co(e, t, n) {
                            return n = n === ae ? 1 : Cl(n), pi(ho(e, t), n)
                        }

                        function uo(e, t) {
                            return (gp(e) ? c : hd)(e, _r(t, 3))
                        }

                        function po(e, t) {
                            return (gp(e) ? u : fd)(e, _r(t, 3))
                        }

                        function mo(e, t, n, i) {
                            e = Go(e) ? e : Zl(e), n = n && !i ? Cl(n) : 0;
                            var a = e.length;
                            return n < 0 && (n = zu(a + n, 0)), fl(e) ? n <= a && e.indexOf(t, n) > -1 : !!a && E(e, t, n) > -1
                        }

                        function ho(e, t) {
                            return (gp(e) ? f : Hi)(e, _r(t, 3))
                        }

                        function fo(e, t, n, i) {
                            return null == e ? [] : (gp(t) || (t = null == t ? [] : [t]), n = i ? ae : n, gp(n) || (n = null == n ? [] : [n]), $i(e, t, n))
                        }

                        function go(e, t, n) {
                            var i = gp(e) ? v : I,
                                a = arguments.length < 3;
                            return i(e, _r(t, 4), n, a, hd)
                        }

                        function vo(e, t, n) {
                            var i = gp(e) ? b : I,
                                a = arguments.length < 3;
                            return i(e, _r(t, 4), n, a, fd)
                        }

                        function bo(e, t) {
                            return (gp(e) ? p : di)(e, To(_r(t, 3)))
                        }

                        function ko(e) {
                            return (gp(e) ? jn : ia)(e)
                        }

                        function yo(e, t, n) {
                            return t = (n ? Lr(e, t, n) : t === ae) ? 1 : Cl(t), (gp(e) ? Ln : aa)(e, t)
                        }

                        function _o(e) {
                            return (gp(e) ? An : sa)(e)
                        }

                        function Co(e) {
                            if (null == e) return 0;
                            if (Go(e)) return fl(e) ? Z(e) : e.length;
                            var t = Nd(e);
                            return t == Ke || t == tt ? e.size : Mi(e).length
                        }

                        function So(e, t, n) {
                            var i = gp(e) ? k : la;
                            return n && Lr(e, t, n) && (t = ae), i(e, _r(t, 3))
                        }

                        function Eo(e, t) {
                            if ("function" != typeof t) throw new uu(oe);
                            return e = Cl(e),
                                function() {
                                    if (--e < 1) return t.apply(this, arguments)
                                }
                        }

                        function wo(e, t, n) {
                            return t = n ? ae : t, t = e && null == t ? e.length : t, cr(e, Se, ae, ae, ae, ae, t)
                        }

                        function No(e, t) {
                            var n;
                            if ("function" != typeof t) throw new uu(oe);
                            return e = Cl(e),
                                function() {
                                    return --e > 0 && (n = t.apply(this, arguments)), e <= 1 && (t = ae), n
                                }
                        }

                        function Oo(e, t, n) {
                            t = n ? ae : t;
                            var i = cr(e, ke, ae, ae, ae, ae, ae, t);
                            return i.placeholder = Oo.placeholder, i
                        }

                        function Do(e, t, n) {
                            t = n ? ae : t;
                            var i = cr(e, ye, ae, ae, ae, ae, ae, t);
                            return i.placeholder = Do.placeholder, i
                        }

                        function Uo(e, t, n) {
                            function i(t) {
                                var n = p,
                                    i = m;
                                return p = m = ae, b = t, f = e.apply(i, n)
                            }

                            function a(e) {
                                return b = e, g = Ud(o, t), k ? i(e) : f
                            }

                            function r(e) {
                                var n = e - v,
                                    i = e - b,
                                    a = t - n;
                                return y ? Gu(a, h - i) : a
                            }

                            function s(e) {
                                var n = e - v,
                                    i = e - b;
                                return v === ae || n >= t || n < 0 || y && i >= h
                            }

                            function o() {
                                var e = ap();
                                if (s(e)) return l(e);
                                g = Ud(o, r(e))
                            }

                            function l(e) {
                                return g = ae, _ && p ? i(e) : (p = m = ae, f)
                            }

                            function c() {
                                g !== ae && _d(g), b = 0, p = v = m = g = ae
                            }

                            function u() {
                                return g === ae ? f : l(ap())
                            }

                            function d() {
                                var e = ap(),
                                    n = s(e);
                                if (p = arguments, m = this, v = e, n) {
                                    if (g === ae) return a(v);
                                    if (y) return g = Ud(o, t), i(v)
                                }
                                return g === ae && (g = Ud(o, t)), f
                            }
                            var p, m, h, f, g, v, b = 0,
                                k = !1,
                                y = !1,
                                _ = !0;
                            if ("function" != typeof e) throw new uu(oe);
                            return t = El(t) || 0, al(n) && (k = !!n.leading, y = "maxWait" in n, h = y ? zu(El(n.maxWait) || 0, t) : h, _ = "trailing" in n ? !!n.trailing : _), d.cancel = c, d.flush = u, d
                        }

                        function Io(e) {
                            return cr(e, we)
                        }

                        function xo(e, t) {
                            if ("function" != typeof e || null != t && "function" != typeof t) throw new uu(oe);
                            var n = function() {
                                var i = arguments,
                                    a = t ? t.apply(this, i) : i[0],
                                    r = n.cache;
                                if (r.has(a)) return r.get(a);
                                var s = e.apply(this, i);
                                return n.cache = r.set(a, s) || r, s
                            };
                            return n.cache = new(xo.Cache || cn), n
                        }

                        function To(e) {
                            if ("function" != typeof e) throw new uu(oe);
                            return function() {
                                var t = arguments;
                                switch (t.length) {
                                    case 0:
                                        return !e.call(this);
                                    case 1:
                                        return !e.call(this, t[0]);
                                    case 2:
                                        return !e.call(this, t[0], t[1]);
                                    case 3:
                                        return !e.call(this, t[0], t[1], t[2])
                                }
                                return !e.apply(this, t)
                            }
                        }

                        function Fo(e) {
                            return No(2, e)
                        }

                        function jo(e, t) {
                            if ("function" != typeof e) throw new uu(oe);
                            return t = t === ae ? t : Cl(t), na(e, t)
                        }

                        function Lo(e, t) {
                            if ("function" != typeof e) throw new uu(oe);
                            return t = null == t ? 0 : zu(Cl(t), 0), na(function(n) {
                                var i = n[t],
                                    a = Ea(n, 0, t);
                                return i && g(a, i), o(e, this, a)
                            })
                        }

                        function Ro(e, t, n) {
                            var i = !0,
                                a = !0;
                            if ("function" != typeof e) throw new uu(oe);
                            return al(n) && (i = "leading" in n ? !!n.leading : i, a = "trailing" in n ? !!n.trailing : a), Uo(e, t, {
                                leading: i,
                                maxWait: t,
                                trailing: a
                            })
                        }

                        function Ao(e) {
                            return wo(e, 1)
                        }

                        function Mo(e, t) {
                            return up(Ca(t), e)
                        }

                        function Bo() {
                            if (!arguments.length) return [];
                            var e = arguments[0];
                            return gp(e) ? e : [e]
                        }

                        function Po(e) {
                            return ii(e, me)
                        }

                        function Ho(e, t) {
                            return t = "function" == typeof t ? t : ae, ii(e, me, t)
                        }

                        function Vo(e) {
                            return ii(e, de | me)
                        }

                        function Wo(e, t) {
                            return t = "function" == typeof t ? t : ae, ii(e, de | me, t)
                        }

                        function qo(e, t) {
                            return null == t || ri(e, t, Pl(t))
                        }

                        function zo(e, t) {
                            return e === t || e !== e && t !== t
                        }

                        function Go(e) {
                            return null != e && il(e.length) && !tl(e)
                        }

                        function $o(e) {
                            return rl(e) && Go(e)
                        }

                        function Jo(e) {
                            return !0 === e || !1 === e || rl(e) && bi(e) == We
                        }

                        function Ko(e) {
                            return rl(e) && 1 === e.nodeType && !ml(e)
                        }

                        function Qo(e) {
                            if (null == e) return !0;
                            if (Go(e) && (gp(e) || "string" == typeof e || "function" == typeof e.splice || bp(e) || Sp(e) || fp(e))) return !e.length;
                            var t = Nd(e);
                            if (t == Ke || t == tt) return !e.size;
                            if (Pr(e)) return !Mi(e).length;
                            for (var n in e)
                                if (gu.call(e, n)) return !1;
                            return !0
                        }

                        function Yo(e, t) {
                            return Ui(e, t)
                        }

                        function Xo(e, t, n) {
                            n = "function" == typeof n ? n : ae;
                            var i = n ? n(e, t) : ae;
                            return i === ae ? Ui(e, t, ae, n) : !!i
                        }

                        function Zo(e) {
                            if (!rl(e)) return !1;
                            var t = bi(e);
                            return t == Ge || t == ze || "string" == typeof e.message && "string" == typeof e.name && !ml(e)
                        }

                        function el(e) {
                            return "number" == typeof e && Vu(e)
                        }

                        function tl(e) {
                            if (!al(e)) return !1;
                            var t = bi(e);
                            return t == $e || t == Je || t == Ve || t == Ze
                        }

                        function nl(e) {
                            return "number" == typeof e && e == Cl(e)
                        }

                        function il(e) {
                            return "number" == typeof e && e > -1 && e % 1 == 0 && e <= Fe
                        }

                        function al(e) {
                            var t = typeof e;
                            return null != e && ("object" == t || "function" == t)
                        }

                        function rl(e) {
                            return null != e && "object" == typeof e
                        }

                        function sl(e, t) {
                            return e === t || Ti(e, t, Sr(t))
                        }

                        function ol(e, t, n) {
                            return n = "function" == typeof n ? n : ae, Ti(e, t, Sr(t), n)
                        }

                        function ll(e) {
                            return pl(e) && e != +e
                        }

                        function cl(e) {
                            if (Od(e)) throw new au(se);
                            return Fi(e)
                        }

                        function ul(e) {
                            return null === e
                        }

                        function dl(e) {
                            return null == e
                        }

                        function pl(e) {
                            return "number" == typeof e || rl(e) && bi(e) == Qe
                        }

                        function ml(e) {
                            if (!rl(e) || bi(e) != Xe) return !1;
                            var t = Ou(e);
                            if (null === t) return !0;
                            var n = gu.call(t, "constructor") && t.constructor;
                            return "function" == typeof n && n instanceof n && fu.call(n) == yu
                        }

                        function hl(e) {
                            return nl(e) && e >= -Fe && e <= Fe
                        }

                        function fl(e) {
                            return "string" == typeof e || !gp(e) && rl(e) && bi(e) == nt
                        }

                        function gl(e) {
                            return "symbol" == typeof e || rl(e) && bi(e) == it
                        }

                        function vl(e) {
                            return e === ae
                        }

                        function bl(e) {
                            return rl(e) && Nd(e) == rt
                        }

                        function kl(e) {
                            return rl(e) && bi(e) == st
                        }

                        function yl(e) {
                            if (!e) return [];
                            if (Go(e)) return fl(e) ? ee(e) : Aa(e);
                            if (Tu && e[Tu]) return z(e[Tu]());
                            var t = Nd(e);
                            return (t == Ke ? G : t == tt ? K : Zl)(e)
                        }

                        function _l(e) {
                            if (!e) return 0 === e ? e : 0;
                            if ((e = El(e)) === Te || e === -Te) {
                                return (e < 0 ? -1 : 1) * je
                            }
                            return e === e ? e : 0
                        }

                        function Cl(e) {
                            var t = _l(e),
                                n = t % 1;
                            return t === t ? n ? t - n : t : 0
                        }

                        function Sl(e) {
                            return e ? ni(Cl(e), 0, Re) : 0
                        }

                        function El(e) {
                            if ("number" == typeof e) return e;
                            if (gl(e)) return Le;
                            if (al(e)) {
                                var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                                e = al(t) ? t + "" : t
                            }
                            if ("string" != typeof e) return 0 === e ? e : +e;
                            e = e.replace(jt, "");
                            var n = zt.test(e);
                            return n || $t.test(e) ? In(e.slice(2), n ? 2 : 8) : qt.test(e) ? Le : +e
                        }

                        function wl(e) {
                            return Ma(e, Hl(e))
                        }

                        function Nl(e) {
                            return e ? ni(Cl(e), -Fe, Fe) : 0 === e ? e : 0
                        }

                        function Ol(e) {
                            return null == e ? "" : ma(e)
                        }

                        function Dl(e, t) {
                            var n = md(e);
                            return null == t ? n : Xn(n, t)
                        }

                        function Ul(e, t) {
                            return C(e, _r(t, 3), mi)
                        }

                        function Il(e, t) {
                            return C(e, _r(t, 3), hi)
                        }

                        function xl(e, t) {
                            return null == e ? e : gd(e, _r(t, 3), Hl)
                        }

                        function Tl(e, t) {
                            return null == e ? e : vd(e, _r(t, 3), Hl)
                        }

                        function Fl(e, t) {
                            return e && mi(e, _r(t, 3))
                        }

                        function jl(e, t) {
                            return e && hi(e, _r(t, 3))
                        }

                        function Ll(e) {
                            return null == e ? [] : fi(e, Pl(e))
                        }

                        function Rl(e) {
                            return null == e ? [] : fi(e, Hl(e))
                        }

                        function Al(e, t, n) {
                            var i = null == e ? ae : gi(e, t);
                            return i === ae ? n : i
                        }

                        function Ml(e, t) {
                            return null != e && Dr(e, t, yi)
                        }

                        function Bl(e, t) {
                            return null != e && Dr(e, t, _i)
                        }

                        function Pl(e) {
                            return Go(e) ? Tn(e) : Mi(e)
                        }

                        function Hl(e) {
                            return Go(e) ? Tn(e, !0) : Bi(e)
                        }

                        function Vl(e, t) {
                            var n = {};
                            return t = _r(t, 3), mi(e, function(e, i, a) {
                                ei(n, t(e, i, a), e)
                            }), n
                        }

                        function Wl(e, t) {
                            var n = {};
                            return t = _r(t, 3), mi(e, function(e, i, a) {
                                ei(n, i, t(e, i, a))
                            }), n
                        }

                        function ql(e, t) {
                            return zl(e, To(_r(t)))
                        }

                        function zl(e, t) {
                            if (null == e) return {};
                            var n = f(br(e), function(e) {
                                return [e]
                            });
                            return t = _r(t), Ki(e, n, function(e, n) {
                                return t(e, n[0])
                            })
                        }

                        function Gl(e, t, n) {
                            t = Sa(t, e);
                            var i = -1,
                                a = t.length;
                            for (a || (a = 1, e = ae); ++i < a;) {
                                var r = null == e ? ae : e[Xr(t[i])];
                                r === ae && (i = a, r = n), e = tl(r) ? r.call(e) : r
                            }
                            return e
                        }

                        function $l(e, t, n) {
                            return null == e ? e : ra(e, t, n)
                        }

                        function Jl(e, t, n, i) {
                            return i = "function" == typeof i ? i : ae, null == e ? e : ra(e, t, n, i)
                        }

                        function Kl(e, t, n) {
                            var i = gp(e),
                                a = i || bp(e) || Sp(e);
                            if (t = _r(t, 4), null == n) {
                                var r = e && e.constructor;
                                n = a ? i ? new r : [] : al(e) && tl(r) ? md(Ou(e)) : {}
                            }
                            return (a ? c : mi)(e, function(e, i, a) {
                                return t(n, e, i, a)
                            }), n
                        }

                        function Ql(e, t) {
                            return null == e || fa(e, t)
                        }

                        function Yl(e, t, n) {
                            return null == e ? e : ga(e, t, Ca(n))
                        }

                        function Xl(e, t, n, i) {
                            return i = "function" == typeof i ? i : ae, null == e ? e : ga(e, t, Ca(n), i)
                        }

                        function Zl(e) {
                            return null == e ? [] : R(e, Pl(e))
                        }

                        function ec(e) {
                            return null == e ? [] : R(e, Hl(e))
                        }

                        function tc(e, t, n) {
                            return n === ae && (n = t, t = ae), n !== ae && (n = El(n), n = n === n ? n : 0), t !== ae && (t = El(t), t = t === t ? t : 0), ni(El(e), t, n)
                        }

                        function nc(e, t, n) {
                            return t = _l(t), n === ae ? (n = t, t = 0) : n = _l(n), e = El(e), Ci(e, t, n)
                        }

                        function ic(e, t, n) {
                            if (n && "boolean" != typeof n && Lr(e, t, n) && (t = n = ae), n === ae && ("boolean" == typeof t ? (n = t, t = ae) : "boolean" == typeof e && (n = e, e = ae)), e === ae && t === ae ? (e = 0, t = 1) : (e = _l(e), t === ae ? (t = e, e = 0) : t = _l(t)), e > t) {
                                var i = e;
                                e = t, t = i
                            }
                            if (n || e % 1 || t % 1) {
                                var a = Ku();
                                return Gu(e + a * (t - e + Un("1e-" + ((a + "").length - 1))), t)
                            }
                            return Zi(e, t)
                        }

                        function ac(e) {
                            return Kp(Ol(e).toLowerCase())
                        }

                        function rc(e) {
                            return (e = Ol(e)) && e.replace(Kt, Gn).replace(gn, "")
                        }

                        function sc(e, t, n) {
                            e = Ol(e), t = ma(t);
                            var i = e.length;
                            n = n === ae ? i : ni(Cl(n), 0, i);
                            var a = n;
                            return (n -= t.length) >= 0 && e.slice(n, a) == t
                        }

                        function oc(e) {
                            return e = Ol(e), e && Et.test(e) ? e.replace(Ct, $n) : e
                        }

                        function lc(e) {
                            return e = Ol(e), e && Ft.test(e) ? e.replace(Tt, "\\$&") : e
                        }

                        function cc(e, t, n) {
                            e = Ol(e), t = Cl(t);
                            var i = t ? Z(e) : 0;
                            if (!t || i >= t) return e;
                            var a = (t - i) / 2;
                            return nr(Bu(a), n) + e + nr(Mu(a), n)
                        }

                        function uc(e, t, n) {
                            e = Ol(e), t = Cl(t);
                            var i = t ? Z(e) : 0;
                            return t && i < t ? e + nr(t - i, n) : e
                        }

                        function dc(e, t, n) {
                            e = Ol(e), t = Cl(t);
                            var i = t ? Z(e) : 0;
                            return t && i < t ? nr(t - i, n) + e : e
                        }

                        function pc(e, t, n) {
                            return n || null == t ? t = 0 : t && (t = +t), Ju(Ol(e).replace(Lt, ""), t || 0)
                        }

                        function mc(e, t, n) {
                            return t = (n ? Lr(e, t, n) : t === ae) ? 1 : Cl(t), ta(Ol(e), t)
                        }

                        function hc() {
                            var e = arguments,
                                t = Ol(e[0]);
                            return e.length < 3 ? t : t.replace(e[1], e[2])
                        }

                        function fc(e, t, n) {
                            return n && "number" != typeof n && Lr(e, t, n) && (t = n = ae), (n = n === ae ? Re : n >>> 0) ? (e = Ol(e), e && ("string" == typeof t || null != t && !_p(t)) && !(t = ma(t)) && W(e) ? Ea(ee(e), 0, n) : e.split(t, n)) : []
                        }

                        function gc(e, t, n) {
                            return e = Ol(e), n = null == n ? 0 : ni(Cl(n), 0, e.length), t = ma(t), e.slice(n, n + t.length) == t
                        }

                        function vc(e, t, i) {
                            var a = n.templateSettings;
                            i && Lr(e, t, i) && (t = ae), e = Ol(e), t = Dp({}, t, a, ur);
                            var r, s, o = Dp({}, t.imports, a.imports, ur),
                                l = Pl(o),
                                c = R(o, l),
                                u = 0,
                                d = t.interpolate || Qt,
                                p = "__p += '",
                                m = lu((t.escape || Qt).source + "|" + d.source + "|" + (d === Ot ? Vt : Qt).source + "|" + (t.evaluate || Qt).source + "|$", "g"),
                                h = "//# sourceURL=" + ("sourceURL" in t ? t.sourceURL : "lodash.templateSources[" + ++Cn + "]") + "\n";
                            e.replace(m, function(t, n, i, a, o, l) {
                                return i || (i = a), p += e.slice(u, l).replace(Yt, H), n && (r = !0, p += "' +\n__e(" + n + ") +\n'"), o && (s = !0, p += "';\n" + o + ";\n__p += '"), i && (p += "' +\n((__t = (" + i + ")) == null ? '' : __t) +\n'"), u = l + t.length, t
                            }), p += "';\n";
                            var f = t.variable;
                            f || (p = "with (obj) {\n" + p + "\n}\n"), p = (s ? p.replace(bt, "") : p).replace(kt, "$1").replace(yt, "$1;"), p = "function(" + (f || "obj") + ") {\n" + (f ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (r ? ", __e = _.escape" : "") + (s ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + p + "return __p\n}";
                            var g = Qp(function() {
                                return ru(l, h + "return " + p).apply(ae, c)
                            });
                            if (g.source = p, Zo(g)) throw g;
                            return g
                        }

                        function bc(e) {
                            return Ol(e).toLowerCase()
                        }

                        function kc(e) {
                            return Ol(e).toUpperCase()
                        }

                        function yc(e, t, n) {
                            if ((e = Ol(e)) && (n || t === ae)) return e.replace(jt, "");
                            if (!e || !(t = ma(t))) return e;
                            var i = ee(e),
                                a = ee(t);
                            return Ea(i, M(i, a), B(i, a) + 1).join("")
                        }

                        function _c(e, t, n) {
                            if ((e = Ol(e)) && (n || t === ae)) return e.replace(Rt, "");
                            if (!e || !(t = ma(t))) return e;
                            var i = ee(e);
                            return Ea(i, 0, B(i, ee(t)) + 1).join("")
                        }

                        function Cc(e, t, n) {
                            if ((e = Ol(e)) && (n || t === ae)) return e.replace(Lt, "");
                            if (!e || !(t = ma(t))) return e;
                            var i = ee(e);
                            return Ea(i, M(i, ee(t))).join("")
                        }

                        function Sc(e, t) {
                            var n = Ne,
                                i = Oe;
                            if (al(t)) {
                                var a = "separator" in t ? t.separator : a;
                                n = "length" in t ? Cl(t.length) : n, i = "omission" in t ? ma(t.omission) : i
                            }
                            e = Ol(e);
                            var r = e.length;
                            if (W(e)) {
                                var s = ee(e);
                                r = s.length
                            }
                            if (n >= r) return e;
                            var o = n - Z(i);
                            if (o < 1) return i;
                            var l = s ? Ea(s, 0, o).join("") : e.slice(0, o);
                            if (a === ae) return l + i;
                            if (s && (o += l.length - o), _p(a)) {
                                if (e.slice(o).search(a)) {
                                    var c, u = l;
                                    for (a.global || (a = lu(a.source, Ol(Wt.exec(a)) + "g")), a.lastIndex = 0; c = a.exec(u);) var d = c.index;
                                    l = l.slice(0, d === ae ? o : d)
                                }
                            } else if (e.indexOf(ma(a), o) != o) {
                                var p = l.lastIndexOf(a);
                                p > -1 && (l = l.slice(0, p))
                            }
                            return l + i
                        }

                        function Ec(e) {
                            return e = Ol(e), e && St.test(e) ? e.replace(_t, Jn) : e
                        }

                        function wc(e, t, n) {
                            return e = Ol(e), t = n ? ae : t, t === ae ? q(e) ? ie(e) : _(e) : e.match(t) || []
                        }

                        function Nc(e) {
                            var t = null == e ? 0 : e.length,
                                n = _r();
                            return e = t ? f(e, function(e) {
                                if ("function" != typeof e[1]) throw new uu(oe);
                                return [n(e[0]), e[1]]
                            }) : [], na(function(n) {
                                for (var i = -1; ++i < t;) {
                                    var a = e[i];
                                    if (o(a[0], this, n)) return o(a[1], this, n)
                                }
                            })
                        }

                        function Oc(e) {
                            return ai(ii(e, de))
                        }

                        function Dc(e) {
                            return function() {
                                return e
                            }
                        }

                        function Uc(e, t) {
                            return null == e || e !== e ? t : e
                        }

                        function Ic(e) {
                            return e
                        }

                        function xc(e) {
                            return Ai("function" == typeof e ? e : ii(e, de))
                        }

                        function Tc(e) {
                            return Vi(ii(e, de))
                        }

                        function Fc(e, t) {
                            return Wi(e, ii(t, de))
                        }

                        function jc(e, t, n) {
                            var i = Pl(t),
                                a = fi(t, i);
                            null != n || al(t) && (a.length || !i.length) || (n = t, t = e, e = this, a = fi(t, Pl(t)));
                            var r = !(al(n) && "chain" in n && !n.chain),
                                s = tl(e);
                            return c(a, function(n) {
                                var i = t[n];
                                e[n] = i, s && (e.prototype[n] = function() {
                                    var t = this.__chain__;
                                    if (r || t) {
                                        var n = e(this.__wrapped__);
                                        return (n.__actions__ = Aa(this.__actions__)).push({
                                            func: i,
                                            args: arguments,
                                            thisArg: e
                                        }), n.__chain__ = t, n
                                    }
                                    return i.apply(e, g([this.value()], arguments))
                                })
                            }), e
                        }

                        function Lc() {
                            return Fn._ === this && (Fn._ = _u), this
                        }

                        function Rc() {}

                        function Ac(e) {
                            return e = Cl(e), na(function(t) {
                                return Gi(t, e)
                            })
                        }

                        function Mc(e) {
                            return Rr(e) ? D(Xr(e)) : Qi(e)
                        }

                        function Bc(e) {
                            return function(t) {
                                return null == e ? ae : gi(e, t)
                            }
                        }

                        function Pc() {
                            return []
                        }

                        function Hc() {
                            return !1
                        }

                        function Vc() {
                            return {}
                        }

                        function Wc() {
                            return ""
                        }

                        function qc() {
                            return !0
                        }

                        function zc(e, t) {
                            if ((e = Cl(e)) < 1 || e > Fe) return [];
                            var n = Re,
                                i = Gu(e, Re);
                            t = _r(t), e -= Re;
                            for (var a = F(i, t); ++n < e;) t(n);
                            return a
                        }

                        function Gc(e) {
                            return gp(e) ? f(e, Xr) : gl(e) ? [e] : Aa(xd(Ol(e)))
                        }

                        function $c(e) {
                            var t = ++vu;
                            return Ol(e) + t
                        }

                        function Jc(e) {
                            return e && e.length ? ci(e, Ic, ki) : ae
                        }

                        function Kc(e, t) {
                            return e && e.length ? ci(e, _r(t, 2), ki) : ae
                        }

                        function Qc(e) {
                            return O(e, Ic)
                        }

                        function Yc(e, t) {
                            return O(e, _r(t, 2))
                        }

                        function Xc(e) {
                            return e && e.length ? ci(e, Ic, Pi) : ae
                        }

                        function Zc(e, t) {
                            return e && e.length ? ci(e, _r(t, 2), Pi) : ae
                        }

                        function eu(e) {
                            return e && e.length ? T(e, Ic) : 0
                        }

                        function tu(e, t) {
                            return e && e.length ? T(e, _r(t, 2)) : 0
                        }
                        t = null == t ? Fn : Kn.defaults(Fn.Object(), t, Kn.pick(Fn, _n));
                        var nu = t.Array,
                            iu = t.Date,
                            au = t.Error,
                            ru = t.Function,
                            su = t.Math,
                            ou = t.Object,
                            lu = t.RegExp,
                            cu = t.String,
                            uu = t.TypeError,
                            du = nu.prototype,
                            pu = ru.prototype,
                            mu = ou.prototype,
                            hu = t["__core-js_shared__"],
                            fu = pu.toString,
                            gu = mu.hasOwnProperty,
                            vu = 0,
                            bu = function() {
                                var e = /[^.]+$/.exec(hu && hu.keys && hu.keys.IE_PROTO || "");
                                return e ? "Symbol(src)_1." + e : ""
                            }(),
                            ku = mu.toString,
                            yu = fu.call(ou),
                            _u = Fn._,
                            Cu = lu("^" + fu.call(gu).replace(Tt, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                            Su = Rn ? t.Buffer : ae,
                            Eu = t.Symbol,
                            wu = t.Uint8Array,
                            Nu = Su ? Su.allocUnsafe : ae,
                            Ou = $(ou.getPrototypeOf, ou),
                            Du = ou.create,
                            Uu = mu.propertyIsEnumerable,
                            Iu = du.splice,
                            xu = Eu ? Eu.isConcatSpreadable : ae,
                            Tu = Eu ? Eu.iterator : ae,
                            Fu = Eu ? Eu.toStringTag : ae,
                            ju = function() {
                                try {
                                    var e = Er(ou, "defineProperty");
                                    return e({}, "", {}), e
                                } catch (e) {}
                            }(),
                            Lu = t.clearTimeout !== Fn.clearTimeout && t.clearTimeout,
                            Ru = iu && iu.now !== Fn.Date.now && iu.now,
                            Au = t.setTimeout !== Fn.setTimeout && t.setTimeout,
                            Mu = su.ceil,
                            Bu = su.floor,
                            Pu = ou.getOwnPropertySymbols,
                            Hu = Su ? Su.isBuffer : ae,
                            Vu = t.isFinite,
                            Wu = du.join,
                            qu = $(ou.keys, ou),
                            zu = su.max,
                            Gu = su.min,
                            $u = iu.now,
                            Ju = t.parseInt,
                            Ku = su.random,
                            Qu = du.reverse,
                            Yu = Er(t, "DataView"),
                            Xu = Er(t, "Map"),
                            Zu = Er(t, "Promise"),
                            ed = Er(t, "Set"),
                            td = Er(t, "WeakMap"),
                            nd = Er(ou, "create"),
                            id = td && new td,
                            ad = {},
                            rd = Zr(Yu),
                            sd = Zr(Xu),
                            od = Zr(Zu),
                            ld = Zr(ed),
                            cd = Zr(td),
                            ud = Eu ? Eu.prototype : ae,
                            dd = ud ? ud.valueOf : ae,
                            pd = ud ? ud.toString : ae,
                            md = function() {
                                function e() {}
                                return function(t) {
                                    if (!al(t)) return {};
                                    if (Du) return Du(t);
                                    e.prototype = t;
                                    var n = new e;
                                    return e.prototype = ae, n
                                }
                            }();
                        n.templateSettings = {
                            escape: wt,
                            evaluate: Nt,
                            interpolate: Ot,
                            variable: "",
                            imports: {
                                _: n
                            }
                        }, n.prototype = i.prototype, n.prototype.constructor = n, a.prototype = md(i.prototype), a.prototype.constructor = a, y.prototype = md(i.prototype), y.prototype.constructor = y, ne.prototype.clear = Pt, ne.prototype.delete = Xt, ne.prototype.get = Zt, ne.prototype.has = en, ne.prototype.set = tn, nn.prototype.clear = an, nn.prototype.delete = rn, nn.prototype.get = sn, nn.prototype.has = on, nn.prototype.set = ln, cn.prototype.clear = un, cn.prototype.delete = dn, cn.prototype.get = pn, cn.prototype.has = mn, cn.prototype.set = hn, vn.prototype.add = vn.prototype.push = bn, vn.prototype.has = kn, yn.prototype.clear = wn, yn.prototype.delete = Nn, yn.prototype.get = On, yn.prototype.has = Dn, yn.prototype.set = xn;
                        var hd = Wa(mi),
                            fd = Wa(hi, !0),
                            gd = qa(),
                            vd = qa(!0),
                            bd = id ? function(e, t) {
                                return id.set(e, t), e
                            } : Ic,
                            kd = ju ? function(e, t) {
                                return ju(e, "toString", {
                                    configurable: !0,
                                    enumerable: !1,
                                    value: Dc(t),
                                    writable: !0
                                })
                            } : Ic,
                            yd = na,
                            _d = Lu || function(e) {
                                return Fn.clearTimeout(e)
                            },
                            Cd = ed && 1 / K(new ed([, -0]))[1] == Te ? function(e) {
                                return new ed(e)
                            } : Rc,
                            Sd = id ? function(e) {
                                return id.get(e)
                            } : Rc,
                            Ed = Pu ? function(e) {
                                return null == e ? [] : (e = ou(e), p(Pu(e), function(t) {
                                    return Uu.call(e, t)
                                }))
                            } : Pc,
                            wd = Pu ? function(e) {
                                for (var t = []; e;) g(t, Ed(e)), e = Ou(e);
                                return t
                            } : Pc,
                            Nd = bi;
                        (Yu && Nd(new Yu(new ArrayBuffer(1))) != lt || Xu && Nd(new Xu) != Ke || Zu && "[object Promise]" != Nd(Zu.resolve()) || ed && Nd(new ed) != tt || td && Nd(new td) != rt) && (Nd = function(e) {
                            var t = bi(e),
                                n = t == Xe ? e.constructor : ae,
                                i = n ? Zr(n) : "";
                            if (i) switch (i) {
                                case rd:
                                    return lt;
                                case sd:
                                    return Ke;
                                case od:
                                    return "[object Promise]";
                                case ld:
                                    return tt;
                                case cd:
                                    return rt
                            }
                            return t
                        });
                        var Od = hu ? tl : Hc,
                            Dd = Qr(bd),
                            Ud = Au || function(e, t) {
                                return Fn.setTimeout(e, t)
                            },
                            Id = Qr(kd),
                            xd = function(e) {
                                var t = xo(e, function(e) {
                                        return n.size === ce && n.clear(), e
                                    }),
                                    n = t.cache;
                                return t
                            }(function(e) {
                                var t = [];
                                return It.test(e) && t.push(""), e.replace(xt, function(e, n, i, a) {
                                    t.push(i ? a.replace(Ht, "$1") : n || e)
                                }), t
                            }),
                            Td = na(function(e, t) {
                                return $o(e) ? oi(e, pi(t, 1, $o, !0)) : []
                            }),
                            Fd = na(function(e, t) {
                                var n = ys(t);
                                return $o(n) && (n = ae), $o(e) ? oi(e, pi(t, 1, $o, !0), _r(n, 2)) : []
                            }),
                            jd = na(function(e, t) {
                                var n = ys(t);
                                return $o(n) && (n = ae), $o(e) ? oi(e, pi(t, 1, $o, !0), ae, n) : []
                            }),
                            Ld = na(function(e) {
                                var t = f(e, _a);
                                return t.length && t[0] === e[0] ? Si(t) : []
                            }),
                            Rd = na(function(e) {
                                var t = ys(e),
                                    n = f(e, _a);
                                return t === ys(n) ? t = ae : n.pop(), n.length && n[0] === e[0] ? Si(n, _r(t, 2)) : []
                            }),
                            Ad = na(function(e) {
                                var t = ys(e),
                                    n = f(e, _a);
                                return t = "function" == typeof t ? t : ae, t && n.pop(), n.length && n[0] === e[0] ? Si(n, ae, t) : []
                            }),
                            Md = na(Ss),
                            Bd = gr(function(e, t) {
                                var n = null == e ? 0 : e.length,
                                    i = ti(e, t);
                                return Xi(e, f(t, function(e) {
                                    return jr(e, n) ? +e : e
                                }).sort(Fa)), i
                            }),
                            Pd = na(function(e) {
                                return ha(pi(e, 1, $o, !0))
                            }),
                            Hd = na(function(e) {
                                var t = ys(e);
                                return $o(t) && (t = ae), ha(pi(e, 1, $o, !0), _r(t, 2))
                            }),
                            Vd = na(function(e) {
                                var t = ys(e);
                                return t = "function" == typeof t ? t : ae, ha(pi(e, 1, $o, !0), ae, t)
                            }),
                            Wd = na(function(e, t) {
                                return $o(e) ? oi(e, t) : []
                            }),
                            qd = na(function(e) {
                                return ka(p(e, $o))
                            }),
                            zd = na(function(e) {
                                var t = ys(e);
                                return $o(t) && (t = ae), ka(p(e, $o), _r(t, 2))
                            }),
                            Gd = na(function(e) {
                                var t = ys(e);
                                return t = "function" == typeof t ? t : ae, ka(p(e, $o), ae, t)
                            }),
                            $d = na(zs),
                            Jd = na(function(e) {
                                var t = e.length,
                                    n = t > 1 ? e[t - 1] : ae;
                                return n = "function" == typeof n ? (e.pop(), n) : ae, Gs(e, n)
                            }),
                            Kd = gr(function(e) {
                                var t = e.length,
                                    n = t ? e[0] : 0,
                                    i = this.__wrapped__,
                                    r = function(t) {
                                        return ti(t, e)
                                    };
                                return !(t > 1 || this.__actions__.length) && i instanceof y && jr(n) ? (i = i.slice(n, +n + (t ? 1 : 0)), i.__actions__.push({
                                    func: Ys,
                                    args: [r],
                                    thisArg: ae
                                }), new a(i, this.__chain__).thru(function(e) {
                                    return t && !e.length && e.push(ae), e
                                })) : this.thru(r)
                            }),
                            Qd = Ha(function(e, t, n) {
                                gu.call(e, n) ? ++e[n] : ei(e, n, 1)
                            }),
                            Yd = Qa(us),
                            Xd = Qa(ds),
                            Zd = Ha(function(e, t, n) {
                                gu.call(e, n) ? e[n].push(t) : ei(e, n, [t])
                            }),
                            ep = na(function(e, t, n) {
                                var i = -1,
                                    a = "function" == typeof t,
                                    r = Go(e) ? nu(e.length) : [];
                                return hd(e, function(e) {
                                    r[++i] = a ? o(t, e, n) : wi(e, t, n)
                                }), r
                            }),
                            tp = Ha(function(e, t, n) {
                                ei(e, n, t)
                            }),
                            np = Ha(function(e, t, n) {
                                e[n ? 0 : 1].push(t)
                            }, function() {
                                return [
                                    [],
                                    []
                                ]
                            }),
                            ip = na(function(e, t) {
                                if (null == e) return [];
                                var n = t.length;
                                return n > 1 && Lr(e, t[0], t[1]) ? t = [] : n > 2 && Lr(t[0], t[1], t[2]) && (t = [t[0]]), $i(e, pi(t, 1), [])
                            }),
                            ap = Ru || function() {
                                return Fn.Date.now()
                            },
                            rp = na(function(e, t, n) {
                                var i = ge;
                                if (n.length) {
                                    var a = J(n, yr(rp));
                                    i |= _e
                                }
                                return cr(e, i, t, n, a)
                            }),
                            sp = na(function(e, t, n) {
                                var i = ge | ve;
                                if (n.length) {
                                    var a = J(n, yr(sp));
                                    i |= _e
                                }
                                return cr(t, i, e, n, a)
                            }),
                            op = na(function(e, t) {
                                return si(e, 1, t)
                            }),
                            lp = na(function(e, t, n) {
                                return si(e, El(t) || 0, n)
                            });
                        xo.Cache = cn;
                        var cp = yd(function(e, t) {
                                t = 1 == t.length && gp(t[0]) ? f(t[0], L(_r())) : f(pi(t, 1), L(_r()));
                                var n = t.length;
                                return na(function(i) {
                                    for (var a = -1, r = Gu(i.length, n); ++a < r;) i[a] = t[a].call(this, i[a]);
                                    return o(e, this, i)
                                })
                            }),
                            up = na(function(e, t) {
                                var n = J(t, yr(up));
                                return cr(e, _e, ae, t, n)
                            }),
                            dp = na(function(e, t) {
                                var n = J(t, yr(dp));
                                return cr(e, Ce, ae, t, n)
                            }),
                            pp = gr(function(e, t) {
                                return cr(e, Ee, ae, ae, ae, t)
                            }),
                            mp = rr(ki),
                            hp = rr(function(e, t) {
                                return e >= t
                            }),
                            fp = Ni(function() {
                                return arguments
                            }()) ? Ni : function(e) {
                                return rl(e) && gu.call(e, "callee") && !Uu.call(e, "callee")
                            },
                            gp = nu.isArray,
                            vp = Bn ? L(Bn) : Oi,
                            bp = Hu || Hc,
                            kp = Pn ? L(Pn) : Di,
                            yp = Hn ? L(Hn) : xi,
                            _p = Vn ? L(Vn) : ji,
                            Cp = Wn ? L(Wn) : Li,
                            Sp = qn ? L(qn) : Ri,
                            Ep = rr(Pi),
                            wp = rr(function(e, t) {
                                return e <= t
                            }),
                            Np = Va(function(e, t) {
                                if (Pr(t) || Go(t)) return void Ma(t, Pl(t), e);
                                for (var n in t) gu.call(t, n) && zn(e, n, t[n])
                            }),
                            Op = Va(function(e, t) {
                                Ma(t, Hl(t), e)
                            }),
                            Dp = Va(function(e, t, n, i) {
                                Ma(t, Hl(t), e, i)
                            }),
                            Up = Va(function(e, t, n, i) {
                                Ma(t, Pl(t), e, i)
                            }),
                            Ip = gr(ti),
                            xp = na(function(e) {
                                return e.push(ae, ur), o(Dp, ae, e)
                            }),
                            Tp = na(function(e) {
                                return e.push(ae, dr), o(Ap, ae, e)
                            }),
                            Fp = Za(function(e, t, n) {
                                e[t] = n
                            }, Dc(Ic)),
                            jp = Za(function(e, t, n) {
                                gu.call(e, t) ? e[t].push(n) : e[t] = [n]
                            }, _r),
                            Lp = na(wi),
                            Rp = Va(function(e, t, n) {
                                qi(e, t, n)
                            }),
                            Ap = Va(function(e, t, n, i) {
                                qi(e, t, n, i)
                            }),
                            Mp = gr(function(e, t) {
                                var n = {};
                                if (null == e) return n;
                                var i = !1;
                                t = f(t, function(t) {
                                    return t = Sa(t, e), i || (i = t.length > 1), t
                                }), Ma(e, br(e), n), i && (n = ii(n, de | pe | me, pr));
                                for (var a = t.length; a--;) fa(n, t[a]);
                                return n
                            }),
                            Bp = gr(function(e, t) {
                                return null == e ? {} : Ji(e, t)
                            }),
                            Pp = lr(Pl),
                            Hp = lr(Hl),
                            Vp = $a(function(e, t, n) {
                                return t = t.toLowerCase(), e + (n ? ac(t) : t)
                            }),
                            Wp = $a(function(e, t, n) {
                                return e + (n ? "-" : "") + t.toLowerCase()
                            }),
                            qp = $a(function(e, t, n) {
                                return e + (n ? " " : "") + t.toLowerCase()
                            }),
                            zp = Ga("toLowerCase"),
                            Gp = $a(function(e, t, n) {
                                return e + (n ? "_" : "") + t.toLowerCase()
                            }),
                            $p = $a(function(e, t, n) {
                                return e + (n ? " " : "") + Kp(t)
                            }),
                            Jp = $a(function(e, t, n) {
                                return e + (n ? " " : "") + t.toUpperCase()
                            }),
                            Kp = Ga("toUpperCase"),
                            Qp = na(function(e, t) {
                                try {
                                    return o(e, ae, t)
                                } catch (e) {
                                    return Zo(e) ? e : new au(e)
                                }
                            }),
                            Yp = gr(function(e, t) {
                                return c(t, function(t) {
                                    t = Xr(t), ei(e, t, rp(e[t], e))
                                }), e
                            }),
                            Xp = Ya(),
                            Zp = Ya(!0),
                            em = na(function(e, t) {
                                return function(n) {
                                    return wi(n, e, t)
                                }
                            }),
                            tm = na(function(e, t) {
                                return function(n) {
                                    return wi(e, n, t)
                                }
                            }),
                            nm = tr(f),
                            im = tr(d),
                            am = tr(k),
                            rm = ar(),
                            sm = ar(!0),
                            om = er(function(e, t) {
                                return e + t
                            }, 0),
                            lm = or("ceil"),
                            cm = er(function(e, t) {
                                return e / t
                            }, 1),
                            um = or("floor"),
                            dm = er(function(e, t) {
                                return e * t
                            }, 1),
                            pm = or("round"),
                            mm = er(function(e, t) {
                                return e - t
                            }, 0);
                        return n.after = Eo, n.ary = wo, n.assign = Np, n.assignIn = Op, n.assignInWith = Dp, n.assignWith = Up, n.at = Ip, n.before = No, n.bind = rp, n.bindAll = Yp, n.bindKey = sp, n.castArray = Bo, n.chain = Ks, n.chunk = ns, n.compact = is, n.concat = as, n.cond = Nc, n.conforms = Oc, n.constant = Dc, n.countBy = Qd, n.create = Dl, n.curry = Oo, n.curryRight = Do, n.debounce = Uo, n.defaults = xp, n.defaultsDeep = Tp, n.defer = op, n.delay = lp, n.difference = Td, n.differenceBy = Fd, n.differenceWith = jd, n.drop = rs, n.dropRight = ss, n.dropRightWhile = os, n.dropWhile = ls, n.fill = cs, n.filter = so, n.flatMap = oo, n.flatMapDeep = lo, n.flatMapDepth = co, n.flatten = ps, n.flattenDeep = ms, n.flattenDepth = hs, n.flip = Io, n.flow = Xp, n.flowRight = Zp, n.fromPairs = fs, n.functions = Ll, n.functionsIn = Rl, n.groupBy = Zd, n.initial = bs, n.intersection = Ld, n.intersectionBy = Rd, n.intersectionWith = Ad, n.invert = Fp, n.invertBy = jp, n.invokeMap = ep, n.iteratee = xc, n.keyBy = tp, n.keys = Pl, n.keysIn = Hl, n.map = ho, n.mapKeys = Vl, n.mapValues = Wl, n.matches = Tc, n.matchesProperty = Fc, n.memoize = xo, n.merge = Rp, n.mergeWith = Ap, n.method = em, n.methodOf = tm, n.mixin = jc, n.negate = To, n.nthArg = Ac, n.omit = Mp, n.omitBy = ql, n.once = Fo, n.orderBy = fo, n.over = nm, n.overArgs = cp, n.overEvery = im, n.overSome = am, n.partial = up, n.partialRight = dp, n.partition = np, n.pick = Bp, n.pickBy = zl, n.property = Mc, n.propertyOf = Bc, n.pull = Md, n.pullAll = Ss, n.pullAllBy = Es, n.pullAllWith = ws, n.pullAt = Bd, n.range = rm, n.rangeRight = sm, n.rearg = pp, n.reject = bo, n.remove = Ns, n.rest = jo, n.reverse = Os, n.sampleSize = yo, n.set = $l, n.setWith = Jl, n.shuffle = _o, n.slice = Ds, n.sortBy = ip, n.sortedUniq = Ls, n.sortedUniqBy = Rs, n.split = fc, n.spread = Lo, n.tail = As, n.take = Ms, n.takeRight = Bs, n.takeRightWhile = Ps, n.takeWhile = Hs, n.tap = Qs, n.throttle = Ro, n.thru = Ys, n.toArray = yl, n.toPairs = Pp, n.toPairsIn = Hp, n.toPath = Gc, n.toPlainObject = wl, n.transform = Kl, n.unary = Ao, n.union = Pd, n.unionBy = Hd, n.unionWith = Vd, n.uniq = Vs, n.uniqBy = Ws, n.uniqWith = qs, n.unset = Ql, n.unzip = zs, n.unzipWith = Gs, n.update = Yl, n.updateWith = Xl, n.values = Zl, n.valuesIn = ec, n.without = Wd, n.words = wc, n.wrap = Mo, n.xor = qd, n.xorBy = zd, n.xorWith = Gd, n.zip = $d, n.zipObject = $s, n.zipObjectDeep = Js, n.zipWith = Jd, n.entries = Pp, n.entriesIn = Hp, n.extend = Op, n.extendWith = Dp, jc(n, n), n.add = om, n.attempt = Qp, n.camelCase = Vp, n.capitalize = ac, n.ceil = lm, n.clamp = tc, n.clone = Po, n.cloneDeep = Vo, n.cloneDeepWith = Wo, n.cloneWith = Ho, n.conformsTo = qo, n.deburr = rc, n.defaultTo = Uc, n.divide = cm, n.endsWith = sc, n.eq = zo, n.escape = oc, n.escapeRegExp = lc, n.every = ro, n.find = Yd, n.findIndex = us, n.findKey = Ul, n.findLast = Xd, n.findLastIndex = ds, n.findLastKey = Il, n.floor = um, n.forEach = uo, n.forEachRight = po, n.forIn = xl, n.forInRight = Tl, n.forOwn = Fl, n.forOwnRight = jl, n.get = Al, n.gt = mp, n.gte = hp, n.has = Ml, n.hasIn = Bl, n.head = gs, n.identity = Ic, n.includes = mo, n.indexOf = vs, n.inRange = nc, n.invoke = Lp, n.isArguments = fp, n.isArray = gp, n.isArrayBuffer = vp, n.isArrayLike = Go, n.isArrayLikeObject = $o, n.isBoolean = Jo, n.isBuffer = bp, n.isDate = kp, n.isElement = Ko, n.isEmpty = Qo, n.isEqual = Yo, n.isEqualWith = Xo, n.isError = Zo, n.isFinite = el, n.isFunction = tl, n.isInteger = nl, n.isLength = il, n.isMap = yp, n.isMatch = sl, n.isMatchWith = ol, n.isNaN = ll, n.isNative = cl, n.isNil = dl, n.isNull = ul, n.isNumber = pl, n.isObject = al, n.isObjectLike = rl, n.isPlainObject = ml, n.isRegExp = _p, n.isSafeInteger = hl, n.isSet = Cp, n.isString = fl, n.isSymbol = gl, n.isTypedArray = Sp, n.isUndefined = vl, n.isWeakMap = bl, n.isWeakSet = kl, n.join = ks, n.kebabCase = Wp, n.last = ys, n.lastIndexOf = _s, n.lowerCase = qp, n.lowerFirst = zp, n.lt = Ep, n.lte = wp, n.max = Jc, n.maxBy = Kc, n.mean = Qc, n.meanBy = Yc, n.min = Xc, n.minBy = Zc, n.stubArray = Pc, n.stubFalse = Hc, n.stubObject = Vc, n.stubString = Wc, n.stubTrue = qc, n.multiply = dm, n.nth = Cs, n.noConflict = Lc, n.noop = Rc, n.now = ap, n.pad = cc, n.padEnd = uc, n.padStart = dc, n.parseInt = pc, n.random = ic, n.reduce = go, n.reduceRight = vo, n.repeat = mc, n.replace = hc, n.result = Gl, n.round = pm, n.runInContext = e, n.sample = ko, n.size = Co, n.snakeCase = Gp, n.some = So, n.sortedIndex = Us, n.sortedIndexBy = Is, n.sortedIndexOf = xs, n.sortedLastIndex = Ts, n.sortedLastIndexBy = Fs, n.sortedLastIndexOf = js, n.startCase = $p, n.startsWith = gc, n.subtract = mm, n.sum = eu, n.sumBy = tu, n.template = vc, n.times = zc, n.toFinite = _l, n.toInteger = Cl, n.toLength = Sl, n.toLower = bc, n.toNumber = El, n.toSafeInteger = Nl, n.toString = Ol, n.toUpper = kc, n.trim = yc, n.trimEnd = _c, n.trimStart = Cc, n.truncate = Sc, n.unescape = Ec, n.uniqueId = $c, n.upperCase = Jp, n.upperFirst = Kp, n.each = uo, n.eachRight = po, n.first = gs, jc(n, function() {
                            var e = {};
                            return mi(n, function(t, i) {
                                gu.call(n.prototype, i) || (e[i] = t)
                            }), e
                        }(), {
                            chain: !1
                        }), n.VERSION = "4.17.4", c(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(e) {
                            n[e].placeholder = n
                        }), c(["drop", "take"], function(e, t) {
                            y.prototype[e] = function(n) {
                                n = n === ae ? 1 : zu(Cl(n), 0);
                                var i = this.__filtered__ && !t ? new y(this) : this.clone();
                                return i.__filtered__ ? i.__takeCount__ = Gu(n, i.__takeCount__) : i.__views__.push({
                                    size: Gu(n, Re),
                                    type: e + (i.__dir__ < 0 ? "Right" : "")
                                }), i
                            }, y.prototype[e + "Right"] = function(t) {
                                return this.reverse()[e](t).reverse()
                            }
                        }), c(["filter", "map", "takeWhile"], function(e, t) {
                            var n = t + 1,
                                i = n == Ie || 3 == n;
                            y.prototype[e] = function(e) {
                                var t = this.clone();
                                return t.__iteratees__.push({
                                    iteratee: _r(e, 3),
                                    type: n
                                }), t.__filtered__ = t.__filtered__ || i, t
                            }
                        }), c(["head", "last"], function(e, t) {
                            var n = "take" + (t ? "Right" : "");
                            y.prototype[e] = function() {
                                return this[n](1).value()[0]
                            }
                        }), c(["initial", "tail"], function(e, t) {
                            var n = "drop" + (t ? "" : "Right");
                            y.prototype[e] = function() {
                                return this.__filtered__ ? new y(this) : this[n](1)
                            }
                        }), y.prototype.compact = function() {
                            return this.filter(Ic)
                        }, y.prototype.find = function(e) {
                            return this.filter(e).head()
                        }, y.prototype.findLast = function(e) {
                            return this.reverse().find(e)
                        }, y.prototype.invokeMap = na(function(e, t) {
                            return "function" == typeof e ? new y(this) : this.map(function(n) {
                                return wi(n, e, t)
                            })
                        }), y.prototype.reject = function(e) {
                            return this.filter(To(_r(e)))
                        }, y.prototype.slice = function(e, t) {
                            e = Cl(e);
                            var n = this;
                            return n.__filtered__ && (e > 0 || t < 0) ? new y(n) : (e < 0 ? n = n.takeRight(-e) : e && (n = n.drop(e)), t !== ae && (t = Cl(t), n = t < 0 ? n.dropRight(-t) : n.take(t - e)), n)
                        }, y.prototype.takeRightWhile = function(e) {
                            return this.reverse().takeWhile(e).reverse()
                        }, y.prototype.toArray = function() {
                            return this.take(Re)
                        }, mi(y.prototype, function(e, t) {
                            var i = /^(?:filter|find|map|reject)|While$/.test(t),
                                r = /^(?:head|last)$/.test(t),
                                s = n[r ? "take" + ("last" == t ? "Right" : "") : t],
                                o = r || /^find/.test(t);
                            s && (n.prototype[t] = function() {
                                var t = this.__wrapped__,
                                    l = r ? [1] : arguments,
                                    c = t instanceof y,
                                    u = l[0],
                                    d = c || gp(t),
                                    p = function(e) {
                                        var t = s.apply(n, g([e], l));
                                        return r && m ? t[0] : t
                                    };
                                d && i && "function" == typeof u && 1 != u.length && (c = d = !1);
                                var m = this.__chain__,
                                    h = !!this.__actions__.length,
                                    f = o && !m,
                                    v = c && !h;
                                if (!o && d) {
                                    t = v ? t : new y(this);
                                    var b = e.apply(t, l);
                                    return b.__actions__.push({
                                        func: Ys,
                                        args: [p],
                                        thisArg: ae
                                    }), new a(b, m)
                                }
                                return f && v ? e.apply(this, l) : (b = this.thru(p), f ? r ? b.value()[0] : b.value() : b)
                            })
                        }), c(["pop", "push", "shift", "sort", "splice", "unshift"], function(e) {
                            var t = du[e],
                                i = /^(?:push|sort|unshift)$/.test(e) ? "tap" : "thru",
                                a = /^(?:pop|shift)$/.test(e);
                            n.prototype[e] = function() {
                                var e = arguments;
                                if (a && !this.__chain__) {
                                    var n = this.value();
                                    return t.apply(gp(n) ? n : [], e)
                                }
                                return this[i](function(n) {
                                    return t.apply(gp(n) ? n : [], e)
                                })
                            }
                        }), mi(y.prototype, function(e, t) {
                            var i = n[t];
                            if (i) {
                                var a = i.name + "";
                                (ad[a] || (ad[a] = [])).push({
                                    name: t,
                                    func: i
                                })
                            }
                        }), ad[Xa(ae, ve).name] = [{
                            name: "wrapper",
                            func: ae
                        }], y.prototype.clone = U, y.prototype.reverse = Y, y.prototype.value = te, n.prototype.at = Kd, n.prototype.chain = Xs, n.prototype.commit = Zs, n.prototype.next = eo, n.prototype.plant = no, n.prototype.reverse = io, n.prototype.toJSON = n.prototype.valueOf = n.prototype.value = ao, n.prototype.first = n.prototype.head, Tu && (n.prototype[Tu] = to), n
                    }();
                Fn._ = Kn, (a = function() {
                    return Kn
                }.call(t, n, t, i)) !== ae && (i.exports = a)
            }).call(this)
        }).call(t, n(34), n(444)(e))
    },
    868: function(e, t, n) {
        "use strict";

        function i(e) {
            if (e.action && e.userId) {
                var t = {
                    location: s.PageviewLocation.Channel,
                    action: e.action,
                    target: e.target,
                    type: e.type,
                    channel_id: e.channelId,
                    user_id: e.userId,
                    time: Date.now()
                };
                r.n.tracking.track(s.SpadeEventType.CrateNotificationAction, t)
            }
        }
        n.d(t, "a", function() {
            return a
        }), n.d(t, "b", function() {
            return o
        }), n.d(t, "c", function() {
            return l
        }), t.d = i;
        var a, r = n(2),
            s = n(13);
        ! function(e) {
            e.Close = "close", e.DontShowThis = "dont_show_this", e.LearnMore = "learn_more", e.OpenLater = "open_later", e.OpenNow = "open_now", e.Timeout = "timeout", e.TryBeta = "try_beta", e.View = "view"
        }(a || (a = {}));
        var o;
        ! function(e) {
            e.Inventory = "inventory", e.OpenCrate = "open_crate"
        }(o || (o = {}));
        var l;
        ! function(e) {
            e.Ftue = "ftue", e.ReceiveCrate = "receive_crate", e.BitsIntro = "bits_intro"
        }(l || (l = {}))
    },
    869: function(e, t, n) {
        "use strict";

        function i(e) {
            return void 0 === e && (e = !1), [{
                code: "asl",
                label: "American Sign Language"
            }, {
                code: "other",
                label: e ? Object(r.d)("Other", "broadcaster-languages") : "Other"
            }]
        }

        function a() {
            var e = r.n.intl.getLanguageCode(),
                t = function(t) {
                    return "en" === t.code ? 0 : e && e.startsWith(t.code) ? 1 : 2
                };
            return s.slice().sort(function(e, n) {
                var i = t(e),
                    a = t(n);
                return i !== a ? i - a : i + ":" + e.label < a + ":" + n.label ? -1 : 1
            }).concat(i(!0))
        }
        n.d(t, "a", function() {
            return o
        }), t.b = a;
        var r = n(2),
            s = [{
                code: "ar",
                label: "العربية"
            }, {
                code: "bg",
                label: "Български"
            }, {
                code: "cs",
                label: "Čeština"
            }, {
                code: "da",
                label: "Dansk"
            }, {
                code: "de",
                label: "Deutsch"
            }, {
                code: "el",
                label: "Ελληνικά"
            }, {
                code: "en",
                label: "English"
            }, {
                code: "es",
                label: "Español"
            }, {
                code: "fi",
                label: "Suomi"
            }, {
                code: "fr",
                label: "Français"
            }, {
                code: "hu",
                label: "Magyar"
            }, {
                code: "it",
                label: "Italiano"
            }, {
                code: "ja",
                label: "日本語"
            }, {
                code: "ko",
                label: "한국어"
            }, {
                code: "nl",
                label: "Nederlands"
            }, {
                code: "no",
                label: "Norsk"
            }, {
                code: "pl",
                label: "Polski"
            }, {
                code: "pt",
                label: "Português"
            }, {
                code: "ru",
                label: "Русский"
            }, {
                code: "sk",
                label: "Slovenčina"
            }, {
                code: "sv",
                label: "Svenska"
            }, {
                code: "th",
                label: "ภาษาไทย"
            }, {
                code: "tr",
                label: "Türkçe"
            }, {
                code: "vi",
                label: "Tiếng Việt"
            }, {
                code: "zh-hk",
                label: "中文(粵語)"
            }, {
                code: "zh",
                label: "中文"
            }],
            o = new Set(s.concat(i()).map(function(e) {
                return e.code
            }))
    },
    871: function(e, t) {},
    872: function(e, t) {},
    873: function(e, t, n) {
        "use strict";

        function i(e, t) {
            return e === r.SECOND ? Object(s.d)("{secondCount, plural, one {# second} other {# seconds}}", {
                secondCount: t
            }, "formatDuration") : e === r.MINUTE ? Object(s.d)("{minuteCount, plural, one {# minute} other {# minutes}}", {
                minuteCount: t
            }, "formatDuration") : e === r.DAY ? Object(s.d)("{dayCount, plural, one {# day} other {# days}}", {
                dayCount: t
            }, "formatDuration") : e === r.HOUR ? Object(s.d)("{hourCount, plural, one {# hour} other {# hours}}", {
                hourCount: t
            }, "formatDuration") : e === r.WEEK ? Object(s.d)("{weekCount, plural, one {# week} other {# weeks}}", {
                weekCount: t
            }, "formatDuration") : e === r.MONTH ? Object(s.d)("{monthCount, plural, one {# month} other {# months}}", {
                monthCount: t
            }, "formatDuration") : ""
        }

        function a(e) {
            if (e < 60) return i(r.SECOND, e);
            var t = Math.floor(e / 60),
                n = e % 60;
            if (t < 60) return n ? i(r.MINUTE, t) + " " + i(r.SECOND, n) : i(r.MINUTE, t);
            var a = Math.floor(t / 60);
            if (t %= 60, a < 24) return t ? i(r.HOUR, a) + " " + i(r.MINUTE, t) : i(r.HOUR, a);
            var s = Math.floor(a / 24);
            if (a %= 24, s < 7) return a ? i(r.DAY, s) + " " + i(r.HOUR, a) : i(r.DAY, s);
            if (s <= 26) {
                var o = Math.floor(s / 7);
                return s %= 7, s ? i(r.WEEK, o) + " " + i(r.DAY, s) : i(r.WEEK, o)
            }
            var l = Math.round((s + 3) / 30);
            return i(r.MONTH, l)
        }
        t.a = a;
        var r, s = n(2);
        ! function(e) {
            e[e.SECOND = 0] = "SECOND", e[e.MINUTE = 1] = "MINUTE", e[e.HOUR = 2] = "HOUR", e[e.DAY = 3] = "DAY", e[e.WEEK = 4] = "WEEK", e[e.MONTH = 5] = "MONTH"
        }(r || (r = {}))
    },
    874: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return r
        });
        var i = n(1),
            a = (n.n(i), n(388)),
            r = function(e) {
                var t, n = e.emote,
                    r = n.alt || "";
                return n.cheerAmount && (r += " " + n.cheerAmount.toString(), t = i.createElement("strong", {
                    className: "chat-line__message--cheer-amount",
                    style: {
                        color: n.cheerColor
                    }
                }, n.cheerAmount)), i.createElement(a.a, {
                    alt: r,
                    cheerText: t,
                    className: "chat-line__message--emote",
                    srcKey: "1x",
                    srcSet: n.images
                })
            }
    },
    875: function(e, t, n) {
        "use strict";
        var i, a = n(0),
            r = n(1),
            s = n(2);
        ! function(e) {
            e.On = "on", e.Off = "off", e.StaffOnly = "staff"
        }(i || (i = {}));
        var o = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    var e = s.b.get(this.props.name, i.Off);
                    return e === i.On || e === i.StaffOnly && this.props.isStaff ? r.Children.only(this.props.children) : null
                }, t
            }(r.Component),
            l = o;
        n.d(t, "a", function() {
            return i
        }), n.d(t, !1, function() {
            return o
        }), n.d(t, "b", function() {
            return l
        })
    },
    878: function(e, t, n) {
        "use strict";
        var i = n(903);
        n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "b", function() {
            return i.b
        }), n.d(t, "a", function() {
            return i.a
        })
    },
    879: function(e, t, n) {
        "use strict";

        function i() {
            return Object(o.d)("Unable to ban user", "BlockUserMutation")
        }

        function a(e) {
            var t = this;
            return Object(l.a)(m, {
                props: function(n) {
                    return {
                        onBanUser: function(a, l) {
                            return void 0 === l && (l = null), s.__awaiter(t, void 0, void 0, function() {
                                var t, m, h, f, g, v;
                                return s.__generator(this, function(s) {
                                    switch (s.label) {
                                        case 0:
                                            if (t = l ? p.a.Timeout : p.a.Ban, m = e(n.ownProps), h = m.channelID, f = m.onPushMessage, !n.mutate) return [3, 5];
                                            s.label = 1;
                                        case 1:
                                            return s.trys.push([1, 3, , 4]), [4, n.mutate(Object(c.a)({
                                                channelID: h,
                                                bannedUserLogin: a,
                                                expiresIn: l && r(l)
                                            }))];
                                        case 2:
                                            return s.sent(), g = Object(d.a)(t, a, null, l), f && f(g), [2, g];
                                        case 3:
                                            throw v = s.sent(), o.i.error(v, "Unable to ban user"), f && f(Object(u.a)(i())), new Error(i());
                                        case 4:
                                            return [3, 6];
                                        case 5:
                                            throw f && f(Object(u.a)(i())), new Error(i());
                                        case 6:
                                            return [2]
                                    }
                                })
                            })
                        }
                    }
                }
            })
        }

        function r(e) {
            if (!e) return "0s";
            var t = e,
                n = "";
            if (t > b) {
                var i = Math.floor(t / b);
                t -= i * b, n += i + "mo"
            }
            if (t > v) {
                var a = Math.floor(t / v);
                t -= a * v, n += a + "w"
            }
            if (t > g) {
                var r = Math.floor(t / g);
                t -= r * g, n += r + "d"
            }
            if (t > f) {
                var s = Math.floor(t / f);
                t -= s * f, n += s + "h"
            }
            if (t > h) {
                var o = Math.floor(t / h);
                t -= o * h, n += o + "m"
            }
            return t > 0 && (n += t + "s"), n
        }
        t.a = a;
        var s = n(0),
            o = n(2),
            l = n(7),
            c = n(20),
            u = n(840),
            d = n(852),
            p = n(814),
            m = n(887),
            h = (n.n(m), 60),
            f = 60 * h,
            g = 24 * f,
            v = 7 * g,
            b = 4 * v
    },
    882: function(e, t) {},
    883: function(e, t) {},
    884: function(e, t) {},
    885: function(e, t) {},
    886: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "VideoChatCard_Video"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "videoID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "video"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "videoID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "title"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "previewThumbnailURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "90"
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "height"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "51"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "publishedAt"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "owner"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "login"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 210
            }
        };
        n.loc.source = {
            body: "query VideoChatCard_Video($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    title\n    previewThumbnailURL(width: 90, height: 51)\n    publishedAt\n    owner {\n      id\n      login\n      displayName\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    887: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_BanUserFromChatRoom"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "createdAt"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 148
            }
        };
        n.loc.source = {
            body: "mutation Chat_BanUserFromChatRoom($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      createdAt\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    888: function(e, t, n) {
        "use strict";

        function i(e) {
            var t = c.createElement(j._21, {
                    bold: !0,
                    type: j._26.Span
                }, c.createElement("span", {
                    style: {
                        color: e.chatColor
                    }
                }, Object(B.a)(e.login, e.displayName))),
                n = null;
            return e.editAppearance || (n = c.createElement(j.U, {
                margin: {
                    top: 1
                }
            }, c.createElement("div", {
                className: "chat-settings__edit-button",
                onClick: e.onClickEdit,
                "data-a-target": V,
                "data-test-selector": H
            }, Object(D.d)("Edit Appearance", "ChatSettings")))), c.createElement(j._17, {
                background: j.m.Base,
                color: j.F.Base,
                display: j.H.InlineFlex,
                flexDirection: j.J.Column,
                fullWidth: !0
            }, c.createElement(j._21, {
                color: j.F.Alt2,
                transform: j._25.Uppercase
            }, Object(D.d)("Name Display", "ChatSettings")), c.createElement(j.U, {
                margin: {
                    top: 2
                }
            }, e.userBadges && e.userBadges.map(function(e) {
                return c.createElement(P.a, {
                    key: e.id,
                    badge: e
                })
            }), t), n)
        }

        function a() {
            return {}
        }

        function r(e) {
            return Object(p.bindActionCreators)({
                showReportUserModal: function(e) {
                    var t = l.__rest(e, []);
                    return Object(q.d)(z.a, t)
                }
            }, e)
        }

        function s(e) {
            return {
                darkModeEnabled: Object(y.a)(e) === m.a.Dark,
                followerModeDuration: e.chat.followerDuration,
                followerModeEnabled: e.chat.followerMode,
                lastUsedFollowerDurations: e.chat.lastUsedFollowerDurations,
                showModerationIcons: e.chat.showModIcons,
                showTimestamps: e.chat.showTimestamps,
                slowModeEnabled: e.chat.slowMode,
                theatreModeEnabled: e.ui.theatreModeEnabled,
                isLoggedIn: Object(k.d)(e)
            }
        }

        function o(e) {
            return Object(p.bindActionCreators)({
                onChatHide: function() {
                    return _.H()
                },
                onChatUnhide: function() {
                    return _.K()
                },
                onFollowerModeDisable: function() {
                    return _.x()
                },
                onFollowerModeDurationChange: function(e) {
                    return _.u(e)
                },
                onFollowerModeDurationPreferenceChange: function(e, t) {
                    return _.v(e, t)
                },
                onFollowerModeEnable: function() {
                    return _.C()
                },
                onModIconsDisable: function() {
                    return _.y()
                },
                onModIconsEnable: function() {
                    return _.D()
                },
                onSlowModeDisable: function() {
                    return _.z()
                },
                onSlowModeEnable: function() {
                    return _.E()
                },
                onTimestampsDisable: function() {
                    return _.B()
                },
                onTimestampsEnable: function() {
                    return _.G()
                },
                onShowViewerCard: C.d,
                onThemeChanged: function(e) {
                    return Object(b.b)(e, void 0, !1)
                },
                login: function() {
                    return Object(v.f)(g.a.Chat)
                }
            }, e)
        }
        var l = n(0),
            c = n(1),
            u = n(6),
            d = n(22),
            p = n(9),
            m = n(31),
            h = n(837),
            f = n(832),
            g = n(54),
            v = n(39),
            b = n(132),
            k = n(17),
            y = n(51),
            _ = n(378),
            C = n(825),
            S = n(838),
            E = n(845),
            w = n(822),
            N = n(851),
            O = n(855),
            D = n(2),
            U = n(28),
            I = n(47),
            x = n(7),
            T = n(4),
            F = ["#FF0000", "#0000FF", "#008000", "#B22222", "#FF7F50", "#9ACD32", "#FF4500", "#2E8B57", "#DAA520", "#D2691E", "#5F9EA0", "#1E90FF", "#FF69B4", "#8A2BE2", "#00FF7F"],
            j = n(3),
            L = (n(889), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onColorSelected = function(e) {
                        var n = e.currentTarget.getAttribute("data-color");
                        n && t.props.onColorSelected(n)
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    var e = this,
                        t = F.map(function(t) {
                            var n = {
                                "color-chooser": !0,
                                "color-chooser--selected": t === e.props.selectedColor
                            };
                            return c.createElement("div", {
                                key: t,
                                "data-color": t,
                                onClick: e.onColorSelected,
                                className: T(n),
                                style: {
                                    backgroundColor: t
                                },
                                "data-test-selector": "color_swatch_" + t
                            })
                        }),
                        n = c.createElement(j._21, {
                            transform: j._25.Uppercase,
                            color: j.F.Alt2
                        }, Object(D.d)("Name Color", "ChatSettings"));
                    return this.props.borderTop && (n = c.createElement(j._17, {
                        margin: {
                            top: 2
                        },
                        borderTop: !0,
                        padding: {
                            top: 2
                        }
                    }, n)), c.createElement("div", null, c.createElement(j._17, {
                        margin: {
                            bottom: 1
                        },
                        background: j.m.Base,
                        color: j.F.Base,
                        display: j.H.InlineFlex,
                        flexDirection: j.J.Column,
                        fullWidth: !0
                    }, n), c.createElement(j.U, {
                        margin: {
                            y: 1
                        },
                        display: j.H.Flex
                    }, t, c.createElement(j._21, {
                        fontSize: j.L.Size7
                    }, c.createElement("a", {
                        href: "https://twitch.tv/products/turbo?ref=more_colors_direct"
                    }, Object(D.d)("more colors →", "ChatSettings")))))
                }, t
            }(c.Component)),
            R = n(21),
            A = n(890),
            M = (n(891), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.onGlobalBadgeClicked = function(e) {
                        var n = e.currentTarget.getAttribute("data-badge");
                        t.setGlobalBadge(t.props.userLogin, n || "")
                    }, t.onChannelBadgeClicked = function(e) {
                        var n = e.currentTarget.getAttribute("data-badge");
                        t.setChannelBadge(t.props.channelLogin, t.props.userLogin, n || "")
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return this.props.data && !this.props.data.loading && this.props.data.user && this.props.data.currentUser ? c.createElement("div", null, c.createElement(L, {
                        selectedColor: this.props.userChatColor,
                        onColorSelected: this.props.onColorSelected,
                        borderTop: !0
                    }), this.getBadgeChooser()) : null
                }, t.prototype.getBadgeChooser = function() {
                    var e = this;
                    if (this.props.data) {
                        var t = this.props.data.user.self.availableBadges,
                            n = this.props.data.user.self.selectedBadge,
                            i = this.props.data.currentUser.availableBadges,
                            a = this.props.data.currentUser.selectedBadge;
                        if (!t) return null;
                        var r = void 0 === this.state.channelBadgeID && n ? n.setID : this.state.channelBadgeID,
                            s = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": !r
                            },
                            o = Object(D.d)("No channel badges :(", "ChatSettings");
                        t && t.length > 0 && (o = t.map(function(t) {
                            var i = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": n && t.setID === r
                            };
                            return c.createElement("div", {
                                "data-badge": t.setID,
                                onClick: e.onChannelBadgeClicked,
                                key: t.setID + "/" + t.version,
                                className: T(i),
                                "data-test-selector": "channel_badge_" + t.setID,
                                "data-a-target": "channel_badge_" + t.setID
                            }, c.createElement(j._30, {
                                label: t.title
                            }, c.createElement("img", {
                                alt: t.title,
                                src: t.image1x,
                                srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                            })))
                        }), o.push(c.createElement("div", {
                            key: "none",
                            "data-badge": "",
                            onClick: this.onChannelBadgeClicked,
                            className: T(s),
                            "data-test-selector": "channel_badge_none",
                            "data-a-target": "channel_badge_none"
                        }, c.createElement(j._30, {
                            label: Object(D.d)("Same as Global", "ChatSettings")
                        }, c.createElement("div", {
                            className: "edit-appearance__badge-chooser__none"
                        }, c.createElement(j._8, {
                            asset: j._9.Global
                        }))))));
                        var l = void 0 === this.state.globalBadgeID && a ? a.setID : this.state.globalBadgeID,
                            u = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": !l
                            },
                            d = Object(D.d)("No global badges :(", "ChatSettings");
                        return i && i.length > 0 && (d = i.map(function(t) {
                            var n = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": a && t.setID === l
                            };
                            return c.createElement("div", {
                                "data-badge": t.setID,
                                onClick: e.onGlobalBadgeClicked,
                                key: t.setID + "/" + t.version,
                                className: T(n),
                                "data-test-selector": "global_badge_" + t.setID,
                                "data-a-target": "global_badge_" + t.setID
                            }, c.createElement(j._30, {
                                label: t.title
                            }, c.createElement("img", {
                                alt: t.title,
                                src: t.image1x,
                                srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                            })))
                        }), d.push(c.createElement("div", {
                            key: "none",
                            "data-badge": "",
                            onClick: this.onGlobalBadgeClicked,
                            className: T(u),
                            "data-test-selector": "global_badge_none",
                            "data-a-target": "global_badge_none"
                        }, c.createElement(j._30, {
                            label: Object(D.d)("None", "ChatSettings")
                        }, c.createElement("div", {
                            className: "edit-appearance__badge-chooser__none"
                        }, c.createElement(j._8, {
                            asset: j._9.Ban
                        })))))), c.createElement("div", null, c.createElement(j._17, {
                            background: j.m.Base,
                            color: j.F.Base,
                            display: j.H.InlineFlex,
                            flexDirection: j.J.Column,
                            fullWidth: !0
                        }, c.createElement(j._17, {
                            margin: {
                                top: 2
                            },
                            padding: {
                                top: 2
                            },
                            borderTop: !0
                        }, c.createElement(j._30, {
                            align: j._31.Left,
                            label: Object(D.d)("Your global badge is shown when chatting and whispering.", "ChatSettings"),
                            width: 175
                        }, c.createElement(j._21, {
                            color: j.F.Alt2,
                            transform: j._25.Uppercase
                        }, Object(D.d)("Global Badge [?]", "ChatSettings")))), c.createElement(j.U, {
                            margin: {
                                y: 1
                            },
                            padding: {
                                top: 1
                            },
                            display: j.H.Flex,
                            "data-a-target": "global-badge-selector"
                        }, d)), c.createElement(j._17, {
                            background: j.m.Base,
                            color: j.F.Base,
                            display: j.H.InlineFlex,
                            flexDirection: j.J.Column,
                            fullWidth: !0
                        }, c.createElement(j._17, {
                            margin: {
                                top: 2
                            },
                            padding: {
                                top: 2
                            },
                            borderTop: !0
                        }, c.createElement(j._30, {
                            align: j._31.Left,
                            label: Object(D.d)("Change the badge shown when chatting in this channel.", "ChatSettings"),
                            width: 175
                        }, c.createElement(j._21, {
                            color: j.F.Alt2,
                            transform: j._25.Uppercase
                        }, Object(D.d)("Channel Badge [?]", "ChatSettings")))), c.createElement(j.U, {
                            margin: {
                                y: 1
                            },
                            padding: {
                                top: 1
                            },
                            display: j.H.Flex,
                            "data-a-target": "channel-badge-selector"
                        }, o)))
                    }
                }, t.prototype.setChannelBadge = function(e, t, n) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var i, a, r;
                        return l.__generator(this, function(s) {
                            switch (s.label) {
                                case 0:
                                    return i = {
                                        "Client-ID": D.n.config.legacyClientID,
                                        Accept: "application/vnd.twitchtv.v4+json; charset=UTF-8",
                                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                                        "Accept-Language": "en-us",
                                        Authorization: "OAuth " + this.props.authToken
                                    }, a = "https://api.twitch.tv/kraken/users/" + t + "/chat/channels/" + e + "/badges", [4, fetch(a, {
                                        method: "PUT",
                                        body: R.stringify({
                                            selected_badge: n
                                        }),
                                        headers: i
                                    })];
                                case 1:
                                    return r = s.sent(), r && r.ok && (this.props.onBadgesChanged(), this.setState({
                                        channelBadgeID: n
                                    })), [2]
                            }
                        })
                    })
                }, t.prototype.setGlobalBadge = function(e, t) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var n, i, a;
                        return l.__generator(this, function(r) {
                            switch (r.label) {
                                case 0:
                                    return n = {
                                        "Client-ID": D.n.config.legacyClientID,
                                        Accept: "application/vnd.twitchtv.v4+json; charset=UTF-8",
                                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                                        "Accept-Language": "en-us",
                                        Authorization: "OAuth " + this.props.authToken
                                    }, i = "https://api.twitch.tv/kraken/users/" + e + "/chat/badges", [4, fetch(i, {
                                        method: "PUT",
                                        body: R.stringify({
                                            selected_badge: t
                                        }),
                                        headers: n
                                    }).catch(console.error)];
                                case 1:
                                    return a = r.sent(), a && a.ok && (this.props.onBadgesChanged(), this.setState({
                                        globalBadgeID: t
                                    })), [2]
                            }
                        })
                    })
                }, t = l.__decorate([Object(x.a)(A, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(c.Component)),
            B = n(48),
            P = n(830),
            H = "edit-appearance-button",
            V = "edit-appearance-button",
            W = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(j.U, {
                        "data-toggle-balloon-id": "raids-follower-only-tooltip",
                        margin: {
                            left: .5
                        },
                        position: j._2.Relative
                    }, c.createElement(j._30, {
                        align: j._31.Right,
                        direction: j._32.Top,
                        display: j.H.InlineFlex,
                        label: this.props.text,
                        width: 175,
                        show: !0
                    }, c.createElement(j.P, {
                        alignItems: j.c.Center,
                        className: "chat-settings__highlight-indicator",
                        display: j.H.InlineFlex,
                        justifyContent: j.T.Center
                    }, c.createElement(j._21, {
                        color: j.F.Overlay,
                        fontSize: j.L.Size8,
                        type: j._26.Span,
                        "data-test-selector": "raids-follower-only-tooltip"
                    }, "i"))))
                }, t
            }(c.Component),
            q = n(37),
            z = n(379),
            G = n(10),
            $ = n(827),
            J = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.targetChannelID = t.props.targetChannelID, t
                }
                return l.__extends(t, e), t.fetchRecentRaidsList = function(e) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var t, n;
                        return l.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, $.a.get("/kraken/raids?client_id=" + D.a.authClientID + "&api_version=" + D.a.defaultAPIVersion + "&target_id=" + e)];
                                case 1:
                                    return t = i.sent(), [2, this.deserialize(t)];
                                case 2:
                                    return n = i.sent(), D.i.error(n, "Couldn't fetch raids list"), [2, []];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, t.deserialize = function(e) {
                    var t = [];
                    if (e.body && e.body.raids) {
                        for (var n in e.body.raids)
                            if (n.hasOwnProperty) {
                                var i = {
                                    raidID: e.body.raids[n]._id,
                                    raidAt: e.body.raids[n].raid_at,
                                    userID: e.body.raids[n].creator_user._id,
                                    name: e.body.raids[n].creator_user.name
                                };
                                t.push(i)
                            }
                        return t
                    }
                    return []
                }, t
            }(c.Component),
            K = n(20),
            Q = n(828),
            Y = n(836),
            X = n(892),
            Z = n(893),
            ee = (n(894), n(895)),
            te = function(e, t, n) {
                var i = e.readQuery({
                    query: Z,
                    variables: {
                        targetUserID: n.raiderUserID,
                        channelID: n.channelID
                    }
                });
                t && t.data && (i.chatRoomBanStatus = {
                    isPermanent: !0,
                    __typename: "ChatRoomBanStatus"
                }), e.writeQuery({
                    query: Z,
                    variables: {
                        targetUserID: n.raiderUserID,
                        channelID: n.channelID
                    },
                    data: i
                })
            },
            ne = function(e, t) {
                var n = e.readQuery({
                        query: Z,
                        variables: {
                            targetUserID: t.raiderUserID,
                            channelID: t.channelID
                        }
                    }),
                    i = l.__assign({}, n, {
                        chatRoomBanStatus: null
                    });
                e.writeQuery({
                    query: Z,
                    variables: {
                        targetUserID: t.raiderUserID,
                        channelID: t.channelID
                    },
                    data: i
                })
            },
            ie = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onUsernameClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-username"),
                            i = e.currentTarget.getAttribute("data-raid-id") || "";
                        n && t.props.onUsernameClick(n, Y.a.recent_raids, i)
                    }, t.onBanButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-channel-id") || "",
                            i = e.currentTarget.getAttribute("data-target-user-login") || "";
                        (0, t.props.banUser)(Object(K.a)({
                            channelID: n,
                            bannedUserLogin: i
                        }))
                    }, t.onUnbanButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-channel-id") || "",
                            i = e.currentTarget.getAttribute("data-target-user-login") || "";
                        (0, t.props.unbanUser)(Object(K.a)({
                            channelID: n,
                            bannedUserLogin: i
                        }))
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(j.U, {
                        key: "recent-raids-layout2-" + this.props.raiderUserID,
                        className: "recent-raids-item",
                        flexDirection: j.J.Row,
                        display: j.H.Flex,
                        fullWidth: !0
                    }, c.createElement(j.U, {
                        flexDirection: j.J.Row,
                        display: j.H.Flex,
                        fullWidth: !0,
                        justifyContent: j.T.Between
                    }, c.createElement(j._21, {
                        bold: !0
                    }, c.createElement("a", {
                        className: "recent-raids-item__name",
                        "data-username": this.props.channelLogin,
                        "data-raid-id": this.props.raidID,
                        onClick: this.onUsernameClick,
                        href: "#"
                    }, this.props.channelLogin)), c.createElement(j.U, {
                        position: j._2.Relative
                    }, c.createElement(j.U, {
                        className: "recent-raids-item__timestamp"
                    }, Object(Q.q)(Date.parse(this.props.timestamp))), this.getCardSlideInContent())))
                }, t.prototype.getCardSlideInContent = function() {
                    if (!this.props.slideInContent) return null;
                    var e = null;
                    return e = this.props.data.chatRoomBanStatus && this.props.data.chatRoomBanStatus.isPermanent ? c.createElement(j.u, {
                        key: "recent-raids-ban-button-" + this.props.raiderUserID,
                        size: j.x.Small,
                        type: j.z.Text,
                        onClick: this.onUnbanButtonClick,
                        "data-a-target": "recent-raid-item-button",
                        "data-raid-id": this.props.raidID,
                        "data-target-user-login": this.props.raiderLogin,
                        "data-target-user-id": this.props.raiderUserID,
                        "data-channel-id": this.props.channelID
                    }, Object(D.d)("Unban", "RecentRaid")) : c.createElement(j.u, {
                        key: "recent-raids-ban-button-" + this.props.raiderUserID,
                        size: j.x.Small,
                        type: j.z.Text,
                        onClick: this.onBanButtonClick,
                        "data-a-target": "recent-raid-item-button",
                        "data-raid-id": this.props.raidID,
                        "data-target-user-login": this.props.raiderLogin,
                        "data-target-user-id": this.props.raiderUserID,
                        "data-channel-id": this.props.channelID
                    }, Object(D.d)("Ban", "RecentRaid")), c.createElement(j.U, {
                        key: "recent-raids-layout-" + this.props.raiderUserID,
                        className: "recent-raids-item__hover-content",
                        zIndex: j._38.Above,
                        "data-a-target": "recent-raids-item-hover"
                    }, this.props.slideInContent, e)
                }, t = l.__decorate([Object(x.a)(Z, {
                    options: function(e) {
                        return {
                            variables: {
                                targetUserID: e.raiderUserID,
                                channelID: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                }), Object(x.a)(X, {
                    name: "banUser",
                    options: function(e) {
                        return {
                            update: function(t, n) {
                                te(t, n, e)
                            }
                        }
                    }
                }), Object(x.a)(ee, {
                    name: "unbanUser",
                    options: function(e) {
                        return {
                            update: function(t) {
                                ne(t, e)
                            }
                        }
                    }
                })], t)
            }(c.Component),
            ae = ie,
            re = n(262),
            se = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.onReportButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-raid-id") || "",
                            i = e.currentTarget.getAttribute("data-target-user-id") || "",
                            a = e.currentTarget.getAttribute("data-target-user-login") || "";
                        t.props.showReportUserModal({
                            reportContext: {
                                contentType: re.a.Raid,
                                targetUserID: i,
                                contentID: n,
                                extra: JSON.stringify({
                                    channel_id: i.toString()
                                })
                            },
                            title: Object(D.d)("Report {channelDisplayName}", {
                                channelDisplayName: a
                            }, "ReportUserModal")
                        })
                    }, t
                }
                return l.__extends(t, e), t.prototype.componentDidMount = function() {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return l.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, J.fetchRecentRaidsList(this.props.targetChannelID)];
                                case 1:
                                    return e = t.sent(), this.setState({
                                        raidChannels: e
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    var e = [],
                        t = [],
                        n = {};
                    if (void 0 !== this.state.raidChannels) {
                        0 === this.state.raidChannels.length && e.push(c.createElement(j._21, {
                            key: "recent-raids-no-raids",
                            type: j._26.P
                        }, Object(D.d)("You have no recent raids", "RecentRaids")));
                        for (var i in this.state.raidChannels)
                            if (i.hasOwnProperty) {
                                var a = this.state.raidChannels[i];
                                this.state.raidChannels.hasOwnProperty(i) && void 0 === n[a.userID] && (t.push(c.createElement(ae, {
                                    key: "recent-raids-item-" + a.userID,
                                    slideInContent: [c.createElement(j._17, {
                                        key: "recent-raids-item-report-area-" + a.userID,
                                        color: j.F.Alt2,
                                        display: j.H.InlineFlex
                                    }, c.createElement(j.u, {
                                        key: "recent-raid-report-button",
                                        size: j.x.Small,
                                        type: j.z.Text,
                                        onClick: this.onReportButtonClick,
                                        "data-a-target": "recent-raid-item-button",
                                        "data-raid-id": a.raidID,
                                        "data-target-user-login": a.name,
                                        "data-target-user-id": a.userID
                                    }, Object(D.d)("Report", "RecentRaid")), c.createElement(j._30, {
                                        align: j._31.Right,
                                        width: 150,
                                        label: Object(D.d)("Banning a user prevents them from future chatting or raiding", "RecentRaid")
                                    }))],
                                    timestamp: a.raidAt,
                                    channelLogin: a.name,
                                    raiderUserID: a.userID,
                                    channelID: this.props.targetChannelID,
                                    raiderLogin: a.name,
                                    raidID: a.raidID,
                                    onUsernameClick: this.props.onUsernameClick,
                                    showReportUserModal: this.props.showReportUserModal
                                })), n[a.userID] = !0)
                            }
                    }
                    var r = null;
                    return this.props.recentRaids ? c.createElement(j.U, {
                        key: "recent-raids"
                    }, c.createElement(j.U, {
                        margin: {
                            bottom: 2
                        }
                    }, c.createElement(j._21, {
                        color: j.F.Link,
                        type: j._26.Span
                    }, c.createElement(G.a, {
                        to: {
                            pathname: "/broadcast/dashboard/settings/raids"
                        }
                    }, Object(D.d)("Manage Raid Settings", "RecentRaids")))), e, t) : (r = c.createElement(j.U, {
                        key: "recent-raids",
                        margin: {
                            top: 1,
                            bottom: 1
                        },
                        display: j.H.Flex,
                        justifyContent: j.T.Between,
                        alignItems: j.c.Center
                    }, c.createElement("span", {
                        className: "chat-settings__edit-button",
                        onClick: this.props.onClickRecentRaids,
                        "data-test-selector": "recent-raids-button"
                    }, Object(D.d)("See Recent Raids", "ChatSettings")), this.props.tooltipText && c.createElement(j.U, {
                        position: j._2.Relative
                    }, c.createElement(j._30, {
                        align: j._31.Right,
                        direction: j._32.Top,
                        display: j.H.InlineFlex,
                        label: this.props.tooltipText,
                        width: 175,
                        show: !0
                    }, c.createElement(j.P, {
                        alignItems: j.c.Center,
                        className: "chat-settings__highlight-indicator",
                        display: j.H.InlineFlex,
                        justifyContent: j.T.Center,
                        margin: {
                            left: .5
                        }
                    }, c.createElement(j._21, {
                        color: j.F.Overlay,
                        fontSize: j.L.Size8,
                        type: j._26.Span
                    }, "i"))))), c.createElement(j.U, null, r))
                }, t
            }(c.Component),
            oe = Object(u.a)(a, r)(se),
            le = n(896),
            ce = (n(897), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        recentRaids: !1,
                        chatColor: null,
                        raidsTooltipDismissed: !1
                    }, t.dismissRaidsTooltip = function() {
                        t.setState({
                            raidsTooltipDismissed: !0
                        })
                    }, t.handleFollowerDurationClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-duration");
                        n && t.props.onFollowerDurationChange(parseInt(n, 10))
                    }, t.onClickEdit = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.props.onClickEditAppearance()
                    }, t.onClickRecentRaids = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.setState({
                            recentRaids: !0
                        })
                    }, t.onClickBack = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.props.onLeaveEditAppearance(), t.setState({
                            recentRaids: !1
                        })
                    }, t.onColorSelected = function(e) {
                        t.setState({
                            chatColor: e
                        }), t.props.onColorSelected(e)
                    }, t.onBadgesChanged = function() {
                        return l.__awaiter(t, void 0, void 0, function() {
                            var e, t, n;
                            return l.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return !this.props.data || this.props.data.loading ? [3, 2] : [4, this.props.data.refetch()];
                                    case 1:
                                        if (e = i.sent(), e.data) {
                                            if (t = e.data, !t.user.self) return [2];
                                            n = {}, t.user.self.displayBadges.forEach(function(e) {
                                                n[e.setID] = e.version
                                            }), D.n.tmi.client.updateChannelBadges(this.props.channelLogin, n)
                                        }
                                        i.label = 2;
                                    case 2:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    if (!this.props.data || this.props.data.loading) return null;
                    var e = null;
                    if (this.props.isLoggedIn && this.props.data.currentUser) {
                        var t = this.props.data.user.self ? this.props.data.user.self.displayBadges : [];
                        e = c.createElement(i, {
                            key: "name-display",
                            login: this.props.data.currentUser.login,
                            displayName: this.props.data.currentUser.displayName,
                            chatColor: this.state.chatColor || this.props.data.currentUser.chatColor,
                            editAppearance: this.props.editAppearance,
                            userBadges: t,
                            onClickEdit: this.onClickEdit
                        })
                    }
                    var n = [];
                    return this.props.isLoggedIn ? this.props.editAppearance ? n = [c.createElement(j.P, {
                        margin: {
                            bottom: 2
                        },
                        key: "chat-settings-edit-inject"
                    }, c.createElement("div", {
                        key: "chat-settings-edit",
                        className: "chat-settings__edit-button",
                        onClick: this.onClickBack,
                        "data-test-selector": "chat-settings-back-button"
                    }, c.createElement(j._21, {
                        color: j.F.Link,
                        type: j._26.Span
                    }, c.createElement(j._8, {
                        asset: j._9.ChatSettingsBack,
                        height: 10,
                        width: 10
                    }), Object(D.d)("Back", "ChatSettingsAppearance")))), e, c.createElement(M, {
                        key: "edit-appearance",
                        onColorSelected: this.onColorSelected,
                        editAppearance: this.props.editAppearance,
                        authToken: this.props.authToken,
                        channelLogin: this.props.channelLogin,
                        userChatColor: this.state.chatColor || this.props.data.currentUser.chatColor,
                        userLogin: this.props.data.currentUser.login,
                        onBadgesChanged: this.onBadgesChanged
                    })] : this.state.recentRaids ? n = [c.createElement(j.P, {
                        key: "chat-settings-recent-raids"
                    }, c.createElement("div", {
                        key: "chat-settings-edit",
                        className: "chat-settings__recent-raids-button",
                        onClick: this.onClickBack,
                        "data-test-selector": "chat-settings-back-button"
                    }, c.createElement(j._21, {
                        color: j.F.Link,
                        type: j._26.Span
                    }, c.createElement(j._8, {
                        asset: j._9.ChatSettingsBack,
                        height: 10,
                        width: 10
                    }), Object(D.d)("Back", "ChatSettingsRecentRaids")), c.createElement(j.U, {
                        margin: {
                            top: 2
                        }
                    }, c.createElement(j._21, {
                        key: "recent-raids-title",
                        color: j.F.Alt2,
                        transform: j._25.Uppercase
                    }, Object(D.d)("Recent Raids", "ChatSettings"))))), c.createElement(oe, {
                        key: "recent-raids",
                        targetChannelID: this.props.channelID,
                        recentRaids: this.state.recentRaids,
                        onClickRecentRaids: this.onClickRecentRaids,
                        onUsernameClick: this.props.onShowViewerCard
                    })] : (n = [e, this.renderUniversalOptions()], this.props.isCurrentUserModerator && n.push(this.renderModTools())) : n = [c.createElement(L, {
                        key: "color-chooser",
                        onColorSelected: this.props.onColorSelected
                    }), this.renderUniversalOptions()], c.createElement(U.b, {
                        className: "chat-settings"
                    }, c.createElement("div", {
                        onClick: this.dismissRaidsTooltip
                    }, c.createElement(j._17, {
                        key: "chat-settings",
                        className: "chat-settings__content",
                        background: j.m.Base,
                        color: j.F.Base,
                        padding: 2
                    }, n)))
                }, t.prototype.renderUniversalOptions = function() {
                    if (!this.props.data) return null;
                    var e = this.props.isPopout && c.createElement(j.E, {
                            checked: this.props.darkModeEnabled,
                            "data-a-target": "darkmode-checkbox",
                            "data-test-selector": "dark-mode-checkbox",
                            id: "chat-settings-dark-mode",
                            label: Object(D.d)("Dark Mode", "ChatSettings"),
                            onChange: this.props.onDarkModeToggle
                        }),
                        t = !this.props.isPopout && c.createElement("button", {
                            onClick: this.props.onChatPopout,
                            "data-a-target": "popout-chat-button",
                            "data-test-selector": "popout-button"
                        }, Object(D.d)("Popout", "ChatSettings")),
                        n = !this.props.isPopout && (window.BetterTTV || window.FrankerFaceZ) && c.createElement("button", {
                            onClick: this.props.onLegacyChatPopout,
                            "data-test-selector": "legacy-popout-button"
                        }, Object(D.d)("Legacy Popout", "ChatSettings"));
                    return c.createElement(j.U, {
                        key: "chat-options"
                    }, c.createElement(j._17, {
                        borderTop: !0,
                        margin: {
                            top: 2
                        },
                        padding: {
                            y: 2
                        }
                    }, c.createElement(j._21, {
                        color: j.F.Alt2,
                        transform: j._25.Uppercase
                    }, Object(D.d)("Chat Options", "ChatSettings"))), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(j.E, {
                        checked: this.props.showTimestamps,
                        "data-a-target": "timestamp-checkbox",
                        "data-test-selector": "timestamps-selector",
                        id: "chat-settings-timestamp",
                        label: Object(D.d)("Timestamps", "ChatSettings"),
                        onChange: this.props.onTimestampToggle
                    })), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, e), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement("button", {
                        onClick: this.props.onChatHide,
                        "data-a-target": "hide-chat-button",
                        "data-test-selector": "hide-chat-button"
                    }, Object(D.d)("Hide Chat", "ChatSettings"))), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, t), n && c.createElement(j.U, null, n))
                }, Object.defineProperty(t.prototype, "showRaidsTooltip", {
                    get: function() {
                        return this.props.sawFirstRaidPrompt && !this.state.raidsTooltipDismissed
                    },
                    enumerable: !0,
                    configurable: !0
                }), t.prototype.renderModTools = function() {
                    return c.createElement(j._17, {
                        key: "mod-tools",
                        borderTop: !0,
                        "data-test-selector": "mod-tools",
                        margin: {
                            top: 2
                        },
                        padding: {
                            top: 2
                        }
                    }, c.createElement(j.U, {
                        margin: {
                            bottom: 2
                        }
                    }, c.createElement(j._21, {
                        color: j.F.Alt2,
                        transform: j._25.Uppercase
                    }, Object(D.d)("Mod Tools", "ChatSettings"))), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(j.E, {
                        checked: this.props.showModerationIcons,
                        "data-a-target": "mod-icons-checkbox",
                        "data-test-selector": "mod-icons-checkbox",
                        id: "chat-settings-mod-icons",
                        label: Object(D.d)("Mod Icons", "ChatSettings"),
                        onChange: this.props.onModIconsToggle
                    })), c.createElement(j._17, {
                        margin: {
                            bottom: 1
                        },
                        display: j.H.Flex,
                        justifyContent: j.T.Between
                    }, c.createElement(j.E, {
                        checked: this.props.followerModeEnabled,
                        "data-a-target": "follower-mode-checkbox",
                        "data-test-selector": "follower-mode-checkbox",
                        id: "chat-settings-followers-only",
                        label: Object(D.d)("Followers-Only Chat", "ChatSettings"),
                        onChange: this.props.onFollowerModeToggle
                    }), this.showRaidsTooltip ? c.createElement(W, {
                        text: Object(D.d)("Prevent offensive raiders from chatting.", "RaidReportingChat")
                    }) : null, c.createElement(j.U, {
                        alignItems: j.c.Center,
                        display: j.H.Flex,
                        flexWrap: j.K.NoWrap,
                        justifyContent: j.T.Between
                    }, c.createElement(j.U, {
                        margin: {
                            right: .5
                        }
                    }, c.createElement(j._21, {
                        color: j.F.Alt2,
                        fontSize: j.L.Size7,
                        type: j._26.Span
                    }, Object(D.d)("Must have followed for", "ChatSettings"))), c.createElement(j.U, {
                        className: "chat-settings__mod-tools-follower-button",
                        flexShrink: 0
                    }, c.createElement(I.a, {
                        display: j.H.InlineBlock
                    }, c.createElement(j.u, {
                        size: j.x.Small,
                        type: j.z.Text,
                        "data-a-target": "follower-mode-dropdown",
                        "data-test-selector": "follower-mode-duration-menu",
                        dropdown: !0
                    }, Object(S.d)(this.props.selectedFollowerModeDuration)), c.createElement(j.p, {
                        direction: j.q.TopRight
                    }, c.createElement(j.U, {
                        padding: .5
                    }, c.createElement(j._21, {
                        color: j.F.Alt2
                    }, Object(D.d)("Followers can chat if they have followed for at least", "ChatSettings"))), c.createElement(j._17, {
                        color: j.F.Link
                    }, this.renderFollowerModeOptions())))))), c.createElement(j.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(j.E, {
                        checked: this.props.slowModeEnabled,
                        "data-a-target": "slow-mode-checkbox",
                        "data-test-selector": "slow-mode-checkbox",
                        id: "chat-settings-slow-mode",
                        label: Object(D.d)("Slow Mode", "ChatSettings"),
                        onChange: this.props.onSlowModeToggle
                    })), c.createElement(oe, {
                        key: "recent-raids",
                        recentRaids: this.state.recentRaids,
                        onClickRecentRaids: this.onClickRecentRaids,
                        onUsernameClick: C.d,
                        targetChannelID: this.props.channelID,
                        tooltipText: this.showRaidsTooltip ? Object(D.d)("View recent raids with option to report or ban.", "RaidReportingChat") : ""
                    }), c.createElement("button", {
                        onClick: this.props.onChatClear,
                        "data-a-target": "clear-chat-button",
                        "data-test-selector": "clear-chat-button"
                    }, Object(D.d)("Clear Chat", "ChatSettings")))
                }, t.prototype.renderFollowerModeOptions = function() {
                    var e = this;
                    return S.b.map(function(t) {
                        return c.createElement(j.S, {
                            "data-duration": t,
                            key: t,
                            onClick: e.handleFollowerDurationClick,
                            selected: t === e.props.selectedFollowerModeDuration
                        }, c.createElement(j.U, {
                            padding: .5
                        }, Object(S.c)(t)))
                    })
                }, t = l.__decorate([Object(x.a)(le, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(c.Component)),
            ue = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        editAppearance: !1
                    }, t.handleSettingsToggle = function(e) {
                        t.props.onToggle && t.props.onToggle(e), t.state.editAppearance && t.setState({
                            editAppearance: !1
                        })
                    }, t.onEdit = function() {
                        t.setState({
                            editAppearance: !0
                        })
                    }, t.onLeaveEdit = function() {
                        t.setState({
                            editAppearance: !1
                        })
                    }, t.onDarkModeToggle = function() {
                        var e = t.props.darkModeEnabled ? m.a.Light : m.a.Dark;
                        t.props.onThemeChanged(e, !t.props.isPopout), Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.darkModeEnabled,
                            settingName: E.a.DarkMode
                        })
                    }, t.onTimestampToggle = function() {
                        Object(N.b)("showTimestamps", !t.props.showTimestamps), t.props.showTimestamps ? t.props.onTimestampsDisable() : t.props.onTimestampsEnable(), Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.showTimestamps,
                            settingName: E.a.ShowTimestamps
                        })
                    }, t.onChatHide = function() {
                        t.props.onChatHide(), Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !0,
                            settingName: E.a.HideChat
                        })
                    }, t.onChatPopout = function() {
                        t.props.onChatHide();
                        var e = window.open("/popout/" + t.props.channelLogin + "/chat?popout=", "_blank", "right=50,top=50,width=400,height=600,resizable=yes,scrollbars=no,toolbar=no,location=no,directories=no,status=no,menubar=no,copyhistory=no");
                        e && !Object(h.a)() && (e.focus(), Object(f.a)(e, function() {
                            t.props.onChatUnhide()
                        }))
                    }, t.onLegacyChatPopout = function() {
                        t.props.onChatHide();
                        var e = window.open("https://www.twitch.tv/" + t.props.channelLogin + "/chat?popout=", "_blank", "right=50,top=50,width=400,height=600,resizable=yes,scrollbars=no,toolbar=no,location=no,directories=no,status=no,menubar=no,copyhistory=no");
                        e && !Object(h.a)() && (e.focus(), Object(f.a)(e, function() {
                            t.props.onChatUnhide()
                        }))
                    }, t.onModIconsToggle = function() {
                        Object(N.b)("showModIcons", !t.props.showModerationIcons), t.props.showModerationIcons ? t.props.onModIconsDisable() : t.props.onModIconsEnable(), Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.showModerationIcons,
                            settingName: E.a.ShowModIcons
                        })
                    }, t.onFollowerModeToggle = function() {
                        if (t.props.followerModeEnabled) t.props.onChatCommand(Object(w.d)()), t.props.onFollowerModeDisable();
                        else {
                            var e = t.getSelectedFollowerDuration();
                            t.props.onChatCommand(Object(w.f)(e)), t.props.onFollowerModeDurationChange(e), t.props.onFollowerModeEnable()
                        }
                        Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.followerModeEnabled,
                            settingName: E.a.FollowerMode
                        })
                    }, t.onFollowerDurationChange = function(e) {
                        Object(N.c)(t.props.channelLogin, e), t.props.onFollowerModeDurationPreferenceChange(t.props.channelLogin, e), t.props.followerModeEnabled && (t.props.onChatCommand(Object(w.f)(e)), t.props.onFollowerModeDurationChange(e)), Object(O.c)({
                            channelLogin: t.props.channelLogin,
                            followerModeOn: t.props.followerModeEnabled,
                            isHostMode: t.props.isHostMode,
                            newValue: e
                        })
                    }, t.onSlowModeToggle = function() {
                        t.props.slowModeEnabled ? (t.props.onChatCommand(Object(w.e)()), t.props.onSlowModeDisable()) : (t.props.onChatCommand(Object(w.g)()), t.props.onSlowModeEnable()), Object(O.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.slowModeEnabled,
                            settingName: E.a.SlowMode
                        })
                    }, t.onChatClear = function() {
                        t.props.onChatCommand(Object(w.c)())
                    }, t.getSelectedFollowerDuration = function() {
                        if (t.props.followerModeEnabled) return t.props.followerModeDuration;
                        var e = t.props.lastUsedFollowerDurations[t.props.channelLogin];
                        return "number" == typeof e ? e : S.a
                    }, t.onColorSelected = function(e) {
                        if (!t.props.isLoggedIn) return void t.props.login();
                        t.props.onChatCommand(Object(w.b)(e))
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(me, {
                        disabled: this.props.disabled,
                        onToggle: this.handleSettingsToggle
                    }, c.createElement(ce, {
                        darkModeEnabled: this.props.darkModeEnabled,
                        followerModeEnabled: this.props.followerModeEnabled,
                        editAppearance: this.state.editAppearance,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isPopout: this.props.isPopout,
                        onChatClear: this.onChatClear,
                        onChatHide: this.onChatHide,
                        onChatPopout: this.onChatPopout,
                        onDarkModeToggle: this.onDarkModeToggle,
                        onFollowerDurationChange: this.onFollowerDurationChange,
                        onFollowerModeToggle: this.onFollowerModeToggle,
                        onLegacyChatPopout: this.onLegacyChatPopout,
                        onModIconsToggle: this.onModIconsToggle,
                        onSlowModeToggle: this.onSlowModeToggle,
                        onTimestampToggle: this.onTimestampToggle,
                        selectedFollowerModeDuration: this.getSelectedFollowerDuration(),
                        showModerationIcons: this.props.showModerationIcons,
                        showTimestamps: this.props.showTimestamps,
                        slowModeEnabled: this.props.slowModeEnabled,
                        theatreModeEnabled: this.props.theatreModeEnabled,
                        onColorSelected: this.onColorSelected,
                        authToken: this.props.authToken,
                        channelLogin: this.props.channelLogin,
                        channelID: this.props.channelID,
                        isLoggedIn: this.props.isLoggedIn,
                        onClickEditAppearance: this.onEdit,
                        onLeaveEditAppearance: this.onLeaveEdit,
                        sawFirstRaidPrompt: this.props.sawFirstRaidPrompt,
                        onShowViewerCard: this.props.onShowViewerCard
                    }))
                }, t
            }(c.Component),
            de = Object(u.a)(s, o)(ue),
            pe = Object(d.e)(de),
            me = function(e) {
                return c.createElement(I.a, {
                    onToggle: e.onToggle
                }, c.createElement(j.v, {
                    icon: j._9.Gear,
                    ariaLabel: Object(D.d)("Chat settings", "ChatInput"),
                    "data-a-target": "chat-settings",
                    disabled: !!e.disabled
                }), c.createElement(j.p, {
                    direction: j.q.Top,
                    noTail: !0,
                    offsetY: "11px",
                    "data-a-target": "chat-settings-balloon"
                }, e.children))
            };
        n.d(t, "a", function() {
            return pe
        }), n.d(t, "b", function() {
            return me
        })
    },
    889: function(e, t) {},
    890: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatSettings_Badges"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "selectedBadge"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "availableBadges"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "selectedBadge"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "availableBadges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 382
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatSettings_Badges($channelLogin: String!) {\n  currentUser {\n    id\n    selectedBadge {\n      ...badge\n    }\n    availableBadges {\n      ...badge\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      selectedBadge {\n        ...badge\n      }\n      availableBadges {\n        ...badge\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = i
    },
    891: function(e, t) {},
    892: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions_BanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 155
            }
        };
        n.loc.source = {
            body: "mutation RecentRaidsModActions_BanUser($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    893: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "chatRoomBanStatus"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }, {
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "userID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPermanent"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 203
            }
        };
        n.loc.source = {
            body: "query RecentRaidsModActions($targetUserID: ID!, $channelID: ID!) {\n  # This is currently backwards on the server\n  chatRoomBanStatus(channelID: $targetUserID, userID: $channelID) {\n    isPermanent\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    894: function(e, t) {},
    895: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions_UnbanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 161
            }
        };
        n.loc.source = {
            body: "mutation RecentRaidsModActions_UnbanUser($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    896: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatSettings_CurrentUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "chatColor"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayBadges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 294
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatSettings_CurrentUser($channelLogin: String!) {\n  currentUser {\n    id\n    login\n    displayName\n    chatColor\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      displayBadges {\n        ...badge\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = i
    },
    897: function(e, t) {},
    898: function(e, t) {},
    903: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                isLoggedIn: Object(w.d)(e)
            }
        }

        function a(e, t, n) {
            var i = new FileReader;
            i.onloadend = function() {
                n && n(i.result)
            }, i.readAsDataURL(e);
            var a = new FileReader;
            a.onloadend = function() {
                t(a.result)
            }, a.readAsArrayBuffer(e)
        }

        function r(e) {
            var t = "";
            if (e && e.name) {
                var n = e.name;
                t = n.slice((Math.max(0, n.lastIndexOf(".")) || 1 / 0) + 1)
            }
            return "" === t && (t = "png"), t
        }

        function s(e, t) {
            if (!t) throw new Error("Attempted to upload an empty file object.");
            var n = decodeURI(e);
            return fetch(n, {
                method: "PUT",
                body: new Blob([t])
            })
        }

        function o(e, t, n) {
            if (void 0 === n) throw new Error("No default avatar selected.");
            return fetch(b.a.krakenEndpoint + "/users/" + e + "/default_images?client_id=" + b.a.authClientID + "&api_version=" + b.a.defaultAPIVersion, {
                method: "PUT",
                headers: {
                    Authorization: "OAuth " + t,
                    "Content-Type": "application/json",
                    Accept: "application/json"
                },
                body: JSON.stringify({
                    default_profile_image: ee[n].id
                })
            })
        }

        function l(e, t, n, i) {
            return h.__awaiter(this, void 0, void 0, function() {
                var a;
                return h.__generator(this, function(r) {
                    switch (r.label) {
                        case 0:
                            return [4, fetch(b.a.krakenEndpoint + "/users/" + e + "/upload_image?client_id=" + b.a.authClientID + "&api_version=" + b.a.defaultAPIVersion + "&image_type=" + n + "&format=" + i, {
                                method: "POST",
                                headers: {
                                    Authorization: "OAuth " + t
                                }
                            })];
                        case 1:
                            return a = r.sent(), [2, a.json()]
                    }
                })
            })
        }

        function c(e) {
            switch (e) {
                case X.Success:
                    return {
                        message: Object(b.d)("Success!", "Profile Edit"),
                        type: F._0.Success
                    };
                case X.UnexpectedError:
                    return {
                        message: Object(b.d)("Unexpected error, please try again.", "Profile Edit"),
                        type: F._0.Alert
                    };
                case X.BadSizeError:
                    return {
                        message: Object(b.d)("Image might exceed 10MB.", "Profile Edit"),
                        type: F._0.Alert
                    };
                case X.NonImageError:
                    return {
                        message: Object(b.d)("You must upload an image.", "Profile Edit"),
                        type: F._0.Alert
                    };
                case X.WrongFormatError:
                    return {
                        message: Object(b.d)("You must select a valid image type.", "Profile Edit"),
                        type: F._0.Alert
                    };
                case X.TimeoutError:
                    return {
                        message: Object(b.d)("Upload timed-out. Please try again.", "Profile Edit"),
                        type: F._0.Alert
                    };
                case X.Uploading:
                    return {
                        message: Object(b.d)("Uploading....", "Profile Edit"),
                        type: F._0.Brand
                    };
                case X.ImageNotSelected:
                    return {
                        message: Object(b.d)("Select a image first.", "Profile Edit"),
                        type: F._0.Alert
                    };
                default:
                    return {
                        message: Object(b.d)("Please try again.", "Profile Edit"),
                        type: F._0.Alert
                    }
            }
        }

        function u(e) {
            return {
                authToken: Object(w.a)(e)
            }
        }

        function d(e, t) {
            return Object(z.bindActionCreators)({
                closeModal: function() {
                    return t.successCallback && t.successCallback(), Object(G.c)()
                }
            }, e)
        }

        function p(e) {
            return Object(z.bindActionCreators)({
                showModal: G.d
            }, e)
        }
        var m, h = n(0),
            f = n(4),
            g = n(1),
            v = n(10),
            b = n(2),
            k = n(111),
            y = n(381),
            _ = n(47),
            C = n(7),
            S = n(130),
            E = n(6),
            w = n(17),
            N = n(70),
            O = n(832),
            D = n(831),
            U = n(843),
            I = n(850),
            x = n(821),
            T = n(815),
            F = n(3),
            j = (n(914), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handlePromoBuy = function(e) {
                        var n = Object(x.b)({
                            trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                            channelID: t.props.channelID,
                            purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                            bitsAmount: e.currentTarget.dataset.bitsAmount,
                            location: T.b.GetBitsButton
                        });
                        n && t.props.onPromoBuyClose(n)
                    }, t
                }
                return h.__extends(t, e), t.prototype.render = function() {
                    var e = g.createElement(F.U, null, g.createElement(F.U, {
                        padding: {
                            x: 5,
                            y: 2
                        },
                        textAlign: F._22.Center
                    }, g.createElement(F._21, {
                        type: F._26.H4,
                        bold: !0
                    }, Object(b.d)("Cheer Bits for your Favorite Streamer!", "Bits--FirstTimeUserPrompt"))), g.createElement(F.U, {
                        padding: {
                            x: 2,
                            bottom: 1
                        }
                    }, g.createElement(F._21, {
                        type: F._26.Span,
                        color: F.F.Alt
                    }, Object(b.d)("Bits are fun, animated emotes. Cheering Bits celebrates moments you love with the community right in chat and similar to subscribing, helps support Partners and Affiliates.", "Bits--FirstTimeUserPrompt"), g.createElement(F.P, {
                        margin: {
                            left: .5
                        }
                    }, g.createElement("a", {
                        onClick: this.props.toggleShowTutorial
                    }, Object(b.d)("How do I cheer?", "Bits--FirstTimeUserPrompt"))))), g.createElement(F.U, {
                        padding: {
                            bottom: 2
                        },
                        textAlign: F._22.Center
                    }, g.createElement(F.P, {
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(F._21, {
                        type: F._26.H6,
                        bold: !0,
                        className: "bits-first-time-user-prompt__promo-header"
                    }, Object(b.d)("First Time Purchaser Discount Pack!", "Bits--FirstTimeUserPrompt"))), g.createElement(F.u, {
                        onClick: this.handlePromoBuy,
                        "data-purchase-url": this.props.promo.url,
                        "data-bits-amount": this.props.promo.bits,
                        "data-a-target": "bits-purchase-button-" + this.props.promo.bits
                    }, Object(b.d)("{price} For {amount} Bits", {
                        price: this.props.promo.price,
                        amount: this.props.promo.bits
                    }, "Bits--FirstTimeUserPrompt"))));
                    return this.props.isShowingTutorial ? g.createElement(F.U, {
                        className: "bits-first-time-user-prompt",
                        fullWidth: !0
                    }, g.createElement(F.U, {
                        className: "bits-first-time-user-prompt__tutorial-back-button"
                    }, g.createElement(F.u, {
                        onClick: this.props.toggleShowTutorial,
                        type: F.z.Text
                    }, g.createElement(F._8, {
                        asset: F._9.Play,
                        height: 8
                    }), " ", Object(b.d)("Back", "Bits--FirstTimeUserPrompt"))), g.createElement(F.U, {
                        textAlign: F._22.Center,
                        padding: {
                            x: 2,
                            bottom: 2,
                            top: 5
                        },
                        fullHeight: !0
                    }, g.createElement(F.e, {
                        type: F.i.SlideInLeft,
                        duration: F.g.Long,
                        enabled: !0
                    }, g.createElement(I.a, null)))) : this.props.animateFirstTimeUserIntro ? g.createElement(F.P, {
                        className: "bits-first-time-user-prompt"
                    }, g.createElement(F.e, {
                        type: F.i.SlideInRight,
                        duration: F.g.Long,
                        enabled: this.props.animateFirstTimeUserIntro
                    }, e)) : g.createElement(F.U, {
                        className: "bits-first-time-user-prompt"
                    }, e)
                }, t
            }(g.Component)),
            L = j,
            R = n(820),
            A = n(839),
            M = n(5),
            B = n(915),
            P = (n(916), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hideFirstTimeUserIntro: !1
                    }, t.trackBitsCardInteraction = function(e, n) {
                        var i = {
                            actionName: e,
                            emoteType: n && n.emoteType,
                            emoteLevel: n && n.emoteLevel,
                            location: T.b.GetBitsButton,
                            displayedBalance: t.props.bitsBalance || 0
                        };
                        Object(T.h)(i)
                    }, t.onClose = function() {}, t.onPromoBuyClose = function(e) {
                        Object(O.a)(e, function() {
                            t.props.data && t.props.data.refetch()
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.props.loading) return g.createElement(F._17, {
                        "data-a-target": "get-bits-button-content-loading",
                        display: F.H.Flex,
                        flexDirection: F.J.Column,
                        alignItems: F.c.Center,
                        justifyContent: F.T.Center,
                        textAlign: F._22.Center,
                        padding: {
                            y: 5
                        }
                    }, g.createElement(F.X, {
                        delay: 0
                    }), g.createElement(F.U, {
                        padding: {
                            top: 2
                        }
                    }, g.createElement(F._21, {
                        italic: !0
                    }, Object(b.d)("Fetching bits", "Bits--GetBitsButtonContent"))));
                    var e = null;
                    if (this.props.bitsOffers) {
                        var t = this.props.bitsOffers.find(function(e) {
                            return Object(x.c)(e)
                        });
                        t && t.type === R.b && this.props.channelID && !this.state.hideFirstTimeUserIntro && (e = g.createElement(L, {
                            promo: t,
                            animateFirstTimeUserIntro: this.props.animateFirstTimeUserIntro,
                            isShowingTutorial: this.props.isShowingTutorial,
                            toggleShowTutorial: this.props.toggleShowTutorial,
                            trackBitsCardInteraction: this.trackBitsCardInteraction,
                            channelID: this.props.channelID,
                            onPromoBuyClose: this.onPromoBuyClose
                        }))
                    }
                    var n = null;
                    void 0 !== this.props.bitsBalance && this.props.bitsConfig ? n = g.createElement(F._17, {
                        borderBottom: !0,
                        textAlign: F._22.Center,
                        fullWidth: !0,
                        padding: {
                            y: .5
                        }
                    }, g.createElement(F._21, {
                        type: F._26.Span
                    }, Object(b.d)("You have {bitsBalance}", {
                        bitsBalance: g.createElement(D.a, {
                            withImage: !0,
                            withText: !0,
                            count: this.props.bitsBalance,
                            bitsConfig: this.props.bitsConfig
                        })
                    }, "Bits--GetBitsButton"))) : void 0 === this.props.bitsBalance && this.props.bitsConfig && (n = g.createElement(F._17, {
                        borderBottom: !0,
                        textAlign: F._22.Center,
                        fullWidth: !0,
                        padding: {
                            y: .5
                        }
                    }, g.createElement(F._21, {
                        type: F._26.Span
                    }, Object(b.d)("{bitsGem} Log in to see your Bits balance", {
                        bitsGem: g.createElement(D.a, {
                            count: 100,
                            withImage: !0,
                            bitsConfig: this.props.bitsConfig
                        })
                    }, "Bits--GetBitsButton"))));
                    var i = null;
                    return this.props.bitsConfig && this.props.channelLogin && (i = g.createElement(U.a, {
                        bitsConfig: this.props.bitsConfig,
                        channelLogin: this.props.channelLogin,
                        closeAllBits: this.onClose,
                        onClose: this.onClose,
                        trackBitsCardInteraction: this.trackBitsCardInteraction,
                        location: T.b.GetBitsButton,
                        hidePromos: !0,
                        hideWateb: !0,
                        fullsize: !0
                    })), g.createElement(N.b, {
                        className: "get-bits-button-content"
                    }, g.createElement(F.U, null, n, e, i))
                }, t = h.__decorate([Object(M.c)("GetBitsButtonContent"), Object(C.a)(B, {
                    name: "data",
                    props: function(e) {
                        var t, n;
                        e.data && e.data.user && e.data.user.cheer && (t = Object(A.a)(e.data.user.cheer.emotes), n = e.data.user.id);
                        var i, a;
                        return e.data && e.data.currentUser ? (a = e.data.currentUser.bitsBalance, i = e.data.currentUser.bitsOffers) : e.data && e.data.bitsOffers && (i = e.data.bitsOffers), {
                            loading: e.data && e.data.loading,
                            bitsOffers: i,
                            bitsBalance: a,
                            bitsConfig: t,
                            channelID: n
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    },
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin,
                                withChannel: !!e.channelLogin,
                                isLoggedIn: e.isLoggedIn
                            }
                        }
                    }
                })], t)
            }(g.Component)),
            H = P,
            V = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isShowingTutorial: !1,
                        animateFirstTimeUserIntro: !1
                    }, t.toggleBalloon = function(e) {
                        t.setState({
                            animateFirstTimeUserIntro: !1
                        }), e || Object(T.h)({
                            actionName: T.a.BuyMain,
                            location: T.b.GetBitsButton,
                            displayedBalance: 0
                        })
                    }, t.toggleShowTutorial = function() {
                        t.setState({
                            isShowingTutorial: !t.state.isShowingTutorial,
                            animateFirstTimeUserIntro: !0
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.channelLogin && (e = g.createElement(H, {
                        isLoggedIn: this.props.isLoggedIn,
                        channelLogin: this.props.channelLogin,
                        toggleShowTutorial: this.toggleShowTutorial,
                        isShowingTutorial: this.state.isShowingTutorial,
                        animateFirstTimeUserIntro: this.state.animateFirstTimeUserIntro
                    })), g.createElement(_.a, {
                        onToggle: this.toggleBalloon
                    }, g.createElement(F.u, {
                        dropdown: !0
                    }, Object(b.d)("Get Bits", "Bits--GetBitsButton")), g.createElement(F.p, {
                        direction: F.q.BottomRight,
                        size: F.r.Large
                    }, e))
                }, t = h.__decorate([Object(M.c)("GetBitsButton")], t)
            }(g.Component),
            W = V,
            q = Object(E.a)(i)(W),
            z = n(9),
            G = n(37),
            $ = n(865),
            J = n(105),
            K = n(30),
            Q = (n(917), function(e) {
                var t = function() {
                        e.onSelect(e.index)
                    },
                    n = {
                        "default-avatar__selected": e.selected,
                        "default-avatar": !0
                    };
                return g.createElement(F.U, {
                    padding: {
                        bottom: 1
                    }
                }, g.createElement("div", {
                    onClick: t,
                    "aria-label": Object(b.d)("Click to select Default Avatar Number {index, number}", {
                        index: e.index
                    }, "Default Avatar")
                }, g.createElement(F._17, {
                    border: !0,
                    fullHeight: !0,
                    fullWidth: !0,
                    position: F._2.Relative,
                    className: f(n)
                }, g.createElement("img", {
                    alt: Object(b.d)("Default Avatar Number {index, number}", {
                        index: e.index
                    }, "Default Avatar"),
                    src: e.imageSrc
                }))))
            });
        ! function(e) {
            e.ProfileImage = "profile_image", e.ProfileBanner = "profile_banner", e.ChannelOfflineImage = "channel_offline_image"
        }(m || (m = {}));
        var Y;
        ! function(e) {
            e.Success = "SUCCESS", e.NonImage = "IS_IMAGE_VALIDATION_FAILED", e.WrongFormat = "IMAGE_FORMAT_VALIDATION_FAILED", e.BadSize = "FILE_SIZE_VALIDATION_FAILED"
        }(Y || (Y = {}));
        var X;
        ! function(e) {
            e[e.Success = 0] = "Success", e[e.UnexpectedError = 1] = "UnexpectedError", e[e.BadSizeError = 2] = "BadSizeError", e[e.NonImageError = 3] = "NonImageError", e[e.WrongFormatError = 4] = "WrongFormatError", e[e.TimeoutError = 5] = "TimeoutError", e[e.Uploading = 6] = "Uploading", e[e.ImageNotSelected = 7] = "ImageNotSelected"
        }(X || (X = {}));
        var Z = (n(918), n(919)),
            ee = [{
                id: "profile_image_001",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/bb97f7e6-f11a-4194-9708-52bf5a5125e8-profile_image-300x300.jpg"
            }, {
                id: "profile_image_002",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/27103734-3cda-44d6-a384-f2ab71e4bb85-profile_image-300x300.jpg"
            }, {
                id: "profile_image_003",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/49988c7b-57bc-4dee-bd4f-6df4ad215d3a-profile_image-300x300.jpg"
            }, {
                id: "profile_image_004",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/0ecbb6c3-fecb-4016-8115-aa467b7c36ed-profile_image-300x300.jpg"
            }, {
                id: "profile_image_005",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/cd618d3e-f14d-4960-b7cf-094231b04735-profile_image-300x300.jpg"
            }, {
                id: "profile_image_006",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/4cbf10f1-bb9f-4f57-90e1-15bf06cfe6f5-profile_image-300x300.jpg"
            }, {
                id: "profile_image_007",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/b83b1794-7df9-4878-916c-88c2ad2e4f9f-profile_image-300x300.jpg"
            }],
            te = ["image/*"],
            ne = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        statusMessage: null,
                        imagePreviewURL: "",
                        profileUpdated: !1,
                        currentImageHasTallAspectRatio: !1,
                        imageFormat: ""
                    }, t.currentImage = null, t.logger = b.i.withCategory("ProfileImagePicker"), t.onImageInputChange = function(e) {
                        var n;
                        if (null === e) return void t.setState({
                            statusMessage: X.ImageNotSelected
                        });
                        n = e[0];
                        var i = r(n),
                            s = (n.size / 1024 / 1024).toFixed(4);
                        if (parseInt(s, 10) > 10) return void t.setState({
                            statusMessage: X.BadSizeError
                        });
                        t.setState({
                            selectedImageIndex: void 0,
                            imagePreviewURL: "",
                            imageFormat: "",
                            currentImageHasTallAspectRatio: !1
                        }), a(n, function(e) {
                            t.currentImage = e, t.setState({
                                statusMessage: null
                            })
                        }, function(e) {
                            var n = new Image,
                                a = !1;
                            n.onload = function() {
                                n.width < n.height && (a = !0), t.setState({
                                    currentImageHasTallAspectRatio: a
                                })
                            }, n.src = e, t.setState({
                                imagePreviewURL: e,
                                imageFormat: i
                            })
                        })
                    }, t.onUpdateButtonClick = function(e) {
                        return h.__awaiter(t, void 0, void 0, function() {
                            var t, n, i, a, r = this;
                            return h.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        if (e.preventDefault(), void 0 !== this.state.selectedImageIndex) return this.setDefaultAvatar(), [2];
                                        if (!this.currentImage) return this.setState({
                                            statusMessage: X.ImageNotSelected
                                        }), [2];
                                        this.setState({
                                            statusMessage: X.Uploading
                                        }), o.label = 1;
                                    case 1:
                                        return o.trys.push([1, 3, , 4]), [4, l(this.props.userID, this.props.authToken, m.ProfileImage, this.state.imageFormat)];
                                    case 2:
                                        return t = o.sent(), n = t.upload_url, i = t.upload_id, [3, 4];
                                    case 3:
                                        return a = o.sent(), this.logger.error(a, "Request for upload ID failed to get expected response from server."), this.setState({
                                            statusMessage: X.UnexpectedError
                                        }), [2];
                                    case 4:
                                        return this.unsubscribe = b.j.subscribe({
                                            topic: Object(K.c)(this.props.userID),
                                            success: function() {
                                                try {
                                                    s(n, r.currentImage)
                                                } catch (e) {
                                                    r.logger.error(e, "Profile Image upload failed."), r.unsubscribe(), r.setState({
                                                        statusMessage: X.UnexpectedError,
                                                        selectedImageIndex: void 0,
                                                        imagePreviewURL: "",
                                                        imageFormat: "",
                                                        currentImageHasTallAspectRatio: !1
                                                    })
                                                }
                                                r.timeoutHandle = setTimeout(function() {
                                                    return r.handlePubSubTimeout()
                                                }, 1e4)
                                            },
                                            failure: function() {
                                                r.setState({
                                                    statusMessage: X.UnexpectedError,
                                                    selectedImageIndex: void 0,
                                                    imagePreviewURL: "",
                                                    currentImageHasTallAspectRatio: !1
                                                })
                                            },
                                            onMessage: function(e) {
                                                if (e.upload_id === i) {
                                                    clearTimeout(r.timeoutHandle);
                                                    var t = null;
                                                    t = e.status === Y.Success ? X.Success : e.status === Y.BadSize ? X.BadSizeError : e.status === Y.NonImage ? X.NonImageError : e.status === Y.WrongFormat ? X.WrongFormatError : X.UnexpectedError, r.unsubscribe && r.unsubscribe(), r.setState({
                                                        statusMessage: t
                                                    }), r.state.statusMessage === X.Success ? r.setState({
                                                        profileUpdated: !0
                                                    }) : (r.setState({
                                                        profileUpdated: !1,
                                                        imagePreviewURL: "",
                                                        imageFormat: ""
                                                    }), r.currentImage = null)
                                                }
                                            }
                                        }), [2]
                                }
                            })
                        })
                    }, t.onDefaultImageSelected = function(e) {
                        t.setState({
                            selectedImageIndex: e,
                            imagePreviewURL: ee[e].uri
                        })
                    }, t.handlePubSubTimeout = function() {
                        t.unsubscribe(), t.setState({
                            statusMessage: X.TimeoutError
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    void 0 !== this.unsubscribe && this.unsubscribe(), this.timeoutHandle && clearTimeout(this.timeoutHandle)
                }, t.prototype.componentDidUpdate = function() {
                    var e = this;
                    this.state.profileUpdated && setTimeout(function() {
                        e.props.data && e.props.data.refetch(), e.props.closeModal()
                    }, 1e3)
                }, t.prototype.render = function() {
                    var e = this,
                        t = ee.map(function(t, n) {
                            return g.createElement(Q, {
                                key: t.id,
                                imageSrc: t.uri,
                                index: n,
                                onSelect: e.onDefaultImageSelected,
                                selected: e.state.selectedImageIndex === n
                            })
                        }),
                        n = "" !== this.state.imagePreviewURL,
                        i = null;
                    if (n) {
                        var a = {
                            "profile-edit__image-preview": !0,
                            "profile-edit__image-preview-tall": this.state.currentImageHasTallAspectRatio
                        };
                        i = g.createElement(F.U, {
                            className: f(a),
                            "data-test-selector": "preview-image",
                            position: F._2.Relative
                        }, g.createElement("img", {
                            src: "" + this.state.imagePreviewURL
                        }))
                    }
                    var r = "" === this.state.imagePreviewURL,
                        s = null;
                    r && (s = g.createElement(F.U, {
                        className: "profile-edit__upload-info"
                    }, g.createElement(F.U, null, g.createElement(F._8, {
                        asset: F._9.Plus,
                        type: F._10.Alt2,
                        height: 20,
                        width: 20
                    })), g.createElement(F._21, {
                        type: F._26.H3,
                        color: F.F.Alt2,
                        fontSize: F.L.Size4
                    }, Object(b.d)("Upload a Photo", "Profile Edit"))));
                    var o = null;
                    this.props.showCloser && (o = g.createElement(J.a, null));
                    var l = null;
                    if (null !== this.state.statusMessage) {
                        var u = c(this.state.statusMessage),
                            d = u.message,
                            p = u.type;
                        l = g.createElement(F.Z, {
                            label: d,
                            type: p
                        })
                    }
                    var m = this.props.login;
                    return this.props.displayName && (m = this.props.displayName), g.createElement(F.U, {
                        className: "profile-edit",
                        position: F._2.Relative,
                        fullHeight: !0
                    }, g.createElement(F._17, {
                        className: "profile-edit__background-container",
                        background: F.m.Base,
                        fullWidth: !0
                    }, g.createElement(F.U, {
                        padding: 2,
                        display: F.H.InlineBlock,
                        position: F._2.Relative,
                        textAlign: F._22.Center,
                        fullWidth: !0
                    }, g.createElement(F._17, {
                        borderBottom: !0,
                        margin: {
                            bottom: 2
                        }
                    }, g.createElement(F._21, {
                        type: F._26.H3,
                        fontSize: F.L.Size4
                    }, Object(b.d)("Editing profile picture for {userName}", {
                        userName: m
                    }, "Profile Edit"), " ")), g.createElement(F.U, {
                        className: "profile-edit__upload-container",
                        display: F.H.InlineBlock,
                        position: F._2.Relative,
                        textAlign: F._22.Center,
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(F.U, {
                        className: "profile-edit__upload",
                        display: F.H.InlineBlock,
                        position: F._2.Relative,
                        textAlign: F._22.Center
                    }, g.createElement($.a, {
                        allowedFileTypes: te,
                        onFilesSubmitted: this.onImageInputChange
                    }, s), i)), g.createElement(F._17, {
                        "data-test-selector": "status-message",
                        fontSize: F.L.Size4,
                        position: F._2.Relative,
                        textAlign: F._22.Center,
                        className: "profile-edit__status-message"
                    }, l), g.createElement(F._17, {
                        borderBottom: !0,
                        padding: {
                            bottom: .5
                        },
                        margin: {
                            bottom: 2
                        }
                    }, g.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(F._21, {
                        type: F._26.H3,
                        fontSize: F.L.Size5
                    }, Object(b.d)("Or select one of these", "Profile Edit"))), g.createElement(F._33, {
                        childWidth: F._34.ExtraSmall,
                        gutterSize: F._35.ExtraSmall,
                        placeholderItems: 3
                    }, t)), g.createElement(F.U, {
                        display: F.H.Flex,
                        justifyContent: F.T.Center
                    }, g.createElement(F.u, {
                        "data-test-selector": "update-button",
                        onClick: this.onUpdateButtonClick
                    }, Object(b.d)("Update", "Profile Edit"))))), o)
                }, t.prototype.setDefaultAvatar = function() {
                    return h.__awaiter(this, void 0, void 0, function() {
                        var e, t, n;
                        return h.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    this.setState({
                                        statusMessage: X.Uploading
                                    }), e = X.UnexpectedError, i.label = 1;
                                case 1:
                                    return i.trys.push([1, 3, , 4]), [4, o(this.props.userID, this.props.authToken, this.state.selectedImageIndex)];
                                case 2:
                                    return t = i.sent(), 204 === t.status || 200 === t.status ? e = X.Success : this.logger.error(new Error("Default Avatar PUT failed. Fetch returned non-200 status: " + t.status), "Default Avatar PUT failed. Fetch returned non-200 status: " + t.status), [3, 4];
                                case 3:
                                    return n = i.sent(), this.logger.error(n, "Default Avatar PUT failed."), [3, 4];
                                case 4:
                                    return this.setState({
                                        statusMessage: e,
                                        profileUpdated: e === X.Success
                                    }), [2]
                            }
                        })
                    })
                }, t = h.__decorate([Object(C.a)(Z, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.login
                            }
                        }
                    }
                })], t)
            }(g.Component),
            ie = Object(M.c)("Profile Edit")(ne),
            ae = Object(E.a)(u, d)(ie),
            re = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.openModal = function() {
                        t.props.showModal(ae, {
                            userID: t.props.userID,
                            login: t.props.login,
                            displayName: t.props.displayName,
                            showCloser: !0
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return g.createElement(F.U, null, g.createElement("div", {
                        onClick: this.openModal
                    }, g.createElement(F._8, {
                        asset: F._9.Edit,
                        height: 36,
                        width: 36,
                        fill: !0,
                        type: F._10.Brand
                    })))
                }, t = h.__decorate([Object(M.c)("EditProfileOverlay")], t)
            }(g.Component),
            se = re,
            oe = Object(E.a)(null, p)(se),
            le = n(137),
            ce = (n(920), n(921));
        n.d(t, "b", function() {
            return ue
        }), n.d(t, "a", function() {
            return he
        });
        var ue, de = "channel-header__verified-badge",
            pe = "channel-header__live-indicator";
        ! function(e) {
            e[e.Channel = 1] = "Channel", e[e.Clips = 2] = "Clips", e[e.Collections = 3] = "Collections", e[e.Events = 4] = "Events", e[e.Success = 5] = "Success", e[e.Followers = 6] = "Followers", e[e.Following = 7] = "Following", e[e.Videos = 8] = "Videos"
        }(ue || (ue = {}));
        var me = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        live: !1
                    }, t.verifiedBadgeElement = g.createElement(F._30, {
                        label: Object(b.d)("Verified", "ChannelHeader"),
                        direction: F._32.Right
                    }, g.createElement(F.U, {
                        className: "channel-header__verified",
                        "data-target": de,
                        display: F.H.Flex,
                        alignItems: F.c.Center,
                        margin: {
                            left: 1
                        }
                    }, g.createElement(F._8, {
                        asset: F._9.Verified
                    }))), t.liveIndicatorElement = g.createElement(F.U, {
                        margin: {
                            left: 1
                        },
                        "data-target": pe
                    }, g.createElement(F._30, {
                        label: Object(b.d)("Live Now", "ChannelHeader"),
                        direction: F._32.Right
                    }, g.createElement(F.V, {
                        pulse: !0
                    }))), t.renderAvatarEditButton = function() {
                        return t.props.data && t.props.data && t.props.data.currentUser && t.props.data.user && t.props.data.currentUser.roles && (t.props.data.currentUser.id === t.props.data.user.id || t.props.data.currentUser.roles.isStaff || t.props.data.currentUser.roles.isSiteAdmin) ? g.createElement(F.U, {
                            className: "channel-header__edit-profile-overlay",
                            position: F._2.Absolute
                        }, g.createElement(oe, {
                            userID: t.props.data.user.id,
                            login: t.props.data.user.login,
                            displayName: t.props.data.user.displayName
                        })) : null
                    }, t.onUpdateDebounce = function() {
                        if (!t.resizeAnimationFrame && t.channelHeader) {
                            var e = t.channelHeader.querySelector('[data-target="channel-header-left"]');
                            t.updateWidth(t.getWidth(e).width), t.resizeAnimationFrame = requestAnimationFrame(t.handleWindowResize)
                        }
                    }, t.handleWindowResize = function() {
                        t.resizeAnimationFrame = null, t.getChannelHeaderSize()
                    }, t.saveChannelHeaderRef = function(e) {
                        return t.channelHeader = e
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.updateLiveState(this.props)
                }, t.prototype.componentDidMount = function() {
                    window.addEventListener("resize", this.onUpdateDebounce), !this.props.data || this.props.data.loading || this.props.data.error || this.getChannelHeaderSize(), this.reportInteractive()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.updateLiveState(e)
                }, t.prototype.componentDidUpdate = function() {
                    this.channelHeader && this.updateWidth(this.getWidth(this.channelHeader.querySelector('[data-target="channel-header-left"]')).width), this.onUpdateDebounce(), this.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame), window.removeEventListener("resize", this.onUpdateDebounce), this.props.latencyTracking.reportInteractive()
                }, t.prototype.updateWidth = function(e) {
                    var t = e !== this.width || this.width !== this.prevWidth;
                    void 0 !== this.width && (this.prevWidth = this.width), this.width !== e && (this.width = e), t && (this.resizeAnimationFrame && (cancelAnimationFrame(this.resizeAnimationFrame), this.resizeAnimationFrame = null), this.onUpdateDebounce())
                }, t.prototype.render = function() {
                    var e, t, n = 0,
                        i = 0,
                        a = 0,
                        r = b.a.defaultAvatarURL;
                    this.props.data && this.props.data.user && !this.props.data.loading && !this.props.data.error && (n = this.props.data.user.videos.totalCount, i = this.props.data.user.followers.totalCount, a = this.props.data.user.follows.totalCount, r = this.props.data.user.profileImageURL, e = this.props.data.user.displayName, t = this.props.data.user.roles.isPartner);
                    var s = this.state.live && ue[this.props.currentPage] !== ue[ue.Channel],
                        o = this.createChannelLinks(n, i, a),
                        l = {
                            "channel-header__user": !0,
                            "channel-header__user--selected": ue[this.props.currentPage] === ue[ue.Channel]
                        },
                        c = null;
                    this.canRenderBitsButton() && (c = g.createElement(F.U, {
                        margin: {
                            left: 1
                        }
                    }, g.createElement(q, {
                        channelLogin: this.props.channelLogin
                    })));
                    var u, d = g.createElement(F.U, {
                        display: F.H.Flex,
                        flexWrap: F.K.NoWrap,
                        alignItems: F.c.Center,
                        flexShrink: 0
                    }, g.createElement(F.U, {
                        className: "channel-header__user-avatar channel-header__user-avatar--active",
                        margin: {
                            right: 1
                        },
                        display: F.H.Flex,
                        flexShrink: 0,
                        alignItems: F.c.Stretch
                    }, g.createElement(F.l, {
                        size: 36,
                        imageSrc: r,
                        imageAlt: e || ""
                    }), this.renderAvatarEditButton()), e ? g.createElement(F._21, {
                        type: F._26.H5
                    }, e) : g.createElement(F.U, {
                        alignItems: F.c.Center
                    }, g.createElement(F._1, {
                        lineCount: 1,
                        width: 120
                    })), s && this.liveIndicatorElement, t && this.verifiedBadgeElement);
                    return u = this.props.data && this.props.data.user && this.props.data.user.login ? g.createElement(v.a, {
                        to: "/" + this.props.data.user.login,
                        "data-target": "channel-header__channel-link",
                        "data-a-target": "user-channel-header-item"
                    }, d) : d, g.createElement(F.U, {
                        className: "channel-header",
                        flexShrink: 0,
                        padding: {
                            x: 3
                        }
                    }, g.createElement(F.U, {
                        display: F.H.Flex,
                        justifyContent: F.T.Between,
                        flexWrap: F.K.NoWrap,
                        fullHeight: !0,
                        refDelegate: this.saveChannelHeaderRef
                    }, g.createElement(F.U, {
                        display: F.H.Flex,
                        alignItems: F.c.Stretch,
                        flexShrink: 0,
                        flexWrap: F.K.NoWrap,
                        "data-target": "channel-header-left"
                    }, g.createElement(F.P, {
                        className: f(l),
                        padding: {
                            y: .5,
                            right: 2
                        },
                        display: F.H.Flex,
                        flexWrap: F.K.NoWrap,
                        alignItems: F.c.Center,
                        flexShrink: 0
                    }, u), this.renderTabs(o), g.createElement(F.U, {
                        className: "channel-header__item channel-header__item--no-underline",
                        padding: {
                            x: 1
                        },
                        display: F.H.Flex,
                        flexShrink: 0,
                        alignSelf: F.d.Center,
                        "data-target": "channel-header-button"
                    }, g.createElement(_.a, {
                        alwaysMountBalloonContent: !0
                    }, g.createElement(F.v, {
                        icon: F._9.NavMore,
                        ariaLabel: Object(b.d)("More", "ChannelHeader")
                    }), g.createElement(F.p, {
                        direction: F.q.Bottom,
                        noTail: !0
                    }, g.createElement(F.U, {
                        padding: {
                            y: 1
                        }
                    }, this.renderDropdown(o)))))), g.createElement(F.U, {
                        display: F.H.Flex,
                        flexWrap: F.K.NoWrap,
                        flexShrink: 0,
                        alignItems: F.c.Center,
                        className: "channel-header__right",
                        "data-target": "channel-header-right"
                    }, g.createElement(F.U, {
                        className: "channel-header__follow-button",
                        display: F.H.Flex,
                        alignItems: F.c.Stretch,
                        margin: {
                            left: 1
                        }
                    }, g.createElement(k.a, {
                        updateContainerWidth: this.onUpdateDebounce,
                        isHostedFollow: !1,
                        channelLogin: this.props.channelLogin
                    })), g.createElement(F.U, {
                        margin: {
                            left: 1
                        }
                    }, g.createElement(le.b, {
                        updateContainerWidth: this.onUpdateDebounce,
                        channelLogin: this.props.channelLogin
                    })), c)), g.createElement(y.a, {
                        onResize: this.onUpdateDebounce
                    }))
                }, t.prototype.updateLiveState = function(e) {
                    !e.data || e.data.loading || e.data.error || this.setState({
                        live: !!e.data.user.stream && "" !== e.data.user.stream.id
                    })
                }, t.prototype.generateUserLink = function(e, t) {
                    void 0 === e && (e = ""), void 0 === t && (t = !1);
                    var n = this.props.data && this.props.data.user && this.props.data.user.login;
                    if (!n) return "#";
                    var i = "/" + n + "/" + e;
                    return t ? Object(S.a)(i) : i
                }, t.prototype.renderTabs = function(e) {
                    var t = this;
                    return e.map(function(e) {
                        var n = e.count ? g.createElement(F.U, {
                                className: "channel-header__item-count",
                                display: F.H.Flex,
                                margin: {
                                    left: .5
                                }
                            }, g.createElement(F._21, {
                                type: F._26.Span,
                                fontSize: F.L.Size5
                            }, e.count)) : null,
                            i = t.generateUserLink(e.pathSuffix, e.isExternal),
                            a = {};
                        return e.isExternal && (a.target = Object(S.b)() ? "_blank" : ""), g.createElement(F.P, {
                            key: "channel-header__item--" + e.label,
                            display: F.H.Flex,
                            alignItems: F.c.Center,
                            flexShrink: 0
                        }, g.createElement(v.a, h.__assign({
                            className: "channel-header__item hide " + (e.isSelected ? "channel-header__item--selected" : "")
                        }, a, {
                            to: i,
                            disabled: "#" === i,
                            "data-target": "channel-header-item",
                            "data-a-target": e.label.toLowerCase() + "-channel-header-item"
                        }), g.createElement(F.U, {
                            padding: {
                                x: 2,
                                y: .5
                            },
                            display: F.H.Flex
                        }, g.createElement(F._21, {
                            type: F._26.Span,
                            fontSize: F.L.Size5
                        }, e.label), n)))
                    })
                }, t.prototype.renderDropdown = function(e) {
                    var t = this;
                    return e.map(function(e) {
                        var n = e.count ? g.createElement(F.U, {
                                className: "channel-header__item-count",
                                display: F.H.Flex,
                                margin: {
                                    left: .5
                                }
                            }, g.createElement(F._21, {
                                type: F._26.Span
                            }, e.count)) : null,
                            i = t.generateUserLink(e.pathSuffix, e.isExternal),
                            a = {};
                        return e.isExternal && (a.targetBlank = !0), g.createElement(F.U, {
                            key: "channel-header__dropdown-item--" + e.label,
                            "data-target": "channel-header-dropdown-item"
                        }, g.createElement(F.S, h.__assign({
                            linkTo: i,
                            disabled: "#" === i
                        }, a), g.createElement(F.U, {
                            className: "channel-header__dropdown-hover-target",
                            padding: {
                                y: .5,
                                x: 1
                            },
                            display: F.H.Flex
                        }, g.createElement(F._21, {
                            type: F._26.Span
                        }, e.label), n)))
                    })
                }, t.prototype.createChannelLinks = function(e, t, n) {
                    return [{
                        label: Object(b.d)("Videos", "ChannelHeader"),
                        count: Object(b.e)(e),
                        pathSuffix: "videos/all",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Videos]
                    }, {
                        label: Object(b.d)("Clips", "ChannelHeader"),
                        pathSuffix: "clips",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Clips]
                    }, {
                        label: Object(b.d)("Collections", "ChannelHeader"),
                        pathSuffix: "collections",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Collections]
                    }, {
                        label: Object(b.d)("Events", "ChannelHeader"),
                        pathSuffix: "events",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Events]
                    }, {
                        label: Object(b.d)("Followers", "ChannelHeader"),
                        count: Object(b.e)(t),
                        pathSuffix: "followers",
                        isExternal: !0,
                        isSelected: ue[this.props.currentPage] === ue[ue.Followers]
                    }, {
                        label: Object(b.d)("Following", "ChannelHeader"),
                        count: Object(b.e)(n),
                        pathSuffix: "following",
                        isExternal: !0,
                        isSelected: ue[this.props.currentPage] === ue[ue.Following]
                    }]
                }, t.prototype.getChannelHeaderSize = function() {
                    if (this.channelHeader) {
                        var e = this.channelHeader.querySelector('[data-target="channel-header-left"]'),
                            t = this.channelHeader.querySelector('[data-target="channel-header-right"]'),
                            n = this.channelHeader.querySelectorAll('[data-target="channel-header-item"]'),
                            i = this.channelHeader.querySelectorAll('[data-target="channel-header-dropdown-item"]');
                        if (n.length) {
                            var a = this.getWidth(this.channelHeader).width,
                                r = this.getWidth(e).width,
                                s = this.getWidth(t).width,
                                o = r + s + 20 - a;
                            if (o > 0)
                                for (var l = n.length - 1; l >= 0; l--) {
                                    var c = n[l];
                                    if (!c.classList.contains("hide")) {
                                        var u = this.getWidth(c);
                                        if (c.classList.add("hide"), i[l].classList.remove("hide"), (o -= u.width) <= 0) break
                                    }
                                } else
                                    for (var l = 0; l < n.length; l++) {
                                        var c = n[l];
                                        if (c.classList.contains("hide")) {
                                            c.classList.remove("hide");
                                            var u = this.getWidth(c);
                                            if (u.width >= Math.abs(o)) {
                                                c.classList.add("hide");
                                                break
                                            }
                                            c.classList.remove("hide"), i[l].classList.add("hide"), o += u.width
                                        }
                                    }
                            var d = this.channelHeader.querySelector('[data-target="channel-header-button"]');
                            if (d) {
                                var p = !this.channelHeader.querySelectorAll('[data-target="channel-header-item"].hide').length;
                                d.classList.toggle("hide", p)
                            }
                        }
                    }
                }, t.prototype.canRenderBitsButton = function() {
                    return this.props.data && !this.props.data.loading && this.props.currentPage !== ue.Clips && this.props.data.currentUser && this.props.data.user && this.props.data.user.cheer
                }, t.prototype.getWidth = function(e) {
                    return e ? {
                        width: e.clientWidth
                    } : {
                        width: 0
                    }
                }, t.prototype.reportInteractive = function() {
                    !this.props.data || this.props.data.loading || this.props.data.error || this.props.latencyTracking.reportInteractive()
                }, t = h.__decorate([Object(C.a)(ce, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(M.c)("ChannelHeader")], t)
            }(g.Component),
            he = me
    },
    904: function(e, t, n) {
        "use strict";

        function i(e) {
            var t = [];
            return e.forEach(function(e) {
                t[e.from] = {
                    startIndex: e.from,
                    endIndex: e.to + 1,
                    data: {
                        images: {
                            themed: !1,
                            sources: {
                                "1x": Object(c.e)(e.emoteID, 1),
                                "2x": Object(c.e)(e.emoteID, 2),
                                "4x": Object(c.e)(e.emoteID, 4)
                            }
                        }
                    }
                }
            }), t
        }

        function a(e, t, n) {
            var a = i(e.body.emotes),
                r = e.badges.reduce(function(e, t) {
                    return e[t.setID] = t.version, e
                }, {});
            return {
                type: l.a.Post,
                id: e.id,
                badges: r,
                bits: e.bitsUsed,
                timestamp: 0,
                deleted: !1,
                user: s.__assign({
                    userID: e.author.id,
                    userLogin: e.author.login,
                    userType: o.a.User,
                    color: e.authorColor
                }, Object(u.a)(e.authorName, e.author.login)),
                messageParts: Object(c.f)(e.body.content, a, e.bitsUsed, t, n, e.authorName)
            }
        }

        function r(e) {
            var t = "ChatMessage:" + e.tags.msg_id;
            return {
                __typename: "ChatMessage",
                "Symbol(id)": t,
                id: e.tags.msg_id,
                authorName: e.tags.display_name,
                authorColor: e.tags.color,
                author: {
                    __typename: "User",
                    "Symbol(id)": "User:" + e.user_id,
                    id: e.user_id,
                    login: e.username
                },
                body: {
                    __typename: "MessageBody",
                    "Symbol(id)": "$" + t + ".body",
                    content: e.message,
                    emotes: e.tags.emotes.map(function(e, n) {
                        return {
                            __typename: "EmbeddedEmote",
                            "Symbol(id)": t + ".body.emotes." + n,
                            emoteID: e.id.toString(),
                            from: e.start,
                            to: e.end,
                            setID: e.set
                        }
                    })
                },
                badges: e.tags.badges.map(function(e, n) {
                    return {
                        __typename: "Badge",
                        "Symbol(id)": t + ".badges." + n,
                        setID: e.badge_set_id,
                        version: e.badge_set_version
                    }
                }),
                bitsUsed: e.bits_used
            }
        }
        t.b = i, t.a = a, t.c = r;
        var s = n(0),
            o = n(826),
            l = n(814),
            c = n(131),
            u = n(383)
    },
    905: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "embeddedEmote"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "EmbeddedEmote"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "emoteID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "setID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "from"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "to"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 74
            }
        };
        n.loc.source = {
            body: "fragment embeddedEmote on EmbeddedEmote {\n  emoteID\n  setID\n  from\n  to\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    906: function(e, t, n) {
        "use strict";

        function i(e, t) {
            var n = this;
            return function(i) {
                return s.__awaiter(n, void 0, void 0, function() {
                    var n, a;
                    return s.__generator(this, function(s) {
                        return n = new Set(r()), t ? n.add(e) : n.delete(e), a = Array.from(n), o.k.set(u, a), i(Object(c.b)(a)), [2]
                    })
                })
            }
        }

        function a() {
            var e = this;
            return function(t) {
                return s.__awaiter(e, void 0, void 0, function() {
                    return s.__generator(this, function(e) {
                        return o.k.set(u, []), t(Object(c.b)([])), [2]
                    })
                })
            }
        }

        function r() {
            return o.k.get(u, []).filter(function(e) {
                return l.a.has(e)
            })
        }
        t.c = i, t.a = a, t.b = r;
        var s = n(0),
            o = n(2),
            l = n(869),
            c = n(907),
            u = "languageDirectoryFilters"
    },
    907: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                type: a,
                languagePreferences: e
            }
        }
        n.d(t, "a", function() {
            return a
        }), t.b = i;
        var a = "core.user-preferences.LANGUAGE_PREFERENCES_UPDATED"
    },
    908: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return l
        }), n.d(t, "b", function() {
            return c
        }), n.d(t, "c", function() {
            return d
        });
        var i, a = n(2),
            r = n(848),
            s = n(13),
            o = (i = {}, i[r.b.Twitter] = "twitter", i[r.b.Reddit] = "reddit", i[r.b.VKontakte] = "vkontakte", i[r.b.Facebook] = "facebook", i[r.b.Copy] = "link", i[r.b.CopyInput] = "option_link", i),
            l = {
                MyClips: "MyClips",
                ClipsOfMyChannel: "ClipsOfMyChannel"
            },
            c = {
                Game: "TopClipsGame",
                Channel: "TopClipsChannel"
            },
            u = {
                MyClips: s.PageviewLocation.MyClipsManager,
                ClipsOfMyChannel: s.PageviewLocation.ChannelClipsManager,
                TopClipsGame: s.PageviewLocation.ClipsGame,
                TopClipsChannel: s.PageviewLocation.ChannelClips
            },
            d = function(e, t) {
                return function(n) {
                    a.n.tracking.track(s.SpadeEventType.VideoShare, {
                        vod_id: e.id,
                        vod_type: "clip",
                        share_platform: o[n],
                        location: u[t],
                        game: e.game ? e.game.name : null,
                        channel_id: Number(e.broadcaster.id),
                        channel: e.broadcaster.login,
                        live: null
                    })
                }
            }
    },
    910: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                sideNavCollapsed: !e.ui.sideNavExpanded,
                rightColumnCollapsed: !e.ui.rightColumnExpanded
            }
        }
        var a = n(6),
            r = n(0),
            s = n(11),
            o = n(1),
            l = n(381),
            c = n(143),
            u = n(144),
            d = n(396),
            p = n(449),
            m = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.resizeAnimationFrame = 0, t.collapseOnBreakpoint = function() {
                        var e = window.innerWidth,
                            n = {
                                sideNavCollapsedFromCSS: e < u.d,
                                rightColumnCollapsedFromCSS: e < c.b
                            };
                        t.state.sideNavCollapsedFromCSS === n.sideNavCollapsedFromCSS && t.state.rightColumnCollapsedFromCSS === n.rightColumnCollapsedFromCSS || t.setState(n), t.resizeAnimationFrame = 0
                    }, t.handleWindowResize = function() {
                        t.resizeAnimationFrame || (t.resizeAnimationFrame = requestAnimationFrame(t.collapseOnBreakpoint))
                    }, t.onInnerChildrenResize = function(e, n) {
                        t.context.setRootScrollableOffsetHeight(n / 10 + "rem")
                    }, t
                }
                return r.__extends(t, e), t.prototype.componentDidMount = function() {
                    window.addEventListener("resize", this.handleWindowResize)
                }, t.prototype.componentWillUnmount = function() {
                    window.removeEventListener("resize", this.handleWindowResize), this.context.resetRootScrollableOffsetHeight(), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame)
                }, t.prototype.render = function() {
                    var e = document.querySelector("." + p.b),
                        t = 0,
                        n = 0;
                    e ? (t = e.getBoundingClientRect().left, n = window.innerWidth - e.getBoundingClientRect().right) : n = window.innerWidth;
                    var i = {
                        position: "fixed",
                        top: d.a,
                        left: t,
                        right: n,
                        zIndex: 500
                    };
                    return o.createElement("div", {
                        style: i
                    }, o.createElement(l.a, {
                        onResize: this.onInnerChildrenResize
                    }), this.props.children)
                }, t.contextTypes = {
                    setRootScrollableOffsetHeight: s.func,
                    resetRootScrollableOffsetHeight: s.func
                }, t
            }(o.Component),
            h = Object(a.a)(i)(m);
        n.d(t, "a", function() {
            return h
        })
    },
    914: function(e, t) {},
    915: function(e, t, n) {
        function i(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })
        }
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "GetBitsButton_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isLoggedIn"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "withChannel"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsOffers"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "skip"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "bitsOffersFragment"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "idSHA1"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsOffers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "bitsOffersFragment"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "withChannel"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                directives: []
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 803
            }
        };
        a.loc.source = {
            body: '# Documentation about how to use GraphQL is located in the Data Access Guide:\n# https://git-aws.internal.justin.tv/pages/twilight/twilight-docs/docs/guides/data-access.html\n# Additionally, use the GraphQL explorer (https://api.twitch.tv/gql/explore) to browse\n# available GraphQL data and construct your query.\n#import "twilight/features/bits/models/bits-offers-fragment.gql"\n#import "twilight/features/chat/models/cheer-fragment.gql"\n\nquery GetBitsButton_Bits($isLoggedIn: Boolean!, $withChannel: Boolean!, $login: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffersFragment\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffersFragment\n    }\n  }\n  user(login: $login) @include(if: $withChannel) {\n    id\n    ...cheer\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var r = {};
        a.definitions = a.definitions.concat(i(n(841).definitions)), a.definitions = a.definitions.concat(i(n(842).definitions)), e.exports = a
    },
    916: function(e, t) {},
    917: function(e, t) {},
    918: function(e, t) {},
    919: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "UserProfileEditor"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 121
            }
        };
        n.loc.source = {
            body: "query UserProfileEditor($login: String!) {\n  user(login: $login) {\n    id\n    login\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    920: function(e, t) {},
    921: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChannelPage_ChannelHeader"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPartner"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "stream"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "videos"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "followers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "follows"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 423
            }
        };
        n.loc.source = {
            body: "query ChannelPage_ChannelHeader($login: String!) {\n  user(login: $login) {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n    roles {\n      isPartner\n    }\n    stream {\n      id\n    }\n    videos {\n      totalCount\n    }\n    followers {\n      totalCount\n    }\n    follows {\n      totalCount\n    }\n    cheer {\n      id\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isStaff\n      isSiteAdmin\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    925: function(e, t, n) {
        "use strict";

        function i() {
            return {
                languagePreferences: Object(c.b)()
            }
        }

        function a(e, t) {
            switch (void 0 === e && (e = i()), t.type) {
                case l.a:
                    return s.__assign({}, e, {
                        languagePreferences: t.languagePreferences
                    });
                default:
                    return e
            }
        }

        function r(e) {
            return e.userPreferences.languagePreferences
        }
        t.a = r;
        var s = n(0),
            o = n(2),
            l = n(907),
            c = n(906);
        o.n.store.registerReducer("userPreferences", a)
    },
    928: function(e, t, n) {
        "use strict";

        function i() {
            var e = Object(De.a)();
            return Se.__assign({}, e, {
                commandHandlers: {},
                emoteSets: [],
                followerDuration: Oe.a,
                followerMode: !1,
                isHidden: !1,
                messages: {},
                slowMode: !1,
                subsOnlyMode: !1
            })
        }

        function a(e, t) {
            switch (void 0 === e && (e = i()), t.type) {
                case Ne.b:
                    return Se.__assign({}, e, {
                        isHidden: !0
                    });
                case Ne.c:
                    return Se.__assign({}, e, {
                        emoteSets: [],
                        messages: {}
                    });
                case Ne.d:
                    return Se.__assign({}, e, {
                        isHidden: !1
                    });
                case Ne.e:
                    return Se.__assign({}, e, {
                        emoteSets: t.emoteSets
                    });
                case Ne.f:
                    return Se.__assign({}, e, {
                        followerMode: !1
                    });
                case Ne.g:
                    return Se.__assign({}, e, {
                        followerDuration: t.duration
                    });
                case Ne.h:
                    return Se.__assign({}, e, {
                        lastUsedFollowerDurations: Se.__assign({}, e.lastUsedFollowerDurations, (n = {}, n[t.channelLogin] = t.duration, n))
                    });
                case Ne.i:
                    return Se.__assign({}, e, {
                        followerMode: !0
                    });
                case Ne.j:
                    return Ee(e, function(e) {
                        return e.messages
                    }, function(e) {
                        return e[t.channel] = t.messages, e
                    });
                case Ne.k:
                    return Se.__assign({}, e, {
                        showModIcons: !1
                    });
                case Ne.l:
                    return Se.__assign({}, e, {
                        showModIcons: !0
                    });
                case Ne.n:
                    return Se.__assign({}, e, {
                        slowMode: !1
                    });
                case Ne.o:
                    return Se.__assign({}, e, {
                        slowMode: !0
                    });
                case Ne.p:
                    return Se.__assign({}, e, {
                        subsOnlyMode: !1
                    });
                case Ne.q:
                    return Se.__assign({}, e, {
                        subsOnlyMode: !0
                    });
                case Ne.r:
                    return Se.__assign({}, e, {
                        showTimestamps: !1
                    });
                case Ne.s:
                    return Se.__assign({}, e, {
                        showTimestamps: !0
                    });
                case Ne.a:
                    return Ee(e, function(e) {
                        return e.commandHandlers
                    }, function(e) {
                        return e[t.command] = t.handler, e
                    });
                case Ne.m:
                    return Ee(e, function(e) {
                        return e.commandHandlers
                    }, function(e) {
                        return delete e[t.command], e
                    });
                default:
                    return e
            }
            var n
        }

        function r(e, t) {
            return e.chat && e.chat.messages ? e.chat.messages[t] || [] : []
        }

        function s() {
            return {
                viewerCardOptions: null
            }
        }

        function o(e, t) {
            switch (void 0 === e && (e = s()), t.type) {
                case Ue.a:
                    return Se.__assign({}, e, {
                        viewerCardOptions: null
                    });
                case Ue.b:
                    return t.viewerCardOptions ? Se.__assign({}, e, {
                        viewerCardOptions: Se.__assign({}, t.viewerCardOptions)
                    }) : e;
                default:
                    return e
            }
        }

        function l(e) {
            return {
                currentUserID: e.session.user && "" + e.session.user.id || ""
            }
        }

        function c(e, t, n, i) {
            return Se.__awaiter(this, void 0, void 0, function() {
                var a, r, s, o, l;
                return Se.__generator(this, function(c) {
                    switch (c.label) {
                        case 0:
                            a = "https://api.twitch.tv/api/channels/" + e + "/use_chat_notification_token", r = 1, c.label = 1;
                        case 1:
                            if (!(r <= st)) return [3, 7];
                            c.label = 2;
                        case 2:
                            return c.trys.push([2, 5, , 6]), [4, fetch(a, {
                                body: JSON.stringify({
                                    token_id: t,
                                    custom_message: n
                                }),
                                method: "POST",
                                headers: {
                                    "Client-ID": we.n.config.legacyClientID,
                                    Accept: "application/json; charset=UTF-8",
                                    "content-type": "application/json; charset=UTF-8",
                                    Authorization: "OAuth " + i
                                }
                            })];
                        case 3:
                            return s = c.sent(), [4, s.json()];
                        case 4:
                            return o = c.sent(), [2, o];
                        case 5:
                            if (l = c.sent(), r === st) throw l;
                            return [3, 6];
                        case 6:
                            return ++r, [3, 1];
                        case 7:
                            return [2]
                    }
                })
            })
        }

        function u() {
            return [{
                text: Object(we.d)("Select One...", "BlockUser"),
                canonical: yt
            }, {
                text: Object(we.d)("Harassment", "BlockUser"),
                canonical: bt.b.Harassment
            }, {
                text: Object(we.d)("Spam", "BlockUser"),
                canonical: bt.b.Spam
            }, {
                text: Object(we.d)("Other", "BlockUser"),
                canonical: bt.b.Other
            }]
        }

        function d(e) {
            return Object(Ae.bindActionCreators)({
                closeModal: ft.c
            }, e)
        }

        function p(e) {
            return Object(Ae.bindActionCreators)({
                addCommand: Ne.t,
                removeCommand: Ne.J
            }, e)
        }

        function m(e) {
            return Se.__awaiter(this, void 0, void 0, function() {
                var t, n;
                return Se.__generator(this, function(i) {
                    switch (i.label) {
                        case 0:
                            t = null, i.label = 1;
                        case 1:
                            return i.trys.push([1, 3, , 4]), [4, we.n.apollo.client.query({
                                query: It,
                                variables: {
                                    login: e
                                }
                            })];
                        case 2:
                            return t = i.sent(), [3, 4];
                        case 3:
                            return n = i.sent(), we.i.warn(n, "Failed to fetch user targeted by chat command.", {
                                userLogin: e
                            }), [3, 4];
                        case 4:
                            return t && t.data.user.id ? [2, t.data.user.id] : [2, null]
                    }
                })
            })
        }

        function h(e) {
            return Object(Ae.bindActionCreators)({
                showBlockUser: function(e) {
                    var t = Se.__rest(e, []);
                    return Object(ft.d)(Nt, t)
                }
            }, e)
        }

        function f(e) {
            return {
                firstPageLoaded: e.session.firstPageLoaded,
                isLoggedIn: Object(Fe.d)(e)
            }
        }

        function g() {
            return Math.round(Math.random() * zt * 2 - zt)
        }

        function v(e, t) {
            var n = {
                headers: {
                    "Client-ID": we.n.config.legacyClientID,
                    Authorization: "OAuth " + t,
                    Accept: "application/vnd.twitchtv.v5+json"
                },
                method: "POST"
            };
            return fetch(Kt + "/raids/" + e + "/join", n)
        }

        function b(e, t) {
            var n = {
                headers: {
                    "Client-ID": we.n.config.legacyClientID,
                    Authorization: "OAuth " + t,
                    Accept: "application/vnd.twitchtv.v5+json"
                },
                method: "POST"
            };
            return fetch(Kt + "/raids/" + e + "/leave", n)
        }

        function k(e) {
            C(Zt.SpadeEventType.RaidPromptJoin, e)
        }

        function y(e) {
            C(Zt.SpadeEventType.RaidPromptLeave, e)
        }

        function _(e) {
            C(Zt.SpadeEventType.RaidPromptImpression, e)
        }

        function C(e, t) {
            var n = {
                raid_creator_id: Number(t.creatorID),
                raid_source_id: Number(t.sourceChannelID),
                raid_target_id: Number(t.targetChannelID),
                raid_id: t.id
            };
            we.m.track(e, n)
        }

        function S(e) {
            if (e.data.loading || e.data.error) return je.createElement("div", null);
            var t = e.component,
                n = Se.__rest(e, ["component"]);
            return je.createElement(t, Se.__assign({}, n))
        }

        function E(e, t) {
            var n;
            if (N(e.pathname)) n = "/" + t;
            else {
                if (!w(e.pathname)) return "";
                n = "/" + t + "/chat"
            }
            var i = Se.__assign({}, hn.parse(e.search), {
                referrer: "raid"
            });
            return n + "?" + hn.stringify(i)
        }

        function w(e) {
            return /^\/.+\/chat$/.test(e)
        }

        function N(e) {
            return !e.split("/")[2]
        }

        function O(e) {
            return {
                authToken: Object(Fe.a)(e)
            }
        }

        function D(e) {
            return Object(Ae.bindActionCreators)({
                login: function() {
                    return Object(Ht.f)(Pt.a.RaidJoin)
                }
            }, e)
        }

        function U(e) {
            return Object(Ae.bindActionCreators)({
                openThread: function(e) {
                    return Object(yn.l)({
                        threadID: e,
                        collapsed: !0
                    }, Object(_n.a)())
                }
            }, e)
        }

        function I() {
            return {
                type: Nn.a.Clear,
                id: Object(Rn.a)("clear")
            }
        }

        function x(e, t) {
            return {
                type: Nn.a.BadgesUpdated,
                id: Object(Rn.a)("updateBadges"),
                userName: e,
                badges: t
            }
        }

        function T(e, t, n, i, a, r, s) {
            return void 0 === s && (s = !1), Se.__assign({}, Object(Bn.a)(t, n, i, a, r, s), {
                type: e,
                id: n.id || Object(Rn.a)(n.username)
            })
        }

        function F(e, t, n) {
            return {
                type: Nn.a.Notice,
                id: Object(Rn.a)("notice"),
                channel: e,
                msgid: t,
                message: n
            }
        }

        function j(e, t, n, i) {
            return {
                bitsConfig: i,
                message: t,
                purchase: e,
                timestamp: n,
                id: Object(Rn.a)(t.user.userLogin + "-purchase"),
                type: Nn.a.Purchase
            }
        }

        function L(e, t, n) {
            return {
                type: Nn.a.Raid,
                id: Object(Rn.a)("raid"),
                channel: e,
                userLogin: t,
                params: n
            }
        }

        function R(e, t, n) {
            return {
                type: Nn.a.Unraid,
                id: Object(Rn.a)("unraid"),
                channel: e,
                userLogin: t,
                message: n
            }
        }

        function A() {
            return {
                type: Nn.a.Connected,
                id: Object(Rn.a)("connected")
            }
        }

        function M(e) {
            return {
                type: Nn.a.Disconnected,
                id: Object(Rn.a)("disconnected"),
                reason: e
            }
        }

        function B() {
            return {
                type: Nn.a.Reconnect,
                id: Object(Rn.a)("reconnect")
            }
        }

        function P(e) {
            return {
                type: Nn.a.Hosting,
                id: Object(Rn.a)("hosting"),
                hostedChannel: e
            }
        }

        function H(e) {
            return {
                type: Nn.a.Unhost,
                id: Object(Rn.a)("unhost-" + e)
            }
        }

        function V(e) {
            return {
                type: Nn.a.RoomMods,
                id: Object(Rn.a)("roommods"),
                moderatorLogins: e
            }
        }

        function W(e) {
            return {
                type: Nn.a.RoomState,
                id: Object(Rn.a)("roomstate"),
                state: e
            }
        }

        function q(e, t) {
            return {
                type: Nn.a.SlowMode,
                id: Object(Rn.a)("slowmode"),
                enabled: e,
                length: t
            }
        }

        function z(e) {
            return {
                type: Nn.a.EmoteOnlyMode,
                id: Object(Rn.a)("emoteonlymode"),
                enabled: e
            }
        }

        function G(e, t) {
            return {
                type: Nn.a.FollowerOnlyMode,
                id: Object(Rn.a)("follower-only"),
                enabled: e,
                length: t
            }
        }

        function $(e) {
            return {
                type: Nn.a.SubscriberOnlyMode,
                id: Object(Rn.a)("subscriber-only"),
                enabled: e
            }
        }

        function J(e, t, n, i) {
            return {
                type: Nn.a.Subscription,
                id: Object(Rn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                userLogin: t,
                tier: i
            }
        }

        function K(e, t, n, i, a) {
            return {
                type: Nn.a.SubGift,
                id: Object(Rn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                userLogin: t,
                tier: i,
                recipient: a
            }
        }

        function Q(e) {
            return {
                user: {
                    userDisplayName: e,
                    userLogin: e,
                    userID: null,
                    userType: An.a.User,
                    color: void 0,
                    isIntl: !1
                }
            }
        }

        function Y(e, t, n, i, a, r, s, o) {
            var l = r && s ? Object(Bn.a)(r, s, He.a, !1, o) : Q(t);
            return Se.__assign({}, l, {
                type: Nn.a.Resubscription,
                id: Object(Rn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                months: i,
                tier: a
            })
        }

        function X(e) {
            return e + "-automod-rejected"
        }

        function Z(e, t, n, i) {
            var a = {
                    badges: null,
                    bits: 0,
                    color: "",
                    displayName: "",
                    id: "",
                    userID: n,
                    username: n,
                    userType: An.a.User,
                    emotes: null
                },
                r = Object(Bn.a)(t, a, He.a, !1);
            return {
                type: Nn.a.AutoModRejectedPrompt,
                id: X(e),
                category: i,
                isAutoModAction: !0,
                rejectedMessage: Se.__assign({}, r, {
                    type: Nn.a.Post,
                    id: e
                })
            }
        }

        function ee() {
            return {
                id: Object(Rn.a)("automod-message-rejected"),
                type: Nn.a.AutoModMessageRejected,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function te() {
            return {
                id: Object(Rn.a)("automod-message-allowed"),
                type: Nn.a.AutoModMessageAllowed,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function ne() {
            return {
                id: Object(Rn.a)("automod-message-denied"),
                type: Nn.a.AutoModMessageDenied,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function ie(e, t) {
            we.m.track(e, Se.__assign({
                time: Date.now()
            }, t))
        }

        function ae(e) {
            return Object(we.d)("{bannedUserLogin} is no longer banned from this room.", {
                bannedUserLogin: e
            }, "UnbanUserMutation")
        }

        function re() {
            return Object(we.d)("Unable to unban user", "UnbanUserMutation")
        }

        function se(e) {
            return Object(Ae.bindActionCreators)({
                onUsernameClick: Ue.d
            }, e)
        }

        function oe(e) {
            var t;
            switch (e) {
                case "aggressive":
                    t = Object(we.d)("aggressive", "AutoModLine");
                    break;
                case "sexual":
                    t = Object(we.d)("sexual", "AutoModLine");
                    break;
                case "profanity":
                    t = Object(we.d)("profanity", "AutoModLine");
                    break;
                case "identity":
                    t = Object(we.d)("identity", "AutoModLine");
                    break;
                default:
                    return Object(we.d)("Message is being held for review. Allow will post it to chat.", "AutoModLine")
            }
            return Object(we.d)("Held a message for reason: {category}. Allow will post it to chat.", {
                category: t
            }, "AutoModLine")
        }

        function le() {
            return {
                raid_error_self: Object(we.d)("You cannot raid your own channel.", "RaidErrorSelfMessage"),
                raid_error_forbidden: Object(we.d)("You cannot raid this channel.", "RaidErrorAlreadyRaidingMessage"),
                raid_error_already_raiding: Object(we.d)("You already have a raid in progress.", "RaidErrorForbiddenMessage"),
                raid_error_unexpected: Object(we.d)("There was a problem starting the raid. Please try again in a minute.", "RaidErrorUnexpectedMessage"),
                unraid_error_unexpected: Object(we.d)("There was a problem stopping the raid. Please try again in a minute.", "UnraidErrorUnexpectedMessage"),
                unraid_error_no_active_raid: Object(we.d)("You do not have an active raid.", "UnraidErrorNoActiveRaidMessage"),
                raid_notice_restricted_chat: Object(we.d)("This channel has follower or subscriber only chat.", "RaidNoticeRestrictedChatMessage"),
                raid_notice_mature: Object(we.d)("This channel is intended for mature audiences.", "RaidNoticeMatureMessage"),
                raid_notice_owner: Object(we.d)("This channel has started a raid, type {unraidCommand} if you want to cancel.", {
                    unraidCommand: "/unraid"
                }, "RaidNoticeOwnerMessage")
            }
        }

        function ce(e) {
            return e.msgid in le()
        }

        function ue(e) {
            return e.type === Nn.a.Post || e.type === Nn.a.PostWithMention || e.type === Nn.a.Action
        }

        function de(e) {
            return {
                darkModeEnabled: Object(Pe.a)(e) === Me.a.Dark
            }
        }

        function pe(e) {
            return {
                isSubsOnlyModeEnabled: e.chat.subsOnlyMode,
                sessionUser: Object(Fe.c)(e)
            }
        }

        function me(e) {
            return Object(Ae.bindActionCreators)({
                login: function() {
                    return Object(Ht.f)(Pt.a.Chat)
                }
            }, e)
        }

        function he(e, t) {
            return {
                messages: r(e, t.channelLogin),
                showModerationIcons: e.chat.showModIcons,
                showTimestamps: e.chat.showTimestamps
            }
        }

        function fe(e) {
            return Se.__awaiter(this, void 0, void 0, function() {
                var t, n, i, a, r;
                return Se.__generator(this, function(s) {
                    switch (s.label) {
                        case 0:
                            t = "https://tmi.twitch.tv/group/user/" + e.toLowerCase() + "/chatters", n = 1, s.label = 1;
                        case 1:
                            if (!(n <= ur)) return [3, 7];
                            s.label = 2;
                        case 2:
                            return s.trys.push([2, 5, , 6]), [4, fetch(t, {
                                method: "GET",
                                headers: {
                                    Accept: "application/json; charset=UTF-8",
                                    "content-type": "application/json; charset=UTF-8"
                                }
                            })];
                        case 3:
                            return i = s.sent(), [4, i.json()];
                        case 4:
                            return a = s.sent(), we.i.debug("[update] getViewers done."), [2, a];
                        case 5:
                            if (r = s.sent(), n === ur) throw r;
                            return [3, 6];
                        case 6:
                            return ++n, [3, 1];
                        case 7:
                            return [2]
                    }
                })
            })
        }

        function ge(e, t) {
            if (!t) return e;
            var n = Object.assign({}, e);
            return Object.keys(n).forEach(function(e) {
                var i = n[e];
                Array.isArray(i) && (n[e] = i.filter(function(e) {
                    return -1 !== e.toLowerCase().indexOf(t)
                }))
            }), n
        }

        function ve(e) {
            return Object(Ae.bindActionCreators)({
                onShowViewerCard: Ue.d
            }, e)
        }

        function be(e) {
            return {
                viewerCardOptions: e.viewerCard.viewerCardOptions
            }
        }

        function ke(e) {
            return Object(Ae.bindActionCreators)({
                hideViewerCard: Ue.c,
                showReportUserModal: function(e) {
                    var t = Se.__rest(e, []);
                    return Object(ft.d)(fr.a, t)
                }
            }, e)
        }

        function ye(e, t) {
            return Object(Ae.bindActionCreators)({
                onChatMessagesReset: function() {
                    return Ne.w()
                },
                onChatMessagesUpdate: function(e) {
                    return Ne.I(t.channelLogin, e)
                },
                onChatUnhide: function() {
                    return Ne.K()
                },
                onFollowerModeDisable: function() {
                    return Ne.x()
                },
                onFollowerModeDurationChange: function(e) {
                    return Ne.u(e)
                },
                onFollowerModeEnable: function() {
                    return Ne.C()
                },
                onSlowModeDisable: function() {
                    return Ne.z()
                },
                onSlowModeEnable: function() {
                    return Ne.E()
                },
                onSubsOnlyModeDisable: function() {
                    return Ne.A()
                },
                onSubsOnlyModeEnable: function() {
                    return Ne.F()
                },
                onThemeChange: function(e) {
                    return Object(Be.b)(e, Be.a.TypedCommand)
                }
            }, e)
        }

        function _e(e) {
            return {
                emoteSets: e.chat.emoteSets,
                firstPageLoaded: e.session.firstPageLoaded,
                isHidden: e.chat.isHidden,
                rightColumnExpanded: e.ui.rightColumnExpanded,
                theme: Object(Pe.a)(e)
            }
        }

        function Ce(e) {
            return {
                user: Object(Fe.c)(e)
            }
        }
        var Se = n(0),
            Ee = n(139),
            we = n(2),
            Ne = n(378),
            Oe = n(838),
            De = n(851);
        we.n.store.registerReducer("chat", a);
        var Ue = n(825);
        we.n.store.registerReducer("viewerCard", o);
        var Ie, xe, Te = n(6),
            Fe = n(17),
            je = n(1),
            Le = n(7),
            Re = n(32),
            Ae = n(9),
            Me = n(31),
            Be = n(132),
            Pe = n(51),
            He = n(374),
            Ve = n(839),
            We = n(4),
            qe = n(87),
            ze = n(38),
            Ge = n(20),
            $e = n(30),
            Je = n(831),
            Ke = n(3),
            Qe = (n(929), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        formInputValue: "",
                        sharing: !1
                    }, t.hasUnmounted = !1, t.handleShareClick = function() {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            return Se.__generator(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        this.setState({
                                            sharing: !0
                                        }), e.label = 1;
                                    case 1:
                                        return e.trys.push([1, , 3, 4]), [4, this.props.onShare(this.state.formInputValue)];
                                    case 2:
                                        return e.sent(), [3, 4];
                                    case 3:
                                        return this.hasUnmounted || this.setState({
                                            sharing: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.onInputChange = function(e) {
                        t.setState({
                            formInputValue: e.currentTarget.value
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.hasUnmounted = !1
                }, t.prototype.componentWillUnmount = function() {
                    this.hasUnmounted = !0
                }, t.prototype.render = function() {
                    var e = We("share-input", {
                            "share-input--hidden": this.props.hide
                        }),
                        t = this.state.formInputValue.length > 255,
                        n = t ? "-" + (this.state.formInputValue.length - 255) : Object(we.d)("Share", "ChatResubNotification"),
                        i = Object(we.d)("Close", "ChatResubNotification"),
                        a = Object(we.d)("Add a message to the streamer", "ChatResubNotification"),
                        r = this.state.sharing ? Ke.y.Loading : Ke.y.Default;
                    return je.createElement(Ke.U, {
                        className: e,
                        padding: 1,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Ke._2.Absolute
                    }, je.createElement(Ke._17, {
                        className: "share-input__container",
                        position: Ke._2.Relative,
                        border: !0,
                        background: Ke.m.Base,
                        padding: 1
                    }, je.createElement(Ke.U, {
                        position: Ke._2.Absolute,
                        attachTop: !0,
                        attachRight: !0
                    }, je.createElement(Ke.v, {
                        ariaLabel: i,
                        onClick: this.props.onClose,
                        type: Ke.w.Secondary,
                        icon: Ke._9.Close,
                        "data-a-target": "resub-notification-close-form-btn",
                        "data-test-selector": "share-input__close-form-btn"
                    })), je.createElement(Ke.U, {
                        textAlign: Ke._22.Center,
                        padding: {
                            top: 1,
                            bottom: 2
                        }
                    }, this.props.children), je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement(Ke.U, {
                        fullWidth: !0
                    }, je.createElement(Ke.Q, {
                        autoFocus: !0,
                        type: Ke.R.Text,
                        value: this.state.formInputValue,
                        onChange: this.onInputChange,
                        placeholder: a,
                        "data-a-target": "resub-notification-share-message-input",
                        "data-test-selector": "share-input__share-message-input"
                    })), je.createElement(Ke.u, {
                        disabled: t,
                        onClick: this.handleShareClick,
                        "data-a-target": "resub-notification-send-msg-btn",
                        "data-test-selector": "share-input__send-msg-btn",
                        state: r
                    }, n))))
                }, t
            }(je.Component)),
            Ye = (n(930), function(e) {
                var t = Object(we.d)("Share", "Chat--SharePrompt"),
                    n = Object(we.d)("Close", "Chat--SharePrompt"),
                    i = We("chat-share-prompt", {
                        "chat-share-prompt--hidden": e.hide || !e.children
                    });
                return je.createElement(Ke.U, {
                    position: Ke._2.Absolute,
                    fullWidth: !0,
                    className: i,
                    padding: {
                        y: .5,
                        left: .5
                    }
                }, je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    padding: 1,
                    justifyContent: Ke.T.Between,
                    alignItems: Ke.c.Center,
                    flexWrap: Ke.K.NoWrap
                }, je.createElement(Ke._21, {
                    "data-a-target": "resub-notification-months-subbed-text",
                    "data-test-selector": "share-prompt__text"
                }, e.children), je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexWrap: Ke.K.NoWrap,
                    alignItems: Ke.c.Center,
                    flexShrink: 0,
                    padding: {
                        left: .5
                    }
                }, je.createElement(Ke.U, {
                    display: Ke.H.Inline,
                    padding: {
                        right: .5
                    },
                    flexShrink: 0
                }, je.createElement(Ke.u, {
                    onClick: e.onClickShare,
                    size: Ke.x.Small,
                    "data-a-target": "resub-notification-share-notification-btn",
                    "data-test-selector": "share-prompt__share-btn"
                }, t)), je.createElement(Ke.U, {
                    flexShrink: 0
                }, je.createElement(Ke.v, {
                    ariaLabel: n,
                    onClick: e.onClickClose,
                    type: Ke.w.Secondary,
                    icon: Ke._9.Close,
                    "data-a-target": "resub-notification-close-notification-btn",
                    "data-test-selector": "share-prompt__close-btn"
                })))))
            }),
            Xe = n(88),
            Ze = n(931),
            et = n(932),
            tt = n(933),
            nt = (n(934), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        showMessageInput: !1,
                        sendingMessage: !1
                    }, t.dataIsReady = function(e) {
                        return e.data && !e.data.loading && !e.data.error
                    }, t.purchaseTokensExist = function(e) {
                        return e.data.user.self && e.data.user.self.purchaseTokens.length > 0
                    }, t.manageParentSpace = function(e) {
                        if (!t.dataIsReady(e) || !t.purchaseTokensExist(e)) return void t.props.dismissSpace();
                        t.props.requestSpace()
                    }, t.toggleContentShown = function() {
                        t.setState(function(e) {
                            return {
                                showMessageInput: !e.showMessageInput
                            }
                        })
                    }, t.dismissPurchaseToken = function() {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var e, t;
                            return Se.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.purchaseTokens) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), n.label = 1;
                                    case 1:
                                        return n.trys.push([1, , 3, 4]), e = this.props.data.user.self.purchaseTokens[0].id, t = function(e) {
                                            return e.user.self && (e.user.self.purchaseTokens = e.user.self.purchaseTokens.slice(1)), e
                                        }, Object(Ge.d)(et, {
                                            channelLogin: this.props.channelLogin
                                        }, t), [4, this.props.dismissPurchaseToken(Object(Ge.a)({
                                            token: e,
                                            channelID: this.props.data.user.id
                                        }))];
                                    case 2:
                                        return n.sent(), [3, 4];
                                    case 3:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.sharePurchase = function(e) {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var t;
                            return Se.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.purchaseTokens) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), n.label = 1;
                                    case 1:
                                        return n.trys.push([1, , 3, 4]), [4, this.props.sharePurchaseTokenInChat(Object(Ge.a)({
                                            token: this.props.data.user.self.purchaseTokens[0].id,
                                            channelID: this.props.data.user.id,
                                            message: e
                                        }))];
                                    case 2:
                                        return n.sent(), t = function(e) {
                                            return e.user.self && (e.user.self.purchaseTokens = e.user.self.purchaseTokens.slice(1)), e
                                        }, Object(Ge.d)(et, {
                                            channelLogin: this.props.channelLogin
                                        }, t), [3, 4];
                                    case 3:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.manageParentSpace(this.props)
                }, t.prototype.componentDidUpdate = function() {
                    this.manageParentSpace(this.props)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    if (this.dataIsReady(e)) {
                        var t = e.pubsub.messages.userCommerceUpdateEvent,
                            n = this.props.pubsub.messages.userCommerceUpdateEvent,
                            i = !n && t,
                            a = n && t && n.time !== t.time;
                        (i || a) && this.props.data && this.props.data.refetch()
                    }
                }, t.prototype.render = function() {
                    return this.dataIsReady(this.props) && this.purchaseTokensExist(this.props) && this.props.data.user.self ? this.renderPurchaseToken(this.props.data.user.self.purchaseTokens[0]) : null
                }, t.prototype.renderPurchaseToken = function(e) {
                    var t;
                    t = this.props.data.user.isCommerceRevShareEnabled ? Object(we.d)("You bought {product} and supported {channelName}!", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat") : Object(we.d)("You bought {product} while watching {channelName}!", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat");
                    var n, i = e.inGameContents.map(this.renderLootInGameContent),
                        a = e.badges.map(this.renderLootBadge),
                        r = e.emoteSets.map(this.renderLootEmoteSet),
                        s = e.bits.map(this.renderLootBits, this);
                    return (i.length || a.length || r.length || s.length) && (n = je.createElement(Ke.U, {
                        "data-test-selector": "share-purchase__loot",
                        padding: {
                            bottom: 1
                        },
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center
                    }, i, a, r, s), t = Object(we.d)("You bought {product} and opened a Twitch Crate! Let {channelName} know you shared the love.", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat")), je.createElement(Ke.U, {
                        className: "chat-resub-notification",
                        padding: 0,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Ke._2.Absolute
                    }, je.createElement(Ye, {
                        hide: this.state.showMessageInput,
                        onClickShare: this.toggleContentShown,
                        onClickClose: this.dismissPurchaseToken
                    }, t), je.createElement(Qe, {
                        hide: !this.state.showMessageInput,
                        onShare: this.sharePurchase,
                        onClose: this.toggleContentShown
                    }, je.createElement(Ke.U, {
                        padding: {
                            bottom: 1
                        }
                    }, je.createElement("figure", {
                        height: 40,
                        width: 40
                    }, je.createElement("img", {
                        src: e.imageThumbnail
                    }))), n, je.createElement(Ke._21, null, Object(we.d)("Score! Give a shout out to {channelName} in Chat about all your sweet loot!", {
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat"))))
                }, t.prototype.renderLootInGameContent = function(e) {
                    return je.createElement(Ke.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__igc"
                    }, je.createElement("img", {
                        className: "share-to-chat__loot",
                        src: e.imageURL
                    }))
                }, t.prototype.renderLootEmoteSet = function(e) {
                    return Object(Xe.b)(e.emoteSet.emotes).map(function(e) {
                        return je.createElement(Ke.U, {
                            key: e.id,
                            margin: {
                                top: .5,
                                right: 1
                            },
                            "data-test-selector": "share-purchase__emoticon"
                        }, je.createElement("img", {
                            className: "share-to-chat__loot",
                            srcSet: e.srcSet,
                            alt: e.displayName
                        }))
                    })
                }, t.prototype.renderLootBadge = function(e) {
                    return je.createElement(Ke.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__badge"
                    }, je.createElement("img", {
                        className: "share-to-chat__loot",
                        src: e.badge.image2x
                    }))
                }, t.prototype.renderLootBits = function(e) {
                    if (this.props.bitsConfig) return je.createElement(Ke.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__bits"
                    }, je.createElement(Je.a, {
                        count: e.quantity,
                        bitsConfig: this.props.bitsConfig,
                        withImage: !0
                    }))
                }, t = Se.__decorate([Object(Le.a)(et, {
                    name: "data",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(qe.a)([{
                    topic: function(e) {
                        return Object($e.l)(e.currentUserID)
                    },
                    mapMessageTypesToProps: (Ie = {}, Ie[ze.c.ChatNotification] = "userCommerceUpdateEvent", Ie)
                }])], t)
            }(je.Component)),
            it = Object(Le.a)(Ze, {
                name: "dismissPurchaseToken"
            })(Object(Le.a)(tt, {
                name: "sharePurchaseTokenInChat"
            })(nt)),
            at = Object(Te.a)(l)(it),
            rt = (n(935), function(e) {
                var t = We("rare-emote__face", {
                        "rare-emote__face--animate": !!e.animate
                    }),
                    n = We("rare-emote__neck", {
                        "rare-emote__neck--animate": !!e.animate
                    });
                return je.createElement(Ke.U, {
                    overflow: Ke.Y.Hidden,
                    className: "rare-emote"
                }, je.createElement(Ke.P, {
                    zIndex: Ke._38.Above,
                    position: Ke._2.Relative
                }, je.createElement("img", {
                    className: t,
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/" + e.emoteID + "/2.0"
                })), je.createElement(Ke.U, {
                    position: Ke._2.Relative,
                    zIndex: Ke._38.Default,
                    className: n
                }, je.createElement(Ke._8, {
                    width: 28,
                    height: 28,
                    asset: Ke._9.Neck
                })))
            }),
            st = 3,
            ot = n(269),
            lt = n(936),
            ct = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        resubDismissed: !1,
                        showMessageInput: !1,
                        sendingMessage: !1
                    }, t.randomEmoteId = t.getRandomEmoteId(), t.dataIsReady = function(e) {
                        return e.data && !e.data.loading && !e.data.error
                    }, t.resubExists = function(e, t) {
                        return e.data.user.self && e.data.user.self.resubNotification && !t.resubDismissed
                    }, t.manageParentSpace = function() {
                        if (!t.dataIsReady(t.props) || !t.resubExists(t.props, t.state)) return void t.props.dismissSpace();
                        t.props.requestSpace()
                    }, t.toggleContentShown = function() {
                        t.setState(function(e) {
                            return {
                                showMessageInput: !e.showMessageInput
                            }
                        })
                    }, t.dismissResubNotification = function() {
                        t.setState({
                            resubDismissed: !0
                        })
                    }, t.shareResub = function(e) {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var t, n;
                            return Se.__generator(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.resubNotification) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 4, 5, 6]), this.props.authToken ? [4, c(this.props.channelLogin, this.props.data.user.self.resubNotification.token, e, this.props.authToken)] : [3, 3];
                                    case 2:
                                        i.sent(), t = function(e) {
                                            return e.user.self && (e.user.self.resubNotification = null), e
                                        }, Object(Ge.d)(lt, {
                                            channelLogin: this.props.channelLogin
                                        }, t), this.dismissResubNotification(), i.label = 3;
                                    case 3:
                                        return [3, 6];
                                    case 4:
                                        return n = i.sent(), we.i.error(n, "Failed to post resub message"), [3, 6];
                                    case 5:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 6:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.manageParentSpace()
                }, t.prototype.componentDidUpdate = function() {
                    this.manageParentSpace()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.dataIsReady(e) && e.data.user.self && e.data.user.self.resubNotification && !this.randomEmoteId && (this.randomEmoteId = this.getRandomEmoteId())
                }, t.prototype.render = function() {
                    return this.dataIsReady(this.props) && this.resubExists(this.props, this.state) && this.props.data.user.self && this.props.data.user.self.resubNotification ? this.renderResubToken(this.props.data.user.self.resubNotification) : null
                }, t.prototype.renderResubToken = function(e) {
                    return je.createElement(Ke.U, {
                        className: "chat-resub-notification",
                        padding: 0,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Ke._2.Absolute
                    }, je.createElement(Ye, {
                        hide: this.state.showMessageInput,
                        onClickShare: this.toggleContentShown,
                        onClickClose: this.dismissResubNotification
                    }, Object(we.d)("It's your {monthsSubbed, number} month anniversary!", {
                        monthsSubbed: e.months
                    }, "ChatResubNotification")), je.createElement(Qe, {
                        hide: !this.state.showMessageInput,
                        onShare: this.shareResub,
                        onClose: this.toggleContentShown
                    }, je.createElement(rt, {
                        emoteID: this.randomEmoteId,
                        animate: this.state.showMessageInput
                    }), je.createElement(Ke._21, null, Object(we.d)("Hooray! Let {channelName} know it's your {monthsSubbed, number} month anniversary.", {
                        channelName: je.createElement("strong", null, this.props.channelDisplayName),
                        monthsSubbed: e.months
                    }, "ChatResubNotification"))))
                }, t.prototype.getRandomEmoteId = function() {
                    var e = Math.floor(Math.random() * ot.a.length);
                    return ot.a[e]
                }, t = Se.__decorate([Object(Le.a)(lt, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                })], t)
            }(je.Component),
            ut = ct;
        n(937);
        ! function(e) {
            e[e.Resub = 1] = "Resub", e[e.Purchase = 2] = "Purchase"
        }(xe || (xe = {}));
        var dt, pt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        requestedSpaces: new Set
                    }, t.addSpace = function(e) {
                        t.state.requestedSpaces.has(e) || t.setState(function(t) {
                            var n = new Set(t.requestedSpaces);
                            return n.add(e), {
                                requestedSpaces: n
                            }
                        })
                    }, t.removeSpace = function(e) {
                        t.state.requestedSpaces.has(e) && t.setState(function(t) {
                            var n = new Set(t.requestedSpaces);
                            return n.delete(e), {
                                requestedSpaces: n
                            }
                        })
                    }, t.requestResubSpace = function() {
                        t.addSpace(xe.Resub)
                    }, t.dismissResubSpace = function() {
                        t.removeSpace(xe.Resub)
                    }, t.requestPurchaseSpace = function() {
                        t.addSpace(xe.Purchase)
                    }, t.dismissPurchaseSpace = function() {
                        t.removeSpace(xe.Purchase)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = null;
                    this.state.requestedSpaces.size && (e = Array.from(this.state.requestedSpaces.values()).sort()[0]);
                    var t = We({
                            "share-to-chat__space--hidden": e !== xe.Resub
                        }),
                        n = We({
                            "share-to-chat__space--hidden": e !== xe.Purchase
                        });
                    return je.createElement(Ke.U, null, je.createElement(Ke.U, {
                        className: t
                    }, je.createElement(ut, {
                        authToken: this.props.authToken,
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        requestSpace: this.requestResubSpace,
                        dismissSpace: this.dismissResubSpace
                    })), je.createElement(Ke.U, {
                        className: n
                    }, je.createElement(at, {
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        bitsConfig: this.props.bitsConfig,
                        requestSpace: this.requestPurchaseSpace,
                        dismissSpace: this.dismissPurchaseSpace
                    })))
                }, t
            }(je.Component),
            mt = pt,
            ht = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        show: !0
                    }, t.dismiss = function() {
                        t.setState({
                            show: !1
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    e.hostedChannelDisplayName !== this.props.hostedChannelDisplayName && this.setState({
                        show: !0
                    })
                }, t.prototype.render = function() {
                    return this.state.show ? je.createElement(Ke._17, {
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        background: Ke.m.AccentAlt2,
                        color: Ke.F.Overlay,
                        position: Ke._2.Absolute,
                        className: "hosting-notification",
                        padding: {
                            y: .5,
                            left: .5
                        },
                        "data-a-target": "hosting-notification-container"
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        padding: 1,
                        justifyContent: Ke.T.Between,
                        alignItems: Ke.c.Center,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement(Ke.U, {
                        margin: {
                            right: .5
                        },
                        flexShrink: 0
                    }, je.createElement(Ke._21, null, Object(we.d)("Hosting", "ChatHostingNotification"))), je.createElement(Ke.U, {
                        ellipsis: !0,
                        flexShrink: 1,
                        margin: {
                            right: .5
                        }
                    }, je.createElement(Ke._21, {
                        type: Ke._26.Strong,
                        "data-test-selector": "hosting-notification__text",
                        "data-a-target": "hosting-notification-channel-name"
                    }, "" + this.props.hostedChannelDisplayName))), je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexWrap: Ke.K.NoWrap,
                        flexShrink: 0
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Inline,
                        padding: {
                            right: .5
                        }
                    }, je.createElement(Ke.u, {
                        linkTo: {
                            pathname: "/" + this.props.hostedChannelLogin,
                            state: {
                                content: "host_channel",
                                medium: "chat_bar_notification"
                            }
                        },
                        size: Ke.x.Small,
                        "data-a-target": "hosting-notification-gotochannel-button"
                    }, Object(we.d)("Go to Channel", "ChatHostingNotification"))), je.createElement(Ke.v, {
                        onClick: this.dismiss,
                        ariaLabel: Object(we.d)("Close", "HostingNotification"),
                        size: Ke.x.Small,
                        overlay: !0,
                        icon: Ke._9.Close,
                        "data-a-target": "hosting-notification-close-button"
                    })))) : null
                }, t
            }(je.Component),
            ft = n(37),
            gt = n(105),
            vt = n(441),
            bt = n(266),
            kt = n(5),
            yt = "select-one";
        ! function(e) {
            e[e.Unsubmitted = 0] = "Unsubmitted", e[e.Success = 1] = "Success", e[e.FormError = 2] = "FormError", e[e.MutationError = 3] = "MutationError"
        }(dt || (dt = {}));
        var _t, Ct, St = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        reason: null
                    }, t.blockSelectOptions = u(), t.onSubmit = function(e) {
                        e.preventDefault(), t.props.onSubmit(t.state.reason)
                    }, t.onChangeReason = function(e) {
                        var n = e.target.value;
                        n === yt ? t.setState({
                            reason: null
                        }) : t.setState({
                            reason: n
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Ke.U, {
                        fullHeight: !0,
                        fullWidth: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        alignItems: Ke.c.Center,
                        justifyContent: Ke.T.Center
                    }, this.renderStatusMessage(), this.renderBody())
                }, t.prototype.renderBody = function() {
                    if (this.props.submitStatus === dt.Success) return je.createElement(Ke.u, {
                        onClick: this.props.onClose
                    }, je.createElement(Ke.U, {
                        padding: {
                            x: 2
                        }
                    }, Object(we.d)("Close", "BlockUser")));
                    var e = Object(we.d)("You've chosen to ignore this user from chatting or whispering you. Please tell us your concern with this user to determine whether there has been a violation of the terms of service.", "BlockUser"),
                        t = Object(we.d)("Report {channel}", {
                            channel: this.props.blockedUserDisplayName
                        }, "BlockUser");
                    return je.createElement("div", null, je.createElement(Ke._21, {
                        type: Ke._26.H4
                    }, t), je.createElement(Ke._17, {
                        color: Ke.F.Alt2,
                        margin: {
                            y: 1
                        }
                    }, e), je.createElement("a", {
                        href: "https://www.twitch.tv/p/terms-of-service",
                        target: "_blank"
                    }, Object(we.d)("View the Terms of Service", "BlockUser")), je.createElement("form", null, je.createElement(Ke._17, {
                        borderTop: !0,
                        margin: {
                            y: 2
                        },
                        padding: {
                            y: 2
                        }
                    }, je.createElement(Ke.M, {
                        label: Object(we.d)("Select Reason (required)", "BlockUser")
                    }, je.createElement(Ke._14, {
                        "data-test-selector": "block-user-dropdown",
                        onChange: this.onChangeReason,
                        defaultValue: yt
                    }, this.renderReasons()))), je.createElement(Ke._17, {
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center
                    }, je.createElement(Ke.u, {
                        "data-test-selector": "block-user-submit-button",
                        onClick: this.onSubmit
                    }, je.createElement(Ke.U, {
                        padding: {
                            x: 2
                        }
                    }, Object(we.d)("Send", "BlockUser"))))))
                }, t.prototype.renderReasons = function() {
                    return this.blockSelectOptions.map(function(e) {
                        return je.createElement("option", {
                            key: e.canonical,
                            value: e.canonical,
                            name: e.text
                        }, e.text)
                    })
                }, t.prototype.renderStatusMessage = function() {
                    var e = null;
                    switch (this.props.submitStatus) {
                        case dt.FormError:
                            e = Object(we.d)("Please select a reason.", "BlockUser");
                            break;
                        case dt.MutationError:
                            e = Object(we.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "BlockUser");
                            break;
                        case dt.Success:
                            e = Object(we.d)("Thank you for your report.", "BlockUser");
                            break;
                        default:
                            return null
                    }
                    var t = We({
                        "reporting__error-container": this.props.submitStatus !== dt.Success,
                        "reporting__success-container": this.props.submitStatus === dt.Success
                    });
                    return je.createElement(Ke._17, {
                        className: t,
                        fullWidth: this.props.submitStatus !== dt.Success,
                        margin: {
                            bottom: 2
                        },
                        padding: 1,
                        "data-test-selector": "block-user-status-message"
                    }, e)
                }, t
            }(je.Component),
            Et = (n(938), n(939)),
            wt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        submitStatus: dt.Unsubmitted
                    }, t.onClose = function() {
                        t.props.closeModal(), t.props.onClose && t.props.onClose(t.state.submitStatus)
                    }, t.onSubmit = function(e) {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var t;
                            return Se.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (!e) return this.setState({
                                            submitStatus: dt.FormError
                                        }), [2];
                                        n.label = 1;
                                    case 1:
                                        return n.trys.push([1, 3, , 4]), [4, this.props.blockUserMutation(this.props.data.user.id, e, bt.a.Chat)];
                                    case 2:
                                        return n.sent(), this.setState({
                                            submitStatus: dt.Success
                                        }), [3, 4];
                                    case 3:
                                        return t = n.sent(), we.i.error(t, "BlockUser Mutation failed"), this.setState({
                                            submitStatus: dt.MutationError
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Ke._17, {
                        className: "block-user__container",
                        background: Ke.m.Base,
                        padding: {
                            x: 2,
                            y: 3
                        }
                    }, this.renderBody(), je.createElement(gt.a, null))
                }, t.prototype.renderBody = function() {
                    return this.props.data.loading ? je.createElement(Ke.X, {
                        fillContent: !0
                    }) : je.createElement(St, {
                        blockedUserDisplayName: this.props.data.user.displayName,
                        submitStatus: this.state.submitStatus,
                        onClose: this.onClose,
                        onSubmit: this.onSubmit
                    })
                }, t
            }(je.Component),
            Nt = Object(Ae.compose)(Object(kt.c)("BlockUser"), Object(Le.a)(Et, {
                options: function(e) {
                    return {
                        variables: {
                            targetUserID: e.targetUserID
                        }
                    }
                }
            }), Object(vt.a)(), Object(Te.a)(null, d))(wt),
            Ot = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.props.addCommand(this.props.command, this.props.handler)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.command === e.command && this.props.handler === e.handler || (this.props.removeCommand(this.props.command), this.props.addCommand(e.command, e.handler))
                }, t.prototype.componentWillUnmount = function() {
                    this.props.removeCommand(this.props.command)
                }, t.prototype.render = function() {
                    return null
                }, t
            }(je.PureComponent),
            Dt = Object(Te.a)(null, p)(Ot),
            Ut = n(940),
            It = n(941),
            xt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getInvalidUserMessage = function() {
                        return Object(we.d)("No user matching that login.", "IgnoreCommandHandler")
                    }, t.blockUser = function(e) {
                        if (e) {
                            if (e === t.props.userLogin) return {
                                notice: Object(we.d)("You cannot ignore yourself.", "ChatRoom")
                            };
                            return {
                                deferred: m(e).then(function(e) {
                                    return e ? new Promise(function(n) {
                                        t.props.showBlockUser({
                                            targetUserID: e,
                                            onClose: function(e) {
                                                e === dt.Success ? n({
                                                    notice: Object(we.d)("User successfully ignored.", "ChatRoom")
                                                }) : n()
                                            }
                                        })
                                    }) : {
                                        notice: t.getInvalidUserMessage()
                                    }
                                })
                            }
                        }
                        return {
                            notice: Object(we.d)("Please specify a user to ignore", "ChatRoom")
                        }
                    }, t.unblockUser = function(e) {
                        if (e) {
                            if (e === t.props.userLogin) return {
                                notice: Object(we.d)("You cannot unignore yourself.", "ChatRoom")
                            };
                            return {
                                deferred: m(e).then(function(e) {
                                    return e ? (t.props.onUnblockUser(e), {
                                        notice: Object(we.d)("User successfully unignored", "ChatRoom")
                                    }) : {
                                        notice: t.getInvalidUserMessage()
                                    }
                                })
                            }
                        }
                        return {
                            notice: Object(we.d)("Please specify a user to unignore", "ChatRoom")
                        }
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    return je.createElement("span", {
                        style: {
                            display: "none"
                        }
                    }, je.createElement(Dt, {
                        command: "ignore",
                        handler: this.blockUser
                    }), je.createElement(Dt, {
                        command: "unignore",
                        handler: this.unblockUser
                    }))
                }, t
            }(je.Component),
            Tt = function() {
                var e = this;
                return Object(Le.a)(Ut, {
                    props: function(t) {
                        return {
                            onUnblockUser: function(n) {
                                return Se.__awaiter(e, void 0, void 0, function() {
                                    var e, i;
                                    return Se.__generator(this, function(a) {
                                        switch (a.label) {
                                            case 0:
                                                if (!t.mutate) return [2];
                                                a.label = 1;
                                            case 1:
                                                return a.trys.push([1, 3, , 4]), e = Se.__assign({}, Object(Ge.a)({
                                                    targetUserID: n
                                                }), {
                                                    optimisticResponse: {
                                                        unblockUser: {
                                                            __typename: "UnblockUserPayload",
                                                            targetUser: {
                                                                id: n,
                                                                __typename: "User"
                                                            }
                                                        }
                                                    }
                                                }), [4, t.mutate(e)];
                                            case 2:
                                                return a.sent(), [3, 4];
                                            case 3:
                                                return i = a.sent(), we.i.error(i, "Unable to unblock user"), [3, 4];
                                            case 4:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }()(xt),
            Ft = Object(Te.a)(null, h)(Tt),
            jt = n(47),
            Lt = n(827),
            Rt = (n(942), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        requestFailed: !1
                    }, t.logger = we.n.logger.withCategory("orbis"), t.onClickInteraction = function(e) {
                        t.props.sendMessage(":act " + e.currentTarget.getAttribute("data-action")), t.toggleBalloonRef.toggleBalloon()
                    }, t.setToggleBalloonRef = function(e) {
                        return t.toggleBalloonRef = e
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.isLoggedIn && this.props.firstPageLoaded && this.getChatProperties()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.isLoggedIn && !this.props.firstPageLoaded && e.firstPageLoaded && this.getChatProperties()
                }, t.prototype.render = function() {
                    return this.props.isLoggedIn && !this.state.requestFailed && this.hasInteractions() ? je.createElement(Ke._17, {
                        className: "orbis",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        alignItems: Ke.c.Stretch,
                        background: Ke.m.Base,
                        flexShrink: 0,
                        borderBottom: !0
                    }, je.createElement(jt.a, {
                        ref: this.setToggleBalloonRef
                    }, je.createElement("div", {
                        className: "orbis__dropdown-container",
                        "data-test-selector": "orbis-dropdown-container"
                    }, je.createElement(Ke.U, {
                        padding: {
                            y: 1,
                            x: 2
                        },
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement(Ke.U, {
                        ellipsis: !0,
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Ke._21, {
                        type: Ke._26.Span
                    }, Object(we.d)("Interactions Available", "Orbis"))), je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between,
                        alignItems: Ke.c.Center,
                        flexShrink: 0
                    }, je.createElement(Ke.U, {
                        className: "orbis__dropdown-icon",
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between,
                        alignItems: Ke.c.Center
                    }, je.createElement(Ke._8, {
                        asset: Ke._9.AngleRight
                    }))))), je.createElement(Ke.p, {
                        offsetY: "1px",
                        noTail: !0
                    }, je.createElement(Ke.U, {
                        className: "orbis__dropdown-content",
                        padding: 1
                    }, this.renderInteractions())))) : null
                }, t.prototype.renderInteractions = function() {
                    return this.state.chatProperties ? [this.renderInteraction(this.state.chatProperties.sce_title_preset_text_1), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_2), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_3), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_4), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_5)] : null
                }, t.prototype.renderInteraction = function(e) {
                    return e ? je.createElement(Ke.S, {
                        onClick: this.onClickInteraction,
                        key: e,
                        "data-action": e,
                        "data-test-selector": "orbis-interaction"
                    }, je.createElement(Ke.P, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, je.createElement(Ke._21, {
                        ellipsis: !0
                    }, e))) : null
                }, t.prototype.getChatProperties = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Se.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return n.trys.push([0, 2, , 3]), [4, Lt.a.get("/api/channels/" + this.props.channelLogin + "/chat_properties?on_site=1")];
                                case 1:
                                    return e = n.sent(), e.requestError ? (this.logger.error(e.requestError, "Unable to fetch chat properties"), this.setState({
                                        requestFailed: !0
                                    }), [2]) : e.error ? (this.logger.error(new Error("Chat Properties Error"), "The API returned a non-200 response", e.error), this.setState({
                                        requestFailed: !0
                                    }), [2]) : e.body ? (this.setState({
                                        chatProperties: e.body
                                    }), [3, 3]) : (this.logger.error(new Error("Chat Properties Error"), "Body is undefined"), this.setState({
                                        requestFailed: !0
                                    }), [2]);
                                case 2:
                                    return t = n.sent(), this.logger.error(t, "Unable to fetch chat properties"), this.setState({
                                        requestFailed: !0
                                    }), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, t.prototype.hasInteractions = function() {
                    return !!this.state.chatProperties && !!(this.state.chatProperties.sce_title_preset_text_1 || this.state.chatProperties.sce_title_preset_text_2 || this.state.chatProperties.sce_title_preset_text_3 || this.state.chatProperties.sce_title_preset_text_4 || this.state.chatProperties.sce_title_preset_text_5)
                }, t
            }(je.Component)),
            At = Rt,
            Mt = Object(Te.a)(f)(At),
            Bt = n(22),
            Pt = n(54),
            Ht = n(39),
            Vt = function() {
                function e() {}
                return e
            }(),
            Wt = function(e) {
                function t(t) {
                    var n = e.call(this) || this;
                    return n.expiredRaids = new Set, n.joinedRaids = new Set, t && (n.expiredRaids = t.expiredRaids, n.joinedRaids = t.joinedRaids), n
                }
                return Se.__extends(t, e), t.prototype.isExpired = function(e) {
                    return this.expiredRaids.has(e)
                }, t.prototype.hasJoined = function(e) {
                    return this.joinedRaids.has(e) || this.getStorageData()[e.id]
                }, t.prototype.expireRaid = function(e) {
                    var n = new Set(this.expiredRaids);
                    return n.add(e), new t({
                        expiredRaids: n,
                        joinedRaids: this.joinedRaids
                    })
                }, t.prototype.joinRaid = function(e) {
                    var n = new Set(this.joinedRaids);
                    n.add(e);
                    var i = this.getStorageData();
                    return i[e.id] = !0, this.setStorageData(i), new t({
                        expiredRaids: this.expiredRaids,
                        joinedRaids: n
                    })
                }, t.prototype.leaveRaid = function(e) {
                    var n = new Set(this.joinedRaids);
                    n.delete(e);
                    var i = this.getStorageData();
                    return delete i[e.id], this.setStorageData(i), new t({
                        expiredRaids: this.expiredRaids,
                        joinedRaids: n
                    })
                }, t.prototype.setStorageData = function(e) {
                    we.k.set("raid", e)
                }, t.prototype.getStorageData = function() {
                    return we.k.get("raid", {})
                }, t
            }(Vt),
            qt = function(e) {
                function t(t) {
                    var n = e.call(this) || this;
                    return n.expiredRaids = new Set, n.leftRaids = new Set, t && (n.expiredRaids = t.expiredRaids, n.leftRaids = t.leftRaids), n
                }
                return Se.__extends(t, e), t.prototype.isExpired = function(e) {
                    return this.expiredRaids.has(e)
                }, t.prototype.hasJoined = function(e) {
                    return !this.leftRaids.has(e) && !this.getStorageData()[e.id]
                }, t.prototype.expireRaid = function(e) {
                    var n = new Set(this.expiredRaids);
                    return n.add(e), new t({
                        expiredRaids: n,
                        leftRaids: this.leftRaids
                    })
                }, t.prototype.joinRaid = function(e) {
                    var n = new Set(this.leftRaids);
                    n.delete(e);
                    var i = this.getStorageData();
                    return delete i[e.id], this.setStorageData(i), new t({
                        expiredRaids: this.expiredRaids,
                        leftRaids: n
                    })
                }, t.prototype.leaveRaid = function(e) {
                    var n = new Set(this.leftRaids);
                    n.add(e);
                    var i = this.getStorageData();
                    return i[e.id] = !0, this.setStorageData(i), new t({
                        expiredRaids: this.expiredRaids,
                        leftRaids: n
                    })
                }, t.prototype.setStorageData = function(e) {
                    we.k.set("raids-left", e)
                }, t.prototype.getStorageData = function() {
                    return we.k.get("raids-left", {})
                }, t
            }(Vt),
            zt = 3,
            Gt = 5,
            $t = "raid_update",
            Jt = function() {
                function e(e, t) {
                    this.message = e, this.id = e.raid.id, this.creatorID = e.raid.creator_id, this.sourceChannelID = e.raid.source_id, this.targetChannelID = e.raid.target_id, this.viewerCount = e.raid.viewer_count, t ? (this.varianceSeconds = t.varianceSeconds, this.totalDurationInSeconds = t.totalDurationInSeconds, this.clientCreatedAtTimestamp = t.clientCreatedAtTimestamp) : (this.varianceSeconds = g(), this.totalDurationInSeconds = this.getTotalDurationInSeconds(e.raid.remaining_duration_seconds), this.clientCreatedAtTimestamp = (new Date).getTime()), this.isAnnouncing = e.type === $t && this.totalDurationInSeconds > 0, this.hasTimeToJoin = this.totalDurationInSeconds > Gt
                }
                return e.prototype.withMessage = function(t) {
                    return this.message === t ? this : this.id !== t.raid.id ? new e(t) : new e(t, this)
                }, e.prototype.getRemainingJoinTime = function(e) {
                    void 0 === e && (e = new Date);
                    var t = e.getTime() - this.clientCreatedAtTimestamp;
                    return 1e3 * this.totalDurationInSeconds - t
                }, e.prototype.getTotalDurationInSeconds = function(e) {
                    var t = e + this.varianceSeconds;
                    return Math.max(t, 0)
                }, e
            }(),
            Kt = "https://api.twitch.tv/kraken",
            Qt = n(822),
            Yt = (n(943), {
                "data-test-selector": "countdown-fill-width"
            }),
            Xt = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this,
                        t = this.props.startPolling || setInterval;
                    this.intervalID = t(function() {
                        return e.forceUpdate()
                    }, 1e3)
                }, t.prototype.componentWillUnmount = function() {
                    clearInterval(this.intervalID)
                }, t.prototype.componentDidUpdate = function() {
                    this.props.getRemainingTime() <= 0 && this.props.onCountdownEnd()
                }, t.prototype.render = function() {
                    var e = this.countdownPercentage + "%";
                    return je.createElement("div", {
                        className: "raid-countdown-bar"
                    }, je.createElement("div", Se.__assign({
                        className: "raid-countdown-bar__fill",
                        style: {
                            width: e
                        }
                    }, Yt)))
                }, Object.defineProperty(t.prototype, "countdownPercentage", {
                    get: function() {
                        return this.props.getRemainingTime() / this.props.totalCountdownTime * 100
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.PureComponent),
            Zt = (n(944), n(13)),
            en = {
                medium: "twitch_channel",
                content: "raid_channel"
            },
            tn = n(945),
            nn = Object(Le.a)(tn, {
                options: function(e) {
                    return {
                        variables: {
                            sourceChannelID: e.raid.sourceChannelID,
                            targetChannelID: e.raid.targetChannelID
                        }
                    }
                }
            })(S),
            an = {
                "data-test-selector": "current-raiders"
            },
            rn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getRemainingTime = function() {
                        return t.props.raid.getRemainingJoinTime()
                    }, t.handleCountdownEnd = function() {
                        t.props.onRaidInvitePeriodOver(t.props.data.targetChannel.displayName)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    _(this.props.raid)
                }, t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.sourceChannel,
                        n = e.targetChannel;
                    return je.createElement(Ke._17, {
                        className: "raid-notification",
                        background: Ke.m.AccentAlt2,
                        color: Ke.F.Overlay,
                        position: Ke._2.Absolute,
                        zIndex: Ke._38.Above,
                        fullWidth: !0
                    }, je.createElement(Ke.U, {
                        className: "raid-notification__content",
                        padding: {
                            y: 1,
                            x: 2
                        },
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between
                    }, je.createElement(Ke.U, {
                        alignItems: Ke.c.Center,
                        display: Ke.H.Flex
                    }, je.createElement(Ke.l, {
                        size: 36,
                        imageSrc: t.profileImageURL,
                        imageAlt: t.displayName
                    }), je.createElement(Ke._8, {
                        asset: Ke._9.AngleRight,
                        height: 10
                    }), je.createElement(Ke.l, {
                        size: 36,
                        imageSrc: n.profileImageURL,
                        imageAlt: n.displayName
                    }), je.createElement(Ke.U, {
                        padding: {
                            left: 1
                        }
                    }, je.createElement(Ke._21, {
                        color: Ke.F.OverlayAlt,
                        type: Ke._26.P,
                        className: "raid-notification__channel-name"
                    }, Object(we.d)("{sourceDisplayName} is", {
                        sourceDisplayName: t.displayName
                    }, "RaidCTASourceChannel")), je.createElement(Ke._21, null, Object(we.d)("raiding {targetDisplayName}", {
                        targetDisplayName: n.displayName
                    }, "RaidCTATargetChannel")), je.createElement(Ke._21, Se.__assign({
                        bold: !0
                    }, an), Object(we.d)("{viewerCount, plural, one {# raider} other {# raiders}}", {
                        viewerCount: this.props.raid.viewerCount
                    }, "RaidCTATotalRaiders")))), this.props.children), je.createElement(Xt, {
                        totalCountdownTime: 1e3 * this.props.raid.totalDurationInSeconds,
                        getRemainingTime: this.getRemainingTime,
                        onCountdownEnd: this.handleCountdownEnd
                    }))
                }, t
            }(je.Component),
            sn = function(e) {
                return function(t) {
                    return je.createElement(nn, Se.__assign({}, t, {
                        component: e
                    }))
                }
            }(rn),
            on = {
                "data-test-selector": "raid-cancel-button"
            },
            ln = function(e) {
                return je.createElement(Ke.U, {
                    alignSelf: Ke.d.Center
                }, je.createElement(Ke.u, Se.__assign({
                    size: Ke.x.Large,
                    type: Ke.z.Hollow,
                    overlay: !0,
                    onClick: e.onCancelRaid
                }, on), Object(we.d)("Cancel", "RaidCTACancel")))
            },
            cn = n(867),
            un = {
                "data-test-selector": "join-raid-button"
            },
            dn = {
                "data-test-selector": "leave-raid-button"
            },
            pn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.timerID = 0, t.handleLeaveRaid = function() {
                        clearTimeout(t.timerID), t.props.onLeaveRaid()
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.hasJoined && (this.timerID = setTimeout(this.props.onJoinRaid, Object(cn.random)(5e3)))
                }, t.prototype.componentWillUnmount = function() {
                    clearTimeout(this.timerID)
                }, t.prototype.render = function() {
                    return this.props.hasJoined ? je.createElement(Ke.U, {
                        alignSelf: Ke.d.Center
                    }, je.createElement(Ke.u, Se.__assign({
                        size: Ke.x.Large,
                        type: Ke.z.Hollow,
                        overlay: !0,
                        onClick: this.handleLeaveRaid
                    }, dn), Object(we.d)("Leave", "RaidCTALeave"))) : je.createElement(Ke.U, {
                        alignSelf: Ke.d.Center
                    }, je.createElement(Ke.u, Se.__assign({
                        size: Ke.x.Large,
                        onClick: this.props.onJoinRaid
                    }, un), Object(we.d)("Join", "RaidCTAJoin")))
                }, t
            }(je.Component),
            mn = n(946),
            hn = n(21),
            fn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        raidStorage: new Wt
                    }, t.handleRaidInvitePeriodOver = function(e) {
                        var n = t.hasJoinedCurrentRaid;
                        if (t.currentRaid && t.setState({
                                raidStorage: t.state.raidStorage.expireRaid(t.currentRaid)
                            }, function() {
                                t._currentRaid = void 0
                            }), n) {
                            var i = t.props.history.location || window.location,
                                a = E(i, e);
                            a && t.props.history.push(a, en)
                        }
                    }, t.handleJoinRaid = function() {
                        if (t.currentRaid) {
                            var e = t.currentRaid.id;
                            if (!t.props.authToken) return void t.props.login();
                            v(e, t.props.authToken), k(t.currentRaid), t.setState({
                                raidStorage: t.state.raidStorage.joinRaid(t.currentRaid)
                            })
                        }
                    }, t.handleLeaveRaid = function() {
                        if (t.currentRaid) {
                            b(t.currentRaid.id, t.props.authToken), y(t.currentRaid), t.setState({
                                raidStorage: t.state.raidStorage.leaveRaid(t.currentRaid)
                            })
                        }
                    }, t.handleCancelRaid = function() {
                        t.currentRaid && t.props.send(Qt.a)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return Se.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, we.n.experiments.getAssignment("TWILIGHT_RAID_AUTO_JOIN")];
                                case 1:
                                    return e = t.sent(), "yes" === e && this.setState({
                                        raidStorage: new qt
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return this.shouldRenderRaidNotification ? je.createElement(sn, {
                        raid: this.currentRaid,
                        onRaidInvitePeriodOver: this.handleRaidInvitePeriodOver
                    }, this.renderCTAButton()) : null
                }, t.prototype.renderCTAButton = function() {
                    return this.isRaidCreator ? je.createElement(ln, {
                        onCancelRaid: this.handleCancelRaid
                    }) : je.createElement(pn, {
                        onJoinRaid: this.handleJoinRaid,
                        onLeaveRaid: this.handleLeaveRaid,
                        hasJoined: this.hasJoinedCurrentRaid
                    })
                }, Object.defineProperty(t.prototype, "shouldRenderRaidNotification", {
                    get: function() {
                        var e = this.currentRaid;
                        return e && e.isAnnouncing && e.sourceChannelID === this.props.channelID && !this.state.raidStorage.isExpired(e) && (e.hasTimeToJoin || this.hasJoinedCurrentRaid)
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "isRaidCreator", {
                    get: function() {
                        var e = this.currentRaid;
                        return e && this.props.data && this.props.data.user && this.props.data.user.id === e.creatorID
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "currentRaid", {
                    get: function() {
                        var e = this.props.pubsub.messages.raidMessage;
                        return e && (this._currentRaid ? this._currentRaid = this._currentRaid.withMessage(e) : this._currentRaid = new Jt(e)), this._currentRaid
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "hasJoinedCurrentRaid", {
                    get: function() {
                        var e = this.currentRaid;
                        return !(!e || !this.props.authToken) && (this.isRaidCreator || this.state.raidStorage.hasJoined(e))
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.Component),
            gn = Object(Le.a)(mn, {
                skip: function(e) {
                    return !e.authToken
                }
            })(fn),
            vn = Object(Te.a)(O, D)(gn),
            bn = Object(qe.a)([{
                topic: function(e) {
                    return Object($e.g)(e.channelID)
                },
                mapMessageTypesToProps: (_t = {}, _t[ze.c.RaidUpdate] = "raidMessage", _t[ze.c.RaidCancel] = "raidMessage", _t)
            }])(vn),
            kn = Object(Bt.e)(bn),
            yn = n(57),
            _n = n(72),
            Cn = n(442),
            Sn = n(55),
            En = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleWhisperCommand = function(e) {
                        var n = Object(Qt.o)(e),
                            i = n.recipientLogin,
                            a = n.body;
                        if (!i || !a) return {
                            preserveInput: !0
                        };
                        if (t.props.isEmbedded || t.props.isPopout) return {
                            notice: Object(we.d)("Please use the whisper window for whispers.", "ChatRoom")
                        };
                        if (i.toLowerCase() === t.props.userLogin) return {
                            notice: Object(we.d)("You cannot whisper to yourself.", "ChatRoom")
                        };
                        if (t.props.userID) return {
                            deferred: t.initiateWhisper(i, a)
                        }
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Dt, {
                        command: "w",
                        handler: this.handleWhisperCommand
                    })
                }, t.prototype.initiateWhisper = function(e, t) {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var n, i, a, r;
                        return Se.__generator(this, function(s) {
                            switch (s.label) {
                                case 0:
                                    n = null, s.label = 1;
                                case 1:
                                    return s.trys.push([1, 3, , 4]), [4, m(e)];
                                case 2:
                                    return n = s.sent(), [3, 4];
                                case 3:
                                    return i = s.sent(), we.i.warn(i, "Failed to fetch user targeted by whisper command.", {
                                        recipientLogin: e
                                    }), [3, 4];
                                case 4:
                                    if (!n) return [2, {
                                        notice: Object(we.d)("No user matching that login.", "ChatRoom")
                                    }];
                                    s.label = 5;
                                case 5:
                                    return s.trys.push([5, 7, , 8]), [4, Object(Cn.a)({
                                        currentUserID: this.props.userID,
                                        emotes: this.props.getCurrentEmotes(),
                                        message: t,
                                        recipientUserID: n
                                    })];
                                case 6:
                                    return s.sent(), [3, 8];
                                case 7:
                                    return a = s.sent(), we.i.error(a, "Failed to send whisper using whisper command.", {
                                        currentUserID: this.props.userID,
                                        recipientUserID: n
                                    }), [2];
                                case 8:
                                    return r = Object(Sn.a)(this.props.userID, n), this.props.openThread(r), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            wn = Object(Te.a)(null, U)(En),
            Nn = n(814),
            On = n(947),
            Dn = 200,
            Un = function() {
                function e(e) {
                    var t = this;
                    this.getActiveChatters = function() {
                        return t.isDirty = !1, Object.keys(t.activeChatters).map(function(e) {
                            return t.activeChatters[e]
                        })
                    }, this.setCurrentUserID = function(e) {
                        t.currentUserID = e, t.activeChatterIDs.has(e) && (t.isDirty = !0, t.removeActiveChatter(e))
                    }, this.consumeChatEvent = function(e) {
                        switch (e.type) {
                            case Nn.a.Action:
                            case Nn.a.Post:
                            case Nn.a.PostWithMention:
                                var n = e;
                                t.handleActiveChatter(n.user)
                        }
                    }, this.handleActiveChatter = function(e) {
                        e.userID && e.userID !== t.channelID && e.userID !== t.currentUserID && (t.activeChatterIDs.has(e.userID) ? (t.activeChatterIDs.delete(e.userID), t.addActiveChatter(e)) : (t.addActiveChatter(e), t.trimActiveChatters(), t.isDirty = !0))
                    }, this.addActiveChatter = function(e) {
                        e.userID && (t.activeChatterIDs.add(e.userID), t.activeChatters[e.userID] = e)
                    }, this.removeActiveChatter = function(e) {
                        t.activeChatterIDs.delete(e), delete t.activeChatters[e]
                    }, this.trimActiveChatters = function() {
                        if (!(t.activeChatterIDs.size <= Dn))
                            for (var e = t.activeChatterIDs.size - Dn, n = t.activeChatterIDs.values(), i = 0; i < e; i++) {
                                var a = n.next().value;
                                t.removeActiveChatter(a)
                            }
                    }, this.activeChatterIDs = new Set, this.activeChatters = {}, this.channelID = e, this.currentUserID = null
                }
                return e
            }(),
            In = n(261),
            xn = 1e3,
            Tn = 250,
            Fn = 0,
            jn = 200,
            Ln = function() {
                function e(e) {
                    void 0 === e && (e = Tn);
                    var t = this;
                    this.maxSize = e, this.setDelay = function(e) {
                        t.delayDuration = e
                    }, this.setCurrentUserLogin = function(e) {
                        t.currentUserLogin = e
                    }, this.consumeChatEvent = function(e) {
                        var n = !1;
                        switch (e.type) {
                            case Nn.a.Action:
                            case Nn.a.Post:
                            case Nn.a.PostWithMention:
                                var i = e;
                                if (i.user.userID && t.blockedUsers.has(i.user.userID)) return;
                                var a = i.messageParts[0];
                                if (a && a.type === In.a.Text && a.content.startsWith(":act ")) return;
                                n = !t.isOwnMessage(i);
                                break;
                            case Nn.a.Resubscription:
                                var r = e;
                                n = !t.isOwnMessage(r) && void 0 !== r.messageParts;
                                break;
                            case Nn.a.Ban:
                            case Nn.a.Timeout:
                                var s = e,
                                    o = s.userLogin;
                                if (t.moderatedUsers.has(o)) return;
                                [t.buffer, t.delayedMessageBuffer.map(function(e) {
                                    return e.event
                                })].forEach(function(e) {
                                    e.forEach(function(e) {
                                        e.user && o === e.user.userLogin && e.messageParts && !e.deleted && (e.deleted = !0)
                                    })
                                }), t.moderatedUsers.add(o), setTimeout(t.unmoderateUser(o), xn);
                                break;
                            case Nn.a.Disconnected:
                                return;
                            case Nn.a.Reconnect:
                                if (t.buffer.find(function(t) {
                                        return t.id === e.id
                                    }) || t.delayedMessageBuffer.find(function(t) {
                                        return t.event.id === e.id
                                    })) return;
                                break;
                            case Nn.a.Clear:
                                t.delayedMessageBuffer = [], t.buffer = []
                        }
                        t.delayedMessageBuffer.push({
                            event: e,
                            time: Date.now(),
                            shouldDelay: n
                        })
                    }, this.unmoderateUser = function(e) {
                        return function() {
                            t.moderatedUsers.delete(e)
                        }
                    }, this.isOwnMessage = function(e) {
                        var n = e.user;
                        return !(!t.currentUserLogin || !n || n.userLogin !== t.currentUserLogin)
                    }, this.delayedMessageBuffer = [], this.buffer = [], this.moderatedUsers = new Set, this.blockedUsers = new Set, this._isDirty = !1, this.throttlingDuration = jn, this.delayDuration = Fn, this.currentUserLogin = null, this.flushInterval = setInterval(function() {
                        return t.flushRawMessages()
                    }, this.throttlingDuration), this.setBlockedUsers = this.setBlockedUsers.bind(this)
                }
                return e.prototype.shutdown = function() {
                    this.flushInterval && clearInterval(this.flushInterval)
                }, e.prototype.setBlockedUsers = function(e) {
                    this.blockedUsers = new Set(e)
                }, e.prototype.toArray = function() {
                    return this.buffer = this.buffer.slice(-this.maxSize), this._isDirty = !1, this.buffer
                }, e.prototype.isDeletable = function(e) {
                    return void 0 !== e.deleted
                }, e.prototype.flushRawMessages = function() {
                    var e = this,
                        t = [],
                        n = Date.now();
                    this.delayedMessageBuffer.forEach(function(i) {
                        var a = i.event,
                            r = i.time,
                            s = i.shouldDelay;
                        r <= n - e.delayDuration || !s ? e.isDeletable(a) && a.deleted || (e.buffer.push(a), e._isDirty = !0) : t.push({
                            event: a,
                            time: r,
                            shouldDelay: s
                        })
                    }), this.delayedMessageBuffer = t
                }, Object.defineProperty(e.prototype, "isDirty", {
                    get: function() {
                        return this._isDirty
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "length", {
                    get: function() {
                        return this.buffer.length
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "moderatedUserCount", {
                    get: function() {
                        return this.moderatedUsers.size
                    },
                    enumerable: !0,
                    configurable: !0
                }), e
            }(),
            Rn = n(816),
            An = n(826),
            Mn = n(840),
            Bn = n(131),
            Pn = n(852),
            Hn = n(268),
            Vn = function() {
                function e(e, t, n) {
                    var i = this;
                    this.onJoinedEvent = function(e) {
                        return i.postMessage(A())
                    }, this.onDisconnectedEvent = function(e) {
                        return i.postMessage(M(e.reason))
                    }, this.onReconnectingEvent = function(e) {
                        return i.postMessage(B())
                    }, this.onHostingEvent = function(e) {
                        return i.postMessage(P(e.target))
                    }, this.onUnhostEvent = function(e) {
                        return i.postMessage(H(e.channel))
                    }, this.onChatMessageEvent = function(e) {
                        i.postMessage(i.convertMessage(e))
                    }, this.onChatActionEvent = function(e) {
                        var t = i.bitsConfig || He.a,
                            n = e.message.user.username === i.userLogin ? i.selfEmotes : void 0,
                            a = T(Nn.a.Action, e.action, e.message.user, t, i.shouldBlockLinks(e.message.user), n);
                        i.postMessage(a)
                    }, this.onChatNoticeEvent = function(e) {
                        var t = F(e.channel, e.msgid, e.body);
                        i.postMessage(t)
                    }, this.onTimeoutEvent = function(e) {
                        i.onModerationEvent(Nn.a.Timeout, e)
                    }, this.onBanEvent = function(e) {
                        i.onModerationEvent(Nn.a.Ban, e)
                    }, this.onModerationEvent = function(e, t) {
                        i.postMessage(Object(Pn.a)(e, t.userLogin, t.reason, t.duration))
                    }, this.onSubscriptionEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = e.methods.prime ? "prime" : "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "$4.99"
                        }
                        i.postMessage(J(e.channel, e.user.displayName, e.methods.prime, t))
                    }, this.onSubscriptionGiftEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "custom"
                        }
                        i.postMessage(K(e.channel, e.user.displayName, e.methods.prime, t, e.recipientName))
                    }, this.onResubscriptionEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = e.methods.prime ? "prime" : "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "$4.99"
                        }
                        i.postMessage(Y(e.channel, e.user.displayName, e.methods.prime, e.months, t, e.body, e.user))
                    }, this.onRoomModsEvent = function(e) {
                        return i.postMessage(V(e.usernames))
                    }, this.onRoomStateEvent = function(e) {
                        return i.postMessage(W(e.state))
                    }, this.onSlowModeEvent = function(e) {
                        return i.postMessage(q(e.enabled, e.length))
                    }, this.onEmoteOnlyModeEvent = function(e) {
                        return i.postMessage(z(e.enabled))
                    }, this.onFollowerOnlyModeEvent = function(e) {
                        return i.postMessage(G(e.enabled, e.length))
                    }, this.onSubscriberOnlyModeEvent = function(e) {
                        return i.postMessage($(e.enabled))
                    }, this.onClearChatEvent = function(e) {
                        return i.postMessage(I())
                    }, this.onRaidEvent = function(e) {
                        return i.postMessage(L(e.channel, e.userLogin, e.params))
                    }, this.onUnraidEvent = function(e) {
                        return i.postMessage(R(e.channel, e.userLogin, e.message))
                    }, this.onBadgesUpdatedEvent = function(e) {
                        return i.postMessage(x(e.username, e.badges))
                    }, this.onPurchaseEvent = function(e) {
                        var t = i.bitsConfig || He.a;
                        i.postMessage(j(e.purchase, i.convertMessage(e), e.timestamp, t))
                    }, this.convertMessage = function(e) {
                        var t = i.bitsConfig || He.a,
                            n = e.message.user.username === i.userLogin ? i.selfEmotes : void 0;
                        return T(Nn.a.Post, e.message.body, e.message.user, t, i.shouldBlockLinks(e.message.user), n)
                    }, this.logger = we.i.withCategory("chat-service"), this.logger.debug("Created"), this.userLogin = e, this.channelLogin = t, this.service = we.n.tmi, this.client = we.n.tmi.client, this.postMessage = n, this.disabled = we.n.tmi.disabled
                }
                return e.prototype.join = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        return Se.__generator(this, function(e) {
                            switch (e.label) {
                                case 0:
                                    return this.logger.debug("Joining channel and binding all event listeners"), [4, this.service.awaitParted()];
                                case 1:
                                    return e.sent(), this.connectHandlers(), [4, this.service.join(this.channelLogin)];
                                case 2:
                                    return e.sent(), [2]
                            }
                        })
                    })
                }, e.prototype.part = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        return Se.__generator(this, function(e) {
                            switch (e.label) {
                                case 0:
                                    return this.logger.debug("Parting channel and unbinding all event listeners"), this.client.events.removeAll(), [4, this.service.part(this.channelLogin)];
                                case 1:
                                    return e.sent(), [2]
                            }
                        })
                    })
                }, e.prototype.sendMessage = function(e) {
                    var t = this,
                        n = Object(Qt.l)(e, this.channelLogin);
                    if (n.handled) return n.result && (n.result.notice && this.postMessage(Object(Mn.a)(n.result.notice)), n.result.deferred && n.result.deferred.then(function(e) {
                        e && e.notice && t.postMessage(Object(Mn.a)(e.notice))
                    })), n.result;
                    this.client.sendCommand(this.channelLogin, e).catch(function(e) {
                        we.i.warn("Failed to send message, or message timeout", e)
                    })
                }, e.prototype.updateEmotes = function(e) {
                    this.selfEmotes = Object(Hn.a)(e), this.client.updateEmoteSets(e)
                }, e.prototype.updateChannelBadges = function(e) {
                    this.client.updateChannelBadges(this.channelLogin, e)
                }, e.prototype.updateBitsConfig = function(e) {
                    this.bitsConfig = e
                }, e.prototype.updateBlockLinks = function(e) {
                    this.blockLinks = e
                }, e.prototype.connectHandlers = function() {
                    this.client.events.joined(this.onJoinedEvent), this.client.events.disconnected(this.onDisconnectedEvent), this.client.events.reconnecting(this.onReconnectingEvent), this.client.events.chat(this.onChatMessageEvent), this.client.events.usernotice(this.onChatMessageEvent), this.client.events.notice(this.onChatNoticeEvent), this.client.events.action(this.onChatActionEvent), this.client.events.badgesupdated(this.onBadgesUpdatedEvent), this.client.events.hosting(this.onHostingEvent), this.client.events.unhost(this.onUnhostEvent), this.client.events.badgesupdated(this.onBadgesUpdatedEvent), this.client.events.purchase(this.onPurchaseEvent), this.client.events.subscription(this.onSubscriptionEvent), this.client.events.resub(this.onResubscriptionEvent), this.client.events.subgift(this.onSubscriptionGiftEvent), this.client.events.timeout(this.onTimeoutEvent), this.client.events.ban(this.onBanEvent), this.client.events.clearchat(this.onClearChatEvent), this.client.events.raid(this.onRaidEvent), this.client.events.unraid(this.onUnraidEvent), this.client.events.mods(this.onRoomModsEvent), this.client.events.roomstate(this.onRoomStateEvent), this.client.events.followersonly(this.onFollowerOnlyModeEvent), this.client.events.slowmode(this.onSlowModeEvent), this.client.events.subscribers(this.onSubscriberOnlyModeEvent), this.client.events.emoteonlymode(this.onEmoteOnlyModeEvent)
                }, e.prototype.shouldBlockLinks = function(e) {
                    return e.username !== this.channelLogin && e.userType !== An.a.Staff && e.userType !== An.a.GlobalMod && e.userType !== An.a.Moderator && this.blockLinks
                }, e
            }(),
            Wn = function() {
                function e(e, t, n) {
                    this.channelID = e, this.sessionUserID = t, this.unsubscribe = we.j.subscribe({
                        topic: Object($e.d)(this.sessionUserID, this.channelID),
                        onMessage: function(e) {
                            switch (e.data.moderation_action) {
                                case ze.b.AutoModRejected:
                                    var t = Z(e.data.msg_id, e.data.args[1], e.data.args[0], e.data.args[2]);
                                    n(t);
                                    break;
                                case ze.e.AutoModMessageRejected:
                                    n(ee());
                                    break;
                                case ze.e.AutoModMessageApproved:
                                    n(te());
                                    break;
                                case ze.e.AutoModMessageDenied:
                                    n(ne())
                            }
                        }
                    })
                }
                return e
            }(),
            qn = n(834),
            zn = n(948),
            Gn = n(33),
            $n = function() {
                function e() {}
                return e.fetchChannelsList = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Se.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return n.trys.push([0, 2, , 3]), [4, Lt.a.get("/kraken/autohost/list")];
                                case 1:
                                    return e = n.sent(), [2, this.deserialize(e)];
                                case 2:
                                    return t = n.sent(), we.i.error(t, "Couldn't fetch autohost list"), [2, []];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, e.setChannelsList = function(e) {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var t, n;
                        return Se.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return i.trys.push([0, 2, , 3]), [4, Lt.a.put("/kraken/autohost/list", {
                                        body: {
                                            targets: e.join(",")
                                        }
                                    })];
                                case 1:
                                    return t = i.sent(), [2, this.deserialize(t)];
                                case 2:
                                    return n = i.sent(), we.i.error(n, "Couldn't update autohost list"), [2, e];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, e.deserialize = function(e) {
                    return e.body ? e.body.targets.map(function(e) {
                        return e._id.toString()
                    }) : []
                }, e
            }(),
            Jn = (n(949), n(950)),
            Kn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isDismissed: !1
                    }, t.dismiss = function() {
                        t.setState({
                            isDismissed: !0
                        }), t.track(Zt.SpadeEventType.AutohostChatDismiss);
                        var e = t.getAutohostNotificationsDismissed();
                        e[t.props.data.user.id] = {
                            dismissedDate: (new Date).getTime()
                        }, t.setAutohostNotificationsDismissed(e)
                    }, t.addChannelToAutohost = function() {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return Se.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, $n.fetchChannelsList()];
                                    case 1:
                                        return e = t.sent().concat([this.props.data.user.id]), this.setState({
                                            autohostChannels: e
                                        }), $n.setChannelsList(e), this.track(Zt.SpadeEventType.AutohostChatYes), [2]
                                }
                            })
                        })
                    }, t.trackSettingsClick = function() {
                        t.track(Zt.SpadeEventType.AutohostChatSettings)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return Se.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, $n.fetchChannelsList()];
                                case 1:
                                    return e = t.sent(), this.setState({
                                        autohostChannels: e
                                    }), this.isShowing && this.track(Zt.SpadeEventType.AutohostChatImpression), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    if (!this.isShowing) return null;
                    var e = Object(we.d)("You are now hosting {channel}", {
                            channel: this.props.data.user.displayName
                        }, "AutohostPrompt"),
                        t = Object(we.d)("Auto host this channel whenever you're offline?", "AutohostPrompt"),
                        n = Object(we.d)("Yes", "AutohostPrompt"),
                        i = Object(we.d)("Settings", "AutohostPrompt");
                    return je.createElement(Ke._17, {
                        background: Ke.m.Base,
                        className: "autohost-prompt",
                        margin: {
                            x: 2
                        },
                        position: Ke._2.Relative
                    }, je.createElement(Ke.p, {
                        size: Ke.r.Medium,
                        direction: Ke.q.TopLeft,
                        show: !0
                    }, je.createElement(Ke._17, {
                        alignItems: Ke.c.Center,
                        borderBottom: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        justifyContent: Ke.T.Around,
                        padding: 1
                    }, je.createElement(Ke.U, {
                        position: Ke._2.Absolute,
                        attachTop: !0,
                        attachRight: !0
                    }, je.createElement(Ke.v, {
                        ariaLabel: Object(we.d)("Close", "AutohostPrompt"),
                        size: Ke.x.Small,
                        type: Ke.w.Secondary,
                        "data-test-selector": "autohost-dismiss-button",
                        icon: Ke._9.Close,
                        onClick: this.dismiss
                    })), je.createElement(Ke.l, {
                        imageAlt: this.props.data.user.displayName,
                        imageSrc: this.props.data.user.profileImageURL,
                        size: 30
                    }), je.createElement(Ke.U, {
                        className: "autohost-prompt__hosting-message",
                        display: Ke.H.Flex,
                        padding: {
                            top: .5
                        }
                    }, je.createElement(Ke._8, {
                        asset: Ke._9.Check
                    }), je.createElement(Ke.P, {
                        margin: {
                            left: .5
                        }
                    }, je.createElement(Ke._21, null, e)))), je.createElement(Ke.U, {
                        className: "autohost-prompt__prompt",
                        justifyContent: Ke.T.Center,
                        display: Ke.H.Flex,
                        padding: 1
                    }, je.createElement(Ke._21, null, t), je.createElement(Ke._33, {
                        gutterSize: Ke._35.ExtraSmall,
                        childWidth: Ke._34.Large
                    }, je.createElement("div", null, je.createElement(Ke.u, {
                        "data-test-selector": "autohost-yes-button",
                        fullWidth: !0,
                        onClick: this.addChannelToAutohost
                    }, n)), je.createElement("div", null, je.createElement(Ke.u, {
                        "data-test-selector": "autohost-settings-button",
                        fullWidth: !0,
                        onClick: this.trackSettingsClick,
                        type: Ke.z.Hollow,
                        linkTo: "https://twitch.tv/settings/profile"
                    }, i))))))
                }, Object.defineProperty(t.prototype, "isShowing", {
                    get: function() {
                        return !this.state.isDismissed && !!this.props.hostedChannelLogin && !this.props.data.loading && !this.props.data.error && this.props.data.user && !!this.state.autohostChannels && !this.state.autohostChannels.includes(this.props.data.user.id) && !this.getAutohostNotificationsDismissed()[this.props.data.user.id]
                    },
                    enumerable: !0,
                    configurable: !0
                }), t.prototype.track = function(e) {
                    ie(e, {
                        user_id: this.props.data.currentUser.id,
                        hosting_channel_id: this.props.data.currentUser.id,
                        hosted_channel_id: this.props.data.user.id
                    })
                }, t.prototype.getAutohostNotificationsDismissed = function() {
                    return we.k.get("autohost-notifications-dismissed", {})
                }, t.prototype.setAutohostNotificationsDismissed = function(e) {
                    return we.k.set("autohost-notifications-dismissed", e)
                }, t = Se.__decorate([Object(Le.a)(Jn, {
                    skip: function(e) {
                        return !e.hostedChannelLogin
                    },
                    options: function(e) {
                        return {
                            variables: {
                                login: e.hostedChannelLogin
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Qn = Kn,
            Yn = n(830),
            Xn = n(107),
            Zn = n(853),
            ei = n(833),
            ti = n(828),
            ni = n(836),
            ii = n(879),
            ai = n(951),
            ri = (n(952), "chat-ban-button"),
            si = "chat-unban-button",
            oi = "chat-timeout-button",
            li = "chat-deleted-message-placeholder",
            ci = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        alwaysShowMessage: !1
                    }, t.renderModerationIcons = function() {
                        if (!t.props.isCurrentUserModerator || !t.props.showModerationIcons) return null;
                        var e = t.onBanUser,
                            n = Ke._9.Ban,
                            i = Object(we.d)("Ban", "ChatMessageEvent"),
                            a = ri;
                        return t.props.message.deleted && !t.state.alwaysShowMessage && (e = t.onUnbanUser, n = Ke._9.FollowCheck, i = Object(we.d)("Unban", "ChatMessageEvent"), a = si), je.createElement(Ke.U, {
                            display: Ke.H.Inline,
                            className: "chat-line__mod-icons"
                        }, je.createElement("button", {
                            className: "mod-icon",
                            onClick: e,
                            "data-a-target": a
                        }, je.createElement(Ke._30, {
                            label: i
                        }, je.createElement(Ke._8, {
                            width: 16,
                            height: 16,
                            type: Ke._10.Inherit,
                            asset: n
                        }))), je.createElement("button", {
                            className: "mod-icon",
                            onClick: t.timeoutUser,
                            "data-a-target": oi
                        }, je.createElement(Ke._30, {
                            label: Object(we.d)("Timeout", "ChatMessageEvent")
                        }, je.createElement(Ke._8, {
                            width: 16,
                            height: 16,
                            type: Ke._10.Inherit,
                            asset: Ke._9.Timeout
                        }))))
                    }, t.renderMessageBody = function() {
                        if (t.props.isDeleted && !t.state.alwaysShowMessage) {
                            var e = Object(we.d)("message deleted", "ChatLine");
                            return t.props.isCurrentUserModerator ? je.createElement("span", {
                                key: "deleted",
                                className: "chat-line__message--deleted",
                                "data-a-target": li
                            }, je.createElement("a", {
                                href: "",
                                onClick: t.alwaysShowMessage
                            }, "<" + e + ">")) : je.createElement("span", {
                                key: "deleted",
                                className: "chat-line__message--deleted",
                                "data-a-target": li
                            }, "<" + e + ">")
                        }
                        return Object(ti.f)(t.props.message.messageParts, t.props.currentUserDisplayName, t.props.currentUserLogin)
                    }, t.onBanUser = function() {
                        t.props.onBanUser(t.props.message.user.userLogin)
                    }, t.onUnbanUser = function() {
                        t.props.onUnbanUser(t.props.message.user.userLogin)
                    }, t.timeoutUser = function() {
                        t.props.onBanUser(t.props.message.user.userLogin, 600)
                    }, t.alwaysShowMessage = function(e) {
                        e && e.preventDefault(), t.setState({
                            alwaysShowMessage: !0
                        })
                    }, t.usernameClickHandler = function() {
                        t.props.onUsernameClick(t.props.message.user.userLogin, ni.a.chat_message, t.props.message.id)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = this.props,
                        t = e.badgeSets,
                        n = e.className,
                        i = e.message,
                        a = e.showTimestamps,
                        r = {},
                        s = ": ";
                    i.type === Nn.a.Action && (r = {
                        color: i.user.color
                    }, s = " ");
                    var o = null;
                    return a && (o = Object(ti.p)(i.timestamp)), je.createElement("div", {
                        className: We(n, "chat-line__message"),
                        style: r,
                        "data-a-target": "chat-line-message"
                    }, o, this.renderModerationIcons(), je.createElement(Yn.b, {
                        badgeSets: t,
                        badgesToRender: i.badges
                    }), je.createElement("button", {
                        onClick: this.usernameClickHandler,
                        className: "chat-line__username"
                    }, je.createElement(ei.a, {
                        userData: i.user
                    })), je.createElement("span", {
                        key: "separator"
                    }, s), this.renderMessageBody())
                }, t
            }(je.Component),
            ui = function(e) {
                return {
                    channelID: e.channelID,
                    onPushMessage: e.onPushMessage
                }
            },
            di = Object(Re.compose)(function(e) {
                return e
            }, Object(ii.a)(ui), function() {
                var e = this;
                return Object(Le.a)(ai, {
                    props: function(t) {
                        return {
                            onUnbanUser: function(n) {
                                return Se.__awaiter(e, void 0, void 0, function() {
                                    var e;
                                    return Se.__generator(this, function(i) {
                                        switch (i.label) {
                                            case 0:
                                                if (!t.mutate) return [3, 5];
                                                i.label = 1;
                                            case 1:
                                                return i.trys.push([1, 3, , 4]), [4, t.mutate(Object(Ge.a)({
                                                    channelID: t.ownProps.channelID,
                                                    bannedUserLogin: n
                                                }))];
                                            case 2:
                                                return i.sent(), t.ownProps.onPushMessage(Object(Mn.a)(ae(n))), [3, 4];
                                            case 3:
                                                return e = i.sent(), we.i.error(e, "Unable to ban user"), t.ownProps.onPushMessage(Object(Mn.a)(re())), [3, 4];
                                            case 4:
                                                return [3, 6];
                                            case 5:
                                                t.ownProps.onPushMessage(Object(Mn.a)(re())), i.label = 6;
                                            case 6:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }(), Object(Te.a)(void 0, se))(ci),
            pi = n(953),
            mi = n(954),
            hi = {
                badges: {
                    twitchbot: "1"
                },
                bits: 0,
                color: "#6441A5",
                displayName: "AutoMod",
                id: "automod",
                userID: "automod",
                username: "automod",
                userType: An.a.GlobalMod,
                emotes: null
            },
            fi = {
                VoHiYo: {
                    displayName: "VoHiYo",
                    id: "81274",
                    srcSet: "https://static-cdn.jtvnw.net/emoticons/v1/81274/1.0 1.0x, https://static-cdn.jtvnw.net/emoticons/v1/81274/2.0 2.0x, https://static-cdn.jtvnw.net/emoticons/v1/81274/3.0 3.0x",
                    token: "VoHiYo"
                }
            },
            gi = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isResolved: !1
                    }, t.allowAutoModRejectedMessage = function() {
                        t.setState({
                            isResolved: !0
                        }), t.props.allowRejectedChatMessage && t.props.message.type === Nn.a.AutoModRejectedPrompt && t.props.allowRejectedChatMessage(Object(Ge.a)({
                            id: t.props.message.rejectedMessage.id
                        }))
                    }, t.denyAutoModRejectedMessage = function() {
                        t.setState({
                            isResolved: !0
                        }), t.props.denyRejectedChatMessage && t.props.message.type === Nn.a.AutoModRejectedPrompt && t.props.denyRejectedChatMessage(Object(Ge.a)({
                            id: t.props.message.rejectedMessage.id
                        }))
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e;
                    switch (this.props.message.type) {
                        case Nn.a.AutoModRejectedPrompt:
                            e = oe(this.props.message.category);
                            break;
                        case Nn.a.AutoModMessageRejected:
                            e = Object(we.d)("Hey! Your message is being checked by mods and has not been sent.", "AutoModLine");
                            break;
                        case Nn.a.AutoModMessageAllowed:
                            e = Object(we.d)("Mods have allowed your message. Happy chatting!", "AutoModLine"), e += " VoHiYo";
                            break;
                        case Nn.a.AutoModMessageDenied:
                            e = Object(we.d)("Mods have removed your message.", "AutoModLine");
                            break;
                        default:
                            throw new Error("Invalid message type")
                    }
                    var t = Object(Bn.a)(e, hi, He.a, !1, fi);
                    switch (this.props.message.type) {
                        case Nn.a.AutoModRejectedPrompt:
                            if (this.state.isResolved) return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.c)());
                            var n = ["chat-line__message--alert", "chat-line__message--special", "chat-line__message--clearfix"];
                            return je.createElement(Ke.U, {
                                className: "chat-line__message"
                            }, je.createElement(Zn.a, {
                                badgeSets: this.props.badgeSets,
                                badgesToRender: t.badges
                            }), je.createElement(ei.a, {
                                userData: t.user
                            }), je.createElement("span", {
                                key: "separator"
                            }, ": "), Object(ti.f)(t.messageParts, this.props.currentUserDisplayName, this.props.currentUserLogin), je.createElement(Ke.U, {
                                key: "automod-prompt",
                                className: "chat-line__nested-component--float-right"
                            }, je.createElement(Ke.u, {
                                size: Ke.x.Small,
                                onClick: this.allowAutoModRejectedMessage,
                                type: Ke.z.Text
                            }, Object(we.d)("Allow", "AutoModLine")), je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, "•"), je.createElement(Ke.u, {
                                size: Ke.x.Small,
                                onClick: this.denyAutoModRejectedMessage,
                                type: Ke.z.Text
                            }, Object(we.d)("Deny", "AutoModLine"))), je.createElement(di, Se.__assign({}, this.props, {
                                isDeleted: !1,
                                showTimestamps: !1,
                                className: We(n),
                                message: this.props.message.rejectedMessage
                            })));
                        case Nn.a.AutoModMessageRejected:
                        case Nn.a.AutoModMessageAllowed:
                        case Nn.a.AutoModMessageDenied:
                            var i = ["chat-line__message", "chat-line__message--special", "chat-line__message--alert"];
                            return je.createElement(Ke.U, {
                                className: We(i)
                            }, je.createElement(Zn.a, {
                                badgeSets: this.props.badgeSets,
                                badgesToRender: t.badges
                            }), je.createElement(ei.a, {
                                userData: t.user
                            }), je.createElement("span", {
                                key: "separator"
                            }, ": "), Object(ti.f)(t.messageParts, this.props.currentUserDisplayName, this.props.currentUserLogin));
                        default:
                            throw new Error("Invalid message type")
                    }
                }, t
            }(je.Component),
            vi = Object(Re.compose)(Object(Le.a)(pi, {
                name: "allowRejectedChatMessage",
                options: {}
            }), Object(Le.a)(mi, {
                name: "denyRejectedChatMessage",
                options: {}
            }))(gi),
            bi = n(955),
            ki = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.message.params,
                        t = this.props.data,
                        n = t.channel,
                        i = t.loading,
                        a = t.error;
                    if (i || a) return null;
                    var r = Object(we.d)("{displayName} is raiding with a party of {viewerCount}.", {
                        displayName: je.createElement("strong", null, n.displayName),
                        viewerCount: je.createElement("strong", null, e.viewerCount)
                    }, "RaidIncomingMessage");
                    return je.createElement(Ke.U, {
                        className: "chat-line__raid",
                        "data-test-selector": "incoming-raid"
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        alignItems: Ke.c.Center
                    }, je.createElement(Ke.l, {
                        imageAlt: n.displayName,
                        imageSrc: n.profileImageURL,
                        size: 30
                    }), je.createElement(Ke.U, {
                        className: "c-text",
                        margin: {
                            left: 1
                        }
                    }, r)))
                }, t
            }(je.Component),
            yi = Object(Le.a)(bi, {
                options: function(e) {
                    return {
                        variables: {
                            channelLogin: e.message.params.login
                        }
                    }
                }
            })(ki),
            _i = function(e) {
                return je.createElement("span", null, le()[e.message.msgid])
            },
            Ci = n(502),
            Si = (n(956), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        drawerOpen: !1
                    }, t.renderBitsLoot = function(e) {
                        return je.createElement(Ke.U, {
                            key: e.quantity,
                            className: "chat-line__purchase-loot"
                        }, je.createElement(Je.a, {
                            bitsConfig: t.props.bitsConfig,
                            count: e.quantity,
                            withImage: !0
                        }))
                    }, t.toggleDrawer = function() {
                        t.setState(function(e) {
                            return {
                                drawerOpen: !e.drawerOpen
                            }
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e, t = this,
                        n = this.props.purchase,
                        i = n.crateLoot,
                        a = n.numCrates,
                        r = n.purchased;
                    if (a > 0) {
                        var s = Object(we.d)("{numCrates, plural, one {Plus # Twitch Crate with {lootCount} rewards!} other {Plus # Twitch Crates with {lootCount} rewards!}}", {
                            numCrates: a,
                            lootCount: i.length
                        }, "SharePurchaseLineRewardText");
                        e = je.createElement(Ke.U, {
                            className: "chat-line__purchase-reward-text",
                            margin: {
                                top: .5
                            }
                        }, s)
                    }
                    var o, l = i.map(function(e) {
                        switch (e.type) {
                            case Ci.a.Badge:
                                return t.renderBadgeLoot(e);
                            case Ci.a.Bits:
                                return t.renderBitsLoot(e);
                            case Ci.a.Emote:
                                return t.renderEmoteLoot(e);
                            case Ci.a.InGameContent:
                                return t.renderIGCLoot(e);
                            default:
                                return ""
                        }
                    });
                    if (i.length <= 2) o = 0 === i.length ? "" : je.createElement(Ke._17, {
                        className: "chat-line__purchase-loot-box",
                        alignItems: Ke.c.Center,
                        borderLeft: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        flexShrink: 0,
                        flexWrap: Ke.K.NoWrap,
                        justifyContent: Ke.T.Center,
                        padding: .5
                    }, l);
                    else if (this.state.drawerOpen) o = je.createElement("span", {
                        className: "chat-line__purchase-loot-toggle",
                        onClick: this.toggleDrawer,
                        "data-test-selector": "purchase-loot-toggle"
                    }, je.createElement(Ke._17, {
                        className: "chat-line__purchase-loot-box",
                        alignItems: Ke.c.Center,
                        borderLeft: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        flexShrink: 0,
                        flexWrap: Ke.K.NoWrap,
                        justifyContent: Ke.T.Center,
                        padding: .5
                    }, je.createElement(Ke._8, {
                        asset: Ke._9.GlyphArrUp
                    })));
                    else {
                        var c = "+" + (i.length - 1);
                        o = je.createElement("span", {
                            className: "chat-line__purchase-loot-toggle",
                            onClick: this.toggleDrawer,
                            "data-test-selector": "purchase-loot-toggle"
                        }, je.createElement(Ke._17, {
                            className: "chat-line__purchase-loot-box",
                            alignItems: Ke.c.Center,
                            borderLeft: !0,
                            display: Ke.H.Flex,
                            flexDirection: Ke.J.Row,
                            flexShrink: 0,
                            flexWrap: Ke.K.NoWrap,
                            justifyContent: Ke.T.Center,
                            padding: .5
                        }, l[0], je.createElement(Ke.Z, {
                            label: c,
                            type: Ke._0.Notification
                        })))
                    }
                    var u = i.length <= 2 || !this.state.drawerOpen ? "" : je.createElement(Ke._17, {
                        className: "chat-line__purchase-loot-drawer",
                        alignItems: Ke.c.Center,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        flexShrink: 0,
                        flexWrap: Ke.K.NoWrap,
                        justifyContent: Ke.T.End,
                        padding: .5,
                        "data-test-selector": "purchase-loot-drawer"
                    }, l);
                    return je.createElement(Ke._17, {
                        className: "chat-line__purchase",
                        elevation: 1,
                        margin: {
                            bottom: .5,
                            left: 2,
                            right: 2,
                            top: 0
                        }
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement(Ke.U, {
                        flexGrow: 0,
                        flexShrink: 0,
                        margin: .5
                    }, je.createElement("img", {
                        className: "chat-line__purchase-boxart",
                        src: r.boxart
                    })), je.createElement(Ke.U, {
                        flexGrow: 1,
                        margin: .5
                    }, je.createElement(Ke._17, {
                        fontSize: Ke.L.Size4
                    }, r.title), e), o), u)
                }, t.prototype.renderBadgeLoot = function(e) {
                    return je.createElement("img", {
                        key: e.img,
                        className: "chat-line__purchase-loot",
                        src: e.img
                    })
                }, t.prototype.renderEmoteLoot = function(e) {
                    var t = "//static-cdn.jtvnw.net/emoticons/v1/" + e.id + "/2.0";
                    return je.createElement("img", {
                        key: e.id,
                        className: "chat-line__purchase-loot",
                        src: t
                    })
                }, t.prototype.renderIGCLoot = function(e) {
                    return je.createElement("img", {
                        key: e.img,
                        className: "chat-line__purchase-loot",
                        src: e.img
                    })
                }, t
            }(je.Component)),
            Ei = Si,
            wi = (n(957), {
                timeout_success: "timeout_success",
                ban_success: "ban_success"
            }),
            Ni = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.message;
                    switch (e.type) {
                        case Nn.a.AutoModMessageRejected:
                        case Nn.a.AutoModMessageAllowed:
                        case Nn.a.AutoModMessageDenied:
                        case Nn.a.AutoModRejectedPrompt:
                            return je.createElement(vi, {
                                channelID: this.props.channelID,
                                message: e,
                                badgeSets: this.props.badgeSets,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                showModerationIcons: this.props.showModerationIcons,
                                currentUserLogin: this.props.currentUserLogin
                            });
                        case Nn.a.Connected:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status",
                                "data-a-target": "chat-welcome-message"
                            }, je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, Object(we.d)("Welcome to the chat room!", "ChatLine")));
                        case Nn.a.Disconnected:
                            return e.reason ? je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, Object(we.d)("You have been disconnected from chat for the following reason: {reason}", {
                                reason: e.reason
                            }, "ChatLine"))) : je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, Object(we.d)("Sorry, we were unable to connect to chat. Attempting to reconnect...", "ChatLine")));
                        case Nn.a.Hosting:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, Object(we.d)("Now hosting {channel}", {
                                channel: e.hostedChannel
                            }, "ChatLine")));
                        case Nn.a.Unhost:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, je.createElement(Ke._21, {
                                type: Ke._26.Span
                            }, Object(we.d)("No longer hosting.", "ChatLine")));
                        case Nn.a.Post:
                        case Nn.a.PostWithMention:
                        case Nn.a.Action:
                            return ue(e) ? je.createElement(di, {
                                channelID: this.props.channelID,
                                badgeSets: this.props.badgeSets,
                                message: e,
                                isDeleted: e.deleted,
                                showModerationIcons: this.props.showModerationIcons,
                                showTimestamps: this.props.showTimestamps,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                currentUserLogin: this.props.currentUserLogin,
                                onPushMessage: this.props.onPushMessage
                            }) : null;
                        case Nn.a.Ban:
                        case Nn.a.Timeout:
                            return this.props.isCurrentUserModerator ? je.createElement(Ke.U, {
                                className: "chat-line__moderation"
                            }, Object(ti.g)(e)) : null;
                        case Nn.a.Subscription:
                            return je.createElement(Ke.U, {
                                className: "chat-line__subscribe"
                            }, Object(ti.o)(e));
                        case Nn.a.SubGift:
                            return je.createElement(Ke.U, {
                                className: "chat-line__subscribe"
                            }, Object(ti.n)(e));
                        case Nn.a.Resubscription:
                            return je.createElement(Ke.U, {
                                className: "chat-line__subscribe"
                            }, Object(ti.j)(e, this.props.showTimestamps, this.props.currentUserDisplayName, this.props.currentUserLogin, this.props.badgeSets));
                        case Nn.a.RoomMods:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.k)(e.moderatorLogins));
                        case Nn.a.SlowMode:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.l)(e));
                        case Nn.a.SubscriberOnlyMode:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.m)(e));
                        case Nn.a.FollowerOnlyMode:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.d)(e));
                        case Nn.a.EmoteOnlyMode:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.b)(e));
                        case Nn.a.Clear:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.a)());
                        case Nn.a.Notice:
                            if (ce(e)) return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, je.createElement(_i, {
                                message: e
                            }));
                            if (this.props.isCurrentUserModerator) switch (e.msgid) {
                                case wi.timeout_success:
                                case wi.ban_success:
                                    return null
                            }
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.h)(e));
                        case Nn.a.Info:
                            return je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.e)(e));
                        case Nn.a.Purchase:
                            var t = e.message.user.isIntl ? e.message.user.userDisplayName + " (" + e.message.user.userLogin + ")" : e.message.user.userDisplayName;
                            return je.createElement(Ke.U, {
                                className: "chat-line__message--special"
                            }, je.createElement(Ke.U, {
                                className: "chat-line__status"
                            }, Object(ti.i)(t, e.purchase.purchased.title, e.purchase.numCrates)), je.createElement(di, {
                                channelID: this.props.channelID,
                                badgeSets: this.props.badgeSets,
                                message: e.message,
                                isDeleted: !1,
                                showModerationIcons: this.props.showModerationIcons,
                                showTimestamps: this.props.showTimestamps,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                currentUserLogin: this.props.currentUserLogin,
                                onPushMessage: this.props.onPushMessage
                            }), je.createElement(Ei, {
                                bitsConfig: e.bitsConfig,
                                purchase: e.purchase
                            }));
                        case Nn.a.Raid:
                            return je.createElement(yi, {
                                message: e
                            });
                        case Nn.a.Unraid:
                            return je.createElement(Ke.U, {
                                className: "chat-line__raid"
                            }, Object(ti.r)());
                        default:
                            return null
                    }
                }, t
            }(je.Component),
            Oi = n(904),
            Di = n(958),
            Ui = (n(960), "pinned-cheer--collapse"),
            Ii = /(\d+)$/,
            xi = we.i.withCategory("pinned-cheer"),
            Ti = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        cheerIsTall: !1,
                        recentCheerID: null,
                        recentCheerExpireTime: null
                    }, t.collapseCheer = !0, t.root = null, t.renderedMessage = null, t.recentCheerTimeout = 0, t.saveRenderedMessageRef = function(e) {
                        t.renderedMessage = e
                    }, t.saveRootRef = function(e) {
                        t.root = e
                    }, t.handleHeadlineClick = function() {
                        t.collapseCheer = !t.collapseCheer, t.root && t.root.classList.toggle(Ui, t.collapseCheer)
                    }, t.handleProgressExpired = function() {
                        xi.debug("setTimeout expired, forcing re-render"), t.forceUpdate()
                    }, t.onProgressAnimationEnd = function() {
                        xi.debug("Animation end event fired")
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.calcRecentCheerExpiry(this.props)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.calcRecentCheerExpiry(e)
                }, t.prototype.shouldComponentUpdate = function(e, t) {
                    var n = this.getDisplayData(this.props, this.state),
                        i = this.getDisplayData(e, t);
                    return (n.displayCheer && n.displayCheer.id) !== (i.displayCheer && i.displayCheer.id)
                }, t.prototype.componentDidUpdate = function() {
                    var e = this.getDisplayData(this.props, this.state),
                        t = e.isRecent,
                        n = e.remainingRecentCheerTime;
                    if (t && (clearTimeout(this.recentCheerTimeout), this.recentCheerTimeout = setTimeout(this.handleProgressExpired, n + 100)), this.renderedMessage) {
                        var i = this.renderedMessage.getElementsByClassName("pinned-cheer__rendered-message-inner");
                        if (i.length) {
                            var a = i[0].getBoundingClientRect(),
                                r = a.height > 42;
                            this.state.cheerIsTall !== r && this.setState({
                                cheerIsTall: r
                            })
                        }
                    }
                }, t.prototype.componentWillUnmount = function() {
                    clearTimeout(this.recentCheerTimeout)
                }, t.prototype.render = function() {
                    var e = this.getDisplayData(this.props, this.state),
                        t = e.isRecent,
                        n = e.remainingRecentCheerTime,
                        i = e.displayCheer,
                        a = e.isExpandable;
                    if (!i) return null;
                    for (var r = "", s = 0, o = 0, l = i.messageParts; o < l.length; o++) {
                        var c = l[o];
                        if (c.type === In.a.Emote && c.content.cheerAmount && c.content.alt) {
                            var u = c.content.alt.replace(Ii, "").toLowerCase();
                            s += c.content.cheerAmount, r ? r !== u && (r = "cheer") : r = u
                        }
                    }
                    var d, p = {
                            "pinned-cheer__rendered-message": !0,
                            "pinned-cheer__rendered-message--recent": t,
                            "pinned-cheer__rendered-message--top": !t
                        },
                        m = je.createElement(ei.a, {
                            userData: i.user
                        }),
                        h = je.createElement("div", {
                            ref: this.saveRenderedMessageRef,
                            className: We(p)
                        }, je.createElement(Ke._17, {
                            margin: {
                                x: 2
                            },
                            borderTop: !0
                        }), je.createElement(Ke.U, {
                            padding: {
                                y: .5
                            },
                            className: "pinned-cheer__rendered-message-inner"
                        }, je.createElement(Ni, {
                            channelID: this.props.channelID,
                            badgeSets: this.props.badgeData,
                            currentUserDisplayName: this.props.currentUserDisplayName,
                            currentUserLogin: this.props.currentUserLogin,
                            isCurrentUserModerator: !1,
                            message: i,
                            showModerationIcons: !1,
                            showTimestamps: !1
                        }))),
                        f = null;
                    if (t) d = je.createElement(Ke._21, {
                        type: Ke._26.Strong
                    }, Object(we.d)("Recent Cheer", "Bits--PinnedCheer"));
                    else {
                        d = je.createElement(Ke._21, {
                            type: Ke._26.Strong
                        }, Object(we.d)("Top Cheer by {user}", {
                            user: m
                        }, "Bits--PinnedCheer"), " :");
                        var g = Object(ti.f)(Object(He.c)(r + s.toString(), this.props.bitsConfig), this.props.currentUserDisplayName, this.props.currentUserLogin);
                        f = je.createElement(Ke.U, {
                            display: Ke.H.Inline,
                            margin: {
                                left: .5
                            }
                        }, g)
                    }
                    var v = (y = {
                            "pinned-cheer__bounding-box": !0
                        }, y[Ui] = this.collapseCheer, y),
                        b = {
                            "pinned-cheer__headline": !0,
                            "pinned-cheer__headline--clickable": a
                        },
                        k = null;
                    return t && (k = je.createElement(Ke.U, {
                        className: "pinned-cheer__progress-bar-placeholder"
                    }, je.createElement(Ke.U, {
                        className: "pinned-cheer__progress-bar",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        justifyContent: Ke.T.End
                    }, je.createElement(Ke._5, {
                        key: i.id,
                        countdown: n / 1e3,
                        size: Ke._6.ExtraSmall,
                        onCountdownEnd: this.onProgressAnimationEnd
                    })))), xi.debug("Rendering pinned cheer", {
                        remainingRecentCheerTime: n,
                        isRecent: t,
                        recentCheerExpireTime: this.state.recentCheerExpireTime
                    }), je.createElement(Ke.U, {
                        className: "pinned-cheer",
                        flexGrow: 0,
                        flexShrink: 0,
                        zIndex: Ke._38.Default
                    }, je.createElement("div", {
                        className: We(v),
                        ref: this.saveRootRef
                    }, je.createElement(Ke.P, {
                        padding: {
                            x: 2,
                            y: 1
                        },
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        flexWrap: Ke.K.NoWrap
                    }, je.createElement("div", {
                        className: We(b),
                        onClick: a ? this.handleHeadlineClick : void 0
                    }, je.createElement(Ke.U, {
                        flexGrow: 1,
                        flexShrink: 1,
                        display: Ke.H.Flex,
                        alignItems: Ke.c.Center
                    }, je.createElement(Ke._8, {
                        asset: t ? Ke._9.HourGlass : Ke._9.Trophy,
                        height: 18,
                        width: 18
                    }), je.createElement(Ke.U, {
                        margin: {
                            left: .5
                        },
                        display: Ke.H.Inline
                    }, d), f), je.createElement(Ke.U, {
                        className: "pinned-cheer__expand-caret",
                        flexShrink: 0,
                        flexGrow: 0,
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between,
                        alignItems: Ke.c.Center
                    }, a ? je.createElement(Ke._8, {
                        asset: Ke._9.AngleLeft
                    }) : null))), h, k));
                    var y
                }, t.prototype.calcRecentCheerExpiry = function(e) {
                    var t = e.recentCheer ? e.recentCheer.id : null;
                    e.recentTimeoutMs && this.state.recentCheerID !== t && this.setState({
                        recentCheerID: t,
                        recentCheerExpireTime: t ? Date.now() + e.recentTimeoutMs : null
                    })
                }, t.prototype.getDisplayData = function(e, t) {
                    var n = 0;
                    t.recentCheerExpireTime && (n = Math.max(0, t.recentCheerExpireTime - Date.now()));
                    var i = !!e.recentCheer && !!e.topCheer && e.recentCheer.id === e.topCheer.id,
                        a = !!n && !!e.recentCheer && !i;
                    return {
                        remainingRecentCheerTime: n,
                        isRecent: a,
                        displayCheer: a ? e.recentCheer : e.topCheer,
                        isExpandable: !a || t.cheerIsTall
                    }
                }, t = Se.__decorate([Object(Le.a)(Di, {
                    props: function(e) {
                        var t, n, i;
                        return e.data && e.data.user && e.data.user.cheer && (i = e.data.user.cheer.recentTimeoutMs, e.data.user.cheer.top && (t = Object(Oi.a)(e.data.user.cheer.top, e.ownProps.bitsConfig, e.ownProps.blockLinks)), e.data.user.cheer.recent && (n = Object(Oi.a)(e.data.user.cheer.recent, e.ownProps.bitsConfig, e.ownProps.blockLinks))), {
                            topCheer: t,
                            recentCheer: n,
                            recentTimeoutMs: i
                        }
                    },
                    options: function(e) {
                        return {
                            name: "data",
                            fetchPolicy: "network-only",
                            variables: {
                                channelID: e.channelID
                            }
                        }
                    }
                }), Object(Xn.a)(function(e) {
                    return {
                        query: Di,
                        variables: {
                            channelID: e.channelID
                        },
                        topic: Object($e.a)(e.channelID),
                        type: ze.c.BitsPinEvent,
                        mutator: function(t, n) {
                            if (n.user.cheer) {
                                var i = JSON.parse(t.msg);
                                if (i.channel_id === e.channelID) return xi.debug("Received pubsub update", {
                                    hasTopCheer: !!i.top && i.top.has_top_event,
                                    hasNewTopCheer: !n.user.cheer.top || n.user.cheer.top.id !== i.top.tags.msg_id,
                                    hasRecentCheer: !!i.recent && i.recent.has_recent_event,
                                    hasNewRecentCheer: !n.user.cheer.recent || n.user.cheer.recent.id !== i.recent.tags.msg_id
                                }), i.top && i.top.has_top_event ? n.user.cheer.top && n.user.cheer.top.id === i.top.tags.msg_id || (n.user.cheer.top = Object(Oi.c)(i.top)) : n.user.cheer.top = null, i.recent && i.recent.has_recent_event ? n.user.cheer.recent && n.user.cheer.recent.id === i.recent.tags.msg_id || (n.user.cheer.recent = Object(Oi.c)(i.recent), n.user.cheer.recentTimeoutMs = n.user.cheer.settings.recentTimeoutMs) : n.user.cheer.recent = null, n
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Fi = Ti,
            ji = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.getGiftingExperimentAssignment()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.bitsConfig && (e = this.state && this.state.pcheersV2Enabled ? null : je.createElement(Fi, {
                        badgeData: this.props.badgeData,
                        bitsConfig: this.props.bitsConfig,
                        blockLinks: this.props.blockLinks,
                        channelID: this.props.channelID,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        currentUserLogin: this.props.currentUserLogin
                    })), e
                }, t.prototype.getGiftingExperimentAssignment = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Se.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    e = "off", n.label = 1;
                                case 1:
                                    return n.trys.push([1, 3, , 4]), [4, we.n.experiments.getAssignment("TWILIGHT_LEADERBOARDS")];
                                case 2:
                                    return e = n.sent(), [3, 4];
                                case 3:
                                    return t = n.sent(), e = "off", [3, 4];
                                case 4:
                                    return this.setState({
                                        pcheersV2Enabled: "on" === e
                                    }), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            Li = ji,
            Ri = n(40),
            Ai = n(18),
            Mi = n(440),
            Bi = (n(961), function(e) {
                var t = void 0 !== e.progress,
                    n = je.createElement("img", {
                        className: "cheer-badge__image",
                        src: e.badge.image1x,
                        alt: e.badge.title,
                        srcSet: e.badge.image1x + " 1x, " + e.badge.image2x + " 2x, " + e.badge.image4x + " 4x"
                    });
                if (!t) return n;
                var i = e.progress ? Math.max(Math.round(18 * (1 - e.progress)), 1) : 18;
                return je.createElement("div", {
                    className: "cheer-badge__progress-container"
                }, n, je.createElement("div", {
                    className: "cheer-badge__progress-overlay",
                    style: {
                        width: i + "px"
                    },
                    "data-test-selector": "cheer-progress"
                }))
            }),
            Pi = n(260),
            Hi = function(e) {
                var t;
                e.selfBitsBadge && (e.selfBitsBadge.current || e.selfBitsBadge.next) && (t = je.createElement(Ke.U, {
                    padding: {
                        bottom: .5
                    }
                }, e.selfBitsBadge.current && je.createElement(Ke.U, {
                    display: Ke.H.Inline,
                    margin: {
                        right: .5
                    }
                }, je.createElement(Bi, {
                    badge: e.selfBitsBadge.current
                })), e.selfBitsBadge.next && je.createElement(Bi, {
                    badge: e.selfBitsBadge.next,
                    progress: e.selfBitsBadge.progress
                }), e.selfBitsBadge.nextBits && Object(we.d)("Next badge unlocks in {bitsToNextBadge} Bits!", {
                    bitsToNextBadge: e.selfBitsBadge.nextBits - e.selfBitsBadge.totalBits
                }, "Bits--BalanceFooter")));
                var n = Object(we.d)("{bitsGem} Log in to see your Bits balance", {
                    bitsGem: je.createElement(Je.a, {
                        count: 100,
                        withImage: !0,
                        bitsConfig: e.bitsConfig,
                        themeOverride: Me.a.Dark
                    })
                }, "Bits--BalanceFooter");
                return void 0 !== e.balance && null !== e.balance && (n = Object(we.d)("You have {currentBits}", {
                    currentBits: je.createElement(Je.a, {
                        count: e.balance,
                        withImage: !0,
                        withText: !0,
                        bitsConfig: e.bitsConfig,
                        themeOverride: Me.a.Dark
                    })
                }, "Bits--BalanceFooter")), je.createElement(Ke.U, {
                    flexGrow: 1,
                    padding: 1,
                    className: "bits-balance-footer"
                }, t, je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexGrow: 1,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Between
                }, je.createElement("div", null, n), je.createElement(Ke.u, {
                    disabled: void 0 === e.balance || void 0 !== e.balance && e.balance > Pi.j,
                    onClick: e.onClickGetBits,
                    "data-test-selector": "get-bits-button",
                    "data-a-target": "get-bits-button"
                }, Object(we.d)("Get Bits", "Bits--BalanceFooter"))))
            },
            Vi = function() {
                return je.createElement(Ke._17, {
                    className: "t-bits-card",
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Center,
                    textAlign: Ke._22.Center,
                    padding: 1,
                    border: !0,
                    background: Ke.m.Base,
                    elevation: 3,
                    fullWidth: !0
                }, je.createElement(Ke._21, {
                    italic: !0
                }, Object(we.d)("Have no fear, your Bits inventory is safe! The ability to Cheer will return shortly.", "BitsCard")))
            },
            Wi = n(875),
            qi = n(850),
            zi = function(e) {
                return je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexGrow: 1,
                    flexDirection: Ke.J.Column,
                    justifyContent: Ke.T.Center,
                    alignItems: Ke.c.Center,
                    padding: 1
                }, je.createElement(Ke.U, {
                    padding: {
                        top: 2,
                        bottom: 2
                    }
                }, je.createElement(Ke._21, {
                    type: Ke._26.H5,
                    color: Ke.F.Link,
                    bold: !0
                }, Object(we.d)("Cheering Supports Your Streamer!", "Bits--CheermoteIntro"))), je.createElement(Ke._21, null, Object(we.d)("Select a Cheermote to start your Cheer", "Bits--CheermoteIntro")), je.createElement(Ke.U, {
                    padding: {
                        top: 2,
                        bottom: 1
                    }
                }, je.createElement("a", {
                    href: "#",
                    onClick: e.onClickHelp,
                    "data-test-selector": "help-link"
                }, Object(we.d)("How do I cheer?", "Bits--CheermoteIntro"))))
            },
            Gi = n(824),
            $i = function(e) {
                var t = e.headline || e.prefix + (e.tier || "");
                if (e.tournament && e.tier <= 0) {
                    var n = e.tournament.teams.find(function(t) {
                        return t.id === e.prefix
                    });
                    n && (t = n.name + " - " + e.prefix)
                }
                var i = e.tier,
                    a = Gi.c.ImageAndText;
                return e.event && !e.tier && (a = Gi.c.ImageOnly, i = 1), je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    padding: 1
                }, je.createElement(Ke._21, {
                    type: Ke._26.H4,
                    bold: !0
                }, t), je.createElement(Gi.a, {
                    prefix: e.prefix,
                    amount: i,
                    bitsConfig: e.bitsConfig,
                    display: a
                }))
            },
            Ji = (n(962), function(e) {
                var t = null;
                e.minToCheer > 1 && (t = je.createElement(Ke._21, {
                    color: Ke.F.Alt2,
                    italic: !0
                }, Object(we.d)("This channel has a Cheer minimum of {minToCheer} Bits", {
                    minToCheer: e.minToCheer
                }, "Bits--CheermoteTierIntro")));
                var n = null;
                return e.minToPin > 0 && (n = je.createElement(Ke._21, {
                    color: Ke.F.Alt2,
                    italic: !0
                }, Object(we.d)("Pinning your Cheer is a minimum of {minToPin} Bits", {
                    minToPin: e.minToPin
                }, "Bits--CheermoteTierIntro"))), je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexGrow: 1,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Center,
                    padding: 1,
                    className: "cheermote-tier-intro"
                }, je.createElement(Ke.U, {
                    padding: {
                        x: 4
                    },
                    margin: {
                        bottom: 1
                    }
                }, je.createElement(Ke._21, {
                    color: Ke.F.Alt2
                }, Object(we.d)("Cheermotes have multiple tiers, rollover below to see each one!", "Bits--CheermoteTierIntro"))), t, n)
            }),
            Ki = n(963),
            Qi = n.n(Ki),
            Yi = n(868),
            Xi = (n(964), function(e) {
                return Object(Yi.d)({
                    action: Yi.a.View,
                    type: Yi.c.BitsIntro,
                    channelId: e.channelID
                }), je.createElement(Ke.U, {
                    "data-test-selector": "crate-intro"
                }, je.createElement(Ke.U, {
                    padding: {
                        x: 1,
                        top: 2,
                        bottom: 1
                    }
                }, je.createElement(Ke._21, {
                    fontSize: Ke.L.Size4,
                    bold: !0
                }, Object(we.d)("Share the Holiday Cheer!", "Crates"))), je.createElement(Ke._17, {
                    className: "crates-holiday-background",
                    background: Ke.m.Alt,
                    padding: 1,
                    margin: {
                        y: 1
                    },
                    display: Ke.H.Flex,
                    justifyContent: Ke.T.Around,
                    alignItems: Ke.c.End,
                    borderTop: !0,
                    borderBottom: !0
                }, je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Long,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "treeRaid"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602042/1.0"
                }))), je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Medium,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "SnowGlitch"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/589120/1.0"
                }))), je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Short,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "nutRage"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/589092/1.0"
                }))), je.createElement("img", {
                    src: Qi.a,
                    height: "50",
                    width: "50"
                }), je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Short,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "rudolphWUT"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602049/1.0"
                }))), je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Medium,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "gingyNOO"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602048/1.0"
                }))), je.createElement(Ke.e, {
                    type: Ke.i.BounceIn,
                    delay: Ke.f.Long,
                    enabled: !0
                }, je.createElement(Ke._30, {
                    label: "bulbRIP"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602045/1.0"
                })))), je.createElement(Ke.U, {
                    padding: 1
                }, je.createElement(Ke._21, {
                    type: Ke._26.P
                }, Object(we.d)("Cheer any amount to support your streamer, and get a holiday gift! Cheer {minBits, number} Bits or more, and others in chat can get a gift too!", {
                    minBits: 250
                }, "Crates")), je.createElement(Ke._21, {
                    type: Ke._26.Strong
                }, je.createElement("a", {
                    href: "https://blog.twitch.tv/bring-the-zombie-apocalypse-to-twitch-7a5bf4ecff42",
                    target: "_blank",
                    rel: "noreferrer noopener"
                }, Object(we.d)("Details", "Crates")))))
            }),
            Zi = n(965),
            ea = n.n(Zi),
            ta = function(e) {
                return Object(Yi.d)({
                    action: Yi.a.View,
                    type: Yi.c.BitsIntro,
                    channelId: e.channelID
                }), je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexGrow: 1,
                    flexDirection: Ke.J.Column,
                    justifyContent: Ke.T.Center,
                    alignItems: Ke.c.Center
                }, je.createElement(Ke.U, {
                    "data-test-selector": "crate-intro"
                }, je.createElement(Ke._21, {
                    type: Ke._26.H4,
                    bold: !0
                }, Object(we.d)("The Zombie Apocalypse is Coming!", "Crates--Bits-Intro")), je.createElement("figure", {
                    className: "crates-intro-banner"
                }, je.createElement("img", {
                    src: ea.a
                })), je.createElement(Ke.U, {
                    margin: {
                        y: 1
                    },
                    padding: {
                        x: 1
                    }
                }, je.createElement(Ke._21, null, Object(we.d)("For a limited time, Cheer at least {numBits, number} Bits and get a Halloween Crate with one of {numEmotes, number} temporary zombie emotes. Collect all {numEmotes, number} to permanently unlock Zombie Lord Kappa!", {
                    numBits: 250,
                    numEmotes: 6
                }, "Crates--Bits-Intro"), " ", je.createElement("a", {
                    href: "https://blog.twitch.tv/bring-the-zombie-apocalypse-to-twitch-7a5bf4ecff42",
                    target: "_blank",
                    rel: "noreferrer noopener"
                }, Object(we.d)("Learn More", "Crates--Bits-Intro")))), je.createElement(Ke._21, null, Object(we.d)("Select a Cheermote to start your Cheer", "Crates--CheermoteIntro"), je.createElement("br", null), je.createElement("a", {
                    href: "#",
                    onClick: e.onClickHelp,
                    "data-test-selector": "help-link"
                }, Object(we.d)("How do I cheer?", "Crates--CheermoteIntro")))))
            },
            na = (n(966), function() {
                return je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    className: "hgc-2017-intro"
                }, je.createElement(Ke.P, {
                    padding: 1,
                    attachTop: !0,
                    attachLeft: !0,
                    position: Ke._2.Absolute
                }, je.createElement("img", {
                    className: "hgc-cheer__brand-banner",
                    src: Pi.h + "/hgc-logo-large.png"
                })), je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    className: "hgc-cheer__cheer-intro",
                    textAlign: Ke._22.Center
                }, je.createElement(Ke._21, {
                    color: Ke.F.Alt,
                    type: Ke._26.P
                }, Object(we.d)("Select the logo of the team you want to Cheer for, followed by the number of Bits you want to use and any message you’d like to add.", "HGC2017--CheerIntro"))))
            });
        ! function(e) {
            e.CratesHalloween = "CratesHalloween", e.CratesChristmas = "CratesChristmas"
        }(Ct || (Ct = {}));
        var ia, aa = function(e) {
                switch (e.event) {
                    case Pi.i:
                        return je.createElement(na, null);
                    case Ct.CratesHalloween:
                        return je.createElement(ta, {
                            onClickHelp: e.onClickHelp,
                            channelID: e.channelID
                        });
                    case Ct.CratesChristmas:
                        return je.createElement(Xi, {
                            onClickHelp: e.onClickHelp,
                            channelID: e.channelID
                        });
                    default:
                        return je.createElement(zi, {
                            onClickHelp: e.onClickHelp
                        })
                }
            },
            ra = n(70),
            sa = n(967),
            oa = n.n(sa),
            la = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = "";
                    if (this.props.amount < 250) {
                        var t = 250 - this.props.amount;
                        e = Object(we.d)("{bitsToGo, plural, one {Cheer # more Bit to share gifts with chat!} other {Cheer # more Bits to share gifts with chat!}}", {
                            bitsToGo: t
                        }, "Crates")
                    } else e = Object(we.d)("Your Cheer will share gifts with chat!", "Crates");
                    return je.createElement(Ke._17, {
                        className: "crate-christmas-2017-reminder",
                        background: Ke.m.Alt,
                        borderTop: !0,
                        padding: 1
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Inline,
                        margin: {
                            right: .5
                        }
                    }, je.createElement("img", {
                        src: oa.a,
                        height: "22",
                        width: "22"
                    })), je.createElement(Ke._21, {
                        type: Ke._26.Strong
                    }, e))
                }, t
            }(je.Component),
            ca = la,
            ua = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    switch (this.props.event) {
                        case Ct.CratesChristmas:
                            return je.createElement(ca, {
                                amount: this.props.amount
                            });
                        default:
                            return null
                    }
                }, t
            }(je.Component),
            da = ua,
            pa = function(e) {
                var t = e.prefixes.map(function(t, n) {
                    if (t.alt && t.cheerAmount) return je.createElement(Ke.P, {
                        key: n,
                        padding: {
                            x: 1
                        }
                    }, je.createElement("li", null, je.createElement(Gi.a, {
                        prefix: t.alt,
                        amount: t.cheerAmount > Pi.l ? Pi.l : t.cheerAmount,
                        bitsConfig: e.bitsConfig,
                        size: Gi.b.Small
                    })))
                });
                return je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Row,
                    alignItems: Ke.c.End,
                    justifyContent: Ke.T.Center,
                    flexWrap: Ke.K.Wrap,
                    margin: {
                        top: 1
                    },
                    className: "pending-cheer-list"
                }, t)
            },
            ma = (n(968), function(e) {
                var t;
                if (e.prefixes && 1 === e.prefixes.length) {
                    var n = e.prefixes[0].alt;
                    n && (t = je.createElement(Ke.U, {
                        padding: {
                            top: 2
                        }
                    }, je.createElement(Gi.a, {
                        prefix: n,
                        amount: e.amount > Pi.l ? Pi.l : e.amount,
                        bitsConfig: e.bitsConfig
                    })))
                } else if (e.prefixes) t = je.createElement(Ke.U, {
                    margin: {
                        top: 1
                    }
                }, je.createElement(ra.b, {
                    className: "pending-cheer__scroll-container"
                }, je.createElement(pa, {
                    prefixes: e.prefixes,
                    bitsConfig: e.bitsConfig
                })));
                else {
                    var i = Object(we.d)("You are using a total of {totalBits} Bits to cheer in {channelName}!", {
                        totalBits: je.createElement("strong", null, e.amount),
                        channelName: e.channelDisplayName
                    }, "Bits--PendingCheer");
                    t = je.createElement(Ke.U, {
                        padding: {
                            top: 2,
                            x: 5
                        }
                    }, je.createElement(Ke._21, {
                        color: Ke.F.Alt2,
                        "data-a-target": "total-bits-message"
                    }, i))
                }
                var a = null;
                e.purchaseMore && e.purchaseMore > 0 && (a = je.createElement(Ke._21, {
                    "data-a-target": "need-more-bits-error"
                }, Object(we.d)("Please purchase {neededBits} more Bits to Cheer", {
                    neededBits: e.purchaseMore
                }, "Bits--PendingCheer")));
                var r = null;
                if (e.largestCheermote > Pi.l) {
                    var s = Object(we.d)("{maximumCheerSize} is the largest Cheer emote, add another emote to Cheer louder!", {
                        maximumCheerSize: Pi.l
                    }, "Bits--PendingCheer");
                    a = je.createElement(Ke._21, {
                        "data-a-target": "max-cheer-bits-error"
                    }, s)
                }
                if (e.amount < e.minToCheer) {
                    var o = Object(we.d)("Add {moreBitsAmount} Bits to reach this channel's minimum Cheer.", {
                        moreBitsAmount: e.minToCheer - e.amount
                    }, "Bits--PendingCheer");
                    a = je.createElement(Ke._21, {
                        "data-a-target": "min-cheer-bits-error"
                    }, o)
                }
                if (e.smallestCheermote < e.minPerEmote) {
                    var l = Object(we.d)("This channel has set a minimum of {minPerEmote} Bits to use a Cheer emote in chat.", {
                        minPerEmote: e.minPerEmote
                    }, "Bits--PendingCheer");
                    r = je.createElement(Ke._21, {
                        color: Ke.F.Alt2,
                        italic: !0,
                        "data-a-target": "min-emote-bits-error"
                    }, l)
                }
                var c = je.createElement(Gi.a, {
                    amount: e.amount,
                    prefix: Pi.f,
                    bitsConfig: e.bitsConfig,
                    display: Gi.c.InlineTextOnly,
                    size: Gi.b.Medium
                });
                return je.createElement(Ke.U, null, je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    padding: 1,
                    className: "pending-cheer"
                }, je.createElement(Ke._21, {
                    fontSize: Ke.L.Size4,
                    bold: !0
                }, Object(we.d)("Cheering {totalBits} Bits", {
                    totalBits: c
                }, "Bits--PendingCheer")), !r && t, !r && a && je.createElement(Ke.U, {
                    padding: {
                        top: 1
                    }
                }, a), r && je.createElement(Ke.U, {
                    padding: {
                        top: 3,
                        x: 3
                    }
                }, r)), !r && !a && je.createElement(da, {
                    event: e.event,
                    amount: e.amount
                }))
            }),
            ha = n(375),
            fa = (n(969), {
                themed: !0,
                dark: {
                    "1x": Pi.b + "/dark/animated/promo/intro.gif"
                },
                light: {
                    "1x": Pi.b + "/light/animated/promo/intro.gif"
                }
            }),
            ga = function() {
                return je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Center,
                    flexGrow: 1,
                    className: "bits-sending"
                }, je.createElement(Ke.U, {
                    padding: {
                        bottom: 1
                    }
                }, je.createElement(ha.a, {
                    sources: fa
                })), je.createElement(Ke._21, {
                    italic: !0
                }, Object(we.d)("Your Cheer is currently processing.", "Bits--SendingBits")))
            },
            va = (n(970), function(e) {
                var t = Object(we.d)("You are using {totalBits} Bits to cheer in {channelName}'s chat.", {
                        totalBits: e.totalBits,
                        channelName: e.channelDisplayName
                    }, "Bits--UndoPrompt"),
                    n = null;
                if (e.prefixes && e.prefixes.length > 1) n = je.createElement(ra.b, {
                    className: "bits-undo-prompt__scroll-container"
                }, je.createElement(Ke.U, {
                    margin: {
                        top: 1
                    }
                }, je.createElement(pa, {
                    prefixes: e.prefixes,
                    bitsConfig: e.bitsConfig
                })));
                else {
                    var i = e.prefixes[0].alt;
                    i && (n = je.createElement(Ke.U, {
                        padding: {
                            bottom: 1
                        }
                    }, je.createElement(Gi.a, {
                        prefix: i,
                        amount: e.totalBits,
                        bitsConfig: e.bitsConfig
                    })))
                }
                return je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexDirection: Ke.J.Column,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Center,
                    flexGrow: 1,
                    padding: 1,
                    className: "bits-undo-prompt"
                }, n, je.createElement(Ke._21, null, t))
            }),
            ba = function(e) {
                var t = we.b.get("crate_trickster_launch", Wi.a.Off),
                    n = t === Wi.a.On || t === Wi.a.StaffOnly && e.isStaff ? Ct.CratesChristmas : null,
                    i = e.event || n;
                if (e.isSending) return e.totalBits < Pi.m ? je.createElement(ga, null) : je.createElement(va, {
                    bitsConfig: e.bitsConfig,
                    channelDisplayName: e.displayName,
                    prefixes: e.currentCheers,
                    totalBits: e.totalBits
                });
                if (e.hoveredCheermote) return je.createElement($i, {
                    event: e.event,
                    tournament: e.tournament,
                    bitsConfig: e.bitsConfig,
                    prefix: e.hoveredCheermote,
                    tier: e.hoveredTier
                });
                if (e.totalBits) return je.createElement(ma, {
                    bitsConfig: e.bitsConfig,
                    prefixes: e.currentCheers,
                    amount: e.totalBits,
                    channelDisplayName: e.displayName,
                    purchaseMore: e.bitsBalance && e.totalBits - e.bitsBalance,
                    largestCheermote: e.largestCheermote,
                    smallestCheermote: e.smallestCheermote,
                    minPerEmote: e.emoteMinimumBits,
                    minToCheer: e.cheerMinimumBits,
                    event: i
                });
                if (e.helpRequested) return je.createElement(qi.a, null);
                if (e.chosenCheermote) {
                    var a = e.recentMinimumBits,
                        r = e.cheerMinimumBits;
                    return je.createElement(Ji, {
                        minToPin: a,
                        minToCheer: r
                    })
                }
                return i ? je.createElement(aa, {
                    event: i,
                    onClickHelp: e.showHelp,
                    channelID: e.channelID
                }) : je.createElement(zi, {
                    onClickHelp: e.showHelp
                })
            },
            ka = n(843),
            ya = (n(971), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        startingIndex: 0
                    }, t.handleCheermoteHover = function(e) {
                        var n = e.currentTarget.getAttribute("data-key");
                        n && t.props.onHover(n)
                    }, t.handleCheermoteUnhover = function() {
                        t.props.onHoverLeave()
                    }, t.handleCheermoteClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-key");
                        n && t.props.onClick(n)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = this;
                    if (this.props.hide) return null;
                    var t = this.props.cheermotes,
                        n = t.map(function(t, n) {
                            if (!t) return je.createElement("li", {
                                key: "null-cheermote-" + n
                            }, je.createElement("button", {
                                className: "cheermote-list__item-button",
                                disabled: !0
                            }, je.createElement("div", {
                                className: "cheermote-list__placeholder"
                            })));
                            var i = "";
                            t.key && (i = t.key.replace(":", ""));
                            var a = null;
                            e.props.showCheermoteAmount && t.key && (a = je.createElement(Gi.a, {
                                bitsConfig: e.props.bitsConfig,
                                prefix: "",
                                amount: +t.key.split(":")[1],
                                display: Gi.c.TextOnly,
                                size: Gi.b.Small
                            }));
                            var r = je.createElement("li", {
                                key: t.key,
                                className: "cheermote-list__cheermote"
                            }, je.createElement("button", {
                                className: "cheermote-list__item-button",
                                "data-key": t.key,
                                onMouseEnter: e.handleCheermoteHover,
                                onMouseLeave: e.handleCheermoteUnhover,
                                onClick: e.handleCheermoteClick,
                                "data-a-target": "cheermote-" + i
                            }, je.createElement("img", {
                                alt: t.key,
                                src: e.props.darkModeEnabled ? t.imgSrcDark : t.imgSrc
                            })), a);
                            return e.props.showCheermoteAmount ? r : je.createElement(Ke.P, {
                                key: t.key,
                                margin: {
                                    bottom: 1
                                }
                            }, r)
                        }),
                        i = null;
                    this.props.showCheermoteAmount && (i = je.createElement(Ke.U, {
                        padding: {
                            right: 2
                        },
                        fullWidth: !0,
                        className: "cheermote-list__back-button"
                    }, je.createElement(Ke.u, {
                        "data-a-target": "bits-card-back-button",
                        type: Ke.z.Text,
                        fullWidth: !0,
                        onClick: this.props.onClose
                    }, Object(we.d)("Show All Cheermotes", "CheermoteCarousel"))));
                    var a = je.createElement(Ke.P, {
                            className: "cheermote-list__cheermotes",
                            display: Ke.H.Flex,
                            flexWrap: Ke.K.Wrap,
                            flexDirection: Ke.J.Row,
                            justifyContent: this.props.showCheermoteAmount ? Ke.T.Between : Ke.T.Start,
                            alignItems: Ke.c.End,
                            padding: {
                                bottom: 1
                            }
                        }, je.createElement("ul", null, n, i)),
                        r = We("cheermote-list", {
                            "cheermote-list__tier-selection": this.props.showCheermoteAmount
                        }, {
                            "cheermote-list__cheermote-selection": !this.props.showCheermoteAmount
                        });
                    return this.props.showCheermoteAmount ? je.createElement(Ke.U, {
                        flexGrow: 1,
                        overflow: Ke.Y.Hidden,
                        className: r
                    }, a) : je.createElement(Ke.U, {
                        flexGrow: 1,
                        overflow: Ke.Y.Hidden,
                        className: r
                    }, je.createElement(ra.b, null, a))
                }, t
            }(je.Component)),
            _a = Object(Te.a)(de)(ya),
            Ca = n(130),
            Sa = (n(972), function(e) {
                return je.createElement(Ke.U, {
                    flexGrow: 1,
                    padding: 1
                }, je.createElement(Ke.U, {
                    display: Ke.H.Flex,
                    flexGrow: 1,
                    alignItems: Ke.c.Center,
                    justifyContent: Ke.T.Between
                }, je.createElement(Je.a, {
                    count: e.balance || 0,
                    withImage: !0,
                    withText: !0,
                    bitsConfig: e.bitsConfig,
                    themeOverride: Me.a.Dark
                }), je.createElement(Ke.P, {
                    display: Ke.H.Flex,
                    alignItems: Ke.c.Center
                }, je.createElement("a", {
                    href: Object(Ca.a)("/blizzheroes/esports/hgc-2017")
                }, je.createElement(Ke.P, {
                    margin: {
                        right: .5
                    }
                }, je.createElement("img", {
                    src: Pi.h + "/nexus-icon/1x.png",
                    className: "hgc-inventory-footer__nexus-icon"
                })), je.createElement("span", {
                    className: "hgc-inventory-footer__progress-link"
                }, Object(we.d)("Check Progress!", "HGC2017--FooterCheckProgress")))), je.createElement(Ke.u, {
                    disabled: void 0 === e.balance || void 0 !== e.balance && e.balance > Pi.j,
                    onClick: e.onClickGetBits
                }, Object(we.d)("Get Bits", "HGC2017--BalanceFooter"))))
            }),
            Ea = function(e) {
                return e.event === Pi.i ? je.createElement(Sa, {
                    bitsConfig: e.bitsConfig,
                    onClickGetBits: e.onClickGetBits,
                    balance: e.balance
                }) : je.createElement(Hi, {
                    bitsConfig: e.bitsConfig,
                    onClickGetBits: e.onClickGetBits,
                    balance: e.balance,
                    selfBitsBadge: e.selfBitsBadge
                })
            },
            wa = function(e) {
                return je.createElement(Ke.U, {
                    flexGrow: 1
                }, je.createElement(Ke.U, {
                    className: "undo-prompt__footer",
                    padding: 1,
                    display: Ke.H.Flex,
                    justifyContent: Ke.T.Between
                }, je.createElement(Ke.u, {
                    onClick: e.onCancel || void 0,
                    type: Ke.z.Hollow,
                    overlay: !0,
                    "data-test-selector": "cancel-button"
                }, Object(we.d)("Cancel", "Bits--UndoPrompt")), je.createElement(Ke.u, {
                    onClick: e.onConfirm || void 0,
                    "data-test-selector": "confirm-button"
                }, Object(we.d)("Send", "Bits--UndoPrompt"))), je.createElement(Ke._5, {
                    size: Ke._6.ExtraSmall,
                    countdown: Pi.n.UNDO_PROMPT_DURATION / 1e3
                }))
            },
            Na = n(821),
            Oa = n(815),
            Da = n(973),
            Ua = (n(974), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        chosenCheermote: null,
                        hoveredCheermote: null,
                        hoveredTier: 0,
                        helpRequested: !1,
                        totalBits: 0,
                        largestCheermote: 0,
                        smallestCheermote: 0,
                        buyingBits: !1
                    }, t.unhoverTimeout = 0, t.lastRefetchTime = 0, t.handleTierHover = function(e) {
                        clearTimeout(t.unhoverTimeout);
                        var n = e.split(":");
                        n.length < 2 || (t.setState({
                            hoveredTier: +n[1],
                            hoveredCheermote: n[0]
                        }), t.props.trackBitsCardInteraction(Oa.a.PreviewEmote, {
                            emoteType: n[0],
                            emoteLevel: +n[1]
                        }))
                    }, t.handleUnhover = function() {
                        t.unhoverTimeout = setTimeout(t.clearHovered, 500)
                    }, t.clearHovered = function() {
                        t.setState({
                            hoveredTier: 0,
                            hoveredCheermote: null
                        })
                    }, t.handleTierClick = function(e) {
                        t.props.onClickCheermote(e.split(":").join(""))
                    }, t.handleCheermoteHover = function(e) {
                        clearTimeout(t.unhoverTimeout), t.setState({
                            hoveredCheermote: e,
                            hoveredTier: 0
                        }), t.props.trackBitsCardInteraction(Oa.a.PreviewEmote, {
                            emoteType: e,
                            emoteLevel: 100
                        })
                    }, t.handleCheermoteClick = function(e) {
                        t.setState({
                            chosenCheermote: e,
                            hoveredCheermote: null,
                            hoveredTier: 0
                        })
                    }, t.clearChosenCheermote = function() {
                        t.setState({
                            chosenCheermote: null,
                            hoveredCheermote: null,
                            hoveredTier: 0
                        })
                    }, t.showHelp = function(e) {
                        e.preventDefault(), t.setState({
                            helpRequested: !0
                        })
                    }, t.closeHelp = function() {
                        return t.setState({
                            helpRequested: !1
                        })
                    }, t.handleClickBuy = function() {
                        t.setState({
                            buyingBits: !0
                        }), t.props.trackBitsCardInteraction(Oa.a.BuyMain)
                    }, t.handleCloseBuy = function() {
                        return t.setState({
                            buyingBits: !1
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    var t = this.props.visible || !!this.props.currentCheers.length,
                        n = e.visible || !!e.currentCheers.length;
                    if (!t && n) {
                        var i = Date.now();
                        i - this.lastRefetchTime > 1e3 && this.props.data && e.data && !e.data.loading && (this.lastRefetchTime = i, e.data.refetch())
                    }
                    if (t && !n && this.setState({
                            chosenCheermote: null,
                            hoveredCheermote: null,
                            hoveredTier: 0,
                            buyingBits: !1
                        }), this.props.currentCheers !== e.currentCheers) {
                        var a = Object(Na.a)(e.currentCheers),
                            r = a.total,
                            s = a.largestCheermote,
                            o = a.smallestCheermote;
                        this.setState({
                            totalBits: r,
                            largestCheermote: s,
                            smallestCheermote: o
                        })
                    }
                }, t.prototype.render = function() {
                    var e = this;
                    if (!this.props.visible && !this.props.currentCheers.length) return null;
                    var t, n = {
                        border: !0,
                        background: Ke.m.Base,
                        elevation: 3,
                        fullWidth: !0
                    };
                    if (this.props.currentCheers.length || (t = je.createElement("button", {
                            className: "t-bits-card__close t-bits-card__top-controls",
                            onClick: this.props.onUserClose,
                            "data-test-selector": "cancel-button",
                            "data-a-target": "bits-card-close-button"
                        }, je.createElement(Ke._8, {
                            asset: Ke._9.Close,
                            height: 11,
                            width: 11
                        }))), !this.props.data || this.props.data.loading) return je.createElement(Ke._17, Se.__assign({
                        className: "t-bits-card",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        alignItems: Ke.c.Center,
                        justifyContent: Ke.T.Center
                    }, n), je.createElement(Ke.X, {
                        delay: 0
                    }), je.createElement(Ke.U, {
                        padding: {
                            top: 2
                        }
                    }, je.createElement(Ke._21, {
                        italic: !0
                    }, Object(we.d)("Fetching Bits", "BitsCard"))));
                    if (this.props.data.error || !this.props.bitsConfig) return je.createElement(Vi, null);
                    if (this.props.data.currentUser && this.props.data.currentUser.login === this.props.channelLogin) return je.createElement(Ke._17, Se.__assign({
                        className: "t-bits-card",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        alignItems: Ke.c.Center,
                        justifyContent: Ke.T.Center,
                        textAlign: Ke._22.Center,
                        padding: {
                            top: 2,
                            x: 1,
                            bottom: 1
                        }
                    }, n), t, je.createElement(Ke._21, {
                        color: Ke.F.Error,
                        italic: !0
                    }, Object(we.d)("You cannot Cheer in your own channel.", "BitsCard")));
                    if (this.state.buyingBits) return je.createElement(ka.a, {
                        bitsConfig: this.props.bitsConfig,
                        channelLogin: this.props.channelLogin,
                        closeAllBits: this.props.onUserClose,
                        onClose: this.handleCloseBuy,
                        trackBitsCardInteraction: this.props.trackBitsCardInteraction,
                        location: Oa.b.ChatTooltip
                    });
                    var i = null,
                        a = this.state.helpRequested && !this.props.currentCheers.length,
                        r = null;
                    if (this.props.data.user.cheer.settings.event && (r = this.props.data.user.cheer.settings.event.toLowerCase().replace("_", "-")), this.state.chosenCheermote) {
                        var s = this.props.bitsConfig.indexedActions[this.state.chosenCheermote.toLowerCase()];
                        if (s) {
                            var o = s.orderedTiers.filter(function(e) {
                                return e.bits <= Pi.l
                            }).map(function(e) {
                                return {
                                    imgSrc: e.indexedImages.LIGHT.static.get(2),
                                    imgSrcDark: e.indexedImages.DARK.static.get(2),
                                    key: s.prefix + ":" + e.bits
                                }
                            }).reverse();
                            i = je.createElement(_a, {
                                bitsConfig: this.props.bitsConfig,
                                hide: a,
                                cheermotes: o,
                                showCheermoteAmount: !0,
                                event: r,
                                onHover: this.handleTierHover,
                                onHoverLeave: this.handleUnhover,
                                onClick: this.handleTierClick,
                                onClose: this.clearChosenCheermote
                            })
                        }
                    }
                    if (!i) {
                        var o = this.props.bitsConfig.orderedActions.filter(function(e) {
                            return e.type !== Pi.d
                        }).map(function(t) {
                            var n = Pi.g;
                            e.props.data && e.props.data.user.cheer.settings.event && (n = 1);
                            var i = t.indexedTiers.get(n);
                            return i ? {
                                imgSrc: i.indexedImages.LIGHT.static.get(2),
                                imgSrcDark: i.indexedImages.DARK.static.get(2),
                                key: t.prefix
                            } : null
                        });
                        i = je.createElement(_a, {
                            bitsConfig: this.props.bitsConfig,
                            hide: a,
                            cheermotes: o,
                            event: r,
                            onHover: this.handleCheermoteHover,
                            onHoverLeave: this.handleUnhover,
                            onClick: this.handleCheermoteClick
                        })
                    }
                    var l = null;
                    this.props.isSending ? this.state.totalBits >= Pi.m && (l = je.createElement(wa, {
                        onCancel: this.props.onCancelSend,
                        onConfirm: this.props.onConfirmSend
                    })) : l = r ? je.createElement(Ea, {
                        event: r,
                        selfBitsBadge: this.props.data.user.self && this.props.data.user.self.bitsBadge,
                        bitsConfig: this.props.bitsConfig,
                        onClickGetBits: this.handleClickBuy,
                        balance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance
                    }) : je.createElement(Hi, {
                        selfBitsBadge: this.props.data.user.self && this.props.data.user.self.bitsBadge,
                        bitsConfig: this.props.bitsConfig,
                        onClickGetBits: this.handleClickBuy,
                        balance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance
                    });
                    var c;
                    a && (c = je.createElement("button", {
                        className: "t-bits-card__go-back t-bits-card__top-controls",
                        onClick: this.closeHelp,
                        "data-a-target": "bits-card-back-button"
                    }, je.createElement(Ke._8, {
                        asset: Ke._9.Play,
                        height: 8
                    }), " ", Object(we.d)("Back", "BitsCard")));
                    var u = We("t-bits-card", {
                        "t-bits-card--tall": !this.props.isSending
                    });
                    return je.createElement(Ke._17, Se.__assign({
                        className: u,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        "data-a-target": "bits-card"
                    }, n), !this.props.isSending && c, t, je.createElement(Ke._17, {
                        className: "t-bits-card__contents",
                        display: Ke.H.Flex,
                        flexGrow: 0,
                        flexDirection: Ke.J.Column,
                        alignContent: Ke.b.Stretch,
                        textAlign: Ke._22.Center,
                        borderBottom: !this.props.isSending
                    }, je.createElement(ba, {
                        bitsBalance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance,
                        bitsConfig: this.props.bitsConfig,
                        cheerMinimumBits: this.props.data.user.cheer.settings.cheerMinimumBits,
                        chosenCheermote: this.state.chosenCheermote,
                        currentCheers: this.props.currentCheers,
                        displayName: this.props.data.user.displayName,
                        emoteMinimumBits: this.props.data.user.cheer.settings.emoteMinimumBits,
                        event: r,
                        helpRequested: this.state.helpRequested,
                        hoveredCheermote: this.state.hoveredCheermote,
                        hoveredTier: this.state.hoveredTier,
                        isSending: this.props.isSending,
                        largestCheermote: this.state.largestCheermote,
                        recentMinimumBits: this.props.data.user.cheer.settings.recentMinimumBits,
                        smallestCheermote: this.state.smallestCheermote,
                        totalBits: this.state.totalBits,
                        tournament: this.props.data.user.tournament,
                        channelID: this.props.channelID,
                        showHelp: this.showHelp,
                        isStaff: this.props.isStaff
                    })), !this.props.isSending && i, l && je.createElement(Ke.U, {
                        className: "t-bits-card__footer",
                        display: Ke.H.Flex
                    }, l))
                }, t = Se.__decorate([Object(Le.a)(Da, {
                    name: "data",
                    skip: function(e) {
                        return !e.channelID
                    },
                    options: function(e) {
                        return {
                            variables: {
                                name: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                })], t)
            }(je.Component)),
            Ia = Ua,
            xa = n(11),
            Ta = n(134),
            Fa = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.autocompleteType = Ta.a.Hashtag, t.canBeTriggeredByTab = !1, t.getMatches = function(e) {
                        if (!e.startsWith("#")) return null;
                        if (null !== t.props.hashTags.edges) {
                            return t.props.hashTags.edges.filter(function(t) {
                                return t.node.id.includes(e)
                            }).map(function(n) {
                                return {
                                    current: e,
                                    replacement: n.node.id,
                                    element: t.genearateHashtagDisplay(n.node.id)
                                }
                            })
                        }
                        return null
                    }, t.genearateHashtagDisplay = function(e) {
                        return je.createElement(Ke.U, {
                            padding: {
                                right: .5
                            },
                            key: "hashtag:" + e
                        }, je.createElement(Ke._21, null, e))
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.unregister = this.context.registerAutocompleteProvider(this)
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister()
                }, t.prototype.render = function() {
                    return null
                }, t.contextTypes = {
                    registerAutocompleteProvider: xa.func
                }, t
            }(je.Component),
            ja = n(888),
            La = n(48),
            Ra = n(383),
            Aa = 5,
            Ma = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.autocompleteType = Ta.a.Mention, n.canBeTriggeredByTab = !0, n.getMatches = function(e, t) {
                        return t || e.startsWith("@") ? n.getMentions(e, t) : null
                    }, n.getMentions = function(e, t) {
                        var i = t ? e : e.substring(1),
                            a = new RegExp("^" + i, "i");
                        return n.state.sortedChatMembers.filter(function(e) {
                            return a.test(e.userLogin) || a.test(e.userDisplayName)
                        }).slice(0, Aa).map(function(i) {
                            return {
                                current: e,
                                replacement: (t ? "" : "@") + i.userDisplayName,
                                element: n.renderMention(i)
                            }
                        })
                    }, n.renderMention = function(e) {
                        return je.createElement("span", null, Object(La.a)(e.userLogin, e.userDisplayName))
                    }, n.sortChatMembers = function(e) {
                        var t = [Se.__assign({}, Object(Ra.a)(e.channelDisplayName, e.channelLogin), {
                                userID: e.channelID,
                                userLogin: e.channelLogin,
                                userType: An.a.Owner
                            })],
                            n = e.chatMembers;
                        return n.sort(function(e, t) {
                            return e.userLogin < t.userLogin ? -1 : e.userLogin > t.userLogin ? 1 : 0
                        }), t.concat(n)
                    }, n.state = {
                        sortedChatMembers: n.sortChatMembers(t)
                    }, n
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.unregister = this.context.registerAutocompleteProvider(this)
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.chatMembers === e.chatMembers && this.props.channelDisplayName === e.channelDisplayName && this.props.channelLogin === e.channelLogin && this.props.channelID === e.channelID || this.setState({
                        sortedChatMembers: this.sortChatMembers(e)
                    })
                }, t.prototype.render = function() {
                    return null
                }, t.contextTypes = {
                    registerAutocompleteProvider: xa.func
                }, t
            }(je.Component),
            Ba = function() {
                return je.createElement(Ke.p, {
                    direction: Ke.q.TopLeft,
                    offsetY: "11px",
                    show: !0
                }, je.createElement(Ke.U, {
                    padding: 1,
                    "data-test-selector": "raids-settings-tooltip"
                }, Object(we.d)("If a raid is offensive, moderate in chat settings.", "RaidReportingChat")))
            },
            Pa = {
                Embed: "embed",
                Web: "web"
            },
            Ha = n(975),
            Va = this,
            Wa = function(e) {
                return Se.__awaiter(Va, void 0, void 0, function() {
                    var t, n;
                    return Se.__generator(this, function(i) {
                        switch (i.label) {
                            case 0:
                                return [4, we.n.apollo.client.query({
                                    query: Ha,
                                    variables: {
                                        id: e.channelID
                                    }
                                })];
                            case 1:
                                return t = i.sent(), t.data || we.i.warn("ChatEvent query failed; Chat tracking data sent may be incomplete."), n = Se.__assign({}, Object(qn.a)(e), {
                                    broadcast_id: we.m.getVideoPlayerTrackingData().broadcastID,
                                    channel_id: e.channelID,
                                    game: t.data && t.data.user.stream && t.data.user.stream.game && t.data.user.stream.game.name,
                                    live: !!(t.data && t.data.user.stream && t.data.user.stream.id.length > 0),
                                    partner: t.data && t.data.user.isPartner,
                                    play_session_id: we.m.getVideoPlayerTrackingData().playSessionID,
                                    player: e.player,
                                    sub_only_mode: e.subOnlyMode
                                }), we.m.track(Zt.SpadeEventType.Chat, n), [2]
                        }
                    })
                })
            },
            qa = function(e) {
                var t = Se.__assign({}, Object(qn.a)(e), {
                    mentioned_user_display_name: e.mentionedUserDisplayName,
                    user: e.userLogin
                });
                we.m.track(Zt.SpadeEventType.ChatMentionUsed, t)
            },
            za = n(855),
            Ga = n(384),
            $a = n(976),
            Ja = n(977),
            Ka = /\S/,
            Qa = 3;
        ! function(e) {
            e[e.Bits = 0] = "Bits", e[e.Emotes = 1] = "Emotes", e[e.None = 2] = "None"
        }(ia || (ia = {}));
        var Ya, Xa, Za = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.cancelDelayedSend = null, n.confirmDelayedSend = null, n.hasConfirmedInEmbed = !1, n.hasSeenConfirmationPrompt = !1, n.setChatInputRef = function(e) {
                        return n.chatInputRef = e
                    }, n.setAutocompleteInputRef = function(e) {
                        return n.autocompleteInputRef = e
                    }, n.onChatSettingsToggle = function(e) {
                        n.handleRaidReportingToggle(e), e || Object(za.b)({
                            channelLogin: n.props.channelLogin,
                            isHostMode: n.props.isHostMode
                        })
                    }, n.handleRaidReportingToggle = function(e) {
                        n.props.raidReceived && (n.state.showRaidsSettingsTooltip && (n.setState({
                            showRaidsSettingsTooltip: !1
                        }), we.k.set("raidsModerationTooltipsSeenNumTimes", Qa)), e && n.setState({
                            showRaidsFollowerOnlyTooltip: !1
                        }))
                    }, n.onKeyDown = function(e) {
                        var t = e.charCode || e.keyCode;
                        switch (n.props.onKeyDown && t !== Ri.a.Enter && n.props.onKeyDown(e), t) {
                            case Ri.a.Enter:
                                return void(e.shiftKey || (e.preventDefault(), n.onMessageSend()));
                            case Ri.a.Esc:
                                return void(n.state.showCard === ia.Bits && n.setState({
                                    showCard: ia.None
                                }));
                            case Ri.a.Tab:
                                return void e.preventDefault();
                            default:
                                return
                        }
                    }, n.onMessageValueUpdate = function(e) {
                        n.setState({
                            value: e
                        })
                    }, n.onInputFocus = function() {
                        n.props.onInputFocus && n.props.onInputFocus(), n.state.hasInteractedOrPageload || n.setState({
                            hasInteractedOrPageload: !0
                        })
                    }, n.onMouseEnterInput = function() {
                        n.state.hasInteractedOrPageload || n.setState({
                            hasInteractedOrPageload: !0
                        })
                    }, n.onChatCommand = function(e) {
                        n.props.onChatCommand(e), n.trackChatEvent()
                    }, n.confirmEmbedAction = function(e, t, i) {
                        var a = n,
                            r = a.hasConfirmedInEmbed;
                        if (a.hasSeenConfirmationPrompt) return r;
                        var s = window.confirm(n.confirmationMessage(e, t, i));
                        return n.hasSeenConfirmationPrompt = !0, n.hasConfirmedInEmbed = s, s
                    }, n.confirmationMessage = function(e, t, n) {
                        return Object(we.d)('Hi {displayName}. You are attempting to send "{message}" in {channelLogin}\'s chat via an embedded version of Twitch Chat. Are you sure you want to do this? This setting will persist until you refresh the page', {
                            displayName: e,
                            message: t,
                            channelLogin: n
                        }, "ChatInput")
                    }, n.onMessageSend = function() {
                        return Se.__awaiter(n, void 0, void 0, function() {
                            var e, t, n, i, a, r, s = this;
                            return Se.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        return this.props.authToken ? this.props.channelID ? (e = Ka.test(this.state.value)) ? this.state.isSendingBits ? (we.i.debug("[ChatInput] Supressing chat message send. Bits spending is still in progress."), [2]) : this.props.isEmbedded && (this.props.isCurrentUserModerator || this.props.data && this.props.data.currentUser && this.props.data.currentUser.isPartner) && this.props.sessionUser && !this.confirmEmbedAction(this.props.sessionUser.displayName, this.state.value || "", this.props.channelLogin) ? (we.i.debug("[ChatInput] Embed Confirmation check failed. Not sending message"), [2]) : this.props.data && this.props.data.currentUser ? (t = Object(Na.a)(this.state.messageCheers), 0 === t.total ? (this.sendRegularMessage(), [2]) : this.props.data.user ? this.props.data.user.cheer ? (n = Object(Na.f)({
                                            messageBits: t,
                                            balance: this.props.data.currentUser.bitsBalance,
                                            cheerMinimumBits: this.props.data.user.cheer.settings.cheerMinimumBits,
                                            emoteMinimumBits: this.props.data.user.cheer.settings.emoteMinimumBits,
                                            inputValue: this.state.value
                                        }), n.canSpend ? this.props.sendCheer ? (this.setState({
                                            isSendingBits: !0
                                        }), t.total >= Pi.m ? [4, new Promise(function(e) {
                                            var t = setTimeout(e, Pi.n.UNDO_PROMPT_DURATION),
                                                n = function(n) {
                                                    void 0 === n && (n = !1), clearTimeout(t), s.cancelDelayedSend = null, s.confirmDelayedSend = null, e(n)
                                                };
                                            s.cancelDelayedSend = function() {
                                                return n(!0)
                                            }, s.confirmDelayedSend = function() {
                                                return n(!1)
                                            }
                                        })] : [3, 2]) : (we.i.warn("[Chat Input] No GraphQL mutation for sending cheers attached."), [2]) : (we.i.warn("[Chat Input] Spending bits forbidden.", n), [2])) : (we.i.warn("[Chat Input] Cheer is null."), [2]) : (we.i.warn("[Chat Input] User is null."), [2])) : (this.sendRegularMessage(), [2]) : (we.i.debug("[ChatInput] Supressing chat message send. Input failed to pass validation.", {
                                            hasSendableInput: e,
                                            value: this.state.value
                                        }), [2]) : (we.i.warn("[ChatInput] Attempt to send a message before channel ID"), [2]) : (this.props.login(), [2]);
                                    case 1:
                                        if (i = o.sent()) return this.setState({
                                            isSendingBits: !1
                                        }), this.chatInputRef.focus(), [2];
                                        o.label = 2;
                                    case 2:
                                        a = Object(Ai.a)(), o.label = 3;
                                    case 3:
                                        return o.trys.push([3, 5, , 6]), [4, this.props.sendCheer({
                                            variables: {
                                                input: {
                                                    id: a,
                                                    targetID: this.props.channelID,
                                                    bits: t.total,
                                                    content: this.state.value
                                                }
                                            }
                                        })];
                                    case 4:
                                        return o.sent(), [3, 6];
                                    case 5:
                                        return r = o.sent(), this.setState({
                                            isSendingBits: !1
                                        }), this.chatInputRef.focus(), [2];
                                    case 6:
                                        return this.setState({
                                            isSendingBits: !1,
                                            showCard: ia.None,
                                            value: ""
                                        }), this.chatInputRef.focus(), this.autocompleteInputRef.setValue(""), [2]
                                }
                            })
                        })
                    }, n.onEmotePickerToggle = function() {
                        n.setState(function(e) {
                            if (!e.messageCheers.length) return {
                                showCard: e.showCard === ia.Emotes ? ia.None : ia.Emotes
                            }
                        })
                    }, n.onBitsIconClick = function() {
                        n.state.showCard === ia.Bits ? n.trackBitsCardInteraction(Oa.a.CloseCard) : n.trackBitsCardInteraction(Oa.a.OpenCard), n.setState({
                            showCard: n.state.showCard === ia.Bits ? ia.None : ia.Bits
                        })
                    }, n.onShowViewersList = function() {
                        n.state.showCard !== ia.None && n.setState({
                            showCard: ia.None
                        }), n.props.showViewersList()
                    }, n.onBitsClose = function() {
                        n.state.showCard === ia.Bits && n.setState({
                            showCard: ia.None
                        }), n.trackBitsCardInteraction(Oa.a.CloseCard)
                    }, n.onClickEmote = function(e) {
                        var t = n.state.value;
                        n.state.value && n.state.value.length > 0 && !n.state.value.endsWith(" ") && (t += " "), t += e + " ", n.autocompleteInputRef.setValue(t)
                    }, n.onEmotePickerDataLoaded = function(e) {
                        e && n.setState({
                            showEmotePickerButton: !0
                        })
                    }, n.trackBitsCardInteraction = function(e, t) {
                        var i = {
                            actionName: e,
                            emoteType: t && t.emoteType,
                            emoteLevel: t && t.emoteLevel,
                            location: t && t.location,
                            displayedBalance: n.props.data && n.props.data.currentUser && n.props.data.currentUser.bitsBalance || 0
                        };
                        Object(Oa.h)(i)
                    }, n.state = {
                        hasInteractedOrPageload: t.firstPageLoaded,
                        isSendingBits: !1,
                        messageCheers: [],
                        showBuyBits: !1,
                        showCard: ia.None,
                        showEmotePickerButton: !!t.authToken,
                        showRaidsSettingsTooltip: !1,
                        showRaidsFollowerOnlyTooltip: !1,
                        value: ""
                    }, n
                }
                return Se.__extends(t, e), t.prototype.componentWillUpdate = function(e, t) {
                    var n = this;
                    if (t.value !== this.state.value && this.props.bitsConfig) {
                        var i = [];
                        Object(He.c)(t.value, this.props.bitsConfig).forEach(function(e) {
                            e.type === In.a.Emote && i.push(e.content)
                        }), i.length && t.showCard === ia.Emotes && this.setState({
                            showCard: ia.None
                        }), this.setState({
                            messageCheers: i
                        })
                    }
                    this.props.isCurrentUserModerator && !this.props.raidReceived && e.raidReceived && (we.k.get("raidsModerationTooltipsSeenNumTimes", 0), Number(we.k.get("raidsModerationTooltipsSeenNumTimes", 0)) < Qa && this.setState({
                        showRaidsSettingsTooltip: !0,
                        showRaidsFollowerOnlyTooltip: !0
                    }, function() {
                        setTimeout(function() {
                            we.k.set("raidsModerationTooltipsSeenNumTimes", we.k.get("raidsModerationTooltipsSeenNumTimes", 0) + 1), n.setState({
                                showRaidsSettingsTooltip: !1
                            })
                        }, 2e4)
                    }))
                }, t.prototype.componentWillReceiveProps = function(e) {
                    !this.props.firstPageLoaded && e.firstPageLoaded && this.setState({
                        hasInteractedOrPageload: !0
                    })
                }, t.prototype.render = function() {
                    var e = [];
                    this.props.bitsConfig && e.push(je.createElement(Ke.v, {
                        key: "bits",
                        icon: this.props.data && this.props.data.user && this.props.data.user.cheer && this.props.data.user.cheer.settings.event ? Ke._9.HGCNexus : Ke._9.Bits,
                        ariaLabel: Object(we.d)("Bits", "ChatInput"),
                        type: Ke.w.Secondary,
                        onClick: this.onBitsIconClick,
                        "data-a-target": "bits-button"
                    })), this.state.showEmotePickerButton && e.push(je.createElement(Ga.b, {
                        key: "emote-picker",
                        onClick: this.onEmotePickerToggle
                    }));
                    var t = null;
                    this.state.hasInteractedOrPageload && (t = je.createElement(Ga.c, {
                        channelOwnerID: this.props.channelID,
                        onClickEmote: this.onClickEmote,
                        onLoad: this.onEmotePickerDataLoaded,
                        toggleVisibility: this.onEmotePickerToggle,
                        visible: this.state.showCard === ia.Emotes
                    }));
                    var n = null;
                    this.state.hasInteractedOrPageload && this.props.bitsConfig && (n = je.createElement(Ia, {
                        bitsConfig: this.props.bitsConfig,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        currentCheers: this.state.messageCheers,
                        isSending: this.state.isSendingBits,
                        isStaff: this.props.isStaff,
                        onCancelSend: this.cancelDelayedSend,
                        onClickCheermote: this.onClickEmote,
                        onConfirmSend: this.confirmDelayedSend,
                        onUserClose: this.onBitsClose,
                        trackBitsCardInteraction: this.trackBitsCardInteraction,
                        visible: this.state.showCard === ia.Bits
                    }));
                    var i = null;
                    return this.props.data.user && null !== this.props.data.user.cheer && null !== this.props.data.user.cheer.hashtags && this.state.messageCheers.length > 0 && (i = je.createElement(Fa, {
                        hashTags: this.props.data.user.cheer.hashtags
                    })), je.createElement(Ke.U, {
                        className: "chat-input",
                        padding: {
                            x: 2,
                            bottom: 2
                        }
                    }, je.createElement(Ke.P, {
                        position: Ke._2.Relative,
                        zIndex: Ke._38.Above
                    }, je.createElement("div", {
                        onMouseEnter: this.onMouseEnterInput
                    }, t, n, je.createElement(Mi.b, {
                        componentType: Mi.a.TextArea,
                        suggestionSource: Mi.c.Chat,
                        onValueUpdate: this.onMessageValueUpdate,
                        onFocus: this.onInputFocus,
                        onKeyDown: this.onKeyDown,
                        componentRefDelegate: this.setChatInputRef,
                        refDelegate: this.setAutocompleteInputRef,
                        paddingRight: 30 * e.length,
                        placeholder: Object(we.d)("Send a message", "ChatInput"),
                        noResize: !0,
                        "data-a-target": "chat-input",
                        "data-test-selector": "chat-input",
                        disabled: this.state.isSendingBits,
                        containerElement: this.props.containerElement
                    }, je.createElement(Mi.d, {
                        emotes: this.props.emotes
                    }), je.createElement(Ma, {
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.props.chatMembers
                    }), i), je.createElement(Ke.U, {
                        position: Ke._2.Absolute,
                        attachRight: !0,
                        attachTop: !0
                    }, e))), je.createElement(Ke.U, {
                        className: "chat-input__buttons-container",
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Between,
                        margin: {
                            top: 1
                        }
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row
                    }, je.createElement(Ke.U, {
                        position: Ke._2.Relative
                    }, je.createElement(ja.a, {
                        disabled: this.props.isEmbedded,
                        onToggle: this.onChatSettingsToggle,
                        channelLogin: this.props.channelLogin,
                        isHostMode: this.props.isHostMode,
                        authToken: this.props.authToken,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        onChatCommand: this.onChatCommand,
                        isPopout: this.props.isPopout,
                        channelID: this.props.channelID,
                        sawFirstRaidPrompt: this.state.showRaidsFollowerOnlyTooltip
                    }), this.state.showRaidsSettingsTooltip ? je.createElement(Ba, null) : null), je.createElement(Ke.v, {
                        ariaLabel: Object(we.d)("Viewer list", "ChatInput"),
                        "data-a-target": "chat-viewer-list",
                        "data-test-selector": "chat-viewer-list",
                        icon: Ke._9.ViewerList,
                        onClick: this.onShowViewersList
                    })), this.renderSendButton()))
                }, t.prototype.renderSendButton = function() {
                    var e;
                    return e = this.state.value && null !== Object(Qt.n)(this.state.value) ? Object(we.d)("Whisper", "ChatInput") : Object(we.d)("Chat", "ChatInput"), je.createElement(Ke.u, {
                        onClick: this.onMessageSend,
                        "data-a-target": "chat-send-button",
                        "data-test-selector": "chat-send-button",
                        disabled: this.state.isSendingBits
                    }, e)
                }, t.prototype.sendRegularMessage = function() {
                    this.props.onSendMessage && this.props.onSendMessage(this.state.value) && (this.trackChatEvent(), this.trackMentions(), this.autocompleteInputRef.setValue(""), this.setState({
                        showCard: ia.None
                    }))
                }, t.prototype.trackChatEvent = function() {
                    Wa({
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        isHostMode: this.props.isHostMode,
                        player: this.props.isPopout ? Pa.Embed : Pa.Web,
                        subOnlyMode: this.props.isSubsOnlyModeEnabled
                    })
                }, t.prototype.trackMentions = function() {
                    if (!this.state.value || !this.props.sessionUser) return void we.i.warn("[ChatInput] trackMentions was called in a nonsensical state.");
                    for (var e = Object(Bn.c)(this.state.value, this.props.sessionUser.displayName, !1), t = 0, n = e; t < n.length; t++) {
                        var i = n[t];
                        i.type === In.a.Mention && i.content.recipient !== i.content.sender && qa({
                            channelLogin: this.props.channelLogin,
                            isHostMode: this.props.isHostMode,
                            mentionedUserDisplayName: i.content.recipient,
                            userLogin: this.props.sessionUser.login
                        })
                    }
                }, t
            }(je.Component),
            er = Object(Re.compose)(Object(Le.a)(Ja, {
                name: "sendCheer"
            }), Object(Le.a)($a), Object(kt.c)("ChatInput", {
                autoReportInteractive: !0
            }), Object(Te.a)(pe, me))(Za),
            tr = n(854),
            nr = function(e) {
                var t = e.data.twitch_metadata.clip_metadata,
                    n = {
                        clip: {
                            slug: t.slug,
                            id: t.id,
                            url: e.data.request_url,
                            title: e.data.title,
                            thumbnailURL: e.data.thumbnail_url,
                            curator: {
                                displayName: e.data.author_name,
                                __typename: "User"
                            },
                            broadcaster: {
                                displayName: t.channel_display_name,
                                __typename: "User"
                            },
                            game: null,
                            __typename: "Clip"
                        }
                    };
                return t.game && (n.clip.game = {
                    displayName: t.game,
                    __typename: "Game"
                }), n
            },
            ir = n(28),
            ar = (n(978), ["scroll", "wheel", "mousewheel", "DOMMouseScroll", "keyup", "mousedown"]),
            rr = 10,
            sr = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isAutoScrolling: !0
                    }, t.saveScrollRef = function(e) {
                        return t.scroll = e
                    }, t.handleScrollEvent = function(e) {
                        if (t.scroll && (e.which > 0 || "mousedown" === e.type || "mousewheel" === e.type || "wheel" === e.type)) {
                            t.scroll.scrollContent.scrollHeight - t.scroll.scrollContent.scrollTop - t.scroll.scrollContent.offsetHeight <= rr ? t.setState({
                                isAutoScrolling: !0
                            }) : t.setState({
                                isAutoScrolling: !1
                            })
                        }
                    }, t.handleClickMoreMessages = function() {
                        t.setState({
                            isAutoScrolling: !0
                        }, t.scrollToBottom)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this;
                    ar.forEach(function(t) {
                        return e.scroll.scrollContent.addEventListener(t, e.handleScrollEvent)
                    })
                }, t.prototype.componentWillUnmount = function() {
                    var e = this;
                    ar.forEach(function(t) {
                        return e.scroll.scrollContent.removeEventListener(t, e.handleScrollEvent)
                    })
                }, t.prototype.componentDidUpdate = function(e) {
                    this.state.isAutoScrolling && this.props.messages !== e.messages && this.scrollToBottom()
                }, t.prototype.render = function() {
                    var e = this,
                        t = this.props.messages,
                        n = t.map(function(t) {
                            return je.createElement(Ni, {
                                badgeSets: e.props.badgeSets,
                                channelID: e.props.channelID,
                                isCurrentUserModerator: e.props.isCurrentUserModerator,
                                message: t,
                                key: t.id,
                                showModerationIcons: e.props.showModerationIcons && !e.props.isEmbedded,
                                showTimestamps: e.props.showTimestamps,
                                currentUserDisplayName: e.props.currentUserDisplayName,
                                currentUserLogin: e.props.currentUserLogin,
                                onPushMessage: e.props.onPushMessage
                            })
                        });
                    return je.createElement(Ke.U, {
                        refDelegate: this.props.containerRef,
                        className: "chat-list",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        flexWrap: Ke.K.NoWrap,
                        overflow: Ke.Y.Hidden,
                        flexGrow: 1
                    }, je.createElement(ir.b, {
                        className: "chat-list__lines",
                        scrollRef: this.saveScrollRef,
                        "data-a-target": "chat-scroller"
                    }, je.createElement(Ke.U, {
                        flexGrow: 1,
                        fullHeight: !0,
                        padding: {
                            bottom: 1
                        }
                    }, n)), je.createElement(Ke.U, {
                        className: "chat-list__more-messages-placeholder",
                        position: Ke._2.Relative,
                        margin: {
                            x: 2
                        }
                    }, this.moreMessages()))
                }, t.prototype.moreMessages = function() {
                    return this.state.isAutoScrolling ? null : je.createElement(Ke.P, {
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center,
                        alignItems: Ke.c.Center,
                        position: Ke._2.Absolute,
                        padding: .5,
                        attachBottom: !0,
                        fullWidth: !0
                    }, je.createElement("div", {
                        className: "chat-list__more-messages",
                        onClick: this.handleClickMoreMessages
                    }, Object(we.d)("More messages below.", "ChatList")))
                }, t.prototype.scrollToBottom = function() {
                    this.scroll.scrollContent.scrollTop = this.scroll.scrollContent.scrollHeight
                }, t
            }(je.Component),
            or = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    var t = e.pubsub.messages.chatRichEmbedInfo;
                    t && this.props.pubsub.messages.chatRichEmbedInfo !== t && we.n.apollo.client.writeQuery({
                        query: tr,
                        variables: {
                            slug: t.data.twitch_metadata.clip_metadata.slug
                        },
                        data: nr(t)
                    })
                }, t.prototype.render = function() {
                    return je.createElement(sr, {
                        channelID: this.props.channelID,
                        badgeSets: this.props.badgeSets,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        channelLogin: this.props.channelLogin,
                        onPushMessage: this.props.onPushMessage,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        messages: this.props.messages,
                        showModerationIcons: this.props.showModerationIcons,
                        showTimestamps: this.props.showTimestamps,
                        currentUserLogin: this.props.currentUserLogin,
                        containerRef: this.props.containerRef
                    })
                }, t
            }(je.Component),
            lr = Object(Ae.compose)(Object(Te.a)(he), Object(qe.a)([{
                skip: function(e) {
                    return !e.channelID
                },
                topic: function(e) {
                    return e.channelID ? Object($e.h)(e.channelID) : ""
                },
                mapMessageTypesToProps: (Ya = {}, Ya[ze.c.StreamChatRoomChatRichEmbed] = "chatRichEmbedInfo", Ya)
            }]))(or),
            cr = (n(979), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.onClickConfirm = function() {
                        n.markRoomSeen(), n.setState({
                            showRules: !1
                        })
                    };
                    var i = n.getRoomsSeen();
                    return n.state = {
                        showRules: n.props.chatRules && n.props.chatRules.length > 0 && !i[n.props.channelLogin]
                    }, n
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    return this.state.showRules ? je.createElement(Ke.U, {
                        className: "chat-rules",
                        position: Ke._2.Relative
                    }, je.createElement(Ke._17, {
                        border: !0,
                        background: Ke.m.Base,
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Ke.U, {
                        padding: 1
                    }, je.createElement(Ke.U, {
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Ke._21, {
                        type: Ke._26.H6
                    }, Object(we.d)("Chat Rules:", "ChatRules"))), je.createElement(Ke.U, null, je.createElement("ul", null, this.props.chatRules.map(function(e, t) {
                        return je.createElement("li", {
                            key: t
                        }, e)
                    }))), je.createElement(Ke.U, {
                        margin: {
                            top: 1
                        },
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center
                    }, je.createElement(Ke.u, {
                        size: Ke.x.Small,
                        onClick: this.onClickConfirm
                    }, Object(we.d)("Ok, got it!", "ChatRules")))))) : null
                }, t.prototype.getRoomsSeen = function() {
                    return we.k.get("chat_rules_shown", {})
                }, t.prototype.markRoomSeen = function() {
                    var e = this.getRoomsSeen();
                    e[this.props.channelLogin] = !0, we.k.set("chat_rules_shown", e)
                }, t
            }(je.Component)),
            ur = 3,
            dr = (n(980), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.usernameClickHandler = function(e) {
                        var n = e.currentTarget.getAttribute("data-username");
                        n && t.props.onUsernameClick(n, ni.a.viewer_list, "")
                    }, t
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = this,
                        t = this.props,
                        n = t.viewers,
                        i = t.header,
                        a = n.map(function(t) {
                            return je.createElement("div", {
                                key: "chat-viewers-list-item-" + t
                            }, je.createElement("button", {
                                className: "chat-viewers-list__button",
                                "data-username": t,
                                onClick: e.usernameClickHandler
                            }, je.createElement(Ke._21, {
                                transform: Ke._25.Capitalize
                            }, t)))
                        });
                    return je.createElement(Ke.U, {
                        className: "chat-viewers-list",
                        padding: {
                            bottom: 2
                        }
                    }, je.createElement("div", null, je.createElement(Ke._21, {
                        transform: Ke._25.Uppercase
                    }, i)), a)
                }, t
            }(je.Component)),
            pr = (n(981), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        filter: "",
                        inputValue: "",
                        filteredViewers: {},
                        viewersPage: 0,
                        renderedViewers: [],
                        isLoading: !1
                    }, t.filterTimeout = 0, t.saveScrollRef = function(e) {
                        return t.scroll = e
                    }, t.loadMore = function() {
                        return Se.__awaiter(t, void 0, void 0, function() {
                            var e = this;
                            return Se.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, new Promise(function(t) {
                                            e.setState(function(t) {
                                                return {
                                                    renderedViewers: e.getRenderedViewers(t.filteredViewers.viewers, t.viewersPage + 1),
                                                    viewersPage: t.viewersPage + 1
                                                }
                                            }, function() {
                                                t()
                                            })
                                        })];
                                    case 1:
                                        return t.sent(), [2]
                                }
                            })
                        })
                    }, t.getRenderedViewers = function(e, t) {
                        return e ? e.slice(0, 100 * (t || 1)) : []
                    }, t.handleFilter = function(e, n) {
                        var i = ge(n, e),
                            a = t.getRenderedViewers(i.viewers, 1);
                        t.scroll && t.scroll.scrollToTop(), t.setState({
                            filteredViewers: i,
                            isLoading: !1,
                            renderedViewers: a,
                            viewersPage: 1
                        })
                    }, t.handleFilterChange = function(e) {
                        var n = e.target.value,
                            i = n.toLowerCase().trim();
                        t.setState({
                            filter: i,
                            inputValue: n,
                            isLoading: !0
                        }), clearTimeout(t.filterTimeout), t.filterTimeout = setTimeout(function() {
                            t.handleFilter(i, t.props.viewers)
                        }, 350)
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    this.handleFilter(this.state.filter, e.viewers)
                }, t.prototype.render = function() {
                    var e = this.props.onShowViewerCard,
                        t = [],
                        n = this.state.filteredViewers;
                    n.staff && n.staff.length > 0 && t.push(je.createElement(dr, {
                        key: "chat-viewers-list-staff",
                        header: Object(we.d)("Staff", "ChatViewers"),
                        viewers: n.staff,
                        onUsernameClick: e
                    })), n.admins && n.admins.length > 0 && t.push(je.createElement(dr, {
                        key: "chat-viewers-list-admins",
                        header: Object(we.d)("Admins", "ChatViewers"),
                        viewers: n.admins,
                        onUsernameClick: e
                    })), n.global_mods && n.global_mods.length > 0 && t.push(je.createElement(dr, {
                        key: "chat-viewers-list-global-mods",
                        header: Object(we.d)("Global Moderators", "ChatViewers"),
                        viewers: n.global_mods,
                        onUsernameClick: e
                    })), n.moderators && n.moderators.length > 0 && t.push(je.createElement(dr, {
                        key: "chat-viewers-list-moderators",
                        header: Object(we.d)("Moderators", "ChatViewers"),
                        viewers: n.moderators,
                        onUsernameClick: e
                    })), n.viewers && n.viewers.length > 0 && t.push(je.createElement(dr, {
                        key: "chat-viewers-list-viewers",
                        "data-test-selector": "chat-viewers-list-viewers",
                        header: Object(we.d)("Viewers", "ChatViewers"),
                        viewers: this.state.renderedViewers,
                        onUsernameClick: e
                    }));
                    var i = this.props.isLoading || this.state.isLoading,
                        a = i && je.createElement(Ke.U, {
                            className: "chat-viewers__loading",
                            display: Ke.H.Flex,
                            alignItems: Ke.c.Center,
                            justifyContent: Ke.T.Center,
                            zIndex: Ke._38.Above,
                            position: Ke._2.Absolute,
                            attachTop: !0,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0
                        }, je.createElement(Ke.X, null));
                    return je.createElement(Ke.U, {
                        className: "chat-viewers__container",
                        fullWidth: !0,
                        fullHeight: !0,
                        flexShrink: 0,
                        zIndex: Ke._38.Default
                    }, je.createElement(Ke.U, {
                        className: "chat-viewers__pane",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        flexWrap: Ke.K.NoWrap,
                        position: Ke._2.Absolute,
                        attachBottom: !0,
                        attachLeft: !0,
                        attachRight: !0
                    }, je.createElement(Ke.U, {
                        className: "chat-viewers__header",
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center,
                        alignItems: Ke.c.Center,
                        padding: {
                            y: 1
                        },
                        flexShrink: 0
                    }, je.createElement(Ke.U, {
                        position: Ke._2.Absolute,
                        attachLeft: !0,
                        margin: {
                            left: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.Close,
                        ariaLabel: Object(we.d)("Close", "ChatViewers"),
                        "data-a-target": "chat-viewer-list",
                        onClick: this.props.closeViewersList
                    })), je.createElement("p", {
                        "data-a-target": "chat-viewers_header-channel-name"
                    }, Object(we.d)("Viewer List", "ChatViewers"))), je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        flexWrap: Ke.K.NoWrap,
                        fullHeight: !0
                    }, je.createElement(Ke.U, {
                        className: "chat-viewers__filter",
                        margin: {
                            x: 2,
                            y: 1
                        }
                    }, je.createElement(Ke.Q, {
                        type: Ke.R.Search,
                        name: "viewers-filter",
                        placeholder: Object(we.d)("Filter Viewers", "ChatViewers"),
                        readOnly: this.props.isLoading,
                        onChange: this.handleFilterChange,
                        value: this.state.inputValue
                    })), je.createElement(ir.b, {
                        className: "chat-viewers__list",
                        scrollRef: this.saveScrollRef,
                        suppressScrollX: !0,
                        scrollContentClassName: "chat-viewers__scroll-container"
                    }, je.createElement(Ke.U, {
                        padding: {
                            x: 2
                        }
                    }, t, je.createElement(ir.a, {
                        key: this.state.filter,
                        enabled: !i,
                        loadMore: this.loadMore
                    })))), a))
                }, t
            }(je.Component)),
            mr = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.state = {
                        viewers: {},
                        viewerCount: 0,
                        isLoading: !1
                    }, n.logger = we.i.withCategory("chat-viewers"), n
                }
                return Se.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    this.props.channelLogin !== e.channelLogin && this.updateViewers(e.channelLogin)
                }, t.prototype.componentDidMount = function() {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        return Se.__generator(this, function(e) {
                            return this.updateViewers(this.props.channelLogin), [2]
                        })
                    })
                }, t.prototype.render = function() {
                    return je.createElement(pr, {
                        channelLogin: this.props.channelLogin,
                        closeViewersList: this.props.closeViewersList,
                        viewers: this.state.viewers,
                        viewerCount: this.state.viewerCount,
                        isLoading: this.state.isLoading,
                        onShowViewerCard: this.props.onShowViewerCard
                    })
                }, t.prototype.updateViewers = function(e) {
                    return Se.__awaiter(this, void 0, void 0, function() {
                        var t, n, i;
                        return Se.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return this.setState({
                                        isLoading: !0
                                    }), [4, fe(e)];
                                case 1:
                                    return t = a.sent(), n = t ? t.chatters : {}, i = t ? t.chatter_count : 0, we.i.debug("Updated viewers list with " + i + " viewers"), this.setState({
                                        viewers: n,
                                        viewerCount: i,
                                        isLoading: !1
                                    }), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            hr = Object(Te.a)(null, ve)(mr),
            fr = n(379),
            gr = n(445),
            vr = n(446),
            br = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isIgnored: !1
                    }, t.ignoreUser = function() {
                        t.props.sendMessageToTMI(Object(Qt.h)(t.props.targetLogin)), t.setState({
                            isIgnored: !0
                        })
                    }, t.unignoreUser = function() {
                        t.props.sendMessageToTMI(Object(Qt.j)(t.props.targetLogin)), t.setState({
                            isIgnored: !1
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return this.state.isIgnored ? je.createElement(Ke.v, {
                        icon: Ke._9.Ignore,
                        ariaLabel: Object(we.d)("Unblock {displayName}", {
                            displayName: this.props.targetDisplayName
                        }, "ViewerCardIgnoreAction"),
                        onClick: this.unignoreUser,
                        overlay: !0
                    }) : je.createElement(Ke.v, {
                        icon: Ke._9.Ignore,
                        ariaLabel: Object(we.d)("Block {displayName}", {
                            displayName: this.props.targetDisplayName
                        }, "ViewerCardIgnoreAction"),
                        onClick: this.ignoreUser,
                        overlay: !0
                    })
                }, t = Se.__decorate([Object(kt.c)("ViewerCardIgnoreAction")], t)
            }(je.Component),
            kr = br,
            yr = n(982),
            _r = n(983),
            Cr = n(984),
            Sr = "10 minutes",
            Er = function(e, t, n) {
                var i = e.readQuery({
                    query: Cr,
                    variables: {
                        targetUserID: n.userID,
                        channelID: n.channelID
                    }
                });
                t && t.data && (i.chatRoomBanStatus = {
                    isPermanent: !0,
                    __typename: "ChatRoomBanStatus"
                }), e.writeQuery({
                    query: Cr,
                    variables: {
                        targetUserID: n.userID,
                        channelID: n.channelID
                    },
                    data: i
                })
            },
            wr = function(e, t) {
                var n = e.readQuery({
                        query: Cr,
                        variables: {
                            targetUserID: t.userID,
                            channelID: t.channelID
                        }
                    }),
                    i = Se.__assign({}, n, {
                        chatRoomBanStatus: null
                    });
                e.writeQuery({
                    query: Cr,
                    variables: {
                        targetUserID: t.userID,
                        channelID: t.channelID
                    },
                    data: i
                })
            },
            Nr = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onBanClick = function() {
                        var e = t.props,
                            n = e.banUser,
                            i = e.channelID,
                            a = e.userLogin;
                        n(Object(Ge.a)({
                            channelID: i,
                            bannedUserLogin: a
                        }))
                    }, t.onTimeoutClick = function() {
                        var e = t.props,
                            n = e.banUser,
                            i = e.channelID,
                            a = e.userLogin;
                        n(Object(Ge.a)({
                            channelID: i,
                            bannedUserLogin: a,
                            expiresIn: Sr
                        }))
                    }, t.onUnbanClick = function() {
                        var e = t.props,
                            n = e.unbanUser,
                            i = e.channelID,
                            a = e.userLogin;
                        n(Object(Ge.a)({
                            channelID: i,
                            bannedUserLogin: a
                        }))
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return je.createElement(Ke.U, {
                        display: Ke.H.InlineFlex
                    }, this.getContent())
                }, t.prototype.getContent = function() {
                    return this.props.data.loading || this.props.data.error ? [this.renderBanAction(!0), this.renderTimeoutAction(!0)] : this.props.data.chatRoomBanStatus ? this.props.data.chatRoomBanStatus.isPermanent ? [this.renderUnbanAction(), this.renderTimeoutAction(!0)] : [this.renderBanAction(), this.renderUntimeoutAction()] : [this.renderBanAction(), this.renderTimeoutAction()]
                }, t.prototype.renderTimeoutAction = function(e) {
                    void 0 === e && (e = !1);
                    var t = Object(we.d)("Timeout User", "ViewerCardModActions");
                    return je.createElement(Ke._30, {
                        key: "Timeout",
                        label: t,
                        direction: Ke._32.Top,
                        align: Ke._31.Center
                    }, je.createElement(Ke.U, {
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.Timeout,
                        disabled: e,
                        ariaLabel: t,
                        onClick: this.onTimeoutClick
                    })))
                }, t.prototype.renderUntimeoutAction = function() {
                    var e = Object(we.d)("Untimeout User", "ViewerCardModActions");
                    return je.createElement(Ke._30, {
                        key: "Untimeout",
                        label: e,
                        direction: Ke._32.Top,
                        align: Ke._31.Center
                    }, je.createElement(Ke.U, {
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.FollowCheck,
                        ariaLabel: e,
                        onClick: this.onUnbanClick
                    })))
                }, t.prototype.renderBanAction = function(e) {
                    void 0 === e && (e = !1);
                    var t = Object(we.d)("Ban User", "ViewerCardModActions");
                    return je.createElement(Ke._30, {
                        key: "Ban",
                        label: t,
                        direction: Ke._32.Top,
                        align: Ke._31.Center
                    }, je.createElement(Ke.U, {
                        padding: {
                            right: 1,
                            left: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.Ban,
                        disabled: e,
                        ariaLabel: t,
                        onClick: this.onBanClick
                    })))
                }, t.prototype.renderUnbanAction = function() {
                    var e = Object(we.d)("Unban User", "ViewerCardModActions");
                    return je.createElement(Ke._30, {
                        key: "Unban",
                        label: e,
                        direction: Ke._32.Top,
                        align: Ke._31.Center
                    }, je.createElement(Ke.U, {
                        padding: {
                            right: 1,
                            left: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.FollowCheck,
                        ariaLabel: e,
                        onClick: this.onUnbanClick
                    })))
                }, t = Se.__decorate([Object(kt.c)("ViewerCardModActions"), Object(Le.a)(Cr, {
                    options: function(e) {
                        return {
                            variables: {
                                targetUserID: e.userID,
                                channelID: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                }), Object(Le.a)(yr, {
                    name: "banUser",
                    options: function(e) {
                        return {
                            update: function(t, n) {
                                Er(t, n, e)
                            }
                        }
                    }
                }), Object(Le.a)(_r, {
                    name: "unbanUser",
                    options: function(e) {
                        return {
                            update: function(t) {
                                wr(t, e)
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Or = Nr,
            Dr = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.modUser = function() {
                        n.props.sendMessageToTMI(Object(Qt.i)(n.props.targetLogin)), n.setState({
                            isModerator: !0
                        })
                    }, n.unmodUser = function() {
                        n.props.sendMessageToTMI(Object(Qt.k)(n.props.targetLogin)), n.setState({
                            isModerator: !1
                        })
                    }, n.state = {
                        isModerator: !1
                    }, n
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.state.isModerator) {
                        var e = Object(we.d)("Unmod User", "ViewerCardOwnerActions");
                        return je.createElement(Ke._30, {
                            label: e,
                            direction: Ke._32.Top,
                            align: Ke._31.Center
                        }, je.createElement(Ke.U, {
                            key: "OP",
                            padding: {
                                right: 1
                            }
                        }, je.createElement(Ke.v, {
                            icon: Ke._9.FollowCheck,
                            ariaLabel: e,
                            onClick: this.unmodUser
                        })))
                    }
                    var e = Object(we.d)("Mod User", "ViewerCardOwnerActions");
                    return je.createElement(Ke._30, {
                        label: e,
                        direction: Ke._32.Top,
                        align: Ke._31.Center
                    }, je.createElement(Ke.U, {
                        key: "OP",
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.OP,
                        ariaLabel: e,
                        onClick: this.modUser
                    })))
                }, t = Se.__decorate([Object(kt.c)("ViewerCardOwnerActions")], t)
            }(je.Component),
            Ur = Dr,
            Ir = n(447),
            xr = n(262),
            Tr = n(443),
            Fr = n(270),
            jr = n(135),
            Lr = n(49),
            Rr = (n(985), n(986));
        ! function(e) {
            e[e.ActionsPage = 0] = "ActionsPage", e[e.SubGiftSelectPage = 1] = "SubGiftSelectPage"
        }(Xa || (Xa = {}));
        var Ar = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        currentPage: Xa.ActionsPage
                    }, t.getContent = function() {
                        if (t.props.data.loading || t.props.data.error) return t.renderHideButton();
                        var e = {
                                backgroundImage: "url(" + (t.props.data.targetUser.bannerImageURL || gr) + ")"
                            },
                            n = t.state.currentPage === Xa.ActionsPage ? t.renderActions() : t.renderSubGiftSelect();
                        return je.createElement(Ke.U, null, je.createElement(Ke._17, {
                            elevation: 1,
                            border: !0
                        }, je.createElement("div", {
                            className: "viewer-card",
                            style: e
                        }, je.createElement(Ke.U, {
                            display: Ke.H.Flex,
                            flexDirection: Ke.J.Column,
                            fullHeight: !0,
                            fullWidth: !0,
                            className: "viewer-card__overlay"
                        }, je.createElement(Ke.U, {
                            padding: 1,
                            alignItems: Ke.c.Start,
                            justifyContent: Ke.T.Start,
                            display: Ke.H.Flex,
                            flexDirection: Ke.J.Row,
                            textAlign: Ke._22.Center,
                            fullWidth: !0,
                            flexGrow: 1
                        }, je.createElement(Ke.l, {
                            imageSrc: t.props.data.targetUser.profileImageURL,
                            size: 50,
                            imageAlt: t.props.data.targetUser.displayName
                        }), je.createElement(Ke.U, {
                            alignItems: Ke.c.Center,
                            margin: 1,
                            className: "viewer-card__display-name",
                            ellipsis: !0
                        }, je.createElement(Ke._21, {
                            type: Ke._26.H4
                        }, je.createElement("a", {
                            className: "viewer-card__display-name__link color-text-pill",
                            href: "/" + t.props.targetLogin,
                            target: "_blank"
                        }, t.props.data.targetUser.displayName))), t.renderHideButton(), t.renderIgnoreButton()))), n))
                    }, t.toggleGiftPage = function() {
                        var e = t.state.currentPage === Xa.ActionsPage ? Xa.SubGiftSelectPage : Xa.ActionsPage;
                        e === Xa.SubGiftSelectPage && t.trackGiftEvent(), t.setState({
                            currentPage: e
                        })
                    }, t.onWhisperButtonClick = function() {
                        t.props.hideViewerCard()
                    }, t.handleReportUserClick = function() {
                        t.props.showReportUserModal({
                            reportContext: {
                                contentType: t.reportContentTypeFromSourceType(t.props.sourceType),
                                targetUserID: t.props.data.targetUser.id,
                                contentID: t.props.sourceID,
                                extra: JSON.stringify({
                                    channel_id: t.props.channelID.toString()
                                })
                            },
                            title: Object(we.d)("Report {channelDisplayName}", {
                                channelDisplayName: t.props.data.targetUser.displayName
                            }, "ReportUserModalTitle")
                        })
                    }, t.trackBuyGiftSubEvent = function(e) {
                        Object(Lr.b)(Se.__assign({}, e, {
                            action: Lr.a.BuyGiftSub,
                            channelID: t.props.channelID || "",
                            channelLogin: t.props.data.channelUser.login || "",
                            isMenuOpen: null,
                            hasSubCredit: null,
                            sub_location: "viewer_card",
                            modal: !1,
                            showPrimeContent: !0,
                            giftRecipient: t.props.data.targetUser.login
                        }))
                    }, t.trackGiftEvent = function() {
                        Object(Lr.b)({
                            action: Lr.a.GiftASub,
                            channelID: t.props.channelID || "",
                            channelLogin: t.props.data.channelUser.login || "",
                            isMenuOpen: null,
                            hasSubCredit: null,
                            sub_location: "viewer_card",
                            modal: !1,
                            showPrimeContent: !0,
                            giftRecipient: t.props.data.targetUser.login
                        })
                    }, t
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return this.props.data.error ? null : this.getContent()
                }, t.prototype.renderIgnoreButton = function() {
                    var e = this.props.data.currentUser;
                    return this.props.isEmbedded || e && e.login === this.props.targetLogin ? null : je.createElement(Ke.U, {
                        key: "Ignore",
                        position: Ke._2.Absolute,
                        attachRight: !0,
                        margin: {
                            top: 3,
                            right: .5
                        }
                    }, je.createElement(kr, {
                        targetDisplayName: this.props.data.targetUser.displayName,
                        targetLogin: this.props.targetLogin,
                        sendMessageToTMI: this.props.sendMessageToTMI
                    }))
                }, t.prototype.renderHideButton = function() {
                    return je.createElement(Ke.U, {
                        className: "viewer-card__hide",
                        position: Ke._2.Absolute,
                        attachRight: !0,
                        attachTop: !0,
                        margin: {
                            top: .5,
                            right: .5
                        }
                    }, je.createElement(Ke.v, {
                        icon: Ke._9.Close,
                        onClick: this.props.hideViewerCard,
                        ariaLabel: Object(we.d)("Hide", "ViewerCard"),
                        overlay: !0
                    }))
                }, t.prototype.renderActions = function() {
                    var e = this.props.data.currentUser;
                    return this.props.isEmbedded || e && e.login === this.props.targetLogin ? null : je.createElement(Ke._17, {
                        className: "viewer-card__actions",
                        "data-test-selector": "viewer-card-actions",
                        background: Ke.m.Base,
                        attachBottom: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        justifyContent: Ke.T.Between,
                        fullWidth: !0,
                        flexGrow: 0
                    }, je.createElement(Ke.U, {
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        fullWidth: !0,
                        margin: {
                            left: .5,
                            right: 1,
                            bottom: 1,
                            top: .5
                        }
                    }, this.renderSocialActions()), je.createElement(Ke._17, {
                        display: Ke.H.Flex,
                        background: Ke.m.Alt2,
                        fullWidth: !0
                    }, je.createElement(Ke.U, {
                        display: Ke.H.InlineFlex,
                        flexDirection: Ke.J.Row
                    }, this.renderChatActions())))
                }, t.prototype.renderSocialActions = function() {
                    var e = null;
                    return this.isModeratorOrHigher && (e = je.createElement(jt.a, {
                        key: "MoreOptionsButton"
                    }, je.createElement(Ke.v, {
                        type: Ke.w.Hollow,
                        ariaLabel: Object(we.d)("More options", "ViewerCard"),
                        icon: Ke._9.More,
                        "data-a-target": "viewer-card-more-button"
                    }), je.createElement(Ke.p, {
                        direction: Ke.q.BottomRight,
                        "data-a-target": "viewer-card-more-balloon"
                    }, je.createElement(Ke.U, {
                        padding: {
                            y: 1
                        }
                    }, je.createElement(Ke.S, {
                        onClick: this.handleReportUserClick,
                        "data-a-target": "viewer-card-report-button"
                    }, je.createElement(Ke.U, {
                        padding: {
                            x: 1
                        }
                    }, Object(we.d)("Report {user}", {
                        user: this.props.targetLogin
                    }, "ViewerCard"))))))), [je.createElement(Ke.U, {
                        key: "FriendButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(Ir.a, {
                        channelID: this.props.data.targetUser.id
                    })), this.renderWhisperButton(), this.renderGiftSubscriptionButton(), je.createElement(Ke.U, {
                        key: "ReportButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, e)]
                }, t.prototype.renderWhisperButton = function() {
                    if (!this.props.data.currentUser || !this.props.data.targetUser) return null;
                    var e = Object(Sn.a)(this.props.data.currentUser.id, this.props.data.targetUser.id);
                    return je.createElement(Ke.U, {
                        key: "WhisperButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(vr.a, {
                        onClick: this.onWhisperButtonClick,
                        threadID: e
                    }))
                }, t.prototype.renderGiftSubscriptionButton = function() {
                    return !this.props.data.channelUser || !this.props.data.channelUser.subscriptionProducts || this.props.data.channelUser.subscriptionProducts.length < 1 ? null : je.createElement(Ke.U, {
                        key: "GiftButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(Tr.a, {
                        onClick: this.toggleGiftPage,
                        subProductId: this.props.data.channelUser.subscriptionProducts[0].id,
                        giftRecipient: this.props.targetLogin
                    }))
                }, t.prototype.renderSubGiftSelect = function() {
                    return je.createElement(Ke.U, null, je.createElement(jr.a, {
                        subscriptionProducts: this.props.data.channelUser.subscriptionProducts,
                        isGift: !0
                    }), je.createElement(Ke._17, {
                        background: Ke.m.Base,
                        attachBottom: !0,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Row,
                        justifyContent: Ke.T.Between,
                        fullWidth: !0,
                        flexGrow: 0,
                        padding: 2
                    }, je.createElement(Fr.a, {
                        onBack: this.toggleGiftPage,
                        channelDisplayName: this.props.data.channelUser.displayName,
                        subscriptionProducts: this.props.data.channelUser.subscriptionProducts,
                        giftRecipient: this.props.data.targetUser.login,
                        reportSubMenuAction: this.trackBuyGiftSubEvent
                    })))
                }, t.prototype.renderChatActions = function() {
                    var e = [];
                    return this.isModeratorOrHigher() && e.push(je.createElement(Or, {
                        key: "ModActions",
                        channelID: this.props.data.channelUser.id,
                        userID: this.props.data.targetUser.id,
                        userLogin: this.props.targetLogin
                    })), this.isOwnerOrHigher() && e.push(je.createElement(Ur, {
                        key: "OwnerActions",
                        sendMessageToTMI: this.props.sendMessageToTMI,
                        targetLogin: this.props.targetLogin
                    })), e
                }, t.prototype.isOwnerOrHigher = function() {
                    var e = this.props.data;
                    return !(e.loading || e.error || !e.currentUser) && (e.currentUser.roles.isGlobalMod || e.currentUser.roles.isSiteAdmin || e.currentUser.roles.isStaff || this.isOwner())
                }, t.prototype.isModeratorOrHigher = function() {
                    return this.isOwnerOrHigher() || this.props.data.channelUser.self && this.props.data.channelUser.self.isModerator
                }, t.prototype.isOwner = function() {
                    var e = this.props.data;
                    return !(e.loading || e.error || !e.currentUser) && e.currentUser.id === e.channelUser.id
                }, t.prototype.reportContentTypeFromSourceType = function(e) {
                    switch (e) {
                        case ni.a.chat_message:
                            return xr.a.Chat;
                        case ni.a.recent_raids:
                            return xr.a.Raid;
                        case ni.a.viewer_list:
                        default:
                            return xr.a.User
                    }
                }, t = Se.__decorate([Object(kt.c)("ViewerCard"), Object(Le.a)(Rr, {
                    options: function(e) {
                        return {
                            variables: {
                                targetLogin: e.targetLogin,
                                channelID: e.channelID
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Mr = Ar,
            Br = (n(987), function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentWillUnmount = function() {
                    this.props.hideViewerCard()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.viewerCardOptions && (e = je.createElement(Ke.U, {
                        className: "viewer-card-layer",
                        position: Ke._2.Relative
                    }, je.createElement(Mr, {
                        isEmbedded: this.props.isEmbedded,
                        targetLogin: this.props.viewerCardOptions.targetLogin,
                        hideViewerCard: this.props.hideViewerCard,
                        sendMessageToTMI: this.props.onSendMessage,
                        channelID: this.props.channelID,
                        showReportUserModal: this.props.showReportUserModal,
                        sourceType: this.props.viewerCardOptions.sourceType,
                        sourceID: this.props.viewerCardOptions.sourceID
                    }))), e
                }, t
            }(je.Component)),
            Pr = Object(Te.a)(be, ke)(Br),
            Hr = n(988),
            Vr = (n(989), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.closeViewersList = function() {
                        n.setState({
                            showViewersList: !1
                        })
                    }, n.showViewersList = function() {
                        n.setState({
                            showViewersList: !0
                        })
                    }, n.onChatInputFocus = function() {
                        n.props.authToken && !n.state.showChatRules && n.setState({
                            showChatRules: !0
                        })
                    }, n.setChatListElement = function(e) {
                        n.setState({
                            chatListElement: e
                        })
                    }, n.state = {
                        showChatRules: !1,
                        showViewersList: !1
                    }, n
                }
                return Se.__extends(t, e), t.prototype.render = function() {
                    var e = hn.parse(this.props.location.search),
                        t = void 0 !== e.darkpopout,
                        n = (o = {}, o[Object(Gn.c)(Me.a.Dark)] = t, o);
                    if (this.props.isHidden) return je.createElement(Ke._17, {
                        alignItems: Ke.c.Center,
                        background: Ke.m.Alt,
                        className: We("chat-room__pane", n),
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        fullHeight: !0,
                        fullWidth: !0,
                        justifyContent: Ke.T.Center,
                        color: Ke.F.Base,
                        position: Ke._2.Relative
                    }, je.createElement(Ke.U, {
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Ke._21, {
                        fontSize: Ke.L.Size5
                    }, Object(we.d)("Chat is hidden.", "ChatRoom"))), je.createElement(Ke.u, {
                        onClick: this.props.onChatUnhide,
                        "data-a-target": "show-chat-button"
                    }, Object(we.d)("Show Chat", "ChatRoom")));
                    var i = this.props.bitsConfig && this.props.firstPageLoaded && je.createElement(Li, {
                            badgeData: this.props.badgeSets,
                            bitsConfig: this.props.bitsConfig,
                            blockLinks: this.props.blockLinks,
                            channelID: this.props.channelID,
                            currentUserDisplayName: this.props.currentUserDisplayName,
                            currentUserLogin: this.props.currentUserLogin
                        }),
                        a = this.state.showViewersList && je.createElement(hr, {
                            channelLogin: this.props.channelLogin,
                            closeViewersList: this.closeViewersList
                        }),
                        r = !!this.props.authToken && !this.props.isEmbedded,
                        s = null;
                    return this.state.showChatRules && (s = je.createElement(Ke.U, {
                        padding: {
                            x: 2
                        }
                    }, je.createElement(cr, {
                        chatRules: this.props.chatRules,
                        channelLogin: this.props.channelLogin
                    }))), je.createElement(Ke.U, {
                        className: We("chat-room__container", n),
                        "data-a-target": this.props.theme === Me.a.Dark ? "chat-theme-dark" : "chat-theme-light",
                        flexShrink: 1,
                        flexGrow: 1,
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        overflow: Ke.Y.Hidden,
                        fullWidth: !0,
                        fullHeight: !0
                    }, je.createElement(Ke._17, {
                        className: "chat-room__pane",
                        display: Ke.H.Flex,
                        flexDirection: Ke.J.Column,
                        flexWrap: Ke.K.NoWrap,
                        position: Ke._2.Relative,
                        flexGrow: 1,
                        fullHeight: !0,
                        overflow: Ke.Y.Hidden,
                        color: Ke.F.Base
                    }, je.createElement(Ke.U, {
                        className: "chat-room__header",
                        display: Ke.H.Flex,
                        justifyContent: Ke.T.Center,
                        alignItems: Ke.c.Center,
                        padding: {
                            y: 1
                        },
                        flexShrink: 0
                    }, je.createElement("p", {
                        "data-a-target": "chat-room__header-channel-name"
                    }, this.props.channelLogin)), this.props.chatRoomHeader, i, je.createElement(lr, {
                        badgeSets: this.props.badgeSets,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        currentUserLogin: this.props.currentUserLogin,
                        isEmbedded: this.props.isEmbedded,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        onPushMessage: this.props.onPushMessage,
                        containerRef: this.setChatListElement
                    }), je.createElement(Ke.U, {
                        className: "chat-room__viewer-card",
                        position: Ke._2.Absolute
                    }, je.createElement(Pr, {
                        isEmbedded: this.props.isEmbedded,
                        onSendMessage: this.props.onSendMessage,
                        channelID: this.props.channelID
                    })), je.createElement(Ke.U, {
                        className: "chat-room__notifications",
                        position: Ke._2.Absolute,
                        zIndex: Ke._38.Default,
                        fullWidth: !0
                    }, this.props.children), s, this.props.isOwnChannel && !this.props.isEmbedded && je.createElement(Qn, {
                        hostedChannelLogin: this.props.hostedChannelLogin
                    }), a, je.createElement(er, {
                        authToken: this.props.authToken,
                        bitsConfig: r ? this.props.bitsConfig : void 0,
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.props.chatMembers,
                        emotes: this.props.emotes,
                        firstPageLoaded: this.props.firstPageLoaded,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        isHostMode: this.props.isHostMode,
                        isPopout: this.props.isPopout,
                        isStaff: this.props.isStaff,
                        onChatCommand: this.props.onSendMessage,
                        badgeSets: this.props.badgeSets,
                        userBadges: this.props.userBadges,
                        showViewersList: this.showViewersList,
                        raidReceived: this.props.raidReceived,
                        onSendMessage: this.props.onSendMessage,
                        onInputFocus: this.onChatInputFocus,
                        containerElement: this.state.chatListElement
                    })));
                    var o
                }, t = Se.__decorate([Object(Le.a)(Hr, {
                    props: function(e) {
                        var t = new Yn.c([], [], e.ownProps.channelLogin);
                        return e.data && e.data.badges && e.data.user && e.data.user.broadcastBadges && (t = new Yn.c(e.data.badges, e.data.user.broadcastBadges, e.ownProps.channelLogin)), {
                            badgeSets: t
                        }
                    },
                    options: function(e) {
                        return {
                            name: "data",
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(je.Component)),
            Wr = Object(Bt.e)(Vr),
            qr = "(?:\\W|^)",
            zr = "(?:$|\\W)",
            Gr = 150,
            $r = "PowerUpL DarkMode PowerUpR",
            Jr = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.state = {
                        activeChatters: [],
                        hasEnteredChatRoom: !1,
                        hostedChannelLogin: null,
                        raidReceived: !1,
                        userBadges: null
                    }, n.sendMessage = function(e) {
                        if (!e || 0 === e.length || !n.props.authToken) return !1;
                        var t = n.chatService.sendMessage(e);
                        return (!t || !t.preserveInput) && (n.parseOutgoingMessage(e), !0)
                    }, n.pushMessage = function(e) {
                        n.chatBuffer.consumeChatEvent(e), n.activeChatters.consumeChatEvent(e)
                    }, n.onChatMessage = function(e) {
                        n.chatBuffer.consumeChatEvent(e), n.activeChatters.consumeChatEvent(e), n.onChatEvent(e)
                    }, n.connect = function(e) {
                        n.setState({
                            hasEnteredChatRoom: !1
                        }), e.userID && e.channelID && (n.moderationActionService = new Wn(e.channelID, e.userID, n.chatBuffer.consumeChatEvent)), n.syncBufferHandle = requestAnimationFrame(n.syncBufferedMessages), n.chatService.join()
                    }, n.disconnect = function() {
                        n.syncBufferHandle && cancelAnimationFrame(n.syncBufferHandle), n.moderationActionService && n.moderationActionService.unsubscribe(), n.chatService.part()
                    }, n.updateEmoteSets = function(e) {
                        n.chatService.updateEmotes(e), n.userEmotes && (n.userEmotes = Object(Hn.a)(e))
                    }, n.getCurrentEmotes = function() {
                        return n.userEmotes || (n.userEmotes = Object(Hn.a)(n.props.emoteSets)), n.userEmotes
                    }, n.updateBitsConfig = function(e) {
                        void 0 === e && (e = He.a), n.chatService.updateBitsConfig(e)
                    }, n.updateBlockLinks = function(e) {
                        n.chatService.updateBlockLinks(e)
                    }, n.syncBufferedMessages = function() {
                        n.chatBuffer && n.chatBuffer.isDirty && n.props.onChatMessagesUpdate(n.chatBuffer.toArray()), n.activeChatters.isDirty && n.setState({
                            activeChatters: n.activeChatters.getActiveChatters()
                        }), n.syncBufferHandle = requestAnimationFrame(n.syncBufferedMessages)
                    }, n.onChatEvent = function(e) {
                        switch (e.type) {
                            case Nn.a.Hosting:
                                n.hostingHandler(e.hostedChannel);
                                break;
                            case Nn.a.Unhost:
                                n.hostingHandler(null);
                                break;
                            case Nn.a.Connected:
                                n.onConnected();
                                break;
                            case Nn.a.RoomState:
                                n.roomStateHandler(e.state);
                                break;
                            case Nn.a.BadgesUpdated:
                                n.onBadgesUpdated(e);
                                break;
                            case Nn.a.Raid:
                                n.setState({
                                    raidReceived: !0
                                })
                        }
                    }, n.hostingHandler = function(e) {
                        n.setState({
                            hostedChannelLogin: e
                        }), n.props.onHostingChange && n.props.onHostingChange(e)
                    }, n.roomStateHandler = function(e) {
                        e.slowMode ? n.props.onSlowModeEnable() : n.props.onSlowModeDisable(), void 0 !== e.followersOnly && (e.followersOnly ? (n.props.onFollowerModeDurationChange(e.followersOnlyRequirement), n.props.onFollowerModeEnable()) : n.props.onFollowerModeDisable()), void 0 !== e.subsOnly && (e.subsOnly ? n.props.onSubsOnlyModeEnable() : n.props.onSubsOnlyModeDisable())
                    }, n.onConnected = function() {
                        we.i.debug("Connected"), n.props.latencyTracking.reportCustomEvent(n.chatConnected), n.state.hasEnteredChatRoom || Object(qn.b)({
                            channelLogin: n.props.channelLogin,
                            isHostMode: !!n.state.hostedChannelLogin
                        }), n.setState({
                            hasEnteredChatRoom: !0
                        }), n.props.latencyTracking.reportInteractive()
                    }, n.createOutgoingTokenMatchers = function(e) {
                        n.outgoingTokenMatchers = e.map(function(e) {
                            return {
                                token: e,
                                regex: new RegExp("" + qr + e + zr)
                            }
                        })
                    }, n.parseOutgoingMessage = function(e) {
                        n.outgoingTokenMatchers.forEach(function(t) {
                            t.regex.test(e) && n.onOutgoingTokenMatch(t.token, e)
                        })
                    }, n.onOutgoingTokenMatch = function(e, t) {
                        switch (e) {
                            case $r:
                                var i = n.props.theme === Me.a.Light ? Me.a.Dark : Me.a.Light;
                                n.props.onThemeChange(i);
                                break;
                            default:
                                return
                        }
                    }, n.onBadgesUpdated = function(e) {
                        n.setState({
                            userBadges: e.badges
                        })
                    }, n.chatService = new Vn(t.userLogin, t.channelLogin, n.onChatMessage), n.logger = we.i.withCategory("chat-room"), n.registerCustomLatencyEvents(), n.createOutgoingTokenMatchers([$r]), n.userEmotes = null, n.activeChatters = new Un(t.channelID), n.chatBuffer = new Ln(Gr), n.chatBuffer.setBlockedUsers(t.blockedUsers), t.userLogin && n.chatBuffer.setCurrentUserLogin(t.userLogin), t.userID && n.activeChatters.setCurrentUserID(t.userID), n
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.connect(this.props), this.props.emoteSets && this.updateEmoteSets(this.props.emoteSets), this.props.bitsConfig && this.updateBitsConfig(this.props.bitsConfig), this.updateBlockLinks(this.props.blockLinks), this.chatService.disabled && this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    this.disconnect(), this.chatBuffer && this.chatBuffer.shutdown(), this.props.onChatMessagesReset()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    var t = this.props,
                        n = e.isHidden && !t.isHidden || !e.rightColumnExpanded && t.rightColumnExpanded,
                        i = !1;
                    n ? this.disconnect() : (i = e.channelLogin !== t.channelLogin || e.userLogin !== t.userLogin || e.authToken !== t.authToken || !e.isHidden && t.isHidden || e.rightColumnExpanded && !t.rightColumnExpanded) && (this.logger.debug("Reconnecting..."), this.registerCustomLatencyEvents(), this.connect(e), this.setState({
                        hostedChannelLogin: null
                    })), (e.emoteSets !== t.emoteSets || i) && (this.logger.debug("Updating emote sets", {
                        shouldReconnect: i,
                        prevSets: t.emoteSets.slice(0),
                        nextSet: e.emoteSets.slice(0)
                    }), this.updateEmoteSets(e.emoteSets)), (e.bitsConfig !== t.bitsConfig || i) && this.updateBitsConfig(e.bitsConfig), (e.blockLinks !== t.blockLinks || i) && this.updateBlockLinks(e.blockLinks);
                    var a = e.isCurrentUserModerator ? 0 : e.chatDelayMS;
                    this.chatBuffer.setDelay(a), e.userLogin && t.userLogin !== e.userLogin && this.chatBuffer.setCurrentUserLogin(e.userLogin), e.userID && t.userID !== e.userID && this.activeChatters.setCurrentUserID(e.userID), t.channelID !== e.channelID && (this.activeChatters = new Un(e.channelID), this.setState({
                        activeChatters: []
                    })), t.blockedUsers !== e.blockedUsers && this.chatBuffer.setBlockedUsers(e.blockedUsers), !this.moderationActionService && e.userID && e.channelID && (this.moderationActionService = new Wn(e.channelID, e.userID, this.chatBuffer.consumeChatEvent))
                }, t.prototype.render = function() {
                    return je.createElement(Wr, {
                        authToken: this.props.authToken,
                        bitsConfig: this.props.bitsConfig,
                        blockLinks: this.props.blockLinks,
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.state.activeChatters,
                        chatRoomHeader: je.createElement(Mt, {
                            channelLogin: this.props.channelLogin,
                            sendMessage: this.sendMessage
                        }),
                        chatRules: this.props.chatRules,
                        currentUserDisplayName: this.props.userDisplayName,
                        currentUserLogin: this.props.userLogin,
                        emotes: this.props.emoteSets,
                        firstPageLoaded: this.props.firstPageLoaded,
                        hostedChannelLogin: this.state.hostedChannelLogin,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        isHidden: this.props.isHidden,
                        isHostMode: !!this.state.hostedChannelLogin,
                        isOwnChannel: this.isOwnChannel,
                        isPopout: this.props.isPopout,
                        onChatUnhide: this.props.onChatUnhide,
                        onPushMessage: this.pushMessage,
                        onSendMessage: this.sendMessage,
                        raidReceived: this.state.raidReceived,
                        theme: this.props.theme,
                        isStaff: this.props.isStaff,
                        userBadges: this.state.userBadges,
                        userID: this.props.userID
                    }, this.props.firstPageLoaded && this.props.authToken && !this.props.isEmbedded && je.createElement(mt, {
                        authToken: this.props.authToken,
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        bitsConfig: this.props.bitsConfig
                    }), this.props.hostedChannelDisplayName && !this.props.isPopout && je.createElement(ht, {
                        hostedChannelDisplayName: this.props.hostedChannelDisplayName || "",
                        hostedChannelLogin: this.state.hostedChannelLogin || ""
                    }), this.props.firstPageLoaded && !this.props.isEmbedded && je.createElement(kn, {
                        channelID: this.props.channelID,
                        send: this.sendMessage
                    }), je.createElement(wn, {
                        isEmbedded: this.props.isEmbedded,
                        isPopout: this.props.isPopout,
                        userLogin: this.props.userLogin,
                        userID: this.props.userID,
                        getCurrentEmotes: this.getCurrentEmotes
                    }), je.createElement(Ft, {
                        userLogin: this.props.userLogin
                    }))
                }, t.prototype.registerCustomLatencyEvents = function() {
                    this.logger.debug("Registering custom latency events"), this.props.latencyTracking.resetCustomEvents("Chat"), this.chatInitialized = this.registerInitEvent(), this.chatConnected = this.registerConnectedEvent(), this.props.latencyTracking.reportCustomEvent(this.chatInitialized)
                }, t.prototype.registerInitEvent = function() {
                    return this.props.latencyTracking.registerCustomEvent("Chat", "chat-init", "Init", 3e3)
                }, t.prototype.registerConnectedEvent = function() {
                    return this.props.latencyTracking.registerCustomEvent("Chat", "chat-connected", "Connected", 4e3)
                }, Object.defineProperty(t.prototype, "isOwnChannel", {
                    get: function() {
                        return this.props.userID === this.props.channelID
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.Component),
            Kr = Object(Re.compose)(Object(kt.c)("ChatRoom"), Object(Le.a)(zn, {
                props: function(e) {
                    var t;
                    return e.data && e.data.user && e.data.user.cheer && (t = Object(Ve.a)(e.data.user.cheer.emotes)), {
                        bitsConfig: t
                    }
                },
                options: function(e) {
                    return {
                        name: "data",
                        variables: {
                            channelLogin: e.channelLogin
                        }
                    }
                }
            }), function() {
                return Object(Le.a)(On, {
                    props: function(e) {
                        return e.data && !e.data.loading && !e.data.error && e.data.currentUser && e.data.currentUser.blockedUsers ? {
                            blockedUsers: e.data.currentUser.blockedUsers.map(function(e) {
                                return e.id
                            })
                        } : {
                            blockedUsers: []
                        }
                    },
                    skip: function(e) {
                        return !e.authToken
                    }
                })
            }(), Object(Te.a)(_e, ye))(Jr),
            Qr = n(990),
            Yr = n(991),
            Xr = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Se.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentDidUpdate = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.channelData.channel,
                        t = this.props.userData && this.props.userData.user,
                        n = !1,
                        i = !1;
                    if (t && e && e.self) {
                        var a = t.login === e.login,
                            r = t.roles.isGlobalMod || t.roles.isSiteAdmin || t.roles.isStaff;
                        n = e.self.isModerator || r || a, i = t.roles.isStaff
                    }
                    var s = e && e.chatSettings && e.chatSettings.rules,
                        o = e && e.chatSettings && e.chatSettings.chatDelayMs,
                        l = !(!e || !e.chatSettings) && e.chatSettings.blockLinks;
                    return je.createElement(Kr, {
                        key: this.props.channelLogin,
                        authToken: this.props.user && this.props.user.authToken,
                        blockLinks: l,
                        channelDisplayName: e && e.displayName,
                        channelID: e && e.id,
                        channelLogin: this.props.channelLogin,
                        chatRules: s,
                        chatDelayMS: o,
                        clientID: this.props.clientID,
                        isCurrentUserModerator: n,
                        isEmbedded: !!this.props.isEmbedded,
                        isPopout: !!this.props.isPopout,
                        hostedChannelDisplayName: this.props.hostedChannelDisplayName,
                        onHostingChange: this.props.onHostingChange,
                        userDisplayName: this.props.user && this.props.user.displayName,
                        userID: this.props.user && this.props.user.id.toString(),
                        userLogin: this.props.user && this.props.user.login,
                        isStaff: i
                    })
                }, t = Se.__decorate([Object(Le.a)(Qr, {
                    name: "channelData",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                }), Object(Le.a)(Yr, {
                    name: "userData",
                    skip: function(e) {
                        return !e.user
                    }
                }), Object(kt.c)("Chat")], t)
            }(je.Component),
            Zr = Xr,
            es = Object(Te.a)(Ce)(Zr);
        n.d(t, "a", function() {
            return es
        })
    },
    929: function(e, t) {},
    930: function(e, t) {},
    931: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "DismissPurchaseToken"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DismissPurchaseTokenInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "dismissPurchaseToken"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "token"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 122
            }
        };
        n.loc.source = {
            body: "mutation DismissPurchaseToken($input:DismissPurchaseTokenInput!) {\n  dismissPurchaseToken(input:$input) {\n    token\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    932: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_SharePurchase_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isCommerceRevShareEnabled"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "purchaseTokens"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "title"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: {
                                                    kind: "Name",
                                                    value: "imageThumbnail"
                                                },
                                                name: {
                                                    kind: "Name",
                                                    value: "imageURL"
                                                },
                                                arguments: [{
                                                    kind: "Argument",
                                                    name: {
                                                        kind: "Name",
                                                        value: "width"
                                                    },
                                                    value: {
                                                        kind: "IntValue",
                                                        value: "40"
                                                    }
                                                }],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "imageURL"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteSets"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "emoteSet"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "emotes"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "token"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "badges"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "FragmentSpread",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "badge"
                                                                },
                                                                directives: []
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "bits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "quantity"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "inGameContents"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "imageURL"
                                                        },
                                                        arguments: [{
                                                            kind: "Argument",
                                                            name: {
                                                                kind: "Name",
                                                                value: "width"
                                                            },
                                                            value: {
                                                                kind: "IntValue",
                                                                value: "30"
                                                            }
                                                        }],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 721
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery Chat_SharePurchase_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    isCommerceRevShareEnabled\n    self {\n      purchaseTokens {\n        id\n        title\n        imageThumbnail: imageURL(width: 40)\n        imageURL\n        emoteSets {\n          id\n          emoteSet {\n            id\n            emotes {\n              id\n              token\n            }\n          }\n        }\n        badges {\n          id\n          badge{\n            ...badge\n          }\n        }\n        bits {\n          id\n          quantity\n        }\n        inGameContents {\n          id\n          imageURL(width: 30)\n        }\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = i
    },
    933: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "SharePurchaseTokenInChat"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "SharePurchaseTokenInChatInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "sharePurchaseTokenInChat"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "token"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 134
            }
        };
        n.loc.source = {
            body: "mutation SharePurchaseTokenInChat($input:SharePurchaseTokenInChatInput!) {\n  sharePurchaseTokenInChat(input:$input) {\n    token\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    934: function(e, t) {},
    935: function(e, t) {},
    936: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_ShareResub_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "resubNotification"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "months"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "token"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 195
            }
        };
        n.loc.source = {
            body: "query Chat_ShareResub_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      resubNotification {\n        id\n        months\n        token\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    937: function(e, t) {},
    938: function(e, t) {},
    939: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "BlockUser_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 100
            }
        };
        n.loc.source = {
            body: "query BlockUser_User($targetUserID: ID!) {\n  user(id: $targetUserID) {\n    id\n    displayName\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    940: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ChatRoom_UnblockUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnblockUserInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unblockUser"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "targetUser"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 128
            }
        };
        n.loc.source = {
            body: "mutation ChatRoom_UnblockUser($input: UnblockUserInput!) {\n  unblockUser(input: $input) {\n    targetUser {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    941: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatWhisperCommand_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 86
            }
        };
        n.loc.source = {
            body: "query ChatWhisperCommand_User($login: String!) {\n  user(login: $login) {\n    id\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    942: function(e, t) {},
    943: function(e, t) {},
    944: function(e, t) {},
    945: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RaidNotification_Channels"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "sourceChannelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetChannelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "sourceChannel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "sourceChannelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "targetChannel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetChannelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 290
            }
        };
        n.loc.source = {
            body: "query RaidNotification_Channels($sourceChannelID: ID!, $targetChannelID: ID!) {\n  sourceChannel: user(id: $sourceChannelID) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n  targetChannel: user(id: $targetChannelID) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    946: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RaidNotification_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 52
            }
        };
        n.loc.source = {
            body: "query RaidNotification_User {\n  user {\n    id\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    947: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_BlockedUsers"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "blockedUsers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 89
            }
        };
        n.loc.source = {
            body: "query Chat_BlockedUsers {\n  currentUser {\n    id\n    blockedUsers {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    948: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatList_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                directives: []
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 163
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/chat/models/cheer-fragment.gql"\n\nquery ChatList_Bits($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    ...cheer\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(842).definitions)), e.exports = i
    },
    949: function(e, t) {},
    950: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatRoom_AutohostPrompt"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 161
            }
        };
        n.loc.source = {
            body: "query ChatRoom_AutohostPrompt($login: String!) {\n  currentUser {\n    id\n  }\n\n  user(login: $login) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    951: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_UnbanUserFromChatRoom"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "createdAt"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 154
            }
        };
        n.loc.source = {
            body: "mutation Chat_UnbanUserFromChatRoom($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      createdAt\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    952: function(e, t) {},
    953: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_AllowRejectedChatMessage"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "AllowRejectedChatMessageInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "allowRejectedChatMessage"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "message"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 160
            }
        };
        n.loc.source = {
            body: "mutation Chat_AllowRejectedChatMessage($input: AllowRejectedChatMessageInput!) {\n  allowRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    954: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_DenyRejectedChatMessage"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DenyRejectedChatMessageInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "denyRejectedChatMessage"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "message"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 157
            }
        };
        n.loc.source = {
            body: "mutation Chat_DenyRejectedChatMessage($input: DenyRejectedChatMessageInput!) {\n  denyRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    955: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "IncomingRaidLine_Channel"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "50"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 157
            }
        };
        n.loc.source = {
            body: "query IncomingRaidLine_Channel($channelLogin: String!) {\n  channel: user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    956: function(e, t) {},
    957: function(e, t) {},
    958: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "PinnedCheer_Cheers"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "top"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "chatMessage"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "recent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "chatMessage"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "recentTimeoutMs"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isRecentEnabled"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isTopEnabled"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "recentTimeoutMs"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 381
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/chat/models/chat-message-fragment.gql"\n\nquery PinnedCheer_Cheers($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    cheer {\n      id\n      top {\n        ...chatMessage\n      }\n      recent {\n        ...chatMessage\n      }\n      recentTimeoutMs\n      settings {\n        isRecentEnabled\n        isTopEnabled\n        recentTimeoutMs\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(959).definitions)), e.exports = i
    },
    959: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "chatMessage"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "ChatMessage"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "authorName"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "authorColor"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "author"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "body"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "content"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "emotes"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "embeddedEmote"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "badges"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "setID"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "version"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsUsed"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 288
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/chat/models/embedded-emote-fragment.gql"\n\nfragment chatMessage on ChatMessage {\n  id\n  authorName\n  authorColor\n  author {\n    id\n    login\n  }\n  body {\n    content\n    emotes {\n      ...embeddedEmote\n    }\n  }\n  badges {\n    setID\n    version\n  }\n  bitsUsed\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(905).definitions)), e.exports = i
    },
    960: function(e, t) {},
    961: function(e, t) {},
    962: function(e, t) {},
    963: function(e, t, n) {
        e.exports = n.p + "assets/gift1-8573b4d1700bd278971c52e7d077d1c4.png"
    },
    964: function(e, t) {},
    965: function(e, t, n) {
        e.exports = n.p + "assets/halloween_banner-4cd26b58841153f5c3fa6488f22e0082.png"
    },
    966: function(e, t) {},
    967: function(e, t, n) {
        e.exports = n.p + "assets/gift3-03f7dd6edab76b3567ff92bba447d5cb.png"
    },
    968: function(e, t) {},
    969: function(e, t) {},
    970: function(e, t) {},
    971: function(e, t) {},
    972: function(e, t) {},
    973: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "BitsCard_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "name"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "recentMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "event"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "bitsBadge"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "totalBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "nextBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "progress"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "current"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "FragmentSpread",
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        directives: []
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "next"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "FragmentSpread",
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        directives: []
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "tournament"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "teams"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "name"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 615
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery BitsCard_Bits($name: ID!) {\n  currentUser {\n    id\n    bitsBalance\n    login\n  }\n  user(id: $name) {\n    id\n    displayName\n    cheer {\n      id\n      settings {\n        emoteMinimumBits\n        cheerMinimumBits\n        recentMinimumBits\n        event\n      }\n    }\n    self {\n      bitsBadge {\n        id\n        totalBits\n        nextBits\n        progress\n        current {\n          ...badge\n        }\n        next {\n          ...badge\n        }\n      }\n    }\n    tournament {\n      id\n      teams {\n        id\n        name\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = i
    },
    974: function(e, t) {},
    975: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Core_Services_Spade_ChatEvent_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "id"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPartner"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "stream"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "game"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "name"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 171
            }
        };
        n.loc.source = {
            body: "query Core_Services_Spade_ChatEvent_User($id: ID!) {\n  user(id: $id) {\n    id\n    isPartner\n    stream {\n      id\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    976: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatInput"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isEmbedded"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPartner"
                                },
                                arguments: [],
                                directives: [{
                                    kind: "Directive",
                                    name: {
                                        kind: "Name",
                                        value: "include"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "if"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "isEmbedded"
                                            }
                                        }
                                    }]
                                }],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "hashtags"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "edges"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "cursor"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "node"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "event"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 420
            }
        };
        n.loc.source = {
            body: "query ChatInput($channelLogin: String!, $isEmbedded: Boolean!) {\n  currentUser {\n    id\n    bitsBalance\n    isPartner @include(if: $isEmbedded)\n  }\n  user(login: $channelLogin) {\n    id\n    cheer {\n      id\n      hashtags {\n        edges {\n          cursor\n          node {\n            id\n          }\n        }\n      }\n      settings {\n        emoteMinimumBits\n        cheerMinimumBits\n        event\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    977: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ChatInput_SendCheer"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "SendCheerInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "sendCheer"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "currentUser"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "bitsBalance"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 149
            }
        };
        n.loc.source = {
            body: "mutation ChatInput_SendCheer($input: SendCheerInput!) {\n  sendCheer(input: $input) {\n    id\n    currentUser {\n      id\n      bitsBalance\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    978: function(e, t) {},
    979: function(e, t) {},
    980: function(e, t) {},
    981: function(e, t) {},
    982: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions_BanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 154
            }
        };
        n.loc.source = {
            body: "mutation ViewerCardModActions_BanUser($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    983: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions_UnbanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 160
            }
        };
        n.loc.source = {
            body: "mutation ViewerCardModActions_UnbanUser($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    984: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "chatRoomBanStatus"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }, {
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "userID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPermanent"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 202
            }
        };
        n.loc.source = {
            body: "query ViewerCardModActions($targetUserID: ID!, $channelID: ID!) {\n  # This is currently backwards on the server\n  chatRoomBanStatus(channelID: $targetUserID, userID: $channelID) {\n    isPermanent\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    985: function(e, t) {},
    986: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ViewerCard"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "targetUser"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bannerImageURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channelUser"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "subscriptionProducts"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "price"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "url"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "emoteSetID"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "emotes"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "giftPromotion"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "newPrice"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "oldPrice"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "discountType"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "discountValue"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isModerator"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isGlobalMod"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 628
            }
        };
        n.loc.source = {
            body: "query ViewerCard($targetLogin: String!, $channelID: ID!) {\n  targetUser: user(login: $targetLogin) {\n    id\n    login\n    bannerImageURL\n    displayName\n    profileImageURL(width: 70)\n  }\n  channelUser: user(id: $channelID) {\n    id\n    login\n    displayName,\n    subscriptionProducts {\n      id\n      price\n      url\n      emoteSetID\n      emotes {\n        id\n      }\n      giftPromotion {\n        newPrice\n        oldPrice\n        discountType\n        discountValue\n      }\n    }\n    self {\n      isModerator\n    }\n  }\n  currentUser {\n    login\n    id\n    roles {\n      isSiteAdmin\n      isStaff\n      isGlobalMod\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    987: function(e, t) {},
    988: function(e, t, n) {
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatList_Badges"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "badges"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "badge"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "broadcastBadges"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 225
            }
        };
        i.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatList_Badges($channelLogin: String!) {\n  badges {\n    ...badge\n  }\n  user(login: $channelLogin) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var a = {};
        i.definitions = i.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !a[t] && (a[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = i
    },
    989: function(e, t) {},
    990: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "chatSettings"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "blockLinks"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "rules"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "chatDelayMs"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isModerator"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 235
            }
        };
        n.loc.source = {
            body: "query Chat_ChannelData($channelLogin: String!) {\n  channel: user(login: $channelLogin) {\n    id\n    login\n    displayName\n    chatSettings {\n      blockLinks\n      rules\n      chatDelayMs\n    }\n    self {\n      isModerator\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    991: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_UserData"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isGlobalMod"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 138
            }
        };
        n.loc.source = {
            body: "query Chat_UserData {\n  user {\n    id\n    displayName\n    login\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    992: function(e, t, n) {
        "use strict";

        function i(e) {
            return {
                languagePreferences: Object(l.a)(e)
            }
        }

        function a(e) {
            return Object(s.bindActionCreators)({
                updateLanguagePreferences: o.c,
                clearLanguagePreferences: o.a
            }, e)
        }
        var r = n(6),
            s = n(9),
            o = n(906),
            l = n(925),
            c = n(0),
            u = n(1),
            d = n(2),
            p = n(28),
            m = n(47),
            h = n(869),
            f = n(5),
            g = n(3),
            v = (n(1010), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleLanguageChange = function(e) {
                        var n = e.currentTarget,
                            i = n.parentElement && n.parentElement.getAttribute("data-language-code");
                        i && t.props.updateLanguagePreferences(i, n.checked)
                    }, t.renderLanguageOption = function(e) {
                        return u.createElement(g.U, {
                            padding: {
                                x: 1,
                                y: .5
                            },
                            key: e.code
                        }, u.createElement(g.E, {
                            label: e.label,
                            checked: t.props.languagePreferences.includes(e.code),
                            "data-language-code": e.code,
                            "data-a-target": "language-filter-" + e.code + "-checkbox",
                            onChange: t.handleLanguageChange
                        }))
                    }, t
                }
                return c.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.languagePreferences.length;
                    return u.createElement(g.U, {
                        className: "language-select-menu"
                    }, u.createElement(m.a, null, u.createElement(g.u, {
                        "data-test-selector": "language-dropdown-button",
                        "data-a-target": "language-filter-dropdown",
                        dropdown: !0,
                        type: g.z.Hollow
                    }, u.createElement(g.U, {
                        display: g.H.Flex
                    }, Object(d.d)("Language", "LanguageSelectMenu"), u.createElement(g.U, {
                        margin: {
                            left: .5
                        }
                    }, 0 !== e && u.createElement(g.Z, {
                        type: g._0.Brand,
                        label: e.toString()
                    })))), u.createElement(g.p, {
                        direction: g.q.BottomLeft,
                        noTail: !0,
                        "data-a-target": "language-filter-balloon"
                    }, u.createElement(p.b, {
                        className: "language-select-menu__balloon"
                    }, u.createElement(g.U, {
                        padding: .5
                    }, Object(h.b)().map(this.renderLanguageOption))), u.createElement(g._17, {
                        background: g.m.Alt,
                        borderTop: !0,
                        className: "language-select-menu__footer"
                    }, u.createElement(g.u, {
                        type: g.z.Text,
                        onClick: this.props.clearLanguagePreferences,
                        "data-a-target": "language-clear-all"
                    }, Object(d.d)("Clear all", "LanguageSelectMenu"))))))
                }, t = c.__decorate([Object(f.c)("LanguageSelectMenu")], t)
            }(u.Component)),
            b = v,
            k = Object(r.a)(i, a)(b);
        n.d(t, "a", function() {
            return k
        })
    }
});
//# sourceMappingURL=pages.channel-clips-97fd8fe9e0315fc102ba2c67346fd2cd.js.map