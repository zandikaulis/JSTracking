webpackJsonp([44], {
    1032: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = {
                share_medium: e.shareMedium,
                event_id: e.eventID,
                channel: e.channelLogin,
                channel_id: e.channelID,
                location: e.location
            };
            return s.n.tracking.track(o.SpadeEventType.EventShare, t)
        }

        function i(e) {
            var t = {
                action: e.action,
                channel: e.channelLogin,
                channel_id: e.channelID,
                event_id: e.eventID,
                location: e.location
            };
            return s.n.tracking.track(o.SpadeEventType.EventFollowing, t)
        }
        n.d(t, "a", function() {
            return r
        }), n.d(t, "b", function() {
            return l
        }), t.c = a, t.d = i;
        var r, s = n(2),
            o = n(13);
        ! function(e) {
            e.ChannelEvents = "channel_events", e.EventDetails = "event_details", e.EventManagment = "event_managment"
        }(r || (r = {}));
        var l;
        ! function(e) {
            e.RemindMeOpen = "remind_me_open_modal", e.EmailReminderOn = "email_reminder_on", e.EmailReminderOff = "email_reminder_off"
        }(l || (l = {}))
    },
    130: function(e, t, n) {
        "use strict";

        function a(e) {
            return r.b.get(o.a, !1) || r.a.buildType !== s.a.Production ? "string" == typeof e ? e : e.pathname || "" : "string" == typeof e ? l + e : l + e.pathname
        }

        function i() {
            return !r.b.get(o.a, !1) && r.a.buildType === s.a.Production
        }
        var r = n(2),
            s = n(15),
            o = n(264);
        t.a = a, t.b = i;
        var l = "https://www.twitch.tv"
    },
    1309: function(e, t, n) {
        "use strict";
        var a = n(1),
            i = n(2),
            r = n(3),
            s = (n(1310), function(e) {
                var t = Object(i.c)(e.date, {
                        month: "short"
                    }),
                    n = Object(i.c)(e.date, {
                        day: "numeric"
                    });
                return a.createElement(r._17, {
                    background: r.m.Base,
                    elevation: 2,
                    display: r.H.Flex,
                    flexDirection: r.J.Column,
                    className: "event-calendar-date",
                    margin: {
                        top: .5,
                        left: .5
                    },
                    position: r._2.Absolute,
                    attachTop: !0,
                    attachLeft: !0
                }, a.createElement(r._17, {
                    className: "event-calendar-date__month",
                    display: r.H.Flex,
                    justifyContent: r.T.Center,
                    background: r.m.AccentAlt2
                }, a.createElement(r._21, {
                    fontSize: r.L.Size6,
                    transform: r._25.Uppercase,
                    color: r.F.Overlay
                }, t)), a.createElement(r.U, {
                    display: r.H.Flex,
                    justifyContent: r.T.Center
                }, a.createElement(r._21, {
                    fontSize: r.L.Size3,
                    color: r.F.Base
                }, n)))
            });
        n.d(t, "a", function() {
            return s
        })
    },
    1310: function(e, t) {},
    1311: function(e, t, n) {
        "use strict";

        function a(e) {
            return {
                isLoggedIn: Object(c.d)(e)
            }
        }

        function i(e) {
            return Object(s.bindActionCreators)({
                login: function() {
                    return Object(l.f)(o.a.EventFollowButton)
                }
            }, e)
        }
        var r = n(6),
            s = n(9),
            o = n(54),
            l = n(39),
            c = n(17),
            u = n(0),
            d = n(1),
            p = n(32),
            m = n(2),
            h = n(47),
            f = n(20),
            g = n(1032),
            v = n(3),
            b = n(1312),
            k = n(1313),
            y = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleOpen = function(e) {
                        e && Object(g.d)({
                            action: g.b.RemindMeOpen,
                            channelLogin: t.props.channelLogin,
                            channelID: t.props.channelID,
                            eventID: t.props.eventID,
                            location: t.props.eventLocation
                        })
                    }, t.handleToggle = function() {
                        if (!t.props.isLoggedIn) return t.props.login();
                        if (t.props.areNotificationsEnabled) {
                            var e = u.__assign({}, Object(f.a)({
                                eventID: t.props.eventID
                            }), {
                                optimisticResponse: {
                                    unfollowEvent: {
                                        __typename: "UnfollowEventPayload",
                                        event: {
                                            __typename: "Event",
                                            id: t.props.eventID,
                                            self: {
                                                __typename: "EventSelfConnection",
                                                isFollowing: !1
                                            }
                                        }
                                    }
                                }
                            });
                            t.props.unfollowEvent(e)
                        } else {
                            var e = u.__assign({}, Object(f.a)({
                                eventID: t.props.eventID
                            }), {
                                optimisticResponse: {
                                    followEvent: {
                                        __typename: "FollowEventPayload",
                                        event: {
                                            __typename: "Event",
                                            id: t.props.eventID,
                                            self: {
                                                __typename: "EventSelfConnection",
                                                isFollowing: !0
                                            }
                                        }
                                    }
                                }
                            });
                            t.props.followEvent(e)
                        }
                        Object(g.d)({
                            action: t.props.areNotificationsEnabled ? g.b.EmailReminderOff : g.b.EmailReminderOn,
                            channelLogin: t.props.channelLogin,
                            channelID: t.props.channelID,
                            eventID: t.props.eventID,
                            location: t.props.eventLocation
                        })
                    }, t
                }
                return u.__extends(t, e), t.prototype.render = function() {
                    return d.createElement(h.a, {
                        onToggle: this.handleOpen
                    }, d.createElement(v.u, {
                        dropdown: !0
                    }, Object(m.d)("Remind Me", "FollowEvent")), d.createElement(v.p, {
                        direction: this.props.balloonDirection
                    }, d.createElement(v.U, {
                        padding: 1
                    }, d.createElement(v._17, {
                        display: v.H.Flex,
                        flexDirection: v.J.Row,
                        flexWrap: v.K.NoWrap,
                        justifyContent: v.T.Between,
                        margin: {
                            bottom: 1
                        },
                        padding: {
                            bottom: 1
                        },
                        borderBottom: !0
                    }, d.createElement(v._21, null, Object(m.d)("Reminders", "FollowEvent")), d.createElement(v._29, {
                        checked: this.props.areNotificationsEnabled,
                        onChange: this.handleToggle
                    })), d.createElement(v._21, {
                        color: v.F.Alt
                    }, Object(m.d)("Turn on reminders to be notified when this event starts.", "FollowEvent")))))
                }, t
            }(d.Component),
            _ = Object(p.compose)(Object(p.graphql)(b, {
                name: "followEvent"
            }), Object(p.graphql)(k, {
                name: "unfollowEvent"
            }))(y),
            C = Object(r.a)(a, i)(_);
        n.d(t, "a", function() {
            return C
        })
    },
    1312: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Events_FollowEvent"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "FollowEventInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "followEvent"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "event"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "self"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isFollowing"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 162
            }
        };
        n.loc.source = {
            body: "mutation Events_FollowEvent($input: FollowEventInput!) {\n  followEvent(input: $input) {\n    event {\n      id\n      self {\n        isFollowing\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1313: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Events_FollowEvent"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnfollowEventInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unfollowEvent"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "event"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "self"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isFollowing"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 166
            }
        };
        n.loc.source = {
            body: "mutation Events_FollowEvent($input: UnfollowEventInput!) {\n  unfollowEvent(input: $input) {\n    event {\n      id\n      self {\n        isFollowing\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1314: function(e, t, n) {
        "use strict";

        function a(e) {
            return {
                isLoggedIn: Object(d.d)(e)
            }
        }

        function i(e) {
            return Object(o.bindActionCreators)({
                login: function() {
                    return Object(u.f)(l.a.ReportChannel)
                },
                showReportUserModal: function(e) {
                    var t = r.__rest(e, []);
                    return Object(c.d)(p.a, t)
                }
            }, e)
        }
        var r = n(0),
            s = n(6),
            o = n(9),
            l = n(54),
            c = n(37),
            u = n(39),
            d = n(17),
            p = n(379),
            m = n(1),
            h = n(2),
            f = n(47),
            g = n(262),
            v = n(3),
            b = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleReportClick = function() {
                        if (!t.props.isLoggedIn) return t.props.login();
                        var e = "https://www.twitch.tv/events/" + t.props.eventID;
                        t.props.showReportUserModal({
                            reportContext: {
                                contentType: g.a.User,
                                targetUserID: t.props.targetUser.id
                            },
                            title: Object(h.d)("Report {channelName}", {
                                channelName: t.props.targetUser.displayName
                            }, "EventMoreMenu"),
                            defaultDescription: "Report event: " + e
                        })
                    }, t
                }
                return r.__extends(t, e), t.prototype.render = function() {
                    return m.createElement(f.a, null, m.createElement(v.u, {
                        icon: v._9.More,
                        type: v.z.Hollow
                    }), m.createElement(v.p, {
                        direction: this.props.balloonDirection
                    }, m.createElement(v.U, {
                        padding: {
                            y: 1
                        }
                    }, m.createElement(v.S, {
                        onClick: this.handleReportClick
                    }, m.createElement(v.U, {
                        padding: {
                            x: 1,
                            y: .5
                        }
                    }, Object(h.d)("Report", "EventMoreMenu"))))))
                }, t
            }(m.Component),
            k = Object(s.a)(a, i)(b);
        n.d(t, "a", function() {
            return k
        })
    },
    1315: function(e, t, n) {
        "use strict";

        function a(e) {
            return "https://www.twitch.tv/events/" + e
        }
        var i = n(0),
            r = n(1),
            s = n(2),
            o = n(993),
            l = n(47),
            c = n(1032),
            u = n(3),
            d = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onShareClicked = function(e) {
                        var n = "";
                        switch (e) {
                            case o.b.Twitter:
                                n = "twitter";
                                break;
                            case o.b.Facebook:
                                n = "facebook";
                                break;
                            case o.b.Reddit:
                                n = "reddit";
                                break;
                            case o.b.VKontakte:
                                n = "vk";
                                break;
                            default:
                                n = "unknown"
                        }
                        Object(c.c)({
                            shareMedium: n,
                            eventID: t.props.id,
                            channelLogin: t.props.channelLogin,
                            channelID: t.props.channelID,
                            location: t.props.eventLocation
                        })
                    }, t
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    var e = a(this.props.id);
                    return r.createElement(l.a, null, r.createElement(u.u, {
                        dropdown: !0,
                        type: u.z.Hollow
                    }, Object(s.d)("Share", "ShareEvent")), r.createElement(u.p, {
                        direction: this.props.balloonDirection
                    }, r.createElement(u.U, {
                        padding: 1
                    }, r.createElement(u.U, {
                        display: u.H.Flex,
                        flexDirection: u.J.Row,
                        flexWrap: u.K.NoWrap,
                        justifyContent: u.T.Center
                    }, r.createElement(o.a, {
                        type: o.b.Twitter,
                        text: this.props.title,
                        url: e,
                        onShareClick: this.onShareClicked
                    }), r.createElement(o.a, {
                        type: o.b.Facebook,
                        text: this.props.title,
                        url: e,
                        onShareClick: this.onShareClicked
                    }), r.createElement(o.a, {
                        type: o.b.Reddit,
                        text: this.props.title,
                        url: e,
                        onShareClick: this.onShareClicked
                    }), r.createElement(o.a, {
                        type: o.b.VKontakte,
                        text: this.props.title,
                        url: e,
                        onShareClick: this.onShareClicked
                    }), r.createElement(o.a, {
                        type: o.b.Copy,
                        text: this.props.title,
                        url: e
                    })))))
                }, t
            }(r.Component);
        n.d(t, "a", function() {
            return d
        })
    },
    1701: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "EventsPage_EventScheduleQuery"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "limit"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Int"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "cursor"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Cursor"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "before"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Time"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "after"
                        }
                    },
                    type: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "Time"
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "following"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "events"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "first"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "limit"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "after"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "cursor"
                                        }
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "criteria"
                                    },
                                    value: {
                                        kind: "ObjectValue",
                                        fields: [{
                                            kind: "ObjectField",
                                            name: {
                                                kind: "Name",
                                                value: "endsBefore"
                                            },
                                            value: {
                                                kind: "Variable",
                                                name: {
                                                    kind: "Name",
                                                    value: "before"
                                                }
                                            }
                                        }, {
                                            kind: "ObjectField",
                                            name: {
                                                kind: "Name",
                                                value: "endsAfter"
                                            },
                                            value: {
                                                kind: "Variable",
                                                name: {
                                                    kind: "Name",
                                                    value: "after"
                                                }
                                            }
                                        }]
                                    }
                                }],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "pageInfo"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "hasNextPage"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "edges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cursor"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "node"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "self"
                                                        },
                                                        arguments: [],
                                                        directives: [{
                                                            kind: "Directive",
                                                            name: {
                                                                kind: "Name",
                                                                value: "include"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "if"
                                                                },
                                                                value: {
                                                                    kind: "Variable",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "following"
                                                                    }
                                                                }
                                                            }]
                                                        }],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "isFollowing"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "InlineFragment",
                                                        typeCondition: {
                                                            kind: "NamedType",
                                                            name: {
                                                                kind: "Name",
                                                                value: "SingleEvent"
                                                            }
                                                        },
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "title"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "startAt"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "endAt"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "game"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "displayName"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "channel"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "login"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "displayName"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "imageURL"
                                                                },
                                                                arguments: [{
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "width"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "320"
                                                                    }
                                                                }, {
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "height"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "180"
                                                                    }
                                                                }],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }, {
                                                        kind: "InlineFragment",
                                                        typeCondition: {
                                                            kind: "NamedType",
                                                            name: {
                                                                kind: "Name",
                                                                value: "PremiereEvent"
                                                            }
                                                        },
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "title"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "startAt"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "endAt"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "game"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "displayName"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "channel"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "displayName"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "imageURL"
                                                                },
                                                                arguments: [{
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "width"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "320"
                                                                    }
                                                                }, {
                                                                    kind: "Argument",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "height"
                                                                    },
                                                                    value: {
                                                                        kind: "IntValue",
                                                                        value: "180"
                                                                    }
                                                                }],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 1103
            }
        };
        n.loc.source = {
            body: "query EventsPage_EventScheduleQuery($channelLogin: String!, $limit: Int, $cursor: Cursor, $before: Time, $after: Time, $following: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    events(first: $limit, after: $cursor, criteria: {endsBefore: $before, endsAfter: $after}) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          self @include(if: $following) {\n            isFollowing\n          }\n          ...on SingleEvent {\n            title\n            startAt\n            endAt\n            game {\n              id\n              displayName\n            }\n            channel {\n              id\n              login\n              displayName\n            }\n            imageURL(width:320, height:180)\n          }\n          ...on PremiereEvent {\n            title\n            startAt\n            endAt\n            game {\n              id\n              displayName\n            }\n            channel {\n              id\n              displayName\n            }\n            imageURL(width:320, height:180)\n          }\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    1702: function(e, t) {},
    2060: function(e, t, n) {
        "use strict";

        function a(e, t) {
            var n = new Date,
                a = {
                    weekday: "long",
                    month: "short",
                    day: "numeric"
                },
                i = {
                    timeZoneName: "short"
                };
            n.getFullYear() !== e.getFullYear() && (a = o.__assign({}, a, {
                year: "numeric"
            })), e.getDate() !== t.getDate() && (i = o.__assign({}, i, {
                weekday: "long",
                month: "short",
                day: "numeric"
            }), n.getFullYear() !== t.getFullYear() && (i = o.__assign({}, i, {
                year: "numeric"
            })));
            var r = Object(d.h)(e, a),
                s = Object(d.h)(t, i);
            return Object(d.d)("{startTime} - {endTime}", {
                startTime: r,
                endTime: s
            }, "EventListCard")
        }

        function i(e) {
            switch (e) {
                case "past":
                    return s.Past;
                case "future":
                default:
                    return s.Future
            }
        }

        function r(e) {
            return {
                isLoggedIn: Object(C.d)(e)
            }
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var s, o = n(0),
            l = n(21),
            c = n(1),
            u = n(32),
            d = n(2),
            p = n(28),
            m = n(819),
            h = n(817),
            f = n(13),
            g = n(69),
            v = n(879),
            b = n(929),
            k = n(5),
            y = n(451),
            _ = n(6),
            C = n(17),
            S = n(10),
            E = n(377),
            w = n(1309),
            N = n(1311),
            D = n(1314),
            I = n(1315),
            O = n(1032),
            U = n(3),
            x = function(e) {
                var t = new Date(e.event.startAt),
                    n = new Date(e.event.endAt),
                    i = t > new Date,
                    r = Object(E.c)(e.event.id),
                    s = !(!e.event.self || !e.event.self.isFollowing),
                    o = e.upwardBalloons ? U.q.Top : U.q.Bottom,
                    l = e.event.game && e.event.game.displayName || "-";
                return c.createElement(U._17, {
                    margin: {
                        y: 1
                    },
                    background: U.m.Base,
                    elevation: 1
                }, c.createElement(U.A, {
                    row: !0
                }, c.createElement(U.P, {
                    flexShrink: 0
                }, c.createElement(S.a, {
                    to: r
                }, c.createElement(U.C, {
                    size: U.D.Size32,
                    aspect: U.k.Aspect16x9,
                    imageSrc: e.event.imageURL,
                    imageAlt: e.event.title
                }, c.createElement(w.a, {
                    date: t
                })))), c.createElement(U.B, null, c.createElement(U.U, {
                    margin: {
                        x: 2
                    }
                }, c.createElement(U.P, {
                    margin: {
                        bottom: 1
                    }
                }, c.createElement(S.a, {
                    to: r
                }, c.createElement(U._21, {
                    type: U._26.H4
                }, e.event.title))), c.createElement(U._21, {
                    color: U.F.Alt2
                }, a(t, n)), c.createElement(U._21, {
                    color: U.F.Alt2
                }, Object(d.d)("{channelName} streaming {gameName}", {
                    channelName: e.event.channel.displayName,
                    gameName: l
                }, "EventListCard")), c.createElement(U.U, {
                    display: U.H.Flex,
                    margin: {
                        top: 2
                    }
                }, i && c.createElement(U.U, {
                    margin: {
                        right: 1
                    }
                }, c.createElement(N.a, {
                    eventID: e.event.id,
                    areNotificationsEnabled: s,
                    channelLogin: e.event.channel.login,
                    channelID: e.event.channel.id,
                    eventLocation: O.a.ChannelEvents,
                    balloonDirection: o
                })), c.createElement(U.U, {
                    margin: {
                        right: 1
                    }
                }, c.createElement(I.a, {
                    id: e.event.id,
                    title: e.event.title,
                    channelLogin: e.event.channel.login,
                    channelID: e.event.channel.id,
                    eventLocation: O.a.ChannelEvents,
                    balloonDirection: o
                })), c.createElement(U.U, {
                    margin: {
                        right: 1
                    }
                }, c.createElement(U.u, {
                    type: U.z.Hollow,
                    linkTo: r
                }, Object(d.d)("View Details", "EventListCard"))), c.createElement(D.a, {
                    targetUser: {
                        id: e.event.channel.id,
                        displayName: e.event.channel.displayName
                    },
                    eventID: e.event.id,
                    balloonDirection: o
                }))))))
            },
            T = Object(k.c)("EventListCard", {
                autoReportInteractive: !0
            })(x);
        ! function(e) {
            e.Future = "future", e.Past = "past"
        }(s || (s = {}));
        var L = n(1701),
            F = function(e) {
                var t = null,
                    n = null,
                    a = null,
                    i = !1;
                return e.data.loading || e.data.error ? e.data.error && (t = Object(d.d)("Error loading events", "ChannelEventsSchedule")) : (a = e.data.user.events.edges.map(function(e, t, n) {
                    return c.createElement(T, {
                        key: e.node.id,
                        event: e.node,
                        upwardBalloons: t === n.length - 1
                    })
                }), 0 === e.data.user.events.edges.length && (t = Object(d.d)("Nothing here yet", "ChannelEventsSchedule")), i = e.data.user.events.pageInfo.hasNextPage), null !== t && (n = c.createElement(U.U, {
                    margin: {
                        top: 5
                    },
                    display: U.H.Flex,
                    flexDirection: U.J.Row,
                    justifyContent: U.T.Center
                }, c.createElement(U._21, {
                    type: U._26.H4,
                    color: U.F.Alt2,
                    italic: !0
                }, t))), c.createElement(U.U, null, a, n, e.data.loading && c.createElement(U.X, {
                    fillContent: !0
                }), c.createElement(p.a, {
                    loadMore: e.loadMore,
                    enabled: i
                }))
            },
            j = {
                options: function(e) {
                    return {
                        variables: {
                            channelLogin: e.channelLogin,
                            limit: 20,
                            before: e.filter === s.Future ? null : (new Date).toISOString(),
                            after: e.filter !== s.Future ? null : (new Date).toISOString(),
                            following: e.isLoggedIn && e.filter === s.Future
                        }
                    }
                },
                props: function(e) {
                    return o.__assign({}, e, {
                        loadMore: function() {
                            return e.data.fetchMore({
                                query: L,
                                variables: o.__assign({}, e.data.variables, {
                                    cursor: e.data.user.events.edges[Math.max(e.data.user.events.edges.length - 1, 0)].cursor
                                }),
                                updateQuery: function(e, t) {
                                    var n = t.fetchMoreResult,
                                        a = n;
                                    return {
                                        user: o.__assign({}, a.user, {
                                            events: o.__assign({}, a.user.events, {
                                                edges: e.user.events.edges.concat(a.user.events.edges)
                                            })
                                        })
                                    }
                                }
                            })
                        }
                    })
                }
            },
            B = Object(u.compose)(Object(u.graphql)(L, j), Object(k.c)("ChannelEventsSchedule", {
                autoReportInteractive: !0
            }))(F),
            M = Object(_.a)(r)(B),
            A = (n(1702), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleToggleChange = function(e) {
                        var n = i(e.currentTarget.value),
                            a = l.parse(t.props.location.search);
                        n !== s.Future ? a.filter = n : delete a.filter, t.props.history.replace(o.__assign({}, t.props.location, {
                            search: l.stringify(a)
                        }))
                    }, t
                }
                return o.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.setPageTitle()
                }, t.prototype.componentDidUpdate = function() {
                    this.setPageTitle()
                }, t.prototype.render = function() {
                    var e = this.props.match.params.channelLogin,
                        t = l.parse(this.props.location.search),
                        n = i(t.filter);
                    return c.createElement(U.U, {
                        display: U.H.Flex,
                        flexDirection: U.J.Column,
                        flexWrap: U.K.NoWrap,
                        fullHeight: !0,
                        fullWidth: !0
                    }, c.createElement(v.a, {
                        currentPage: v.b.Events,
                        channelLogin: e
                    }), c.createElement(U.U, {
                        display: U.H.Flex,
                        flexGrow: 1,
                        fullHeight: !0
                    }, c.createElement(U.P, {
                        fullWidth: !0
                    }, c.createElement(p.b, null, c.createElement(U.U, {
                        fullWidth: !0,
                        padding: {
                            y: 2,
                            x: 3
                        }
                    }, c.createElement(U._12, null, c.createElement(U._13, {
                        name: "events-toggle",
                        label: Object(d.d)("Future Events", "ChannelEventsPage"),
                        defaultChecked: n === s.Future,
                        onChange: this.handleToggleChange,
                        value: s.Future
                    }), c.createElement(U._13, {
                        name: "events-toggle",
                        label: Object(d.d)("Past Events", "ChannelEventsPage"),
                        defaultChecked: n === s.Past,
                        onChange: this.handleToggleChange,
                        value: s.Past
                    })), c.createElement(M, {
                        filter: n,
                        channelLogin: e
                    })))), c.createElement(y.b, null, c.createElement(U._17, {
                        className: "channel-events__sidebar",
                        background: U.m.Alt2,
                        display: U.H.Flex,
                        flexGrow: 0,
                        flexShrink: 0,
                        overflow: U.Y.Hidden,
                        flexDirection: U.J.Column,
                        flexWrap: U.K.NoWrap,
                        fullHeight: !0
                    }, c.createElement(b.a, {
                        channelLogin: e,
                        clientID: g.o.config.legacyClientID
                    })))))
                }, t.prototype.setPageTitle = function() {
                    g.o.setPageTitle(Object(d.d)("{channelName}'s Events", {
                        channelName: this.props.match.params.channelLogin
                    }, "ChannelEventsPage"))
                }, t
            }(c.Component)),
            R = Object(u.compose)(Object(k.c)("EventCollectionsPage", {
                destination: h.a.ChannelEvents,
                autoReportInteractive: !0
            }), Object(m.a)({
                location: f.PageviewLocation.ChannelEvents
            }))(A);
        n.d(t, "ChannelEventsPage", function() {
            return R
        })
    },
    264: function(e, t, n) {
        "use strict";
        var a = n(0),
            i = n(21),
            r = n(1),
            s = n(2),
            o = n(15),
            l = "legacy_routes_enabled",
            c = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.isEnabled = !1, n.onHistoryChange = function(e, t) {
                        return n.isEnabled ? "REPLACE" === t ? void n.logger.debug("Skipping legacy route processing, due to history replace.") : e && e.pathname ? (n.logger.debug("Location changed", {
                            path: e.pathname
                        }), void n.legacyRoutes.forEach(function(t) {
                            try {
                                if (e.pathname.match(t)) {
                                    n.logger.debug("Found legacy route. Reloading...");
                                    var a = "" !== e.search ? i.parse(e.search) : {};
                                    a["from-redirect"] = "true";
                                    var r = i.stringify(a),
                                        l = s.a.buildType === o.a.Dev ? window.location.host : window.location.hostname,
                                        c = window.location.protocol + "//" + l + e.pathname + "?" + r;
                                    return n.logger.debug("Redirecting to legacy route", {
                                        newUrl: c
                                    }), void window.location.replace(c)
                                }
                            } catch (e) {
                                s.i.withCategory("legacy").error(e, "Unable to determine legacy reload match", {
                                    regex: t
                                })
                            }
                        })) : void n.logger.debug("Unable to process history change. Path is null or empty.") : void n.logger.debug("Legacy routing not enabled.")
                    }, n.processRedirectParam = function(e) {
                        if (e && e.pathname && e.search) {
                            var t = "" !== e.search ? i.parse(e.search) : {};
                            if (t["from-redirect"]) {
                                delete t["from-redirect"];
                                var a = i.stringify(t),
                                    r = "";
                                a.length > 0 && (r = "?" + a), n.props.history.replace({
                                    pathname: e.pathname,
                                    hash: e.hash,
                                    search: r
                                })
                            }
                        }
                    }, n.isEnabled = s.b.get(l, !1), n.logger = s.i.withCategory("legacy-routes"), n.legacyRoutes = n.buildRoutes(), n.props.history.listen(n.onHistoryChange), n
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    return null
                }, t.prototype.componentDidMount = function() {
                    this.processRedirectParam(this.props.history.location)
                }, t.prototype.buildRoutes = function() {
                    if (!this.isEnabled) return [];
                    this.logger.debug("Building legacy routes...");
                    var e = s.b.get("legacy_routes", []),
                        t = [];
                    if (!e || 0 === e.length) return this.logger.debug("No legacy routes found in settings."), t;
                    for (var n = 0, a = e; n < a.length; n++) {
                        var i = a[n];
                        try {
                            var r = new RegExp(i, "i");
                            t.push(r)
                        } catch (e) {
                            this.logger.debug("Failed to parse route!", {
                                val: i,
                                err: e
                            })
                        }
                    }
                    return this.logger.debug("Done building legacy routes!", {
                        count: t.length
                    }), t
                }, t
            }(r.Component),
            u = c;
        n.d(t, "a", function() {
            return l
        }), n.d(t, !1, function() {
            return "legacy_routes"
        }), n.d(t, "b", function() {
            return u
        })
    },
    385: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a;
        ! function(e) {
            e[e.Ready = 0] = "Ready", e[e.Dimensions = 1] = "Dimensions", e[e.RequestAd = 2] = "RequestAd", e[e.OnStart = 3] = "OnStart", e[e.OnCredit = 4] = "OnCredit", e[e.OnFinish = 5] = "OnFinish", e[e.OnClose = 6] = "OnClose", e[e.OnError = 7] = "OnError", e[e.Adblock = 8] = "Adblock", e[e.LimitReached = 9] = "LimitReached"
        }(a || (a = {}))
    },
    814: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a;
        ! function(e) {
            e[e.Post = 0] = "Post", e[e.Action = 1] = "Action", e[e.PostWithMention = 2] = "PostWithMention", e[e.Ban = 3] = "Ban", e[e.Timeout = 4] = "Timeout", e[e.AutoModRejectedPrompt = 5] = "AutoModRejectedPrompt", e[e.AutoModMessageRejected = 6] = "AutoModMessageRejected", e[e.AutoModMessageAllowed = 7] = "AutoModMessageAllowed", e[e.AutoModMessageDenied = 8] = "AutoModMessageDenied", e[e.Connected = 9] = "Connected", e[e.Disconnected = 10] = "Disconnected", e[e.Reconnect = 11] = "Reconnect", e[e.Hosting = 12] = "Hosting", e[e.Unhost = 13] = "Unhost", e[e.Subscription = 14] = "Subscription", e[e.Resubscription = 15] = "Resubscription", e[e.SubGift = 16] = "SubGift", e[e.Clear = 17] = "Clear", e[e.SubscriberOnlyMode = 18] = "SubscriberOnlyMode", e[e.FollowerOnlyMode = 19] = "FollowerOnlyMode", e[e.SlowMode = 20] = "SlowMode", e[e.EmoteOnlyMode = 21] = "EmoteOnlyMode", e[e.RoomMods = 22] = "RoomMods", e[e.RoomState = 23] = "RoomState", e[e.Raid = 24] = "Raid", e[e.Unraid = 25] = "Unraid", e[e.Notice = 26] = "Notice", e[e.Info = 27] = "Info", e[e.BadgesUpdated = 28] = "BadgesUpdated", e[e.Purchase = 29] = "Purchase", e[e.CrateGift = 30] = "CrateGift"
        }(a || (a = {}))
    },
    815: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = {
                action_name: e.actionName,
                action_type: "click",
                client_time: (new Date).getTime(),
                displayed_balance: e.displayedBalance,
                emote_level: e.emoteLevel,
                emote_type: e.emoteType,
                bits_location: e.location || d.ChatTooltip
            };
            c.m.track(u.SpadeEventType.BitsCardInteraction, t)
        }

        function i(e) {
            return e && m[e] ? m[e] : (c.i.error(new Error('Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), 'Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), p.Buy100)
        }

        function r(e) {
            var t = {
                channel: e.channel,
                channel_id: e.channelID,
                available: e.available,
                host: "twitch.tv"
            };
            c.m.track(u.SpadeEventType.BitsAdsAvailability, t)
        }

        function s(e) {
            var t = {
                distinct_id: c.n.session.deviceID,
                host: "twitch.tv",
                request_id: e.requestID,
                campaign_id: e.campaignID,
                adblock: e.adblock
            };
            c.m.track(u.SpadeEventType.BitsAdsImpression, t)
        }

        function o(e) {
            var t = c.m.getLastPageview(),
                n = {
                    location: t ? t.location || "" : "",
                    ad_returned: null,
                    campaign_id: e.campaignID,
                    distinct_id: c.n.session.deviceID,
                    host: "twitch.tv",
                    request_id: e.requestID,
                    request_method: e.requestMethod
                };
            c.m.track(u.SpadeEventType.BitsAdsRequest, n)
        }
        t.h = a, n.d(t, "b", function() {
            return d
        }), n.d(t, "a", function() {
            return p
        }), t.d = i, t.e = r, t.f = s, n.d(t, "c", function() {
            return l
        }), t.g = o;
        var l, c = n(2),
            u = n(13),
            d = {
                ChatTooltip: "card",
                GetBitsButton: "get_bits_button",
                BitsLandingPage: "bits_landing_page"
            },
            p = {
                BuyMain: "buy_main",
                Buy100: "buy_100",
                Buy500: "buy_500",
                Buy1000: "buy_1000",
                Buy1500: "buy_1500",
                Buy5000: "buy_5000",
                Buy10000: "buy_10000",
                Buy25000: "buy_25000",
                CloseCard: "menu_close",
                OpenCard: "menu_open",
                PreviewEmote: "emote_preview",
                WatchAd: "watch_ad",
                WatchAnotherAd: "watch_another_ad"
            },
            m = {
                100: p.Buy100,
                500: p.Buy500,
                1e3: p.Buy1000,
                1500: p.Buy1500,
                5e3: p.Buy5000,
                1e4: p.Buy10000,
                25e3: p.Buy25000
            };
        ! function(e) {
            e.ShowAdButton = "show_ad_button"
        }(l || (l = {}))
    },
    816: function(e, t, n) {
        "use strict";

        function a(e) {
            return e + "-" + Date.now() + "}"
        }
        t.a = a
    },
    817: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a = {
            BrowseCommunities: "browse.communities",
            BrowseCreative: "browse.creative",
            BrowseForYou: "browse.for-you",
            ChannelIndex: "channel.index.index",
            ChannelDashboardAchievements: "channel.dashboard.achievements",
            ChannelDashboardExtensions: "channel.dashboard.extensions",
            ChannelDashboardModeration: "channel.dashboard.moderation",
            ChannelDashboardStreamSummary: "channel.dashboard.stream-summary",
            ChannelClips: "channel.clips",
            ChannelClipsManager: "videoManager.clips.channel",
            ChannelCollections: "channel.collections",
            ChannelEvents: "channel.events",
            ChatPopout: "chat",
            DevOnly: "dev",
            DirectoryCommunityByLanguage: "directory.community.language",
            DirectoryCommunityIndex: "directory.community.index",
            DirectoryCommunityDetails: "directory.community.details",
            DirectoryGames: "directory.games",
            DirectoryPopular: "directory.popular",
            DirectoryPopularByLanguage: "directory.popular.language",
            DirectoryGameIndex: "directory.game.index",
            DirectoryGameClips: "directory.game.clips",
            DirectoryGameDetails: "directory.game.details",
            DirectoryGameVideos: "directory.game.videos",
            DirectoryFollowingIndex: "directory.following.index",
            DirectoryFollowingGames: "directory.following.games",
            DirectoryFollowingVideos: "directory.following.videos.video-type",
            DirectoryFollowingHosts: "directory.following.hosts",
            DirectoryFollowingLiveChannels: "directory.following.channels",
            DirectoryFollowingCommunities: "directory.following.communities",
            EmailVerification: "emailVerification",
            EventDetails: "event.details",
            Index: "index",
            MyClipsManager: "videoManager.clips",
            NotificationSettingsPage: "settings.notificationSettings",
            OnboardingIndex: "onboarding.index",
            ReportUserPage: "reportUser.page",
            StoreMerchPage: "store.merch",
            SubsLandingPage: "subs.landing",
            SubsBroadcasterPage: "subs.broadcaster",
            TeamsDashboardBasicInfo: "teams.dashboard.basic-info",
            TeamsDashboardCustomize: "teams.dashboard.customize",
            TeamsDashboardFeaturedChannels: "teams.dashboard.featured-channels",
            TeamsDashboardMembers: "teams.dashboard.members",
            TeamsDashboardStats: "teams.dashboard.stats",
            TeamsDashboardRevenue: "teams.dashboard.revenue",
            VideosPage: "videos",
            VideoWatchPage: "video",
            VideoManagerPage: "videoManager.page",
            VideoManagerEditPropertiesPage: "videoManager.edit",
            VideoManagerUploadPage: "videoManager.upload",
            VideoManagerUploadListPage: "videoManager.upload-list"
        }
    },
    819: function(e, t, n) {
        "use strict";

        function a(e) {
            return function(t) {
                var n = function(n) {
                    function a(t) {
                        var a = n.call(this, t) || this;
                        return a.tracked = !1, a.referenceTracking = {}, a.trackPageview = function() {
                            if (!(a.tracked || e.skip && e.skip(a.props))) {
                                a.tracked = !0, l.n.adBlockSentinel.pageTransition();
                                var t = {};
                                "function" == typeof e.properties ? t = e.properties(a.props) : e.properties && (t = i.__assign({}, e.properties));
                                var n = i.__assign({}, a.props);
                                n.location && n.location.state && (t.medium = n.location.state.medium, t.content = n.location.state.content, t.content_index = n.location.state.content_index);
                                var r = a.referenceTracking,
                                    s = r.content,
                                    o = r.medium,
                                    c = r.content_index;
                                l.n.tracking.trackPageview(i.__assign({
                                    content: s,
                                    medium: o,
                                    content_index: c,
                                    location: e.location
                                }, t))
                            }
                        }, l.i.debug("pageViewTracking", e), t.rootLatencyTracker ? t.rootLatencyTracker.setLocation(e.location) : l.i.warn("No latency tracker exists! This means no data will be sent to Spade.", e), a
                    }
                    return i.__extends(a, n), a.prototype.componentDidMount = function() {
                        var e = this;
                        this.referenceTracking = this.stripTTParams(this.props.history.location), this.trackPageview(), this.props.history.listen(function(t, n) {
                            "REPLACE" !== n && (e.tracked = !1, e.referenceTracking = {})
                        })
                    }, a.prototype.componentDidUpdate = function() {
                        this.trackPageview()
                    }, a.prototype.render = function() {
                        return s.createElement(t, i.__assign({}, this.props))
                    }, a.prototype.stripTTParams = function(e) {
                        var t = "" !== e.search ? r.parse(e.search) : {},
                            n = {
                                content: t.tt_content,
                                content_index: t.tt_content_index,
                                medium: t.tt_medium
                            };
                        if (delete t.tt_content, delete t.tt_content_index, delete t.tt_medium, n.medium || n.content) {
                            var a = "",
                                i = r.stringify(t);
                            i.length > 0 && (a = "?" + i), this.props.history.replace({
                                pathname: e.pathname,
                                hash: e.hash,
                                search: a
                            })
                        }
                        return n
                    }, a
                }(s.Component);
                return Object(o.f)(n)
            }
        }
        var i = n(0),
            r = n(21),
            s = n(1),
            o = n(10),
            l = n(2);
        n.d(t, "a", function() {
            return a
        })
    },
    820: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        }), n.d(t, "b", function() {
            return i
        }), n.d(t, "d", function() {
            return r
        }), n.d(t, "e", function() {
            return s
        }), n.d(t, "c", function() {
            return o
        });
        var a = "AD",
            i = "BUNDLE",
            r = "first_time_purchase",
            s = "single_purchase",
            o = "black_friday_2017"
    },
    821: function(e, t, n) {
        "use strict";

        function a(e) {
            return e.type !== d.a && (r(e) && null !== e.promotion && e.promotion.type === d.d)
        }

        function i(e) {
            return e.type !== d.a && (r(e) && null !== e.promotion && e.promotion.type === d.e)
        }

        function r(e) {
            return e.type === d.b && null !== e.promotion && !!e.promotion
        }

        function s(e) {
            var t = 0,
                n = 0,
                a = 0;
            return e.forEach(function(e) {
                e.cheerAmount && (t = Math.max(t, e.cheerAmount), n = n ? Math.min(n, e.cheerAmount) : e.cheerAmount, a += e.cheerAmount)
            }), {
                total: a,
                smallestCheermote: n,
                largestCheermote: t
            }
        }

        function o(e) {
            var t = e.messageBits,
                n = t.total,
                a = t.largestCheermote,
                i = t.smallestCheermote;
            if (n) {
                var r = {
                    cheerAboveMaxBitsPerEmote: a > p.l,
                    totalAboveBalance: n > e.balance,
                    totalBelowCheerMinimum: n < e.cheerMinimumBits,
                    totalBelowEmoteMinimum: i < e.emoteMinimumBits,
                    inputLongerThanMaxBitsMessage: e.inputValue.length > p.k,
                    inputStartsWithCommand: e.inputValue.startsWith("/")
                };
                if (Object.keys(r).some(function(e) {
                        return r[e]
                    })) return c.__assign({
                    canSpend: !1
                }, r)
            }
            return {
                canSpend: !0
            }
        }

        function l(e) {
            var t = e.purchaseUrl;
            if (t) {
                e.trackBitsCardInteraction(Object(m.d)(e.bitsAmount), {
                    location: e.location
                });
                var n = t.replace("{channelID}", e.channelID),
                    a = window.open(n, "Twitch", "width=1024,height=600,scrollbars=yes");
                return !a || Object(u.a)() ? (e.closeAllBits && e.closeAllBits(), void e.trackBitsCardInteraction(m.a.CloseCard, {
                    location: e.location
                })) : (a.focus(), a)
            }
        }
        t.c = a, t.e = i, t.d = r, t.a = s, t.f = o, t.b = l;
        var c = n(0),
            u = n(837),
            d = n(820),
            p = n(260),
            m = n(815)
    },
    822: function(e, t, n) {
        "use strict";

        function a(e) {
            return "/ignore " + e
        }

        function i(e) {
            return "/unignore " + e
        }

        function r(e) {
            return "/mod " + e
        }

        function s(e) {
            return "/unmod " + e
        }

        function o(e) {
            return /^[\/]/.test(e)
        }

        function l() {
            return "/clear"
        }

        function c() {
            return "/followersoff"
        }

        function u() {
            return "/slowoff"
        }

        function d(e) {
            return "/followers " + e
        }

        function p() {
            return "/slow"
        }

        function m(e) {
            return "/color " + e
        }

        function h(e) {
            var t = e.trim().match(y);
            return t ? {
                recipientLogin: t[1] || null,
                body: t[2] || null
            } : null
        }

        function f(e) {
            var t = e.trim().match(_);
            return t ? {
                recipientLogin: t[1] || null,
                body: t[2] || null
            } : {
                recipientLogin: null,
                body: null
            }
        }

        function g(e, t) {
            var n = e.match(C);
            if (!n) return {
                handled: !1
            };
            var a = v.n.store.getState().chat.commandHandlers[n[1].toLowerCase()];
            if (!a) return {
                handled: !1
            };
            var i = (n[2] || "").trim(),
                r = {
                    channelLogin: t
                };
            try {
                return {
                    handled: !0,
                    result: a(i, r)
                }
            } catch (e) {
                return b.warn("Exception thrown from chat command handler", {
                    command: n[1],
                    err: e
                }), {
                    handled: !1
                }
            }
        }
        n.d(t, "a", function() {
            return k
        }), t.h = a, t.j = i, t.i = r, t.k = s, t.m = o, t.c = l, t.d = c, t.e = u, t.f = d, t.g = p, t.b = m, t.n = h, t.o = f, t.l = g;
        var v = n(2),
            b = v.n.logger.withCategory("chat-commands"),
            k = "/unraid",
            y = /^\/w(?:$|\s+)(\S+)?\s*(.+)?/i,
            _ = /^(\S+)?\s+(.+)?$/,
            C = /^[\/.]([a-z0-9]+)(.+)?$/i
    },
    824: function(e, t, n) {
        "use strict";
        var a, i = n(4),
            r = n(1),
            s = n(374),
            o = n(376),
            l = n(375),
            c = n(3);
        n(863);
        ! function(e) {
            e[e.Normal = 0] = "Normal", e[e.Small = 1] = "Small", e[e.Medium = 2] = "Medium", e[e.ExtraSmall = 3] = "ExtraSmall"
        }(a || (a = {}));
        var u;
        ! function(e) {
            e[e.ImageAndText = 0] = "ImageAndText", e[e.ImageOnly = 1] = "ImageOnly", e[e.TextOnly = 2] = "TextOnly", e[e.InlineTextOnly = 3] = "InlineTextOnly", e[e.Inline = 4] = "Inline"
        }(u || (u = {}));
        var d = function(e) {
            var t = e.bitsConfig.indexedActions[e.prefix.toLowerCase()];
            t || (t = Object(o.b)());
            var n = t.orderedTiers.find(function(t) {
                return t.bits <= (e.amount || 100)
            });
            n || (n = t.orderedTiers[0]);
            var d = null,
                p = i("cheermote-for-amount__cheer-amount", {
                    "cheermote-for-amount__cheer-amount--small": e.size === a.Small || e.size === a.ExtraSmall
                }, {
                    "cheermote-for-amount__cheer-amount--medium": e.size === a.Medium
                }, {
                    "cheermote-for-amount__display--table-cell": e.display !== u.InlineTextOnly && e.display !== u.Inline
                });
            e.amount && e.display !== u.ImageOnly && (d = r.createElement(c.P, {
                padding: e.size === a.Small ? 0 : void 0,
                textAlign: e.size === a.Small ? c._22.Center : void 0
            }, r.createElement("strong", {
                className: p,
                style: {
                    color: n.color
                }
            }, e.amount)));
            var m = i("cheermote-for-amount__cheer-image", {
                    "cheermote-for-amount__cheer-image--inline": e.display === u.Inline
                }, {
                    "cheermote-for-amount__cheer-image--small": e.size === a.Small
                }, {
                    "cheermote-for-amount__cheer-image--extra-small": e.size === a.ExtraSmall
                }, {
                    "cheermote-for-amount__display--table-cell": e.display !== u.InlineTextOnly && e.display !== u.Inline && e.size !== a.Small
                }),
                h = r.createElement(l.a, {
                    className: m,
                    sources: Object(s.b)(n, 4, e.animated)
                });
            return e.display !== u.TextOnly && e.display !== u.InlineTextOnly || (h = null), e.display === u.InlineTextOnly || e.display === u.Inline ? r.createElement(c.U, {
                className: "cheermote-for-amount",
                display: c.H.Inline
            }, h, d) : r.createElement(c.U, {
                className: "cheermote-for-amount"
            }, h, d)
        };
        n.d(t, "a", function() {
            return d
        }), n.d(t, "b", function() {
            return a
        }), n.d(t, "c", function() {
            return u
        })
    },
    825: function(e, t, n) {
        "use strict";

        function a() {
            return {
                type: r
            }
        }

        function i(e, t, n) {
            return {
                type: s,
                viewerCardOptions: {
                    targetLogin: e,
                    sourceType: t,
                    sourceID: n
                }
            }
        }
        n.d(t, "a", function() {
            return r
        }), n.d(t, "b", function() {
            return s
        }), t.c = a, t.d = i;
        var r = "viewer-card.VIEWER_CARD_HIDDEN",
            s = "viewer-card.VIEWER_CARD_SHOWN"
    },
    826: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a;
        ! function(e) {
            e.Admin = "admin", e.GlobalMod = "global_mod", e.Moderator = "mod", e.Owner = "owner", e.Staff = "staff", e.Subscriber = "subscriber", e.User = ""
        }(a || (a = {}))
    },
    827: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var a = n(0),
            i = n(2),
            r = n(17),
            s = function() {
                function e() {}
                return e.get = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), a.__awaiter(this, void 0, void 0, function() {
                        return a.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return [4, this.request(e, a.__assign({}, t, {
                                        method: "GET"
                                    }), n)];
                                case 1:
                                    return [2, i.sent()]
                            }
                        })
                    })
                }, e.put = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), a.__awaiter(this, void 0, void 0, function() {
                        return a.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return [4, this.request(e, a.__assign({}, t, {
                                        method: "PUT"
                                    }), n)];
                                case 1:
                                    return [2, i.sent()]
                            }
                        })
                    })
                }, e.post = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), a.__awaiter(this, void 0, void 0, function() {
                        return a.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return [4, this.request(e, a.__assign({}, t, {
                                        method: "POST"
                                    }), n)];
                                case 1:
                                    return [2, i.sent()]
                            }
                        })
                    })
                }, e.delete = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), a.__awaiter(this, void 0, void 0, function() {
                        return a.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return [4, this.request(e, a.__assign({}, t, {
                                        method: "DELETE"
                                    }), n)];
                                case 1:
                                    return [2, i.sent()]
                            }
                        })
                    })
                }, e.request = function(e, t, n) {
                    return void 0 === t && (t = {}), void 0 === n && (n = {}), a.__awaiter(this, void 0, void 0, function() {
                        var i, r;
                        return a.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return t = this.constructOptions(t, n), i = t.headers ? t.headers["Content-Type"] : void 0, t.body = this.serialize(t.body, i), [4, this._fetch(e, t)];
                                case 1:
                                    return r = a.sent(), [4, this.constructLegacyAPIResponse(r)];
                                case 2:
                                    return [2, a.sent()]
                            }
                        })
                    })
                }, e.getAPIURL = function(e) {
                    return new URL(e, i.n.config.apiBaseURL)
                }, e.constructLegacyAPIResponse = function(e) {
                    return a.__awaiter(this, void 0, void 0, function() {
                        var t, n, i;
                        return a.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    t = {
                                        status: e.status
                                    }, a.label = 1;
                                case 1:
                                    return a.trys.push([1, 3, , 4]), [4, e.json()];
                                case 2:
                                    return n = a.sent(), e.ok ? t.body = n : t.error = n, [3, 4];
                                case 3:
                                    return i = a.sent(), t.requestError = i, [3, 4];
                                case 4:
                                    return [2, t]
                            }
                        })
                    })
                }, e._fetch = function(e, t) {
                    return void 0 === t && (t = {}), a.__awaiter(this, void 0, void 0, function() {
                        return a.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return [4, fetch(this.getAPIURL(e).toString(), t)];
                                case 1:
                                    return [2, n.sent()]
                            }
                        })
                    })
                }, e.constructOptions = function(e, t) {
                    return e = Object.assign({}, e, {
                        headers: a.__assign({}, this.getDefaultHeaders(e, t), e.headers)
                    })
                }, e.serialize = function(e, t) {
                    return "application/json; charset=UTF-8" === t ? JSON.stringify(e) : e
                }, e.getDefaultHeaders = function(e, t) {
                    var n = i.n.store.getState(),
                        a = {
                            Accept: "application/vnd.twitchtv.v" + (t.version || 5) + "+json; charset=UTF-8",
                            "Accept-Language": "en-us",
                            "Client-ID": i.n.config.legacyClientID,
                            "X-Requested-With": "XMLHttpRequest"
                        };
                    e.body && FormData.prototype.isPrototypeOf(e.body) || (a["Content-Type"] = "application/json; charset=UTF-8");
                    var s = Object(r.c)(n);
                    return s && (a.Authorization = "OAuth " + s.authToken, s.legacyCSRFToken && (a["Twitch-Api-Token"] = s.legacyCSRFToken)), t.excludeHeaders && t.excludeHeaders.forEach(function(e) {
                        a[e] && delete a[e]
                    }), a
                }, e
            }()
    },
    828: function(e, t, n) {
        "use strict";

        function a() {
            return F.createElement("span", {
                key: "thankyou"
            }, Object(j.d)("Thank you for your feedback!", "ChatLine"))
        }

        function i(e, t, n, a, i) {
            var r = [],
                s = "";
            a && (s = s.concat(" "));
            var l = e.content.split(/\s+/);
            return l.forEach(function(e, a) {
                if ("" !== e) {
                    var i = a < l.length - 1 ? e + " " : e;
                    (t || n) && o(e, t, n) ? (r = r.concat(s), r = r.concat(F.createElement($.U, {
                        className: "chat-line__message--mention-recipient",
                        display: $.H.InlineFlex,
                        key: "" + e + a,
                        "data-a-target": "chat-message-mention"
                    }, i)), s = "") : s = s.concat(i)
                }
            }), r = r.concat(s), F.createElement("span", {
                key: "chat-line__message-text-" + i,
                "data-a-target": "chat-message-text"
            }, r)
        }

        function r(e, t) {
            return F.createElement("a", {
                key: e,
                className: "chat-line__message--link",
                href: t.content.url,
                target: "_blank",
                rel: "noreferrer noopener"
            }, t.content.displayText)
        }

        function s(e, t, n) {
            var a = null,
                s = e.reduce(function(s, o, u) {
                    switch (o.type) {
                        case ue.a.Text:
                            var d = u > 0;
                            return s.concat(i(o, t, n, d, u));
                        case ue.a.Mention:
                            var p = "";
                            return l(o) && t && o.content.sender.toLowerCase() === t.toLowerCase() ? p = "chat-line__message--mention-sender" : c(o) && t && o.content.recipient.toLowerCase() === t.toLowerCase() && (p = "chat-line__message--mention-recipient"), s.concat(F.createElement($.U, {
                                className: p,
                                display: $.H.InlineFlex,
                                key: u,
                                "data-a-target": "chat-message-mention"
                            }, "@" + o.content.recipient));
                        case ue.a.Link:
                            return s = s.concat(r(u, o)), e.length > u + 1 && e[u + 1].type === ue.a.Link && s.push(" "), s;
                        case ue.a.Emote:
                            return s = s.concat(F.createElement(V.a, {
                                key: u,
                                emote: o.content
                            })), e.length > u + 1 && e[u + 1].type === ue.a.Emote && s.push(" "), s;
                        case ue.a.ClipLink:
                            return a ? s.concat(r(u, o)) : (a = F.createElement(ae, {
                                key: u,
                                slug: o.content.slug
                            }), s);
                        case ue.a.VideoLink:
                            return a ? s.concat(r(u, o)) : (a = F.createElement(le, {
                                key: u,
                                id: o.content.id,
                                url: o.content.url
                            }), s);
                        default:
                            return s.concat(F.createElement("span", {
                                key: u
                            }))
                    }
                }, []);
            return a && (s = s.concat(a)), s
        }

        function o(e, t, n) {
            var a = e.trim().toLowerCase();
            return t && a === t.toLowerCase() || n && a === n.toLowerCase()
        }

        function l(e) {
            return e.content && e.content.sender
        }

        function c(e) {
            return e.content && e.content.recipient
        }

        function u(e) {
            if (e.type === ce.a.Ban) return e.reason ? F.createElement("span", {
                className: "chat-line__moderation--ban-with-reason"
            }, Object(j.d)("{userLogin} has been banned. Reason: {reason}", {
                userLogin: e.userLogin,
                reason: e.reason
            }, "ChatLine")) : F.createElement("span", {
                className: "chat-line__moderation--ban"
            }, Object(j.d)("{userLogin}  is now banned from this room.", {
                userLogin: e.userLogin
            }, "ChatLine"));
            if (e.reason && e.duration) {
                var t = Object(j.d)("{userLogin} has been timed out for {duration} seconds. Reason: {reason}", {
                    duration: e.duration,
                    reason: e.reason,
                    userLogin: e.userLogin
                }, "ChatLine");
                return F.createElement("span", {
                    className: "chat-line__moderation--timeout-with-reason"
                }, t)
            }
            return e.duration ? F.createElement("span", {
                className: "chat-line__moderation--timeout"
            }, Object(j.d)("{userLogin} has been timed out for {duration} seconds.", {
                userLogin: e.userLogin,
                duration: e.duration
            }, "ChatLine")) : void 0
        }

        function d(e) {
            var t = Object(R.a)("https://twitch.amazon.com/prime", {
                ref: "subscriptionMessage",
                channel: e
            });
            return F.createElement("a", {
                className: "chat-line__subscribe--prime",
                href: t,
                target: "_blank",
                rel: "noopener"
            }, Object(j.d)("Twitch Prime", "ChatLine"))
        }

        function p(e, t) {
            return Object(j.d)("{userLogin} just subscribed with {service}!", {
                userLogin: e,
                service: t
            }, "ChatLine")
        }

        function m(e, t) {
            return Object(j.d)("{userLogin} just subscribed with a {subTier} sub!", {
                userLogin: e,
                subTier: t
            }, "ChatLine")
        }

        function h(e, t) {
            return Object(j.d)("{userLogin} gifted a subscription to {recipient}!", {
                userLogin: e,
                recipient: t
            }, "ChatLine")
        }

        function f(e, t, n) {
            return Object(j.d)("{userLogin} gifted a {subTier} sub to {recipient}!", {
                userLogin: e,
                subTier: t,
                recipient: n
            }, "ChatLine")
        }

        function g(e) {
            return e.isPrime ? F.createElement("span", null, p(e.userLogin, d(e.channel))) : F.createElement("span", null, m(e.userLogin, e.tier))
        }

        function v(e) {
            return "custom" === e.tier ? F.createElement("span", null, h(e.userLogin, e.recipient)) : F.createElement("span", null, f(e.userLogin, e.tier, e.recipient))
        }

        function b(e, t, n, a, i) {
            if (e.user) {
                var r = null;
                e.badges && (r = F.createElement(P.b, {
                    badgeSets: i,
                    badgesToRender: e.badges
                }));
                var o = e.isPrime ? p(e.user.userDisplayName, d(e.channel)) : m(e.user.userDisplayName, e.tier),
                    l = [F.createElement("span", {
                        key: "chat--resubbed"
                    }, o, F.createElement("span", {
                        key: "sub-separator"
                    }, " "), Object(j.d)("{userLogin} subscribed for {months} months in a row!", {
                        userLogin: e.user.userDisplayName,
                        months: e.months
                    }, "ChatLine"))];
                if (e.messageParts && e.user && !e.deleted) {
                    var c = null;
                    t && e.timestamp && (c = I(e.timestamp)), l.push(F.createElement("div", {
                        key: "resub-message",
                        className: "chat-line__subscribe--message"
                    }, c, r, F.createElement(H.a, {
                        userData: e.user
                    }), F.createElement("span", {
                        key: "separator"
                    }, " : "), s(e.messageParts, n, a)))
                }
                return l
            }
            return null
        }

        function k(e) {
            var t = e.enabled ? Object(j.d)("This room is now in slow mode. You may send messages every {length} seconds.", {
                length: e.length
            }, "ChatLine") : Object(j.d)("This room is no longer in slow mode.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function y(e) {
            return F.createElement("span", null, e.message)
        }

        function _(e) {
            return F.createElement("span", null, e.message)
        }

        function C(e) {
            var t;
            if (e.length > 0) {
                var n = e.join(", ");
                t = Object(j.d)("The moderators of this room are: {moderatorList}", {
                    moderatorList: n
                }, "ChatLine")
            } else t = Object(j.d)("There are no moderators of this room.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function S(e) {
            if (e.enabled) {
                var t = 0 === e.length ? Object(j.d)("This room is in followers-only mode.", "ChatLine") : Object(j.d)("This room is now in {length} followers-only mode.", {
                    length: Object(A.a)(60 * e.length)
                }, "ChatLine");
                return F.createElement("span", null, t)
            }
            return F.createElement("span", null, Object(j.d)("This room is no longer in followers-only mode.", "ChatLine"))
        }

        function E(e) {
            return e.enabled ? F.createElement("span", null, Object(j.d)("This room is now in emote-only mode.", "ChatLine")) : F.createElement("span", null, Object(j.d)("This room is no longer in emote-only mode.", "ChatLine"))
        }

        function w(e) {
            var t = e.enabled ? Object(j.d)("This room is now in subscriber-only mode.", "ChatLine") : Object(j.d)("This room is no longer in subscriber-only mode.", "ChatLine");
            return F.createElement("span", null, t)
        }

        function N() {
            return F.createElement("span", null, Object(j.d)("Chat was cleared by a moderator", "ChatLine"))
        }

        function D(e) {
            var t = e.getHours() % 12;
            0 === t && (t = 12);
            var n = e.getMinutes(),
                a = n.toString();
            return n < 10 && (a = "0" + a), t + ":" + a
        }

        function I(e) {
            return F.createElement("span", {
                key: "timestamp",
                className: "chat-line__timestamp",
                "data-a-target": "chat-timestamp",
                "data-test-selector": "chat-timestamp"
            }, D(new Date(e)))
        }

        function O(e) {
            return F.createElement("span", {
                key: "timestamp",
                className: "chat-line__timestamp",
                "data-a-target": "chat-timestamp",
                "data-test-selector": "chat-timestamp"
            }, L(new Date(e), {
                hour: "numeric",
                minute: "numeric"
            }))
        }

        function U() {
            return F.createElement("span", null, Object(j.d)("The raid has been cancelled.", "RaidCancelMessage"))
        }

        function x(e) {
            return F.createElement($._17, {
                borderMarked: !0,
                borderBottom: !1
            }, F.createElement($.U, {
                className: "chat-line__status",
                display: $.H.Flex,
                alignItems: $.c.Center,
                flexWrap: $.K.NoWrap
            }, F.createElement("img", {
                src: M.a,
                height: "32",
                width: "32",
                className: "chat-line__crate-image"
            }), F.createElement($.U, {
                margin: {
                    left: .5
                }
            }, Object(j.d)("<x:boldpurple>{userName}</x:boldpurple>'s Cheer unlocked gifts for <x:bold>{numberOfGifts, number} others</x:bold>!", {
                userName: e.message.user.userDisplayName,
                numberOfGifts: e.selectedCount,
                "x:boldpurple": function(e) {
                    return F.createElement($._21, {
                        type: $._26.Span,
                        bold: !0,
                        color: $.F.Link
                    }, e)
                },
                "x:bold": function(e) {
                    return F.createElement("strong", null, e)
                }
            }, "Crates"))), F.createElement($._17, {
                className: "chat-line__status",
                background: $.m.Alt2
            }, F.createElement($._21, {
                bold: !0,
                color: $.F.Link
            }, Object(j.d)("Cheer 250+ to unlock gifts for others in chat!", "Crates"))))
        }

        function T(e, t, n) {
            return 0 === n ? Object(j.d)("<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}!</x:bold>", {
                userName: e,
                gameTitle: t,
                "x:bold": function(e) {
                    return F.createElement("strong", null, e)
                }
            }, "PurchaseNoticeSystemMessage") : Object(j.d)("{numCrates, plural, one {<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}</x:bold> and opened a <x:bold>Twitch Crate!</x:bold>} other {<x:bold>{userName}</x:bold> bought <x:bold>{gameTitle}</x:bold> and opened # <x:bold>Twitch Crates!</x:bold>}}", {
                numCrates: n,
                userName: e,
                gameTitle: t,
                "x:bold": function(e) {
                    return F.createElement("strong", null, e)
                }
            }, "PurchaseNoticeSystemMessage")
        }

        function L(e, t) {
            void 0 === t && (t = {});
            var n = j.n.intl.getLanguageCode() || "en";
            return Intl.DateTimeFormat(n, t).format(e)
        }
        var F = n(1),
            j = n(2),
            B = n(855),
            M = n.n(B),
            A = n(874),
            R = n(68),
            P = n(830),
            H = n(833),
            V = n(875),
            W = n(0),
            q = n(7),
            z = n(10),
            G = n(13),
            $ = n(3),
            J = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hasImageLoadingError: !1
                    }, t.handleImageError = function() {
                        t.setState({
                            hasImageLoadingError: !0
                        })
                    }, t
                }
                return W.__extends(t, e), t.prototype.componentWillReceiveProps = function() {
                    this.setState({
                        hasImageLoadingError: !1
                    })
                }, t.prototype.render = function() {
                    var e = j.a.defaultStreamPreviewURL;
                    return !this.state.hasImageLoadingError && this.props.imageURL && (e = this.props.imageURL), F.createElement($.C, {
                        aspect: $.k.Aspect16x9,
                        imageAlt: this.props.altText,
                        imageSrc: e,
                        onImageError: this.handleImageError
                    })
                }, t
            }(F.Component),
            K = (n(886), "https://static-cdn.jtvnw.net/emoticons/v1/58765/2.0"),
            Q = {
                ERROR: "chat-card-error",
                TITLE: "chat-card-title",
                DESCRIPTION: "chat-card-description"
            },
            Y = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderErrorCard = function() {
                        var e = F.createElement("img", {
                            "data-test-selector": Q.ERROR,
                            src: K,
                            className: "chat-card__error-img"
                        });
                        return t.renderCardContent(e, t.props.error)
                    }, t.renderCardContent = function(e, t) {
                        var n, a;
                        return t ? (n = F.createElement($._21, {
                            type: $._26.Span,
                            fontSize: $.L.Size5,
                            "data-test-selector": Q.TITLE,
                            title: t.title
                        }, t.title), a = F.createElement($._21, {
                            type: $._26.Span,
                            fontSize: $.L.Size6,
                            color: $.F.Alt2,
                            "data-test-selector": Q.DESCRIPTION
                        }, t.description)) : (e = F.createElement($._1, {
                            overlay: !0
                        }), n = F.createElement($._1, {
                            width: 180
                        }), a = F.createElement($._1, {
                            width: 120
                        })), F.createElement($._17, {
                            background: $.m.Base,
                            display: $.H.Flex,
                            flexWrap: $.K.NoWrap,
                            padding: .5
                        }, F.createElement($._17, {
                            className: "chat-card__preview-img",
                            background: $.m.Alt2,
                            display: $.H.Flex,
                            alignItems: $.c.Center,
                            justifyContent: $.T.Center,
                            flexShrink: 0
                        }, e), F.createElement($.U, {
                            display: $.H.Flex,
                            alignItems: $.c.Center
                        }, F.createElement($.U, {
                            margin: {
                                left: 1
                            },
                            fullWidth: !0
                        }, F.createElement($.U, {
                            className: "chat-card__title",
                            ellipsis: !0
                        }, n), F.createElement($.U, {
                            ellipsis: !0
                        }, a))))
                    }, t
                }
                return W.__extends(t, e), t.prototype.render = function() {
                    var e;
                    if (this.props.error) e = this.renderErrorCard();
                    else if (this.props.data) {
                        var t = Object(R.a)(this.props.data.contentURL, {
                                tt_medium: G.PageviewMedium.Chat,
                                tt_content: G.PageviewContent.ChatCard
                            }),
                            n = F.createElement(J, {
                                altText: this.props.data.title,
                                imageURL: this.props.data.previewImageURL
                            });
                        e = F.createElement(z.a, {
                            className: "chat-card__link",
                            to: t,
                            target: "_blank"
                        }, this.renderCardContent(n, {
                            title: this.props.data.title,
                            description: this.props.data.description
                        }))
                    } else e = this.renderCardContent();
                    return F.createElement($._17, {
                        elevation: 1,
                        margin: {
                            top: .5
                        }
                    }, e)
                }, t
            }(F.Component),
            X = Y,
            Z = n(856),
            ee = {
                isTimedOut: !1
            },
            te = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = ee, t.timeoutID = null, t
                }
                return W.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this;
                    this.props.data.clip || (this.timeoutID = setTimeout(function() {
                        e.setState({
                            isTimedOut: !0
                        })
                    }, 5e3))
                }, t.prototype.componentWillReceiveProps = function(e) {
                    !this.props.data.clip && e.data.clip && (this.timeoutID && (clearTimeout(this.timeoutID), this.timeoutID = null), this.setState({
                        isTimedOut: !1
                    }))
                }, t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.clip,
                        n = e.error,
                        a = e.loading;
                    return n || this.state.isTimedOut ? F.createElement(X, {
                        error: {
                            title: Object(j.d)("Something went wrong", "ClipsChatCard"),
                            description: Object(j.d)("We couldn't find that Clip", "ClipsChatCard")
                        }
                    }) : a || !t ? F.createElement(X, null) : F.createElement(X, {
                        data: {
                            title: t.title ? t.title : Object(j.d)("Clip of {broadcaster}", {
                                broadcaster: t.broadcaster.displayName
                            }, "ClipsChatCard"),
                            description: Object(j.d)("Clipped by {curator}", {
                                curator: t.curator.displayName
                            }, "ClipsChatCard"),
                            previewImageURL: t.thumbnailURL,
                            contentURL: t.url
                        }
                    })
                }, t
            }(F.Component),
            ne = function(e) {
                return {
                    variables: {
                        slug: e.slug
                    },
                    notifyOnNetworkStatusChange: !0,
                    fetchPolicy: "cache-only"
                }
            },
            ae = Object(q.a)(Z, {
                options: ne
            })(te),
            ie = n(48),
            re = n(887),
            se = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return W.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.video,
                        n = e.error,
                        a = e.loading;
                    if (n || t && !t.owner) return F.createElement(X, {
                        error: {
                            title: Object(j.d)("Something went wrong", "VideoChatCard"),
                            description: Object(j.d)("We couldn't find that video", "VideoChatCard")
                        }
                    });
                    if (a || !t) return F.createElement(X, null);
                    var i = F.createElement($._21, null, Object(j.c)(new Date(t.publishedAt), "medium"), F.createElement("span", null, " · "), Object(ie.a)(t.owner.login, t.owner.displayName));
                    return F.createElement(X, {
                        data: {
                            title: t.title,
                            description: i,
                            previewImageURL: t.previewThumbnailURL,
                            contentURL: this.props.url
                        }
                    })
                }, t
            }(F.Component),
            oe = function(e) {
                return {
                    variables: {
                        videoID: e.id
                    },
                    notifyOnNetworkStatusChange: !0,
                    fetchPolicy: "cache-first"
                }
            },
            le = Object(q.a)(re, {
                options: oe
            })(se),
            ce = n(814),
            ue = n(261);
        t.d = a, t.g = s, t.h = u, t.p = g, t.o = v, t.k = b, t.m = k, t.i = y, t.f = _, t.l = C, t.e = S, t.c = E, t.n = w, t.a = N, t.q = I, t.r = O, t.s = U, t.b = x, t.j = T
    },
    829: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "badge"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "Badge"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "setID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "version"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "title"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image1x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "NORMAL"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image2x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "DOUBLE"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "image4x"
                        },
                        name: {
                            kind: "Name",
                            value: "imageURL"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "size"
                            },
                            value: {
                                kind: "EnumValue",
                                value: "QUADRUPLE"
                            }
                        }],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clickAction"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clickURL"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 189
            }
        };
        n.loc.source = {
            body: "fragment badge on Badge {\n  id\n  setID\n  version\n  title\n  image1x: imageURL(size: NORMAL)\n  image2x: imageURL(size: DOUBLE)\n  image4x: imageURL(size: QUADRUPLE)\n  clickAction\n  clickURL\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    830: function(e, t, n) {
        "use strict";
        var a = n(854),
            i = n(844),
            r = n(835),
            s = (n(884), n(0)),
            o = function() {
                function e(e, t, n) {
                    this.globalsBySet = new Map, this.channelsBySet = new Map, this.indexBadges(e, this.globalsBySet, n), Array.isArray(t) && this.indexBadges(t, this.channelsBySet, n)
                }
                return e.prototype.getBadge = function(e, t) {
                    var n = this.channelsBySet.get(e);
                    return n && n.has(t) ? n.get(t) || null : (n = this.globalsBySet.get(e), void 0 !== n ? n.get(t) || null : null)
                }, e.prototype.indexBadges = function(e, t, n) {
                    e.forEach(function(e) {
                        n && e.clickAction === r.b && (e = s.__assign({}, e, {
                            channelName: n
                        }));
                        var a = t.get(e.setID);
                        a || (a = new Map, t.set(e.setID, a)), a.set(e.version, e)
                    })
                }, e
            }();
        new o([], [], "");
        n.d(t, "b", function() {
            return a.a
        }), n.d(t, "a", function() {
            return i.a
        }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "c", function() {
            return o
        })
    },
    831: function(e, t, n) {
        "use strict";

        function a(e) {
            var t, n = Object(r.d)("{bitsAmount} Bits", {
                bitsAmount: e.count.toString()
            }, "Bits--BitsCount");
            if (e.withImage) {
                var a = e.bitsConfig.indexedActions[o.f];
                a || (a = Object(c.b)());
                var d = a.orderedTiers.find(function(t) {
                    return t.bits <= e.count
                });
                if (d) {
                    var p = Object(l.b)(d);
                    return void 0 !== e.themeOverride && (e.themeOverride === s.a.Light ? p.dark = p.light : p.light = p.dark), t = i.createElement(u.a, {
                        className: "bits-count--img",
                        sources: p
                    }), i.createElement("strong", {
                        className: "bits-count",
                        "data-a-target": "bits-count"
                    }, i.createElement("span", null, t, " ", e.withText ? n : ""))
                }
            }
            return i.createElement("strong", {
                className: "bits-count",
                "data-a-target": "bits-count"
            }, i.createElement("span", null, n))
        }
        var i = n(1),
            r = n(2),
            s = n(31),
            o = n(260),
            l = n(374),
            c = n(376),
            u = n(375);
        n(872);
        n.d(t, "a", function() {
            return a
        })
    },
    832: function(e, t, n) {
        "use strict";

        function a(e, t) {
            if (!e) return void i.i.warn("[onPopupClose] Attempted to observe a window that failed to open.");
            var n = setInterval(function() {
                var a = !1,
                    i = !1;
                try {
                    a = e.closed, i = !!e.success
                } catch (e) {}
                if (a || i) {
                    t(i);
                    try {
                        e.close()
                    } catch (e) {}
                    clearInterval(n)
                }
            }, 500)
        }
        t.a = a;
        var i = n(2)
    },
    833: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var a = n(4),
            i = (n.n(a), n(1)),
            r = (n.n(i), n(885)),
            s = (n.n(r), function(e) {
                var t = [i.createElement("span", {
                    key: "username-display",
                    className: "chat-author__display-name",
                    "data-a-target": "chat-message-username",
                    "data-test-selector": "message-username",
                    style: {
                        color: e.userData.color
                    }
                }, e.userData.userDisplayName)];
                if (e.userData.isIntl) {
                    var n = a((r = {}, r["chat-author__intl-login"] = !e.highlighted, r["chat-author__intl-login--highlighted"] = e.highlighted, r));
                    t.push(i.createElement("span", {
                        key: "username-login",
                        style: {
                            color: e.userData.color
                        },
                        className: n,
                        "data-test-selector": "message-username-canonical"
                    }, " (" + e.userData.userLogin + ")"))
                }
                return i.createElement("span", {
                    key: e.userData.userID + "-authorlabel"
                }, t);
                var r
            })
    },
    834: function(e, t, n) {
        "use strict";
        var a = n(2),
            i = n(13),
            r = {
                Public: "public"
            };
        n.d(t, "a", function() {
            return s
        }), n.d(t, "b", function() {
            return o
        });
        var s = function(e) {
                return {
                    channel: e.channelLogin,
                    is_host_mode: e.isHostMode,
                    is_using_web_sockets: !0,
                    room_type: r.Public
                }
            },
            o = function(e) {
                a.m.track(i.SpadeEventType.ChatRoomJoined, s(e))
            }
    },
    835: function(e, t, n) {
        "use strict";
        n.d(t, "b", function() {
            return a
        }), n.d(t, "c", function() {
            return i
        }), n.d(t, "d", function() {
            return r
        }), n.d(t, "a", function() {
            return s
        });
        var a = "subscribe_to_channel",
            i = "turbo",
            r = "visit_url",
            s = "broadcaster"
    },
    836: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a;
        ! function(e) {
            e[e.recent_raids = 0] = "recent_raids", e[e.chat_message = 1] = "chat_message", e[e.viewer_list = 2] = "viewer_list", e[e.test = 3] = "test"
        }(a || (a = {}))
    },
    837: function(e, t, n) {
        "use strict";

        function a(e) {
            return e || (e = navigator.userAgent), !!i.exec(e)
        }
        t.a = a;
        var i = /\scurse\/\d/
    },
    838: function(e, t, n) {
        "use strict";

        function a(e) {
            switch (e) {
                case 0:
                    return Object(r.d)("0 minutes (Any followers)", "FollowersOnlyLabel");
                case 10:
                    return Object(r.d)("10 minutes (Most used)", "FollowersOnlyLabel");
                case 30:
                    return Object(r.d)("30 minutes", "FollowersOnlyLabel");
                case 60:
                    return Object(r.d)("1 hour", "FollowersOnlyLabel");
                case 1440:
                    return Object(r.d)("1 day", "FollowersOnlyLabel");
                case 10080:
                    return Object(r.d)("1 week", "FollowersOnlyLabel");
                case 43200:
                    return Object(r.d)("1 month", "FollowersOnlyLabel");
                case 129600:
                    return Object(r.d)("3 months", "FollowersOnlyLabel");
                default:
                    return r.i.warn("[FollowersOnlyLabel] Tried to generate a label for a non-preset.", e), ""
            }
        }

        function i(e) {
            switch (e) {
                case 0:
                    return Object(r.d)("0 min", "FollowersOnlyShorthand");
                case 10:
                    return Object(r.d)("10 min", "FollowersOnlyShorthand");
                case 30:
                    return Object(r.d)("30 min", "FollowersOnlyShorthand");
                case 60:
                    return Object(r.d)("1 hr", "FollowersOnlyShorthand");
                case 1440:
                    return Object(r.d)("1 day", "FollowersOnlyShorthand");
                case 10080:
                    return Object(r.d)("1 wk", "FollowersOnlyShorthand");
                case 43200:
                    return Object(r.d)("1 mo", "FollowersOnlyShorthand");
                case 129600:
                    return Object(r.d)("3 mo", "FollowersOnlyShorthand");
                default:
                    return Object(r.d)("custom", "FollowersOnlyShorthand")
            }
        }
        n.d(t, "a", function() {
            return s
        }), n.d(t, "b", function() {
            return o
        }), t.c = a, t.d = i;
        var r = n(2),
            s = 30,
            o = [0, 10, 30, 60, 1440, 10080, 43200, 129600]
    },
    839: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = [],
                n = {};
            return e.forEach(function(e) {
                var a = e.tiers.map(function(e) {
                    return i(e)
                });
                "Cheer" === e.prefix && a.push(r()), a.sort(function(e, t) {
                    return t.bits - e.bits
                });
                var o = s.__assign({}, e, {
                    indexedTiers: new Map(a.map(function(e) {
                        return [e.bits, e]
                    })),
                    orderedTiers: a
                });
                t.push(o), n[o.prefix.toLowerCase()] = o
            }), {
                indexedActions: n,
                orderedActions: t
            }
        }

        function i(e) {
            var t = new Map,
                n = new Map,
                a = new Map,
                i = new Map;
            return e.images.forEach(function(e) {
                "LIGHT" === e.theme ? e.isAnimated ? n.set(e.dpiScale, e.url) : t.set(e.dpiScale, e.url) : e.isAnimated ? i.set(e.dpiScale, e.url) : a.set(e.dpiScale, e.url)
            }), s.__assign({
                indexedImages: {
                    LIGHT: {
                        static: t,
                        animated: n
                    },
                    DARK: {
                        static: a,
                        animated: i
                    }
                }
            }, e)
        }

        function r() {
            var e = [1, 1.5, 2, 3, 4],
                t = ["DARK", "LIGHT"],
                n = ["static", "animated"],
                a = [];
            return e.forEach(function(e) {
                t.forEach(function(t) {
                    n.forEach(function(n) {
                        a.push({
                            url: l.a + "/cheer/" + t.toLowerCase() + "/" + n + "/100000/" + e + "." + ("static" === n ? "png" : "gif"),
                            isAnimated: "animated" === n,
                            theme: t,
                            dpiScale: e
                        })
                    })
                })
            }), i({
                id: "Cheer:100000",
                bits: 1e5,
                color: l.e[o.a.Yellow],
                images: a
            })
        }
        t.a = a;
        var s = n(0),
            o = n(265),
            l = n(260)
    },
    840: function(e, t, n) {
        "use strict";

        function a(e) {
            return {
                type: i.a.Info,
                id: Object(r.a)("notice"),
                message: e
            }
        }
        t.a = a;
        var i = n(814),
            r = n(816)
    },
    841: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "bitsOffersFragment"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "BitsOffer"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "type"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bits"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "InlineFragment",
                        typeCondition: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BitsBundleOffer"
                            }
                        },
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "price"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "discount"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPromo"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "url"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "includesVAT"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "promotion"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "type"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 197
            }
        };
        n.loc.source = {
            body: "fragment bitsOffersFragment on BitsOffer {\n  id\n  type\n  bits\n  ... on BitsBundleOffer {\n    price\n    discount\n    isPromo\n    url\n    includesVAT\n    promotion {\n      id\n      type \n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    842: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "cheer"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "User"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "cheer"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "emotes"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "prefix"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "type"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "tiers"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "bits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "color"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "images"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "url"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "theme"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "isAnimated"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "dpiScale"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 270
            }
        };
        n.loc.source = {
            body: "fragment cheer on User {\n  cheer {\n    id\n    emotes {\n      id\n      prefix\n      type\n      tiers {\n        id\n        bits\n        color\n        images {\n          id\n          url\n          theme\n          isAnimated\n          dpiScale\n        }\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    843: function(e, t, n) {
        "use strict";

        function a(e) {
            return Object(h.bindActionCreators)({
                closeModal: c.c
            }, e)
        }

        function i(e) {
            return p.__awaiter(this, void 0, void 0, function() {
                var t, n, a, i, r;
                return p.__generator(this, function(s) {
                    switch (s.label) {
                        case 0:
                            if (t = f.b.get("bits_truex_partner_hash", ""), !(n = f.b.get("bits_truex_api_url", "")) || !t) return f.i.warn("Truex API info missing from dynamic settings"), [2, k.Error];
                            s.label = 1;
                        case 1:
                            return s.trys.push([1, 5, , 6]), [4, fetch(n + "?placement.key=" + t + "&user.uid=" + e + "&max_activities=1")];
                        case 2:
                            return a = s.sent(), a.ok ? [4, a.json()] : [3, 4];
                        case 3:
                            if ((i = s.sent()) && Array.isArray(i) && i.length) return [2, k.Available];
                            s.label = 4;
                        case 4:
                            return [2, k.Unavailable];
                        case 5:
                            return r = s.sent(), f.i.warn("Failed checking ad availability from TrueX, probably due to AdBlock", r), [2, k.AdBlocked];
                        case 6:
                            return [2]
                    }
                })
            })
        }

        function r(e) {
            return {
                adModalOpen: Object(u.b)(e, w),
                isLoggedIn: Object(d.d)(e)
            }
        }

        function s(e) {
            return {
                showWatchAdModal: function(t) {
                    return e(Object(c.d)(w, t))
                }
            }
        }
        var o, l = n(6),
            c = n(37),
            u = n(91),
            d = n(17),
            p = n(0),
            m = n(1),
            h = n(9),
            f = n(2),
            g = n(105),
            v = n(7),
            b = n(20);
        ! function(e) {
            e[e.ExitEarly = 0] = "ExitEarly", e[e.Unknown = 1] = "Unknown", e[e.Adblock = 2] = "Adblock", e[e.LimitReached = 3] = "LimitReached"
        }(o || (o = {}));
        var k, y = n(385),
            _ = n(815),
            C = n(3),
            S = n(859),
            E = (n(860), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.hasAwarded = !1, t.messageHandler = function(e) {
                        return p.__awaiter(t, void 0, void 0, function() {
                            var t, n, a, i, i, r, s;
                            return p.__generator(this, function(l) {
                                switch (l.label) {
                                    case 0:
                                        if (e.origin !== window.location.origin) return [2];
                                        if (!(t = e.data) || "trueXAd" !== t.msgSrc) return [2];
                                        switch (n = t.type) {
                                            case y.a.Ready:
                                                return [3, 1];
                                            case y.a.RequestAd:
                                                return [3, 2];
                                            case y.a.Dimensions:
                                                return [3, 3];
                                            case y.a.OnStart:
                                                return [3, 4];
                                            case y.a.OnCredit:
                                                return [3, 5];
                                            case y.a.OnClose:
                                            case y.a.OnFinish:
                                            case y.a.LimitReached:
                                            case y.a.Adblock:
                                            case y.a.OnError:
                                                return [3, 9]
                                        }
                                        return [3, 10];
                                    case 1:
                                        return a = {
                                            msgSrc: "wateb-ad-modal",
                                            tuid: this.props.tuid
                                        }, e.source.postMessage(a, "*"), [2];
                                    case 2:
                                        try {
                                            if (!(i = JSON.parse(t.activityJSON))) return [2];
                                            Object(_.g)({
                                                campaignID: i.campaign_id.toString(),
                                                requestID: t.requestID,
                                                requestMethod: this.props.requestRef
                                            })
                                        } catch (e) {}
                                        return [2];
                                    case 3:
                                        return t.height && t.width && this.setState({
                                            customDimensions: {
                                                height: t.height,
                                                width: t.width
                                            }
                                        }), [3, 10];
                                    case 4:
                                        try {
                                            if (!(i = JSON.parse(t.activityJSON))) return [2];
                                            Object(_.f)({
                                                requestID: t.requestID,
                                                adblock: !1,
                                                campaignID: i.campaign_id.toString()
                                            })
                                        } catch (e) {}
                                        return [2];
                                    case 5:
                                        return l.trys.push([5, 7, , 8]), [4, this.props.redeemTrueXAd(Object(b.a)({
                                            args: t.engagement.signature_argument_string,
                                            signature: t.engagement.signature,
                                            trueXAd: {
                                                creativeID: t.engagement.ad.creative_id,
                                                campaignID: t.engagement.ad.campaign_id,
                                                name: t.engagement.ad.name,
                                                currencyAmount: t.engagement.ad.currency_amount
                                            },
                                            targetID: this.props.channelID
                                        }))];
                                    case 6:
                                        return r = l.sent(), this.hasAwarded = !0, this.props.onBitsAwarded && this.props.onBitsAwarded(r.data.redeemTrueXAd.grantedBits), [3, 8];
                                    case 7:
                                        return s = l.sent(), f.i.warn("Error while redeeming bits for truex ad", s), this.props.onError && this.props.onError(o.Unknown), [3, 8];
                                    case 8:
                                        return [3, 10];
                                    case 9:
                                        return this.props.onError && (t.type === y.a.LimitReached ? this.props.onError(o.LimitReached) : t.type === y.a.Adblock ? this.props.onError(o.Adblock) : t.type === y.a.OnError ? this.props.onError(o.Unknown) : this.hasAwarded || this.props.onError(o.ExitEarly)), this.props.closeModal(), [3, 10];
                                    case 10:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    window.addEventListener("message", this.messageHandler)
                }, t.prototype.componentWillUnmount = function() {
                    window.removeEventListener("message", this.messageHandler)
                }, t.prototype.render = function() {
                    return m.createElement(C._17, {
                        background: C.m.Base
                    }, m.createElement("div", {
                        className: "t-watch-ads-modal",
                        style: this.state.customDimensions
                    }, m.createElement(g.a, null), m.createElement("iframe", {
                        src: "/products/bits/ad"
                    })))
                }, t = p.__decorate([Object(v.a)(S, {
                    name: "redeemTrueXAd"
                })], t)
            }(m.Component)),
            w = Object(l.a)(null, a)(E),
            N = n(4),
            D = n(832),
            I = n(28);
        ! function(e) {
            e[e.Error = 0] = "Error", e[e.AdBlocked = 1] = "AdBlocked", e[e.Unavailable = 2] = "Unavailable", e[e.Available = 3] = "Available"
        }(k || (k = {}));
        var O, U = function(e) {
                var t = null;
                return e.disableWatchAd && (t = Object(f.d)("Try again later", "Bits--WatchAdOffer")), m.createElement(C._17, {
                    className: "bits-buy-card__offer-row",
                    display: C.H.Flex,
                    flexShrink: 0,
                    borderBottom: !0,
                    justifyContent: C.T.Between,
                    flexWrap: C.K.NoWrap,
                    padding: {
                        x: 2,
                        y: 1
                    }
                }, m.createElement(C.U, {
                    padding: {
                        right: 4
                    }
                }, m.createElement("strong", null, Object(f.d)("Get {minBitsCount} or more Bits by watching short ads", {
                    minBitsCount: e.minPayout
                }, "Bits--WatchAdOffer"))), m.createElement(C.U, {
                    flexShrink: 0,
                    display: C.H.Flex,
                    flexDirection: C.J.Column,
                    alignItems: C.c.End
                }, m.createElement(C.u, {
                    type: C.z.Hollow,
                    "data-a-target": "bits-watch-ad",
                    onClick: e.onWatchAdClick,
                    disabled: e.disableWatchAd
                }, Object(f.d)("Watch Ad", "Bits--WatchAdOffer")), t && m.createElement(C.U, {
                    className: "bits-buy-card__sub-text",
                    alignSelf: C.d.Stretch,
                    textAlign: C._22.Center,
                    margin: {
                        top: .5
                    }
                }, t)))
            },
            x = /version\/([\w\.]+).+?(mobile\s?safari|safari)/i,
            T = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        enableWatchAd: !0
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    return p.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return p.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, i(this.props.truexUserID)];
                                case 1:
                                    return e = t.sent(), Object(_.e)({
                                        channel: this.props.channelLogin,
                                        channelID: this.props.channelID,
                                        available: e === k.Available
                                    }), e !== k.Available && e !== k.AdBlocked && this.setState({
                                        enableWatchAd: !1
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return x.test(navigator.userAgent) ? null : m.createElement(U, p.__assign({}, this.props, {
                        disableWatchAd: !this.state.enableWatchAd
                    }))
                }, t
            }(m.Component),
            L = n(820),
            F = n(260),
            j = n(374),
            B = n(821),
            M = n(376),
            A = n(375),
            R = (n(861), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleBuyClick = function(e) {
                        var n = t.props.channelID || "",
                            a = Object(B.b)({
                                trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                                channelID: n,
                                purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                                bitsAmount: e.currentTarget.dataset.bitsAmount,
                                closeAllBits: t.props.closeAllBits,
                                location: t.props.location
                            });
                        a && (t.props.onBuyPopupClose(a), t.props.onClose())
                    }, t
                }
                return p.__extends(t, e), t.prototype.render = function() {
                    if (this.props.offer.type === L.a) {
                        if (!this.props.channelLogin) return null;
                        var e = this.props.currentUserSHA || "";
                        return m.createElement(T, {
                            key: "wateb",
                            minPayout: this.props.offer.bits,
                            onWatchAdClick: this.props.handleWatchAdClick,
                            truexUserID: e,
                            channelID: this.props.channelID || "",
                            channelLogin: this.props.channelLogin
                        })
                    }
                    var t = null;
                    Object(B.c)(this.props.offer) ? t = m.createElement(C.U, {
                        className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline"
                    }, m.createElement(C._21, {
                        type: C._26.Strong,
                        fontSize: C.L.Size6
                    }, Object(f.d)("Special Offer: 1st Time Buyers", "Bits--BuyCard"))) : Object(B.d)(this.props.offer) && null !== this.props.offer.promotion && this.props.offer.promotion.id === L.c && (t = m.createElement(C.U, {
                        className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline"
                    }, m.createElement(C._21, {
                        type: C._26.Strong,
                        fontSize: C.L.Size6
                    }, Object(f.d)("Flash Sale: Now thru Nov. 27!", "Bits--BuyCard"))));
                    var n = null;
                    this.props.offer.discount && (n = m.createElement("div", {
                        className: "bits-buy-card-offer-row__sub-text"
                    }, Object(f.d)("{percentOff,number,percent} discount", {
                        percentOff: this.props.offer.discount
                    }, "Bits--BuyCard")));
                    var a = null;
                    (Object(B.c)(this.props.offer) || Object(B.e)(this.props.offer)) && (a = m.createElement("div", {
                        className: "bits-buy-card-offer-row__sub-text"
                    }, Object(f.d)("one per account", "Bits--BuyCard")));
                    var i = this.props.isLastRow ? C._17 : C.U;
                    return m.createElement(i, {
                        className: "bits-buy-card-offer-row",
                        flexShrink: 0,
                        display: C.H.Flex,
                        justifyContent: C.T.Center,
                        borderBottom: this.props.isLastRow,
                        flexDirection: C.J.Column,
                        padding: {
                            x: 2,
                            y: 1
                        }
                    }, t, m.createElement(C.U, {
                        display: C.H.Flex,
                        justifyContent: C.T.Between,
                        alignItems: C.c.Center
                    }, m.createElement(C.U, {
                        flexGrow: 1
                    }, m.createElement(C._21, {
                        type: C._26.H5,
                        color: C.F.Base,
                        bold: !0
                    }, this.props.offer.bits, " Bits"), this.getAvailableTiers(this.props.offer.bits)), m.createElement(C.U, {
                        flexShrink: 0,
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.End
                    }, m.createElement(C.u, {
                        onClick: this.handleBuyClick,
                        "data-purchase-url": this.props.offer.url,
                        "data-bits-amount": this.props.offer.bits,
                        "data-a-target": "bits-purchase-button-" + this.props.offer.bits
                    }, this.props.offer.price), (n || a) && m.createElement(C.U, {
                        alignSelf: C.d.Stretch,
                        textAlign: C._22.Right,
                        margin: {
                            top: .5
                        }
                    }, n, a))))
                }, t.prototype.getAvailableTiers = function(e) {
                    var t = this.props.bitsConfig.indexedActions[F.f];
                    t || (t = Object(M.b)());
                    var n = t.orderedTiers.filter(function(t) {
                        return t.bits <= e
                    }).reverse();
                    return m.createElement(C.U, {
                        padding: {
                            top: .5
                        },
                        className: "bits-buy-card-offer-row__tier-bits-images"
                    }, n.map(function(e) {
                        return m.createElement(A.a, {
                            key: e.bits,
                            sources: Object(j.b)(e, 2, !1)
                        })
                    }))
                }, t
            }(m.Component)),
            P = (n(862), function(e) {
                var t = [],
                    n = [],
                    a = null;
                return e.offers.forEach(function(i, r) {
                    var s = m.createElement(R, {
                            key: i.id,
                            offer: i,
                            isLastRow: r + 1 < e.offers.length,
                            bitsConfig: e.bitsConfig,
                            channelID: e.channelID,
                            channelLogin: e.channelLogin,
                            currentUserSHA: e.currentUserSHA,
                            location: e.location,
                            onClose: e.onClose,
                            onBuyPopupClose: e.onBuyPopupClose,
                            handleWatchAdClick: e.handleWatchAdClick,
                            closeAllBits: e.closeAllBits,
                            trackBitsCardInteraction: e.trackBitsCardInteraction
                        }),
                        o = Object(B.d)(i),
                        l = Object(B.c)(i),
                        c = i.type === L.a;
                    l && !e.hidePromos ? t.push(s) : o && !l ? t.push(s) : c && !e.hideWateb ? a = s : c || o || n.push(s)
                }), e.fullsize ? m.createElement(C.U, {
                    className: "bits-buy-card-offers__full-size",
                    flexGrow: 1,
                    flexWrap: C.K.NoWrap,
                    display: C.H.Flex,
                    flexDirection: C.J.Column
                }, a, t, n) : m.createElement(I.b, {
                    className: "bits-buy-card-offers__scroll-view"
                }, m.createElement(C.U, {
                    flexGrow: 1,
                    flexWrap: C.K.NoWrap,
                    display: C.H.Flex,
                    flexDirection: C.J.Column
                }, a, t, n))
            }),
            H = function(e) {
                var t = null;
                e.pricesIncludeVAT && (t = m.createElement(C._21, {
                    italic: !0,
                    type: C._26.P,
                    color: C.F.Alt
                }, Object(f.d)("Prices include VAT", "Bits--BuyCard")));
                var n = null;
                e.minBitsToCheer && e.minBitsToCheer > 1 && (n = m.createElement(C._21, {
                    color: C.F.Alt
                }, Object(f.d)("{displayName} requires {minBits} Bits to Cheer in this channel.", {
                    displayName: e.displayName,
                    minBits: e.minBitsToCheer
                }, "Bits--BuyCard")));
                var a = null;
                return void 0 !== e.bitsBalance && null !== e.bitsBalance && (a = m.createElement(C._21, {
                    color: C.F.Alt
                }, Object(f.d)("You have {totalBits} Bits", {
                    totalBits: m.createElement("strong", {
                        "data-a-target": "buy-card-bits-count"
                    }, e.bitsBalance)
                }, "Bits--BuyCard"))), m.createElement(C._17, {
                    className: "bits-buy-card-header",
                    padding: {
                        x: 1,
                        bottom: 1
                    },
                    borderBottom: !0,
                    flexShrink: 0
                }, m.createElement(C.U, {
                    margin: {
                        bottom: 1
                    }
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    color: C.F.Alt
                }, Object(f.d)("Purchase Bits", "Bits--BuyCard")), t), a, n)
            },
            V = n(824),
            W = function(e) {
                return m.createElement(C.U, {
                    display: C.H.Flex,
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    fullWidth: !0,
                    flexWrap: C.K.NoWrap,
                    padding: {
                        y: 1
                    }
                }, m.createElement(V.a, {
                    prefix: "cheer",
                    amount: e.amount,
                    bitsConfig: e.bitsConfig
                }), m.createElement(C.U, {
                    display: C.H.Flex,
                    padding: {
                        top: 1
                    },
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    flexWrap: C.K.NoWrap
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    bold: !0
                }, Object(f.d)("You got {bitsAmount,number} Bits!", {
                    bitsAmount: e.amount
                }, "Bits--WatchAdAward")), m.createElement(C.P, {
                    padding: {
                        top: 1
                    }
                }, m.createElement(C._21, {
                    color: C.F.Alt2
                }, Object(f.d)("{bitsAmount,number} Bits were added to your Bit inventory.", {
                    bitsAmount: e.amount
                }, "Bits--WatchAdAward"), m.createElement("br", null), Object(f.d)("You can use these Bits to Cheer!", "Bits--WatchAdAward")))), m.createElement(C.U, {
                    display: C.H.Flex,
                    padding: {
                        x: 1,
                        top: 3
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Between
                }, m.createElement(C.u, {
                    onClick: e.onStartCheering
                }, Object(f.d)("Start Cheering", "Bits--WatchAdAward")), m.createElement(C.u, {
                    type: C.z.Hollow,
                    onClick: e.onWatchAnother,
                    disabled: !e.hasAdAvailable
                }, Object(f.d)("Watch Another", "Bits--WatchAdAward"))))
            },
            q = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hasAdAvailable: !0
                    }, t
                }
                return p.__extends(t, e), t.prototype.componentWillMount = function() {
                    return p.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return p.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, i(this.props.truexUserID)];
                                case 1:
                                    return e = t.sent(), e !== k.Available && this.setState({
                                        hasAdAvailable: !1
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return m.createElement(W, p.__assign({}, this.props, {
                        hasAdAvailable: this.state.hasAdAvailable
                    }))
                }, t
            }(m.Component),
            z = (n(864), function(e) {
                var t = Object(f.d)("Something's wrong!", "Bits--WatchAdError"),
                    n = Object(f.d)("Something went wrong. Wait a while and try again.", "Bits--WatchAdError"),
                    a = "adserrorgeneric";
                switch (e.type) {
                    case o.Adblock:
                        a = "adserroradblock", n = Object(f.d)("We can't load this Ad, probably because Ad Blocking software is running. To watch an ad and get Bits, please disable all Ad Blocking software.", "Bits--WatchAdError");
                        break;
                    case o.LimitReached:
                        a = "adserrorlimit", t = Object(f.d)("Ad Limit Reached", "Bits--WatchAdError"), n = Object(f.d)("That's all the Ads we have for now. Try again tomorrow!", "Bits--WatchAdError");
                        break;
                    case o.ExitEarly:
                        n = Object(f.d)("To get Bits, you must view and interact with the Ad for the minimum amount of time.", "Bits--WatchAdError")
                }
                var i = m.createElement(C.U, {
                    className: "watch-ad-error__footer",
                    display: C.H.Flex,
                    padding: {
                        top: 2
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Center
                }, m.createElement(C.u, {
                    onClick: e.onTryAgain
                }, Object(f.d)("Try Again", "Bits--WatchAdError")));
                return e.type === o.LimitReached && (i = m.createElement(C.U, {
                    className: "watch-ad-error__footer",
                    display: C.H.Flex,
                    padding: {
                        top: 2
                    },
                    alignSelf: C.d.Stretch,
                    justifyContent: C.T.Between
                }, m.createElement(C.u, {
                    onClick: e.onClose
                }, Object(f.d)("Got It", "Bits--WatchAdError")), m.createElement(C.u, {
                    onClick: e.onTryAgain,
                    type: C.z.Hollow
                }, Object(f.d)("Buy Bits", "Bits--WatchAdError")))), m.createElement(C.U, {
                    padding: {
                        x: 1
                    },
                    display: C.H.Flex,
                    flexGrow: 1,
                    flexDirection: C.J.Column,
                    alignItems: C.c.Center,
                    fullWidth: !0,
                    flexWrap: C.K.NoWrap
                }, m.createElement(C.U, {
                    padding: {
                        y: 2
                    }
                }, m.createElement("img", {
                    className: "watch-ad-error__error-image",
                    src: F.b + "/light/static/1/" + a + ".png"
                })), m.createElement(C.U, {
                    padding: {
                        bottom: 1
                    }
                }, m.createElement(C._21, {
                    type: C._26.H4,
                    bold: !0
                }, t)), m.createElement(C._21, {
                    color: C.F.Alt2
                }, n), i)
            }),
            G = n(865);
        n(866);
        ! function(e) {
            e[e.Inactive = 0] = "Inactive", e[e.Error = 1] = "Error", e[e.Awarded = 2] = "Awarded"
        }(O || (O = {}));
        var $ = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        wateb: O.Inactive,
                        watebError: null,
                        bitsAwarded: 0
                    }, t.onBuyPopupClose = function(e) {
                        Object(D.a)(e, function() {
                            t.props.data && t.props.data.refetch()
                        })
                    }, t.onAdBitsAwarded = function(e) {
                        t.props.data && !t.props.data.loading && t.props.data.refetch(), t.setState({
                            wateb: O.Awarded,
                            bitsAwarded: e
                        })
                    }, t.handleWatchAdClick = function() {
                        return p.__awaiter(t, void 0, void 0, function() {
                            return p.__generator(this, function(e) {
                                return this.props.data && this.props.data.currentUser && this.props.data.user ? (this.props.showWatchAdModal({
                                    tuid: this.props.data.currentUser.idSHA1,
                                    onBitsAwarded: this.onAdBitsAwarded,
                                    onError: this.receiveAdErrorState,
                                    requestRef: _.c.ShowAdButton,
                                    channelID: this.props.data.user.id
                                }), [2]) : [2]
                            })
                        })
                    }, t.receiveAdErrorState = function(e) {
                        t.setState({
                            wateb: O.Error,
                            watebError: e
                        })
                    }, t.resetAdErrorState = function() {
                        t.state.wateb === O.Error && (t.setState({
                            wateb: O.Inactive
                        }), t.props.data && t.props.data.refetch())
                    }, t
                }
                return p.__extends(t, e), t.prototype.shouldComponentUpdate = function(e) {
                    return !e.adModalOpen
                }, t.prototype.render = function() {
                    var e = {
                            border: !0,
                            background: C.m.Base,
                            fullWidth: !0,
                            elevation: 3
                        },
                        t = N({
                            "bits-buy-card": !0,
                            "bits-buy-card__chat-tooltip": this.props.location === _.b.ChatTooltip
                        }),
                        n = null;
                    if (this.props.location === _.b.ChatTooltip && (n = m.createElement("button", {
                            className: "bits-buy-card__close",
                            onClick: this.props.onClose,
                            "data-a-target": "bits-buy-card-close-button"
                        }, m.createElement(C._8, {
                            asset: C._9.Close,
                            height: 11,
                            width: 11
                        }))), !this.props.data || this.props.data.loading) return m.createElement(C._17, p.__assign({
                        className: t,
                        "data-a-target": "bits-buy-card-loading",
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        textAlign: C._22.Center
                    }, e), m.createElement(C.X, {
                        delay: 0
                    }), m.createElement(C.U, {
                        padding: {
                            top: 2
                        }
                    }, m.createElement(C._21, {
                        italic: !0
                    }, Object(f.d)("Fetching bits", "Bits--BuyCard"))));
                    if (this.props.data.error) return m.createElement(C.U, p.__assign({
                        className: N(t, "bits-buy-card--shorter"),
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        padding: 2,
                        textAlign: C._22.Center,
                        "data-a-target": "bits-buy-card-error"
                    }, e), n, m.createElement(C._21, {
                        italic: !0
                    }, Object(f.d)("Bits prices are unavailable right now. Check back again later.", "Bits--BuyCard")));
                    var a = this.renderWatebCard();
                    if (a) return m.createElement(C._17, p.__assign({
                        className: N(t, "bits-buy-card--shorter"),
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        alignItems: C.c.Center,
                        justifyContent: C.T.Center,
                        textAlign: C._22.Center,
                        padding: 1
                    }, e), n, a);
                    var i = [];
                    this.props.data.currentUser ? i = this.props.data.currentUser.bitsOffers : this.props.data.bitsOffers && (i = this.props.data.bitsOffers);
                    var r = i.filter(function(e) {
                            return e.type === L.b
                        }).some(function(e) {
                            return e.includesVAT
                        }),
                        s = this.props.data.user ? this.props.data.user.id : "",
                        o = m.createElement(P, {
                            offers: i,
                            fullsize: this.props.fullsize,
                            hidePromos: this.props.hidePromos,
                            hideWateb: this.props.hideWateb,
                            bitsConfig: this.props.bitsConfig,
                            channelID: s,
                            channelLogin: this.props.channelLogin,
                            closeAllBits: this.props.closeAllBits,
                            currentUserSHA: this.props.data && this.props.data.currentUser && this.props.data.currentUser.idSHA1,
                            handleWatchAdClick: this.handleWatchAdClick,
                            location: this.props.location,
                            onBuyPopupClose: this.onBuyPopupClose,
                            onClose: this.props.onClose,
                            trackBitsCardInteraction: this.props.trackBitsCardInteraction
                        }),
                        l = null;
                    return this.props.location === _.b.ChatTooltip && (l = m.createElement(H, {
                        bitsBalance: this.props.data && this.props.data.currentUser && this.props.data.currentUser.bitsBalance,
                        displayName: this.props.data && this.props.data.user && this.props.data.user.displayName || this.props.channelLogin || "",
                        minBitsToCheer: this.props.data && this.props.data.user && this.props.data.user.cheer && this.props.data.user.cheer.settings.cheerMinimumBits,
                        pricesIncludeVAT: r
                    })), m.createElement(C._17, p.__assign({
                        className: t,
                        padding: {
                            top: 1
                        },
                        display: C.H.Flex,
                        flexDirection: C.J.Column,
                        "data-a-target": "bits-buy-card"
                    }, e), n, l, o)
                }, t.prototype.renderWatebCard = function() {
                    if (this.props.data && this.props.data.currentUser) switch (this.state.wateb) {
                        case O.Awarded:
                            return m.createElement(q, {
                                bitsConfig: this.props.bitsConfig,
                                amount: this.state.bitsAwarded,
                                onStartCheering: this.props.onClose,
                                onWatchAnother: this.handleWatchAdClick,
                                truexUserID: this.props.data.currentUser.idSHA1
                            });
                        case O.Error:
                            return m.createElement(z, {
                                type: this.state.watebError || o.Unknown,
                                onClose: this.props.onClose,
                                onTryAgain: this.resetAdErrorState
                            });
                        default:
                            return !1
                    }
                }, t = p.__decorate([Object(v.a)(G, {
                    name: "data",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin,
                                withChannel: !!e.channelLogin,
                                isLoggedIn: e.isLoggedIn
                            }
                        }
                    }
                })], t)
            }(m.Component),
            J = $,
            K = Object(l.a)(r, s)(J);
        n.d(t, !1, function() {
            return r
        }), n.d(t, !1, function() {
            return s
        }), n.d(t, "a", function() {
            return K
        })
    },
    844: function(e, t, n) {
        "use strict";

        function a(e) {
            return "https://www.twitch.tv/" + e + "/subscribe?ref=in_chat_subscriber_link"
        }

        function i(e) {
            switch (e.clickAction) {
                case s.d:
                    return e.clickURL;
                case s.b:
                    return e.channelName ? a(e.channelName) : "";
                case s.c:
                    return c;
                default:
                    return ""
            }
        }
        n.d(t, "a", function() {
            return u
        });
        var r = n(1),
            s = (n.n(r), n(835)),
            o = n(3),
            l = n(883),
            c = (n.n(l), "https://www.twitch.tv/products/turbo?ref=chat_badge"),
            u = function(e) {
                var t = e.badge,
                    n = r.createElement("img", {
                        alt: t.title,
                        className: "chat-badge",
                        src: t.image1x,
                        srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                    }),
                    a = i(t);
                return "" !== a && (n = r.createElement("a", {
                    href: a,
                    target: "_blank"
                }, n)), r.createElement(o._30, {
                    key: t.image1x,
                    label: t.title,
                    display: o.H.Inline,
                    align: o._31.Left,
                    offsetY: "0.9rem",
                    "data-a-target": "chat-badge"
                }, n)
            }
    },
    845: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return a
        });
        var a = {
            DarkMode: "darkMode",
            FollowerDuration: "followerDuration",
            FollowerMode: "followerMode",
            HideChat: "hideChat",
            ShowMessageFlags: "showMessageFlags",
            ShowModActions: "showModerationActions",
            ShowModIcons: "showModIcons",
            ShowTimestamps: "showTimestamps",
            SlowMode: "slowMode"
        }
    },
    848: function(e, t, n) {
        "use strict";

        function a(e) {
            return Object(d.a)(p, {
                u: e
            })
        }

        function i(e, t) {
            return Object(d.a)(m, {
                url: e,
                text: t
            })
        }

        function r(e, t) {
            return Object(d.a)(h, {
                url: e,
                title: t
            })
        }

        function s(e) {
            return Object(d.a)(f, {
                url: e
            })
        }
        var o = n(0),
            l = n(1),
            c = n(2),
            u = n(858),
            d = n(68),
            p = "https://www.facebook.com/sharer/sharer.php",
            m = "https://www.twitter.com/share",
            h = "https://www.reddit.com/submit",
            f = "https://vk.com/share.php",
            g = n(3);
        n(899);
        n.d(t, "b", function() {
            return v
        }), n.d(t, "a", function() {
            return b
        });
        var v;
        ! function(e) {
            e[e.Twitter = 0] = "Twitter", e[e.Reddit = 1] = "Reddit", e[e.VKontakte = 2] = "VKontakte", e[e.Facebook = 3] = "Facebook", e[e.Copy = 4] = "Copy", e[e.CopyInput = 5] = "CopyInput"
        }(v || (v = {}));
        var b = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n.renderLink = function() {
                    var e = "social-button__link " + n.addSocialClassModifier("social-button__link");
                    return n.isLink() ? l.createElement("a", o.__assign({
                        href: n.getLinkTarget(),
                        target: "_blank",
                        className: e,
                        onClick: n.onShareClickHandler
                    }, Object(g._39)(n.props)), n.renderIcon()) : l.createElement("button", o.__assign({
                        onClick: n.copyPageUrl,
                        onMouseLeave: n.clearIsCopiedStatus,
                        className: e
                    }, Object(g._39)(n.props)), n.renderIcon())
                }, n.onShareClickHandler = function() {
                    n.props.onShareClick && n.props.onShareClick(n.props.type)
                }, n.clearIsCopiedStatus = function() {
                    n.setState({
                        isCopied: !1
                    })
                }, n.getUrl = function() {
                    return n.props.url || window.location.href
                }, n.copyPageUrl = function(e) {
                    e && e.preventDefault(), n.props.onShareClick && n.props.onShareClick(n.props.type), Object(u.a)(n.getUrl()), n.setState({
                        isCopied: !0
                    })
                }, n.renderIcon = function() {
                    var e = n.getAssetFromType();
                    return l.createElement(g.U, {
                        className: "social-button__icon " + n.addSocialClassModifier("social-button__icon")
                    }, l.createElement(g._8, {
                        asset: e,
                        width: 30,
                        height: 30
                    }))
                }, n.isLink = function() {
                    return n.props.type !== v.Copy
                }, n.getTooltipFromType = function() {
                    switch (n.props.type) {
                        case v.Twitter:
                            return "Twitter";
                        case v.Reddit:
                            return "Reddit";
                        case v.Facebook:
                            return "Facebook";
                        case v.VKontakte:
                            return "VKontakte";
                        case v.Copy:
                            return n.state.isCopied ? Object(c.d)("Copied", "SocialButton") : Object(c.d)("Copy to clipboard", "SocialButton");
                        default:
                            return ""
                    }
                }, n.getAssetFromType = function() {
                    switch (n.props.type) {
                        case v.Twitter:
                            return g._9.Twitter;
                        case v.Facebook:
                            return g._9.Facebook;
                        case v.VKontakte:
                            return g._9.VKontakte;
                        case v.Reddit:
                            return g._9.Reddit;
                        case v.Copy:
                        default:
                            return g._9.Copy
                    }
                }, n.addSocialClassModifier = function(e) {
                    switch (n.props.type) {
                        case v.Twitter:
                            return e + "--twitter";
                        case v.Reddit:
                            return e + "--reddit";
                        case v.Facebook:
                            return e + "--facebook";
                        case v.VKontakte:
                            return e + "--vkontakte";
                        case v.Copy:
                            return e + "--copy";
                        default:
                            return ""
                    }
                }, n.getLinkTarget = function() {
                    var e = n.props,
                        t = e.text,
                        o = e.type,
                        l = n.getUrl(),
                        c = t || "";
                    switch (o) {
                        case v.Reddit:
                            return r(l, c);
                        case v.VKontakte:
                            return s(l);
                        case v.Facebook:
                            return a(l);
                        case v.Twitter:
                            return i(l, c);
                        default:
                            return ""
                    }
                }, n.state = {
                    isCopied: !1
                }, n
            }
            return o.__extends(t, e), t.prototype.render = function() {
                return l.createElement(g.U, {
                    className: "social-button"
                }, l.createElement(g._30, {
                    label: this.getTooltipFromType(),
                    direction: g._32.Top
                }, this.renderLink()))
            }, t
        }(l.Component)
    },
    850: function(e, t, n) {
        "use strict";
        var a = n(1),
            i = n(2),
            r = n(260),
            s = n(375),
            o = n(3),
            l = (n(873), {
                themed: !0,
                dark: {
                    "1x": r.b + "/dark/animated/1/cheertutorial.gif"
                },
                light: {
                    "1x": r.b + "/light/animated/1/cheertutorial.gif"
                }
            }),
            c = function() {
                return a.createElement(o.U, {
                    display: o.H.Flex,
                    padding: {
                        top: 5
                    },
                    flexGrow: 1,
                    flexDirection: o.J.Column,
                    justifyContent: o.T.Center,
                    alignItems: o.c.Center
                }, a.createElement(o._21, {
                    type: o._26.H4,
                    bold: !0
                }, a.createElement(s.a, {
                    className: "cheermote-help__tutorial-image",
                    sources: l
                }), Object(i.d)("How to Cheer", "Bits--CheermoteHelp")), a.createElement("p", {
                    className: "t-bits-card__contents-body t-bits-card__contents-body--narrow"
                }, Object(i.d)('Type "cheer" + the number of Bits you want to Cheer.', "Bits--CheermoteHelp")))
            };
        n.d(t, "a", function() {
            return c
        })
    },
    851: function(e, t, n) {
        "use strict";

        function a() {
            var e = o.k.get(c, {});
            return s.__assign({
                lastUsedFollowerDurations: {},
                showAutoModActions: !0,
                showMessageFlags: !0,
                showModerationActions: !0,
                showModIcons: !1,
                showTimestamps: !1,
                zachModeStatus: l
            }, e)
        }

        function i(e, t) {
            var n = a();
            n[e] = t, o.k.set(c, n)
        }

        function r(e, t) {
            var n = a();
            n.lastUsedFollowerDurations[e] = t, o.k.set(c, n)
        }
        var s = n(0),
            o = n(2),
            l = "control";
        t.a = a, t.b = i, t.c = r;
        var c = "chatSettings"
    },
    852: function(e, t, n) {
        (function(e, a) {
            var i;
            (function() {
                function r(e, t) {
                    return e.set(t[0], t[1]), e
                }

                function s(e, t) {
                    return e.add(t), e
                }

                function o(e, t, n) {
                    switch (n.length) {
                        case 0:
                            return e.call(t);
                        case 1:
                            return e.call(t, n[0]);
                        case 2:
                            return e.call(t, n[0], n[1]);
                        case 3:
                            return e.call(t, n[0], n[1], n[2])
                    }
                    return e.apply(t, n)
                }

                function l(e, t, n, a) {
                    for (var i = -1, r = null == e ? 0 : e.length; ++i < r;) {
                        var s = e[i];
                        t(a, s, n(s), e)
                    }
                    return a
                }

                function c(e, t) {
                    for (var n = -1, a = null == e ? 0 : e.length; ++n < a && !1 !== t(e[n], n, e););
                    return e
                }

                function u(e, t) {
                    for (var n = null == e ? 0 : e.length; n-- && !1 !== t(e[n], n, e););
                    return e
                }

                function d(e, t) {
                    for (var n = -1, a = null == e ? 0 : e.length; ++n < a;)
                        if (!t(e[n], n, e)) return !1;
                    return !0
                }

                function p(e, t) {
                    for (var n = -1, a = null == e ? 0 : e.length, i = 0, r = []; ++n < a;) {
                        var s = e[n];
                        t(s, n, e) && (r[i++] = s)
                    }
                    return r
                }

                function m(e, t) {
                    return !!(null == e ? 0 : e.length) && E(e, t, 0) > -1
                }

                function h(e, t, n) {
                    for (var a = -1, i = null == e ? 0 : e.length; ++a < i;)
                        if (n(t, e[a])) return !0;
                    return !1
                }

                function f(e, t) {
                    for (var n = -1, a = null == e ? 0 : e.length, i = Array(a); ++n < a;) i[n] = t(e[n], n, e);
                    return i
                }

                function g(e, t) {
                    for (var n = -1, a = t.length, i = e.length; ++n < a;) e[i + n] = t[n];
                    return e
                }

                function v(e, t, n, a) {
                    var i = -1,
                        r = null == e ? 0 : e.length;
                    for (a && r && (n = e[++i]); ++i < r;) n = t(n, e[i], i, e);
                    return n
                }

                function b(e, t, n, a) {
                    var i = null == e ? 0 : e.length;
                    for (a && i && (n = e[--i]); i--;) n = t(n, e[i], i, e);
                    return n
                }

                function k(e, t) {
                    for (var n = -1, a = null == e ? 0 : e.length; ++n < a;)
                        if (t(e[n], n, e)) return !0;
                    return !1
                }

                function y(e) {
                    return e.split("")
                }

                function _(e) {
                    return e.match(Pt) || []
                }

                function C(e, t, n) {
                    var a;
                    return n(e, function(e, n, i) {
                        if (t(e, n, i)) return a = n, !1
                    }), a
                }

                function S(e, t, n, a) {
                    for (var i = e.length, r = n + (a ? 1 : -1); a ? r-- : ++r < i;)
                        if (t(e[r], r, e)) return r;
                    return -1
                }

                function E(e, t, n) {
                    return t === t ? Y(e, t, n) : S(e, N, n)
                }

                function w(e, t, n, a) {
                    for (var i = n - 1, r = e.length; ++i < r;)
                        if (a(e[i], t)) return i;
                    return -1
                }

                function N(e) {
                    return e !== e
                }

                function D(e, t) {
                    var n = null == e ? 0 : e.length;
                    return n ? T(e, t) / n : je
                }

                function I(e) {
                    return function(t) {
                        return null == t ? ie : t[e]
                    }
                }

                function O(e) {
                    return function(t) {
                        return null == e ? ie : e[t]
                    }
                }

                function U(e, t, n, a, i) {
                    return i(e, function(e, i, r) {
                        n = a ? (a = !1, e) : t(n, e, i, r)
                    }), n
                }

                function x(e, t) {
                    var n = e.length;
                    for (e.sort(t); n--;) e[n] = e[n].value;
                    return e
                }

                function T(e, t) {
                    for (var n, a = -1, i = e.length; ++a < i;) {
                        var r = t(e[a]);
                        r !== ie && (n = n === ie ? r : n + r)
                    }
                    return n
                }

                function L(e, t) {
                    for (var n = -1, a = Array(e); ++n < e;) a[n] = t(n);
                    return a
                }

                function F(e, t) {
                    return f(t, function(t) {
                        return [t, e[t]]
                    })
                }

                function j(e) {
                    return function(t) {
                        return e(t)
                    }
                }

                function B(e, t) {
                    return f(t, function(t) {
                        return e[t]
                    })
                }

                function M(e, t) {
                    return e.has(t)
                }

                function A(e, t) {
                    for (var n = -1, a = e.length; ++n < a && E(t, e[n], 0) > -1;);
                    return n
                }

                function R(e, t) {
                    for (var n = e.length; n-- && E(t, e[n], 0) > -1;);
                    return n
                }

                function P(e, t) {
                    for (var n = e.length, a = 0; n--;) e[n] === t && ++a;
                    return a
                }

                function H(e) {
                    return "\\" + In[e]
                }

                function V(e, t) {
                    return null == e ? ie : e[t]
                }

                function W(e) {
                    return kn.test(e)
                }

                function q(e) {
                    return yn.test(e)
                }

                function z(e) {
                    for (var t, n = []; !(t = e.next()).done;) n.push(t.value);
                    return n
                }

                function G(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e, a) {
                        n[++t] = [a, e]
                    }), n
                }

                function $(e, t) {
                    return function(n) {
                        return e(t(n))
                    }
                }

                function J(e, t) {
                    for (var n = -1, a = e.length, i = 0, r = []; ++n < a;) {
                        var s = e[n];
                        s !== t && s !== ue || (e[n] = ue, r[i++] = n)
                    }
                    return r
                }

                function K(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e) {
                        n[++t] = e
                    }), n
                }

                function Q(e) {
                    var t = -1,
                        n = Array(e.size);
                    return e.forEach(function(e) {
                        n[++t] = [e, e]
                    }), n
                }

                function Y(e, t, n) {
                    for (var a = n - 1, i = e.length; ++a < i;)
                        if (e[a] === t) return a;
                    return -1
                }

                function X(e, t, n) {
                    for (var a = n + 1; a--;)
                        if (e[a] === t) return a;
                    return a
                }

                function Z(e) {
                    return W(e) ? te(e) : zn(e)
                }

                function ee(e) {
                    return W(e) ? ne(e) : y(e)
                }

                function te(e) {
                    for (var t = vn.lastIndex = 0; vn.test(e);) ++t;
                    return t
                }

                function ne(e) {
                    return e.match(vn) || []
                }

                function ae(e) {
                    return e.match(bn) || []
                }
                var ie, re = 200,
                    se = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",
                    oe = "Expected a function",
                    le = "__lodash_hash_undefined__",
                    ce = 500,
                    ue = "__lodash_placeholder__",
                    de = 1,
                    pe = 2,
                    me = 4,
                    he = 1,
                    fe = 2,
                    ge = 1,
                    ve = 2,
                    be = 4,
                    ke = 8,
                    ye = 16,
                    _e = 32,
                    Ce = 64,
                    Se = 128,
                    Ee = 256,
                    we = 512,
                    Ne = 30,
                    De = "...",
                    Ie = 800,
                    Oe = 16,
                    Ue = 1,
                    xe = 2,
                    Te = 1 / 0,
                    Le = 9007199254740991,
                    Fe = 1.7976931348623157e308,
                    je = NaN,
                    Be = 4294967295,
                    Me = Be - 1,
                    Ae = Be >>> 1,
                    Re = [
                        ["ary", Se],
                        ["bind", ge],
                        ["bindKey", ve],
                        ["curry", ke],
                        ["curryRight", ye],
                        ["flip", we],
                        ["partial", _e],
                        ["partialRight", Ce],
                        ["rearg", Ee]
                    ],
                    Pe = "[object Arguments]",
                    He = "[object Array]",
                    Ve = "[object AsyncFunction]",
                    We = "[object Boolean]",
                    qe = "[object Date]",
                    ze = "[object DOMException]",
                    Ge = "[object Error]",
                    $e = "[object Function]",
                    Je = "[object GeneratorFunction]",
                    Ke = "[object Map]",
                    Qe = "[object Number]",
                    Ye = "[object Null]",
                    Xe = "[object Object]",
                    Ze = "[object Proxy]",
                    et = "[object RegExp]",
                    tt = "[object Set]",
                    nt = "[object String]",
                    at = "[object Symbol]",
                    it = "[object Undefined]",
                    rt = "[object WeakMap]",
                    st = "[object WeakSet]",
                    ot = "[object ArrayBuffer]",
                    lt = "[object DataView]",
                    ct = "[object Float32Array]",
                    ut = "[object Float64Array]",
                    dt = "[object Int8Array]",
                    pt = "[object Int16Array]",
                    mt = "[object Int32Array]",
                    ht = "[object Uint8Array]",
                    ft = "[object Uint8ClampedArray]",
                    gt = "[object Uint16Array]",
                    vt = "[object Uint32Array]",
                    bt = /\b__p \+= '';/g,
                    kt = /\b(__p \+=) '' \+/g,
                    yt = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                    _t = /&(?:amp|lt|gt|quot|#39);/g,
                    Ct = /[&<>"']/g,
                    St = RegExp(_t.source),
                    Et = RegExp(Ct.source),
                    wt = /<%-([\s\S]+?)%>/g,
                    Nt = /<%([\s\S]+?)%>/g,
                    Dt = /<%=([\s\S]+?)%>/g,
                    It = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                    Ot = /^\w*$/,
                    Ut = /^\./,
                    xt = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                    Tt = /[\\^$.*+?()[\]{}|]/g,
                    Lt = RegExp(Tt.source),
                    Ft = /^\s+|\s+$/g,
                    jt = /^\s+/,
                    Bt = /\s+$/,
                    Mt = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                    At = /\{\n\/\* \[wrapped with (.+)\] \*/,
                    Rt = /,? & /,
                    Pt = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                    Ht = /\\(\\)?/g,
                    Vt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                    Wt = /\w*$/,
                    qt = /^[-+]0x[0-9a-f]+$/i,
                    zt = /^0b[01]+$/i,
                    Gt = /^\[object .+?Constructor\]$/,
                    $t = /^0o[0-7]+$/i,
                    Jt = /^(?:0|[1-9]\d*)$/,
                    Kt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                    Qt = /($^)/,
                    Yt = /['\n\r\u2028\u2029\\]/g,
                    Xt = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                    Zt = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                    en = "[" + Zt + "]",
                    tn = "[" + Xt + "]",
                    nn = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
                    an = "[^\\ud800-\\udfff" + Zt + "\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
                    rn = "\\ud83c[\\udffb-\\udfff]",
                    sn = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                    on = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                    ln = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
                    cn = "(?:" + nn + "|" + an + ")",
                    un = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
                    dn = "(?:\\u200d(?:" + ["[^\\ud800-\\udfff]", sn, on].join("|") + ")[\\ufe0e\\ufe0f]?" + un + ")*",
                    pn = "[\\ufe0e\\ufe0f]?" + un + dn,
                    mn = "(?:" + ["[\\u2700-\\u27bf]", sn, on].join("|") + ")" + pn,
                    hn = "(?:" + ["[^\\ud800-\\udfff]" + tn + "?", tn, sn, on, "[\\ud800-\\udfff]"].join("|") + ")",
                    fn = RegExp("['’]", "g"),
                    gn = RegExp(tn, "g"),
                    vn = RegExp(rn + "(?=" + rn + ")|" + hn + pn, "g"),
                    bn = RegExp([ln + "?" + nn + "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" + [en, ln, "$"].join("|") + ")", "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" + [en, ln + cn, "$"].join("|") + ")", ln + "?" + cn + "+(?:['’](?:d|ll|m|re|s|t|ve))?", ln + "+(?:['’](?:D|LL|M|RE|S|T|VE))?", "\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)", "\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)", "\\d+", mn].join("|"), "g"),
                    kn = RegExp("[\\u200d\\ud800-\\udfff" + Xt + "\\ufe0e\\ufe0f]"),
                    yn = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                    _n = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                    Cn = -1,
                    Sn = {};
                Sn[ct] = Sn[ut] = Sn[dt] = Sn[pt] = Sn[mt] = Sn[ht] = Sn[ft] = Sn[gt] = Sn[vt] = !0, Sn[Pe] = Sn[He] = Sn[ot] = Sn[We] = Sn[lt] = Sn[qe] = Sn[Ge] = Sn[$e] = Sn[Ke] = Sn[Qe] = Sn[Xe] = Sn[et] = Sn[tt] = Sn[nt] = Sn[rt] = !1;
                var En = {};
                En[Pe] = En[He] = En[ot] = En[lt] = En[We] = En[qe] = En[ct] = En[ut] = En[dt] = En[pt] = En[mt] = En[Ke] = En[Qe] = En[Xe] = En[et] = En[tt] = En[nt] = En[at] = En[ht] = En[ft] = En[gt] = En[vt] = !0, En[Ge] = En[$e] = En[rt] = !1;
                var wn = {
                        "À": "A",
                        "Á": "A",
                        "Â": "A",
                        "Ã": "A",
                        "Ä": "A",
                        "Å": "A",
                        "à": "a",
                        "á": "a",
                        "â": "a",
                        "ã": "a",
                        "ä": "a",
                        "å": "a",
                        "Ç": "C",
                        "ç": "c",
                        "Ð": "D",
                        "ð": "d",
                        "È": "E",
                        "É": "E",
                        "Ê": "E",
                        "Ë": "E",
                        "è": "e",
                        "é": "e",
                        "ê": "e",
                        "ë": "e",
                        "Ì": "I",
                        "Í": "I",
                        "Î": "I",
                        "Ï": "I",
                        "ì": "i",
                        "í": "i",
                        "î": "i",
                        "ï": "i",
                        "Ñ": "N",
                        "ñ": "n",
                        "Ò": "O",
                        "Ó": "O",
                        "Ô": "O",
                        "Õ": "O",
                        "Ö": "O",
                        "Ø": "O",
                        "ò": "o",
                        "ó": "o",
                        "ô": "o",
                        "õ": "o",
                        "ö": "o",
                        "ø": "o",
                        "Ù": "U",
                        "Ú": "U",
                        "Û": "U",
                        "Ü": "U",
                        "ù": "u",
                        "ú": "u",
                        "û": "u",
                        "ü": "u",
                        "Ý": "Y",
                        "ý": "y",
                        "ÿ": "y",
                        "Æ": "Ae",
                        "æ": "ae",
                        "Þ": "Th",
                        "þ": "th",
                        "ß": "ss",
                        "Ā": "A",
                        "Ă": "A",
                        "Ą": "A",
                        "ā": "a",
                        "ă": "a",
                        "ą": "a",
                        "Ć": "C",
                        "Ĉ": "C",
                        "Ċ": "C",
                        "Č": "C",
                        "ć": "c",
                        "ĉ": "c",
                        "ċ": "c",
                        "č": "c",
                        "Ď": "D",
                        "Đ": "D",
                        "ď": "d",
                        "đ": "d",
                        "Ē": "E",
                        "Ĕ": "E",
                        "Ė": "E",
                        "Ę": "E",
                        "Ě": "E",
                        "ē": "e",
                        "ĕ": "e",
                        "ė": "e",
                        "ę": "e",
                        "ě": "e",
                        "Ĝ": "G",
                        "Ğ": "G",
                        "Ġ": "G",
                        "Ģ": "G",
                        "ĝ": "g",
                        "ğ": "g",
                        "ġ": "g",
                        "ģ": "g",
                        "Ĥ": "H",
                        "Ħ": "H",
                        "ĥ": "h",
                        "ħ": "h",
                        "Ĩ": "I",
                        "Ī": "I",
                        "Ĭ": "I",
                        "Į": "I",
                        "İ": "I",
                        "ĩ": "i",
                        "ī": "i",
                        "ĭ": "i",
                        "į": "i",
                        "ı": "i",
                        "Ĵ": "J",
                        "ĵ": "j",
                        "Ķ": "K",
                        "ķ": "k",
                        "ĸ": "k",
                        "Ĺ": "L",
                        "Ļ": "L",
                        "Ľ": "L",
                        "Ŀ": "L",
                        "Ł": "L",
                        "ĺ": "l",
                        "ļ": "l",
                        "ľ": "l",
                        "ŀ": "l",
                        "ł": "l",
                        "Ń": "N",
                        "Ņ": "N",
                        "Ň": "N",
                        "Ŋ": "N",
                        "ń": "n",
                        "ņ": "n",
                        "ň": "n",
                        "ŋ": "n",
                        "Ō": "O",
                        "Ŏ": "O",
                        "Ő": "O",
                        "ō": "o",
                        "ŏ": "o",
                        "ő": "o",
                        "Ŕ": "R",
                        "Ŗ": "R",
                        "Ř": "R",
                        "ŕ": "r",
                        "ŗ": "r",
                        "ř": "r",
                        "Ś": "S",
                        "Ŝ": "S",
                        "Ş": "S",
                        "Š": "S",
                        "ś": "s",
                        "ŝ": "s",
                        "ş": "s",
                        "š": "s",
                        "Ţ": "T",
                        "Ť": "T",
                        "Ŧ": "T",
                        "ţ": "t",
                        "ť": "t",
                        "ŧ": "t",
                        "Ũ": "U",
                        "Ū": "U",
                        "Ŭ": "U",
                        "Ů": "U",
                        "Ű": "U",
                        "Ų": "U",
                        "ũ": "u",
                        "ū": "u",
                        "ŭ": "u",
                        "ů": "u",
                        "ű": "u",
                        "ų": "u",
                        "Ŵ": "W",
                        "ŵ": "w",
                        "Ŷ": "Y",
                        "ŷ": "y",
                        "Ÿ": "Y",
                        "Ź": "Z",
                        "Ż": "Z",
                        "Ž": "Z",
                        "ź": "z",
                        "ż": "z",
                        "ž": "z",
                        "Ĳ": "IJ",
                        "ĳ": "ij",
                        "Œ": "Oe",
                        "œ": "oe",
                        "ŉ": "'n",
                        "ſ": "s"
                    },
                    Nn = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#39;"
                    },
                    Dn = {
                        "&amp;": "&",
                        "&lt;": "<",
                        "&gt;": ">",
                        "&quot;": '"',
                        "&#39;": "'"
                    },
                    In = {
                        "\\": "\\",
                        "'": "'",
                        "\n": "n",
                        "\r": "r",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    },
                    On = parseFloat,
                    Un = parseInt,
                    xn = "object" == typeof e && e && e.Object === Object && e,
                    Tn = "object" == typeof self && self && self.Object === Object && self,
                    Ln = xn || Tn || Function("return this")(),
                    Fn = "object" == typeof t && t && !t.nodeType && t,
                    jn = Fn && "object" == typeof a && a && !a.nodeType && a,
                    Bn = jn && jn.exports === Fn,
                    Mn = Bn && xn.process,
                    An = function() {
                        try {
                            return Mn && Mn.binding && Mn.binding("util")
                        } catch (e) {}
                    }(),
                    Rn = An && An.isArrayBuffer,
                    Pn = An && An.isDate,
                    Hn = An && An.isMap,
                    Vn = An && An.isRegExp,
                    Wn = An && An.isSet,
                    qn = An && An.isTypedArray,
                    zn = I("length"),
                    Gn = O(wn),
                    $n = O(Nn),
                    Jn = O(Dn),
                    Kn = function e(t) {
                        function n(e) {
                            if (rl(e) && !gp(e) && !(e instanceof y)) {
                                if (e instanceof i) return e;
                                if (gu.call(e, "__wrapped__")) return ts(e)
                            }
                            return new i(e)
                        }

                        function a() {}

                        function i(e, t) {
                            this.__wrapped__ = e, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = ie
                        }

                        function y(e) {
                            this.__wrapped__ = e, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Be, this.__views__ = []
                        }

                        function O() {
                            var e = new y(this.__wrapped__);
                            return e.__actions__ = Mi(this.__actions__), e.__dir__ = this.__dir__, e.__filtered__ = this.__filtered__, e.__iteratees__ = Mi(this.__iteratees__), e.__takeCount__ = this.__takeCount__, e.__views__ = Mi(this.__views__), e
                        }

                        function Y() {
                            if (this.__filtered__) {
                                var e = new y(this);
                                e.__dir__ = -1, e.__filtered__ = !0
                            } else e = this.clone(), e.__dir__ *= -1;
                            return e
                        }

                        function te() {
                            var e = this.__wrapped__.value(),
                                t = this.__dir__,
                                n = gp(e),
                                a = t < 0,
                                i = n ? e.length : 0,
                                r = Nr(0, i, this.__views__),
                                s = r.start,
                                o = r.end,
                                l = o - s,
                                c = a ? o : s - 1,
                                u = this.__iteratees__,
                                d = u.length,
                                p = 0,
                                m = Gu(l, this.__takeCount__);
                            if (!n || !a && i == l && m == l) return bi(e, this.__actions__);
                            var h = [];
                            e: for (; l-- && p < m;) {
                                c += t;
                                for (var f = -1, g = e[c]; ++f < d;) {
                                    var v = u[f],
                                        b = v.iteratee,
                                        k = v.type,
                                        y = b(g);
                                    if (k == xe) g = y;
                                    else if (!y) {
                                        if (k == Ue) continue e;
                                        break e
                                    }
                                }
                                h[p++] = g
                            }
                            return h
                        }

                        function ne(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var a = e[t];
                                this.set(a[0], a[1])
                            }
                        }

                        function Pt() {
                            this.__data__ = nd ? nd(null) : {}, this.size = 0
                        }

                        function Xt(e) {
                            var t = this.has(e) && delete this.__data__[e];
                            return this.size -= t ? 1 : 0, t
                        }

                        function Zt(e) {
                            var t = this.__data__;
                            if (nd) {
                                var n = t[e];
                                return n === le ? ie : n
                            }
                            return gu.call(t, e) ? t[e] : ie
                        }

                        function en(e) {
                            var t = this.__data__;
                            return nd ? t[e] !== ie : gu.call(t, e)
                        }

                        function tn(e, t) {
                            var n = this.__data__;
                            return this.size += this.has(e) ? 0 : 1, n[e] = nd && t === ie ? le : t, this
                        }

                        function nn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var a = e[t];
                                this.set(a[0], a[1])
                            }
                        }

                        function an() {
                            this.__data__ = [], this.size = 0
                        }

                        function rn(e) {
                            var t = this.__data__,
                                n = Qn(t, e);
                            return !(n < 0) && (n == t.length - 1 ? t.pop() : Uu.call(t, n, 1), --this.size, !0)
                        }

                        function sn(e) {
                            var t = this.__data__,
                                n = Qn(t, e);
                            return n < 0 ? ie : t[n][1]
                        }

                        function on(e) {
                            return Qn(this.__data__, e) > -1
                        }

                        function ln(e, t) {
                            var n = this.__data__,
                                a = Qn(n, e);
                            return a < 0 ? (++this.size, n.push([e, t])) : n[a][1] = t, this
                        }

                        function cn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.clear(); ++t < n;) {
                                var a = e[t];
                                this.set(a[0], a[1])
                            }
                        }

                        function un() {
                            this.size = 0, this.__data__ = {
                                hash: new ne,
                                map: new(Xu || nn),
                                string: new ne
                            }
                        }

                        function dn(e) {
                            var t = Cr(this, e).delete(e);
                            return this.size -= t ? 1 : 0, t
                        }

                        function pn(e) {
                            return Cr(this, e).get(e)
                        }

                        function mn(e) {
                            return Cr(this, e).has(e)
                        }

                        function hn(e, t) {
                            var n = Cr(this, e),
                                a = n.size;
                            return n.set(e, t), this.size += n.size == a ? 0 : 1, this
                        }

                        function vn(e) {
                            var t = -1,
                                n = null == e ? 0 : e.length;
                            for (this.__data__ = new cn; ++t < n;) this.add(e[t])
                        }

                        function bn(e) {
                            return this.__data__.set(e, le), this
                        }

                        function kn(e) {
                            return this.__data__.has(e)
                        }

                        function yn(e) {
                            var t = this.__data__ = new nn(e);
                            this.size = t.size
                        }

                        function wn() {
                            this.__data__ = new nn, this.size = 0
                        }

                        function Nn(e) {
                            var t = this.__data__,
                                n = t.delete(e);
                            return this.size = t.size, n
                        }

                        function Dn(e) {
                            return this.__data__.get(e)
                        }

                        function In(e) {
                            return this.__data__.has(e)
                        }

                        function xn(e, t) {
                            var n = this.__data__;
                            if (n instanceof nn) {
                                var a = n.__data__;
                                if (!Xu || a.length < re - 1) return a.push([e, t]), this.size = ++n.size, this;
                                n = this.__data__ = new cn(a)
                            }
                            return n.set(e, t), this.size = n.size, this
                        }

                        function Tn(e, t) {
                            var n = gp(e),
                                a = !n && fp(e),
                                i = !n && !a && bp(e),
                                r = !n && !a && !i && Sp(e),
                                s = n || a || i || r,
                                o = s ? L(e.length, cu) : [],
                                l = o.length;
                            for (var c in e) !t && !gu.call(e, c) || s && ("length" == c || i && ("offset" == c || "parent" == c) || r && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || Fr(c, l)) || o.push(c);
                            return o
                        }

                        function Fn(e) {
                            var t = e.length;
                            return t ? e[Za(0, t - 1)] : ie
                        }

                        function jn(e, t) {
                            return Yr(Mi(e), na(t, 0, e.length))
                        }

                        function Mn(e) {
                            return Yr(Mi(e))
                        }

                        function An(e, t, n) {
                            (n === ie || zo(e[t], n)) && (n !== ie || t in e) || ea(e, t, n)
                        }

                        function zn(e, t, n) {
                            var a = e[t];
                            gu.call(e, t) && zo(a, n) && (n !== ie || t in e) || ea(e, t, n)
                        }

                        function Qn(e, t) {
                            for (var n = e.length; n--;)
                                if (zo(e[n][0], t)) return n;
                            return -1
                        }

                        function Yn(e, t, n, a) {
                            return hd(e, function(e, i, r) {
                                t(a, e, n(e), r)
                            }), a
                        }

                        function Xn(e, t) {
                            return e && Ai(t, Pl(t), e)
                        }

                        function Zn(e, t) {
                            return e && Ai(t, Hl(t), e)
                        }

                        function ea(e, t, n) {
                            "__proto__" == t && Fu ? Fu(e, t, {
                                configurable: !0,
                                enumerable: !0,
                                value: n,
                                writable: !0
                            }) : e[t] = n
                        }

                        function ta(e, t) {
                            for (var n = -1, a = t.length, i = nu(a), r = null == e; ++n < a;) i[n] = r ? ie : Ml(e, t[n]);
                            return i
                        }

                        function na(e, t, n) {
                            return e === e && (n !== ie && (e = e <= n ? e : n), t !== ie && (e = e >= t ? e : t)), e
                        }

                        function aa(e, t, n, a, i, r) {
                            var s, o = t & de,
                                l = t & pe,
                                u = t & me;
                            if (n && (s = i ? n(e, a, i, r) : n(e)), s !== ie) return s;
                            if (!il(e)) return e;
                            var d = gp(e);
                            if (d) {
                                if (s = Or(e), !o) return Mi(e, s)
                            } else {
                                var p = Nd(e),
                                    m = p == $e || p == Je;
                                if (bp(e)) return wi(e, o);
                                if (p == Xe || p == Pe || m && !i) {
                                    if (s = l || m ? {} : Ur(e), !o) return l ? Pi(e, Zn(s, e)) : Ri(e, Xn(s, e))
                                } else {
                                    if (!En[p]) return i ? e : {};
                                    s = xr(e, p, aa, o)
                                }
                            }
                            r || (r = new yn);
                            var h = r.get(e);
                            if (h) return h;
                            r.set(e, s);
                            var f = u ? l ? br : vr : l ? Hl : Pl,
                                g = d ? ie : f(e);
                            return c(g || e, function(a, i) {
                                g && (i = a, a = e[i]), zn(s, i, aa(a, t, n, i, e, r))
                            }), s
                        }

                        function ia(e) {
                            var t = Pl(e);
                            return function(n) {
                                return ra(n, e, t)
                            }
                        }

                        function ra(e, t, n) {
                            var a = n.length;
                            if (null == e) return !a;
                            for (e = ou(e); a--;) {
                                var i = n[a],
                                    r = t[i],
                                    s = e[i];
                                if (s === ie && !(i in e) || !r(s)) return !1
                            }
                            return !0
                        }

                        function sa(e, t, n) {
                            if ("function" != typeof e) throw new uu(oe);
                            return Od(function() {
                                e.apply(ie, n)
                            }, t)
                        }

                        function oa(e, t, n, a) {
                            var i = -1,
                                r = m,
                                s = !0,
                                o = e.length,
                                l = [],
                                c = t.length;
                            if (!o) return l;
                            n && (t = f(t, j(n))), a ? (r = h, s = !1) : t.length >= re && (r = M, s = !1, t = new vn(t));
                            e: for (; ++i < o;) {
                                var u = e[i],
                                    d = null == n ? u : n(u);
                                if (u = a || 0 !== u ? u : 0, s && d === d) {
                                    for (var p = c; p--;)
                                        if (t[p] === d) continue e;
                                    l.push(u)
                                } else r(t, d, a) || l.push(u)
                            }
                            return l
                        }

                        function la(e, t) {
                            var n = !0;
                            return hd(e, function(e, a, i) {
                                return n = !!t(e, a, i)
                            }), n
                        }

                        function ca(e, t, n) {
                            for (var a = -1, i = e.length; ++a < i;) {
                                var r = e[a],
                                    s = t(r);
                                if (null != s && (o === ie ? s === s && !gl(s) : n(s, o))) var o = s,
                                    l = r
                            }
                            return l
                        }

                        function ua(e, t, n, a) {
                            var i = e.length;
                            for (n = Cl(n), n < 0 && (n = -n > i ? 0 : i + n), a = a === ie || a > i ? i : Cl(a), a < 0 && (a += i), a = n > a ? 0 : Sl(a); n < a;) e[n++] = t;
                            return e
                        }

                        function da(e, t) {
                            var n = [];
                            return hd(e, function(e, a, i) {
                                t(e, a, i) && n.push(e)
                            }), n
                        }

                        function pa(e, t, n, a, i) {
                            var r = -1,
                                s = e.length;
                            for (n || (n = Lr), i || (i = []); ++r < s;) {
                                var o = e[r];
                                t > 0 && n(o) ? t > 1 ? pa(o, t - 1, n, a, i) : g(i, o) : a || (i[i.length] = o)
                            }
                            return i
                        }

                        function ma(e, t) {
                            return e && gd(e, t, Pl)
                        }

                        function ha(e, t) {
                            return e && vd(e, t, Pl)
                        }

                        function fa(e, t) {
                            return p(t, function(t) {
                                return tl(e[t])
                            })
                        }

                        function ga(e, t) {
                            t = Si(t, e);
                            for (var n = 0, a = t.length; null != e && n < a;) e = e[Xr(t[n++])];
                            return n && n == a ? e : ie
                        }

                        function va(e, t, n) {
                            var a = t(e);
                            return gp(e) ? a : g(a, n(e))
                        }

                        function ba(e) {
                            return null == e ? e === ie ? it : Ye : Lu && Lu in ou(e) ? wr(e) : zr(e)
                        }

                        function ka(e, t) {
                            return e > t
                        }

                        function ya(e, t) {
                            return null != e && gu.call(e, t)
                        }

                        function _a(e, t) {
                            return null != e && t in ou(e)
                        }

                        function Ca(e, t, n) {
                            return e >= Gu(t, n) && e < zu(t, n)
                        }

                        function Sa(e, t, n) {
                            for (var a = n ? h : m, i = e[0].length, r = e.length, s = r, o = nu(r), l = 1 / 0, c = []; s--;) {
                                var u = e[s];
                                s && t && (u = f(u, j(t))), l = Gu(u.length, l), o[s] = !n && (t || i >= 120 && u.length >= 120) ? new vn(s && u) : ie
                            }
                            u = e[0];
                            var d = -1,
                                p = o[0];
                            e: for (; ++d < i && c.length < l;) {
                                var g = u[d],
                                    v = t ? t(g) : g;
                                if (g = n || 0 !== g ? g : 0, !(p ? M(p, v) : a(c, v, n))) {
                                    for (s = r; --s;) {
                                        var b = o[s];
                                        if (!(b ? M(b, v) : a(e[s], v, n))) continue e
                                    }
                                    p && p.push(v), c.push(g)
                                }
                            }
                            return c
                        }

                        function Ea(e, t, n, a) {
                            return ma(e, function(e, i, r) {
                                t(a, n(e), i, r)
                            }), a
                        }

                        function wa(e, t, n) {
                            t = Si(t, e), e = $r(e, t);
                            var a = null == e ? e : e[Xr(ys(t))];
                            return null == a ? ie : o(a, e, n)
                        }

                        function Na(e) {
                            return rl(e) && ba(e) == Pe
                        }

                        function Da(e) {
                            return rl(e) && ba(e) == ot
                        }

                        function Ia(e) {
                            return rl(e) && ba(e) == qe
                        }

                        function Oa(e, t, n, a, i) {
                            return e === t || (null == e || null == t || !rl(e) && !rl(t) ? e !== e && t !== t : Ua(e, t, n, a, Oa, i))
                        }

                        function Ua(e, t, n, a, i, r) {
                            var s = gp(e),
                                o = gp(t),
                                l = s ? He : Nd(e),
                                c = o ? He : Nd(t);
                            l = l == Pe ? Xe : l, c = c == Pe ? Xe : c;
                            var u = l == Xe,
                                d = c == Xe,
                                p = l == c;
                            if (p && bp(e)) {
                                if (!bp(t)) return !1;
                                s = !0, u = !1
                            }
                            if (p && !u) return r || (r = new yn), s || Sp(e) ? mr(e, t, n, a, i, r) : hr(e, t, l, n, a, i, r);
                            if (!(n & he)) {
                                var m = u && gu.call(e, "__wrapped__"),
                                    h = d && gu.call(t, "__wrapped__");
                                if (m || h) {
                                    var f = m ? e.value() : e,
                                        g = h ? t.value() : t;
                                    return r || (r = new yn), i(f, g, n, a, r)
                                }
                            }
                            return !!p && (r || (r = new yn), fr(e, t, n, a, i, r))
                        }

                        function xa(e) {
                            return rl(e) && Nd(e) == Ke
                        }

                        function Ta(e, t, n, a) {
                            var i = n.length,
                                r = i,
                                s = !a;
                            if (null == e) return !r;
                            for (e = ou(e); i--;) {
                                var o = n[i];
                                if (s && o[2] ? o[1] !== e[o[0]] : !(o[0] in e)) return !1
                            }
                            for (; ++i < r;) {
                                o = n[i];
                                var l = o[0],
                                    c = e[l],
                                    u = o[1];
                                if (s && o[2]) {
                                    if (c === ie && !(l in e)) return !1
                                } else {
                                    var d = new yn;
                                    if (a) var p = a(c, u, l, e, t, d);
                                    if (!(p === ie ? Oa(u, c, he | fe, a, d) : p)) return !1
                                }
                            }
                            return !0
                        }

                        function La(e) {
                            return !(!il(e) || Rr(e)) && (tl(e) ? Cu : Gt).test(Zr(e))
                        }

                        function Fa(e) {
                            return rl(e) && ba(e) == et
                        }

                        function ja(e) {
                            return rl(e) && Nd(e) == tt
                        }

                        function Ba(e) {
                            return rl(e) && al(e.length) && !!Sn[ba(e)]
                        }

                        function Ma(e) {
                            return "function" == typeof e ? e : null == e ? Uc : "object" == typeof e ? gp(e) ? Wa(e[0], e[1]) : Va(e) : Ac(e)
                        }

                        function Aa(e) {
                            if (!Pr(e)) return qu(e);
                            var t = [];
                            for (var n in ou(e)) gu.call(e, n) && "constructor" != n && t.push(n);
                            return t
                        }

                        function Ra(e) {
                            if (!il(e)) return qr(e);
                            var t = Pr(e),
                                n = [];
                            for (var a in e)("constructor" != a || !t && gu.call(e, a)) && n.push(a);
                            return n
                        }

                        function Pa(e, t) {
                            return e < t
                        }

                        function Ha(e, t) {
                            var n = -1,
                                a = Go(e) ? nu(e.length) : [];
                            return hd(e, function(e, i, r) {
                                a[++n] = t(e, i, r)
                            }), a
                        }

                        function Va(e) {
                            var t = Sr(e);
                            return 1 == t.length && t[0][2] ? Vr(t[0][0], t[0][1]) : function(n) {
                                return n === e || Ta(n, e, t)
                            }
                        }

                        function Wa(e, t) {
                            return Br(e) && Hr(t) ? Vr(Xr(e), t) : function(n) {
                                var a = Ml(n, e);
                                return a === ie && a === t ? Rl(n, e) : Oa(t, a, he | fe)
                            }
                        }

                        function qa(e, t, n, a, i) {
                            e !== t && gd(t, function(r, s) {
                                if (il(r)) i || (i = new yn), za(e, t, s, n, qa, a, i);
                                else {
                                    var o = a ? a(e[s], r, s + "", e, t, i) : ie;
                                    o === ie && (o = r), An(e, s, o)
                                }
                            }, Hl)
                        }

                        function za(e, t, n, a, i, r, s) {
                            var o = e[n],
                                l = t[n],
                                c = s.get(l);
                            if (c) return void An(e, n, c);
                            var u = r ? r(o, l, n + "", e, t, s) : ie,
                                d = u === ie;
                            if (d) {
                                var p = gp(l),
                                    m = !p && bp(l),
                                    h = !p && !m && Sp(l);
                                u = l, p || m || h ? gp(o) ? u = o : $o(o) ? u = Mi(o) : m ? (d = !1, u = wi(l, !0)) : h ? (d = !1, u = Ti(l, !0)) : u = [] : ml(l) || fp(l) ? (u = o, fp(o) ? u = wl(o) : (!il(o) || a && tl(o)) && (u = Ur(l))) : d = !1
                            }
                            d && (s.set(l, u), i(u, l, a, r, s), s.delete(l)), An(e, n, u)
                        }

                        function Ga(e, t) {
                            var n = e.length;
                            if (n) return t += t < 0 ? n : 0, Fr(t, n) ? e[t] : ie
                        }

                        function $a(e, t, n) {
                            var a = -1;
                            return t = f(t.length ? t : [Uc], j(_r())), x(Ha(e, function(e, n, i) {
                                return {
                                    criteria: f(t, function(t) {
                                        return t(e)
                                    }),
                                    index: ++a,
                                    value: e
                                }
                            }), function(e, t) {
                                return Fi(e, t, n)
                            })
                        }

                        function Ja(e, t) {
                            return Ka(e, t, function(t, n) {
                                return Rl(e, n)
                            })
                        }

                        function Ka(e, t, n) {
                            for (var a = -1, i = t.length, r = {}; ++a < i;) {
                                var s = t[a],
                                    o = ga(e, s);
                                n(o, s) && ri(r, Si(s, e), o)
                            }
                            return r
                        }

                        function Qa(e) {
                            return function(t) {
                                return ga(t, e)
                            }
                        }

                        function Ya(e, t, n, a) {
                            var i = a ? w : E,
                                r = -1,
                                s = t.length,
                                o = e;
                            for (e === t && (t = Mi(t)), n && (o = f(e, j(n))); ++r < s;)
                                for (var l = 0, c = t[r], u = n ? n(c) : c;
                                    (l = i(o, u, l, a)) > -1;) o !== e && Uu.call(o, l, 1), Uu.call(e, l, 1);
                            return e
                        }

                        function Xa(e, t) {
                            for (var n = e ? t.length : 0, a = n - 1; n--;) {
                                var i = t[n];
                                if (n == a || i !== r) {
                                    var r = i;
                                    Fr(i) ? Uu.call(e, i, 1) : fi(e, i)
                                }
                            }
                            return e
                        }

                        function Za(e, t) {
                            return e + Ru(Ku() * (t - e + 1))
                        }

                        function ei(e, t, n, a) {
                            for (var i = -1, r = zu(Au((t - e) / (n || 1)), 0), s = nu(r); r--;) s[a ? r : ++i] = e, e += n;
                            return s
                        }

                        function ti(e, t) {
                            var n = "";
                            if (!e || t < 1 || t > Le) return n;
                            do {
                                t % 2 && (n += e), (t = Ru(t / 2)) && (e += e)
                            } while (t);
                            return n
                        }

                        function ni(e, t) {
                            return Ud(Gr(e, t, Uc), e + "")
                        }

                        function ai(e) {
                            return Fn(Zl(e))
                        }

                        function ii(e, t) {
                            var n = Zl(e);
                            return Yr(n, na(t, 0, n.length))
                        }

                        function ri(e, t, n, a) {
                            if (!il(e)) return e;
                            t = Si(t, e);
                            for (var i = -1, r = t.length, s = r - 1, o = e; null != o && ++i < r;) {
                                var l = Xr(t[i]),
                                    c = n;
                                if (i != s) {
                                    var u = o[l];
                                    c = a ? a(u, l, o) : ie, c === ie && (c = il(u) ? u : Fr(t[i + 1]) ? [] : {})
                                }
                                zn(o, l, c), o = o[l]
                            }
                            return e
                        }

                        function si(e) {
                            return Yr(Zl(e))
                        }

                        function oi(e, t, n) {
                            var a = -1,
                                i = e.length;
                            t < 0 && (t = -t > i ? 0 : i + t), n = n > i ? i : n, n < 0 && (n += i), i = t > n ? 0 : n - t >>> 0, t >>>= 0;
                            for (var r = nu(i); ++a < i;) r[a] = e[a + t];
                            return r
                        }

                        function li(e, t) {
                            var n;
                            return hd(e, function(e, a, i) {
                                return !(n = t(e, a, i))
                            }), !!n
                        }

                        function ci(e, t, n) {
                            var a = 0,
                                i = null == e ? a : e.length;
                            if ("number" == typeof t && t === t && i <= Ae) {
                                for (; a < i;) {
                                    var r = a + i >>> 1,
                                        s = e[r];
                                    null !== s && !gl(s) && (n ? s <= t : s < t) ? a = r + 1 : i = r
                                }
                                return i
                            }
                            return ui(e, t, Uc, n)
                        }

                        function ui(e, t, n, a) {
                            t = n(t);
                            for (var i = 0, r = null == e ? 0 : e.length, s = t !== t, o = null === t, l = gl(t), c = t === ie; i < r;) {
                                var u = Ru((i + r) / 2),
                                    d = n(e[u]),
                                    p = d !== ie,
                                    m = null === d,
                                    h = d === d,
                                    f = gl(d);
                                if (s) var g = a || h;
                                else g = c ? h && (a || p) : o ? h && p && (a || !m) : l ? h && p && !m && (a || !f) : !m && !f && (a ? d <= t : d < t);
                                g ? i = u + 1 : r = u
                            }
                            return Gu(r, Me)
                        }

                        function di(e, t) {
                            for (var n = -1, a = e.length, i = 0, r = []; ++n < a;) {
                                var s = e[n],
                                    o = t ? t(s) : s;
                                if (!n || !zo(o, l)) {
                                    var l = o;
                                    r[i++] = 0 === s ? 0 : s
                                }
                            }
                            return r
                        }

                        function pi(e) {
                            return "number" == typeof e ? e : gl(e) ? je : +e
                        }

                        function mi(e) {
                            if ("string" == typeof e) return e;
                            if (gp(e)) return f(e, mi) + "";
                            if (gl(e)) return pd ? pd.call(e) : "";
                            var t = e + "";
                            return "0" == t && 1 / e == -Te ? "-0" : t
                        }

                        function hi(e, t, n) {
                            var a = -1,
                                i = m,
                                r = e.length,
                                s = !0,
                                o = [],
                                l = o;
                            if (n) s = !1, i = h;
                            else if (r >= re) {
                                var c = t ? null : Cd(e);
                                if (c) return K(c);
                                s = !1, i = M, l = new vn
                            } else l = t ? [] : o;
                            e: for (; ++a < r;) {
                                var u = e[a],
                                    d = t ? t(u) : u;
                                if (u = n || 0 !== u ? u : 0, s && d === d) {
                                    for (var p = l.length; p--;)
                                        if (l[p] === d) continue e;
                                    t && l.push(d), o.push(u)
                                } else i(l, d, n) || (l !== o && l.push(d), o.push(u))
                            }
                            return o
                        }

                        function fi(e, t) {
                            return t = Si(t, e), null == (e = $r(e, t)) || delete e[Xr(ys(t))]
                        }

                        function gi(e, t, n, a) {
                            return ri(e, t, n(ga(e, t)), a)
                        }

                        function vi(e, t, n, a) {
                            for (var i = e.length, r = a ? i : -1;
                                (a ? r-- : ++r < i) && t(e[r], r, e););
                            return n ? oi(e, a ? 0 : r, a ? r + 1 : i) : oi(e, a ? r + 1 : 0, a ? i : r)
                        }

                        function bi(e, t) {
                            var n = e;
                            return n instanceof y && (n = n.value()), v(t, function(e, t) {
                                return t.func.apply(t.thisArg, g([e], t.args))
                            }, n)
                        }

                        function ki(e, t, n) {
                            var a = e.length;
                            if (a < 2) return a ? hi(e[0]) : [];
                            for (var i = -1, r = nu(a); ++i < a;)
                                for (var s = e[i], o = -1; ++o < a;) o != i && (r[i] = oa(r[i] || s, e[o], t, n));
                            return hi(pa(r, 1), t, n)
                        }

                        function yi(e, t, n) {
                            for (var a = -1, i = e.length, r = t.length, s = {}; ++a < i;) {
                                var o = a < r ? t[a] : ie;
                                n(s, e[a], o)
                            }
                            return s
                        }

                        function _i(e) {
                            return $o(e) ? e : []
                        }

                        function Ci(e) {
                            return "function" == typeof e ? e : Uc
                        }

                        function Si(e, t) {
                            return gp(e) ? e : Br(e, t) ? [e] : xd(Dl(e))
                        }

                        function Ei(e, t, n) {
                            var a = e.length;
                            return n = n === ie ? a : n, !t && n >= a ? e : oi(e, t, n)
                        }

                        function wi(e, t) {
                            if (t) return e.slice();
                            var n = e.length,
                                a = Nu ? Nu(n) : new e.constructor(n);
                            return e.copy(a), a
                        }

                        function Ni(e) {
                            var t = new e.constructor(e.byteLength);
                            return new wu(t).set(new wu(e)), t
                        }

                        function Di(e, t) {
                            var n = t ? Ni(e.buffer) : e.buffer;
                            return new e.constructor(n, e.byteOffset, e.byteLength)
                        }

                        function Ii(e, t, n) {
                            return v(t ? n(G(e), de) : G(e), r, new e.constructor)
                        }

                        function Oi(e) {
                            var t = new e.constructor(e.source, Wt.exec(e));
                            return t.lastIndex = e.lastIndex, t
                        }

                        function Ui(e, t, n) {
                            return v(t ? n(K(e), de) : K(e), s, new e.constructor)
                        }

                        function xi(e) {
                            return dd ? ou(dd.call(e)) : {}
                        }

                        function Ti(e, t) {
                            var n = t ? Ni(e.buffer) : e.buffer;
                            return new e.constructor(n, e.byteOffset, e.length)
                        }

                        function Li(e, t) {
                            if (e !== t) {
                                var n = e !== ie,
                                    a = null === e,
                                    i = e === e,
                                    r = gl(e),
                                    s = t !== ie,
                                    o = null === t,
                                    l = t === t,
                                    c = gl(t);
                                if (!o && !c && !r && e > t || r && s && l && !o && !c || a && s && l || !n && l || !i) return 1;
                                if (!a && !r && !c && e < t || c && n && i && !a && !r || o && n && i || !s && i || !l) return -1
                            }
                            return 0
                        }

                        function Fi(e, t, n) {
                            for (var a = -1, i = e.criteria, r = t.criteria, s = i.length, o = n.length; ++a < s;) {
                                var l = Li(i[a], r[a]);
                                if (l) {
                                    if (a >= o) return l;
                                    return l * ("desc" == n[a] ? -1 : 1)
                                }
                            }
                            return e.index - t.index
                        }

                        function ji(e, t, n, a) {
                            for (var i = -1, r = e.length, s = n.length, o = -1, l = t.length, c = zu(r - s, 0), u = nu(l + c), d = !a; ++o < l;) u[o] = t[o];
                            for (; ++i < s;)(d || i < r) && (u[n[i]] = e[i]);
                            for (; c--;) u[o++] = e[i++];
                            return u
                        }

                        function Bi(e, t, n, a) {
                            for (var i = -1, r = e.length, s = -1, o = n.length, l = -1, c = t.length, u = zu(r - o, 0), d = nu(u + c), p = !a; ++i < u;) d[i] = e[i];
                            for (var m = i; ++l < c;) d[m + l] = t[l];
                            for (; ++s < o;)(p || i < r) && (d[m + n[s]] = e[i++]);
                            return d
                        }

                        function Mi(e, t) {
                            var n = -1,
                                a = e.length;
                            for (t || (t = nu(a)); ++n < a;) t[n] = e[n];
                            return t
                        }

                        function Ai(e, t, n, a) {
                            var i = !n;
                            n || (n = {});
                            for (var r = -1, s = t.length; ++r < s;) {
                                var o = t[r],
                                    l = a ? a(n[o], e[o], o, n, e) : ie;
                                l === ie && (l = e[o]), i ? ea(n, o, l) : zn(n, o, l)
                            }
                            return n
                        }

                        function Ri(e, t) {
                            return Ai(e, Ed(e), t)
                        }

                        function Pi(e, t) {
                            return Ai(e, wd(e), t)
                        }

                        function Hi(e, t) {
                            return function(n, a) {
                                var i = gp(n) ? l : Yn,
                                    r = t ? t() : {};
                                return i(n, e, _r(a, 2), r)
                            }
                        }

                        function Vi(e) {
                            return ni(function(t, n) {
                                var a = -1,
                                    i = n.length,
                                    r = i > 1 ? n[i - 1] : ie,
                                    s = i > 2 ? n[2] : ie;
                                for (r = e.length > 3 && "function" == typeof r ? (i--, r) : ie, s && jr(n[0], n[1], s) && (r = i < 3 ? ie : r, i = 1), t = ou(t); ++a < i;) {
                                    var o = n[a];
                                    o && e(t, o, a, r)
                                }
                                return t
                            })
                        }

                        function Wi(e, t) {
                            return function(n, a) {
                                if (null == n) return n;
                                if (!Go(n)) return e(n, a);
                                for (var i = n.length, r = t ? i : -1, s = ou(n);
                                    (t ? r-- : ++r < i) && !1 !== a(s[r], r, s););
                                return n
                            }
                        }

                        function qi(e) {
                            return function(t, n, a) {
                                for (var i = -1, r = ou(t), s = a(t), o = s.length; o--;) {
                                    var l = s[e ? o : ++i];
                                    if (!1 === n(r[l], l, r)) break
                                }
                                return t
                            }
                        }

                        function zi(e, t, n) {
                            function a() {
                                return (this && this !== Ln && this instanceof a ? r : e).apply(i ? n : this, arguments)
                            }
                            var i = t & ge,
                                r = Ji(e);
                            return a
                        }

                        function Gi(e) {
                            return function(t) {
                                t = Dl(t);
                                var n = W(t) ? ee(t) : ie,
                                    a = n ? n[0] : t.charAt(0),
                                    i = n ? Ei(n, 1).join("") : t.slice(1);
                                return a[e]() + i
                            }
                        }

                        function $i(e) {
                            return function(t) {
                                return v(wc(rc(t).replace(fn, "")), e, "")
                            }
                        }

                        function Ji(e) {
                            return function() {
                                var t = arguments;
                                switch (t.length) {
                                    case 0:
                                        return new e;
                                    case 1:
                                        return new e(t[0]);
                                    case 2:
                                        return new e(t[0], t[1]);
                                    case 3:
                                        return new e(t[0], t[1], t[2]);
                                    case 4:
                                        return new e(t[0], t[1], t[2], t[3]);
                                    case 5:
                                        return new e(t[0], t[1], t[2], t[3], t[4]);
                                    case 6:
                                        return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
                                    case 7:
                                        return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                                }
                                var n = md(e.prototype),
                                    a = e.apply(n, t);
                                return il(a) ? a : n
                            }
                        }

                        function Ki(e, t, n) {
                            function a() {
                                for (var r = arguments.length, s = nu(r), l = r, c = yr(a); l--;) s[l] = arguments[l];
                                var u = r < 3 && s[0] !== c && s[r - 1] !== c ? [] : J(s, c);
                                return (r -= u.length) < n ? sr(e, t, Xi, a.placeholder, ie, s, u, ie, ie, n - r) : o(this && this !== Ln && this instanceof a ? i : e, this, s)
                            }
                            var i = Ji(e);
                            return a
                        }

                        function Qi(e) {
                            return function(t, n, a) {
                                var i = ou(t);
                                if (!Go(t)) {
                                    var r = _r(n, 3);
                                    t = Pl(t), n = function(e) {
                                        return r(i[e], e, i)
                                    }
                                }
                                var s = e(t, n, a);
                                return s > -1 ? i[r ? t[s] : s] : ie
                            }
                        }

                        function Yi(e) {
                            return gr(function(t) {
                                var n = t.length,
                                    a = n,
                                    r = i.prototype.thru;
                                for (e && t.reverse(); a--;) {
                                    var s = t[a];
                                    if ("function" != typeof s) throw new uu(oe);
                                    if (r && !o && "wrapper" == kr(s)) var o = new i([], !0)
                                }
                                for (a = o ? a : n; ++a < n;) {
                                    s = t[a];
                                    var l = kr(s),
                                        c = "wrapper" == l ? Sd(s) : ie;
                                    o = c && Ar(c[0]) && c[1] == (Se | ke | _e | Ee) && !c[4].length && 1 == c[9] ? o[kr(c[0])].apply(o, c[3]) : 1 == s.length && Ar(s) ? o[l]() : o.thru(s)
                                }
                                return function() {
                                    var e = arguments,
                                        a = e[0];
                                    if (o && 1 == e.length && gp(a)) return o.plant(a).value();
                                    for (var i = 0, r = n ? t[i].apply(this, e) : a; ++i < n;) r = t[i].call(this, r);
                                    return r
                                }
                            })
                        }

                        function Xi(e, t, n, a, i, r, s, o, l, c) {
                            function u() {
                                for (var v = arguments.length, b = nu(v), k = v; k--;) b[k] = arguments[k];
                                if (h) var y = yr(u),
                                    _ = P(b, y);
                                if (a && (b = ji(b, a, i, h)), r && (b = Bi(b, r, s, h)), v -= _, h && v < c) {
                                    var C = J(b, y);
                                    return sr(e, t, Xi, u.placeholder, n, b, C, o, l, c - v)
                                }
                                var S = p ? n : this,
                                    E = m ? S[e] : e;
                                return v = b.length, o ? b = Jr(b, o) : f && v > 1 && b.reverse(), d && l < v && (b.length = l), this && this !== Ln && this instanceof u && (E = g || Ji(E)), E.apply(S, b)
                            }
                            var d = t & Se,
                                p = t & ge,
                                m = t & ve,
                                h = t & (ke | ye),
                                f = t & we,
                                g = m ? ie : Ji(e);
                            return u
                        }

                        function Zi(e, t) {
                            return function(n, a) {
                                return Ea(n, e, t(a), {})
                            }
                        }

                        function er(e, t) {
                            return function(n, a) {
                                var i;
                                if (n === ie && a === ie) return t;
                                if (n !== ie && (i = n), a !== ie) {
                                    if (i === ie) return a;
                                    "string" == typeof n || "string" == typeof a ? (n = mi(n), a = mi(a)) : (n = pi(n), a = pi(a)), i = e(n, a)
                                }
                                return i
                            }
                        }

                        function tr(e) {
                            return gr(function(t) {
                                return t = f(t, j(_r())), ni(function(n) {
                                    var a = this;
                                    return e(t, function(e) {
                                        return o(e, a, n)
                                    })
                                })
                            })
                        }

                        function nr(e, t) {
                            t = t === ie ? " " : mi(t);
                            var n = t.length;
                            if (n < 2) return n ? ti(t, e) : t;
                            var a = ti(t, Au(e / Z(t)));
                            return W(t) ? Ei(ee(a), 0, e).join("") : a.slice(0, e)
                        }

                        function ar(e, t, n, a) {
                            function i() {
                                for (var t = -1, l = arguments.length, c = -1, u = a.length, d = nu(u + l), p = this && this !== Ln && this instanceof i ? s : e; ++c < u;) d[c] = a[c];
                                for (; l--;) d[c++] = arguments[++t];
                                return o(p, r ? n : this, d)
                            }
                            var r = t & ge,
                                s = Ji(e);
                            return i
                        }

                        function ir(e) {
                            return function(t, n, a) {
                                return a && "number" != typeof a && jr(t, n, a) && (n = a = ie), t = _l(t), n === ie ? (n = t, t = 0) : n = _l(n), a = a === ie ? t < n ? 1 : -1 : _l(a), ei(t, n, a, e)
                            }
                        }

                        function rr(e) {
                            return function(t, n) {
                                return "string" == typeof t && "string" == typeof n || (t = El(t), n = El(n)), e(t, n)
                            }
                        }

                        function sr(e, t, n, a, i, r, s, o, l, c) {
                            var u = t & ke,
                                d = u ? s : ie,
                                p = u ? ie : s,
                                m = u ? r : ie,
                                h = u ? ie : r;
                            t |= u ? _e : Ce, (t &= ~(u ? Ce : _e)) & be || (t &= ~(ge | ve));
                            var f = [e, t, i, m, d, h, p, o, l, c],
                                g = n.apply(ie, f);
                            return Ar(e) && Id(g, f), g.placeholder = a, Kr(g, e, t)
                        }

                        function or(e) {
                            var t = su[e];
                            return function(e, n) {
                                if (e = El(e), n = null == n ? 0 : Gu(Cl(n), 292)) {
                                    var a = (Dl(e) + "e").split("e");
                                    return a = (Dl(t(a[0] + "e" + (+a[1] + n))) + "e").split("e"), +(a[0] + "e" + (+a[1] - n))
                                }
                                return t(e)
                            }
                        }

                        function lr(e) {
                            return function(t) {
                                var n = Nd(t);
                                return n == Ke ? G(t) : n == tt ? Q(t) : F(t, e(t))
                            }
                        }

                        function cr(e, t, n, a, i, r, s, o) {
                            var l = t & ve;
                            if (!l && "function" != typeof e) throw new uu(oe);
                            var c = a ? a.length : 0;
                            if (c || (t &= ~(_e | Ce), a = i = ie), s = s === ie ? s : zu(Cl(s), 0), o = o === ie ? o : Cl(o), c -= i ? i.length : 0, t & Ce) {
                                var u = a,
                                    d = i;
                                a = i = ie
                            }
                            var p = l ? ie : Sd(e),
                                m = [e, t, n, a, i, u, d, r, s, o];
                            if (p && Wr(m, p), e = m[0], t = m[1], n = m[2], a = m[3], i = m[4], o = m[9] = m[9] === ie ? l ? 0 : e.length : zu(m[9] - c, 0), !o && t & (ke | ye) && (t &= ~(ke | ye)), t && t != ge) h = t == ke || t == ye ? Ki(e, t, o) : t != _e && t != (ge | _e) || i.length ? Xi.apply(ie, m) : ar(e, t, n, a);
                            else var h = zi(e, t, n);
                            return Kr((p ? bd : Id)(h, m), e, t)
                        }

                        function ur(e, t, n, a) {
                            return e === ie || zo(e, mu[n]) && !gu.call(a, n) ? t : e
                        }

                        function dr(e, t, n, a, i, r) {
                            return il(e) && il(t) && (r.set(t, e), qa(e, t, ie, dr, r), r.delete(t)), e
                        }

                        function pr(e) {
                            return ml(e) ? ie : e
                        }

                        function mr(e, t, n, a, i, r) {
                            var s = n & he,
                                o = e.length,
                                l = t.length;
                            if (o != l && !(s && l > o)) return !1;
                            var c = r.get(e);
                            if (c && r.get(t)) return c == t;
                            var u = -1,
                                d = !0,
                                p = n & fe ? new vn : ie;
                            for (r.set(e, t), r.set(t, e); ++u < o;) {
                                var m = e[u],
                                    h = t[u];
                                if (a) var f = s ? a(h, m, u, t, e, r) : a(m, h, u, e, t, r);
                                if (f !== ie) {
                                    if (f) continue;
                                    d = !1;
                                    break
                                }
                                if (p) {
                                    if (!k(t, function(e, t) {
                                            if (!M(p, t) && (m === e || i(m, e, n, a, r))) return p.push(t)
                                        })) {
                                        d = !1;
                                        break
                                    }
                                } else if (m !== h && !i(m, h, n, a, r)) {
                                    d = !1;
                                    break
                                }
                            }
                            return r.delete(e), r.delete(t), d
                        }

                        function hr(e, t, n, a, i, r, s) {
                            switch (n) {
                                case lt:
                                    if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                                    e = e.buffer, t = t.buffer;
                                case ot:
                                    return !(e.byteLength != t.byteLength || !r(new wu(e), new wu(t)));
                                case We:
                                case qe:
                                case Qe:
                                    return zo(+e, +t);
                                case Ge:
                                    return e.name == t.name && e.message == t.message;
                                case et:
                                case nt:
                                    return e == t + "";
                                case Ke:
                                    var o = G;
                                case tt:
                                    var l = a & he;
                                    if (o || (o = K), e.size != t.size && !l) return !1;
                                    var c = s.get(e);
                                    if (c) return c == t;
                                    a |= fe, s.set(e, t);
                                    var u = mr(o(e), o(t), a, i, r, s);
                                    return s.delete(e), u;
                                case at:
                                    if (dd) return dd.call(e) == dd.call(t)
                            }
                            return !1
                        }

                        function fr(e, t, n, a, i, r) {
                            var s = n & he,
                                o = vr(e),
                                l = o.length;
                            if (l != vr(t).length && !s) return !1;
                            for (var c = l; c--;) {
                                var u = o[c];
                                if (!(s ? u in t : gu.call(t, u))) return !1
                            }
                            var d = r.get(e);
                            if (d && r.get(t)) return d == t;
                            var p = !0;
                            r.set(e, t), r.set(t, e);
                            for (var m = s; ++c < l;) {
                                u = o[c];
                                var h = e[u],
                                    f = t[u];
                                if (a) var g = s ? a(f, h, u, t, e, r) : a(h, f, u, e, t, r);
                                if (!(g === ie ? h === f || i(h, f, n, a, r) : g)) {
                                    p = !1;
                                    break
                                }
                                m || (m = "constructor" == u)
                            }
                            if (p && !m) {
                                var v = e.constructor,
                                    b = t.constructor;
                                v != b && "constructor" in e && "constructor" in t && !("function" == typeof v && v instanceof v && "function" == typeof b && b instanceof b) && (p = !1)
                            }
                            return r.delete(e), r.delete(t), p
                        }

                        function gr(e) {
                            return Ud(Gr(e, ie, ps), e + "")
                        }

                        function vr(e) {
                            return va(e, Pl, Ed)
                        }

                        function br(e) {
                            return va(e, Hl, wd)
                        }

                        function kr(e) {
                            for (var t = e.name + "", n = id[t], a = gu.call(id, t) ? n.length : 0; a--;) {
                                var i = n[a],
                                    r = i.func;
                                if (null == r || r == e) return i.name
                            }
                            return t
                        }

                        function yr(e) {
                            return (gu.call(n, "placeholder") ? n : e).placeholder
                        }

                        function _r() {
                            var e = n.iteratee || xc;
                            return e = e === xc ? Ma : e, arguments.length ? e(arguments[0], arguments[1]) : e
                        }

                        function Cr(e, t) {
                            var n = e.__data__;
                            return Mr(t) ? n["string" == typeof t ? "string" : "hash"] : n.map
                        }

                        function Sr(e) {
                            for (var t = Pl(e), n = t.length; n--;) {
                                var a = t[n],
                                    i = e[a];
                                t[n] = [a, i, Hr(i)]
                            }
                            return t
                        }

                        function Er(e, t) {
                            var n = V(e, t);
                            return La(n) ? n : ie
                        }

                        function wr(e) {
                            var t = gu.call(e, Lu),
                                n = e[Lu];
                            try {
                                e[Lu] = ie;
                                var a = !0
                            } catch (e) {}
                            var i = ku.call(e);
                            return a && (t ? e[Lu] = n : delete e[Lu]), i
                        }

                        function Nr(e, t, n) {
                            for (var a = -1, i = n.length; ++a < i;) {
                                var r = n[a],
                                    s = r.size;
                                switch (r.type) {
                                    case "drop":
                                        e += s;
                                        break;
                                    case "dropRight":
                                        t -= s;
                                        break;
                                    case "take":
                                        t = Gu(t, e + s);
                                        break;
                                    case "takeRight":
                                        e = zu(e, t - s)
                                }
                            }
                            return {
                                start: e,
                                end: t
                            }
                        }

                        function Dr(e) {
                            var t = e.match(At);
                            return t ? t[1].split(Rt) : []
                        }

                        function Ir(e, t, n) {
                            t = Si(t, e);
                            for (var a = -1, i = t.length, r = !1; ++a < i;) {
                                var s = Xr(t[a]);
                                if (!(r = null != e && n(e, s))) break;
                                e = e[s]
                            }
                            return r || ++a != i ? r : !!(i = null == e ? 0 : e.length) && al(i) && Fr(s, i) && (gp(e) || fp(e))
                        }

                        function Or(e) {
                            var t = e.length,
                                n = e.constructor(t);
                            return t && "string" == typeof e[0] && gu.call(e, "index") && (n.index = e.index, n.input = e.input), n
                        }

                        function Ur(e) {
                            return "function" != typeof e.constructor || Pr(e) ? {} : md(Du(e))
                        }

                        function xr(e, t, n, a) {
                            var i = e.constructor;
                            switch (t) {
                                case ot:
                                    return Ni(e);
                                case We:
                                case qe:
                                    return new i(+e);
                                case lt:
                                    return Di(e, a);
                                case ct:
                                case ut:
                                case dt:
                                case pt:
                                case mt:
                                case ht:
                                case ft:
                                case gt:
                                case vt:
                                    return Ti(e, a);
                                case Ke:
                                    return Ii(e, a, n);
                                case Qe:
                                case nt:
                                    return new i(e);
                                case et:
                                    return Oi(e);
                                case tt:
                                    return Ui(e, a, n);
                                case at:
                                    return xi(e)
                            }
                        }

                        function Tr(e, t) {
                            var n = t.length;
                            if (!n) return e;
                            var a = n - 1;
                            return t[a] = (n > 1 ? "& " : "") + t[a], t = t.join(n > 2 ? ", " : " "), e.replace(Mt, "{\n/* [wrapped with " + t + "] */\n")
                        }

                        function Lr(e) {
                            return gp(e) || fp(e) || !!(xu && e && e[xu])
                        }

                        function Fr(e, t) {
                            return !!(t = null == t ? Le : t) && ("number" == typeof e || Jt.test(e)) && e > -1 && e % 1 == 0 && e < t
                        }

                        function jr(e, t, n) {
                            if (!il(n)) return !1;
                            var a = typeof t;
                            return !!("number" == a ? Go(n) && Fr(t, n.length) : "string" == a && t in n) && zo(n[t], e)
                        }

                        function Br(e, t) {
                            if (gp(e)) return !1;
                            var n = typeof e;
                            return !("number" != n && "symbol" != n && "boolean" != n && null != e && !gl(e)) || (Ot.test(e) || !It.test(e) || null != t && e in ou(t))
                        }

                        function Mr(e) {
                            var t = typeof e;
                            return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e
                        }

                        function Ar(e) {
                            var t = kr(e),
                                a = n[t];
                            if ("function" != typeof a || !(t in y.prototype)) return !1;
                            if (e === a) return !0;
                            var i = Sd(a);
                            return !!i && e === i[0]
                        }

                        function Rr(e) {
                            return !!bu && bu in e
                        }

                        function Pr(e) {
                            var t = e && e.constructor;
                            return e === ("function" == typeof t && t.prototype || mu)
                        }

                        function Hr(e) {
                            return e === e && !il(e)
                        }

                        function Vr(e, t) {
                            return function(n) {
                                return null != n && (n[e] === t && (t !== ie || e in ou(n)))
                            }
                        }

                        function Wr(e, t) {
                            var n = e[1],
                                a = t[1],
                                i = n | a,
                                r = i < (ge | ve | Se),
                                s = a == Se && n == ke || a == Se && n == Ee && e[7].length <= t[8] || a == (Se | Ee) && t[7].length <= t[8] && n == ke;
                            if (!r && !s) return e;
                            a & ge && (e[2] = t[2], i |= n & ge ? 0 : be);
                            var o = t[3];
                            if (o) {
                                var l = e[3];
                                e[3] = l ? ji(l, o, t[4]) : o, e[4] = l ? J(e[3], ue) : t[4]
                            }
                            return o = t[5], o && (l = e[5], e[5] = l ? Bi(l, o, t[6]) : o, e[6] = l ? J(e[5], ue) : t[6]), o = t[7], o && (e[7] = o), a & Se && (e[8] = null == e[8] ? t[8] : Gu(e[8], t[8])), null == e[9] && (e[9] = t[9]), e[0] = t[0], e[1] = i, e
                        }

                        function qr(e) {
                            var t = [];
                            if (null != e)
                                for (var n in ou(e)) t.push(n);
                            return t
                        }

                        function zr(e) {
                            return ku.call(e)
                        }

                        function Gr(e, t, n) {
                            return t = zu(t === ie ? e.length - 1 : t, 0),
                                function() {
                                    for (var a = arguments, i = -1, r = zu(a.length - t, 0), s = nu(r); ++i < r;) s[i] = a[t + i];
                                    i = -1;
                                    for (var l = nu(t + 1); ++i < t;) l[i] = a[i];
                                    return l[t] = n(s), o(e, this, l)
                                }
                        }

                        function $r(e, t) {
                            return t.length < 2 ? e : ga(e, oi(t, 0, -1))
                        }

                        function Jr(e, t) {
                            for (var n = e.length, a = Gu(t.length, n), i = Mi(e); a--;) {
                                var r = t[a];
                                e[a] = Fr(r, n) ? i[r] : ie
                            }
                            return e
                        }

                        function Kr(e, t, n) {
                            var a = t + "";
                            return Ud(e, Tr(a, es(Dr(a), n)))
                        }

                        function Qr(e) {
                            var t = 0,
                                n = 0;
                            return function() {
                                var a = $u(),
                                    i = Oe - (a - n);
                                if (n = a, i > 0) {
                                    if (++t >= Ie) return arguments[0]
                                } else t = 0;
                                return e.apply(ie, arguments)
                            }
                        }

                        function Yr(e, t) {
                            var n = -1,
                                a = e.length,
                                i = a - 1;
                            for (t = t === ie ? a : t; ++n < t;) {
                                var r = Za(n, i),
                                    s = e[r];
                                e[r] = e[n], e[n] = s
                            }
                            return e.length = t, e
                        }

                        function Xr(e) {
                            if ("string" == typeof e || gl(e)) return e;
                            var t = e + "";
                            return "0" == t && 1 / e == -Te ? "-0" : t
                        }

                        function Zr(e) {
                            if (null != e) {
                                try {
                                    return fu.call(e)
                                } catch (e) {}
                                try {
                                    return e + ""
                                } catch (e) {}
                            }
                            return ""
                        }

                        function es(e, t) {
                            return c(Re, function(n) {
                                var a = "_." + n[0];
                                t & n[1] && !m(e, a) && e.push(a)
                            }), e.sort()
                        }

                        function ts(e) {
                            if (e instanceof y) return e.clone();
                            var t = new i(e.__wrapped__, e.__chain__);
                            return t.__actions__ = Mi(e.__actions__), t.__index__ = e.__index__, t.__values__ = e.__values__, t
                        }

                        function ns(e, t, n) {
                            t = (n ? jr(e, t, n) : t === ie) ? 1 : zu(Cl(t), 0);
                            var a = null == e ? 0 : e.length;
                            if (!a || t < 1) return [];
                            for (var i = 0, r = 0, s = nu(Au(a / t)); i < a;) s[r++] = oi(e, i, i += t);
                            return s
                        }

                        function as(e) {
                            for (var t = -1, n = null == e ? 0 : e.length, a = 0, i = []; ++t < n;) {
                                var r = e[t];
                                r && (i[a++] = r)
                            }
                            return i
                        }

                        function is() {
                            var e = arguments.length;
                            if (!e) return [];
                            for (var t = nu(e - 1), n = arguments[0], a = e; a--;) t[a - 1] = arguments[a];
                            return g(gp(n) ? Mi(n) : [n], pa(t, 1))
                        }

                        function rs(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            return a ? (t = n || t === ie ? 1 : Cl(t), oi(e, t < 0 ? 0 : t, a)) : []
                        }

                        function ss(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            return a ? (t = n || t === ie ? 1 : Cl(t), t = a - t, oi(e, 0, t < 0 ? 0 : t)) : []
                        }

                        function os(e, t) {
                            return e && e.length ? vi(e, _r(t, 3), !0, !0) : []
                        }

                        function ls(e, t) {
                            return e && e.length ? vi(e, _r(t, 3), !0) : []
                        }

                        function cs(e, t, n, a) {
                            var i = null == e ? 0 : e.length;
                            return i ? (n && "number" != typeof n && jr(e, t, n) && (n = 0, a = i), ua(e, t, n, a)) : []
                        }

                        function us(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            if (!a) return -1;
                            var i = null == n ? 0 : Cl(n);
                            return i < 0 && (i = zu(a + i, 0)), S(e, _r(t, 3), i)
                        }

                        function ds(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            if (!a) return -1;
                            var i = a - 1;
                            return n !== ie && (i = Cl(n), i = n < 0 ? zu(a + i, 0) : Gu(i, a - 1)), S(e, _r(t, 3), i, !0)
                        }

                        function ps(e) {
                            return (null == e ? 0 : e.length) ? pa(e, 1) : []
                        }

                        function ms(e) {
                            return (null == e ? 0 : e.length) ? pa(e, Te) : []
                        }

                        function hs(e, t) {
                            return (null == e ? 0 : e.length) ? (t = t === ie ? 1 : Cl(t), pa(e, t)) : []
                        }

                        function fs(e) {
                            for (var t = -1, n = null == e ? 0 : e.length, a = {}; ++t < n;) {
                                var i = e[t];
                                a[i[0]] = i[1]
                            }
                            return a
                        }

                        function gs(e) {
                            return e && e.length ? e[0] : ie
                        }

                        function vs(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            if (!a) return -1;
                            var i = null == n ? 0 : Cl(n);
                            return i < 0 && (i = zu(a + i, 0)), E(e, t, i)
                        }

                        function bs(e) {
                            return (null == e ? 0 : e.length) ? oi(e, 0, -1) : []
                        }

                        function ks(e, t) {
                            return null == e ? "" : Wu.call(e, t)
                        }

                        function ys(e) {
                            var t = null == e ? 0 : e.length;
                            return t ? e[t - 1] : ie
                        }

                        function _s(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            if (!a) return -1;
                            var i = a;
                            return n !== ie && (i = Cl(n), i = i < 0 ? zu(a + i, 0) : Gu(i, a - 1)), t === t ? X(e, t, i) : S(e, N, i, !0)
                        }

                        function Cs(e, t) {
                            return e && e.length ? Ga(e, Cl(t)) : ie
                        }

                        function Ss(e, t) {
                            return e && e.length && t && t.length ? Ya(e, t) : e
                        }

                        function Es(e, t, n) {
                            return e && e.length && t && t.length ? Ya(e, t, _r(n, 2)) : e
                        }

                        function ws(e, t, n) {
                            return e && e.length && t && t.length ? Ya(e, t, ie, n) : e
                        }

                        function Ns(e, t) {
                            var n = [];
                            if (!e || !e.length) return n;
                            var a = -1,
                                i = [],
                                r = e.length;
                            for (t = _r(t, 3); ++a < r;) {
                                var s = e[a];
                                t(s, a, e) && (n.push(s), i.push(a))
                            }
                            return Xa(e, i), n
                        }

                        function Ds(e) {
                            return null == e ? e : Qu.call(e)
                        }

                        function Is(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            return a ? (n && "number" != typeof n && jr(e, t, n) ? (t = 0, n = a) : (t = null == t ? 0 : Cl(t), n = n === ie ? a : Cl(n)), oi(e, t, n)) : []
                        }

                        function Os(e, t) {
                            return ci(e, t)
                        }

                        function Us(e, t, n) {
                            return ui(e, t, _r(n, 2))
                        }

                        function xs(e, t) {
                            var n = null == e ? 0 : e.length;
                            if (n) {
                                var a = ci(e, t);
                                if (a < n && zo(e[a], t)) return a
                            }
                            return -1
                        }

                        function Ts(e, t) {
                            return ci(e, t, !0)
                        }

                        function Ls(e, t, n) {
                            return ui(e, t, _r(n, 2), !0)
                        }

                        function Fs(e, t) {
                            if (null == e ? 0 : e.length) {
                                var n = ci(e, t, !0) - 1;
                                if (zo(e[n], t)) return n
                            }
                            return -1
                        }

                        function js(e) {
                            return e && e.length ? di(e) : []
                        }

                        function Bs(e, t) {
                            return e && e.length ? di(e, _r(t, 2)) : []
                        }

                        function Ms(e) {
                            var t = null == e ? 0 : e.length;
                            return t ? oi(e, 1, t) : []
                        }

                        function As(e, t, n) {
                            return e && e.length ? (t = n || t === ie ? 1 : Cl(t), oi(e, 0, t < 0 ? 0 : t)) : []
                        }

                        function Rs(e, t, n) {
                            var a = null == e ? 0 : e.length;
                            return a ? (t = n || t === ie ? 1 : Cl(t), t = a - t, oi(e, t < 0 ? 0 : t, a)) : []
                        }

                        function Ps(e, t) {
                            return e && e.length ? vi(e, _r(t, 3), !1, !0) : []
                        }

                        function Hs(e, t) {
                            return e && e.length ? vi(e, _r(t, 3)) : []
                        }

                        function Vs(e) {
                            return e && e.length ? hi(e) : []
                        }

                        function Ws(e, t) {
                            return e && e.length ? hi(e, _r(t, 2)) : []
                        }

                        function qs(e, t) {
                            return t = "function" == typeof t ? t : ie, e && e.length ? hi(e, ie, t) : []
                        }

                        function zs(e) {
                            if (!e || !e.length) return [];
                            var t = 0;
                            return e = p(e, function(e) {
                                if ($o(e)) return t = zu(e.length, t), !0
                            }), L(t, function(t) {
                                return f(e, I(t))
                            })
                        }

                        function Gs(e, t) {
                            if (!e || !e.length) return [];
                            var n = zs(e);
                            return null == t ? n : f(n, function(e) {
                                return o(t, ie, e)
                            })
                        }

                        function $s(e, t) {
                            return yi(e || [], t || [], zn)
                        }

                        function Js(e, t) {
                            return yi(e || [], t || [], ri)
                        }

                        function Ks(e) {
                            var t = n(e);
                            return t.__chain__ = !0, t
                        }

                        function Qs(e, t) {
                            return t(e), e
                        }

                        function Ys(e, t) {
                            return t(e)
                        }

                        function Xs() {
                            return Ks(this)
                        }

                        function Zs() {
                            return new i(this.value(), this.__chain__)
                        }

                        function eo() {
                            this.__values__ === ie && (this.__values__ = yl(this.value()));
                            var e = this.__index__ >= this.__values__.length;
                            return {
                                done: e,
                                value: e ? ie : this.__values__[this.__index__++]
                            }
                        }

                        function to() {
                            return this
                        }

                        function no(e) {
                            for (var t, n = this; n instanceof a;) {
                                var i = ts(n);
                                i.__index__ = 0, i.__values__ = ie, t ? r.__wrapped__ = i : t = i;
                                var r = i;
                                n = n.__wrapped__
                            }
                            return r.__wrapped__ = e, t
                        }

                        function ao() {
                            var e = this.__wrapped__;
                            if (e instanceof y) {
                                var t = e;
                                return this.__actions__.length && (t = new y(this)), t = t.reverse(), t.__actions__.push({
                                    func: Ys,
                                    args: [Ds],
                                    thisArg: ie
                                }), new i(t, this.__chain__)
                            }
                            return this.thru(Ds)
                        }

                        function io() {
                            return bi(this.__wrapped__, this.__actions__)
                        }

                        function ro(e, t, n) {
                            var a = gp(e) ? d : la;
                            return n && jr(e, t, n) && (t = ie), a(e, _r(t, 3))
                        }

                        function so(e, t) {
                            return (gp(e) ? p : da)(e, _r(t, 3))
                        }

                        function oo(e, t) {
                            return pa(ho(e, t), 1)
                        }

                        function lo(e, t) {
                            return pa(ho(e, t), Te)
                        }

                        function co(e, t, n) {
                            return n = n === ie ? 1 : Cl(n), pa(ho(e, t), n)
                        }

                        function uo(e, t) {
                            return (gp(e) ? c : hd)(e, _r(t, 3))
                        }

                        function po(e, t) {
                            return (gp(e) ? u : fd)(e, _r(t, 3))
                        }

                        function mo(e, t, n, a) {
                            e = Go(e) ? e : Zl(e), n = n && !a ? Cl(n) : 0;
                            var i = e.length;
                            return n < 0 && (n = zu(i + n, 0)), fl(e) ? n <= i && e.indexOf(t, n) > -1 : !!i && E(e, t, n) > -1
                        }

                        function ho(e, t) {
                            return (gp(e) ? f : Ha)(e, _r(t, 3))
                        }

                        function fo(e, t, n, a) {
                            return null == e ? [] : (gp(t) || (t = null == t ? [] : [t]), n = a ? ie : n, gp(n) || (n = null == n ? [] : [n]), $a(e, t, n))
                        }

                        function go(e, t, n) {
                            var a = gp(e) ? v : U,
                                i = arguments.length < 3;
                            return a(e, _r(t, 4), n, i, hd)
                        }

                        function vo(e, t, n) {
                            var a = gp(e) ? b : U,
                                i = arguments.length < 3;
                            return a(e, _r(t, 4), n, i, fd)
                        }

                        function bo(e, t) {
                            return (gp(e) ? p : da)(e, To(_r(t, 3)))
                        }

                        function ko(e) {
                            return (gp(e) ? Fn : ai)(e)
                        }

                        function yo(e, t, n) {
                            return t = (n ? jr(e, t, n) : t === ie) ? 1 : Cl(t), (gp(e) ? jn : ii)(e, t)
                        }

                        function _o(e) {
                            return (gp(e) ? Mn : si)(e)
                        }

                        function Co(e) {
                            if (null == e) return 0;
                            if (Go(e)) return fl(e) ? Z(e) : e.length;
                            var t = Nd(e);
                            return t == Ke || t == tt ? e.size : Aa(e).length
                        }

                        function So(e, t, n) {
                            var a = gp(e) ? k : li;
                            return n && jr(e, t, n) && (t = ie), a(e, _r(t, 3))
                        }

                        function Eo(e, t) {
                            if ("function" != typeof t) throw new uu(oe);
                            return e = Cl(e),
                                function() {
                                    if (--e < 1) return t.apply(this, arguments)
                                }
                        }

                        function wo(e, t, n) {
                            return t = n ? ie : t, t = e && null == t ? e.length : t, cr(e, Se, ie, ie, ie, ie, t)
                        }

                        function No(e, t) {
                            var n;
                            if ("function" != typeof t) throw new uu(oe);
                            return e = Cl(e),
                                function() {
                                    return --e > 0 && (n = t.apply(this, arguments)), e <= 1 && (t = ie), n
                                }
                        }

                        function Do(e, t, n) {
                            t = n ? ie : t;
                            var a = cr(e, ke, ie, ie, ie, ie, ie, t);
                            return a.placeholder = Do.placeholder, a
                        }

                        function Io(e, t, n) {
                            t = n ? ie : t;
                            var a = cr(e, ye, ie, ie, ie, ie, ie, t);
                            return a.placeholder = Io.placeholder, a
                        }

                        function Oo(e, t, n) {
                            function a(t) {
                                var n = p,
                                    a = m;
                                return p = m = ie, b = t, f = e.apply(a, n)
                            }

                            function i(e) {
                                return b = e, g = Od(o, t), k ? a(e) : f
                            }

                            function r(e) {
                                var n = e - v,
                                    a = e - b,
                                    i = t - n;
                                return y ? Gu(i, h - a) : i
                            }

                            function s(e) {
                                var n = e - v,
                                    a = e - b;
                                return v === ie || n >= t || n < 0 || y && a >= h
                            }

                            function o() {
                                var e = ip();
                                if (s(e)) return l(e);
                                g = Od(o, r(e))
                            }

                            function l(e) {
                                return g = ie, _ && p ? a(e) : (p = m = ie, f)
                            }

                            function c() {
                                g !== ie && _d(g), b = 0, p = v = m = g = ie
                            }

                            function u() {
                                return g === ie ? f : l(ip())
                            }

                            function d() {
                                var e = ip(),
                                    n = s(e);
                                if (p = arguments, m = this, v = e, n) {
                                    if (g === ie) return i(v);
                                    if (y) return g = Od(o, t), a(v)
                                }
                                return g === ie && (g = Od(o, t)), f
                            }
                            var p, m, h, f, g, v, b = 0,
                                k = !1,
                                y = !1,
                                _ = !0;
                            if ("function" != typeof e) throw new uu(oe);
                            return t = El(t) || 0, il(n) && (k = !!n.leading, y = "maxWait" in n, h = y ? zu(El(n.maxWait) || 0, t) : h, _ = "trailing" in n ? !!n.trailing : _), d.cancel = c, d.flush = u, d
                        }

                        function Uo(e) {
                            return cr(e, we)
                        }

                        function xo(e, t) {
                            if ("function" != typeof e || null != t && "function" != typeof t) throw new uu(oe);
                            var n = function() {
                                var a = arguments,
                                    i = t ? t.apply(this, a) : a[0],
                                    r = n.cache;
                                if (r.has(i)) return r.get(i);
                                var s = e.apply(this, a);
                                return n.cache = r.set(i, s) || r, s
                            };
                            return n.cache = new(xo.Cache || cn), n
                        }

                        function To(e) {
                            if ("function" != typeof e) throw new uu(oe);
                            return function() {
                                var t = arguments;
                                switch (t.length) {
                                    case 0:
                                        return !e.call(this);
                                    case 1:
                                        return !e.call(this, t[0]);
                                    case 2:
                                        return !e.call(this, t[0], t[1]);
                                    case 3:
                                        return !e.call(this, t[0], t[1], t[2])
                                }
                                return !e.apply(this, t)
                            }
                        }

                        function Lo(e) {
                            return No(2, e)
                        }

                        function Fo(e, t) {
                            if ("function" != typeof e) throw new uu(oe);
                            return t = t === ie ? t : Cl(t), ni(e, t)
                        }

                        function jo(e, t) {
                            if ("function" != typeof e) throw new uu(oe);
                            return t = null == t ? 0 : zu(Cl(t), 0), ni(function(n) {
                                var a = n[t],
                                    i = Ei(n, 0, t);
                                return a && g(i, a), o(e, this, i)
                            })
                        }

                        function Bo(e, t, n) {
                            var a = !0,
                                i = !0;
                            if ("function" != typeof e) throw new uu(oe);
                            return il(n) && (a = "leading" in n ? !!n.leading : a, i = "trailing" in n ? !!n.trailing : i), Oo(e, t, {
                                leading: a,
                                maxWait: t,
                                trailing: i
                            })
                        }

                        function Mo(e) {
                            return wo(e, 1)
                        }

                        function Ao(e, t) {
                            return up(Ci(t), e)
                        }

                        function Ro() {
                            if (!arguments.length) return [];
                            var e = arguments[0];
                            return gp(e) ? e : [e]
                        }

                        function Po(e) {
                            return aa(e, me)
                        }

                        function Ho(e, t) {
                            return t = "function" == typeof t ? t : ie, aa(e, me, t)
                        }

                        function Vo(e) {
                            return aa(e, de | me)
                        }

                        function Wo(e, t) {
                            return t = "function" == typeof t ? t : ie, aa(e, de | me, t)
                        }

                        function qo(e, t) {
                            return null == t || ra(e, t, Pl(t))
                        }

                        function zo(e, t) {
                            return e === t || e !== e && t !== t
                        }

                        function Go(e) {
                            return null != e && al(e.length) && !tl(e)
                        }

                        function $o(e) {
                            return rl(e) && Go(e)
                        }

                        function Jo(e) {
                            return !0 === e || !1 === e || rl(e) && ba(e) == We
                        }

                        function Ko(e) {
                            return rl(e) && 1 === e.nodeType && !ml(e)
                        }

                        function Qo(e) {
                            if (null == e) return !0;
                            if (Go(e) && (gp(e) || "string" == typeof e || "function" == typeof e.splice || bp(e) || Sp(e) || fp(e))) return !e.length;
                            var t = Nd(e);
                            if (t == Ke || t == tt) return !e.size;
                            if (Pr(e)) return !Aa(e).length;
                            for (var n in e)
                                if (gu.call(e, n)) return !1;
                            return !0
                        }

                        function Yo(e, t) {
                            return Oa(e, t)
                        }

                        function Xo(e, t, n) {
                            n = "function" == typeof n ? n : ie;
                            var a = n ? n(e, t) : ie;
                            return a === ie ? Oa(e, t, ie, n) : !!a
                        }

                        function Zo(e) {
                            if (!rl(e)) return !1;
                            var t = ba(e);
                            return t == Ge || t == ze || "string" == typeof e.message && "string" == typeof e.name && !ml(e)
                        }

                        function el(e) {
                            return "number" == typeof e && Vu(e)
                        }

                        function tl(e) {
                            if (!il(e)) return !1;
                            var t = ba(e);
                            return t == $e || t == Je || t == Ve || t == Ze
                        }

                        function nl(e) {
                            return "number" == typeof e && e == Cl(e)
                        }

                        function al(e) {
                            return "number" == typeof e && e > -1 && e % 1 == 0 && e <= Le
                        }

                        function il(e) {
                            var t = typeof e;
                            return null != e && ("object" == t || "function" == t)
                        }

                        function rl(e) {
                            return null != e && "object" == typeof e
                        }

                        function sl(e, t) {
                            return e === t || Ta(e, t, Sr(t))
                        }

                        function ol(e, t, n) {
                            return n = "function" == typeof n ? n : ie, Ta(e, t, Sr(t), n)
                        }

                        function ll(e) {
                            return pl(e) && e != +e
                        }

                        function cl(e) {
                            if (Dd(e)) throw new iu(se);
                            return La(e)
                        }

                        function ul(e) {
                            return null === e
                        }

                        function dl(e) {
                            return null == e
                        }

                        function pl(e) {
                            return "number" == typeof e || rl(e) && ba(e) == Qe
                        }

                        function ml(e) {
                            if (!rl(e) || ba(e) != Xe) return !1;
                            var t = Du(e);
                            if (null === t) return !0;
                            var n = gu.call(t, "constructor") && t.constructor;
                            return "function" == typeof n && n instanceof n && fu.call(n) == yu
                        }

                        function hl(e) {
                            return nl(e) && e >= -Le && e <= Le
                        }

                        function fl(e) {
                            return "string" == typeof e || !gp(e) && rl(e) && ba(e) == nt
                        }

                        function gl(e) {
                            return "symbol" == typeof e || rl(e) && ba(e) == at
                        }

                        function vl(e) {
                            return e === ie
                        }

                        function bl(e) {
                            return rl(e) && Nd(e) == rt
                        }

                        function kl(e) {
                            return rl(e) && ba(e) == st
                        }

                        function yl(e) {
                            if (!e) return [];
                            if (Go(e)) return fl(e) ? ee(e) : Mi(e);
                            if (Tu && e[Tu]) return z(e[Tu]());
                            var t = Nd(e);
                            return (t == Ke ? G : t == tt ? K : Zl)(e)
                        }

                        function _l(e) {
                            if (!e) return 0 === e ? e : 0;
                            if ((e = El(e)) === Te || e === -Te) {
                                return (e < 0 ? -1 : 1) * Fe
                            }
                            return e === e ? e : 0
                        }

                        function Cl(e) {
                            var t = _l(e),
                                n = t % 1;
                            return t === t ? n ? t - n : t : 0
                        }

                        function Sl(e) {
                            return e ? na(Cl(e), 0, Be) : 0
                        }

                        function El(e) {
                            if ("number" == typeof e) return e;
                            if (gl(e)) return je;
                            if (il(e)) {
                                var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                                e = il(t) ? t + "" : t
                            }
                            if ("string" != typeof e) return 0 === e ? e : +e;
                            e = e.replace(Ft, "");
                            var n = zt.test(e);
                            return n || $t.test(e) ? Un(e.slice(2), n ? 2 : 8) : qt.test(e) ? je : +e
                        }

                        function wl(e) {
                            return Ai(e, Hl(e))
                        }

                        function Nl(e) {
                            return e ? na(Cl(e), -Le, Le) : 0 === e ? e : 0
                        }

                        function Dl(e) {
                            return null == e ? "" : mi(e)
                        }

                        function Il(e, t) {
                            var n = md(e);
                            return null == t ? n : Xn(n, t)
                        }

                        function Ol(e, t) {
                            return C(e, _r(t, 3), ma)
                        }

                        function Ul(e, t) {
                            return C(e, _r(t, 3), ha)
                        }

                        function xl(e, t) {
                            return null == e ? e : gd(e, _r(t, 3), Hl)
                        }

                        function Tl(e, t) {
                            return null == e ? e : vd(e, _r(t, 3), Hl)
                        }

                        function Ll(e, t) {
                            return e && ma(e, _r(t, 3))
                        }

                        function Fl(e, t) {
                            return e && ha(e, _r(t, 3))
                        }

                        function jl(e) {
                            return null == e ? [] : fa(e, Pl(e))
                        }

                        function Bl(e) {
                            return null == e ? [] : fa(e, Hl(e))
                        }

                        function Ml(e, t, n) {
                            var a = null == e ? ie : ga(e, t);
                            return a === ie ? n : a
                        }

                        function Al(e, t) {
                            return null != e && Ir(e, t, ya)
                        }

                        function Rl(e, t) {
                            return null != e && Ir(e, t, _a)
                        }

                        function Pl(e) {
                            return Go(e) ? Tn(e) : Aa(e)
                        }

                        function Hl(e) {
                            return Go(e) ? Tn(e, !0) : Ra(e)
                        }

                        function Vl(e, t) {
                            var n = {};
                            return t = _r(t, 3), ma(e, function(e, a, i) {
                                ea(n, t(e, a, i), e)
                            }), n
                        }

                        function Wl(e, t) {
                            var n = {};
                            return t = _r(t, 3), ma(e, function(e, a, i) {
                                ea(n, a, t(e, a, i))
                            }), n
                        }

                        function ql(e, t) {
                            return zl(e, To(_r(t)))
                        }

                        function zl(e, t) {
                            if (null == e) return {};
                            var n = f(br(e), function(e) {
                                return [e]
                            });
                            return t = _r(t), Ka(e, n, function(e, n) {
                                return t(e, n[0])
                            })
                        }

                        function Gl(e, t, n) {
                            t = Si(t, e);
                            var a = -1,
                                i = t.length;
                            for (i || (i = 1, e = ie); ++a < i;) {
                                var r = null == e ? ie : e[Xr(t[a])];
                                r === ie && (a = i, r = n), e = tl(r) ? r.call(e) : r
                            }
                            return e
                        }

                        function $l(e, t, n) {
                            return null == e ? e : ri(e, t, n)
                        }

                        function Jl(e, t, n, a) {
                            return a = "function" == typeof a ? a : ie, null == e ? e : ri(e, t, n, a)
                        }

                        function Kl(e, t, n) {
                            var a = gp(e),
                                i = a || bp(e) || Sp(e);
                            if (t = _r(t, 4), null == n) {
                                var r = e && e.constructor;
                                n = i ? a ? new r : [] : il(e) && tl(r) ? md(Du(e)) : {}
                            }
                            return (i ? c : ma)(e, function(e, a, i) {
                                return t(n, e, a, i)
                            }), n
                        }

                        function Ql(e, t) {
                            return null == e || fi(e, t)
                        }

                        function Yl(e, t, n) {
                            return null == e ? e : gi(e, t, Ci(n))
                        }

                        function Xl(e, t, n, a) {
                            return a = "function" == typeof a ? a : ie, null == e ? e : gi(e, t, Ci(n), a)
                        }

                        function Zl(e) {
                            return null == e ? [] : B(e, Pl(e))
                        }

                        function ec(e) {
                            return null == e ? [] : B(e, Hl(e))
                        }

                        function tc(e, t, n) {
                            return n === ie && (n = t, t = ie), n !== ie && (n = El(n), n = n === n ? n : 0), t !== ie && (t = El(t), t = t === t ? t : 0), na(El(e), t, n)
                        }

                        function nc(e, t, n) {
                            return t = _l(t), n === ie ? (n = t, t = 0) : n = _l(n), e = El(e), Ca(e, t, n)
                        }

                        function ac(e, t, n) {
                            if (n && "boolean" != typeof n && jr(e, t, n) && (t = n = ie), n === ie && ("boolean" == typeof t ? (n = t, t = ie) : "boolean" == typeof e && (n = e, e = ie)), e === ie && t === ie ? (e = 0, t = 1) : (e = _l(e), t === ie ? (t = e, e = 0) : t = _l(t)), e > t) {
                                var a = e;
                                e = t, t = a
                            }
                            if (n || e % 1 || t % 1) {
                                var i = Ku();
                                return Gu(e + i * (t - e + On("1e-" + ((i + "").length - 1))), t)
                            }
                            return Za(e, t)
                        }

                        function ic(e) {
                            return Kp(Dl(e).toLowerCase())
                        }

                        function rc(e) {
                            return (e = Dl(e)) && e.replace(Kt, Gn).replace(gn, "")
                        }

                        function sc(e, t, n) {
                            e = Dl(e), t = mi(t);
                            var a = e.length;
                            n = n === ie ? a : na(Cl(n), 0, a);
                            var i = n;
                            return (n -= t.length) >= 0 && e.slice(n, i) == t
                        }

                        function oc(e) {
                            return e = Dl(e), e && Et.test(e) ? e.replace(Ct, $n) : e
                        }

                        function lc(e) {
                            return e = Dl(e), e && Lt.test(e) ? e.replace(Tt, "\\$&") : e
                        }

                        function cc(e, t, n) {
                            e = Dl(e), t = Cl(t);
                            var a = t ? Z(e) : 0;
                            if (!t || a >= t) return e;
                            var i = (t - a) / 2;
                            return nr(Ru(i), n) + e + nr(Au(i), n)
                        }

                        function uc(e, t, n) {
                            e = Dl(e), t = Cl(t);
                            var a = t ? Z(e) : 0;
                            return t && a < t ? e + nr(t - a, n) : e
                        }

                        function dc(e, t, n) {
                            e = Dl(e), t = Cl(t);
                            var a = t ? Z(e) : 0;
                            return t && a < t ? nr(t - a, n) + e : e
                        }

                        function pc(e, t, n) {
                            return n || null == t ? t = 0 : t && (t = +t), Ju(Dl(e).replace(jt, ""), t || 0)
                        }

                        function mc(e, t, n) {
                            return t = (n ? jr(e, t, n) : t === ie) ? 1 : Cl(t), ti(Dl(e), t)
                        }

                        function hc() {
                            var e = arguments,
                                t = Dl(e[0]);
                            return e.length < 3 ? t : t.replace(e[1], e[2])
                        }

                        function fc(e, t, n) {
                            return n && "number" != typeof n && jr(e, t, n) && (t = n = ie), (n = n === ie ? Be : n >>> 0) ? (e = Dl(e), e && ("string" == typeof t || null != t && !_p(t)) && !(t = mi(t)) && W(e) ? Ei(ee(e), 0, n) : e.split(t, n)) : []
                        }

                        function gc(e, t, n) {
                            return e = Dl(e), n = null == n ? 0 : na(Cl(n), 0, e.length), t = mi(t), e.slice(n, n + t.length) == t
                        }

                        function vc(e, t, a) {
                            var i = n.templateSettings;
                            a && jr(e, t, a) && (t = ie), e = Dl(e), t = Ip({}, t, i, ur);
                            var r, s, o = Ip({}, t.imports, i.imports, ur),
                                l = Pl(o),
                                c = B(o, l),
                                u = 0,
                                d = t.interpolate || Qt,
                                p = "__p += '",
                                m = lu((t.escape || Qt).source + "|" + d.source + "|" + (d === Dt ? Vt : Qt).source + "|" + (t.evaluate || Qt).source + "|$", "g"),
                                h = "//# sourceURL=" + ("sourceURL" in t ? t.sourceURL : "lodash.templateSources[" + ++Cn + "]") + "\n";
                            e.replace(m, function(t, n, a, i, o, l) {
                                return a || (a = i), p += e.slice(u, l).replace(Yt, H), n && (r = !0, p += "' +\n__e(" + n + ") +\n'"), o && (s = !0, p += "';\n" + o + ";\n__p += '"), a && (p += "' +\n((__t = (" + a + ")) == null ? '' : __t) +\n'"), u = l + t.length, t
                            }), p += "';\n";
                            var f = t.variable;
                            f || (p = "with (obj) {\n" + p + "\n}\n"), p = (s ? p.replace(bt, "") : p).replace(kt, "$1").replace(yt, "$1;"), p = "function(" + (f || "obj") + ") {\n" + (f ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (r ? ", __e = _.escape" : "") + (s ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + p + "return __p\n}";
                            var g = Qp(function() {
                                return ru(l, h + "return " + p).apply(ie, c)
                            });
                            if (g.source = p, Zo(g)) throw g;
                            return g
                        }

                        function bc(e) {
                            return Dl(e).toLowerCase()
                        }

                        function kc(e) {
                            return Dl(e).toUpperCase()
                        }

                        function yc(e, t, n) {
                            if ((e = Dl(e)) && (n || t === ie)) return e.replace(Ft, "");
                            if (!e || !(t = mi(t))) return e;
                            var a = ee(e),
                                i = ee(t);
                            return Ei(a, A(a, i), R(a, i) + 1).join("")
                        }

                        function _c(e, t, n) {
                            if ((e = Dl(e)) && (n || t === ie)) return e.replace(Bt, "");
                            if (!e || !(t = mi(t))) return e;
                            var a = ee(e);
                            return Ei(a, 0, R(a, ee(t)) + 1).join("")
                        }

                        function Cc(e, t, n) {
                            if ((e = Dl(e)) && (n || t === ie)) return e.replace(jt, "");
                            if (!e || !(t = mi(t))) return e;
                            var a = ee(e);
                            return Ei(a, A(a, ee(t))).join("")
                        }

                        function Sc(e, t) {
                            var n = Ne,
                                a = De;
                            if (il(t)) {
                                var i = "separator" in t ? t.separator : i;
                                n = "length" in t ? Cl(t.length) : n, a = "omission" in t ? mi(t.omission) : a
                            }
                            e = Dl(e);
                            var r = e.length;
                            if (W(e)) {
                                var s = ee(e);
                                r = s.length
                            }
                            if (n >= r) return e;
                            var o = n - Z(a);
                            if (o < 1) return a;
                            var l = s ? Ei(s, 0, o).join("") : e.slice(0, o);
                            if (i === ie) return l + a;
                            if (s && (o += l.length - o), _p(i)) {
                                if (e.slice(o).search(i)) {
                                    var c, u = l;
                                    for (i.global || (i = lu(i.source, Dl(Wt.exec(i)) + "g")), i.lastIndex = 0; c = i.exec(u);) var d = c.index;
                                    l = l.slice(0, d === ie ? o : d)
                                }
                            } else if (e.indexOf(mi(i), o) != o) {
                                var p = l.lastIndexOf(i);
                                p > -1 && (l = l.slice(0, p))
                            }
                            return l + a
                        }

                        function Ec(e) {
                            return e = Dl(e), e && St.test(e) ? e.replace(_t, Jn) : e
                        }

                        function wc(e, t, n) {
                            return e = Dl(e), t = n ? ie : t, t === ie ? q(e) ? ae(e) : _(e) : e.match(t) || []
                        }

                        function Nc(e) {
                            var t = null == e ? 0 : e.length,
                                n = _r();
                            return e = t ? f(e, function(e) {
                                if ("function" != typeof e[1]) throw new uu(oe);
                                return [n(e[0]), e[1]]
                            }) : [], ni(function(n) {
                                for (var a = -1; ++a < t;) {
                                    var i = e[a];
                                    if (o(i[0], this, n)) return o(i[1], this, n)
                                }
                            })
                        }

                        function Dc(e) {
                            return ia(aa(e, de))
                        }

                        function Ic(e) {
                            return function() {
                                return e
                            }
                        }

                        function Oc(e, t) {
                            return null == e || e !== e ? t : e
                        }

                        function Uc(e) {
                            return e
                        }

                        function xc(e) {
                            return Ma("function" == typeof e ? e : aa(e, de))
                        }

                        function Tc(e) {
                            return Va(aa(e, de))
                        }

                        function Lc(e, t) {
                            return Wa(e, aa(t, de))
                        }

                        function Fc(e, t, n) {
                            var a = Pl(t),
                                i = fa(t, a);
                            null != n || il(t) && (i.length || !a.length) || (n = t, t = e, e = this, i = fa(t, Pl(t)));
                            var r = !(il(n) && "chain" in n && !n.chain),
                                s = tl(e);
                            return c(i, function(n) {
                                var a = t[n];
                                e[n] = a, s && (e.prototype[n] = function() {
                                    var t = this.__chain__;
                                    if (r || t) {
                                        var n = e(this.__wrapped__);
                                        return (n.__actions__ = Mi(this.__actions__)).push({
                                            func: a,
                                            args: arguments,
                                            thisArg: e
                                        }), n.__chain__ = t, n
                                    }
                                    return a.apply(e, g([this.value()], arguments))
                                })
                            }), e
                        }

                        function jc() {
                            return Ln._ === this && (Ln._ = _u), this
                        }

                        function Bc() {}

                        function Mc(e) {
                            return e = Cl(e), ni(function(t) {
                                return Ga(t, e)
                            })
                        }

                        function Ac(e) {
                            return Br(e) ? I(Xr(e)) : Qa(e)
                        }

                        function Rc(e) {
                            return function(t) {
                                return null == e ? ie : ga(e, t)
                            }
                        }

                        function Pc() {
                            return []
                        }

                        function Hc() {
                            return !1
                        }

                        function Vc() {
                            return {}
                        }

                        function Wc() {
                            return ""
                        }

                        function qc() {
                            return !0
                        }

                        function zc(e, t) {
                            if ((e = Cl(e)) < 1 || e > Le) return [];
                            var n = Be,
                                a = Gu(e, Be);
                            t = _r(t), e -= Be;
                            for (var i = L(a, t); ++n < e;) t(n);
                            return i
                        }

                        function Gc(e) {
                            return gp(e) ? f(e, Xr) : gl(e) ? [e] : Mi(xd(Dl(e)))
                        }

                        function $c(e) {
                            var t = ++vu;
                            return Dl(e) + t
                        }

                        function Jc(e) {
                            return e && e.length ? ca(e, Uc, ka) : ie
                        }

                        function Kc(e, t) {
                            return e && e.length ? ca(e, _r(t, 2), ka) : ie
                        }

                        function Qc(e) {
                            return D(e, Uc)
                        }

                        function Yc(e, t) {
                            return D(e, _r(t, 2))
                        }

                        function Xc(e) {
                            return e && e.length ? ca(e, Uc, Pa) : ie
                        }

                        function Zc(e, t) {
                            return e && e.length ? ca(e, _r(t, 2), Pa) : ie
                        }

                        function eu(e) {
                            return e && e.length ? T(e, Uc) : 0
                        }

                        function tu(e, t) {
                            return e && e.length ? T(e, _r(t, 2)) : 0
                        }
                        t = null == t ? Ln : Kn.defaults(Ln.Object(), t, Kn.pick(Ln, _n));
                        var nu = t.Array,
                            au = t.Date,
                            iu = t.Error,
                            ru = t.Function,
                            su = t.Math,
                            ou = t.Object,
                            lu = t.RegExp,
                            cu = t.String,
                            uu = t.TypeError,
                            du = nu.prototype,
                            pu = ru.prototype,
                            mu = ou.prototype,
                            hu = t["__core-js_shared__"],
                            fu = pu.toString,
                            gu = mu.hasOwnProperty,
                            vu = 0,
                            bu = function() {
                                var e = /[^.]+$/.exec(hu && hu.keys && hu.keys.IE_PROTO || "");
                                return e ? "Symbol(src)_1." + e : ""
                            }(),
                            ku = mu.toString,
                            yu = fu.call(ou),
                            _u = Ln._,
                            Cu = lu("^" + fu.call(gu).replace(Tt, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                            Su = Bn ? t.Buffer : ie,
                            Eu = t.Symbol,
                            wu = t.Uint8Array,
                            Nu = Su ? Su.allocUnsafe : ie,
                            Du = $(ou.getPrototypeOf, ou),
                            Iu = ou.create,
                            Ou = mu.propertyIsEnumerable,
                            Uu = du.splice,
                            xu = Eu ? Eu.isConcatSpreadable : ie,
                            Tu = Eu ? Eu.iterator : ie,
                            Lu = Eu ? Eu.toStringTag : ie,
                            Fu = function() {
                                try {
                                    var e = Er(ou, "defineProperty");
                                    return e({}, "", {}), e
                                } catch (e) {}
                            }(),
                            ju = t.clearTimeout !== Ln.clearTimeout && t.clearTimeout,
                            Bu = au && au.now !== Ln.Date.now && au.now,
                            Mu = t.setTimeout !== Ln.setTimeout && t.setTimeout,
                            Au = su.ceil,
                            Ru = su.floor,
                            Pu = ou.getOwnPropertySymbols,
                            Hu = Su ? Su.isBuffer : ie,
                            Vu = t.isFinite,
                            Wu = du.join,
                            qu = $(ou.keys, ou),
                            zu = su.max,
                            Gu = su.min,
                            $u = au.now,
                            Ju = t.parseInt,
                            Ku = su.random,
                            Qu = du.reverse,
                            Yu = Er(t, "DataView"),
                            Xu = Er(t, "Map"),
                            Zu = Er(t, "Promise"),
                            ed = Er(t, "Set"),
                            td = Er(t, "WeakMap"),
                            nd = Er(ou, "create"),
                            ad = td && new td,
                            id = {},
                            rd = Zr(Yu),
                            sd = Zr(Xu),
                            od = Zr(Zu),
                            ld = Zr(ed),
                            cd = Zr(td),
                            ud = Eu ? Eu.prototype : ie,
                            dd = ud ? ud.valueOf : ie,
                            pd = ud ? ud.toString : ie,
                            md = function() {
                                function e() {}
                                return function(t) {
                                    if (!il(t)) return {};
                                    if (Iu) return Iu(t);
                                    e.prototype = t;
                                    var n = new e;
                                    return e.prototype = ie, n
                                }
                            }();
                        n.templateSettings = {
                            escape: wt,
                            evaluate: Nt,
                            interpolate: Dt,
                            variable: "",
                            imports: {
                                _: n
                            }
                        }, n.prototype = a.prototype, n.prototype.constructor = n, i.prototype = md(a.prototype), i.prototype.constructor = i, y.prototype = md(a.prototype), y.prototype.constructor = y, ne.prototype.clear = Pt, ne.prototype.delete = Xt, ne.prototype.get = Zt, ne.prototype.has = en, ne.prototype.set = tn, nn.prototype.clear = an, nn.prototype.delete = rn, nn.prototype.get = sn, nn.prototype.has = on, nn.prototype.set = ln, cn.prototype.clear = un, cn.prototype.delete = dn, cn.prototype.get = pn, cn.prototype.has = mn, cn.prototype.set = hn, vn.prototype.add = vn.prototype.push = bn, vn.prototype.has = kn, yn.prototype.clear = wn, yn.prototype.delete = Nn, yn.prototype.get = Dn, yn.prototype.has = In, yn.prototype.set = xn;
                        var hd = Wi(ma),
                            fd = Wi(ha, !0),
                            gd = qi(),
                            vd = qi(!0),
                            bd = ad ? function(e, t) {
                                return ad.set(e, t), e
                            } : Uc,
                            kd = Fu ? function(e, t) {
                                return Fu(e, "toString", {
                                    configurable: !0,
                                    enumerable: !1,
                                    value: Ic(t),
                                    writable: !0
                                })
                            } : Uc,
                            yd = ni,
                            _d = ju || function(e) {
                                return Ln.clearTimeout(e)
                            },
                            Cd = ed && 1 / K(new ed([, -0]))[1] == Te ? function(e) {
                                return new ed(e)
                            } : Bc,
                            Sd = ad ? function(e) {
                                return ad.get(e)
                            } : Bc,
                            Ed = Pu ? function(e) {
                                return null == e ? [] : (e = ou(e), p(Pu(e), function(t) {
                                    return Ou.call(e, t)
                                }))
                            } : Pc,
                            wd = Pu ? function(e) {
                                for (var t = []; e;) g(t, Ed(e)), e = Du(e);
                                return t
                            } : Pc,
                            Nd = ba;
                        (Yu && Nd(new Yu(new ArrayBuffer(1))) != lt || Xu && Nd(new Xu) != Ke || Zu && "[object Promise]" != Nd(Zu.resolve()) || ed && Nd(new ed) != tt || td && Nd(new td) != rt) && (Nd = function(e) {
                            var t = ba(e),
                                n = t == Xe ? e.constructor : ie,
                                a = n ? Zr(n) : "";
                            if (a) switch (a) {
                                case rd:
                                    return lt;
                                case sd:
                                    return Ke;
                                case od:
                                    return "[object Promise]";
                                case ld:
                                    return tt;
                                case cd:
                                    return rt
                            }
                            return t
                        });
                        var Dd = hu ? tl : Hc,
                            Id = Qr(bd),
                            Od = Mu || function(e, t) {
                                return Ln.setTimeout(e, t)
                            },
                            Ud = Qr(kd),
                            xd = function(e) {
                                var t = xo(e, function(e) {
                                        return n.size === ce && n.clear(), e
                                    }),
                                    n = t.cache;
                                return t
                            }(function(e) {
                                var t = [];
                                return Ut.test(e) && t.push(""), e.replace(xt, function(e, n, a, i) {
                                    t.push(a ? i.replace(Ht, "$1") : n || e)
                                }), t
                            }),
                            Td = ni(function(e, t) {
                                return $o(e) ? oa(e, pa(t, 1, $o, !0)) : []
                            }),
                            Ld = ni(function(e, t) {
                                var n = ys(t);
                                return $o(n) && (n = ie), $o(e) ? oa(e, pa(t, 1, $o, !0), _r(n, 2)) : []
                            }),
                            Fd = ni(function(e, t) {
                                var n = ys(t);
                                return $o(n) && (n = ie), $o(e) ? oa(e, pa(t, 1, $o, !0), ie, n) : []
                            }),
                            jd = ni(function(e) {
                                var t = f(e, _i);
                                return t.length && t[0] === e[0] ? Sa(t) : []
                            }),
                            Bd = ni(function(e) {
                                var t = ys(e),
                                    n = f(e, _i);
                                return t === ys(n) ? t = ie : n.pop(), n.length && n[0] === e[0] ? Sa(n, _r(t, 2)) : []
                            }),
                            Md = ni(function(e) {
                                var t = ys(e),
                                    n = f(e, _i);
                                return t = "function" == typeof t ? t : ie, t && n.pop(), n.length && n[0] === e[0] ? Sa(n, ie, t) : []
                            }),
                            Ad = ni(Ss),
                            Rd = gr(function(e, t) {
                                var n = null == e ? 0 : e.length,
                                    a = ta(e, t);
                                return Xa(e, f(t, function(e) {
                                    return Fr(e, n) ? +e : e
                                }).sort(Li)), a
                            }),
                            Pd = ni(function(e) {
                                return hi(pa(e, 1, $o, !0))
                            }),
                            Hd = ni(function(e) {
                                var t = ys(e);
                                return $o(t) && (t = ie), hi(pa(e, 1, $o, !0), _r(t, 2))
                            }),
                            Vd = ni(function(e) {
                                var t = ys(e);
                                return t = "function" == typeof t ? t : ie, hi(pa(e, 1, $o, !0), ie, t)
                            }),
                            Wd = ni(function(e, t) {
                                return $o(e) ? oa(e, t) : []
                            }),
                            qd = ni(function(e) {
                                return ki(p(e, $o))
                            }),
                            zd = ni(function(e) {
                                var t = ys(e);
                                return $o(t) && (t = ie), ki(p(e, $o), _r(t, 2))
                            }),
                            Gd = ni(function(e) {
                                var t = ys(e);
                                return t = "function" == typeof t ? t : ie, ki(p(e, $o), ie, t)
                            }),
                            $d = ni(zs),
                            Jd = ni(function(e) {
                                var t = e.length,
                                    n = t > 1 ? e[t - 1] : ie;
                                return n = "function" == typeof n ? (e.pop(), n) : ie, Gs(e, n)
                            }),
                            Kd = gr(function(e) {
                                var t = e.length,
                                    n = t ? e[0] : 0,
                                    a = this.__wrapped__,
                                    r = function(t) {
                                        return ta(t, e)
                                    };
                                return !(t > 1 || this.__actions__.length) && a instanceof y && Fr(n) ? (a = a.slice(n, +n + (t ? 1 : 0)), a.__actions__.push({
                                    func: Ys,
                                    args: [r],
                                    thisArg: ie
                                }), new i(a, this.__chain__).thru(function(e) {
                                    return t && !e.length && e.push(ie), e
                                })) : this.thru(r)
                            }),
                            Qd = Hi(function(e, t, n) {
                                gu.call(e, n) ? ++e[n] : ea(e, n, 1)
                            }),
                            Yd = Qi(us),
                            Xd = Qi(ds),
                            Zd = Hi(function(e, t, n) {
                                gu.call(e, n) ? e[n].push(t) : ea(e, n, [t])
                            }),
                            ep = ni(function(e, t, n) {
                                var a = -1,
                                    i = "function" == typeof t,
                                    r = Go(e) ? nu(e.length) : [];
                                return hd(e, function(e) {
                                    r[++a] = i ? o(t, e, n) : wa(e, t, n)
                                }), r
                            }),
                            tp = Hi(function(e, t, n) {
                                ea(e, n, t)
                            }),
                            np = Hi(function(e, t, n) {
                                e[n ? 0 : 1].push(t)
                            }, function() {
                                return [
                                    [],
                                    []
                                ]
                            }),
                            ap = ni(function(e, t) {
                                if (null == e) return [];
                                var n = t.length;
                                return n > 1 && jr(e, t[0], t[1]) ? t = [] : n > 2 && jr(t[0], t[1], t[2]) && (t = [t[0]]), $a(e, pa(t, 1), [])
                            }),
                            ip = Bu || function() {
                                return Ln.Date.now()
                            },
                            rp = ni(function(e, t, n) {
                                var a = ge;
                                if (n.length) {
                                    var i = J(n, yr(rp));
                                    a |= _e
                                }
                                return cr(e, a, t, n, i)
                            }),
                            sp = ni(function(e, t, n) {
                                var a = ge | ve;
                                if (n.length) {
                                    var i = J(n, yr(sp));
                                    a |= _e
                                }
                                return cr(t, a, e, n, i)
                            }),
                            op = ni(function(e, t) {
                                return sa(e, 1, t)
                            }),
                            lp = ni(function(e, t, n) {
                                return sa(e, El(t) || 0, n)
                            });
                        xo.Cache = cn;
                        var cp = yd(function(e, t) {
                                t = 1 == t.length && gp(t[0]) ? f(t[0], j(_r())) : f(pa(t, 1), j(_r()));
                                var n = t.length;
                                return ni(function(a) {
                                    for (var i = -1, r = Gu(a.length, n); ++i < r;) a[i] = t[i].call(this, a[i]);
                                    return o(e, this, a)
                                })
                            }),
                            up = ni(function(e, t) {
                                var n = J(t, yr(up));
                                return cr(e, _e, ie, t, n)
                            }),
                            dp = ni(function(e, t) {
                                var n = J(t, yr(dp));
                                return cr(e, Ce, ie, t, n)
                            }),
                            pp = gr(function(e, t) {
                                return cr(e, Ee, ie, ie, ie, t)
                            }),
                            mp = rr(ka),
                            hp = rr(function(e, t) {
                                return e >= t
                            }),
                            fp = Na(function() {
                                return arguments
                            }()) ? Na : function(e) {
                                return rl(e) && gu.call(e, "callee") && !Ou.call(e, "callee")
                            },
                            gp = nu.isArray,
                            vp = Rn ? j(Rn) : Da,
                            bp = Hu || Hc,
                            kp = Pn ? j(Pn) : Ia,
                            yp = Hn ? j(Hn) : xa,
                            _p = Vn ? j(Vn) : Fa,
                            Cp = Wn ? j(Wn) : ja,
                            Sp = qn ? j(qn) : Ba,
                            Ep = rr(Pa),
                            wp = rr(function(e, t) {
                                return e <= t
                            }),
                            Np = Vi(function(e, t) {
                                if (Pr(t) || Go(t)) return void Ai(t, Pl(t), e);
                                for (var n in t) gu.call(t, n) && zn(e, n, t[n])
                            }),
                            Dp = Vi(function(e, t) {
                                Ai(t, Hl(t), e)
                            }),
                            Ip = Vi(function(e, t, n, a) {
                                Ai(t, Hl(t), e, a)
                            }),
                            Op = Vi(function(e, t, n, a) {
                                Ai(t, Pl(t), e, a)
                            }),
                            Up = gr(ta),
                            xp = ni(function(e) {
                                return e.push(ie, ur), o(Ip, ie, e)
                            }),
                            Tp = ni(function(e) {
                                return e.push(ie, dr), o(Mp, ie, e)
                            }),
                            Lp = Zi(function(e, t, n) {
                                e[t] = n
                            }, Ic(Uc)),
                            Fp = Zi(function(e, t, n) {
                                gu.call(e, t) ? e[t].push(n) : e[t] = [n]
                            }, _r),
                            jp = ni(wa),
                            Bp = Vi(function(e, t, n) {
                                qa(e, t, n)
                            }),
                            Mp = Vi(function(e, t, n, a) {
                                qa(e, t, n, a)
                            }),
                            Ap = gr(function(e, t) {
                                var n = {};
                                if (null == e) return n;
                                var a = !1;
                                t = f(t, function(t) {
                                    return t = Si(t, e), a || (a = t.length > 1), t
                                }), Ai(e, br(e), n), a && (n = aa(n, de | pe | me, pr));
                                for (var i = t.length; i--;) fi(n, t[i]);
                                return n
                            }),
                            Rp = gr(function(e, t) {
                                return null == e ? {} : Ja(e, t)
                            }),
                            Pp = lr(Pl),
                            Hp = lr(Hl),
                            Vp = $i(function(e, t, n) {
                                return t = t.toLowerCase(), e + (n ? ic(t) : t)
                            }),
                            Wp = $i(function(e, t, n) {
                                return e + (n ? "-" : "") + t.toLowerCase()
                            }),
                            qp = $i(function(e, t, n) {
                                return e + (n ? " " : "") + t.toLowerCase()
                            }),
                            zp = Gi("toLowerCase"),
                            Gp = $i(function(e, t, n) {
                                return e + (n ? "_" : "") + t.toLowerCase()
                            }),
                            $p = $i(function(e, t, n) {
                                return e + (n ? " " : "") + Kp(t)
                            }),
                            Jp = $i(function(e, t, n) {
                                return e + (n ? " " : "") + t.toUpperCase()
                            }),
                            Kp = Gi("toUpperCase"),
                            Qp = ni(function(e, t) {
                                try {
                                    return o(e, ie, t)
                                } catch (e) {
                                    return Zo(e) ? e : new iu(e)
                                }
                            }),
                            Yp = gr(function(e, t) {
                                return c(t, function(t) {
                                    t = Xr(t), ea(e, t, rp(e[t], e))
                                }), e
                            }),
                            Xp = Yi(),
                            Zp = Yi(!0),
                            em = ni(function(e, t) {
                                return function(n) {
                                    return wa(n, e, t)
                                }
                            }),
                            tm = ni(function(e, t) {
                                return function(n) {
                                    return wa(e, n, t)
                                }
                            }),
                            nm = tr(f),
                            am = tr(d),
                            im = tr(k),
                            rm = ir(),
                            sm = ir(!0),
                            om = er(function(e, t) {
                                return e + t
                            }, 0),
                            lm = or("ceil"),
                            cm = er(function(e, t) {
                                return e / t
                            }, 1),
                            um = or("floor"),
                            dm = er(function(e, t) {
                                return e * t
                            }, 1),
                            pm = or("round"),
                            mm = er(function(e, t) {
                                return e - t
                            }, 0);
                        return n.after = Eo, n.ary = wo, n.assign = Np, n.assignIn = Dp, n.assignInWith = Ip, n.assignWith = Op, n.at = Up, n.before = No, n.bind = rp, n.bindAll = Yp, n.bindKey = sp, n.castArray = Ro, n.chain = Ks, n.chunk = ns, n.compact = as, n.concat = is, n.cond = Nc, n.conforms = Dc, n.constant = Ic, n.countBy = Qd, n.create = Il, n.curry = Do, n.curryRight = Io, n.debounce = Oo, n.defaults = xp, n.defaultsDeep = Tp, n.defer = op, n.delay = lp, n.difference = Td, n.differenceBy = Ld, n.differenceWith = Fd, n.drop = rs, n.dropRight = ss, n.dropRightWhile = os, n.dropWhile = ls, n.fill = cs, n.filter = so, n.flatMap = oo, n.flatMapDeep = lo, n.flatMapDepth = co, n.flatten = ps, n.flattenDeep = ms, n.flattenDepth = hs, n.flip = Uo, n.flow = Xp, n.flowRight = Zp, n.fromPairs = fs, n.functions = jl, n.functionsIn = Bl, n.groupBy = Zd, n.initial = bs, n.intersection = jd, n.intersectionBy = Bd, n.intersectionWith = Md, n.invert = Lp, n.invertBy = Fp, n.invokeMap = ep, n.iteratee = xc, n.keyBy = tp, n.keys = Pl, n.keysIn = Hl, n.map = ho, n.mapKeys = Vl, n.mapValues = Wl, n.matches = Tc, n.matchesProperty = Lc, n.memoize = xo, n.merge = Bp, n.mergeWith = Mp, n.method = em, n.methodOf = tm, n.mixin = Fc, n.negate = To, n.nthArg = Mc, n.omit = Ap, n.omitBy = ql, n.once = Lo, n.orderBy = fo, n.over = nm, n.overArgs = cp, n.overEvery = am, n.overSome = im, n.partial = up, n.partialRight = dp, n.partition = np, n.pick = Rp, n.pickBy = zl, n.property = Ac, n.propertyOf = Rc, n.pull = Ad, n.pullAll = Ss, n.pullAllBy = Es, n.pullAllWith = ws, n.pullAt = Rd, n.range = rm, n.rangeRight = sm, n.rearg = pp, n.reject = bo, n.remove = Ns, n.rest = Fo, n.reverse = Ds, n.sampleSize = yo, n.set = $l, n.setWith = Jl, n.shuffle = _o, n.slice = Is, n.sortBy = ap, n.sortedUniq = js, n.sortedUniqBy = Bs, n.split = fc, n.spread = jo, n.tail = Ms, n.take = As, n.takeRight = Rs, n.takeRightWhile = Ps, n.takeWhile = Hs, n.tap = Qs, n.throttle = Bo, n.thru = Ys, n.toArray = yl, n.toPairs = Pp, n.toPairsIn = Hp, n.toPath = Gc, n.toPlainObject = wl, n.transform = Kl, n.unary = Mo, n.union = Pd, n.unionBy = Hd, n.unionWith = Vd, n.uniq = Vs, n.uniqBy = Ws, n.uniqWith = qs, n.unset = Ql, n.unzip = zs, n.unzipWith = Gs, n.update = Yl, n.updateWith = Xl, n.values = Zl, n.valuesIn = ec, n.without = Wd, n.words = wc, n.wrap = Ao, n.xor = qd, n.xorBy = zd, n.xorWith = Gd, n.zip = $d, n.zipObject = $s, n.zipObjectDeep = Js, n.zipWith = Jd, n.entries = Pp, n.entriesIn = Hp, n.extend = Dp, n.extendWith = Ip, Fc(n, n), n.add = om, n.attempt = Qp, n.camelCase = Vp, n.capitalize = ic, n.ceil = lm, n.clamp = tc, n.clone = Po, n.cloneDeep = Vo, n.cloneDeepWith = Wo, n.cloneWith = Ho, n.conformsTo = qo, n.deburr = rc, n.defaultTo = Oc, n.divide = cm, n.endsWith = sc, n.eq = zo, n.escape = oc, n.escapeRegExp = lc, n.every = ro, n.find = Yd, n.findIndex = us, n.findKey = Ol, n.findLast = Xd, n.findLastIndex = ds, n.findLastKey = Ul, n.floor = um, n.forEach = uo, n.forEachRight = po, n.forIn = xl, n.forInRight = Tl, n.forOwn = Ll, n.forOwnRight = Fl, n.get = Ml, n.gt = mp, n.gte = hp, n.has = Al, n.hasIn = Rl, n.head = gs, n.identity = Uc, n.includes = mo, n.indexOf = vs, n.inRange = nc, n.invoke = jp, n.isArguments = fp, n.isArray = gp, n.isArrayBuffer = vp, n.isArrayLike = Go, n.isArrayLikeObject = $o, n.isBoolean = Jo, n.isBuffer = bp, n.isDate = kp, n.isElement = Ko, n.isEmpty = Qo, n.isEqual = Yo, n.isEqualWith = Xo, n.isError = Zo, n.isFinite = el, n.isFunction = tl, n.isInteger = nl, n.isLength = al, n.isMap = yp, n.isMatch = sl, n.isMatchWith = ol, n.isNaN = ll, n.isNative = cl, n.isNil = dl, n.isNull = ul, n.isNumber = pl, n.isObject = il, n.isObjectLike = rl, n.isPlainObject = ml, n.isRegExp = _p, n.isSafeInteger = hl, n.isSet = Cp, n.isString = fl, n.isSymbol = gl, n.isTypedArray = Sp, n.isUndefined = vl, n.isWeakMap = bl, n.isWeakSet = kl, n.join = ks, n.kebabCase = Wp, n.last = ys, n.lastIndexOf = _s, n.lowerCase = qp, n.lowerFirst = zp, n.lt = Ep, n.lte = wp, n.max = Jc, n.maxBy = Kc, n.mean = Qc, n.meanBy = Yc, n.min = Xc, n.minBy = Zc, n.stubArray = Pc, n.stubFalse = Hc, n.stubObject = Vc, n.stubString = Wc, n.stubTrue = qc, n.multiply = dm, n.nth = Cs, n.noConflict = jc, n.noop = Bc, n.now = ip, n.pad = cc, n.padEnd = uc, n.padStart = dc, n.parseInt = pc, n.random = ac, n.reduce = go, n.reduceRight = vo, n.repeat = mc, n.replace = hc, n.result = Gl, n.round = pm, n.runInContext = e, n.sample = ko, n.size = Co, n.snakeCase = Gp, n.some = So, n.sortedIndex = Os, n.sortedIndexBy = Us, n.sortedIndexOf = xs, n.sortedLastIndex = Ts, n.sortedLastIndexBy = Ls, n.sortedLastIndexOf = Fs, n.startCase = $p, n.startsWith = gc, n.subtract = mm, n.sum = eu, n.sumBy = tu, n.template = vc, n.times = zc, n.toFinite = _l, n.toInteger = Cl, n.toLength = Sl, n.toLower = bc, n.toNumber = El, n.toSafeInteger = Nl, n.toString = Dl, n.toUpper = kc, n.trim = yc, n.trimEnd = _c, n.trimStart = Cc, n.truncate = Sc, n.unescape = Ec, n.uniqueId = $c, n.upperCase = Jp, n.upperFirst = Kp, n.each = uo, n.eachRight = po, n.first = gs, Fc(n, function() {
                            var e = {};
                            return ma(n, function(t, a) {
                                gu.call(n.prototype, a) || (e[a] = t)
                            }), e
                        }(), {
                            chain: !1
                        }), n.VERSION = "4.17.4", c(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(e) {
                            n[e].placeholder = n
                        }), c(["drop", "take"], function(e, t) {
                            y.prototype[e] = function(n) {
                                n = n === ie ? 1 : zu(Cl(n), 0);
                                var a = this.__filtered__ && !t ? new y(this) : this.clone();
                                return a.__filtered__ ? a.__takeCount__ = Gu(n, a.__takeCount__) : a.__views__.push({
                                    size: Gu(n, Be),
                                    type: e + (a.__dir__ < 0 ? "Right" : "")
                                }), a
                            }, y.prototype[e + "Right"] = function(t) {
                                return this.reverse()[e](t).reverse()
                            }
                        }), c(["filter", "map", "takeWhile"], function(e, t) {
                            var n = t + 1,
                                a = n == Ue || 3 == n;
                            y.prototype[e] = function(e) {
                                var t = this.clone();
                                return t.__iteratees__.push({
                                    iteratee: _r(e, 3),
                                    type: n
                                }), t.__filtered__ = t.__filtered__ || a, t
                            }
                        }), c(["head", "last"], function(e, t) {
                            var n = "take" + (t ? "Right" : "");
                            y.prototype[e] = function() {
                                return this[n](1).value()[0]
                            }
                        }), c(["initial", "tail"], function(e, t) {
                            var n = "drop" + (t ? "" : "Right");
                            y.prototype[e] = function() {
                                return this.__filtered__ ? new y(this) : this[n](1)
                            }
                        }), y.prototype.compact = function() {
                            return this.filter(Uc)
                        }, y.prototype.find = function(e) {
                            return this.filter(e).head()
                        }, y.prototype.findLast = function(e) {
                            return this.reverse().find(e)
                        }, y.prototype.invokeMap = ni(function(e, t) {
                            return "function" == typeof e ? new y(this) : this.map(function(n) {
                                return wa(n, e, t)
                            })
                        }), y.prototype.reject = function(e) {
                            return this.filter(To(_r(e)))
                        }, y.prototype.slice = function(e, t) {
                            e = Cl(e);
                            var n = this;
                            return n.__filtered__ && (e > 0 || t < 0) ? new y(n) : (e < 0 ? n = n.takeRight(-e) : e && (n = n.drop(e)), t !== ie && (t = Cl(t), n = t < 0 ? n.dropRight(-t) : n.take(t - e)), n)
                        }, y.prototype.takeRightWhile = function(e) {
                            return this.reverse().takeWhile(e).reverse()
                        }, y.prototype.toArray = function() {
                            return this.take(Be)
                        }, ma(y.prototype, function(e, t) {
                            var a = /^(?:filter|find|map|reject)|While$/.test(t),
                                r = /^(?:head|last)$/.test(t),
                                s = n[r ? "take" + ("last" == t ? "Right" : "") : t],
                                o = r || /^find/.test(t);
                            s && (n.prototype[t] = function() {
                                var t = this.__wrapped__,
                                    l = r ? [1] : arguments,
                                    c = t instanceof y,
                                    u = l[0],
                                    d = c || gp(t),
                                    p = function(e) {
                                        var t = s.apply(n, g([e], l));
                                        return r && m ? t[0] : t
                                    };
                                d && a && "function" == typeof u && 1 != u.length && (c = d = !1);
                                var m = this.__chain__,
                                    h = !!this.__actions__.length,
                                    f = o && !m,
                                    v = c && !h;
                                if (!o && d) {
                                    t = v ? t : new y(this);
                                    var b = e.apply(t, l);
                                    return b.__actions__.push({
                                        func: Ys,
                                        args: [p],
                                        thisArg: ie
                                    }), new i(b, m)
                                }
                                return f && v ? e.apply(this, l) : (b = this.thru(p), f ? r ? b.value()[0] : b.value() : b)
                            })
                        }), c(["pop", "push", "shift", "sort", "splice", "unshift"], function(e) {
                            var t = du[e],
                                a = /^(?:push|sort|unshift)$/.test(e) ? "tap" : "thru",
                                i = /^(?:pop|shift)$/.test(e);
                            n.prototype[e] = function() {
                                var e = arguments;
                                if (i && !this.__chain__) {
                                    var n = this.value();
                                    return t.apply(gp(n) ? n : [], e)
                                }
                                return this[a](function(n) {
                                    return t.apply(gp(n) ? n : [], e)
                                })
                            }
                        }), ma(y.prototype, function(e, t) {
                            var a = n[t];
                            if (a) {
                                var i = a.name + "";
                                (id[i] || (id[i] = [])).push({
                                    name: t,
                                    func: a
                                })
                            }
                        }), id[Xi(ie, ve).name] = [{
                            name: "wrapper",
                            func: ie
                        }], y.prototype.clone = O, y.prototype.reverse = Y, y.prototype.value = te, n.prototype.at = Kd, n.prototype.chain = Xs, n.prototype.commit = Zs, n.prototype.next = eo, n.prototype.plant = no, n.prototype.reverse = ao, n.prototype.toJSON = n.prototype.valueOf = n.prototype.value = io, n.prototype.first = n.prototype.head, Tu && (n.prototype[Tu] = to), n
                    }();
                Ln._ = Kn, (i = function() {
                    return Kn
                }.call(t, n, t, a)) !== ie && (a.exports = i)
            }).call(this)
        }).call(t, n(34), n(444)(e))
    },
    853: function(e, t, n) {
        "use strict";

        function a(e, t, n, a) {
            return {
                type: e,
                id: Object(i.a)(t + "-mod"),
                userLogin: t,
                reason: n,
                duration: a
            }
        }
        t.a = a;
        var i = n(816)
    },
    854: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return r
        });
        var a = n(1),
            i = (n.n(a), n(844)),
            r = function(e) {
                var t = Object.keys(e.badgesToRender).map(function(t) {
                        var n = e.badgesToRender[t],
                            r = e.badgeSets.getBadge(t, n);
                        return null === r ? null : a.createElement(i.a, {
                            key: r.setID + "/" + r.version,
                            badge: r
                        })
                    }),
                    n = t.filter(function(e) {
                        return null !== e
                    });
                return a.createElement("span", null, n)
            }
    },
    855: function(e, t, n) {
        e.exports = n.p + "assets/gift3-03f7dd6edab76b3567ff92bba447d5cb.png"
    },
    856: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ClipsChatCard_Clip"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "slug"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "clip"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "slug"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "slug"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "url"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "curator"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "broadcaster"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "game"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "title"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "thumbnailURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 233
            }
        };
        n.loc.source = {
            body: "query ClipsChatCard_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    slug\n    url\n    curator {\n      displayName\n    }\n    broadcaster {\n      displayName\n    }\n    game {\n      displayName\n    }\n    title\n    thumbnailURL\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    857: function(e, t, n) {
        "use strict";
        n.d(t, "b", function() {
            return l
        }), n.d(t, "a", function() {
            return c
        }), n.d(t, "c", function() {
            return u
        });
        var a = n(0),
            i = n(2),
            r = n(13),
            s = n(845),
            o = n(834),
            l = function(e) {
                i.m.track(r.SpadeEventType.ChatSettingsOpened, Object(o.a)(e))
            },
            c = function(e) {
                var t = a.__assign({}, Object(o.a)(e), {
                    setting_name: e.settingName,
                    new_value: e.newValue.toString()
                });
                i.m.track(r.SpadeEventType.ChatSettingsChanged, t)
            },
            u = function(e) {
                var t = a.__assign({}, Object(o.a)(e), {
                    setting_name: s.a.FollowerDuration,
                    new_value: e.newValue.toString(),
                    follower_mode_on: e.followerModeOn
                });
                i.m.track(r.SpadeEventType.ChatSettingsChanged, t)
            }
    },
    858: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = document.createElement("textarea");
            t.style.position = "fixed", t.style.top = "0", t.style.left = "0", t.style.width = "2em", t.style.height = "2em", t.style.padding = "0", t.style.border = "none", t.style.outline = "none", t.style.boxShadow = "none", t.style.background = "transparent", t.value = e, document.body.appendChild(t), t.select();
            var n = !0;
            try {
                n = document.execCommand("copy")
            } catch (e) {
                n = !1
            }
            return document.body.removeChild(t), n
        }
        t.a = a
    },
    859: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "WatchAdModal_Redeeem"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "RedeemTrueXAdInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "redeemTrueXAd"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "grantedBits"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 114
            }
        };
        n.loc.source = {
            body: "mutation WatchAdModal_Redeeem($input:RedeemTrueXAdInput!) {\n  redeemTrueXAd(input:$input) {\n    grantedBits\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    860: function(e, t) {},
    861: function(e, t) {},
    862: function(e, t) {},
    863: function(e, t) {},
    864: function(e, t) {},
    865: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Bits_BuyCard_Offers"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "withChannel"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isLoggedIn"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsOffers"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "skip"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "bitsOffersFragment"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "idSHA1"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsOffers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "bitsOffersFragment"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "withChannel"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 528
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/bits/models/bits-offers-fragment.gql"\n\nquery Bits_BuyCard_Offers($withChannel: Boolean!, $isLoggedIn: Boolean!, $channelLogin: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffersFragment\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffersFragment\n    }\n  }\n  user(login: $channelLogin) @include(if: $withChannel) {\n    id\n    displayName\n    cheer {\n      id\n      settings {\n        cheerMinimumBits\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(841).definitions)), e.exports = a
    },
    866: function(e, t) {},
    867: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return s
        });
        var a = n(0),
            i = n(1),
            r = (n.n(i), n(3)),
            s = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isDraggingOver: !1
                    }, t.refHandler = function(e) {
                        t.fileInputRef = e
                    }, t.onFilePickerClick = function() {
                        t.fileInputRef.click()
                    }, t.onDragOver = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !0
                        })
                    }, t.onDragLeave = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !1
                        })
                    }, t.onFileInputChange = function(e) {
                        e.preventDefault(), t.finalizeSelections(e.target.files)
                    }, t.onFileDrop = function(e) {
                        e.preventDefault(), t.setState({
                            isDraggingOver: !1
                        }), t.finalizeSelections(e.dataTransfer.files)
                    }, t
                }
                return a.__extends(t, e), t.prototype.render = function() {
                    return i.createElement("div", {
                        "data-test-selector": "file-picker-root",
                        onClick: this.onFilePickerClick,
                        onDragLeave: this.onDragLeave,
                        onDragOver: this.onDragOver,
                        onDrop: this.onFileDrop
                    }, i.createElement(r.I, {
                        dragOver: this.state.isDraggingOver
                    }, i.createElement(r.P, {
                        display: r.H.Hide
                    }, i.createElement("input", {
                        accept: this.props.allowedFileTypes.join(","),
                        multiple: this.props.multiFile || !1,
                        onChange: this.onFileInputChange,
                        ref: this.refHandler,
                        type: "file"
                    })), this.props.children))
                }, t.prototype.finalizeSelections = function(e) {
                    e && this.props.onFilesSubmitted(Array.from(e))
                }, t
            }(i.Component)
    },
    869: function(e, t, n) {
        "use strict";

        function a(e) {
            if (e.action && e.userId) {
                var t = {
                    location: s.PageviewLocation.Channel,
                    action: e.action,
                    target: e.target,
                    type: e.type,
                    channel_id: e.channelId,
                    user_id: e.userId,
                    time: Date.now()
                };
                r.n.tracking.track(s.SpadeEventType.CrateNotificationAction, t)
            }
        }
        n.d(t, "a", function() {
            return i
        }), n.d(t, "b", function() {
            return o
        }), n.d(t, "c", function() {
            return l
        }), t.d = a;
        var i, r = n(2),
            s = n(13);
        ! function(e) {
            e.Close = "close", e.DontShowThis = "dont_show_this", e.LearnMore = "learn_more", e.OpenLater = "open_later", e.OpenNow = "open_now", e.Timeout = "timeout", e.TryBeta = "try_beta", e.View = "view"
        }(i || (i = {}));
        var o;
        ! function(e) {
            e.Inventory = "inventory", e.OpenCrate = "open_crate"
        }(o || (o = {}));
        var l;
        ! function(e) {
            e.Ftue = "ftue", e.ReceiveCrate = "receive_crate", e.BitsIntro = "bits_intro"
        }(l || (l = {}))
    },
    872: function(e, t) {},
    873: function(e, t) {},
    874: function(e, t, n) {
        "use strict";

        function a(e, t) {
            return e === r.SECOND ? Object(s.d)("{secondCount, plural, one {# second} other {# seconds}}", {
                secondCount: t
            }, "formatDuration") : e === r.MINUTE ? Object(s.d)("{minuteCount, plural, one {# minute} other {# minutes}}", {
                minuteCount: t
            }, "formatDuration") : e === r.DAY ? Object(s.d)("{dayCount, plural, one {# day} other {# days}}", {
                dayCount: t
            }, "formatDuration") : e === r.HOUR ? Object(s.d)("{hourCount, plural, one {# hour} other {# hours}}", {
                hourCount: t
            }, "formatDuration") : e === r.WEEK ? Object(s.d)("{weekCount, plural, one {# week} other {# weeks}}", {
                weekCount: t
            }, "formatDuration") : e === r.MONTH ? Object(s.d)("{monthCount, plural, one {# month} other {# months}}", {
                monthCount: t
            }, "formatDuration") : ""
        }

        function i(e) {
            if (e < 60) return a(r.SECOND, e);
            var t = Math.floor(e / 60),
                n = e % 60;
            if (t < 60) return n ? a(r.MINUTE, t) + " " + a(r.SECOND, n) : a(r.MINUTE, t);
            var i = Math.floor(t / 60);
            if (t %= 60, i < 24) return t ? a(r.HOUR, i) + " " + a(r.MINUTE, t) : a(r.HOUR, i);
            var s = Math.floor(i / 24);
            if (i %= 24, s < 7) return i ? a(r.DAY, s) + " " + a(r.HOUR, i) : a(r.DAY, s);
            if (s <= 26) {
                var o = Math.floor(s / 7);
                return s %= 7, s ? a(r.WEEK, o) + " " + a(r.DAY, s) : a(r.WEEK, o)
            }
            var l = Math.round((s + 3) / 30);
            return a(r.MONTH, l)
        }
        t.a = i;
        var r, s = n(2);
        ! function(e) {
            e[e.SECOND = 0] = "SECOND", e[e.MINUTE = 1] = "MINUTE", e[e.HOUR = 2] = "HOUR", e[e.DAY = 3] = "DAY", e[e.WEEK = 4] = "WEEK", e[e.MONTH = 5] = "MONTH"
        }(r || (r = {}))
    },
    875: function(e, t, n) {
        "use strict";
        n.d(t, "a", function() {
            return r
        });
        var a = n(1),
            i = (n.n(a), n(388)),
            r = function(e) {
                var t, n = e.emote,
                    r = n.alt || "";
                return n.cheerAmount && (r += " " + n.cheerAmount.toString(), t = a.createElement("strong", {
                    className: "chat-line__message--cheer-amount",
                    style: {
                        color: n.cheerColor
                    }
                }, n.cheerAmount)), a.createElement(i.a, {
                    alt: r,
                    cheerText: t,
                    className: "chat-line__message--emote",
                    srcKey: "1x",
                    srcSet: n.images
                })
            }
    },
    876: function(e, t, n) {
        "use strict";
        var a, i = n(0),
            r = n(1),
            s = n(2);
        ! function(e) {
            e.On = "on", e.Off = "off", e.StaffOnly = "staff"
        }(a || (a = {}));
        var o = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return i.__extends(t, e), t.prototype.render = function() {
                    var e = s.b.get(this.props.name, a.Off);
                    return e === a.On || e === a.StaffOnly && this.props.isStaff ? r.Children.only(this.props.children) : null
                }, t
            }(r.Component),
            l = o;
        n.d(t, "a", function() {
            return a
        }), n.d(t, !1, function() {
            return o
        }), n.d(t, "b", function() {
            return l
        })
    },
    879: function(e, t, n) {
        "use strict";
        var a = n(905);
        n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "b", function() {
            return a.b
        }), n.d(t, "a", function() {
            return a.a
        })
    },
    880: function(e, t, n) {
        "use strict";

        function a() {
            return Object(o.d)("Unable to ban user", "BlockUserMutation")
        }

        function i(e) {
            var t = this;
            return Object(l.a)(m, {
                props: function(n) {
                    return {
                        onBanUser: function(i, l) {
                            return void 0 === l && (l = null), s.__awaiter(t, void 0, void 0, function() {
                                var t, m, h, f, g, v;
                                return s.__generator(this, function(s) {
                                    switch (s.label) {
                                        case 0:
                                            if (t = l ? p.a.Timeout : p.a.Ban, m = e(n.ownProps), h = m.channelID, f = m.onPushMessage, !n.mutate) return [3, 5];
                                            s.label = 1;
                                        case 1:
                                            return s.trys.push([1, 3, , 4]), [4, n.mutate(Object(c.a)({
                                                channelID: h,
                                                bannedUserLogin: i,
                                                expiresIn: l && r(l)
                                            }))];
                                        case 2:
                                            return s.sent(), g = Object(d.a)(t, i, null, l), f && f(g), [2, g];
                                        case 3:
                                            throw v = s.sent(), o.i.error(v, "Unable to ban user"), f && f(Object(u.a)(a())), new Error(a());
                                        case 4:
                                            return [3, 6];
                                        case 5:
                                            throw f && f(Object(u.a)(a())), new Error(a());
                                        case 6:
                                            return [2]
                                    }
                                })
                            })
                        }
                    }
                }
            })
        }

        function r(e) {
            if (!e) return "0s";
            var t = e,
                n = "";
            if (t > b) {
                var a = Math.floor(t / b);
                t -= a * b, n += a + "mo"
            }
            if (t > v) {
                var i = Math.floor(t / v);
                t -= i * v, n += i + "w"
            }
            if (t > g) {
                var r = Math.floor(t / g);
                t -= r * g, n += r + "d"
            }
            if (t > f) {
                var s = Math.floor(t / f);
                t -= s * f, n += s + "h"
            }
            if (t > h) {
                var o = Math.floor(t / h);
                t -= o * h, n += o + "m"
            }
            return t > 0 && (n += t + "s"), n
        }
        t.a = i;
        var s = n(0),
            o = n(2),
            l = n(7),
            c = n(20),
            u = n(840),
            d = n(853),
            p = n(814),
            m = n(888),
            h = (n.n(m), 60),
            f = 60 * h,
            g = 24 * f,
            v = 7 * g,
            b = 4 * v
    },
    883: function(e, t) {},
    884: function(e, t) {},
    885: function(e, t) {},
    886: function(e, t) {},
    887: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "VideoChatCard_Video"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "videoID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "video"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "videoID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "title"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "previewThumbnailURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "90"
                                    }
                                }, {
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "height"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "51"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "publishedAt"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "owner"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "login"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayName"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 210
            }
        };
        n.loc.source = {
            body: "query VideoChatCard_Video($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    title\n    previewThumbnailURL(width: 90, height: 51)\n    publishedAt\n    owner {\n      id\n      login\n      displayName\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    888: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_BanUserFromChatRoom"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "createdAt"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 148
            }
        };
        n.loc.source = {
            body: "mutation Chat_BanUserFromChatRoom($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      createdAt\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    889: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = c.createElement(F._21, {
                    bold: !0,
                    type: F._26.Span
                }, c.createElement("span", {
                    style: {
                        color: e.chatColor
                    }
                }, Object(R.a)(e.login, e.displayName))),
                n = null;
            return e.editAppearance || (n = c.createElement(F.U, {
                margin: {
                    top: 1
                }
            }, c.createElement("div", {
                className: "chat-settings__edit-button",
                onClick: e.onClickEdit,
                "data-a-target": V,
                "data-test-selector": H
            }, Object(I.d)("Edit Appearance", "ChatSettings")))), c.createElement(F._17, {
                background: F.m.Base,
                color: F.F.Base,
                display: F.H.InlineFlex,
                flexDirection: F.J.Column,
                fullWidth: !0
            }, c.createElement(F._21, {
                color: F.F.Alt2,
                transform: F._25.Uppercase
            }, Object(I.d)("Name Display", "ChatSettings")), c.createElement(F.U, {
                margin: {
                    top: 2
                }
            }, e.userBadges && e.userBadges.map(function(e) {
                return c.createElement(P.a, {
                    key: e.id,
                    badge: e
                })
            }), t), n)
        }

        function i() {
            return {}
        }

        function r(e) {
            return Object(p.bindActionCreators)({
                showReportUserModal: function(e) {
                    var t = l.__rest(e, []);
                    return Object(q.d)(z.a, t)
                }
            }, e)
        }

        function s(e) {
            return {
                darkModeEnabled: Object(y.a)(e) === m.a.Dark,
                followerModeDuration: e.chat.followerDuration,
                followerModeEnabled: e.chat.followerMode,
                lastUsedFollowerDurations: e.chat.lastUsedFollowerDurations,
                showModerationIcons: e.chat.showModIcons,
                showTimestamps: e.chat.showTimestamps,
                slowModeEnabled: e.chat.slowMode,
                theatreModeEnabled: e.ui.theatreModeEnabled,
                isLoggedIn: Object(k.d)(e)
            }
        }

        function o(e) {
            return Object(p.bindActionCreators)({
                onChatHide: function() {
                    return _.H()
                },
                onChatUnhide: function() {
                    return _.K()
                },
                onFollowerModeDisable: function() {
                    return _.x()
                },
                onFollowerModeDurationChange: function(e) {
                    return _.u(e)
                },
                onFollowerModeDurationPreferenceChange: function(e, t) {
                    return _.v(e, t)
                },
                onFollowerModeEnable: function() {
                    return _.C()
                },
                onModIconsDisable: function() {
                    return _.y()
                },
                onModIconsEnable: function() {
                    return _.D()
                },
                onSlowModeDisable: function() {
                    return _.z()
                },
                onSlowModeEnable: function() {
                    return _.E()
                },
                onTimestampsDisable: function() {
                    return _.B()
                },
                onTimestampsEnable: function() {
                    return _.G()
                },
                onShowViewerCard: C.d,
                onThemeChanged: function(e) {
                    return Object(b.b)(e, void 0, !1)
                },
                login: function() {
                    return Object(v.f)(g.a.Chat)
                }
            }, e)
        }
        var l = n(0),
            c = n(1),
            u = n(6),
            d = n(22),
            p = n(9),
            m = n(31),
            h = n(837),
            f = n(832),
            g = n(54),
            v = n(39),
            b = n(132),
            k = n(17),
            y = n(51),
            _ = n(378),
            C = n(825),
            S = n(838),
            E = n(845),
            w = n(822),
            N = n(851),
            D = n(857),
            I = n(2),
            O = n(28),
            U = n(47),
            x = n(7),
            T = n(4),
            L = ["#FF0000", "#0000FF", "#008000", "#B22222", "#FF7F50", "#9ACD32", "#FF4500", "#2E8B57", "#DAA520", "#D2691E", "#5F9EA0", "#1E90FF", "#FF69B4", "#8A2BE2", "#00FF7F"],
            F = n(3),
            j = (n(890), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onColorSelected = function(e) {
                        var n = e.currentTarget.getAttribute("data-color");
                        n && t.props.onColorSelected(n)
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    var e = this,
                        t = L.map(function(t) {
                            var n = {
                                "color-chooser": !0,
                                "color-chooser--selected": t === e.props.selectedColor
                            };
                            return c.createElement("div", {
                                key: t,
                                "data-color": t,
                                onClick: e.onColorSelected,
                                className: T(n),
                                style: {
                                    backgroundColor: t
                                },
                                "data-test-selector": "color_swatch_" + t
                            })
                        }),
                        n = c.createElement(F._21, {
                            transform: F._25.Uppercase,
                            color: F.F.Alt2
                        }, Object(I.d)("Name Color", "ChatSettings"));
                    return this.props.borderTop && (n = c.createElement(F._17, {
                        margin: {
                            top: 2
                        },
                        borderTop: !0,
                        padding: {
                            top: 2
                        }
                    }, n)), c.createElement("div", null, c.createElement(F._17, {
                        margin: {
                            bottom: 1
                        },
                        background: F.m.Base,
                        color: F.F.Base,
                        display: F.H.InlineFlex,
                        flexDirection: F.J.Column,
                        fullWidth: !0
                    }, n), c.createElement(F.U, {
                        margin: {
                            y: 1
                        },
                        display: F.H.Flex
                    }, t, c.createElement(F._21, {
                        fontSize: F.L.Size7
                    }, c.createElement("a", {
                        href: "https://twitch.tv/products/turbo?ref=more_colors_direct"
                    }, Object(I.d)("more colors →", "ChatSettings")))))
                }, t
            }(c.Component)),
            B = n(21),
            M = n(891),
            A = (n(892), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.onGlobalBadgeClicked = function(e) {
                        var n = e.currentTarget.getAttribute("data-badge");
                        t.setGlobalBadge(t.props.userLogin, n || "")
                    }, t.onChannelBadgeClicked = function(e) {
                        var n = e.currentTarget.getAttribute("data-badge");
                        t.setChannelBadge(t.props.channelLogin, t.props.userLogin, n || "")
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return this.props.data && !this.props.data.loading && this.props.data.user && this.props.data.currentUser ? c.createElement("div", null, c.createElement(j, {
                        selectedColor: this.props.userChatColor,
                        onColorSelected: this.props.onColorSelected,
                        borderTop: !0
                    }), this.getBadgeChooser()) : null
                }, t.prototype.getBadgeChooser = function() {
                    var e = this;
                    if (this.props.data) {
                        var t = this.props.data.user.self.availableBadges,
                            n = this.props.data.user.self.selectedBadge,
                            a = this.props.data.currentUser.availableBadges,
                            i = this.props.data.currentUser.selectedBadge;
                        if (!t) return null;
                        var r = void 0 === this.state.channelBadgeID && n ? n.setID : this.state.channelBadgeID,
                            s = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": !r
                            },
                            o = Object(I.d)("No channel badges :(", "ChatSettings");
                        t && t.length > 0 && (o = t.map(function(t) {
                            var a = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": n && t.setID === r
                            };
                            return c.createElement("div", {
                                "data-badge": t.setID,
                                onClick: e.onChannelBadgeClicked,
                                key: t.setID + "/" + t.version,
                                className: T(a),
                                "data-test-selector": "channel_badge_" + t.setID,
                                "data-a-target": "channel_badge_" + t.setID
                            }, c.createElement(F._30, {
                                label: t.title
                            }, c.createElement("img", {
                                alt: t.title,
                                src: t.image1x,
                                srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                            })))
                        }), o.push(c.createElement("div", {
                            key: "none",
                            "data-badge": "",
                            onClick: this.onChannelBadgeClicked,
                            className: T(s),
                            "data-test-selector": "channel_badge_none",
                            "data-a-target": "channel_badge_none"
                        }, c.createElement(F._30, {
                            label: Object(I.d)("Same as Global", "ChatSettings")
                        }, c.createElement("div", {
                            className: "edit-appearance__badge-chooser__none"
                        }, c.createElement(F._8, {
                            asset: F._9.Global
                        }))))));
                        var l = void 0 === this.state.globalBadgeID && i ? i.setID : this.state.globalBadgeID,
                            u = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": !l
                            },
                            d = Object(I.d)("No global badges :(", "ChatSettings");
                        return a && a.length > 0 && (d = a.map(function(t) {
                            var n = {
                                "edit-appearance__badge-chooser": !0,
                                "edit-appearance__badge-chooser--selected": i && t.setID === l
                            };
                            return c.createElement("div", {
                                "data-badge": t.setID,
                                onClick: e.onGlobalBadgeClicked,
                                key: t.setID + "/" + t.version,
                                className: T(n),
                                "data-test-selector": "global_badge_" + t.setID,
                                "data-a-target": "global_badge_" + t.setID
                            }, c.createElement(F._30, {
                                label: t.title
                            }, c.createElement("img", {
                                alt: t.title,
                                src: t.image1x,
                                srcSet: t.image1x + " 1x, " + t.image2x + " 2x, " + t.image4x + " 4x"
                            })))
                        }), d.push(c.createElement("div", {
                            key: "none",
                            "data-badge": "",
                            onClick: this.onGlobalBadgeClicked,
                            className: T(u),
                            "data-test-selector": "global_badge_none",
                            "data-a-target": "global_badge_none"
                        }, c.createElement(F._30, {
                            label: Object(I.d)("None", "ChatSettings")
                        }, c.createElement("div", {
                            className: "edit-appearance__badge-chooser__none"
                        }, c.createElement(F._8, {
                            asset: F._9.Ban
                        })))))), c.createElement("div", null, c.createElement(F._17, {
                            background: F.m.Base,
                            color: F.F.Base,
                            display: F.H.InlineFlex,
                            flexDirection: F.J.Column,
                            fullWidth: !0
                        }, c.createElement(F._17, {
                            margin: {
                                top: 2
                            },
                            padding: {
                                top: 2
                            },
                            borderTop: !0
                        }, c.createElement(F._30, {
                            align: F._31.Left,
                            label: Object(I.d)("Your global badge is shown when chatting and whispering.", "ChatSettings"),
                            width: 175
                        }, c.createElement(F._21, {
                            color: F.F.Alt2,
                            transform: F._25.Uppercase
                        }, Object(I.d)("Global Badge [?]", "ChatSettings")))), c.createElement(F.U, {
                            margin: {
                                y: 1
                            },
                            padding: {
                                top: 1
                            },
                            display: F.H.Flex,
                            "data-a-target": "global-badge-selector"
                        }, d)), c.createElement(F._17, {
                            background: F.m.Base,
                            color: F.F.Base,
                            display: F.H.InlineFlex,
                            flexDirection: F.J.Column,
                            fullWidth: !0
                        }, c.createElement(F._17, {
                            margin: {
                                top: 2
                            },
                            padding: {
                                top: 2
                            },
                            borderTop: !0
                        }, c.createElement(F._30, {
                            align: F._31.Left,
                            label: Object(I.d)("Change the badge shown when chatting in this channel.", "ChatSettings"),
                            width: 175
                        }, c.createElement(F._21, {
                            color: F.F.Alt2,
                            transform: F._25.Uppercase
                        }, Object(I.d)("Channel Badge [?]", "ChatSettings")))), c.createElement(F.U, {
                            margin: {
                                y: 1
                            },
                            padding: {
                                top: 1
                            },
                            display: F.H.Flex,
                            "data-a-target": "channel-badge-selector"
                        }, o)))
                    }
                }, t.prototype.setChannelBadge = function(e, t, n) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var a, i, r;
                        return l.__generator(this, function(s) {
                            switch (s.label) {
                                case 0:
                                    return a = {
                                        "Client-ID": I.n.config.legacyClientID,
                                        Accept: "application/vnd.twitchtv.v4+json; charset=UTF-8",
                                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                                        "Accept-Language": "en-us",
                                        Authorization: "OAuth " + this.props.authToken
                                    }, i = "https://api.twitch.tv/kraken/users/" + t + "/chat/channels/" + e + "/badges", [4, fetch(i, {
                                        method: "PUT",
                                        body: B.stringify({
                                            selected_badge: n
                                        }),
                                        headers: a
                                    })];
                                case 1:
                                    return r = s.sent(), r && r.ok && (this.props.onBadgesChanged(), this.setState({
                                        channelBadgeID: n
                                    })), [2]
                            }
                        })
                    })
                }, t.prototype.setGlobalBadge = function(e, t) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var n, a, i;
                        return l.__generator(this, function(r) {
                            switch (r.label) {
                                case 0:
                                    return n = {
                                        "Client-ID": I.n.config.legacyClientID,
                                        Accept: "application/vnd.twitchtv.v4+json; charset=UTF-8",
                                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                                        "Accept-Language": "en-us",
                                        Authorization: "OAuth " + this.props.authToken
                                    }, a = "https://api.twitch.tv/kraken/users/" + e + "/chat/badges", [4, fetch(a, {
                                        method: "PUT",
                                        body: B.stringify({
                                            selected_badge: t
                                        }),
                                        headers: n
                                    }).catch(console.error)];
                                case 1:
                                    return i = r.sent(), i && i.ok && (this.props.onBadgesChanged(), this.setState({
                                        globalBadgeID: t
                                    })), [2]
                            }
                        })
                    })
                }, t = l.__decorate([Object(x.a)(M, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(c.Component)),
            R = n(48),
            P = n(830),
            H = "edit-appearance-button",
            V = "edit-appearance-button",
            W = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(F.U, {
                        "data-toggle-balloon-id": "raids-follower-only-tooltip",
                        margin: {
                            left: .5
                        },
                        position: F._2.Relative
                    }, c.createElement(F._30, {
                        align: F._31.Right,
                        direction: F._32.Top,
                        display: F.H.InlineFlex,
                        label: this.props.text,
                        width: 175,
                        show: !0
                    }, c.createElement(F.P, {
                        alignItems: F.c.Center,
                        className: "chat-settings__highlight-indicator",
                        display: F.H.InlineFlex,
                        justifyContent: F.T.Center
                    }, c.createElement(F._21, {
                        color: F.F.Overlay,
                        fontSize: F.L.Size8,
                        type: F._26.Span,
                        "data-test-selector": "raids-follower-only-tooltip"
                    }, "i"))))
                }, t
            }(c.Component),
            q = n(37),
            z = n(379),
            G = n(10),
            $ = n(827),
            J = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.targetChannelID = t.props.targetChannelID, t
                }
                return l.__extends(t, e), t.fetchRecentRaidsList = function(e) {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var t, n;
                        return l.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return a.trys.push([0, 2, , 3]), [4, $.a.get("/kraken/raids?client_id=" + I.a.authClientID + "&api_version=" + I.a.defaultAPIVersion + "&target_id=" + e)];
                                case 1:
                                    return t = a.sent(), [2, this.deserialize(t)];
                                case 2:
                                    return n = a.sent(), I.i.error(n, "Couldn't fetch raids list"), [2, []];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, t.deserialize = function(e) {
                    var t = [];
                    if (e.body && e.body.raids) {
                        for (var n in e.body.raids)
                            if (n.hasOwnProperty) {
                                var a = {
                                    raidID: e.body.raids[n]._id,
                                    raidAt: e.body.raids[n].raid_at,
                                    userID: e.body.raids[n].creator_user._id,
                                    name: e.body.raids[n].creator_user.name
                                };
                                t.push(a)
                            }
                        return t
                    }
                    return []
                }, t
            }(c.Component),
            K = n(20),
            Q = n(828),
            Y = n(836),
            X = n(893),
            Z = n(894),
            ee = (n(895), n(896)),
            te = function(e, t, n) {
                var a = e.readQuery({
                    query: Z,
                    variables: {
                        targetUserID: n.raiderUserID,
                        channelID: n.channelID
                    }
                });
                t && t.data && (a.chatRoomBanStatus = {
                    isPermanent: !0,
                    __typename: "ChatRoomBanStatus"
                }), e.writeQuery({
                    query: Z,
                    variables: {
                        targetUserID: n.raiderUserID,
                        channelID: n.channelID
                    },
                    data: a
                })
            },
            ne = function(e, t) {
                var n = e.readQuery({
                        query: Z,
                        variables: {
                            targetUserID: t.raiderUserID,
                            channelID: t.channelID
                        }
                    }),
                    a = l.__assign({}, n, {
                        chatRoomBanStatus: null
                    });
                e.writeQuery({
                    query: Z,
                    variables: {
                        targetUserID: t.raiderUserID,
                        channelID: t.channelID
                    },
                    data: a
                })
            },
            ae = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onUsernameClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-username"),
                            a = e.currentTarget.getAttribute("data-raid-id") || "";
                        n && t.props.onUsernameClick(n, Y.a.recent_raids, a)
                    }, t.onBanButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-channel-id") || "",
                            a = e.currentTarget.getAttribute("data-target-user-login") || "";
                        (0, t.props.banUser)(Object(K.a)({
                            channelID: n,
                            bannedUserLogin: a
                        }))
                    }, t.onUnbanButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-channel-id") || "",
                            a = e.currentTarget.getAttribute("data-target-user-login") || "";
                        (0, t.props.unbanUser)(Object(K.a)({
                            channelID: n,
                            bannedUserLogin: a
                        }))
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(F.U, {
                        key: "recent-raids-layout2-" + this.props.raiderUserID,
                        className: "recent-raids-item",
                        flexDirection: F.J.Row,
                        display: F.H.Flex,
                        fullWidth: !0
                    }, c.createElement(F.U, {
                        flexDirection: F.J.Row,
                        display: F.H.Flex,
                        fullWidth: !0,
                        justifyContent: F.T.Between
                    }, c.createElement(F._21, {
                        bold: !0
                    }, c.createElement("a", {
                        className: "recent-raids-item__name",
                        "data-username": this.props.channelLogin,
                        "data-raid-id": this.props.raidID,
                        onClick: this.onUsernameClick,
                        href: "#"
                    }, this.props.channelLogin)), c.createElement(F.U, {
                        position: F._2.Relative
                    }, c.createElement(F.U, {
                        className: "recent-raids-item__timestamp"
                    }, Object(Q.r)(Date.parse(this.props.timestamp))), this.getCardSlideInContent())))
                }, t.prototype.getCardSlideInContent = function() {
                    if (!this.props.slideInContent) return null;
                    var e = null;
                    return e = this.props.data.chatRoomBanStatus && this.props.data.chatRoomBanStatus.isPermanent ? c.createElement(F.u, {
                        key: "recent-raids-ban-button-" + this.props.raiderUserID,
                        size: F.x.Small,
                        type: F.z.Text,
                        onClick: this.onUnbanButtonClick,
                        "data-a-target": "recent-raid-item-button",
                        "data-raid-id": this.props.raidID,
                        "data-target-user-login": this.props.raiderLogin,
                        "data-target-user-id": this.props.raiderUserID,
                        "data-channel-id": this.props.channelID
                    }, Object(I.d)("Unban", "RecentRaid")) : c.createElement(F.u, {
                        key: "recent-raids-ban-button-" + this.props.raiderUserID,
                        size: F.x.Small,
                        type: F.z.Text,
                        onClick: this.onBanButtonClick,
                        "data-a-target": "recent-raid-item-button",
                        "data-raid-id": this.props.raidID,
                        "data-target-user-login": this.props.raiderLogin,
                        "data-target-user-id": this.props.raiderUserID,
                        "data-channel-id": this.props.channelID
                    }, Object(I.d)("Ban", "RecentRaid")), c.createElement(F.U, {
                        key: "recent-raids-layout-" + this.props.raiderUserID,
                        className: "recent-raids-item__hover-content",
                        zIndex: F._38.Above,
                        "data-a-target": "recent-raids-item-hover"
                    }, this.props.slideInContent, e)
                }, t = l.__decorate([Object(x.a)(Z, {
                    options: function(e) {
                        return {
                            variables: {
                                targetUserID: e.raiderUserID,
                                channelID: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                }), Object(x.a)(X, {
                    name: "banUser",
                    options: function(e) {
                        return {
                            update: function(t, n) {
                                te(t, n, e)
                            }
                        }
                    }
                }), Object(x.a)(ee, {
                    name: "unbanUser",
                    options: function(e) {
                        return {
                            update: function(t) {
                                ne(t, e)
                            }
                        }
                    }
                })], t)
            }(c.Component),
            ie = ae,
            re = n(262),
            se = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {}, t.onReportButtonClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-raid-id") || "",
                            a = e.currentTarget.getAttribute("data-target-user-id") || "",
                            i = e.currentTarget.getAttribute("data-target-user-login") || "";
                        t.props.showReportUserModal({
                            reportContext: {
                                contentType: re.a.Raid,
                                targetUserID: a,
                                contentID: n,
                                extra: JSON.stringify({
                                    channel_id: a.toString()
                                })
                            },
                            title: Object(I.d)("Report {channelDisplayName}", {
                                channelDisplayName: i
                            }, "ReportUserModal")
                        })
                    }, t
                }
                return l.__extends(t, e), t.prototype.componentDidMount = function() {
                    return l.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return l.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, J.fetchRecentRaidsList(this.props.targetChannelID)];
                                case 1:
                                    return e = t.sent(), this.setState({
                                        raidChannels: e
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    var e = [],
                        t = [],
                        n = {};
                    if (void 0 !== this.state.raidChannels) {
                        0 === this.state.raidChannels.length && e.push(c.createElement(F._21, {
                            key: "recent-raids-no-raids",
                            type: F._26.P
                        }, Object(I.d)("You have no recent raids", "RecentRaids")));
                        for (var a in this.state.raidChannels)
                            if (a.hasOwnProperty) {
                                var i = this.state.raidChannels[a];
                                this.state.raidChannels.hasOwnProperty(a) && void 0 === n[i.userID] && (t.push(c.createElement(ie, {
                                    key: "recent-raids-item-" + i.userID,
                                    slideInContent: [c.createElement(F._17, {
                                        key: "recent-raids-item-report-area-" + i.userID,
                                        color: F.F.Alt2,
                                        display: F.H.InlineFlex
                                    }, c.createElement(F.u, {
                                        key: "recent-raid-report-button",
                                        size: F.x.Small,
                                        type: F.z.Text,
                                        onClick: this.onReportButtonClick,
                                        "data-a-target": "recent-raid-item-button",
                                        "data-raid-id": i.raidID,
                                        "data-target-user-login": i.name,
                                        "data-target-user-id": i.userID
                                    }, Object(I.d)("Report", "RecentRaid")), c.createElement(F._30, {
                                        align: F._31.Right,
                                        width: 150,
                                        label: Object(I.d)("Banning a user prevents them from future chatting or raiding", "RecentRaid")
                                    }))],
                                    timestamp: i.raidAt,
                                    channelLogin: i.name,
                                    raiderUserID: i.userID,
                                    channelID: this.props.targetChannelID,
                                    raiderLogin: i.name,
                                    raidID: i.raidID,
                                    onUsernameClick: this.props.onUsernameClick,
                                    showReportUserModal: this.props.showReportUserModal
                                })), n[i.userID] = !0)
                            }
                    }
                    var r = null;
                    return this.props.recentRaids ? c.createElement(F.U, {
                        key: "recent-raids"
                    }, c.createElement(F.U, {
                        margin: {
                            bottom: 2
                        }
                    }, c.createElement(F._21, {
                        color: F.F.Link,
                        type: F._26.Span
                    }, c.createElement(G.a, {
                        to: {
                            pathname: "/broadcast/dashboard/settings/raids"
                        }
                    }, Object(I.d)("Manage Raid Settings", "RecentRaids")))), e, t) : (r = c.createElement(F.U, {
                        key: "recent-raids",
                        margin: {
                            top: 1,
                            bottom: 1
                        },
                        display: F.H.Flex,
                        justifyContent: F.T.Between,
                        alignItems: F.c.Center
                    }, c.createElement("span", {
                        className: "chat-settings__edit-button",
                        onClick: this.props.onClickRecentRaids,
                        "data-test-selector": "recent-raids-button"
                    }, Object(I.d)("See Recent Raids", "ChatSettings")), this.props.tooltipText && c.createElement(F.U, {
                        position: F._2.Relative
                    }, c.createElement(F._30, {
                        align: F._31.Right,
                        direction: F._32.Top,
                        display: F.H.InlineFlex,
                        label: this.props.tooltipText,
                        width: 175,
                        show: !0
                    }, c.createElement(F.P, {
                        alignItems: F.c.Center,
                        className: "chat-settings__highlight-indicator",
                        display: F.H.InlineFlex,
                        justifyContent: F.T.Center,
                        margin: {
                            left: .5
                        }
                    }, c.createElement(F._21, {
                        color: F.F.Overlay,
                        fontSize: F.L.Size8,
                        type: F._26.Span
                    }, "i"))))), c.createElement(F.U, null, r))
                }, t
            }(c.Component),
            oe = Object(u.a)(i, r)(se),
            le = n(897),
            ce = (n(898), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        recentRaids: !1,
                        chatColor: null,
                        raidsTooltipDismissed: !1
                    }, t.dismissRaidsTooltip = function() {
                        t.setState({
                            raidsTooltipDismissed: !0
                        })
                    }, t.handleFollowerDurationClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-duration");
                        n && t.props.onFollowerDurationChange(parseInt(n, 10))
                    }, t.onClickEdit = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.props.onClickEditAppearance()
                    }, t.onClickRecentRaids = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.setState({
                            recentRaids: !0
                        })
                    }, t.onClickBack = function(e) {
                        e.nativeEvent.stopImmediatePropagation(), t.props.onLeaveEditAppearance(), t.setState({
                            recentRaids: !1
                        })
                    }, t.onColorSelected = function(e) {
                        t.setState({
                            chatColor: e
                        }), t.props.onColorSelected(e)
                    }, t.onBadgesChanged = function() {
                        return l.__awaiter(t, void 0, void 0, function() {
                            var e, t, n;
                            return l.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        return !this.props.data || this.props.data.loading ? [3, 2] : [4, this.props.data.refetch()];
                                    case 1:
                                        if (e = a.sent(), e.data) {
                                            if (t = e.data, !t.user.self) return [2];
                                            n = {}, t.user.self.displayBadges.forEach(function(e) {
                                                n[e.setID] = e.version
                                            }), I.n.tmi.client.updateChannelBadges(this.props.channelLogin, n)
                                        }
                                        a.label = 2;
                                    case 2:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    if (!this.props.data || this.props.data.loading) return null;
                    var e = null;
                    if (this.props.isLoggedIn && this.props.data.currentUser) {
                        var t = this.props.data.user.self ? this.props.data.user.self.displayBadges : [];
                        e = c.createElement(a, {
                            key: "name-display",
                            login: this.props.data.currentUser.login,
                            displayName: this.props.data.currentUser.displayName,
                            chatColor: this.state.chatColor || this.props.data.currentUser.chatColor,
                            editAppearance: this.props.editAppearance,
                            userBadges: t,
                            onClickEdit: this.onClickEdit
                        })
                    }
                    var n = [];
                    return this.props.isLoggedIn ? this.props.editAppearance ? n = [c.createElement(F.P, {
                        margin: {
                            bottom: 2
                        },
                        key: "chat-settings-edit-inject"
                    }, c.createElement("div", {
                        key: "chat-settings-edit",
                        className: "chat-settings__edit-button",
                        onClick: this.onClickBack,
                        "data-test-selector": "chat-settings-back-button"
                    }, c.createElement(F._21, {
                        color: F.F.Link,
                        type: F._26.Span
                    }, c.createElement(F._8, {
                        asset: F._9.ChatSettingsBack,
                        height: 10,
                        width: 10
                    }), Object(I.d)("Back", "ChatSettingsAppearance")))), e, c.createElement(A, {
                        key: "edit-appearance",
                        onColorSelected: this.onColorSelected,
                        editAppearance: this.props.editAppearance,
                        authToken: this.props.authToken,
                        channelLogin: this.props.channelLogin,
                        userChatColor: this.state.chatColor || this.props.data.currentUser.chatColor,
                        userLogin: this.props.data.currentUser.login,
                        onBadgesChanged: this.onBadgesChanged
                    })] : this.state.recentRaids ? n = [c.createElement(F.P, {
                        key: "chat-settings-recent-raids"
                    }, c.createElement("div", {
                        key: "chat-settings-edit",
                        className: "chat-settings__recent-raids-button",
                        onClick: this.onClickBack,
                        "data-test-selector": "chat-settings-back-button"
                    }, c.createElement(F._21, {
                        color: F.F.Link,
                        type: F._26.Span
                    }, c.createElement(F._8, {
                        asset: F._9.ChatSettingsBack,
                        height: 10,
                        width: 10
                    }), Object(I.d)("Back", "ChatSettingsRecentRaids")), c.createElement(F.U, {
                        margin: {
                            top: 2
                        }
                    }, c.createElement(F._21, {
                        key: "recent-raids-title",
                        color: F.F.Alt2,
                        transform: F._25.Uppercase
                    }, Object(I.d)("Recent Raids", "ChatSettings"))))), c.createElement(oe, {
                        key: "recent-raids",
                        targetChannelID: this.props.channelID,
                        recentRaids: this.state.recentRaids,
                        onClickRecentRaids: this.onClickRecentRaids,
                        onUsernameClick: this.props.onShowViewerCard
                    })] : (n = [e, this.renderUniversalOptions()], this.props.isCurrentUserModerator && n.push(this.renderModTools())) : n = [c.createElement(j, {
                        key: "color-chooser",
                        onColorSelected: this.props.onColorSelected
                    }), this.renderUniversalOptions()], c.createElement(O.b, {
                        className: "chat-settings"
                    }, c.createElement("div", {
                        onClick: this.dismissRaidsTooltip
                    }, c.createElement(F._17, {
                        key: "chat-settings",
                        className: "chat-settings__content",
                        background: F.m.Base,
                        color: F.F.Base,
                        padding: 2
                    }, n)))
                }, t.prototype.renderUniversalOptions = function() {
                    if (!this.props.data) return null;
                    var e = this.props.isPopout && c.createElement(F.E, {
                            checked: this.props.darkModeEnabled,
                            "data-a-target": "darkmode-checkbox",
                            "data-test-selector": "dark-mode-checkbox",
                            id: "chat-settings-dark-mode",
                            label: Object(I.d)("Dark Mode", "ChatSettings"),
                            onChange: this.props.onDarkModeToggle
                        }),
                        t = !this.props.isPopout && c.createElement("button", {
                            onClick: this.props.onChatPopout,
                            "data-a-target": "popout-chat-button",
                            "data-test-selector": "popout-button"
                        }, Object(I.d)("Popout", "ChatSettings")),
                        n = !this.props.isPopout && (window.BetterTTV || window.FrankerFaceZ) && c.createElement("button", {
                            onClick: this.props.onLegacyChatPopout,
                            "data-test-selector": "legacy-popout-button"
                        }, Object(I.d)("Legacy Popout", "ChatSettings"));
                    return c.createElement(F.U, {
                        key: "chat-options"
                    }, c.createElement(F._17, {
                        borderTop: !0,
                        margin: {
                            top: 2
                        },
                        padding: {
                            y: 2
                        }
                    }, c.createElement(F._21, {
                        color: F.F.Alt2,
                        transform: F._25.Uppercase
                    }, Object(I.d)("Chat Options", "ChatSettings"))), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(F.E, {
                        checked: this.props.showTimestamps,
                        "data-a-target": "timestamp-checkbox",
                        "data-test-selector": "timestamps-selector",
                        id: "chat-settings-timestamp",
                        label: Object(I.d)("Timestamps", "ChatSettings"),
                        onChange: this.props.onTimestampToggle
                    })), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, e), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement("button", {
                        onClick: this.props.onChatHide,
                        "data-a-target": "hide-chat-button",
                        "data-test-selector": "hide-chat-button"
                    }, Object(I.d)("Hide Chat", "ChatSettings"))), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, t), n && c.createElement(F.U, null, n))
                }, Object.defineProperty(t.prototype, "showRaidsTooltip", {
                    get: function() {
                        return this.props.sawFirstRaidPrompt && !this.state.raidsTooltipDismissed
                    },
                    enumerable: !0,
                    configurable: !0
                }), t.prototype.renderModTools = function() {
                    return c.createElement(F._17, {
                        key: "mod-tools",
                        borderTop: !0,
                        "data-test-selector": "mod-tools",
                        margin: {
                            top: 2
                        },
                        padding: {
                            top: 2
                        }
                    }, c.createElement(F.U, {
                        margin: {
                            bottom: 2
                        }
                    }, c.createElement(F._21, {
                        color: F.F.Alt2,
                        transform: F._25.Uppercase
                    }, Object(I.d)("Mod Tools", "ChatSettings"))), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(F.E, {
                        checked: this.props.showModerationIcons,
                        "data-a-target": "mod-icons-checkbox",
                        "data-test-selector": "mod-icons-checkbox",
                        id: "chat-settings-mod-icons",
                        label: Object(I.d)("Mod Icons", "ChatSettings"),
                        onChange: this.props.onModIconsToggle
                    })), c.createElement(F._17, {
                        margin: {
                            bottom: 1
                        },
                        display: F.H.Flex,
                        justifyContent: F.T.Between
                    }, c.createElement(F.E, {
                        checked: this.props.followerModeEnabled,
                        "data-a-target": "follower-mode-checkbox",
                        "data-test-selector": "follower-mode-checkbox",
                        id: "chat-settings-followers-only",
                        label: Object(I.d)("Followers-Only Chat", "ChatSettings"),
                        onChange: this.props.onFollowerModeToggle
                    }), this.showRaidsTooltip ? c.createElement(W, {
                        text: Object(I.d)("Prevent offensive raiders from chatting.", "RaidReportingChat")
                    }) : null, c.createElement(F.U, {
                        alignItems: F.c.Center,
                        display: F.H.Flex,
                        flexWrap: F.K.NoWrap,
                        justifyContent: F.T.Between
                    }, c.createElement(F.U, {
                        margin: {
                            right: .5
                        }
                    }, c.createElement(F._21, {
                        color: F.F.Alt2,
                        fontSize: F.L.Size7,
                        type: F._26.Span
                    }, Object(I.d)("Must have followed for", "ChatSettings"))), c.createElement(F.U, {
                        className: "chat-settings__mod-tools-follower-button",
                        flexShrink: 0
                    }, c.createElement(U.a, {
                        display: F.H.InlineBlock
                    }, c.createElement(F.u, {
                        size: F.x.Small,
                        type: F.z.Text,
                        "data-a-target": "follower-mode-dropdown",
                        "data-test-selector": "follower-mode-duration-menu",
                        dropdown: !0
                    }, Object(S.d)(this.props.selectedFollowerModeDuration)), c.createElement(F.p, {
                        direction: F.q.TopRight
                    }, c.createElement(F.U, {
                        padding: .5
                    }, c.createElement(F._21, {
                        color: F.F.Alt2
                    }, Object(I.d)("Followers can chat if they have followed for at least", "ChatSettings"))), c.createElement(F._17, {
                        color: F.F.Link
                    }, this.renderFollowerModeOptions())))))), c.createElement(F.U, {
                        margin: {
                            bottom: 1
                        }
                    }, c.createElement(F.E, {
                        checked: this.props.slowModeEnabled,
                        "data-a-target": "slow-mode-checkbox",
                        "data-test-selector": "slow-mode-checkbox",
                        id: "chat-settings-slow-mode",
                        label: Object(I.d)("Slow Mode", "ChatSettings"),
                        onChange: this.props.onSlowModeToggle
                    })), c.createElement(oe, {
                        key: "recent-raids",
                        recentRaids: this.state.recentRaids,
                        onClickRecentRaids: this.onClickRecentRaids,
                        onUsernameClick: C.d,
                        targetChannelID: this.props.channelID,
                        tooltipText: this.showRaidsTooltip ? Object(I.d)("View recent raids with option to report or ban.", "RaidReportingChat") : ""
                    }), c.createElement("button", {
                        onClick: this.props.onChatClear,
                        "data-a-target": "clear-chat-button",
                        "data-test-selector": "clear-chat-button"
                    }, Object(I.d)("Clear Chat", "ChatSettings")))
                }, t.prototype.renderFollowerModeOptions = function() {
                    var e = this;
                    return S.b.map(function(t) {
                        return c.createElement(F.S, {
                            "data-duration": t,
                            key: t,
                            onClick: e.handleFollowerDurationClick,
                            selected: t === e.props.selectedFollowerModeDuration
                        }, c.createElement(F.U, {
                            padding: .5
                        }, Object(S.c)(t)))
                    })
                }, t = l.__decorate([Object(x.a)(le, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(c.Component)),
            ue = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        editAppearance: !1
                    }, t.handleSettingsToggle = function(e) {
                        t.props.onToggle && t.props.onToggle(e), t.state.editAppearance && t.setState({
                            editAppearance: !1
                        })
                    }, t.onEdit = function() {
                        t.setState({
                            editAppearance: !0
                        })
                    }, t.onLeaveEdit = function() {
                        t.setState({
                            editAppearance: !1
                        })
                    }, t.onDarkModeToggle = function() {
                        var e = t.props.darkModeEnabled ? m.a.Light : m.a.Dark;
                        t.props.onThemeChanged(e, !t.props.isPopout), Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.darkModeEnabled,
                            settingName: E.a.DarkMode
                        })
                    }, t.onTimestampToggle = function() {
                        Object(N.b)("showTimestamps", !t.props.showTimestamps), t.props.showTimestamps ? t.props.onTimestampsDisable() : t.props.onTimestampsEnable(), Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.showTimestamps,
                            settingName: E.a.ShowTimestamps
                        })
                    }, t.onChatHide = function() {
                        t.props.onChatHide(), Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !0,
                            settingName: E.a.HideChat
                        })
                    }, t.onChatPopout = function() {
                        t.props.onChatHide();
                        var e = window.open("/popout/" + t.props.channelLogin + "/chat?popout=", "_blank", "right=50,top=50,width=400,height=600,resizable=yes,scrollbars=no,toolbar=no,location=no,directories=no,status=no,menubar=no,copyhistory=no");
                        e && !Object(h.a)() && (e.focus(), Object(f.a)(e, function() {
                            t.props.onChatUnhide()
                        }))
                    }, t.onLegacyChatPopout = function() {
                        t.props.onChatHide();
                        var e = window.open("https://www.twitch.tv/" + t.props.channelLogin + "/chat?popout=", "_blank", "right=50,top=50,width=400,height=600,resizable=yes,scrollbars=no,toolbar=no,location=no,directories=no,status=no,menubar=no,copyhistory=no");
                        e && !Object(h.a)() && (e.focus(), Object(f.a)(e, function() {
                            t.props.onChatUnhide()
                        }))
                    }, t.onModIconsToggle = function() {
                        Object(N.b)("showModIcons", !t.props.showModerationIcons), t.props.showModerationIcons ? t.props.onModIconsDisable() : t.props.onModIconsEnable(), Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.showModerationIcons,
                            settingName: E.a.ShowModIcons
                        })
                    }, t.onFollowerModeToggle = function() {
                        if (t.props.followerModeEnabled) t.props.onChatCommand(Object(w.d)()), t.props.onFollowerModeDisable();
                        else {
                            var e = t.getSelectedFollowerDuration();
                            t.props.onChatCommand(Object(w.f)(e)), t.props.onFollowerModeDurationChange(e), t.props.onFollowerModeEnable()
                        }
                        Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.followerModeEnabled,
                            settingName: E.a.FollowerMode
                        })
                    }, t.onFollowerDurationChange = function(e) {
                        Object(N.c)(t.props.channelLogin, e), t.props.onFollowerModeDurationPreferenceChange(t.props.channelLogin, e), t.props.followerModeEnabled && (t.props.onChatCommand(Object(w.f)(e)), t.props.onFollowerModeDurationChange(e)), Object(D.c)({
                            channelLogin: t.props.channelLogin,
                            followerModeOn: t.props.followerModeEnabled,
                            isHostMode: t.props.isHostMode,
                            newValue: e
                        })
                    }, t.onSlowModeToggle = function() {
                        t.props.slowModeEnabled ? (t.props.onChatCommand(Object(w.e)()), t.props.onSlowModeDisable()) : (t.props.onChatCommand(Object(w.g)()), t.props.onSlowModeEnable()), Object(D.a)({
                            channelLogin: t.props.channelLogin,
                            isHostMode: t.props.isHostMode,
                            newValue: !t.props.slowModeEnabled,
                            settingName: E.a.SlowMode
                        })
                    }, t.onChatClear = function() {
                        t.props.onChatCommand(Object(w.c)())
                    }, t.getSelectedFollowerDuration = function() {
                        if (t.props.followerModeEnabled) return t.props.followerModeDuration;
                        var e = t.props.lastUsedFollowerDurations[t.props.channelLogin];
                        return "number" == typeof e ? e : S.a
                    }, t.onColorSelected = function(e) {
                        if (!t.props.isLoggedIn) return void t.props.login();
                        t.props.onChatCommand(Object(w.b)(e))
                    }, t
                }
                return l.__extends(t, e), t.prototype.render = function() {
                    return c.createElement(me, {
                        disabled: this.props.disabled,
                        onToggle: this.handleSettingsToggle
                    }, c.createElement(ce, {
                        darkModeEnabled: this.props.darkModeEnabled,
                        followerModeEnabled: this.props.followerModeEnabled,
                        editAppearance: this.state.editAppearance,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isPopout: this.props.isPopout,
                        onChatClear: this.onChatClear,
                        onChatHide: this.onChatHide,
                        onChatPopout: this.onChatPopout,
                        onDarkModeToggle: this.onDarkModeToggle,
                        onFollowerDurationChange: this.onFollowerDurationChange,
                        onFollowerModeToggle: this.onFollowerModeToggle,
                        onLegacyChatPopout: this.onLegacyChatPopout,
                        onModIconsToggle: this.onModIconsToggle,
                        onSlowModeToggle: this.onSlowModeToggle,
                        onTimestampToggle: this.onTimestampToggle,
                        selectedFollowerModeDuration: this.getSelectedFollowerDuration(),
                        showModerationIcons: this.props.showModerationIcons,
                        showTimestamps: this.props.showTimestamps,
                        slowModeEnabled: this.props.slowModeEnabled,
                        theatreModeEnabled: this.props.theatreModeEnabled,
                        onColorSelected: this.onColorSelected,
                        authToken: this.props.authToken,
                        channelLogin: this.props.channelLogin,
                        channelID: this.props.channelID,
                        isLoggedIn: this.props.isLoggedIn,
                        onClickEditAppearance: this.onEdit,
                        onLeaveEditAppearance: this.onLeaveEdit,
                        sawFirstRaidPrompt: this.props.sawFirstRaidPrompt,
                        onShowViewerCard: this.props.onShowViewerCard
                    }))
                }, t
            }(c.Component),
            de = Object(u.a)(s, o)(ue),
            pe = Object(d.e)(de),
            me = function(e) {
                return c.createElement(U.a, {
                    onToggle: e.onToggle
                }, c.createElement(F.v, {
                    icon: F._9.Gear,
                    ariaLabel: Object(I.d)("Chat settings", "ChatInput"),
                    "data-a-target": "chat-settings",
                    disabled: !!e.disabled
                }), c.createElement(F.p, {
                    direction: F.q.Top,
                    noTail: !0,
                    offsetY: "11px",
                    "data-a-target": "chat-settings-balloon"
                }, e.children))
            };
        n.d(t, "a", function() {
            return pe
        }), n.d(t, "b", function() {
            return me
        })
    },
    890: function(e, t) {},
    891: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatSettings_Badges"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "selectedBadge"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "availableBadges"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "selectedBadge"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "availableBadges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 382
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatSettings_Badges($channelLogin: String!) {\n  currentUser {\n    id\n    selectedBadge {\n      ...badge\n    }\n    availableBadges {\n      ...badge\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      selectedBadge {\n        ...badge\n      }\n      availableBadges {\n        ...badge\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = a
    },
    892: function(e, t) {},
    893: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions_BanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 155
            }
        };
        n.loc.source = {
            body: "mutation RecentRaidsModActions_BanUser($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    894: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "chatRoomBanStatus"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }, {
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "userID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPermanent"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 203
            }
        };
        n.loc.source = {
            body: "query RecentRaidsModActions($targetUserID: ID!, $channelID: ID!) {\n  # This is currently backwards on the server\n  chatRoomBanStatus(channelID: $targetUserID, userID: $channelID) {\n    isPermanent\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    895: function(e, t) {},
    896: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "RecentRaidsModActions_UnbanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 161
            }
        };
        n.loc.source = {
            body: "mutation RecentRaidsModActions_UnbanUser($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    897: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatSettings_CurrentUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "chatColor"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "displayBadges"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "badge"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 294
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatSettings_CurrentUser($channelLogin: String!) {\n  currentUser {\n    id\n    login\n    displayName\n    chatColor\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      displayBadges {\n        ...badge\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = a
    },
    898: function(e, t) {},
    899: function(e, t) {},
    905: function(e, t, n) {
        "use strict";

        function a(e) {
            return {
                isLoggedIn: Object(w.d)(e)
            }
        }

        function i(e, t, n) {
            var a = new FileReader;
            a.onloadend = function() {
                n && n(a.result)
            }, a.readAsDataURL(e);
            var i = new FileReader;
            i.onloadend = function() {
                t(i.result)
            }, i.readAsArrayBuffer(e)
        }

        function r(e) {
            var t = "";
            if (e && e.name) {
                var n = e.name;
                t = n.slice((Math.max(0, n.lastIndexOf(".")) || 1 / 0) + 1)
            }
            return "" === t && (t = "png"), t
        }

        function s(e, t) {
            if (!t) throw new Error("Attempted to upload an empty file object.");
            var n = decodeURI(e);
            return fetch(n, {
                method: "PUT",
                body: new Blob([t])
            })
        }

        function o(e, t, n) {
            if (void 0 === n) throw new Error("No default avatar selected.");
            return fetch(b.a.krakenEndpoint + "/users/" + e + "/default_images?client_id=" + b.a.authClientID + "&api_version=" + b.a.defaultAPIVersion, {
                method: "PUT",
                headers: {
                    Authorization: "OAuth " + t,
                    "Content-Type": "application/json",
                    Accept: "application/json"
                },
                body: JSON.stringify({
                    default_profile_image: ee[n].id
                })
            })
        }

        function l(e, t, n, a) {
            return h.__awaiter(this, void 0, void 0, function() {
                var i;
                return h.__generator(this, function(r) {
                    switch (r.label) {
                        case 0:
                            return [4, fetch(b.a.krakenEndpoint + "/users/" + e + "/upload_image?client_id=" + b.a.authClientID + "&api_version=" + b.a.defaultAPIVersion + "&image_type=" + n + "&format=" + a, {
                                method: "POST",
                                headers: {
                                    Authorization: "OAuth " + t
                                }
                            })];
                        case 1:
                            return i = r.sent(), [2, i.json()]
                    }
                })
            })
        }

        function c(e) {
            switch (e) {
                case X.Success:
                    return {
                        message: Object(b.d)("Success!", "Profile Edit"),
                        type: L._0.Success
                    };
                case X.UnexpectedError:
                    return {
                        message: Object(b.d)("Unexpected error, please try again.", "Profile Edit"),
                        type: L._0.Alert
                    };
                case X.BadSizeError:
                    return {
                        message: Object(b.d)("Image might exceed 10MB.", "Profile Edit"),
                        type: L._0.Alert
                    };
                case X.NonImageError:
                    return {
                        message: Object(b.d)("You must upload an image.", "Profile Edit"),
                        type: L._0.Alert
                    };
                case X.WrongFormatError:
                    return {
                        message: Object(b.d)("You must select a valid image type.", "Profile Edit"),
                        type: L._0.Alert
                    };
                case X.TimeoutError:
                    return {
                        message: Object(b.d)("Upload timed-out. Please try again.", "Profile Edit"),
                        type: L._0.Alert
                    };
                case X.Uploading:
                    return {
                        message: Object(b.d)("Uploading....", "Profile Edit"),
                        type: L._0.Brand
                    };
                case X.ImageNotSelected:
                    return {
                        message: Object(b.d)("Select a image first.", "Profile Edit"),
                        type: L._0.Alert
                    };
                default:
                    return {
                        message: Object(b.d)("Please try again.", "Profile Edit"),
                        type: L._0.Alert
                    }
            }
        }

        function u(e) {
            return {
                authToken: Object(w.a)(e)
            }
        }

        function d(e, t) {
            return Object(z.bindActionCreators)({
                closeModal: function() {
                    return t.successCallback && t.successCallback(), Object(G.c)()
                }
            }, e)
        }

        function p(e) {
            return Object(z.bindActionCreators)({
                showModal: G.d
            }, e)
        }
        var m, h = n(0),
            f = n(4),
            g = n(1),
            v = n(10),
            b = n(2),
            k = n(111),
            y = n(381),
            _ = n(47),
            C = n(7),
            S = n(130),
            E = n(6),
            w = n(17),
            N = n(70),
            D = n(832),
            I = n(831),
            O = n(843),
            U = n(850),
            x = n(821),
            T = n(815),
            L = n(3),
            F = (n(915), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handlePromoBuy = function(e) {
                        var n = Object(x.b)({
                            trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                            channelID: t.props.channelID,
                            purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                            bitsAmount: e.currentTarget.dataset.bitsAmount,
                            location: T.b.GetBitsButton
                        });
                        n && t.props.onPromoBuyClose(n)
                    }, t
                }
                return h.__extends(t, e), t.prototype.render = function() {
                    var e = g.createElement(L.U, null, g.createElement(L.U, {
                        padding: {
                            x: 5,
                            y: 2
                        },
                        textAlign: L._22.Center
                    }, g.createElement(L._21, {
                        type: L._26.H4,
                        bold: !0
                    }, Object(b.d)("Cheer Bits for your Favorite Streamer!", "Bits--FirstTimeUserPrompt"))), g.createElement(L.U, {
                        padding: {
                            x: 2,
                            bottom: 1
                        }
                    }, g.createElement(L._21, {
                        type: L._26.Span,
                        color: L.F.Alt
                    }, Object(b.d)("Bits are fun, animated emotes. Cheering Bits celebrates moments you love with the community right in chat and similar to subscribing, helps support Partners and Affiliates.", "Bits--FirstTimeUserPrompt"), g.createElement(L.P, {
                        margin: {
                            left: .5
                        }
                    }, g.createElement("a", {
                        onClick: this.props.toggleShowTutorial
                    }, Object(b.d)("How do I cheer?", "Bits--FirstTimeUserPrompt"))))), g.createElement(L.U, {
                        padding: {
                            bottom: 2
                        },
                        textAlign: L._22.Center
                    }, g.createElement(L.P, {
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(L._21, {
                        type: L._26.H6,
                        bold: !0,
                        className: "bits-first-time-user-prompt__promo-header"
                    }, Object(b.d)("First Time Purchaser Discount Pack!", "Bits--FirstTimeUserPrompt"))), g.createElement(L.u, {
                        onClick: this.handlePromoBuy,
                        "data-purchase-url": this.props.promo.url,
                        "data-bits-amount": this.props.promo.bits,
                        "data-a-target": "bits-purchase-button-" + this.props.promo.bits
                    }, Object(b.d)("{price} For {amount} Bits", {
                        price: this.props.promo.price,
                        amount: this.props.promo.bits
                    }, "Bits--FirstTimeUserPrompt"))));
                    return this.props.isShowingTutorial ? g.createElement(L.U, {
                        className: "bits-first-time-user-prompt",
                        fullWidth: !0
                    }, g.createElement(L.U, {
                        className: "bits-first-time-user-prompt__tutorial-back-button"
                    }, g.createElement(L.u, {
                        onClick: this.props.toggleShowTutorial,
                        type: L.z.Text
                    }, g.createElement(L._8, {
                        asset: L._9.Play,
                        height: 8
                    }), " ", Object(b.d)("Back", "Bits--FirstTimeUserPrompt"))), g.createElement(L.U, {
                        textAlign: L._22.Center,
                        padding: {
                            x: 2,
                            bottom: 2,
                            top: 5
                        },
                        fullHeight: !0
                    }, g.createElement(L.e, {
                        type: L.i.SlideInLeft,
                        duration: L.g.Long,
                        enabled: !0
                    }, g.createElement(U.a, null)))) : this.props.animateFirstTimeUserIntro ? g.createElement(L.P, {
                        className: "bits-first-time-user-prompt"
                    }, g.createElement(L.e, {
                        type: L.i.SlideInRight,
                        duration: L.g.Long,
                        enabled: this.props.animateFirstTimeUserIntro
                    }, e)) : g.createElement(L.U, {
                        className: "bits-first-time-user-prompt"
                    }, e)
                }, t
            }(g.Component)),
            j = F,
            B = n(820),
            M = n(839),
            A = n(5),
            R = n(916),
            P = (n(917), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hideFirstTimeUserIntro: !1
                    }, t.trackBitsCardInteraction = function(e, n) {
                        var a = {
                            actionName: e,
                            emoteType: n && n.emoteType,
                            emoteLevel: n && n.emoteLevel,
                            location: T.b.GetBitsButton,
                            displayedBalance: t.props.bitsBalance || 0
                        };
                        Object(T.h)(a)
                    }, t.onClose = function() {}, t.onPromoBuyClose = function(e) {
                        Object(D.a)(e, function() {
                            t.props.data && t.props.data.refetch()
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.props.loading) return g.createElement(L._17, {
                        "data-a-target": "get-bits-button-content-loading",
                        display: L.H.Flex,
                        flexDirection: L.J.Column,
                        alignItems: L.c.Center,
                        justifyContent: L.T.Center,
                        textAlign: L._22.Center,
                        padding: {
                            y: 5
                        }
                    }, g.createElement(L.X, {
                        delay: 0
                    }), g.createElement(L.U, {
                        padding: {
                            top: 2
                        }
                    }, g.createElement(L._21, {
                        italic: !0
                    }, Object(b.d)("Fetching bits", "Bits--GetBitsButtonContent"))));
                    var e = null;
                    if (this.props.bitsOffers) {
                        var t = this.props.bitsOffers.find(function(e) {
                            return Object(x.c)(e)
                        });
                        t && t.type === B.b && this.props.channelID && !this.state.hideFirstTimeUserIntro && (e = g.createElement(j, {
                            promo: t,
                            animateFirstTimeUserIntro: this.props.animateFirstTimeUserIntro,
                            isShowingTutorial: this.props.isShowingTutorial,
                            toggleShowTutorial: this.props.toggleShowTutorial,
                            trackBitsCardInteraction: this.trackBitsCardInteraction,
                            channelID: this.props.channelID,
                            onPromoBuyClose: this.onPromoBuyClose
                        }))
                    }
                    var n = null;
                    void 0 !== this.props.bitsBalance && this.props.bitsConfig ? n = g.createElement(L._17, {
                        borderBottom: !0,
                        textAlign: L._22.Center,
                        fullWidth: !0,
                        padding: {
                            y: .5
                        }
                    }, g.createElement(L._21, {
                        type: L._26.Span
                    }, Object(b.d)("You have {bitsBalance}", {
                        bitsBalance: g.createElement(I.a, {
                            withImage: !0,
                            withText: !0,
                            count: this.props.bitsBalance,
                            bitsConfig: this.props.bitsConfig
                        })
                    }, "Bits--GetBitsButton"))) : void 0 === this.props.bitsBalance && this.props.bitsConfig && (n = g.createElement(L._17, {
                        borderBottom: !0,
                        textAlign: L._22.Center,
                        fullWidth: !0,
                        padding: {
                            y: .5
                        }
                    }, g.createElement(L._21, {
                        type: L._26.Span
                    }, Object(b.d)("{bitsGem} Log in to see your Bits balance", {
                        bitsGem: g.createElement(I.a, {
                            count: 100,
                            withImage: !0,
                            bitsConfig: this.props.bitsConfig
                        })
                    }, "Bits--GetBitsButton"))));
                    var a = null;
                    return this.props.bitsConfig && this.props.channelLogin && (a = g.createElement(O.a, {
                        bitsConfig: this.props.bitsConfig,
                        channelLogin: this.props.channelLogin,
                        closeAllBits: this.onClose,
                        onClose: this.onClose,
                        trackBitsCardInteraction: this.trackBitsCardInteraction,
                        location: T.b.GetBitsButton,
                        hidePromos: !0,
                        hideWateb: !0,
                        fullsize: !0
                    })), g.createElement(N.b, {
                        className: "get-bits-button-content"
                    }, g.createElement(L.U, null, n, e, a))
                }, t = h.__decorate([Object(A.c)("GetBitsButtonContent"), Object(C.a)(R, {
                    name: "data",
                    props: function(e) {
                        var t, n;
                        e.data && e.data.user && e.data.user.cheer && (t = Object(M.a)(e.data.user.cheer.emotes), n = e.data.user.id);
                        var a, i;
                        return e.data && e.data.currentUser ? (i = e.data.currentUser.bitsBalance, a = e.data.currentUser.bitsOffers) : e.data && e.data.bitsOffers && (a = e.data.bitsOffers), {
                            loading: e.data && e.data.loading,
                            bitsOffers: a,
                            bitsBalance: i,
                            bitsConfig: t,
                            channelID: n
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    },
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin,
                                withChannel: !!e.channelLogin,
                                isLoggedIn: e.isLoggedIn
                            }
                        }
                    }
                })], t)
            }(g.Component)),
            H = P,
            V = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isShowingTutorial: !1,
                        animateFirstTimeUserIntro: !1
                    }, t.toggleBalloon = function(e) {
                        t.setState({
                            animateFirstTimeUserIntro: !1
                        }), e || Object(T.h)({
                            actionName: T.a.BuyMain,
                            location: T.b.GetBitsButton,
                            displayedBalance: 0
                        })
                    }, t.toggleShowTutorial = function() {
                        t.setState({
                            isShowingTutorial: !t.state.isShowingTutorial,
                            animateFirstTimeUserIntro: !0
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.channelLogin && (e = g.createElement(H, {
                        isLoggedIn: this.props.isLoggedIn,
                        channelLogin: this.props.channelLogin,
                        toggleShowTutorial: this.toggleShowTutorial,
                        isShowingTutorial: this.state.isShowingTutorial,
                        animateFirstTimeUserIntro: this.state.animateFirstTimeUserIntro
                    })), g.createElement(_.a, {
                        onToggle: this.toggleBalloon
                    }, g.createElement(L.u, {
                        dropdown: !0
                    }, Object(b.d)("Get Bits", "Bits--GetBitsButton")), g.createElement(L.p, {
                        direction: L.q.BottomRight,
                        size: L.r.Large
                    }, e))
                }, t = h.__decorate([Object(A.c)("GetBitsButton")], t)
            }(g.Component),
            W = V,
            q = Object(E.a)(a)(W),
            z = n(9),
            G = n(37),
            $ = n(867),
            J = n(105),
            K = n(30),
            Q = (n(918), function(e) {
                var t = function() {
                        e.onSelect(e.index)
                    },
                    n = {
                        "default-avatar__selected": e.selected,
                        "default-avatar": !0
                    };
                return g.createElement(L.U, {
                    padding: {
                        bottom: 1
                    }
                }, g.createElement("div", {
                    onClick: t,
                    "aria-label": Object(b.d)("Click to select Default Avatar Number {index, number}", {
                        index: e.index
                    }, "Default Avatar")
                }, g.createElement(L._17, {
                    border: !0,
                    fullHeight: !0,
                    fullWidth: !0,
                    position: L._2.Relative,
                    className: f(n)
                }, g.createElement("img", {
                    alt: Object(b.d)("Default Avatar Number {index, number}", {
                        index: e.index
                    }, "Default Avatar"),
                    src: e.imageSrc
                }))))
            });
        ! function(e) {
            e.ProfileImage = "profile_image", e.ProfileBanner = "profile_banner", e.ChannelOfflineImage = "channel_offline_image"
        }(m || (m = {}));
        var Y;
        ! function(e) {
            e.Success = "SUCCESS", e.NonImage = "IS_IMAGE_VALIDATION_FAILED", e.WrongFormat = "IMAGE_FORMAT_VALIDATION_FAILED", e.BadSize = "FILE_SIZE_VALIDATION_FAILED"
        }(Y || (Y = {}));
        var X;
        ! function(e) {
            e[e.Success = 0] = "Success", e[e.UnexpectedError = 1] = "UnexpectedError", e[e.BadSizeError = 2] = "BadSizeError", e[e.NonImageError = 3] = "NonImageError", e[e.WrongFormatError = 4] = "WrongFormatError", e[e.TimeoutError = 5] = "TimeoutError", e[e.Uploading = 6] = "Uploading", e[e.ImageNotSelected = 7] = "ImageNotSelected"
        }(X || (X = {}));
        var Z = (n(919), n(920)),
            ee = [{
                id: "profile_image_001",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/bb97f7e6-f11a-4194-9708-52bf5a5125e8-profile_image-300x300.jpg"
            }, {
                id: "profile_image_002",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/27103734-3cda-44d6-a384-f2ab71e4bb85-profile_image-300x300.jpg"
            }, {
                id: "profile_image_003",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/49988c7b-57bc-4dee-bd4f-6df4ad215d3a-profile_image-300x300.jpg"
            }, {
                id: "profile_image_004",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/0ecbb6c3-fecb-4016-8115-aa467b7c36ed-profile_image-300x300.jpg"
            }, {
                id: "profile_image_005",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/cd618d3e-f14d-4960-b7cf-094231b04735-profile_image-300x300.jpg"
            }, {
                id: "profile_image_006",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/4cbf10f1-bb9f-4f57-90e1-15bf06cfe6f5-profile_image-300x300.jpg"
            }, {
                id: "profile_image_007",
                uri: "https://static-cdn.jtvnw.net/user-default-pictures/b83b1794-7df9-4878-916c-88c2ad2e4f9f-profile_image-300x300.jpg"
            }],
            te = ["image/*"],
            ne = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        statusMessage: null,
                        imagePreviewURL: "",
                        profileUpdated: !1,
                        currentImageHasTallAspectRatio: !1,
                        imageFormat: ""
                    }, t.currentImage = null, t.logger = b.i.withCategory("ProfileImagePicker"), t.onImageInputChange = function(e) {
                        var n;
                        if (null === e) return void t.setState({
                            statusMessage: X.ImageNotSelected
                        });
                        n = e[0];
                        var a = r(n),
                            s = (n.size / 1024 / 1024).toFixed(4);
                        if (parseInt(s, 10) > 10) return void t.setState({
                            statusMessage: X.BadSizeError
                        });
                        t.setState({
                            selectedImageIndex: void 0,
                            imagePreviewURL: "",
                            imageFormat: "",
                            currentImageHasTallAspectRatio: !1
                        }), i(n, function(e) {
                            t.currentImage = e, t.setState({
                                statusMessage: null
                            })
                        }, function(e) {
                            var n = new Image,
                                i = !1;
                            n.onload = function() {
                                n.width < n.height && (i = !0), t.setState({
                                    currentImageHasTallAspectRatio: i
                                })
                            }, n.src = e, t.setState({
                                imagePreviewURL: e,
                                imageFormat: a
                            })
                        })
                    }, t.onUpdateButtonClick = function(e) {
                        return h.__awaiter(t, void 0, void 0, function() {
                            var t, n, a, i, r = this;
                            return h.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        if (e.preventDefault(), void 0 !== this.state.selectedImageIndex) return this.setDefaultAvatar(), [2];
                                        if (!this.currentImage) return this.setState({
                                            statusMessage: X.ImageNotSelected
                                        }), [2];
                                        this.setState({
                                            statusMessage: X.Uploading
                                        }), o.label = 1;
                                    case 1:
                                        return o.trys.push([1, 3, , 4]), [4, l(this.props.userID, this.props.authToken, m.ProfileImage, this.state.imageFormat)];
                                    case 2:
                                        return t = o.sent(), n = t.upload_url, a = t.upload_id, [3, 4];
                                    case 3:
                                        return i = o.sent(), this.logger.error(i, "Request for upload ID failed to get expected response from server."), this.setState({
                                            statusMessage: X.UnexpectedError
                                        }), [2];
                                    case 4:
                                        return this.unsubscribe = b.j.subscribe({
                                            topic: Object(K.c)(this.props.userID),
                                            success: function() {
                                                try {
                                                    s(n, r.currentImage)
                                                } catch (e) {
                                                    r.logger.error(e, "Profile Image upload failed."), r.unsubscribe(), r.setState({
                                                        statusMessage: X.UnexpectedError,
                                                        selectedImageIndex: void 0,
                                                        imagePreviewURL: "",
                                                        imageFormat: "",
                                                        currentImageHasTallAspectRatio: !1
                                                    })
                                                }
                                                r.timeoutHandle = setTimeout(function() {
                                                    return r.handlePubSubTimeout()
                                                }, 1e4)
                                            },
                                            failure: function() {
                                                r.setState({
                                                    statusMessage: X.UnexpectedError,
                                                    selectedImageIndex: void 0,
                                                    imagePreviewURL: "",
                                                    currentImageHasTallAspectRatio: !1
                                                })
                                            },
                                            onMessage: function(e) {
                                                if (e.upload_id === a) {
                                                    clearTimeout(r.timeoutHandle);
                                                    var t = null;
                                                    t = e.status === Y.Success ? X.Success : e.status === Y.BadSize ? X.BadSizeError : e.status === Y.NonImage ? X.NonImageError : e.status === Y.WrongFormat ? X.WrongFormatError : X.UnexpectedError, r.unsubscribe && r.unsubscribe(), r.setState({
                                                        statusMessage: t
                                                    }), r.state.statusMessage === X.Success ? r.setState({
                                                        profileUpdated: !0
                                                    }) : (r.setState({
                                                        profileUpdated: !1,
                                                        imagePreviewURL: "",
                                                        imageFormat: ""
                                                    }), r.currentImage = null)
                                                }
                                            }
                                        }), [2]
                                }
                            })
                        })
                    }, t.onDefaultImageSelected = function(e) {
                        t.setState({
                            selectedImageIndex: e,
                            imagePreviewURL: ee[e].uri
                        })
                    }, t.handlePubSubTimeout = function() {
                        t.unsubscribe(), t.setState({
                            statusMessage: X.TimeoutError
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    void 0 !== this.unsubscribe && this.unsubscribe(), this.timeoutHandle && clearTimeout(this.timeoutHandle)
                }, t.prototype.componentDidUpdate = function() {
                    var e = this;
                    this.state.profileUpdated && setTimeout(function() {
                        e.props.data && e.props.data.refetch(), e.props.closeModal()
                    }, 1e3)
                }, t.prototype.render = function() {
                    var e = this,
                        t = ee.map(function(t, n) {
                            return g.createElement(Q, {
                                key: t.id,
                                imageSrc: t.uri,
                                index: n,
                                onSelect: e.onDefaultImageSelected,
                                selected: e.state.selectedImageIndex === n
                            })
                        }),
                        n = "" !== this.state.imagePreviewURL,
                        a = null;
                    if (n) {
                        var i = {
                            "profile-edit__image-preview": !0,
                            "profile-edit__image-preview-tall": this.state.currentImageHasTallAspectRatio
                        };
                        a = g.createElement(L.U, {
                            className: f(i),
                            "data-test-selector": "preview-image",
                            position: L._2.Relative
                        }, g.createElement("img", {
                            src: "" + this.state.imagePreviewURL
                        }))
                    }
                    var r = "" === this.state.imagePreviewURL,
                        s = null;
                    r && (s = g.createElement(L.U, {
                        className: "profile-edit__upload-info"
                    }, g.createElement(L.U, null, g.createElement(L._8, {
                        asset: L._9.Plus,
                        type: L._10.Alt2,
                        height: 20,
                        width: 20
                    })), g.createElement(L._21, {
                        type: L._26.H3,
                        color: L.F.Alt2,
                        fontSize: L.L.Size4
                    }, Object(b.d)("Upload a Photo", "Profile Edit"))));
                    var o = null;
                    this.props.showCloser && (o = g.createElement(J.a, null));
                    var l = null;
                    if (null !== this.state.statusMessage) {
                        var u = c(this.state.statusMessage),
                            d = u.message,
                            p = u.type;
                        l = g.createElement(L.Z, {
                            label: d,
                            type: p
                        })
                    }
                    var m = this.props.login;
                    return this.props.displayName && (m = this.props.displayName), g.createElement(L.U, {
                        className: "profile-edit",
                        position: L._2.Relative,
                        fullHeight: !0
                    }, g.createElement(L._17, {
                        className: "profile-edit__background-container",
                        background: L.m.Base,
                        fullWidth: !0
                    }, g.createElement(L.U, {
                        padding: 2,
                        display: L.H.InlineBlock,
                        position: L._2.Relative,
                        textAlign: L._22.Center,
                        fullWidth: !0
                    }, g.createElement(L._17, {
                        borderBottom: !0,
                        margin: {
                            bottom: 2
                        }
                    }, g.createElement(L._21, {
                        type: L._26.H3,
                        fontSize: L.L.Size4
                    }, Object(b.d)("Editing profile picture for {userName}", {
                        userName: m
                    }, "Profile Edit"), " ")), g.createElement(L.U, {
                        className: "profile-edit__upload-container",
                        display: L.H.InlineBlock,
                        position: L._2.Relative,
                        textAlign: L._22.Center,
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(L.U, {
                        className: "profile-edit__upload",
                        display: L.H.InlineBlock,
                        position: L._2.Relative,
                        textAlign: L._22.Center
                    }, g.createElement($.a, {
                        allowedFileTypes: te,
                        onFilesSubmitted: this.onImageInputChange
                    }, s), a)), g.createElement(L._17, {
                        "data-test-selector": "status-message",
                        fontSize: L.L.Size4,
                        position: L._2.Relative,
                        textAlign: L._22.Center,
                        className: "profile-edit__status-message"
                    }, l), g.createElement(L._17, {
                        borderBottom: !0,
                        padding: {
                            bottom: .5
                        },
                        margin: {
                            bottom: 2
                        }
                    }, g.createElement(L.U, {
                        margin: {
                            bottom: 1
                        }
                    }, g.createElement(L._21, {
                        type: L._26.H3,
                        fontSize: L.L.Size5
                    }, Object(b.d)("Or select one of these", "Profile Edit"))), g.createElement(L._33, {
                        childWidth: L._34.ExtraSmall,
                        gutterSize: L._35.ExtraSmall,
                        placeholderItems: 3
                    }, t)), g.createElement(L.U, {
                        display: L.H.Flex,
                        justifyContent: L.T.Center
                    }, g.createElement(L.u, {
                        "data-test-selector": "update-button",
                        onClick: this.onUpdateButtonClick
                    }, Object(b.d)("Update", "Profile Edit"))))), o)
                }, t.prototype.setDefaultAvatar = function() {
                    return h.__awaiter(this, void 0, void 0, function() {
                        var e, t, n;
                        return h.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    this.setState({
                                        statusMessage: X.Uploading
                                    }), e = X.UnexpectedError, a.label = 1;
                                case 1:
                                    return a.trys.push([1, 3, , 4]), [4, o(this.props.userID, this.props.authToken, this.state.selectedImageIndex)];
                                case 2:
                                    return t = a.sent(), 204 === t.status || 200 === t.status ? e = X.Success : this.logger.error(new Error("Default Avatar PUT failed. Fetch returned non-200 status: " + t.status), "Default Avatar PUT failed. Fetch returned non-200 status: " + t.status), [3, 4];
                                case 3:
                                    return n = a.sent(), this.logger.error(n, "Default Avatar PUT failed."), [3, 4];
                                case 4:
                                    return this.setState({
                                        statusMessage: e,
                                        profileUpdated: e === X.Success
                                    }), [2]
                            }
                        })
                    })
                }, t = h.__decorate([Object(C.a)(Z, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.login
                            }
                        }
                    }
                })], t)
            }(g.Component),
            ae = Object(A.c)("Profile Edit")(ne),
            ie = Object(E.a)(u, d)(ae),
            re = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.openModal = function() {
                        t.props.showModal(ie, {
                            userID: t.props.userID,
                            login: t.props.login,
                            displayName: t.props.displayName,
                            showCloser: !0
                        })
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return g.createElement(L.U, null, g.createElement("div", {
                        onClick: this.openModal
                    }, g.createElement(L._8, {
                        asset: L._9.Edit,
                        height: 36,
                        width: 36,
                        fill: !0,
                        type: L._10.Brand
                    })))
                }, t = h.__decorate([Object(A.c)("EditProfileOverlay")], t)
            }(g.Component),
            se = re,
            oe = Object(E.a)(null, p)(se),
            le = n(138),
            ce = (n(921), n(922));
        n.d(t, "b", function() {
            return ue
        }), n.d(t, "a", function() {
            return he
        });
        var ue, de = "channel-header__verified-badge",
            pe = "channel-header__live-indicator";
        ! function(e) {
            e[e.Channel = 1] = "Channel", e[e.Clips = 2] = "Clips", e[e.Collections = 3] = "Collections", e[e.Events = 4] = "Events", e[e.Success = 5] = "Success", e[e.Followers = 6] = "Followers", e[e.Following = 7] = "Following", e[e.Videos = 8] = "Videos"
        }(ue || (ue = {}));
        var me = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        live: !1
                    }, t.verifiedBadgeElement = g.createElement(L._30, {
                        label: Object(b.d)("Verified", "ChannelHeader"),
                        direction: L._32.Right
                    }, g.createElement(L.U, {
                        className: "channel-header__verified",
                        "data-target": de,
                        display: L.H.Flex,
                        alignItems: L.c.Center,
                        margin: {
                            left: 1
                        }
                    }, g.createElement(L._8, {
                        asset: L._9.Verified
                    }))), t.liveIndicatorElement = g.createElement(L.U, {
                        margin: {
                            left: 1
                        },
                        "data-target": pe
                    }, g.createElement(L._30, {
                        label: Object(b.d)("Live Now", "ChannelHeader"),
                        direction: L._32.Right
                    }, g.createElement(L.V, {
                        pulse: !0
                    }))), t.renderAvatarEditButton = function() {
                        return t.props.data && t.props.data && t.props.data.currentUser && t.props.data.user && t.props.data.currentUser.roles && (t.props.data.currentUser.id === t.props.data.user.id || t.props.data.currentUser.roles.isStaff || t.props.data.currentUser.roles.isSiteAdmin) ? g.createElement(L.U, {
                            className: "channel-header__edit-profile-overlay",
                            position: L._2.Absolute
                        }, g.createElement(oe, {
                            userID: t.props.data.user.id,
                            login: t.props.data.user.login,
                            displayName: t.props.data.user.displayName
                        })) : null
                    }, t.onUpdateDebounce = function() {
                        if (!t.resizeAnimationFrame && t.channelHeader) {
                            var e = t.channelHeader.querySelector('[data-target="channel-header-left"]');
                            t.updateWidth(t.getWidth(e).width), t.resizeAnimationFrame = requestAnimationFrame(t.handleWindowResize)
                        }
                    }, t.handleWindowResize = function() {
                        t.resizeAnimationFrame = null, t.getChannelHeaderSize()
                    }, t.saveChannelHeaderRef = function(e) {
                        return t.channelHeader = e
                    }, t
                }
                return h.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.updateLiveState(this.props)
                }, t.prototype.componentDidMount = function() {
                    window.addEventListener("resize", this.onUpdateDebounce), !this.props.data || this.props.data.loading || this.props.data.error || this.getChannelHeaderSize(), this.reportInteractive()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.updateLiveState(e)
                }, t.prototype.componentDidUpdate = function() {
                    this.channelHeader && this.updateWidth(this.getWidth(this.channelHeader.querySelector('[data-target="channel-header-left"]')).width), this.onUpdateDebounce(), this.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame), window.removeEventListener("resize", this.onUpdateDebounce), this.props.latencyTracking.reportInteractive()
                }, t.prototype.updateWidth = function(e) {
                    var t = e !== this.width || this.width !== this.prevWidth;
                    void 0 !== this.width && (this.prevWidth = this.width), this.width !== e && (this.width = e), t && (this.resizeAnimationFrame && (cancelAnimationFrame(this.resizeAnimationFrame), this.resizeAnimationFrame = null), this.onUpdateDebounce())
                }, t.prototype.render = function() {
                    var e, t, n = 0,
                        a = 0,
                        i = 0,
                        r = b.a.defaultAvatarURL;
                    this.props.data && this.props.data.user && !this.props.data.loading && !this.props.data.error && (n = this.props.data.user.videos.totalCount, a = this.props.data.user.followers.totalCount, i = this.props.data.user.follows.totalCount, r = this.props.data.user.profileImageURL, e = this.props.data.user.displayName, t = this.props.data.user.roles.isPartner);
                    var s = this.state.live && ue[this.props.currentPage] !== ue[ue.Channel],
                        o = this.createChannelLinks(n, a, i),
                        l = {
                            "channel-header__user": !0,
                            "channel-header__user--selected": ue[this.props.currentPage] === ue[ue.Channel]
                        },
                        c = null;
                    this.canRenderBitsButton() && (c = g.createElement(L.U, {
                        margin: {
                            left: 1
                        }
                    }, g.createElement(q, {
                        channelLogin: this.props.channelLogin
                    })));
                    var u, d = g.createElement(L.U, {
                        display: L.H.Flex,
                        flexWrap: L.K.NoWrap,
                        alignItems: L.c.Center,
                        flexShrink: 0
                    }, g.createElement(L.U, {
                        className: "channel-header__user-avatar channel-header__user-avatar--active",
                        margin: {
                            right: 1
                        },
                        display: L.H.Flex,
                        flexShrink: 0,
                        alignItems: L.c.Stretch
                    }, g.createElement(L.l, {
                        size: 36,
                        imageSrc: r,
                        imageAlt: e || ""
                    }), this.renderAvatarEditButton()), e ? g.createElement(L._21, {
                        type: L._26.H5
                    }, e) : g.createElement(L.U, {
                        alignItems: L.c.Center
                    }, g.createElement(L._1, {
                        lineCount: 1,
                        width: 120
                    })), s && this.liveIndicatorElement, t && this.verifiedBadgeElement);
                    return u = this.props.data && this.props.data.user && this.props.data.user.login ? g.createElement(v.a, {
                        to: "/" + this.props.data.user.login,
                        "data-target": "channel-header__channel-link",
                        "data-a-target": "user-channel-header-item"
                    }, d) : d, g.createElement(L.U, {
                        className: "channel-header",
                        flexShrink: 0,
                        padding: {
                            x: 3
                        }
                    }, g.createElement(L.U, {
                        display: L.H.Flex,
                        justifyContent: L.T.Between,
                        flexWrap: L.K.NoWrap,
                        fullHeight: !0,
                        refDelegate: this.saveChannelHeaderRef
                    }, g.createElement(L.U, {
                        display: L.H.Flex,
                        alignItems: L.c.Stretch,
                        flexShrink: 0,
                        flexWrap: L.K.NoWrap,
                        "data-target": "channel-header-left"
                    }, g.createElement(L.P, {
                        className: f(l),
                        padding: {
                            y: .5,
                            right: 2
                        },
                        display: L.H.Flex,
                        flexWrap: L.K.NoWrap,
                        alignItems: L.c.Center,
                        flexShrink: 0
                    }, u), this.renderTabs(o), g.createElement(L.U, {
                        className: "channel-header__item channel-header__item--no-underline",
                        padding: {
                            x: 1
                        },
                        display: L.H.Flex,
                        flexShrink: 0,
                        alignSelf: L.d.Center,
                        "data-target": "channel-header-button"
                    }, g.createElement(_.a, {
                        alwaysMountBalloonContent: !0
                    }, g.createElement(L.v, {
                        icon: L._9.NavMore,
                        ariaLabel: Object(b.d)("More", "ChannelHeader")
                    }), g.createElement(L.p, {
                        direction: L.q.Bottom,
                        noTail: !0
                    }, g.createElement(L.U, {
                        padding: {
                            y: 1
                        }
                    }, this.renderDropdown(o)))))), g.createElement(L.U, {
                        display: L.H.Flex,
                        flexWrap: L.K.NoWrap,
                        flexShrink: 0,
                        alignItems: L.c.Center,
                        className: "channel-header__right",
                        "data-target": "channel-header-right"
                    }, g.createElement(L.U, {
                        className: "channel-header__follow-button",
                        display: L.H.Flex,
                        alignItems: L.c.Stretch,
                        margin: {
                            left: 1
                        }
                    }, g.createElement(k.a, {
                        updateContainerWidth: this.onUpdateDebounce,
                        isHostedFollow: !1,
                        channelLogin: this.props.channelLogin
                    })), g.createElement(L.U, {
                        margin: {
                            left: 1
                        }
                    }, g.createElement(le.b, {
                        updateContainerWidth: this.onUpdateDebounce,
                        channelLogin: this.props.channelLogin
                    })), c)), g.createElement(y.a, {
                        onResize: this.onUpdateDebounce
                    }))
                }, t.prototype.updateLiveState = function(e) {
                    !e.data || e.data.loading || e.data.error || this.setState({
                        live: !!e.data.user.stream && "" !== e.data.user.stream.id
                    })
                }, t.prototype.generateUserLink = function(e, t) {
                    void 0 === e && (e = ""), void 0 === t && (t = !1);
                    var n = this.props.data && this.props.data.user && this.props.data.user.login;
                    if (!n) return "#";
                    var a = "/" + n + "/" + e;
                    return t ? Object(S.a)(a) : a
                }, t.prototype.renderTabs = function(e) {
                    var t = this;
                    return e.map(function(e) {
                        var n = e.count ? g.createElement(L.U, {
                                className: "channel-header__item-count",
                                display: L.H.Flex,
                                margin: {
                                    left: .5
                                }
                            }, g.createElement(L._21, {
                                type: L._26.Span,
                                fontSize: L.L.Size5
                            }, e.count)) : null,
                            a = t.generateUserLink(e.pathSuffix, e.isExternal),
                            i = {};
                        return e.isExternal && (i.target = Object(S.b)() ? "_blank" : ""), g.createElement(L.P, {
                            key: "channel-header__item--" + e.label,
                            display: L.H.Flex,
                            alignItems: L.c.Center,
                            flexShrink: 0
                        }, g.createElement(v.a, h.__assign({
                            className: "channel-header__item hide " + (e.isSelected ? "channel-header__item--selected" : "")
                        }, i, {
                            to: a,
                            disabled: "#" === a,
                            "data-target": "channel-header-item",
                            "data-a-target": e.label.toLowerCase() + "-channel-header-item"
                        }), g.createElement(L.U, {
                            padding: {
                                x: 2,
                                y: .5
                            },
                            display: L.H.Flex
                        }, g.createElement(L._21, {
                            type: L._26.Span,
                            fontSize: L.L.Size5
                        }, e.label), n)))
                    })
                }, t.prototype.renderDropdown = function(e) {
                    var t = this;
                    return e.map(function(e) {
                        var n = e.count ? g.createElement(L.U, {
                                className: "channel-header__item-count",
                                display: L.H.Flex,
                                margin: {
                                    left: .5
                                }
                            }, g.createElement(L._21, {
                                type: L._26.Span
                            }, e.count)) : null,
                            a = t.generateUserLink(e.pathSuffix, e.isExternal),
                            i = {};
                        return e.isExternal && (i.targetBlank = !0), g.createElement(L.U, {
                            key: "channel-header__dropdown-item--" + e.label,
                            "data-target": "channel-header-dropdown-item"
                        }, g.createElement(L.S, h.__assign({
                            linkTo: a,
                            disabled: "#" === a
                        }, i), g.createElement(L.U, {
                            className: "channel-header__dropdown-hover-target",
                            padding: {
                                y: .5,
                                x: 1
                            },
                            display: L.H.Flex
                        }, g.createElement(L._21, {
                            type: L._26.Span
                        }, e.label), n)))
                    })
                }, t.prototype.createChannelLinks = function(e, t, n) {
                    return [{
                        label: Object(b.d)("Videos", "ChannelHeader"),
                        count: Object(b.e)(e),
                        pathSuffix: "videos/all",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Videos]
                    }, {
                        label: Object(b.d)("Clips", "ChannelHeader"),
                        pathSuffix: "clips",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Clips]
                    }, {
                        label: Object(b.d)("Collections", "ChannelHeader"),
                        pathSuffix: "collections",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Collections]
                    }, {
                        label: Object(b.d)("Events", "ChannelHeader"),
                        pathSuffix: "events",
                        isExternal: !1,
                        isSelected: ue[this.props.currentPage] === ue[ue.Events]
                    }, {
                        label: Object(b.d)("Followers", "ChannelHeader"),
                        count: Object(b.e)(t),
                        pathSuffix: "followers",
                        isExternal: !0,
                        isSelected: ue[this.props.currentPage] === ue[ue.Followers]
                    }, {
                        label: Object(b.d)("Following", "ChannelHeader"),
                        count: Object(b.e)(n),
                        pathSuffix: "following",
                        isExternal: !0,
                        isSelected: ue[this.props.currentPage] === ue[ue.Following]
                    }]
                }, t.prototype.getChannelHeaderSize = function() {
                    if (this.channelHeader) {
                        var e = this.channelHeader.querySelector('[data-target="channel-header-left"]'),
                            t = this.channelHeader.querySelector('[data-target="channel-header-right"]'),
                            n = this.channelHeader.querySelectorAll('[data-target="channel-header-item"]'),
                            a = this.channelHeader.querySelectorAll('[data-target="channel-header-dropdown-item"]');
                        if (n.length) {
                            var i = this.getWidth(this.channelHeader).width,
                                r = this.getWidth(e).width,
                                s = this.getWidth(t).width,
                                o = r + s + 20 - i;
                            if (o > 0)
                                for (var l = n.length - 1; l >= 0; l--) {
                                    var c = n[l];
                                    if (!c.classList.contains("hide")) {
                                        var u = this.getWidth(c);
                                        if (c.classList.add("hide"), a[l].classList.remove("hide"), (o -= u.width) <= 0) break
                                    }
                                } else
                                    for (var l = 0; l < n.length; l++) {
                                        var c = n[l];
                                        if (c.classList.contains("hide")) {
                                            c.classList.remove("hide");
                                            var u = this.getWidth(c);
                                            if (u.width >= Math.abs(o)) {
                                                c.classList.add("hide");
                                                break
                                            }
                                            c.classList.remove("hide"), a[l].classList.add("hide"), o += u.width
                                        }
                                    }
                            var d = this.channelHeader.querySelector('[data-target="channel-header-button"]');
                            if (d) {
                                var p = !this.channelHeader.querySelectorAll('[data-target="channel-header-item"].hide').length;
                                d.classList.toggle("hide", p)
                            }
                        }
                    }
                }, t.prototype.canRenderBitsButton = function() {
                    return this.props.data && !this.props.data.loading && this.props.currentPage !== ue.Clips && this.props.data.currentUser && this.props.data.user && this.props.data.user.cheer
                }, t.prototype.getWidth = function(e) {
                    return e ? {
                        width: e.clientWidth
                    } : {
                        width: 0
                    }
                }, t.prototype.reportInteractive = function() {
                    !this.props.data || this.props.data.loading || this.props.data.error || this.props.latencyTracking.reportInteractive()
                }, t = h.__decorate([Object(C.a)(ce, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(A.c)("ChannelHeader")], t)
            }(g.Component),
            he = me
    },
    906: function(e, t, n) {
        "use strict";

        function a(e) {
            var t = [];
            return e.forEach(function(e) {
                t[e.from] = {
                    startIndex: e.from,
                    endIndex: e.to + 1,
                    data: {
                        images: {
                            themed: !1,
                            sources: {
                                "1x": Object(c.e)(e.emoteID, 1),
                                "2x": Object(c.e)(e.emoteID, 2),
                                "4x": Object(c.e)(e.emoteID, 4)
                            }
                        }
                    }
                }
            }), t
        }

        function i(e, t, n) {
            var i = a(e.body.emotes),
                r = e.badges.reduce(function(e, t) {
                    return e[t.setID] = t.version, e
                }, {});
            return {
                type: l.a.Post,
                id: e.id,
                badges: r,
                bits: e.bitsUsed,
                timestamp: 0,
                deleted: !1,
                user: s.__assign({
                    userID: e.author.id,
                    userLogin: e.author.login,
                    userType: o.a.User,
                    color: e.authorColor
                }, Object(u.a)(e.authorName, e.author.login)),
                messageParts: Object(c.f)(e.body.content, i, e.bitsUsed, t, n, e.authorName)
            }
        }

        function r(e) {
            var t = "ChatMessage:" + e.tags.msg_id;
            return {
                __typename: "ChatMessage",
                "Symbol(id)": t,
                id: e.tags.msg_id,
                authorName: e.tags.display_name,
                authorColor: e.tags.color,
                author: {
                    __typename: "User",
                    "Symbol(id)": "User:" + e.user_id,
                    id: e.user_id,
                    login: e.username
                },
                body: {
                    __typename: "MessageBody",
                    "Symbol(id)": "$" + t + ".body",
                    content: e.message,
                    emotes: e.tags.emotes.map(function(e, n) {
                        return {
                            __typename: "EmbeddedEmote",
                            "Symbol(id)": t + ".body.emotes." + n,
                            emoteID: e.id.toString(),
                            from: e.start,
                            to: e.end,
                            setID: e.set
                        }
                    })
                },
                badges: e.tags.badges.map(function(e, n) {
                    return {
                        __typename: "Badge",
                        "Symbol(id)": t + ".badges." + n,
                        setID: e.badge_set_id,
                        version: e.badge_set_version
                    }
                }),
                bitsUsed: e.bits_used
            }
        }
        t.b = a, t.a = i, t.c = r;
        var s = n(0),
            o = n(826),
            l = n(814),
            c = n(131),
            u = n(383)
    },
    907: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "embeddedEmote"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "EmbeddedEmote"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "emoteID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "setID"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "from"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "to"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 74
            }
        };
        n.loc.source = {
            body: "fragment embeddedEmote on EmbeddedEmote {\n  emoteID\n  setID\n  from\n  to\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    915: function(e, t) {},
    916: function(e, t, n) {
        function a(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })
        }
        var i = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "GetBitsButton_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isLoggedIn"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "withChannel"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsOffers"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "skip"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "bitsOffersFragment"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "isLoggedIn"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "idSHA1"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsOffers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "bitsOffersFragment"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [{
                            kind: "Directive",
                            name: {
                                kind: "Name",
                                value: "include"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "if"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "withChannel"
                                    }
                                }
                            }]
                        }],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                directives: []
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 803
            }
        };
        i.loc.source = {
            body: '# Documentation about how to use GraphQL is located in the Data Access Guide:\n# https://git-aws.internal.justin.tv/pages/twilight/twilight-docs/docs/guides/data-access.html\n# Additionally, use the GraphQL explorer (https://api.twitch.tv/gql/explore) to browse\n# available GraphQL data and construct your query.\n#import "twilight/features/bits/models/bits-offers-fragment.gql"\n#import "twilight/features/chat/models/cheer-fragment.gql"\n\nquery GetBitsButton_Bits($isLoggedIn: Boolean!, $withChannel: Boolean!, $login: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffersFragment\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffersFragment\n    }\n  }\n  user(login: $login) @include(if: $withChannel) {\n    id\n    ...cheer\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var r = {};
        i.definitions = i.definitions.concat(a(n(841).definitions)), i.definitions = i.definitions.concat(a(n(842).definitions)), e.exports = i
    },
    917: function(e, t) {},
    918: function(e, t) {},
    919: function(e, t) {},
    920: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "UserProfileEditor"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 121
            }
        };
        n.loc.source = {
            body: "query UserProfileEditor($login: String!) {\n  user(login: $login) {\n    id\n    login\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    921: function(e, t) {},
    922: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChannelPage_ChannelHeader"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPartner"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "stream"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "videos"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "followers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "follows"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "totalCount"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 423
            }
        };
        n.loc.source = {
            body: "query ChannelPage_ChannelHeader($login: String!) {\n  user(login: $login) {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n    roles {\n      isPartner\n    }\n    stream {\n      id\n    }\n    videos {\n      totalCount\n    }\n    followers {\n      totalCount\n    }\n    follows {\n      totalCount\n    }\n    cheer {\n      id\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isStaff\n      isSiteAdmin\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    929: function(e, t, n) {
        "use strict";

        function a() {
            var e = Object(Oe.a)();
            return Ee.__assign({}, e, {
                commandHandlers: {},
                emoteSets: [],
                followerDuration: Ie.a,
                followerMode: !1,
                isHidden: !1,
                messages: {},
                slowMode: !1,
                subsOnlyMode: !1
            })
        }

        function i(e, t) {
            switch (void 0 === e && (e = a()), t.type) {
                case De.b:
                    return Ee.__assign({}, e, {
                        isHidden: !0
                    });
                case De.c:
                    return Ee.__assign({}, e, {
                        emoteSets: [],
                        messages: {}
                    });
                case De.d:
                    return Ee.__assign({}, e, {
                        isHidden: !1
                    });
                case De.e:
                    return Ee.__assign({}, e, {
                        emoteSets: t.emoteSets
                    });
                case De.f:
                    return Ee.__assign({}, e, {
                        followerMode: !1
                    });
                case De.g:
                    return Ee.__assign({}, e, {
                        followerDuration: t.duration
                    });
                case De.h:
                    return Ee.__assign({}, e, {
                        lastUsedFollowerDurations: Ee.__assign({}, e.lastUsedFollowerDurations, (n = {}, n[t.channelLogin] = t.duration, n))
                    });
                case De.i:
                    return Ee.__assign({}, e, {
                        followerMode: !0
                    });
                case De.j:
                    return we(e, function(e) {
                        return e.messages
                    }, function(e) {
                        return e[t.channel] = t.messages, e
                    });
                case De.k:
                    return Ee.__assign({}, e, {
                        showModIcons: !1
                    });
                case De.l:
                    return Ee.__assign({}, e, {
                        showModIcons: !0
                    });
                case De.n:
                    return Ee.__assign({}, e, {
                        slowMode: !1
                    });
                case De.o:
                    return Ee.__assign({}, e, {
                        slowMode: !0
                    });
                case De.p:
                    return Ee.__assign({}, e, {
                        subsOnlyMode: !1
                    });
                case De.q:
                    return Ee.__assign({}, e, {
                        subsOnlyMode: !0
                    });
                case De.r:
                    return Ee.__assign({}, e, {
                        showTimestamps: !1
                    });
                case De.s:
                    return Ee.__assign({}, e, {
                        showTimestamps: !0
                    });
                case De.a:
                    return we(e, function(e) {
                        return e.commandHandlers
                    }, function(e) {
                        return e[t.command] = t.handler, e
                    });
                case De.m:
                    return we(e, function(e) {
                        return e.commandHandlers
                    }, function(e) {
                        return delete e[t.command], e
                    });
                default:
                    return e
            }
            var n
        }

        function r(e, t) {
            return e.chat && e.chat.messages ? e.chat.messages[t] || [] : []
        }

        function s() {
            return {
                viewerCardOptions: null
            }
        }

        function o(e, t) {
            switch (void 0 === e && (e = s()), t.type) {
                case Ue.a:
                    return Ee.__assign({}, e, {
                        viewerCardOptions: null
                    });
                case Ue.b:
                    return t.viewerCardOptions ? Ee.__assign({}, e, {
                        viewerCardOptions: Ee.__assign({}, t.viewerCardOptions)
                    }) : e;
                default:
                    return e
            }
        }

        function l(e) {
            return {
                currentUserID: e.session.user && "" + e.session.user.id || ""
            }
        }

        function c(e, t, n, a) {
            return Ee.__awaiter(this, void 0, void 0, function() {
                var i, r, s, o, l;
                return Ee.__generator(this, function(c) {
                    switch (c.label) {
                        case 0:
                            i = "https://api.twitch.tv/api/channels/" + e + "/use_chat_notification_token", r = 1, c.label = 1;
                        case 1:
                            if (!(r <= ot)) return [3, 7];
                            c.label = 2;
                        case 2:
                            return c.trys.push([2, 5, , 6]), [4, fetch(i, {
                                body: JSON.stringify({
                                    token_id: t,
                                    custom_message: n
                                }),
                                method: "POST",
                                headers: {
                                    "Client-ID": Ne.n.config.legacyClientID,
                                    Accept: "application/json; charset=UTF-8",
                                    "content-type": "application/json; charset=UTF-8",
                                    Authorization: "OAuth " + a
                                }
                            })];
                        case 3:
                            return s = c.sent(), [4, s.json()];
                        case 4:
                            return o = c.sent(), [2, o];
                        case 5:
                            if (l = c.sent(), r === ot) throw l;
                            return [3, 6];
                        case 6:
                            return ++r, [3, 1];
                        case 7:
                            return [2]
                    }
                })
            })
        }

        function u() {
            return [{
                text: Object(Ne.d)("Select One...", "BlockUser"),
                canonical: _t
            }, {
                text: Object(Ne.d)("Harassment", "BlockUser"),
                canonical: kt.b.Harassment
            }, {
                text: Object(Ne.d)("Spam", "BlockUser"),
                canonical: kt.b.Spam
            }, {
                text: Object(Ne.d)("Other", "BlockUser"),
                canonical: kt.b.Other
            }]
        }

        function d(e) {
            return Object(Ae.bindActionCreators)({
                closeModal: gt.c
            }, e)
        }

        function p(e) {
            return Object(Ae.bindActionCreators)({
                addCommand: De.t,
                removeCommand: De.J
            }, e)
        }

        function m(e) {
            return Ee.__awaiter(this, void 0, void 0, function() {
                var t, n;
                return Ee.__generator(this, function(a) {
                    switch (a.label) {
                        case 0:
                            t = null, a.label = 1;
                        case 1:
                            return a.trys.push([1, 3, , 4]), [4, Ne.n.apollo.client.query({
                                query: xt,
                                variables: {
                                    login: e
                                }
                            })];
                        case 2:
                            return t = a.sent(), [3, 4];
                        case 3:
                            return n = a.sent(), Ne.i.warn(n, "Failed to fetch user targeted by chat command.", {
                                userLogin: e
                            }), [3, 4];
                        case 4:
                            return t && t.data.user.id ? [2, t.data.user.id] : [2, null]
                    }
                })
            })
        }

        function h(e) {
            return Object(Ae.bindActionCreators)({
                showBlockUser: function(e) {
                    var t = Ee.__rest(e, []);
                    return Object(gt.d)(Dt, t)
                }
            }, e)
        }

        function f(e) {
            return {
                firstPageLoaded: e.session.firstPageLoaded,
                isLoggedIn: Object(Fe.d)(e)
            }
        }

        function g() {
            return Math.round(Math.random() * Gt * 2 - Gt)
        }

        function v(e, t) {
            var n = {
                headers: {
                    "Client-ID": Ne.n.config.legacyClientID,
                    Authorization: "OAuth " + t,
                    Accept: "application/vnd.twitchtv.v5+json"
                },
                method: "POST"
            };
            return fetch(Qt + "/raids/" + e + "/join", n)
        }

        function b(e, t) {
            var n = {
                headers: {
                    "Client-ID": Ne.n.config.legacyClientID,
                    Authorization: "OAuth " + t,
                    Accept: "application/vnd.twitchtv.v5+json"
                },
                method: "POST"
            };
            return fetch(Qt + "/raids/" + e + "/leave", n)
        }

        function k(e) {
            C(en.SpadeEventType.RaidPromptJoin, e)
        }

        function y(e) {
            C(en.SpadeEventType.RaidPromptLeave, e)
        }

        function _(e) {
            C(en.SpadeEventType.RaidPromptImpression, e)
        }

        function C(e, t) {
            var n = {
                raid_creator_id: Number(t.creatorID),
                raid_source_id: Number(t.sourceChannelID),
                raid_target_id: Number(t.targetChannelID),
                raid_id: t.id
            };
            Ne.m.track(e, n)
        }

        function S(e) {
            if (e.data.loading || e.data.error) return je.createElement("div", null);
            var t = e.component,
                n = Ee.__rest(e, ["component"]);
            return je.createElement(t, Ee.__assign({}, n))
        }

        function E(e, t) {
            var n;
            if (N(e.pathname)) n = "/" + t;
            else {
                if (!w(e.pathname)) return "";
                n = "/" + t + "/chat"
            }
            var a = Ee.__assign({}, fn.parse(e.search), {
                referrer: "raid"
            });
            return n + "?" + fn.stringify(a)
        }

        function w(e) {
            return /^\/.+\/chat$/.test(e)
        }

        function N(e) {
            return !e.split("/")[2]
        }

        function D(e) {
            return {
                authToken: Object(Fe.a)(e)
            }
        }

        function I(e) {
            return Object(Ae.bindActionCreators)({
                login: function() {
                    return Object(Vt.f)(Ht.a.RaidJoin)
                }
            }, e)
        }

        function O(e) {
            return Object(Ae.bindActionCreators)({
                openThread: function(e) {
                    return Object(_n.l)({
                        threadID: e,
                        collapsed: !0
                    }, Object(Cn.a)())
                }
            }, e)
        }

        function U() {
            return {
                type: Dn.a.Clear,
                id: Object(Mn.a)("clear")
            }
        }

        function x(e, t) {
            return {
                type: Dn.a.BadgesUpdated,
                id: Object(Mn.a)("updateBadges"),
                userName: e,
                badges: t
            }
        }

        function T(e, t) {
            return {
                type: Dn.a.CrateGift,
                id: Object(Mn.a)("crate"),
                message: e,
                selectedCount: t
            }
        }

        function L(e, t, n, a, i, r, s) {
            return void 0 === s && (s = !1), Ee.__assign({}, Object(Pn.a)(t, n, a, i, r, s), {
                type: e,
                id: n.id || Object(Mn.a)(n.username)
            })
        }

        function F(e, t, n) {
            return {
                type: Dn.a.Notice,
                id: Object(Mn.a)("notice"),
                channel: e,
                msgid: t,
                message: n
            }
        }

        function j(e, t, n, a) {
            return {
                bitsConfig: a,
                message: t,
                purchase: e,
                timestamp: n,
                id: Object(Mn.a)(t.user.userLogin + "-purchase"),
                type: Dn.a.Purchase
            }
        }

        function B(e, t, n) {
            return {
                type: Dn.a.Raid,
                id: Object(Mn.a)("raid"),
                channel: e,
                userLogin: t,
                params: n
            }
        }

        function M(e, t, n) {
            return {
                type: Dn.a.Unraid,
                id: Object(Mn.a)("unraid"),
                channel: e,
                userLogin: t,
                message: n
            }
        }

        function A() {
            return {
                type: Dn.a.Connected,
                id: Object(Mn.a)("connected")
            }
        }

        function R(e) {
            return {
                type: Dn.a.Disconnected,
                id: Object(Mn.a)("disconnected"),
                reason: e
            }
        }

        function P() {
            return {
                type: Dn.a.Reconnect,
                id: Object(Mn.a)("reconnect")
            }
        }

        function H(e) {
            return {
                type: Dn.a.Hosting,
                id: Object(Mn.a)("hosting"),
                hostedChannel: e
            }
        }

        function V(e) {
            return {
                type: Dn.a.Unhost,
                id: Object(Mn.a)("unhost-" + e)
            }
        }

        function W(e) {
            return {
                type: Dn.a.RoomMods,
                id: Object(Mn.a)("roommods"),
                moderatorLogins: e
            }
        }

        function q(e) {
            return {
                type: Dn.a.RoomState,
                id: Object(Mn.a)("roomstate"),
                state: e
            }
        }

        function z(e, t) {
            return {
                type: Dn.a.SlowMode,
                id: Object(Mn.a)("slowmode"),
                enabled: e,
                length: t
            }
        }

        function G(e) {
            return {
                type: Dn.a.EmoteOnlyMode,
                id: Object(Mn.a)("emoteonlymode"),
                enabled: e
            }
        }

        function $(e, t) {
            return {
                type: Dn.a.FollowerOnlyMode,
                id: Object(Mn.a)("follower-only"),
                enabled: e,
                length: t
            }
        }

        function J(e) {
            return {
                type: Dn.a.SubscriberOnlyMode,
                id: Object(Mn.a)("subscriber-only"),
                enabled: e
            }
        }

        function K(e, t, n, a) {
            return {
                type: Dn.a.Subscription,
                id: Object(Mn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                userLogin: t,
                tier: a
            }
        }

        function Q(e, t, n, a, i) {
            return {
                type: Dn.a.SubGift,
                id: Object(Mn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                userLogin: t,
                tier: a,
                recipient: i
            }
        }

        function Y(e) {
            return {
                user: {
                    userDisplayName: e,
                    userLogin: e,
                    userID: null,
                    userType: An.a.User,
                    color: void 0,
                    isIntl: !1
                }
            }
        }

        function X(e, t, n, a, i, r, s, o) {
            var l = r && s ? Object(Pn.a)(r, s, Ve.a, !1, o) : Y(t);
            return Ee.__assign({}, l, {
                type: Dn.a.Resubscription,
                id: Object(Mn.a)(t + "-sub"),
                channel: e.slice(1),
                isPrime: n,
                months: a,
                tier: i
            })
        }

        function Z(e) {
            return e + "-automod-rejected"
        }

        function ee(e, t, n, a) {
            var i = {
                    badges: null,
                    bits: 0,
                    color: "",
                    displayName: "",
                    id: "",
                    userID: n,
                    username: n,
                    userType: An.a.User,
                    emotes: null
                },
                r = Object(Pn.a)(t, i, Ve.a, !1);
            return {
                type: Dn.a.AutoModRejectedPrompt,
                id: Z(e),
                category: a,
                isAutoModAction: !0,
                rejectedMessage: Ee.__assign({}, r, {
                    type: Dn.a.Post,
                    id: e
                })
            }
        }

        function te() {
            return {
                id: Object(Mn.a)("automod-message-rejected"),
                type: Dn.a.AutoModMessageRejected,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function ne() {
            return {
                id: Object(Mn.a)("automod-message-allowed"),
                type: Dn.a.AutoModMessageAllowed,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function ae() {
            return {
                id: Object(Mn.a)("automod-message-denied"),
                type: Dn.a.AutoModMessageDenied,
                isTargeted: !0,
                isAutoModAction: !0
            }
        }

        function ie(e, t) {
            Ne.m.track(e, Ee.__assign({
                time: Date.now()
            }, t))
        }

        function re(e) {
            return Object(Ne.d)("{bannedUserLogin} is no longer banned from this room.", {
                bannedUserLogin: e
            }, "UnbanUserMutation")
        }

        function se() {
            return Object(Ne.d)("Unable to unban user", "UnbanUserMutation")
        }

        function oe(e) {
            return Object(Ae.bindActionCreators)({
                onUsernameClick: Ue.d
            }, e)
        }

        function le(e) {
            var t;
            switch (e) {
                case "aggressive":
                    t = Object(Ne.d)("aggressive", "AutoModLine");
                    break;
                case "sexual":
                    t = Object(Ne.d)("sexual", "AutoModLine");
                    break;
                case "profanity":
                    t = Object(Ne.d)("profanity", "AutoModLine");
                    break;
                case "identity":
                    t = Object(Ne.d)("identity", "AutoModLine");
                    break;
                default:
                    return Object(Ne.d)("Message is being held for review. Allow will post it to chat.", "AutoModLine")
            }
            return Object(Ne.d)("Held a message for reason: {category}. Allow will post it to chat.", {
                category: t
            }, "AutoModLine")
        }

        function ce() {
            return {
                raid_error_self: Object(Ne.d)("You cannot raid your own channel.", "RaidErrorSelfMessage"),
                raid_error_forbidden: Object(Ne.d)("You cannot raid this channel.", "RaidErrorAlreadyRaidingMessage"),
                raid_error_already_raiding: Object(Ne.d)("You already have a raid in progress.", "RaidErrorForbiddenMessage"),
                raid_error_unexpected: Object(Ne.d)("There was a problem starting the raid. Please try again in a minute.", "RaidErrorUnexpectedMessage"),
                unraid_error_unexpected: Object(Ne.d)("There was a problem stopping the raid. Please try again in a minute.", "UnraidErrorUnexpectedMessage"),
                unraid_error_no_active_raid: Object(Ne.d)("You do not have an active raid.", "UnraidErrorNoActiveRaidMessage"),
                raid_notice_restricted_chat: Object(Ne.d)("This channel has follower or subscriber only chat.", "RaidNoticeRestrictedChatMessage"),
                raid_notice_mature: Object(Ne.d)("This channel is intended for mature audiences.", "RaidNoticeMatureMessage"),
                raid_notice_owner: Object(Ne.d)("This channel has started a raid, type {unraidCommand} if you want to cancel.", {
                    unraidCommand: "/unraid"
                }, "RaidNoticeOwnerMessage")
            }
        }

        function ue(e) {
            return e.msgid in ce()
        }

        function de(e) {
            return e.type === Dn.a.Post || e.type === Dn.a.PostWithMention || e.type === Dn.a.Action
        }

        function pe(e) {
            return {
                darkModeEnabled: Object(He.a)(e) === Re.a.Dark
            }
        }

        function me(e) {
            return {
                isSubsOnlyModeEnabled: e.chat.subsOnlyMode,
                sessionUser: Object(Fe.c)(e)
            }
        }

        function he(e) {
            return Object(Ae.bindActionCreators)({
                login: function() {
                    return Object(Vt.f)(Ht.a.Chat)
                }
            }, e)
        }

        function fe(e, t) {
            return {
                messages: r(e, t.channelLogin),
                showModerationIcons: e.chat.showModIcons,
                showTimestamps: e.chat.showTimestamps
            }
        }

        function ge(e) {
            return Ee.__awaiter(this, void 0, void 0, function() {
                var t, n, a, i, r;
                return Ee.__generator(this, function(s) {
                    switch (s.label) {
                        case 0:
                            t = "https://tmi.twitch.tv/group/user/" + e.toLowerCase() + "/chatters", n = 1, s.label = 1;
                        case 1:
                            if (!(n <= dr)) return [3, 7];
                            s.label = 2;
                        case 2:
                            return s.trys.push([2, 5, , 6]), [4, fetch(t, {
                                method: "GET",
                                headers: {
                                    Accept: "application/json; charset=UTF-8",
                                    "content-type": "application/json; charset=UTF-8"
                                }
                            })];
                        case 3:
                            return a = s.sent(), [4, a.json()];
                        case 4:
                            return i = s.sent(), Ne.i.debug("[update] getViewers done."), [2, i];
                        case 5:
                            if (r = s.sent(), n === dr) throw r;
                            return [3, 6];
                        case 6:
                            return ++n, [3, 1];
                        case 7:
                            return [2]
                    }
                })
            })
        }

        function ve(e, t) {
            if (!t) return e;
            var n = Object.assign({}, e);
            return Object.keys(n).forEach(function(e) {
                var a = n[e];
                Array.isArray(a) && (n[e] = a.filter(function(e) {
                    return -1 !== e.toLowerCase().indexOf(t)
                }))
            }), n
        }

        function be(e) {
            return Object(Ae.bindActionCreators)({
                onShowViewerCard: Ue.d
            }, e)
        }

        function ke(e) {
            return {
                viewerCardOptions: e.viewerCard.viewerCardOptions
            }
        }

        function ye(e) {
            return Object(Ae.bindActionCreators)({
                hideViewerCard: Ue.c,
                showReportUserModal: function(e) {
                    var t = Ee.__rest(e, []);
                    return Object(gt.d)(gr.a, t)
                }
            }, e)
        }

        function _e(e, t) {
            return Object(Ae.bindActionCreators)({
                onChatMessagesReset: function() {
                    return De.w()
                },
                onChatMessagesUpdate: function(e) {
                    return De.I(t.channelLogin, e)
                },
                onChatUnhide: function() {
                    return De.K()
                },
                onFollowerModeDisable: function() {
                    return De.x()
                },
                onFollowerModeDurationChange: function(e) {
                    return De.u(e)
                },
                onFollowerModeEnable: function() {
                    return De.C()
                },
                onSlowModeDisable: function() {
                    return De.z()
                },
                onSlowModeEnable: function() {
                    return De.E()
                },
                onSubsOnlyModeDisable: function() {
                    return De.A()
                },
                onSubsOnlyModeEnable: function() {
                    return De.F()
                },
                onThemeChange: function(e) {
                    return Object(Pe.b)(e, Pe.a.TypedCommand)
                }
            }, e)
        }

        function Ce(e) {
            return {
                emoteSets: e.chat.emoteSets,
                firstPageLoaded: e.session.firstPageLoaded,
                isHidden: e.chat.isHidden,
                rightColumnExpanded: e.ui.rightColumnExpanded,
                theme: Object(He.a)(e)
            }
        }

        function Se(e) {
            return {
                user: Object(Fe.c)(e)
            }
        }
        var Ee = n(0),
            we = n(136),
            Ne = n(2),
            De = n(378),
            Ie = n(838),
            Oe = n(851);
        Ne.n.store.registerReducer("chat", i);
        var Ue = n(825);
        Ne.n.store.registerReducer("viewerCard", o);
        var xe, Te, Le = n(6),
            Fe = n(17),
            je = n(1),
            Be = n(7),
            Me = n(32),
            Ae = n(9),
            Re = n(31),
            Pe = n(132),
            He = n(51),
            Ve = n(374),
            We = n(839),
            qe = n(4),
            ze = n(87),
            Ge = n(38),
            $e = n(20),
            Je = n(30),
            Ke = n(831),
            Qe = n(3),
            Ye = (n(930), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        formInputValue: "",
                        sharing: !1
                    }, t.hasUnmounted = !1, t.handleShareClick = function() {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            return Ee.__generator(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        this.setState({
                                            sharing: !0
                                        }), e.label = 1;
                                    case 1:
                                        return e.trys.push([1, , 3, 4]), [4, this.props.onShare(this.state.formInputValue)];
                                    case 2:
                                        return e.sent(), [3, 4];
                                    case 3:
                                        return this.hasUnmounted || this.setState({
                                            sharing: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.onInputChange = function(e) {
                        t.setState({
                            formInputValue: e.currentTarget.value
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.hasUnmounted = !1
                }, t.prototype.componentWillUnmount = function() {
                    this.hasUnmounted = !0
                }, t.prototype.render = function() {
                    var e = qe("share-input", {
                            "share-input--hidden": this.props.hide
                        }),
                        t = this.state.formInputValue.length > 255,
                        n = t ? "-" + (this.state.formInputValue.length - 255) : Object(Ne.d)("Share", "ChatResubNotification"),
                        a = Object(Ne.d)("Close", "ChatResubNotification"),
                        i = Object(Ne.d)("Add a message to the streamer", "ChatResubNotification"),
                        r = this.state.sharing ? Qe.y.Loading : Qe.y.Default;
                    return je.createElement(Qe.U, {
                        className: e,
                        padding: 1,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Qe._2.Absolute
                    }, je.createElement(Qe._17, {
                        className: "share-input__container",
                        position: Qe._2.Relative,
                        border: !0,
                        background: Qe.m.Base,
                        padding: 1
                    }, je.createElement(Qe.U, {
                        position: Qe._2.Absolute,
                        attachTop: !0,
                        attachRight: !0
                    }, je.createElement(Qe.v, {
                        ariaLabel: a,
                        onClick: this.props.onClose,
                        type: Qe.w.Secondary,
                        icon: Qe._9.Close,
                        "data-a-target": "resub-notification-close-form-btn",
                        "data-test-selector": "share-input__close-form-btn"
                    })), je.createElement(Qe.U, {
                        textAlign: Qe._22.Center,
                        padding: {
                            top: 1,
                            bottom: 2
                        }
                    }, this.props.children), je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement(Qe.U, {
                        fullWidth: !0
                    }, je.createElement(Qe.Q, {
                        autoFocus: !0,
                        type: Qe.R.Text,
                        value: this.state.formInputValue,
                        onChange: this.onInputChange,
                        placeholder: i,
                        "data-a-target": "resub-notification-share-message-input",
                        "data-test-selector": "share-input__share-message-input"
                    })), je.createElement(Qe.u, {
                        disabled: t,
                        onClick: this.handleShareClick,
                        "data-a-target": "resub-notification-send-msg-btn",
                        "data-test-selector": "share-input__send-msg-btn",
                        state: r
                    }, n))))
                }, t
            }(je.Component)),
            Xe = (n(931), function(e) {
                var t = Object(Ne.d)("Share", "Chat--SharePrompt"),
                    n = Object(Ne.d)("Close", "Chat--SharePrompt"),
                    a = qe("chat-share-prompt", {
                        "chat-share-prompt--hidden": e.hide || !e.children
                    });
                return je.createElement(Qe.U, {
                    position: Qe._2.Absolute,
                    fullWidth: !0,
                    className: a,
                    padding: {
                        y: .5,
                        left: .5
                    }
                }, je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    padding: 1,
                    justifyContent: Qe.T.Between,
                    alignItems: Qe.c.Center,
                    flexWrap: Qe.K.NoWrap
                }, je.createElement(Qe._21, {
                    "data-a-target": "resub-notification-months-subbed-text",
                    "data-test-selector": "share-prompt__text"
                }, e.children), je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexWrap: Qe.K.NoWrap,
                    alignItems: Qe.c.Center,
                    flexShrink: 0,
                    padding: {
                        left: .5
                    }
                }, je.createElement(Qe.U, {
                    display: Qe.H.Inline,
                    padding: {
                        right: .5
                    },
                    flexShrink: 0
                }, je.createElement(Qe.u, {
                    onClick: e.onClickShare,
                    size: Qe.x.Small,
                    "data-a-target": "resub-notification-share-notification-btn",
                    "data-test-selector": "share-prompt__share-btn"
                }, t)), je.createElement(Qe.U, {
                    flexShrink: 0
                }, je.createElement(Qe.v, {
                    ariaLabel: n,
                    onClick: e.onClickClose,
                    type: Qe.w.Secondary,
                    icon: Qe._9.Close,
                    "data-a-target": "resub-notification-close-notification-btn",
                    "data-test-selector": "share-prompt__close-btn"
                })))))
            }),
            Ze = n(88),
            et = n(932),
            tt = n(933),
            nt = n(934),
            at = (n(935), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        showMessageInput: !1,
                        sendingMessage: !1
                    }, t.dataIsReady = function(e) {
                        return e.data && !e.data.loading && !e.data.error
                    }, t.purchaseTokensExist = function(e) {
                        return e.data.user.self && e.data.user.self.purchaseTokens.length > 0
                    }, t.manageParentSpace = function(e) {
                        if (!t.dataIsReady(e) || !t.purchaseTokensExist(e)) return void t.props.dismissSpace();
                        t.props.requestSpace()
                    }, t.toggleContentShown = function() {
                        t.setState(function(e) {
                            return {
                                showMessageInput: !e.showMessageInput
                            }
                        })
                    }, t.dismissPurchaseToken = function() {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var e, t;
                            return Ee.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.purchaseTokens) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), n.label = 1;
                                    case 1:
                                        return n.trys.push([1, , 3, 4]), e = this.props.data.user.self.purchaseTokens[0].id, t = function(e) {
                                            return e.user.self && (e.user.self.purchaseTokens = e.user.self.purchaseTokens.slice(1)), e
                                        }, Object($e.d)(tt, {
                                            channelLogin: this.props.channelLogin
                                        }, t), [4, this.props.dismissPurchaseToken(Object($e.a)({
                                            token: e,
                                            channelID: this.props.data.user.id
                                        }))];
                                    case 2:
                                        return n.sent(), [3, 4];
                                    case 3:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.sharePurchase = function(e) {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var t;
                            return Ee.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.purchaseTokens) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), n.label = 1;
                                    case 1:
                                        return n.trys.push([1, , 3, 4]), [4, this.props.sharePurchaseTokenInChat(Object($e.a)({
                                            token: this.props.data.user.self.purchaseTokens[0].id,
                                            channelID: this.props.data.user.id,
                                            message: e
                                        }))];
                                    case 2:
                                        return n.sent(), t = function(e) {
                                            return e.user.self && (e.user.self.purchaseTokens = e.user.self.purchaseTokens.slice(1)), e
                                        }, Object($e.d)(tt, {
                                            channelLogin: this.props.channelLogin
                                        }, t), [3, 4];
                                    case 3:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.manageParentSpace(this.props)
                }, t.prototype.componentDidUpdate = function() {
                    this.manageParentSpace(this.props)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    if (this.dataIsReady(e)) {
                        var t = e.pubsub.messages.userCommerceUpdateEvent,
                            n = this.props.pubsub.messages.userCommerceUpdateEvent,
                            a = !n && t,
                            i = n && t && n.time !== t.time;
                        (a || i) && this.props.data && this.props.data.refetch()
                    }
                }, t.prototype.render = function() {
                    return this.dataIsReady(this.props) && this.purchaseTokensExist(this.props) && this.props.data.user.self ? this.renderPurchaseToken(this.props.data.user.self.purchaseTokens[0]) : null
                }, t.prototype.renderPurchaseToken = function(e) {
                    var t;
                    t = this.props.data.user.isCommerceRevShareEnabled ? Object(Ne.d)("You bought {product} and supported {channelName}!", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat") : Object(Ne.d)("You bought {product} while watching {channelName}!", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat");
                    var n, a = e.inGameContents.map(this.renderLootInGameContent),
                        i = e.badges.map(this.renderLootBadge),
                        r = e.emoteSets.map(this.renderLootEmoteSet),
                        s = e.bits.map(this.renderLootBits, this);
                    return (a.length || i.length || r.length || s.length) && (n = je.createElement(Qe.U, {
                        "data-test-selector": "share-purchase__loot",
                        padding: {
                            bottom: 1
                        },
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center
                    }, a, i, r, s), t = Object(Ne.d)("You bought {product} and opened a Twitch Crate! Let {channelName} know you shared the love.", {
                        product: je.createElement("strong", null, e.title),
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat")), je.createElement(Qe.U, {
                        className: "chat-resub-notification",
                        padding: 0,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Qe._2.Absolute
                    }, je.createElement(Xe, {
                        hide: this.state.showMessageInput,
                        onClickShare: this.toggleContentShown,
                        onClickClose: this.dismissPurchaseToken
                    }, t), je.createElement(Ye, {
                        hide: !this.state.showMessageInput,
                        onShare: this.sharePurchase,
                        onClose: this.toggleContentShown
                    }, je.createElement(Qe.U, {
                        padding: {
                            bottom: 1
                        }
                    }, je.createElement("figure", {
                        height: 40,
                        width: 40
                    }, je.createElement("img", {
                        src: e.imageThumbnail
                    }))), n, je.createElement(Qe._21, null, Object(Ne.d)("Score! Give a shout out to {channelName} in Chat about all your sweet loot!", {
                        channelName: je.createElement("strong", null, this.props.channelDisplayName)
                    }, "ShareToChat"))))
                }, t.prototype.renderLootInGameContent = function(e) {
                    return je.createElement(Qe.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__igc"
                    }, je.createElement("img", {
                        className: "share-to-chat__loot",
                        src: e.imageURL
                    }))
                }, t.prototype.renderLootEmoteSet = function(e) {
                    return Object(Ze.b)(e.emoteSet.emotes).map(function(e) {
                        return je.createElement(Qe.U, {
                            key: e.id,
                            margin: {
                                top: .5,
                                right: 1
                            },
                            "data-test-selector": "share-purchase__emoticon"
                        }, je.createElement("img", {
                            className: "share-to-chat__loot",
                            srcSet: e.srcSet,
                            alt: e.displayName
                        }))
                    })
                }, t.prototype.renderLootBadge = function(e) {
                    return je.createElement(Qe.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__badge"
                    }, je.createElement("img", {
                        className: "share-to-chat__loot",
                        src: e.badge.image2x
                    }))
                }, t.prototype.renderLootBits = function(e) {
                    if (this.props.bitsConfig) return je.createElement(Qe.U, {
                        key: e.id,
                        margin: {
                            top: .5,
                            right: 1
                        },
                        "data-test-selector": "share-purchase__bits"
                    }, je.createElement(Ke.a, {
                        count: e.quantity,
                        bitsConfig: this.props.bitsConfig,
                        withImage: !0
                    }))
                }, t = Ee.__decorate([Object(Be.a)(tt, {
                    name: "data",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(ze.a)([{
                    topic: function(e) {
                        return Object(Je.l)(e.currentUserID)
                    },
                    mapMessageTypesToProps: (xe = {}, xe[Ge.c.ChatNotification] = "userCommerceUpdateEvent", xe)
                }])], t)
            }(je.Component)),
            it = Object(Be.a)(et, {
                name: "dismissPurchaseToken"
            })(Object(Be.a)(nt, {
                name: "sharePurchaseTokenInChat"
            })(at)),
            rt = Object(Le.a)(l)(it),
            st = (n(936), function(e) {
                var t = qe("rare-emote__face", {
                        "rare-emote__face--animate": !!e.animate
                    }),
                    n = qe("rare-emote__neck", {
                        "rare-emote__neck--animate": !!e.animate
                    });
                return je.createElement(Qe.U, {
                    overflow: Qe.Y.Hidden,
                    className: "rare-emote"
                }, je.createElement(Qe.P, {
                    zIndex: Qe._38.Above,
                    position: Qe._2.Relative
                }, je.createElement("img", {
                    className: t,
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/" + e.emoteID + "/2.0"
                })), je.createElement(Qe.U, {
                    position: Qe._2.Relative,
                    zIndex: Qe._38.Default,
                    className: n
                }, je.createElement(Qe._8, {
                    width: 28,
                    height: 28,
                    asset: Qe._9.Neck
                })))
            }),
            ot = 3,
            lt = n(269),
            ct = n(937),
            ut = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        resubDismissed: !1,
                        showMessageInput: !1,
                        sendingMessage: !1
                    }, t.randomEmoteId = t.getRandomEmoteId(), t.dataIsReady = function(e) {
                        return e.data && !e.data.loading && !e.data.error
                    }, t.resubExists = function(e, t) {
                        return e.data.user.self && e.data.user.self.resubNotification && !t.resubDismissed
                    }, t.manageParentSpace = function() {
                        if (!t.dataIsReady(t.props) || !t.resubExists(t.props, t.state)) return void t.props.dismissSpace();
                        t.props.requestSpace()
                    }, t.toggleContentShown = function() {
                        t.setState(function(e) {
                            return {
                                showMessageInput: !e.showMessageInput
                            }
                        })
                    }, t.dismissResubNotification = function() {
                        t.setState({
                            resubDismissed: !0
                        })
                    }, t.shareResub = function(e) {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var t, n;
                            return Ee.__generator(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        if (this.state.sendingMessage || !this.props.data.user.self || !this.props.data.user.self.resubNotification) return [2];
                                        this.setState({
                                            sendingMessage: !0
                                        }), a.label = 1;
                                    case 1:
                                        return a.trys.push([1, 4, 5, 6]), this.props.authToken ? [4, c(this.props.channelLogin, this.props.data.user.self.resubNotification.token, e, this.props.authToken)] : [3, 3];
                                    case 2:
                                        a.sent(), t = function(e) {
                                            return e.user.self && (e.user.self.resubNotification = null), e
                                        }, Object($e.d)(ct, {
                                            channelLogin: this.props.channelLogin
                                        }, t), this.dismissResubNotification(), a.label = 3;
                                    case 3:
                                        return [3, 6];
                                    case 4:
                                        return n = a.sent(), Ne.i.error(n, "Failed to post resub message"), [3, 6];
                                    case 5:
                                        return this.setState({
                                            sendingMessage: !1
                                        }), [7];
                                    case 6:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.manageParentSpace()
                }, t.prototype.componentDidUpdate = function() {
                    this.manageParentSpace()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.dataIsReady(e) && e.data.user.self && e.data.user.self.resubNotification && !this.randomEmoteId && (this.randomEmoteId = this.getRandomEmoteId())
                }, t.prototype.render = function() {
                    return this.dataIsReady(this.props) && this.resubExists(this.props, this.state) && this.props.data.user.self && this.props.data.user.self.resubNotification ? this.renderResubToken(this.props.data.user.self.resubNotification) : null
                }, t.prototype.renderResubToken = function(e) {
                    return je.createElement(Qe.U, {
                        className: "chat-resub-notification",
                        padding: 0,
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        position: Qe._2.Absolute
                    }, je.createElement(Xe, {
                        hide: this.state.showMessageInput,
                        onClickShare: this.toggleContentShown,
                        onClickClose: this.dismissResubNotification
                    }, Object(Ne.d)("It's your {monthsSubbed, number} month anniversary!", {
                        monthsSubbed: e.months
                    }, "ChatResubNotification")), je.createElement(Ye, {
                        hide: !this.state.showMessageInput,
                        onShare: this.shareResub,
                        onClose: this.toggleContentShown
                    }, je.createElement(st, {
                        emoteID: this.randomEmoteId,
                        animate: this.state.showMessageInput
                    }), je.createElement(Qe._21, null, Object(Ne.d)("Hooray! Let {channelName} know it's your {monthsSubbed, number} month anniversary.", {
                        channelName: je.createElement("strong", null, this.props.channelDisplayName),
                        monthsSubbed: e.months
                    }, "ChatResubNotification"))))
                }, t.prototype.getRandomEmoteId = function() {
                    var e = Math.floor(Math.random() * lt.a.length);
                    return lt.a[e]
                }, t = Ee.__decorate([Object(Be.a)(ct, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                })], t)
            }(je.Component),
            dt = ut;
        n(938);
        ! function(e) {
            e[e.Resub = 1] = "Resub", e[e.Purchase = 2] = "Purchase"
        }(Te || (Te = {}));
        var pt, mt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        requestedSpaces: new Set
                    }, t.addSpace = function(e) {
                        t.state.requestedSpaces.has(e) || t.setState(function(t) {
                            var n = new Set(t.requestedSpaces);
                            return n.add(e), {
                                requestedSpaces: n
                            }
                        })
                    }, t.removeSpace = function(e) {
                        t.state.requestedSpaces.has(e) && t.setState(function(t) {
                            var n = new Set(t.requestedSpaces);
                            return n.delete(e), {
                                requestedSpaces: n
                            }
                        })
                    }, t.requestResubSpace = function() {
                        t.addSpace(Te.Resub)
                    }, t.dismissResubSpace = function() {
                        t.removeSpace(Te.Resub)
                    }, t.requestPurchaseSpace = function() {
                        t.addSpace(Te.Purchase)
                    }, t.dismissPurchaseSpace = function() {
                        t.removeSpace(Te.Purchase)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = null;
                    this.state.requestedSpaces.size && (e = Array.from(this.state.requestedSpaces.values()).sort()[0]);
                    var t = qe({
                            "share-to-chat__space--hidden": e !== Te.Resub
                        }),
                        n = qe({
                            "share-to-chat__space--hidden": e !== Te.Purchase
                        });
                    return je.createElement(Qe.U, null, je.createElement(Qe.U, {
                        className: t
                    }, je.createElement(dt, {
                        authToken: this.props.authToken,
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        requestSpace: this.requestResubSpace,
                        dismissSpace: this.dismissResubSpace
                    })), je.createElement(Qe.U, {
                        className: n
                    }, je.createElement(rt, {
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        bitsConfig: this.props.bitsConfig,
                        requestSpace: this.requestPurchaseSpace,
                        dismissSpace: this.dismissPurchaseSpace
                    })))
                }, t
            }(je.Component),
            ht = mt,
            ft = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        show: !0
                    }, t.dismiss = function() {
                        t.setState({
                            show: !1
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    e.hostedChannelDisplayName !== this.props.hostedChannelDisplayName && this.setState({
                        show: !0
                    })
                }, t.prototype.render = function() {
                    return this.state.show ? je.createElement(Qe._17, {
                        attachTop: !0,
                        attachLeft: !0,
                        attachRight: !0,
                        background: Qe.m.AccentAlt2,
                        color: Qe.F.Overlay,
                        position: Qe._2.Absolute,
                        className: "hosting-notification",
                        padding: {
                            y: .5,
                            left: .5
                        },
                        "data-a-target": "hosting-notification-container"
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        padding: 1,
                        justifyContent: Qe.T.Between,
                        alignItems: Qe.c.Center,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement(Qe.U, {
                        margin: {
                            right: .5
                        },
                        flexShrink: 0
                    }, je.createElement(Qe._21, null, Object(Ne.d)("Hosting", "ChatHostingNotification"))), je.createElement(Qe.U, {
                        ellipsis: !0,
                        flexShrink: 1,
                        margin: {
                            right: .5
                        }
                    }, je.createElement(Qe._21, {
                        type: Qe._26.Strong,
                        "data-test-selector": "hosting-notification__text",
                        "data-a-target": "hosting-notification-channel-name"
                    }, "" + this.props.hostedChannelDisplayName))), je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexWrap: Qe.K.NoWrap,
                        flexShrink: 0
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Inline,
                        padding: {
                            right: .5
                        }
                    }, je.createElement(Qe.u, {
                        linkTo: {
                            pathname: "/" + this.props.hostedChannelLogin,
                            state: {
                                content: "host_channel",
                                medium: "chat_bar_notification"
                            }
                        },
                        size: Qe.x.Small,
                        "data-a-target": "hosting-notification-gotochannel-button"
                    }, Object(Ne.d)("Go to Channel", "ChatHostingNotification"))), je.createElement(Qe.v, {
                        onClick: this.dismiss,
                        ariaLabel: Object(Ne.d)("Close", "HostingNotification"),
                        size: Qe.x.Small,
                        overlay: !0,
                        icon: Qe._9.Close,
                        "data-a-target": "hosting-notification-close-button"
                    })))) : null
                }, t
            }(je.Component),
            gt = n(37),
            vt = n(105),
            bt = n(441),
            kt = n(266),
            yt = n(5),
            _t = "select-one";
        ! function(e) {
            e[e.Unsubmitted = 0] = "Unsubmitted", e[e.Success = 1] = "Success", e[e.FormError = 2] = "FormError", e[e.MutationError = 3] = "MutationError"
        }(pt || (pt = {}));
        var Ct, St, Et = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        reason: null
                    }, t.blockSelectOptions = u(), t.onSubmit = function(e) {
                        e.preventDefault(), t.props.onSubmit(t.state.reason)
                    }, t.onChangeReason = function(e) {
                        var n = e.target.value;
                        n === _t ? t.setState({
                            reason: null
                        }) : t.setState({
                            reason: n
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Qe.U, {
                        fullHeight: !0,
                        fullWidth: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        alignItems: Qe.c.Center,
                        justifyContent: Qe.T.Center
                    }, this.renderStatusMessage(), this.renderBody())
                }, t.prototype.renderBody = function() {
                    if (this.props.submitStatus === pt.Success) return je.createElement(Qe.u, {
                        onClick: this.props.onClose
                    }, je.createElement(Qe.U, {
                        padding: {
                            x: 2
                        }
                    }, Object(Ne.d)("Close", "BlockUser")));
                    var e = Object(Ne.d)("You've chosen to ignore this user from chatting or whispering you. Please tell us your concern with this user to determine whether there has been a violation of the terms of service.", "BlockUser"),
                        t = Object(Ne.d)("Report {channel}", {
                            channel: this.props.blockedUserDisplayName
                        }, "BlockUser");
                    return je.createElement("div", null, je.createElement(Qe._21, {
                        type: Qe._26.H4
                    }, t), je.createElement(Qe._17, {
                        color: Qe.F.Alt2,
                        margin: {
                            y: 1
                        }
                    }, e), je.createElement("a", {
                        href: "https://www.twitch.tv/p/terms-of-service",
                        target: "_blank"
                    }, Object(Ne.d)("View the Terms of Service", "BlockUser")), je.createElement("form", null, je.createElement(Qe._17, {
                        borderTop: !0,
                        margin: {
                            y: 2
                        },
                        padding: {
                            y: 2
                        }
                    }, je.createElement(Qe.M, {
                        label: Object(Ne.d)("Select Reason (required)", "BlockUser")
                    }, je.createElement(Qe._14, {
                        "data-test-selector": "block-user-dropdown",
                        onChange: this.onChangeReason,
                        defaultValue: _t
                    }, this.renderReasons()))), je.createElement(Qe._17, {
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center
                    }, je.createElement(Qe.u, {
                        "data-test-selector": "block-user-submit-button",
                        onClick: this.onSubmit
                    }, je.createElement(Qe.U, {
                        padding: {
                            x: 2
                        }
                    }, Object(Ne.d)("Send", "BlockUser"))))))
                }, t.prototype.renderReasons = function() {
                    return this.blockSelectOptions.map(function(e) {
                        return je.createElement("option", {
                            key: e.canonical,
                            value: e.canonical,
                            name: e.text
                        }, e.text)
                    })
                }, t.prototype.renderStatusMessage = function() {
                    var e = null;
                    switch (this.props.submitStatus) {
                        case pt.FormError:
                            e = Object(Ne.d)("Please select a reason.", "BlockUser");
                            break;
                        case pt.MutationError:
                            e = Object(Ne.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "BlockUser");
                            break;
                        case pt.Success:
                            e = Object(Ne.d)("Thank you for your report.", "BlockUser");
                            break;
                        default:
                            return null
                    }
                    var t = qe({
                        "reporting__error-container": this.props.submitStatus !== pt.Success,
                        "reporting__success-container": this.props.submitStatus === pt.Success
                    });
                    return je.createElement(Qe._17, {
                        className: t,
                        fullWidth: this.props.submitStatus !== pt.Success,
                        margin: {
                            bottom: 2
                        },
                        padding: 1,
                        "data-test-selector": "block-user-status-message"
                    }, e)
                }, t
            }(je.Component),
            wt = (n(939), n(940)),
            Nt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        submitStatus: pt.Unsubmitted
                    }, t.onClose = function() {
                        t.props.closeModal(), t.props.onClose && t.props.onClose(t.state.submitStatus)
                    }, t.onSubmit = function(e) {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var t;
                            return Ee.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (!e) return this.setState({
                                            submitStatus: pt.FormError
                                        }), [2];
                                        n.label = 1;
                                    case 1:
                                        return n.trys.push([1, 3, , 4]), [4, this.props.blockUserMutation(this.props.data.user.id, e, kt.a.Chat)];
                                    case 2:
                                        return n.sent(), this.setState({
                                            submitStatus: pt.Success
                                        }), [3, 4];
                                    case 3:
                                        return t = n.sent(), Ne.i.error(t, "BlockUser Mutation failed"), this.setState({
                                            submitStatus: pt.MutationError
                                        }), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Qe._17, {
                        className: "block-user__container",
                        background: Qe.m.Base,
                        padding: {
                            x: 2,
                            y: 3
                        }
                    }, this.renderBody(), je.createElement(vt.a, null))
                }, t.prototype.renderBody = function() {
                    return this.props.data.loading ? je.createElement(Qe.X, {
                        fillContent: !0
                    }) : je.createElement(Et, {
                        blockedUserDisplayName: this.props.data.user.displayName,
                        submitStatus: this.state.submitStatus,
                        onClose: this.onClose,
                        onSubmit: this.onSubmit
                    })
                }, t
            }(je.Component),
            Dt = Object(Ae.compose)(Object(yt.c)("BlockUser"), Object(Be.a)(wt, {
                options: function(e) {
                    return {
                        variables: {
                            targetUserID: e.targetUserID
                        }
                    }
                }
            }), Object(bt.a)(), Object(Le.a)(null, d))(Nt),
            It = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.props.addCommand(this.props.command, this.props.handler)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.command === e.command && this.props.handler === e.handler || (this.props.removeCommand(this.props.command), this.props.addCommand(e.command, e.handler))
                }, t.prototype.componentWillUnmount = function() {
                    this.props.removeCommand(this.props.command)
                }, t.prototype.render = function() {
                    return null
                }, t
            }(je.PureComponent),
            Ot = Object(Le.a)(null, p)(It),
            Ut = n(941),
            xt = n(942),
            Tt = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getInvalidUserMessage = function() {
                        return Object(Ne.d)("No user matching that login.", "IgnoreCommandHandler")
                    }, t.blockUser = function(e) {
                        if (e) {
                            if (e === t.props.userLogin) return {
                                notice: Object(Ne.d)("You cannot ignore yourself.", "ChatRoom")
                            };
                            return {
                                deferred: m(e).then(function(e) {
                                    return e ? new Promise(function(n) {
                                        t.props.showBlockUser({
                                            targetUserID: e,
                                            onClose: function(e) {
                                                e === pt.Success ? n({
                                                    notice: Object(Ne.d)("User successfully ignored.", "ChatRoom")
                                                }) : n()
                                            }
                                        })
                                    }) : {
                                        notice: t.getInvalidUserMessage()
                                    }
                                })
                            }
                        }
                        return {
                            notice: Object(Ne.d)("Please specify a user to ignore", "ChatRoom")
                        }
                    }, t.unblockUser = function(e) {
                        if (e) {
                            if (e === t.props.userLogin) return {
                                notice: Object(Ne.d)("You cannot unignore yourself.", "ChatRoom")
                            };
                            return {
                                deferred: m(e).then(function(e) {
                                    return e ? (t.props.onUnblockUser(e), {
                                        notice: Object(Ne.d)("User successfully unignored", "ChatRoom")
                                    }) : {
                                        notice: t.getInvalidUserMessage()
                                    }
                                })
                            }
                        }
                        return {
                            notice: Object(Ne.d)("Please specify a user to unignore", "ChatRoom")
                        }
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    return je.createElement("span", {
                        style: {
                            display: "none"
                        }
                    }, je.createElement(Ot, {
                        command: "ignore",
                        handler: this.blockUser
                    }), je.createElement(Ot, {
                        command: "unignore",
                        handler: this.unblockUser
                    }))
                }, t
            }(je.Component),
            Lt = function() {
                var e = this;
                return Object(Be.a)(Ut, {
                    props: function(t) {
                        return {
                            onUnblockUser: function(n) {
                                return Ee.__awaiter(e, void 0, void 0, function() {
                                    var e, a;
                                    return Ee.__generator(this, function(i) {
                                        switch (i.label) {
                                            case 0:
                                                if (!t.mutate) return [2];
                                                i.label = 1;
                                            case 1:
                                                return i.trys.push([1, 3, , 4]), e = Ee.__assign({}, Object($e.a)({
                                                    targetUserID: n
                                                }), {
                                                    optimisticResponse: {
                                                        unblockUser: {
                                                            __typename: "UnblockUserPayload",
                                                            targetUser: {
                                                                id: n,
                                                                __typename: "User"
                                                            }
                                                        }
                                                    }
                                                }), [4, t.mutate(e)];
                                            case 2:
                                                return i.sent(), [3, 4];
                                            case 3:
                                                return a = i.sent(), Ne.i.error(a, "Unable to unblock user"), [3, 4];
                                            case 4:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }()(Tt),
            Ft = Object(Le.a)(null, h)(Lt),
            jt = n(47),
            Bt = n(827),
            Mt = (n(943), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        requestFailed: !1
                    }, t.logger = Ne.n.logger.withCategory("orbis"), t.onClickInteraction = function(e) {
                        t.props.sendMessage(":act " + e.currentTarget.getAttribute("data-action")), t.toggleBalloonRef.toggleBalloon()
                    }, t.setToggleBalloonRef = function(e) {
                        return t.toggleBalloonRef = e
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.isLoggedIn && this.props.firstPageLoaded && this.getChatProperties()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.isLoggedIn && !this.props.firstPageLoaded && e.firstPageLoaded && this.getChatProperties()
                }, t.prototype.render = function() {
                    return this.props.isLoggedIn && !this.state.requestFailed && this.hasInteractions() ? je.createElement(Qe._17, {
                        className: "orbis",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        alignItems: Qe.c.Stretch,
                        background: Qe.m.Base,
                        flexShrink: 0,
                        borderBottom: !0
                    }, je.createElement(jt.a, {
                        ref: this.setToggleBalloonRef
                    }, je.createElement("div", {
                        className: "orbis__dropdown-container",
                        "data-test-selector": "orbis-dropdown-container"
                    }, je.createElement(Qe.U, {
                        padding: {
                            y: 1,
                            x: 2
                        },
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement(Qe.U, {
                        ellipsis: !0,
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Qe._21, {
                        type: Qe._26.Span
                    }, Object(Ne.d)("Interactions Available", "Orbis"))), je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between,
                        alignItems: Qe.c.Center,
                        flexShrink: 0
                    }, je.createElement(Qe.U, {
                        className: "orbis__dropdown-icon",
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between,
                        alignItems: Qe.c.Center
                    }, je.createElement(Qe._8, {
                        asset: Qe._9.AngleRight
                    }))))), je.createElement(Qe.p, {
                        offsetY: "1px",
                        noTail: !0
                    }, je.createElement(Qe.U, {
                        className: "orbis__dropdown-content",
                        padding: 1
                    }, this.renderInteractions())))) : null
                }, t.prototype.renderInteractions = function() {
                    return this.state.chatProperties ? [this.renderInteraction(this.state.chatProperties.sce_title_preset_text_1), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_2), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_3), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_4), this.renderInteraction(this.state.chatProperties.sce_title_preset_text_5)] : null
                }, t.prototype.renderInteraction = function(e) {
                    return e ? je.createElement(Qe.S, {
                        onClick: this.onClickInteraction,
                        key: e,
                        "data-action": e,
                        "data-test-selector": "orbis-interaction"
                    }, je.createElement(Qe.P, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, je.createElement(Qe._21, {
                        ellipsis: !0
                    }, e))) : null
                }, t.prototype.getChatProperties = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Ee.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return n.trys.push([0, 2, , 3]), [4, Bt.a.get("/api/channels/" + this.props.channelLogin + "/chat_properties?on_site=1")];
                                case 1:
                                    return e = n.sent(), e.requestError ? (this.logger.error(e.requestError, "Unable to fetch chat properties"), this.setState({
                                        requestFailed: !0
                                    }), [2]) : e.error ? (this.logger.error(new Error("Chat Properties Error"), "The API returned a non-200 response", e.error), this.setState({
                                        requestFailed: !0
                                    }), [2]) : e.body ? (this.setState({
                                        chatProperties: e.body
                                    }), [3, 3]) : (this.logger.error(new Error("Chat Properties Error"), "Body is undefined"), this.setState({
                                        requestFailed: !0
                                    }), [2]);
                                case 2:
                                    return t = n.sent(), this.logger.error(t, "Unable to fetch chat properties"), this.setState({
                                        requestFailed: !0
                                    }), [3, 3];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, t.prototype.hasInteractions = function() {
                    return !!this.state.chatProperties && !!(this.state.chatProperties.sce_title_preset_text_1 || this.state.chatProperties.sce_title_preset_text_2 || this.state.chatProperties.sce_title_preset_text_3 || this.state.chatProperties.sce_title_preset_text_4 || this.state.chatProperties.sce_title_preset_text_5)
                }, t
            }(je.Component)),
            At = Mt,
            Rt = Object(Le.a)(f)(At),
            Pt = n(22),
            Ht = n(54),
            Vt = n(39),
            Wt = function() {
                function e() {}
                return e
            }(),
            qt = function(e) {
                function t(t) {
                    var n = e.call(this) || this;
                    return n.expiredRaids = new Set, n.joinedRaids = new Set, t && (n.expiredRaids = t.expiredRaids, n.joinedRaids = t.joinedRaids), n
                }
                return Ee.__extends(t, e), t.prototype.isExpired = function(e) {
                    return this.expiredRaids.has(e)
                }, t.prototype.hasJoined = function(e) {
                    return this.joinedRaids.has(e) || this.getStorageData()[e.id]
                }, t.prototype.expireRaid = function(e) {
                    var n = new Set(this.expiredRaids);
                    return n.add(e), new t({
                        expiredRaids: n,
                        joinedRaids: this.joinedRaids
                    })
                }, t.prototype.joinRaid = function(e) {
                    var n = new Set(this.joinedRaids);
                    n.add(e);
                    var a = this.getStorageData();
                    return a[e.id] = !0, this.setStorageData(a), new t({
                        expiredRaids: this.expiredRaids,
                        joinedRaids: n
                    })
                }, t.prototype.leaveRaid = function(e) {
                    var n = new Set(this.joinedRaids);
                    n.delete(e);
                    var a = this.getStorageData();
                    return delete a[e.id], this.setStorageData(a), new t({
                        expiredRaids: this.expiredRaids,
                        joinedRaids: n
                    })
                }, t.prototype.setStorageData = function(e) {
                    Ne.k.set("raid", e)
                }, t.prototype.getStorageData = function() {
                    return Ne.k.get("raid", {})
                }, t
            }(Wt),
            zt = function(e) {
                function t(t) {
                    var n = e.call(this) || this;
                    return n.expiredRaids = new Set, n.leftRaids = new Set, t && (n.expiredRaids = t.expiredRaids, n.leftRaids = t.leftRaids), n
                }
                return Ee.__extends(t, e), t.prototype.isExpired = function(e) {
                    return this.expiredRaids.has(e)
                }, t.prototype.hasJoined = function(e) {
                    return !this.leftRaids.has(e) && !this.getStorageData()[e.id]
                }, t.prototype.expireRaid = function(e) {
                    var n = new Set(this.expiredRaids);
                    return n.add(e), new t({
                        expiredRaids: n,
                        leftRaids: this.leftRaids
                    })
                }, t.prototype.joinRaid = function(e) {
                    var n = new Set(this.leftRaids);
                    n.delete(e);
                    var a = this.getStorageData();
                    return delete a[e.id], this.setStorageData(a), new t({
                        expiredRaids: this.expiredRaids,
                        leftRaids: n
                    })
                }, t.prototype.leaveRaid = function(e) {
                    var n = new Set(this.leftRaids);
                    n.add(e);
                    var a = this.getStorageData();
                    return a[e.id] = !0, this.setStorageData(a), new t({
                        expiredRaids: this.expiredRaids,
                        leftRaids: n
                    })
                }, t.prototype.setStorageData = function(e) {
                    Ne.k.set("raids-left", e)
                }, t.prototype.getStorageData = function() {
                    return Ne.k.get("raids-left", {})
                }, t
            }(Wt),
            Gt = 3,
            $t = 5,
            Jt = "raid_update",
            Kt = function() {
                function e(e, t) {
                    this.message = e, this.id = e.raid.id, this.creatorID = e.raid.creator_id, this.sourceChannelID = e.raid.source_id, this.targetChannelID = e.raid.target_id, this.viewerCount = e.raid.viewer_count, t ? (this.varianceSeconds = t.varianceSeconds, this.totalDurationInSeconds = t.totalDurationInSeconds, this.clientCreatedAtTimestamp = t.clientCreatedAtTimestamp) : (this.varianceSeconds = g(), this.totalDurationInSeconds = this.getTotalDurationInSeconds(e.raid.remaining_duration_seconds), this.clientCreatedAtTimestamp = (new Date).getTime()), this.isAnnouncing = e.type === Jt && this.totalDurationInSeconds > 0, this.hasTimeToJoin = this.totalDurationInSeconds > $t
                }
                return e.prototype.withMessage = function(t) {
                    return this.message === t ? this : this.id !== t.raid.id ? new e(t) : new e(t, this)
                }, e.prototype.getRemainingJoinTime = function(e) {
                    void 0 === e && (e = new Date);
                    var t = e.getTime() - this.clientCreatedAtTimestamp;
                    return 1e3 * this.totalDurationInSeconds - t
                }, e.prototype.getTotalDurationInSeconds = function(e) {
                    var t = e + this.varianceSeconds;
                    return Math.max(t, 0)
                }, e
            }(),
            Qt = "https://api.twitch.tv/kraken",
            Yt = n(822),
            Xt = (n(944), {
                "data-test-selector": "countdown-fill-width"
            }),
            Zt = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this,
                        t = this.props.startPolling || setInterval;
                    this.intervalID = t(function() {
                        return e.forceUpdate()
                    }, 1e3)
                }, t.prototype.componentWillUnmount = function() {
                    clearInterval(this.intervalID)
                }, t.prototype.componentDidUpdate = function() {
                    this.props.getRemainingTime() <= 0 && this.props.onCountdownEnd()
                }, t.prototype.render = function() {
                    var e = this.countdownPercentage + "%";
                    return je.createElement("div", {
                        className: "raid-countdown-bar"
                    }, je.createElement("div", Ee.__assign({
                        className: "raid-countdown-bar__fill",
                        style: {
                            width: e
                        }
                    }, Xt)))
                }, Object.defineProperty(t.prototype, "countdownPercentage", {
                    get: function() {
                        return this.props.getRemainingTime() / this.props.totalCountdownTime * 100
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.PureComponent),
            en = (n(945), n(13)),
            tn = {
                medium: "twitch_channel",
                content: "raid_channel"
            },
            nn = n(946),
            an = Object(Be.a)(nn, {
                options: function(e) {
                    return {
                        variables: {
                            sourceChannelID: e.raid.sourceChannelID,
                            targetChannelID: e.raid.targetChannelID
                        }
                    }
                }
            })(S),
            rn = {
                "data-test-selector": "current-raiders"
            },
            sn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getRemainingTime = function() {
                        return t.props.raid.getRemainingJoinTime()
                    }, t.handleCountdownEnd = function() {
                        t.props.onRaidInvitePeriodOver(t.props.data.targetChannel.displayName)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    _(this.props.raid)
                }, t.prototype.render = function() {
                    var e = this.props.data,
                        t = e.sourceChannel,
                        n = e.targetChannel;
                    return je.createElement(Qe._17, {
                        className: "raid-notification",
                        background: Qe.m.AccentAlt2,
                        color: Qe.F.Overlay,
                        position: Qe._2.Absolute,
                        zIndex: Qe._38.Above,
                        fullWidth: !0
                    }, je.createElement(Qe.U, {
                        className: "raid-notification__content",
                        padding: {
                            y: 1,
                            x: 2
                        },
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between
                    }, je.createElement(Qe.U, {
                        alignItems: Qe.c.Center,
                        display: Qe.H.Flex
                    }, je.createElement(Qe.l, {
                        size: 36,
                        imageSrc: t.profileImageURL,
                        imageAlt: t.displayName
                    }), je.createElement(Qe._8, {
                        asset: Qe._9.AngleRight,
                        height: 10
                    }), je.createElement(Qe.l, {
                        size: 36,
                        imageSrc: n.profileImageURL,
                        imageAlt: n.displayName
                    }), je.createElement(Qe.U, {
                        padding: {
                            left: 1
                        }
                    }, je.createElement(Qe._21, {
                        color: Qe.F.OverlayAlt,
                        type: Qe._26.P,
                        className: "raid-notification__channel-name"
                    }, Object(Ne.d)("{sourceDisplayName} is", {
                        sourceDisplayName: t.displayName
                    }, "RaidCTASourceChannel")), je.createElement(Qe._21, null, Object(Ne.d)("raiding {targetDisplayName}", {
                        targetDisplayName: n.displayName
                    }, "RaidCTATargetChannel")), je.createElement(Qe._21, Ee.__assign({
                        bold: !0
                    }, rn), Object(Ne.d)("{viewerCount, plural, one {# raider} other {# raiders}}", {
                        viewerCount: this.props.raid.viewerCount
                    }, "RaidCTATotalRaiders")))), this.props.children), je.createElement(Zt, {
                        totalCountdownTime: 1e3 * this.props.raid.totalDurationInSeconds,
                        getRemainingTime: this.getRemainingTime,
                        onCountdownEnd: this.handleCountdownEnd
                    }))
                }, t
            }(je.Component),
            on = function(e) {
                return function(t) {
                    return je.createElement(an, Ee.__assign({}, t, {
                        component: e
                    }))
                }
            }(sn),
            ln = {
                "data-test-selector": "raid-cancel-button"
            },
            cn = function(e) {
                return je.createElement(Qe.U, {
                    alignSelf: Qe.d.Center
                }, je.createElement(Qe.u, Ee.__assign({
                    size: Qe.x.Large,
                    type: Qe.z.Hollow,
                    overlay: !0,
                    onClick: e.onCancelRaid
                }, ln), Object(Ne.d)("Cancel", "RaidCTACancel")))
            },
            un = n(852),
            dn = {
                "data-test-selector": "join-raid-button"
            },
            pn = {
                "data-test-selector": "leave-raid-button"
            },
            mn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.timerID = 0, t.handleLeaveRaid = function() {
                        clearTimeout(t.timerID), t.props.onLeaveRaid()
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.hasJoined && (this.timerID = setTimeout(this.props.onJoinRaid, Object(un.random)(5e3)))
                }, t.prototype.componentWillUnmount = function() {
                    clearTimeout(this.timerID)
                }, t.prototype.render = function() {
                    return this.props.hasJoined ? je.createElement(Qe.U, {
                        alignSelf: Qe.d.Center
                    }, je.createElement(Qe.u, Ee.__assign({
                        size: Qe.x.Large,
                        type: Qe.z.Hollow,
                        overlay: !0,
                        onClick: this.handleLeaveRaid
                    }, pn), Object(Ne.d)("Leave", "RaidCTALeave"))) : je.createElement(Qe.U, {
                        alignSelf: Qe.d.Center
                    }, je.createElement(Qe.u, Ee.__assign({
                        size: Qe.x.Large,
                        onClick: this.props.onJoinRaid
                    }, dn), Object(Ne.d)("Join", "RaidCTAJoin")))
                }, t
            }(je.Component),
            hn = n(947),
            fn = n(21),
            gn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        raidStorage: new qt
                    }, t.handleRaidInvitePeriodOver = function(e) {
                        var n = t.hasJoinedCurrentRaid;
                        if (t.currentRaid && t.setState({
                                raidStorage: t.state.raidStorage.expireRaid(t.currentRaid)
                            }, function() {
                                t._currentRaid = void 0
                            }), n) {
                            var a = t.props.history.location || window.location,
                                i = E(a, e);
                            i && t.props.history.push(i, tn)
                        }
                    }, t.handleJoinRaid = function() {
                        if (t.currentRaid) {
                            var e = t.currentRaid.id;
                            if (!t.props.authToken) return void t.props.login();
                            v(e, t.props.authToken), k(t.currentRaid), t.setState({
                                raidStorage: t.state.raidStorage.joinRaid(t.currentRaid)
                            })
                        }
                    }, t.handleLeaveRaid = function() {
                        if (t.currentRaid) {
                            b(t.currentRaid.id, t.props.authToken), y(t.currentRaid), t.setState({
                                raidStorage: t.state.raidStorage.leaveRaid(t.currentRaid)
                            })
                        }
                    }, t.handleCancelRaid = function() {
                        t.currentRaid && t.props.send(Yt.a)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return Ee.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, Ne.n.experiments.getAssignment("TWILIGHT_RAID_AUTO_JOIN")];
                                case 1:
                                    return e = t.sent(), "yes" === e && this.setState({
                                        raidStorage: new zt
                                    }), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    return this.shouldRenderRaidNotification ? je.createElement(on, {
                        raid: this.currentRaid,
                        onRaidInvitePeriodOver: this.handleRaidInvitePeriodOver
                    }, this.renderCTAButton()) : null
                }, t.prototype.renderCTAButton = function() {
                    return this.isRaidCreator ? je.createElement(cn, {
                        onCancelRaid: this.handleCancelRaid
                    }) : je.createElement(mn, {
                        onJoinRaid: this.handleJoinRaid,
                        onLeaveRaid: this.handleLeaveRaid,
                        hasJoined: this.hasJoinedCurrentRaid
                    })
                }, Object.defineProperty(t.prototype, "shouldRenderRaidNotification", {
                    get: function() {
                        var e = this.currentRaid;
                        return e && e.isAnnouncing && e.sourceChannelID === this.props.channelID && !this.state.raidStorage.isExpired(e) && (e.hasTimeToJoin || this.hasJoinedCurrentRaid)
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "isRaidCreator", {
                    get: function() {
                        var e = this.currentRaid;
                        return e && this.props.data && this.props.data.user && this.props.data.user.id === e.creatorID
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "currentRaid", {
                    get: function() {
                        var e = this.props.pubsub.messages.raidMessage;
                        return e && (this._currentRaid ? this._currentRaid = this._currentRaid.withMessage(e) : this._currentRaid = new Kt(e)), this._currentRaid
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(t.prototype, "hasJoinedCurrentRaid", {
                    get: function() {
                        var e = this.currentRaid;
                        return !(!e || !this.props.authToken) && (this.isRaidCreator || this.state.raidStorage.hasJoined(e))
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.Component),
            vn = Object(Be.a)(hn, {
                skip: function(e) {
                    return !e.authToken
                }
            })(gn),
            bn = Object(Le.a)(D, I)(vn),
            kn = Object(ze.a)([{
                topic: function(e) {
                    return Object(Je.g)(e.channelID)
                },
                mapMessageTypesToProps: (Ct = {}, Ct[Ge.c.RaidUpdate] = "raidMessage", Ct[Ge.c.RaidCancel] = "raidMessage", Ct)
            }])(bn),
            yn = Object(Pt.e)(kn),
            _n = n(57),
            Cn = n(72),
            Sn = n(442),
            En = n(55),
            wn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleWhisperCommand = function(e) {
                        var n = Object(Yt.o)(e),
                            a = n.recipientLogin,
                            i = n.body;
                        if (!a || !i) return {
                            preserveInput: !0
                        };
                        if (t.props.isEmbedded || t.props.isPopout) return {
                            notice: Object(Ne.d)("Please use the whisper window for whispers.", "ChatRoom")
                        };
                        if (a.toLowerCase() === t.props.userLogin) return {
                            notice: Object(Ne.d)("You cannot whisper to yourself.", "ChatRoom")
                        };
                        if (t.props.userID) return {
                            deferred: t.initiateWhisper(a, i)
                        }
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    return je.createElement(Ot, {
                        command: "w",
                        handler: this.handleWhisperCommand
                    })
                }, t.prototype.initiateWhisper = function(e, t) {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var n, a, i, r;
                        return Ee.__generator(this, function(s) {
                            switch (s.label) {
                                case 0:
                                    n = null, s.label = 1;
                                case 1:
                                    return s.trys.push([1, 3, , 4]), [4, m(e)];
                                case 2:
                                    return n = s.sent(), [3, 4];
                                case 3:
                                    return a = s.sent(), Ne.i.warn(a, "Failed to fetch user targeted by whisper command.", {
                                        recipientLogin: e
                                    }), [3, 4];
                                case 4:
                                    if (!n) return [2, {
                                        notice: Object(Ne.d)("No user matching that login.", "ChatRoom")
                                    }];
                                    s.label = 5;
                                case 5:
                                    return s.trys.push([5, 7, , 8]), [4, Object(Sn.a)({
                                        currentUserID: this.props.userID,
                                        emotes: this.props.getCurrentEmotes(),
                                        message: t,
                                        recipientUserID: n
                                    })];
                                case 6:
                                    return s.sent(), [3, 8];
                                case 7:
                                    return i = s.sent(), Ne.i.error(i, "Failed to send whisper using whisper command.", {
                                        currentUserID: this.props.userID,
                                        recipientUserID: n
                                    }), [2];
                                case 8:
                                    return r = Object(En.a)(this.props.userID, n), this.props.openThread(r), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            Nn = Object(Le.a)(null, O)(wn),
            Dn = n(814),
            In = n(948),
            On = 200,
            Un = function() {
                function e(e) {
                    var t = this;
                    this.getActiveChatters = function() {
                        return t.isDirty = !1, Object.keys(t.activeChatters).map(function(e) {
                            return t.activeChatters[e]
                        })
                    }, this.setCurrentUserID = function(e) {
                        t.currentUserID = e, t.activeChatterIDs.has(e) && (t.isDirty = !0, t.removeActiveChatter(e))
                    }, this.consumeChatEvent = function(e) {
                        switch (e.type) {
                            case Dn.a.Action:
                            case Dn.a.Post:
                            case Dn.a.PostWithMention:
                                var n = e;
                                t.handleActiveChatter(n.user)
                        }
                    }, this.handleActiveChatter = function(e) {
                        e.userID && e.userID !== t.channelID && e.userID !== t.currentUserID && (t.activeChatterIDs.has(e.userID) ? (t.activeChatterIDs.delete(e.userID), t.addActiveChatter(e)) : (t.addActiveChatter(e), t.trimActiveChatters(), t.isDirty = !0))
                    }, this.addActiveChatter = function(e) {
                        e.userID && (t.activeChatterIDs.add(e.userID), t.activeChatters[e.userID] = e)
                    }, this.removeActiveChatter = function(e) {
                        t.activeChatterIDs.delete(e), delete t.activeChatters[e]
                    }, this.trimActiveChatters = function() {
                        if (!(t.activeChatterIDs.size <= On))
                            for (var e = t.activeChatterIDs.size - On, n = t.activeChatterIDs.values(), a = 0; a < e; a++) {
                                var i = n.next().value;
                                t.removeActiveChatter(i)
                            }
                    }, this.activeChatterIDs = new Set, this.activeChatters = {}, this.channelID = e, this.currentUserID = null
                }
                return e
            }(),
            xn = n(261),
            Tn = 1e3,
            Ln = 250,
            Fn = 0,
            jn = 200,
            Bn = function() {
                function e(e) {
                    void 0 === e && (e = Ln);
                    var t = this;
                    this.maxSize = e, this.setDelay = function(e) {
                        t.delayDuration = e
                    }, this.setCurrentUserLogin = function(e) {
                        t.currentUserLogin = e
                    }, this.consumeChatEvent = function(e) {
                        var n = !1;
                        switch (e.type) {
                            case Dn.a.Action:
                            case Dn.a.Post:
                            case Dn.a.PostWithMention:
                                var a = e;
                                if (a.user.userID && t.blockedUsers.has(a.user.userID)) return;
                                var i = a.messageParts[0];
                                if (i && i.type === xn.a.Text && i.content.startsWith(":act ")) return;
                                n = !t.isOwnMessage(a);
                                break;
                            case Dn.a.Resubscription:
                                var r = e;
                                n = !t.isOwnMessage(r) && void 0 !== r.messageParts;
                                break;
                            case Dn.a.Ban:
                            case Dn.a.Timeout:
                                var s = e,
                                    o = s.userLogin;
                                if (t.moderatedUsers.has(o)) return;
                                [t.buffer, t.delayedMessageBuffer.map(function(e) {
                                    return e.event
                                })].forEach(function(e) {
                                    e.forEach(function(e) {
                                        e.user && o === e.user.userLogin && e.messageParts && !e.deleted && (e.deleted = !0)
                                    })
                                }), t.moderatedUsers.add(o), setTimeout(t.unmoderateUser(o), Tn);
                                break;
                            case Dn.a.Disconnected:
                                return;
                            case Dn.a.Reconnect:
                                if (t.buffer.find(function(t) {
                                        return t.id === e.id
                                    }) || t.delayedMessageBuffer.find(function(t) {
                                        return t.event.id === e.id
                                    })) return;
                                break;
                            case Dn.a.Clear:
                                t.delayedMessageBuffer = [], t.buffer = []
                        }
                        t.delayedMessageBuffer.push({
                            event: e,
                            time: Date.now(),
                            shouldDelay: n
                        })
                    }, this.unmoderateUser = function(e) {
                        return function() {
                            t.moderatedUsers.delete(e)
                        }
                    }, this.isOwnMessage = function(e) {
                        var n = e.user;
                        return !(!t.currentUserLogin || !n || n.userLogin !== t.currentUserLogin)
                    }, this.delayedMessageBuffer = [], this.buffer = [], this.moderatedUsers = new Set, this.blockedUsers = new Set, this._isDirty = !1, this.throttlingDuration = jn, this.delayDuration = Fn, this.currentUserLogin = null, this.flushInterval = setInterval(function() {
                        return t.flushRawMessages()
                    }, this.throttlingDuration), this.setBlockedUsers = this.setBlockedUsers.bind(this)
                }
                return e.prototype.shutdown = function() {
                    this.flushInterval && clearInterval(this.flushInterval)
                }, e.prototype.setBlockedUsers = function(e) {
                    this.blockedUsers = new Set(e)
                }, e.prototype.toArray = function() {
                    return this.buffer = this.buffer.slice(-this.maxSize), this._isDirty = !1, this.buffer
                }, e.prototype.isDeletable = function(e) {
                    return void 0 !== e.deleted
                }, e.prototype.flushRawMessages = function() {
                    var e = this,
                        t = [],
                        n = Date.now();
                    this.delayedMessageBuffer.forEach(function(a) {
                        var i = a.event,
                            r = a.time,
                            s = a.shouldDelay;
                        r <= n - e.delayDuration || !s ? e.isDeletable(i) && i.deleted || (e.buffer.push(i), e._isDirty = !0) : t.push({
                            event: i,
                            time: r,
                            shouldDelay: s
                        })
                    }), this.delayedMessageBuffer = t
                }, Object.defineProperty(e.prototype, "isDirty", {
                    get: function() {
                        return this._isDirty
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "length", {
                    get: function() {
                        return this.buffer.length
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "moderatedUserCount", {
                    get: function() {
                        return this.moderatedUsers.size
                    },
                    enumerable: !0,
                    configurable: !0
                }), e
            }(),
            Mn = n(816),
            An = n(826),
            Rn = n(840),
            Pn = n(131),
            Hn = n(853),
            Vn = n(268),
            Wn = function() {
                function e(e, t, n) {
                    var a = this;
                    this.onJoinedEvent = function(e) {
                        return a.postMessage(A())
                    }, this.onDisconnectedEvent = function(e) {
                        return a.postMessage(R(e.reason))
                    }, this.onReconnectingEvent = function(e) {
                        return a.postMessage(P())
                    }, this.onHostingEvent = function(e) {
                        return a.postMessage(H(e.target))
                    }, this.onUnhostEvent = function(e) {
                        return a.postMessage(V(e.channel))
                    }, this.onChatMessageEvent = function(e) {
                        a.postMessage(a.convertMessage(e))
                    }, this.onChatActionEvent = function(e) {
                        var t = a.bitsConfig || Ve.a,
                            n = e.message.user.username === a.userLogin ? a.selfEmotes : void 0,
                            i = L(Dn.a.Action, e.action, e.message.user, t, a.shouldBlockLinks(e.message.user), n);
                        a.postMessage(i)
                    }, this.onChatNoticeEvent = function(e) {
                        var t = F(e.channel, e.msgid, e.body);
                        a.postMessage(t)
                    }, this.onTimeoutEvent = function(e) {
                        a.onModerationEvent(Dn.a.Timeout, e)
                    }, this.onBanEvent = function(e) {
                        a.onModerationEvent(Dn.a.Ban, e)
                    }, this.onModerationEvent = function(e, t) {
                        a.postMessage(Object(Hn.a)(e, t.userLogin, t.reason, t.duration))
                    }, this.onSubscriptionEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = e.methods.prime ? "prime" : "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "$4.99"
                        }
                        a.postMessage(K(e.channel, e.user.displayName, e.methods.prime, t))
                    }, this.onSubscriptionGiftEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "custom"
                        }
                        a.postMessage(Q(e.channel, e.user.displayName, e.methods.prime, t, e.recipientName))
                    }, this.onResubscriptionEvent = function(e) {
                        var t;
                        switch (e.methods.plan) {
                            case "1000":
                                t = e.methods.prime ? "prime" : "$4.99";
                                break;
                            case "2000":
                                t = "$9.99";
                                break;
                            case "3000":
                                t = "$24.99";
                                break;
                            default:
                                t = "$4.99"
                        }
                        a.postMessage(X(e.channel, e.user.displayName, e.methods.prime, e.months, t, e.body, e.user))
                    }, this.onRoomModsEvent = function(e) {
                        return a.postMessage(W(e.usernames))
                    }, this.onRoomStateEvent = function(e) {
                        return a.postMessage(q(e.state))
                    }, this.onSlowModeEvent = function(e) {
                        return a.postMessage(z(e.enabled, e.length))
                    }, this.onEmoteOnlyModeEvent = function(e) {
                        return a.postMessage(G(e.enabled))
                    }, this.onFollowerOnlyModeEvent = function(e) {
                        return a.postMessage($(e.enabled, e.length))
                    }, this.onSubscriberOnlyModeEvent = function(e) {
                        return a.postMessage(J(e.enabled))
                    }, this.onClearChatEvent = function(e) {
                        return a.postMessage(U())
                    }, this.onRaidEvent = function(e) {
                        return a.postMessage(B(e.channel, e.userLogin, e.params))
                    }, this.onUnraidEvent = function(e) {
                        return a.postMessage(M(e.channel, e.userLogin, e.message))
                    }, this.onBadgesUpdatedEvent = function(e) {
                        return a.postMessage(x(e.username, e.badges))
                    }, this.onPurchaseEvent = function(e) {
                        var t = a.bitsConfig || Ve.a;
                        a.postMessage(j(e.purchase, a.convertMessage(e), e.timestamp, t))
                    }, this.onCrateEvent = function(e) {
                        a.postMessage(T(a.convertMessage(e), e.selectedCount))
                    }, this.convertMessage = function(e) {
                        var t = a.bitsConfig || Ve.a,
                            n = e.message.user.username === a.userLogin ? a.selfEmotes : void 0;
                        return L(Dn.a.Post, e.message.body, e.message.user, t, a.shouldBlockLinks(e.message.user), n)
                    }, this.logger = Ne.i.withCategory("chat-service"), this.logger.debug("Created"), this.userLogin = e, this.channelLogin = t, this.service = Ne.n.tmi, this.client = Ne.n.tmi.client, this.postMessage = n, this.disabled = Ne.n.tmi.disabled
                }
                return e.prototype.join = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        return Ee.__generator(this, function(e) {
                            switch (e.label) {
                                case 0:
                                    return this.logger.debug("Joining channel and binding all event listeners"), [4, this.service.awaitParted()];
                                case 1:
                                    return e.sent(), this.connectHandlers(), [4, this.service.join(this.channelLogin)];
                                case 2:
                                    return e.sent(), [2]
                            }
                        })
                    })
                }, e.prototype.part = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        return Ee.__generator(this, function(e) {
                            switch (e.label) {
                                case 0:
                                    return this.logger.debug("Parting channel and unbinding all event listeners"), this.client.events.removeAll(), [4, this.service.part(this.channelLogin)];
                                case 1:
                                    return e.sent(), [2]
                            }
                        })
                    })
                }, e.prototype.sendMessage = function(e) {
                    var t = this,
                        n = Object(Yt.l)(e, this.channelLogin);
                    if (n.handled) return n.result && (n.result.notice && this.postMessage(Object(Rn.a)(n.result.notice)), n.result.deferred && n.result.deferred.then(function(e) {
                        e && e.notice && t.postMessage(Object(Rn.a)(e.notice))
                    })), n.result;
                    this.client.sendCommand(this.channelLogin, e).catch(function(e) {
                        Ne.i.warn("Failed to send message, or message timeout", e)
                    })
                }, e.prototype.updateEmotes = function(e) {
                    this.selfEmotes = Object(Vn.a)(e), this.client.updateEmoteSets(e)
                }, e.prototype.updateChannelBadges = function(e) {
                    this.client.updateChannelBadges(this.channelLogin, e)
                }, e.prototype.updateBitsConfig = function(e) {
                    this.bitsConfig = e
                }, e.prototype.updateBlockLinks = function(e) {
                    this.blockLinks = e
                }, e.prototype.connectHandlers = function() {
                    this.client.events.joined(this.onJoinedEvent), this.client.events.disconnected(this.onDisconnectedEvent), this.client.events.reconnecting(this.onReconnectingEvent), this.client.events.chat(this.onChatMessageEvent), this.client.events.usernotice(this.onChatMessageEvent), this.client.events.notice(this.onChatNoticeEvent), this.client.events.action(this.onChatActionEvent), this.client.events.badgesupdated(this.onBadgesUpdatedEvent), this.client.events.hosting(this.onHostingEvent), this.client.events.unhost(this.onUnhostEvent), this.client.events.badgesupdated(this.onBadgesUpdatedEvent), this.client.events.purchase(this.onPurchaseEvent), this.client.events.crate(this.onCrateEvent), this.client.events.subscription(this.onSubscriptionEvent), this.client.events.resub(this.onResubscriptionEvent), this.client.events.subgift(this.onSubscriptionGiftEvent), this.client.events.timeout(this.onTimeoutEvent), this.client.events.ban(this.onBanEvent), this.client.events.clearchat(this.onClearChatEvent), this.client.events.raid(this.onRaidEvent), this.client.events.unraid(this.onUnraidEvent), this.client.events.mods(this.onRoomModsEvent), this.client.events.roomstate(this.onRoomStateEvent), this.client.events.followersonly(this.onFollowerOnlyModeEvent), this.client.events.slowmode(this.onSlowModeEvent), this.client.events.subscribers(this.onSubscriberOnlyModeEvent), this.client.events.emoteonlymode(this.onEmoteOnlyModeEvent)
                }, e.prototype.shouldBlockLinks = function(e) {
                    return e.username !== this.channelLogin && e.userType !== An.a.Staff && e.userType !== An.a.GlobalMod && e.userType !== An.a.Moderator && this.blockLinks
                }, e
            }(),
            qn = function() {
                function e(e, t, n) {
                    this.channelID = e, this.sessionUserID = t, this.unsubscribe = Ne.j.subscribe({
                        topic: Object(Je.d)(this.sessionUserID, this.channelID),
                        onMessage: function(e) {
                            switch (e.data.moderation_action) {
                                case Ge.b.AutoModRejected:
                                    var t = ee(e.data.msg_id, e.data.args[1], e.data.args[0], e.data.args[2]);
                                    n(t);
                                    break;
                                case Ge.e.AutoModMessageRejected:
                                    n(te());
                                    break;
                                case Ge.e.AutoModMessageApproved:
                                    n(ne());
                                    break;
                                case Ge.e.AutoModMessageDenied:
                                    n(ae())
                            }
                        }
                    })
                }
                return e
            }(),
            zn = n(834),
            Gn = n(949),
            $n = n(33),
            Jn = function() {
                function e() {}
                return e.fetchChannelsList = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Ee.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return n.trys.push([0, 2, , 3]), [4, Bt.a.get("/kraken/autohost/list")];
                                case 1:
                                    return e = n.sent(), [2, this.deserialize(e)];
                                case 2:
                                    return t = n.sent(), Ne.i.error(t, "Couldn't fetch autohost list"), [2, []];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, e.setChannelsList = function(e) {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var t, n;
                        return Ee.__generator(this, function(a) {
                            switch (a.label) {
                                case 0:
                                    return a.trys.push([0, 2, , 3]), [4, Bt.a.put("/kraken/autohost/list", {
                                        body: {
                                            targets: e.join(",")
                                        }
                                    })];
                                case 1:
                                    return t = a.sent(), [2, this.deserialize(t)];
                                case 2:
                                    return n = a.sent(), Ne.i.error(n, "Couldn't update autohost list"), [2, e];
                                case 3:
                                    return [2]
                            }
                        })
                    })
                }, e.deserialize = function(e) {
                    return e.body ? e.body.targets.map(function(e) {
                        return e._id.toString()
                    }) : []
                }, e
            }(),
            Kn = (n(950), n(951)),
            Qn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isDismissed: !1
                    }, t.dismiss = function() {
                        t.setState({
                            isDismissed: !0
                        }), t.track(en.SpadeEventType.AutohostChatDismiss);
                        var e = t.getAutohostNotificationsDismissed();
                        e[t.props.data.user.id] = {
                            dismissedDate: (new Date).getTime()
                        }, t.setAutohostNotificationsDismissed(e)
                    }, t.addChannelToAutohost = function() {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var e;
                            return Ee.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, Jn.fetchChannelsList()];
                                    case 1:
                                        return e = t.sent().concat([this.props.data.user.id]), this.setState({
                                            autohostChannels: e
                                        }), Jn.setChannelsList(e), this.track(en.SpadeEventType.AutohostChatYes), [2]
                                }
                            })
                        })
                    }, t.trackSettingsClick = function() {
                        t.track(en.SpadeEventType.AutohostChatSettings)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var e;
                        return Ee.__generator(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return [4, Jn.fetchChannelsList()];
                                case 1:
                                    return e = t.sent(), this.setState({
                                        autohostChannels: e
                                    }), this.isShowing && this.track(en.SpadeEventType.AutohostChatImpression), [2]
                            }
                        })
                    })
                }, t.prototype.render = function() {
                    if (!this.isShowing) return null;
                    var e = Object(Ne.d)("You are now hosting {channel}", {
                            channel: this.props.data.user.displayName
                        }, "AutohostPrompt"),
                        t = Object(Ne.d)("Auto host this channel whenever you're offline?", "AutohostPrompt"),
                        n = Object(Ne.d)("Yes", "AutohostPrompt"),
                        a = Object(Ne.d)("Settings", "AutohostPrompt");
                    return je.createElement(Qe._17, {
                        background: Qe.m.Base,
                        className: "autohost-prompt",
                        margin: {
                            x: 2
                        },
                        position: Qe._2.Relative
                    }, je.createElement(Qe.p, {
                        size: Qe.r.Medium,
                        direction: Qe.q.TopLeft,
                        show: !0
                    }, je.createElement(Qe._17, {
                        alignItems: Qe.c.Center,
                        borderBottom: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        justifyContent: Qe.T.Around,
                        padding: 1
                    }, je.createElement(Qe.U, {
                        position: Qe._2.Absolute,
                        attachTop: !0,
                        attachRight: !0
                    }, je.createElement(Qe.v, {
                        ariaLabel: Object(Ne.d)("Close", "AutohostPrompt"),
                        size: Qe.x.Small,
                        type: Qe.w.Secondary,
                        "data-test-selector": "autohost-dismiss-button",
                        icon: Qe._9.Close,
                        onClick: this.dismiss
                    })), je.createElement(Qe.l, {
                        imageAlt: this.props.data.user.displayName,
                        imageSrc: this.props.data.user.profileImageURL,
                        size: 30
                    }), je.createElement(Qe.U, {
                        className: "autohost-prompt__hosting-message",
                        display: Qe.H.Flex,
                        padding: {
                            top: .5
                        }
                    }, je.createElement(Qe._8, {
                        asset: Qe._9.Check
                    }), je.createElement(Qe.P, {
                        margin: {
                            left: .5
                        }
                    }, je.createElement(Qe._21, null, e)))), je.createElement(Qe.U, {
                        className: "autohost-prompt__prompt",
                        justifyContent: Qe.T.Center,
                        display: Qe.H.Flex,
                        padding: 1
                    }, je.createElement(Qe._21, null, t), je.createElement(Qe._33, {
                        gutterSize: Qe._35.ExtraSmall,
                        childWidth: Qe._34.Large
                    }, je.createElement("div", null, je.createElement(Qe.u, {
                        "data-test-selector": "autohost-yes-button",
                        fullWidth: !0,
                        onClick: this.addChannelToAutohost
                    }, n)), je.createElement("div", null, je.createElement(Qe.u, {
                        "data-test-selector": "autohost-settings-button",
                        fullWidth: !0,
                        onClick: this.trackSettingsClick,
                        type: Qe.z.Hollow,
                        linkTo: "https://twitch.tv/settings/profile"
                    }, a))))))
                }, Object.defineProperty(t.prototype, "isShowing", {
                    get: function() {
                        return !this.state.isDismissed && !!this.props.hostedChannelLogin && !this.props.data.loading && !this.props.data.error && this.props.data.user && !!this.state.autohostChannels && !this.state.autohostChannels.includes(this.props.data.user.id) && !this.getAutohostNotificationsDismissed()[this.props.data.user.id]
                    },
                    enumerable: !0,
                    configurable: !0
                }), t.prototype.track = function(e) {
                    ie(e, {
                        user_id: this.props.data.currentUser.id,
                        hosting_channel_id: this.props.data.currentUser.id,
                        hosted_channel_id: this.props.data.user.id
                    })
                }, t.prototype.getAutohostNotificationsDismissed = function() {
                    return Ne.k.get("autohost-notifications-dismissed", {})
                }, t.prototype.setAutohostNotificationsDismissed = function(e) {
                    return Ne.k.set("autohost-notifications-dismissed", e)
                }, t = Ee.__decorate([Object(Be.a)(Kn, {
                    skip: function(e) {
                        return !e.hostedChannelLogin
                    },
                    options: function(e) {
                        return {
                            variables: {
                                login: e.hostedChannelLogin
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Yn = Qn,
            Xn = n(830),
            Zn = n(107),
            ea = n(854),
            ta = n(833),
            na = n(828),
            aa = n(836),
            ia = n(880),
            ra = n(952),
            sa = (n(953), "chat-ban-button"),
            oa = "chat-unban-button",
            la = "chat-timeout-button",
            ca = "chat-deleted-message-placeholder",
            ua = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        alwaysShowMessage: !1
                    }, t.renderModerationIcons = function() {
                        if (!t.props.isCurrentUserModerator || !t.props.showModerationIcons) return null;
                        var e = t.onBanUser,
                            n = Qe._9.Ban,
                            a = Object(Ne.d)("Ban", "ChatMessageEvent"),
                            i = sa;
                        return t.props.message.deleted && !t.state.alwaysShowMessage && (e = t.onUnbanUser, n = Qe._9.FollowCheck, a = Object(Ne.d)("Unban", "ChatMessageEvent"), i = oa), je.createElement(Qe.U, {
                            display: Qe.H.Inline,
                            className: "chat-line__mod-icons"
                        }, je.createElement("button", {
                            className: "mod-icon",
                            onClick: e,
                            "data-a-target": i
                        }, je.createElement(Qe._30, {
                            label: a
                        }, je.createElement(Qe._8, {
                            width: 16,
                            height: 16,
                            type: Qe._10.Inherit,
                            asset: n
                        }))), je.createElement("button", {
                            className: "mod-icon",
                            onClick: t.timeoutUser,
                            "data-a-target": la
                        }, je.createElement(Qe._30, {
                            label: Object(Ne.d)("Timeout", "ChatMessageEvent")
                        }, je.createElement(Qe._8, {
                            width: 16,
                            height: 16,
                            type: Qe._10.Inherit,
                            asset: Qe._9.Timeout
                        }))))
                    }, t.renderMessageBody = function() {
                        if (t.props.isDeleted && !t.state.alwaysShowMessage) {
                            var e = Object(Ne.d)("message deleted", "ChatLine");
                            return t.props.isCurrentUserModerator ? je.createElement("span", {
                                key: "deleted",
                                className: "chat-line__message--deleted",
                                "data-a-target": ca
                            }, je.createElement("a", {
                                href: "",
                                onClick: t.alwaysShowMessage
                            }, "<" + e + ">")) : je.createElement("span", {
                                key: "deleted",
                                className: "chat-line__message--deleted",
                                "data-a-target": ca
                            }, "<" + e + ">")
                        }
                        return Object(na.g)(t.props.message.messageParts, t.props.currentUserDisplayName, t.props.currentUserLogin)
                    }, t.onBanUser = function() {
                        t.props.onBanUser(t.props.message.user.userLogin)
                    }, t.onUnbanUser = function() {
                        t.props.onUnbanUser(t.props.message.user.userLogin)
                    }, t.timeoutUser = function() {
                        t.props.onBanUser(t.props.message.user.userLogin, 600)
                    }, t.alwaysShowMessage = function(e) {
                        e && e.preventDefault(), t.setState({
                            alwaysShowMessage: !0
                        })
                    }, t.usernameClickHandler = function() {
                        t.props.onUsernameClick(t.props.message.user.userLogin, aa.a.chat_message, t.props.message.id)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = this.props,
                        t = e.badgeSets,
                        n = e.className,
                        a = e.message,
                        i = e.showTimestamps,
                        r = {},
                        s = ": ";
                    a.type === Dn.a.Action && (r = {
                        color: a.user.color
                    }, s = " ");
                    var o = null;
                    return i && (o = Object(na.q)(a.timestamp)), je.createElement("div", {
                        className: qe(n, "chat-line__message"),
                        style: r,
                        "data-a-target": "chat-line-message"
                    }, o, this.renderModerationIcons(), je.createElement(Xn.b, {
                        badgeSets: t,
                        badgesToRender: a.badges
                    }), je.createElement("button", {
                        onClick: this.usernameClickHandler,
                        className: "chat-line__username"
                    }, je.createElement(ta.a, {
                        userData: a.user
                    })), je.createElement("span", {
                        key: "separator"
                    }, s), this.renderMessageBody())
                }, t
            }(je.Component),
            da = function(e) {
                return {
                    channelID: e.channelID,
                    onPushMessage: e.onPushMessage
                }
            },
            pa = Object(Me.compose)(function(e) {
                return e
            }, Object(ia.a)(da), function() {
                var e = this;
                return Object(Be.a)(ra, {
                    props: function(t) {
                        return {
                            onUnbanUser: function(n) {
                                return Ee.__awaiter(e, void 0, void 0, function() {
                                    var e;
                                    return Ee.__generator(this, function(a) {
                                        switch (a.label) {
                                            case 0:
                                                if (!t.mutate) return [3, 5];
                                                a.label = 1;
                                            case 1:
                                                return a.trys.push([1, 3, , 4]), [4, t.mutate(Object($e.a)({
                                                    channelID: t.ownProps.channelID,
                                                    bannedUserLogin: n
                                                }))];
                                            case 2:
                                                return a.sent(), t.ownProps.onPushMessage(Object(Rn.a)(re(n))), [3, 4];
                                            case 3:
                                                return e = a.sent(), Ne.i.error(e, "Unable to ban user"), t.ownProps.onPushMessage(Object(Rn.a)(se())), [3, 4];
                                            case 4:
                                                return [3, 6];
                                            case 5:
                                                t.ownProps.onPushMessage(Object(Rn.a)(se())), a.label = 6;
                                            case 6:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }(), Object(Le.a)(void 0, oe))(ua),
            ma = n(954),
            ha = n(955),
            fa = {
                badges: {
                    twitchbot: "1"
                },
                bits: 0,
                color: "#6441A5",
                displayName: "AutoMod",
                id: "automod",
                userID: "automod",
                username: "automod",
                userType: An.a.GlobalMod,
                emotes: null
            },
            ga = {
                VoHiYo: {
                    displayName: "VoHiYo",
                    id: "81274",
                    srcSet: "https://static-cdn.jtvnw.net/emoticons/v1/81274/1.0 1.0x, https://static-cdn.jtvnw.net/emoticons/v1/81274/2.0 2.0x, https://static-cdn.jtvnw.net/emoticons/v1/81274/3.0 3.0x",
                    token: "VoHiYo"
                }
            },
            va = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isResolved: !1
                    }, t.allowAutoModRejectedMessage = function() {
                        t.setState({
                            isResolved: !0
                        }), t.props.allowRejectedChatMessage && t.props.message.type === Dn.a.AutoModRejectedPrompt && t.props.allowRejectedChatMessage(Object($e.a)({
                            id: t.props.message.rejectedMessage.id
                        }))
                    }, t.denyAutoModRejectedMessage = function() {
                        t.setState({
                            isResolved: !0
                        }), t.props.denyRejectedChatMessage && t.props.message.type === Dn.a.AutoModRejectedPrompt && t.props.denyRejectedChatMessage(Object($e.a)({
                            id: t.props.message.rejectedMessage.id
                        }))
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e;
                    switch (this.props.message.type) {
                        case Dn.a.AutoModRejectedPrompt:
                            e = le(this.props.message.category);
                            break;
                        case Dn.a.AutoModMessageRejected:
                            e = Object(Ne.d)("Hey! Your message is being checked by mods and has not been sent.", "AutoModLine");
                            break;
                        case Dn.a.AutoModMessageAllowed:
                            e = Object(Ne.d)("Mods have allowed your message. Happy chatting!", "AutoModLine"), e += " VoHiYo";
                            break;
                        case Dn.a.AutoModMessageDenied:
                            e = Object(Ne.d)("Mods have removed your message.", "AutoModLine");
                            break;
                        default:
                            throw new Error("Invalid message type")
                    }
                    var t = Object(Pn.a)(e, fa, Ve.a, !1, ga);
                    switch (this.props.message.type) {
                        case Dn.a.AutoModRejectedPrompt:
                            if (this.state.isResolved) return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.d)());
                            var n = ["chat-line__message--alert", "chat-line__message--special", "chat-line__message--clearfix"];
                            return je.createElement(Qe.U, {
                                className: "chat-line__message"
                            }, je.createElement(ea.a, {
                                badgeSets: this.props.badgeSets,
                                badgesToRender: t.badges
                            }), je.createElement(ta.a, {
                                userData: t.user
                            }), je.createElement("span", {
                                key: "separator"
                            }, ": "), Object(na.g)(t.messageParts, this.props.currentUserDisplayName, this.props.currentUserLogin), je.createElement(Qe.U, {
                                key: "automod-prompt",
                                className: "chat-line__nested-component--float-right"
                            }, je.createElement(Qe.u, {
                                size: Qe.x.Small,
                                onClick: this.allowAutoModRejectedMessage,
                                type: Qe.z.Text
                            }, Object(Ne.d)("Allow", "AutoModLine")), je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, "•"), je.createElement(Qe.u, {
                                size: Qe.x.Small,
                                onClick: this.denyAutoModRejectedMessage,
                                type: Qe.z.Text
                            }, Object(Ne.d)("Deny", "AutoModLine"))), je.createElement(pa, Ee.__assign({}, this.props, {
                                isDeleted: !1,
                                showTimestamps: !1,
                                className: qe(n),
                                message: this.props.message.rejectedMessage
                            })));
                        case Dn.a.AutoModMessageRejected:
                        case Dn.a.AutoModMessageAllowed:
                        case Dn.a.AutoModMessageDenied:
                            var a = ["chat-line__message", "chat-line__message--special", "chat-line__message--alert"];
                            return je.createElement(Qe.U, {
                                className: qe(a)
                            }, je.createElement(ea.a, {
                                badgeSets: this.props.badgeSets,
                                badgesToRender: t.badges
                            }), je.createElement(ta.a, {
                                userData: t.user
                            }), je.createElement("span", {
                                key: "separator"
                            }, ": "), Object(na.g)(t.messageParts, this.props.currentUserDisplayName, this.props.currentUserLogin));
                        default:
                            throw new Error("Invalid message type")
                    }
                }, t
            }(je.Component),
            ba = Object(Me.compose)(Object(Be.a)(ma, {
                name: "allowRejectedChatMessage",
                options: {}
            }), Object(Be.a)(ha, {
                name: "denyRejectedChatMessage",
                options: {}
            }))(va),
            ka = n(956),
            ya = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.message.params,
                        t = this.props.data,
                        n = t.channel,
                        a = t.loading,
                        i = t.error;
                    if (a || i) return null;
                    var r = Object(Ne.d)("{displayName} is raiding with a party of {viewerCount}.", {
                        displayName: je.createElement("strong", null, n.displayName),
                        viewerCount: je.createElement("strong", null, e.viewerCount)
                    }, "RaidIncomingMessage");
                    return je.createElement(Qe.U, {
                        className: "chat-line__raid",
                        "data-test-selector": "incoming-raid"
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        alignItems: Qe.c.Center
                    }, je.createElement(Qe.l, {
                        imageAlt: n.displayName,
                        imageSrc: n.profileImageURL,
                        size: 30
                    }), je.createElement(Qe.U, {
                        className: "c-text",
                        margin: {
                            left: 1
                        }
                    }, r)))
                }, t
            }(je.Component),
            _a = Object(Be.a)(ka, {
                options: function(e) {
                    return {
                        variables: {
                            channelLogin: e.message.params.login
                        }
                    }
                }
            })(ya),
            Ca = function(e) {
                return je.createElement("span", null, ce()[e.message.msgid])
            },
            Sa = n(502),
            Ea = (n(957), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        drawerOpen: !1
                    }, t.renderBitsLoot = function(e) {
                        return je.createElement(Qe.U, {
                            key: e.quantity,
                            className: "chat-line__purchase-loot"
                        }, je.createElement(Ke.a, {
                            bitsConfig: t.props.bitsConfig,
                            count: e.quantity,
                            withImage: !0
                        }))
                    }, t.toggleDrawer = function() {
                        t.setState(function(e) {
                            return {
                                drawerOpen: !e.drawerOpen
                            }
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e, t = this,
                        n = this.props.purchase,
                        a = n.crateLoot,
                        i = n.numCrates,
                        r = n.purchased;
                    if (i > 0) {
                        var s = Object(Ne.d)("{numCrates, plural, one {Plus # Twitch Crate with {lootCount} rewards!} other {Plus # Twitch Crates with {lootCount} rewards!}}", {
                            numCrates: i,
                            lootCount: a.length
                        }, "SharePurchaseLineRewardText");
                        e = je.createElement(Qe.U, {
                            className: "chat-line__purchase-reward-text",
                            margin: {
                                top: .5
                            }
                        }, s)
                    }
                    var o, l = a.map(function(e) {
                        switch (e.type) {
                            case Sa.a.Badge:
                                return t.renderBadgeLoot(e);
                            case Sa.a.Bits:
                                return t.renderBitsLoot(e);
                            case Sa.a.Emote:
                                return t.renderEmoteLoot(e);
                            case Sa.a.InGameContent:
                                return t.renderIGCLoot(e);
                            default:
                                return ""
                        }
                    });
                    if (a.length <= 2) o = 0 === a.length ? "" : je.createElement(Qe._17, {
                        className: "chat-line__purchase-loot-box",
                        alignItems: Qe.c.Center,
                        borderLeft: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        flexShrink: 0,
                        flexWrap: Qe.K.NoWrap,
                        justifyContent: Qe.T.Center,
                        padding: .5
                    }, l);
                    else if (this.state.drawerOpen) o = je.createElement("span", {
                        className: "chat-line__purchase-loot-toggle",
                        onClick: this.toggleDrawer,
                        "data-test-selector": "purchase-loot-toggle"
                    }, je.createElement(Qe._17, {
                        className: "chat-line__purchase-loot-box",
                        alignItems: Qe.c.Center,
                        borderLeft: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        flexShrink: 0,
                        flexWrap: Qe.K.NoWrap,
                        justifyContent: Qe.T.Center,
                        padding: .5
                    }, je.createElement(Qe._8, {
                        asset: Qe._9.GlyphArrUp
                    })));
                    else {
                        var c = "+" + (a.length - 1);
                        o = je.createElement("span", {
                            className: "chat-line__purchase-loot-toggle",
                            onClick: this.toggleDrawer,
                            "data-test-selector": "purchase-loot-toggle"
                        }, je.createElement(Qe._17, {
                            className: "chat-line__purchase-loot-box",
                            alignItems: Qe.c.Center,
                            borderLeft: !0,
                            display: Qe.H.Flex,
                            flexDirection: Qe.J.Row,
                            flexShrink: 0,
                            flexWrap: Qe.K.NoWrap,
                            justifyContent: Qe.T.Center,
                            padding: .5
                        }, l[0], je.createElement(Qe.Z, {
                            label: c,
                            type: Qe._0.Notification
                        })))
                    }
                    var u = a.length <= 2 || !this.state.drawerOpen ? "" : je.createElement(Qe._17, {
                        className: "chat-line__purchase-loot-drawer",
                        alignItems: Qe.c.Center,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        flexShrink: 0,
                        flexWrap: Qe.K.NoWrap,
                        justifyContent: Qe.T.End,
                        padding: .5,
                        "data-test-selector": "purchase-loot-drawer"
                    }, l);
                    return je.createElement(Qe._17, {
                        className: "chat-line__purchase",
                        elevation: 1,
                        margin: {
                            bottom: .5,
                            left: 2,
                            right: 2,
                            top: 0
                        }
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement(Qe.U, {
                        flexGrow: 0,
                        flexShrink: 0,
                        margin: .5
                    }, je.createElement("img", {
                        className: "chat-line__purchase-boxart",
                        src: r.boxart
                    })), je.createElement(Qe.U, {
                        flexGrow: 1,
                        margin: .5
                    }, je.createElement(Qe._17, {
                        fontSize: Qe.L.Size4
                    }, r.title), e), o), u)
                }, t.prototype.renderBadgeLoot = function(e) {
                    return je.createElement("img", {
                        key: e.img,
                        className: "chat-line__purchase-loot",
                        src: e.img
                    })
                }, t.prototype.renderEmoteLoot = function(e) {
                    var t = "//static-cdn.jtvnw.net/emoticons/v1/" + e.id + "/2.0";
                    return je.createElement("img", {
                        key: e.id,
                        className: "chat-line__purchase-loot",
                        src: t
                    })
                }, t.prototype.renderIGCLoot = function(e) {
                    return je.createElement("img", {
                        key: e.img,
                        className: "chat-line__purchase-loot",
                        src: e.img
                    })
                }, t
            }(je.Component)),
            wa = Ea,
            Na = (n(958), {
                timeout_success: "timeout_success",
                ban_success: "ban_success"
            }),
            Da = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = this.props.message;
                    switch (e.type) {
                        case Dn.a.AutoModMessageRejected:
                        case Dn.a.AutoModMessageAllowed:
                        case Dn.a.AutoModMessageDenied:
                        case Dn.a.AutoModRejectedPrompt:
                            return je.createElement(ba, {
                                channelID: this.props.channelID,
                                message: e,
                                badgeSets: this.props.badgeSets,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                showModerationIcons: this.props.showModerationIcons,
                                currentUserLogin: this.props.currentUserLogin
                            });
                        case Dn.a.Connected:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status",
                                "data-a-target": "chat-welcome-message"
                            }, je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, Object(Ne.d)("Welcome to the chat room!", "ChatLine")));
                        case Dn.a.Disconnected:
                            return e.reason ? je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, Object(Ne.d)("You have been disconnected from chat for the following reason: {reason}", {
                                reason: e.reason
                            }, "ChatLine"))) : je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, Object(Ne.d)("Sorry, we were unable to connect to chat. Attempting to reconnect...", "ChatLine")));
                        case Dn.a.Hosting:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, Object(Ne.d)("Now hosting {channel}", {
                                channel: e.hostedChannel
                            }, "ChatLine")));
                        case Dn.a.Unhost:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, je.createElement(Qe._21, {
                                type: Qe._26.Span
                            }, Object(Ne.d)("No longer hosting.", "ChatLine")));
                        case Dn.a.Post:
                        case Dn.a.PostWithMention:
                        case Dn.a.Action:
                            return de(e) ? je.createElement(pa, {
                                channelID: this.props.channelID,
                                badgeSets: this.props.badgeSets,
                                message: e,
                                isDeleted: e.deleted,
                                showModerationIcons: this.props.showModerationIcons,
                                showTimestamps: this.props.showTimestamps,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                currentUserLogin: this.props.currentUserLogin,
                                onPushMessage: this.props.onPushMessage
                            }) : null;
                        case Dn.a.Ban:
                        case Dn.a.Timeout:
                            return this.props.isCurrentUserModerator ? je.createElement(Qe.U, {
                                className: "chat-line__moderation"
                            }, Object(na.h)(e)) : null;
                        case Dn.a.Subscription:
                            return je.createElement(Qe.U, {
                                className: "chat-line__subscribe"
                            }, Object(na.p)(e));
                        case Dn.a.SubGift:
                            return je.createElement(Qe.U, {
                                className: "chat-line__subscribe"
                            }, Object(na.o)(e));
                        case Dn.a.Resubscription:
                            return je.createElement(Qe.U, {
                                className: "chat-line__subscribe"
                            }, Object(na.k)(e, this.props.showTimestamps, this.props.currentUserDisplayName, this.props.currentUserLogin, this.props.badgeSets));
                        case Dn.a.RoomMods:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.l)(e.moderatorLogins));
                        case Dn.a.SlowMode:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.m)(e));
                        case Dn.a.SubscriberOnlyMode:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.n)(e));
                        case Dn.a.FollowerOnlyMode:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.e)(e));
                        case Dn.a.EmoteOnlyMode:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.c)(e));
                        case Dn.a.Clear:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.a)());
                        case Dn.a.Notice:
                            if (ue(e)) return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, je.createElement(Ca, {
                                message: e
                            }));
                            if (this.props.isCurrentUserModerator) switch (e.msgid) {
                                case Na.timeout_success:
                                case Na.ban_success:
                                    return null
                            }
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.i)(e));
                        case Dn.a.Info:
                            return je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.f)(e));
                        case Dn.a.Purchase:
                            var t = e.message.user.isIntl ? e.message.user.userDisplayName + " (" + e.message.user.userLogin + ")" : e.message.user.userDisplayName;
                            return je.createElement(Qe.U, {
                                className: "chat-line__message--special"
                            }, je.createElement(Qe.U, {
                                className: "chat-line__status"
                            }, Object(na.j)(t, e.purchase.purchased.title, e.purchase.numCrates)), je.createElement(pa, {
                                channelID: this.props.channelID,
                                badgeSets: this.props.badgeSets,
                                message: e.message,
                                isDeleted: !1,
                                showModerationIcons: this.props.showModerationIcons,
                                showTimestamps: this.props.showTimestamps,
                                isCurrentUserModerator: this.props.isCurrentUserModerator,
                                currentUserDisplayName: this.props.currentUserDisplayName,
                                currentUserLogin: this.props.currentUserLogin,
                                onPushMessage: this.props.onPushMessage
                            }), je.createElement(wa, {
                                bitsConfig: e.bitsConfig,
                                purchase: e.purchase
                            }));
                        case Dn.a.Raid:
                            return je.createElement(_a, {
                                message: e
                            });
                        case Dn.a.Unraid:
                            return je.createElement(Qe.U, {
                                className: "chat-line__raid"
                            }, Object(na.s)());
                        case Dn.a.CrateGift:
                            return Object(na.b)(e);
                        default:
                            return null
                    }
                }, t
            }(je.Component),
            Ia = n(906),
            Oa = n(959),
            Ua = (n(961), "pinned-cheer--collapse"),
            xa = /(\d+)$/,
            Ta = Ne.i.withCategory("pinned-cheer"),
            La = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        cheerIsTall: !1,
                        recentCheerID: null,
                        recentCheerExpireTime: null
                    }, t.collapseCheer = !0, t.root = null, t.renderedMessage = null, t.recentCheerTimeout = 0, t.saveRenderedMessageRef = function(e) {
                        t.renderedMessage = e
                    }, t.saveRootRef = function(e) {
                        t.root = e
                    }, t.handleHeadlineClick = function() {
                        t.collapseCheer = !t.collapseCheer, t.root && t.root.classList.toggle(Ua, t.collapseCheer)
                    }, t.handleProgressExpired = function() {
                        Ta.debug("setTimeout expired, forcing re-render"), t.forceUpdate()
                    }, t.onProgressAnimationEnd = function() {
                        Ta.debug("Animation end event fired")
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.calcRecentCheerExpiry(this.props)
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.calcRecentCheerExpiry(e)
                }, t.prototype.shouldComponentUpdate = function(e, t) {
                    var n = this.getDisplayData(this.props, this.state),
                        a = this.getDisplayData(e, t);
                    return (n.displayCheer && n.displayCheer.id) !== (a.displayCheer && a.displayCheer.id)
                }, t.prototype.componentDidUpdate = function() {
                    var e = this.getDisplayData(this.props, this.state),
                        t = e.isRecent,
                        n = e.remainingRecentCheerTime;
                    if (t && (clearTimeout(this.recentCheerTimeout), this.recentCheerTimeout = setTimeout(this.handleProgressExpired, n + 100)), this.renderedMessage) {
                        var a = this.renderedMessage.getElementsByClassName("pinned-cheer__rendered-message-inner");
                        if (a.length) {
                            var i = a[0].getBoundingClientRect(),
                                r = i.height > 42;
                            this.state.cheerIsTall !== r && this.setState({
                                cheerIsTall: r
                            })
                        }
                    }
                }, t.prototype.componentWillUnmount = function() {
                    clearTimeout(this.recentCheerTimeout)
                }, t.prototype.render = function() {
                    var e = this.getDisplayData(this.props, this.state),
                        t = e.isRecent,
                        n = e.remainingRecentCheerTime,
                        a = e.displayCheer,
                        i = e.isExpandable;
                    if (!a) return null;
                    for (var r = "", s = 0, o = 0, l = a.messageParts; o < l.length; o++) {
                        var c = l[o];
                        if (c.type === xn.a.Emote && c.content.cheerAmount && c.content.alt) {
                            var u = c.content.alt.replace(xa, "").toLowerCase();
                            s += c.content.cheerAmount, r ? r !== u && (r = "cheer") : r = u
                        }
                    }
                    var d, p = {
                            "pinned-cheer__rendered-message": !0,
                            "pinned-cheer__rendered-message--recent": t,
                            "pinned-cheer__rendered-message--top": !t
                        },
                        m = je.createElement(ta.a, {
                            userData: a.user
                        }),
                        h = je.createElement("div", {
                            ref: this.saveRenderedMessageRef,
                            className: qe(p)
                        }, je.createElement(Qe._17, {
                            margin: {
                                x: 2
                            },
                            borderTop: !0
                        }), je.createElement(Qe.U, {
                            padding: {
                                y: .5
                            },
                            className: "pinned-cheer__rendered-message-inner"
                        }, je.createElement(Da, {
                            channelID: this.props.channelID,
                            badgeSets: this.props.badgeData,
                            currentUserDisplayName: this.props.currentUserDisplayName,
                            currentUserLogin: this.props.currentUserLogin,
                            isCurrentUserModerator: !1,
                            message: a,
                            showModerationIcons: !1,
                            showTimestamps: !1
                        }))),
                        f = null;
                    if (t) d = je.createElement(Qe._21, {
                        type: Qe._26.Strong
                    }, Object(Ne.d)("Recent Cheer", "Bits--PinnedCheer"));
                    else {
                        d = je.createElement(Qe._21, {
                            type: Qe._26.Strong
                        }, Object(Ne.d)("Top Cheer by {user}", {
                            user: m
                        }, "Bits--PinnedCheer"), " :");
                        var g = Object(na.g)(Object(Ve.c)(r + s.toString(), this.props.bitsConfig), this.props.currentUserDisplayName, this.props.currentUserLogin);
                        f = je.createElement(Qe.U, {
                            display: Qe.H.Inline,
                            margin: {
                                left: .5
                            }
                        }, g)
                    }
                    var v = (y = {
                            "pinned-cheer__bounding-box": !0
                        }, y[Ua] = this.collapseCheer, y),
                        b = {
                            "pinned-cheer__headline": !0,
                            "pinned-cheer__headline--clickable": i
                        },
                        k = null;
                    return t && (k = je.createElement(Qe.U, {
                        className: "pinned-cheer__progress-bar-placeholder"
                    }, je.createElement(Qe.U, {
                        className: "pinned-cheer__progress-bar",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        justifyContent: Qe.T.End
                    }, je.createElement(Qe._5, {
                        key: a.id,
                        countdown: n / 1e3,
                        size: Qe._6.ExtraSmall,
                        onCountdownEnd: this.onProgressAnimationEnd
                    })))), Ta.debug("Rendering pinned cheer", {
                        remainingRecentCheerTime: n,
                        isRecent: t,
                        recentCheerExpireTime: this.state.recentCheerExpireTime
                    }), je.createElement(Qe.U, {
                        className: "pinned-cheer",
                        flexGrow: 0,
                        flexShrink: 0,
                        zIndex: Qe._38.Default
                    }, je.createElement("div", {
                        className: qe(v),
                        ref: this.saveRootRef
                    }, je.createElement(Qe.P, {
                        padding: {
                            x: 2,
                            y: 1
                        },
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        flexWrap: Qe.K.NoWrap
                    }, je.createElement("div", {
                        className: qe(b),
                        onClick: i ? this.handleHeadlineClick : void 0
                    }, je.createElement(Qe.U, {
                        flexGrow: 1,
                        flexShrink: 1,
                        display: Qe.H.Flex,
                        alignItems: Qe.c.Center
                    }, je.createElement(Qe._8, {
                        asset: t ? Qe._9.HourGlass : Qe._9.Trophy,
                        height: 18,
                        width: 18
                    }), je.createElement(Qe.U, {
                        margin: {
                            left: .5
                        },
                        display: Qe.H.Inline
                    }, d), f), je.createElement(Qe.U, {
                        className: "pinned-cheer__expand-caret",
                        flexShrink: 0,
                        flexGrow: 0,
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between,
                        alignItems: Qe.c.Center
                    }, i ? je.createElement(Qe._8, {
                        asset: Qe._9.AngleLeft
                    }) : null))), h, k));
                    var y
                }, t.prototype.calcRecentCheerExpiry = function(e) {
                    var t = e.recentCheer ? e.recentCheer.id : null;
                    e.recentTimeoutMs && this.state.recentCheerID !== t && this.setState({
                        recentCheerID: t,
                        recentCheerExpireTime: t ? Date.now() + e.recentTimeoutMs : null
                    })
                }, t.prototype.getDisplayData = function(e, t) {
                    var n = 0;
                    t.recentCheerExpireTime && (n = Math.max(0, t.recentCheerExpireTime - Date.now()));
                    var a = !!e.recentCheer && !!e.topCheer && e.recentCheer.id === e.topCheer.id,
                        i = !!n && !!e.recentCheer && !a;
                    return {
                        remainingRecentCheerTime: n,
                        isRecent: i,
                        displayCheer: i ? e.recentCheer : e.topCheer,
                        isExpandable: !i || t.cheerIsTall
                    }
                }, t = Ee.__decorate([Object(Be.a)(Oa, {
                    props: function(e) {
                        var t, n, a;
                        return e.data && e.data.user && e.data.user.cheer && (a = e.data.user.cheer.recentTimeoutMs, e.data.user.cheer.top && (t = Object(Ia.a)(e.data.user.cheer.top, e.ownProps.bitsConfig, e.ownProps.blockLinks)), e.data.user.cheer.recent && (n = Object(Ia.a)(e.data.user.cheer.recent, e.ownProps.bitsConfig, e.ownProps.blockLinks))), {
                            topCheer: t,
                            recentCheer: n,
                            recentTimeoutMs: a
                        }
                    },
                    options: function(e) {
                        return {
                            name: "data",
                            fetchPolicy: "network-only",
                            variables: {
                                channelID: e.channelID
                            }
                        }
                    }
                }), Object(Zn.a)(function(e) {
                    return {
                        query: Oa,
                        variables: {
                            channelID: e.channelID
                        },
                        topic: Object(Je.a)(e.channelID),
                        type: Ge.c.BitsPinEvent,
                        mutator: function(t, n) {
                            if (n.user.cheer) {
                                var a = JSON.parse(t.msg);
                                if (a.channel_id === e.channelID) return Ta.debug("Received pubsub update", {
                                    hasTopCheer: !!a.top && a.top.has_top_event,
                                    hasNewTopCheer: !n.user.cheer.top || n.user.cheer.top.id !== a.top.tags.msg_id,
                                    hasRecentCheer: !!a.recent && a.recent.has_recent_event,
                                    hasNewRecentCheer: !n.user.cheer.recent || n.user.cheer.recent.id !== a.recent.tags.msg_id
                                }), a.top && a.top.has_top_event ? n.user.cheer.top && n.user.cheer.top.id === a.top.tags.msg_id || (n.user.cheer.top = Object(Ia.c)(a.top)) : n.user.cheer.top = null, a.recent && a.recent.has_recent_event ? n.user.cheer.recent && n.user.cheer.recent.id === a.recent.tags.msg_id || (n.user.cheer.recent = Object(Ia.c)(a.recent), n.user.cheer.recentTimeoutMs = n.user.cheer.settings.recentTimeoutMs) : n.user.cheer.recent = null, n
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Fa = La,
            ja = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentWillMount = function() {
                    this.getGiftingExperimentAssignment()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.bitsConfig && (e = this.state && this.state.pcheersV2Enabled ? null : je.createElement(Fa, {
                        badgeData: this.props.badgeData,
                        bitsConfig: this.props.bitsConfig,
                        blockLinks: this.props.blockLinks,
                        channelID: this.props.channelID,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        currentUserLogin: this.props.currentUserLogin
                    })), e
                }, t.prototype.getGiftingExperimentAssignment = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var e, t;
                        return Ee.__generator(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    e = "off", n.label = 1;
                                case 1:
                                    return n.trys.push([1, 3, , 4]), [4, Ne.n.experiments.getAssignment("TWILIGHT_LEADERBOARDS")];
                                case 2:
                                    return e = n.sent(), [3, 4];
                                case 3:
                                    return t = n.sent(), e = "off", [3, 4];
                                case 4:
                                    return this.setState({
                                        pcheersV2Enabled: "on" === e
                                    }), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            Ba = ja,
            Ma = n(40),
            Aa = n(18),
            Ra = n(440),
            Pa = (n(962), function(e) {
                var t = void 0 !== e.progress,
                    n = je.createElement("img", {
                        className: "cheer-badge__image",
                        src: e.badge.image1x,
                        alt: e.badge.title,
                        srcSet: e.badge.image1x + " 1x, " + e.badge.image2x + " 2x, " + e.badge.image4x + " 4x"
                    });
                if (!t) return n;
                var a = e.progress ? Math.max(Math.round(18 * (1 - e.progress)), 1) : 18;
                return je.createElement("div", {
                    className: "cheer-badge__progress-container"
                }, n, je.createElement("div", {
                    className: "cheer-badge__progress-overlay",
                    style: {
                        width: a + "px"
                    },
                    "data-test-selector": "cheer-progress"
                }))
            }),
            Ha = n(260),
            Va = function(e) {
                var t;
                e.selfBitsBadge && (e.selfBitsBadge.current || e.selfBitsBadge.next) && (t = je.createElement(Qe.U, {
                    padding: {
                        bottom: .5
                    }
                }, e.selfBitsBadge.current && je.createElement(Qe.U, {
                    display: Qe.H.Inline,
                    margin: {
                        right: .5
                    }
                }, je.createElement(Pa, {
                    badge: e.selfBitsBadge.current
                })), e.selfBitsBadge.next && je.createElement(Pa, {
                    badge: e.selfBitsBadge.next,
                    progress: e.selfBitsBadge.progress
                }), e.selfBitsBadge.nextBits && Object(Ne.d)("Next badge unlocks in {bitsToNextBadge} Bits!", {
                    bitsToNextBadge: e.selfBitsBadge.nextBits - e.selfBitsBadge.totalBits
                }, "Bits--BalanceFooter")));
                var n = Object(Ne.d)("{bitsGem} Log in to see your Bits balance", {
                    bitsGem: je.createElement(Ke.a, {
                        count: 100,
                        withImage: !0,
                        bitsConfig: e.bitsConfig,
                        themeOverride: Re.a.Dark
                    })
                }, "Bits--BalanceFooter");
                return void 0 !== e.balance && null !== e.balance && (n = Object(Ne.d)("You have {currentBits}", {
                    currentBits: je.createElement(Ke.a, {
                        count: e.balance,
                        withImage: !0,
                        withText: !0,
                        bitsConfig: e.bitsConfig,
                        themeOverride: Re.a.Dark
                    })
                }, "Bits--BalanceFooter")), je.createElement(Qe.U, {
                    flexGrow: 1,
                    padding: 1,
                    className: "bits-balance-footer"
                }, t, je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexGrow: 1,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Between
                }, je.createElement("div", null, n), je.createElement(Qe.u, {
                    disabled: void 0 === e.balance || void 0 !== e.balance && e.balance > Ha.j,
                    onClick: e.onClickGetBits,
                    "data-test-selector": "get-bits-button",
                    "data-a-target": "get-bits-button"
                }, Object(Ne.d)("Get Bits", "Bits--BalanceFooter"))))
            },
            Wa = function() {
                return je.createElement(Qe._17, {
                    className: "t-bits-card",
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Center,
                    textAlign: Qe._22.Center,
                    padding: 1,
                    border: !0,
                    background: Qe.m.Base,
                    elevation: 3,
                    fullWidth: !0
                }, je.createElement(Qe._21, {
                    italic: !0
                }, Object(Ne.d)("Have no fear, your Bits inventory is safe! The ability to Cheer will return shortly.", "BitsCard")))
            },
            qa = n(876),
            za = n(850),
            Ga = function(e) {
                return je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexGrow: 1,
                    flexDirection: Qe.J.Column,
                    justifyContent: Qe.T.Center,
                    alignItems: Qe.c.Center,
                    padding: 1
                }, je.createElement(Qe.U, {
                    padding: {
                        top: 2,
                        bottom: 2
                    }
                }, je.createElement(Qe._21, {
                    type: Qe._26.H5,
                    color: Qe.F.Link,
                    bold: !0
                }, Object(Ne.d)("Cheering Supports Your Streamer!", "Bits--CheermoteIntro"))), je.createElement(Qe._21, null, Object(Ne.d)("Select a Cheermote to start your Cheer", "Bits--CheermoteIntro")), je.createElement(Qe.U, {
                    padding: {
                        top: 2,
                        bottom: 1
                    }
                }, je.createElement("a", {
                    href: "#",
                    onClick: e.onClickHelp,
                    "data-test-selector": "help-link"
                }, Object(Ne.d)("How do I cheer?", "Bits--CheermoteIntro"))))
            },
            $a = n(824),
            Ja = function(e) {
                var t = e.headline || e.prefix + (e.tier || "");
                if (e.tournament && e.tier <= 0) {
                    var n = e.tournament.teams.find(function(t) {
                        return t.id === e.prefix
                    });
                    n && (t = n.name + " - " + e.prefix)
                }
                var a = e.tier,
                    i = $a.c.ImageAndText;
                return e.event && !e.tier && (i = $a.c.ImageOnly, a = 1), je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    padding: 1
                }, je.createElement(Qe._21, {
                    type: Qe._26.H4,
                    bold: !0
                }, t), je.createElement($a.a, {
                    prefix: e.prefix,
                    amount: a,
                    bitsConfig: e.bitsConfig,
                    display: i
                }))
            },
            Ka = (n(963), function(e) {
                var t = null;
                e.minToCheer > 1 && (t = je.createElement(Qe._21, {
                    color: Qe.F.Alt2,
                    italic: !0
                }, Object(Ne.d)("This channel has a Cheer minimum of {minToCheer} Bits", {
                    minToCheer: e.minToCheer
                }, "Bits--CheermoteTierIntro")));
                var n = null;
                return e.minToPin > 0 && (n = je.createElement(Qe._21, {
                    color: Qe.F.Alt2,
                    italic: !0
                }, Object(Ne.d)("Pinning your Cheer is a minimum of {minToPin} Bits", {
                    minToPin: e.minToPin
                }, "Bits--CheermoteTierIntro"))), je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexGrow: 1,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Center,
                    padding: 1,
                    className: "cheermote-tier-intro"
                }, je.createElement(Qe.U, {
                    padding: {
                        x: 4
                    },
                    margin: {
                        bottom: 1
                    }
                }, je.createElement(Qe._21, {
                    color: Qe.F.Alt2
                }, Object(Ne.d)("Cheermotes have multiple tiers, rollover below to see each one!", "Bits--CheermoteTierIntro"))), t, n)
            }),
            Qa = n(964),
            Ya = n.n(Qa),
            Xa = n(869),
            Za = (n(965), function(e) {
                return Object(Xa.d)({
                    action: Xa.a.View,
                    type: Xa.c.BitsIntro,
                    channelId: e.channelID
                }), je.createElement(Qe.U, {
                    "data-test-selector": "crate-intro"
                }, je.createElement(Qe.U, {
                    padding: {
                        x: 1,
                        top: 2,
                        bottom: 1
                    }
                }, je.createElement(Qe._21, {
                    fontSize: Qe.L.Size4,
                    bold: !0
                }, Object(Ne.d)("Share the Holiday Cheer!", "Crates"))), je.createElement(Qe._17, {
                    className: "crates-holiday-background",
                    background: Qe.m.Alt,
                    padding: 1,
                    margin: {
                        y: 1
                    },
                    display: Qe.H.Flex,
                    justifyContent: Qe.T.Around,
                    alignItems: Qe.c.End,
                    borderTop: !0,
                    borderBottom: !0
                }, je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Long,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "treeRaid"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602042/1.0"
                }))), je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Medium,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "SnowGlitch"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/589120/1.0"
                }))), je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Short,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "nutRage"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/589092/1.0"
                }))), je.createElement("img", {
                    src: Ya.a,
                    height: "50",
                    width: "50"
                }), je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Short,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "rudolphWUT"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602049/1.0"
                }))), je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Medium,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "gingyNOO"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602048/1.0"
                }))), je.createElement(Qe.e, {
                    type: Qe.i.BounceIn,
                    delay: Qe.f.Long,
                    enabled: !0
                }, je.createElement(Qe._30, {
                    label: "bulbRIP"
                }, je.createElement("img", {
                    src: "https://static-cdn.jtvnw.net/emoticons/v1/602045/1.0"
                })))), je.createElement(Qe.U, {
                    padding: 1
                }, je.createElement(Qe._21, {
                    type: Qe._26.P
                }, Object(Ne.d)("Cheer any amount to support your streamer, and get a holiday gift! Cheer {minBits, number} Bits or more, and others in chat can get a gift too!", {
                    minBits: 250
                }, "Crates")), je.createElement(Qe._21, {
                    type: Qe._26.Strong
                }, je.createElement("a", {
                    href: "https://blog.twitch.tv/bring-the-zombie-apocalypse-to-twitch-7a5bf4ecff42",
                    target: "_blank",
                    rel: "noreferrer noopener"
                }, Object(Ne.d)("Details", "Crates")))))
            }),
            ei = n(966),
            ti = n.n(ei),
            ni = function(e) {
                return Object(Xa.d)({
                    action: Xa.a.View,
                    type: Xa.c.BitsIntro,
                    channelId: e.channelID
                }), je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexGrow: 1,
                    flexDirection: Qe.J.Column,
                    justifyContent: Qe.T.Center,
                    alignItems: Qe.c.Center
                }, je.createElement(Qe.U, {
                    "data-test-selector": "crate-intro"
                }, je.createElement(Qe._21, {
                    type: Qe._26.H4,
                    bold: !0
                }, Object(Ne.d)("The Zombie Apocalypse is Coming!", "Crates--Bits-Intro")), je.createElement("figure", {
                    className: "crates-intro-banner"
                }, je.createElement("img", {
                    src: ti.a
                })), je.createElement(Qe.U, {
                    margin: {
                        y: 1
                    },
                    padding: {
                        x: 1
                    }
                }, je.createElement(Qe._21, null, Object(Ne.d)("For a limited time, Cheer at least {numBits, number} Bits and get a Halloween Crate with one of {numEmotes, number} temporary zombie emotes. Collect all {numEmotes, number} to permanently unlock Zombie Lord Kappa!", {
                    numBits: 250,
                    numEmotes: 6
                }, "Crates--Bits-Intro"), " ", je.createElement("a", {
                    href: "https://blog.twitch.tv/bring-the-zombie-apocalypse-to-twitch-7a5bf4ecff42",
                    target: "_blank",
                    rel: "noreferrer noopener"
                }, Object(Ne.d)("Learn More", "Crates--Bits-Intro")))), je.createElement(Qe._21, null, Object(Ne.d)("Select a Cheermote to start your Cheer", "Crates--CheermoteIntro"), je.createElement("br", null), je.createElement("a", {
                    href: "#",
                    onClick: e.onClickHelp,
                    "data-test-selector": "help-link"
                }, Object(Ne.d)("How do I cheer?", "Crates--CheermoteIntro")))))
            },
            ai = (n(967), function() {
                return je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    className: "hgc-2017-intro"
                }, je.createElement(Qe.P, {
                    padding: 1,
                    attachTop: !0,
                    attachLeft: !0,
                    position: Qe._2.Absolute
                }, je.createElement("img", {
                    className: "hgc-cheer__brand-banner",
                    src: Ha.h + "/hgc-logo-large.png"
                })), je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    className: "hgc-cheer__cheer-intro",
                    textAlign: Qe._22.Center
                }, je.createElement(Qe._21, {
                    color: Qe.F.Alt,
                    type: Qe._26.P
                }, Object(Ne.d)("Select the logo of the team you want to Cheer for, followed by the number of Bits you want to use and any message you’d like to add.", "HGC2017--CheerIntro"))))
            });
        ! function(e) {
            e.CratesHalloween = "CratesHalloween", e.CratesChristmas = "CratesChristmas"
        }(St || (St = {}));
        var ii, ri = function(e) {
                switch (e.event) {
                    case Ha.i:
                        return je.createElement(ai, null);
                    case St.CratesHalloween:
                        return je.createElement(ni, {
                            onClickHelp: e.onClickHelp,
                            channelID: e.channelID
                        });
                    case St.CratesChristmas:
                        return je.createElement(Za, {
                            onClickHelp: e.onClickHelp,
                            channelID: e.channelID
                        });
                    default:
                        return je.createElement(Ga, {
                            onClickHelp: e.onClickHelp
                        })
                }
            },
            si = n(70),
            oi = n(855),
            li = n.n(oi),
            ci = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = "";
                    if (this.props.amount < 250) {
                        var t = 250 - this.props.amount;
                        e = Object(Ne.d)("{bitsToGo, plural, one {Cheer # more Bit to share gifts with chat!} other {Cheer # more Bits to share gifts with chat!}}", {
                            bitsToGo: t
                        }, "Crates")
                    } else e = Object(Ne.d)("Your Cheer will share gifts with chat!", "Crates");
                    return je.createElement(Qe._17, {
                        className: "crate-christmas-2017-reminder",
                        background: Qe.m.Alt,
                        borderTop: !0,
                        padding: 1
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Inline,
                        margin: {
                            right: .5
                        }
                    }, je.createElement("img", {
                        src: li.a,
                        height: "22",
                        width: "22"
                    })), je.createElement(Qe._21, {
                        type: Qe._26.Strong
                    }, e))
                }, t
            }(je.Component),
            ui = ci,
            di = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    switch (this.props.event) {
                        case St.CratesChristmas:
                            return je.createElement(ui, {
                                amount: this.props.amount
                            });
                        default:
                            return null
                    }
                }, t
            }(je.Component),
            pi = di,
            mi = function(e) {
                var t = e.prefixes.map(function(t, n) {
                    if (t.alt && t.cheerAmount) return je.createElement(Qe.P, {
                        key: n,
                        padding: {
                            x: 1
                        }
                    }, je.createElement("li", null, je.createElement($a.a, {
                        prefix: t.alt,
                        amount: t.cheerAmount > Ha.l ? Ha.l : t.cheerAmount,
                        bitsConfig: e.bitsConfig,
                        size: $a.b.Small
                    })))
                });
                return je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Row,
                    alignItems: Qe.c.End,
                    justifyContent: Qe.T.Center,
                    flexWrap: Qe.K.Wrap,
                    margin: {
                        top: 1
                    },
                    className: "pending-cheer-list"
                }, t)
            },
            hi = (n(968), function(e) {
                var t;
                if (e.prefixes && 1 === e.prefixes.length) {
                    var n = e.prefixes[0].alt;
                    n && (t = je.createElement(Qe.U, {
                        padding: {
                            top: 2
                        }
                    }, je.createElement($a.a, {
                        prefix: n,
                        amount: e.amount > Ha.l ? Ha.l : e.amount,
                        bitsConfig: e.bitsConfig
                    })))
                } else if (e.prefixes) t = je.createElement(Qe.U, {
                    margin: {
                        top: 1
                    }
                }, je.createElement(si.b, {
                    className: "pending-cheer__scroll-container"
                }, je.createElement(mi, {
                    prefixes: e.prefixes,
                    bitsConfig: e.bitsConfig
                })));
                else {
                    var a = Object(Ne.d)("You are using a total of {totalBits} Bits to cheer in {channelName}!", {
                        totalBits: je.createElement("strong", null, e.amount),
                        channelName: e.channelDisplayName
                    }, "Bits--PendingCheer");
                    t = je.createElement(Qe.U, {
                        padding: {
                            top: 2,
                            x: 5
                        }
                    }, je.createElement(Qe._21, {
                        color: Qe.F.Alt2,
                        "data-a-target": "total-bits-message"
                    }, a))
                }
                var i = null;
                e.purchaseMore && e.purchaseMore > 0 && (i = je.createElement(Qe._21, {
                    "data-a-target": "need-more-bits-error"
                }, Object(Ne.d)("Please purchase {neededBits} more Bits to Cheer", {
                    neededBits: e.purchaseMore
                }, "Bits--PendingCheer")));
                var r = null;
                if (e.largestCheermote > Ha.l) {
                    var s = Object(Ne.d)("{maximumCheerSize} is the largest Cheer emote, add another emote to Cheer louder!", {
                        maximumCheerSize: Ha.l
                    }, "Bits--PendingCheer");
                    i = je.createElement(Qe._21, {
                        "data-a-target": "max-cheer-bits-error"
                    }, s)
                }
                if (e.amount < e.minToCheer) {
                    var o = Object(Ne.d)("Add {moreBitsAmount} Bits to reach this channel's minimum Cheer.", {
                        moreBitsAmount: e.minToCheer - e.amount
                    }, "Bits--PendingCheer");
                    i = je.createElement(Qe._21, {
                        "data-a-target": "min-cheer-bits-error"
                    }, o)
                }
                if (e.smallestCheermote < e.minPerEmote) {
                    var l = Object(Ne.d)("This channel has set a minimum of {minPerEmote} Bits to use a Cheer emote in chat.", {
                        minPerEmote: e.minPerEmote
                    }, "Bits--PendingCheer");
                    r = je.createElement(Qe._21, {
                        color: Qe.F.Alt2,
                        italic: !0,
                        "data-a-target": "min-emote-bits-error"
                    }, l)
                }
                var c = je.createElement($a.a, {
                    amount: e.amount,
                    prefix: Ha.f,
                    bitsConfig: e.bitsConfig,
                    display: $a.c.InlineTextOnly,
                    size: $a.b.Medium
                });
                return je.createElement(Qe.U, null, je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    padding: 1,
                    className: "pending-cheer"
                }, je.createElement(Qe._21, {
                    fontSize: Qe.L.Size4,
                    bold: !0
                }, Object(Ne.d)("Cheering {totalBits} Bits", {
                    totalBits: c
                }, "Bits--PendingCheer")), !r && t, !r && i && je.createElement(Qe.U, {
                    padding: {
                        top: 1
                    }
                }, i), r && je.createElement(Qe.U, {
                    padding: {
                        top: 3,
                        x: 3
                    }
                }, r)), !r && !i && je.createElement(pi, {
                    event: e.event,
                    amount: e.amount
                }))
            }),
            fi = n(375),
            gi = (n(969), {
                themed: !0,
                dark: {
                    "1x": Ha.b + "/dark/animated/promo/intro.gif"
                },
                light: {
                    "1x": Ha.b + "/light/animated/promo/intro.gif"
                }
            }),
            vi = function() {
                return je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Center,
                    flexGrow: 1,
                    className: "bits-sending"
                }, je.createElement(Qe.U, {
                    padding: {
                        bottom: 1
                    }
                }, je.createElement(fi.a, {
                    sources: gi
                })), je.createElement(Qe._21, {
                    italic: !0
                }, Object(Ne.d)("Your Cheer is currently processing.", "Bits--SendingBits")))
            },
            bi = (n(970), function(e) {
                var t = Object(Ne.d)("You are using {totalBits} Bits to cheer in {channelName}'s chat.", {
                        totalBits: e.totalBits,
                        channelName: e.channelDisplayName
                    }, "Bits--UndoPrompt"),
                    n = null;
                if (e.prefixes && e.prefixes.length > 1) n = je.createElement(si.b, {
                    className: "bits-undo-prompt__scroll-container"
                }, je.createElement(Qe.U, {
                    margin: {
                        top: 1
                    }
                }, je.createElement(mi, {
                    prefixes: e.prefixes,
                    bitsConfig: e.bitsConfig
                })));
                else {
                    var a = e.prefixes[0].alt;
                    a && (n = je.createElement(Qe.U, {
                        padding: {
                            bottom: 1
                        }
                    }, je.createElement($a.a, {
                        prefix: a,
                        amount: e.totalBits,
                        bitsConfig: e.bitsConfig
                    })))
                }
                return je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexDirection: Qe.J.Column,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Center,
                    flexGrow: 1,
                    padding: 1,
                    className: "bits-undo-prompt"
                }, n, je.createElement(Qe._21, null, t))
            }),
            ki = function(e) {
                var t = Ne.b.get("crate_trickster_launch", qa.a.Off),
                    n = t === qa.a.On || t === qa.a.StaffOnly && e.isStaff ? St.CratesChristmas : null,
                    a = e.event || n;
                if (e.isSending) return e.totalBits < Ha.m ? je.createElement(vi, null) : je.createElement(bi, {
                    bitsConfig: e.bitsConfig,
                    channelDisplayName: e.displayName,
                    prefixes: e.currentCheers,
                    totalBits: e.totalBits
                });
                if (e.hoveredCheermote) return je.createElement(Ja, {
                    event: e.event,
                    tournament: e.tournament,
                    bitsConfig: e.bitsConfig,
                    prefix: e.hoveredCheermote,
                    tier: e.hoveredTier
                });
                if (e.totalBits) return je.createElement(hi, {
                    bitsConfig: e.bitsConfig,
                    prefixes: e.currentCheers,
                    amount: e.totalBits,
                    channelDisplayName: e.displayName,
                    purchaseMore: e.bitsBalance && e.totalBits - e.bitsBalance,
                    largestCheermote: e.largestCheermote,
                    smallestCheermote: e.smallestCheermote,
                    minPerEmote: e.emoteMinimumBits,
                    minToCheer: e.cheerMinimumBits,
                    event: a
                });
                if (e.helpRequested) return je.createElement(za.a, null);
                if (e.chosenCheermote) {
                    var i = e.recentMinimumBits,
                        r = e.cheerMinimumBits;
                    return je.createElement(Ka, {
                        minToPin: i,
                        minToCheer: r
                    })
                }
                return a ? je.createElement(ri, {
                    event: a,
                    onClickHelp: e.showHelp,
                    channelID: e.channelID
                }) : je.createElement(Ga, {
                    onClickHelp: e.showHelp
                })
            },
            yi = n(843),
            _i = (n(971), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        startingIndex: 0
                    }, t.handleCheermoteHover = function(e) {
                        var n = e.currentTarget.getAttribute("data-key");
                        n && t.props.onHover(n)
                    }, t.handleCheermoteUnhover = function() {
                        t.props.onHoverLeave()
                    }, t.handleCheermoteClick = function(e) {
                        var n = e.currentTarget.getAttribute("data-key");
                        n && t.props.onClick(n)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = this;
                    if (this.props.hide) return null;
                    var t = this.props.cheermotes,
                        n = t.map(function(t, n) {
                            if (!t) return je.createElement("li", {
                                key: "null-cheermote-" + n
                            }, je.createElement("button", {
                                className: "cheermote-list__item-button",
                                disabled: !0
                            }, je.createElement("div", {
                                className: "cheermote-list__placeholder"
                            })));
                            var a = "";
                            t.key && (a = t.key.replace(":", ""));
                            var i = null;
                            e.props.showCheermoteAmount && t.key && (i = je.createElement($a.a, {
                                bitsConfig: e.props.bitsConfig,
                                prefix: "",
                                amount: +t.key.split(":")[1],
                                display: $a.c.TextOnly,
                                size: $a.b.Small
                            }));
                            var r = je.createElement("li", {
                                key: t.key,
                                className: "cheermote-list__cheermote"
                            }, je.createElement("button", {
                                className: "cheermote-list__item-button",
                                "data-key": t.key,
                                onMouseEnter: e.handleCheermoteHover,
                                onMouseLeave: e.handleCheermoteUnhover,
                                onClick: e.handleCheermoteClick,
                                "data-a-target": "cheermote-" + a
                            }, je.createElement("img", {
                                alt: t.key,
                                src: e.props.darkModeEnabled ? t.imgSrcDark : t.imgSrc
                            })), i);
                            return e.props.showCheermoteAmount ? r : je.createElement(Qe.P, {
                                key: t.key,
                                margin: {
                                    bottom: 1
                                }
                            }, r)
                        }),
                        a = null;
                    this.props.showCheermoteAmount && (a = je.createElement(Qe.U, {
                        padding: {
                            right: 2
                        },
                        fullWidth: !0,
                        className: "cheermote-list__back-button"
                    }, je.createElement(Qe.u, {
                        "data-a-target": "bits-card-back-button",
                        type: Qe.z.Text,
                        fullWidth: !0,
                        onClick: this.props.onClose
                    }, Object(Ne.d)("Show All Cheermotes", "CheermoteCarousel"))));
                    var i = je.createElement(Qe.P, {
                            className: "cheermote-list__cheermotes",
                            display: Qe.H.Flex,
                            flexWrap: Qe.K.Wrap,
                            flexDirection: Qe.J.Row,
                            justifyContent: this.props.showCheermoteAmount ? Qe.T.Between : Qe.T.Start,
                            alignItems: Qe.c.End,
                            padding: {
                                bottom: 1
                            }
                        }, je.createElement("ul", null, n, a)),
                        r = qe("cheermote-list", {
                            "cheermote-list__tier-selection": this.props.showCheermoteAmount
                        }, {
                            "cheermote-list__cheermote-selection": !this.props.showCheermoteAmount
                        });
                    return this.props.showCheermoteAmount ? je.createElement(Qe.U, {
                        flexGrow: 1,
                        overflow: Qe.Y.Hidden,
                        className: r
                    }, i) : je.createElement(Qe.U, {
                        flexGrow: 1,
                        overflow: Qe.Y.Hidden,
                        className: r
                    }, je.createElement(si.b, null, i))
                }, t
            }(je.Component)),
            Ci = Object(Le.a)(pe)(_i),
            Si = n(130),
            Ei = (n(972), function(e) {
                return je.createElement(Qe.U, {
                    flexGrow: 1,
                    padding: 1
                }, je.createElement(Qe.U, {
                    display: Qe.H.Flex,
                    flexGrow: 1,
                    alignItems: Qe.c.Center,
                    justifyContent: Qe.T.Between
                }, je.createElement(Ke.a, {
                    count: e.balance || 0,
                    withImage: !0,
                    withText: !0,
                    bitsConfig: e.bitsConfig,
                    themeOverride: Re.a.Dark
                }), je.createElement(Qe.P, {
                    display: Qe.H.Flex,
                    alignItems: Qe.c.Center
                }, je.createElement("a", {
                    href: Object(Si.a)("/blizzheroes/esports/hgc-2017")
                }, je.createElement(Qe.P, {
                    margin: {
                        right: .5
                    }
                }, je.createElement("img", {
                    src: Ha.h + "/nexus-icon/1x.png",
                    className: "hgc-inventory-footer__nexus-icon"
                })), je.createElement("span", {
                    className: "hgc-inventory-footer__progress-link"
                }, Object(Ne.d)("Check Progress!", "HGC2017--FooterCheckProgress")))), je.createElement(Qe.u, {
                    disabled: void 0 === e.balance || void 0 !== e.balance && e.balance > Ha.j,
                    onClick: e.onClickGetBits
                }, Object(Ne.d)("Get Bits", "HGC2017--BalanceFooter"))))
            }),
            wi = function(e) {
                return e.event === Ha.i ? je.createElement(Ei, {
                    bitsConfig: e.bitsConfig,
                    onClickGetBits: e.onClickGetBits,
                    balance: e.balance
                }) : je.createElement(Va, {
                    bitsConfig: e.bitsConfig,
                    onClickGetBits: e.onClickGetBits,
                    balance: e.balance,
                    selfBitsBadge: e.selfBitsBadge
                })
            },
            Ni = function(e) {
                return je.createElement(Qe.U, {
                    flexGrow: 1
                }, je.createElement(Qe.U, {
                    className: "undo-prompt__footer",
                    padding: 1,
                    display: Qe.H.Flex,
                    justifyContent: Qe.T.Between
                }, je.createElement(Qe.u, {
                    onClick: e.onCancel || void 0,
                    type: Qe.z.Hollow,
                    overlay: !0,
                    "data-test-selector": "cancel-button"
                }, Object(Ne.d)("Cancel", "Bits--UndoPrompt")), je.createElement(Qe.u, {
                    onClick: e.onConfirm || void 0,
                    "data-test-selector": "confirm-button"
                }, Object(Ne.d)("Send", "Bits--UndoPrompt"))), je.createElement(Qe._5, {
                    size: Qe._6.ExtraSmall,
                    countdown: Ha.n.UNDO_PROMPT_DURATION / 1e3
                }))
            },
            Di = n(821),
            Ii = n(815),
            Oi = n(973),
            Ui = (n(974), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        chosenCheermote: null,
                        hoveredCheermote: null,
                        hoveredTier: 0,
                        helpRequested: !1,
                        totalBits: 0,
                        largestCheermote: 0,
                        smallestCheermote: 0,
                        buyingBits: !1
                    }, t.unhoverTimeout = 0, t.lastRefetchTime = 0, t.handleTierHover = function(e) {
                        clearTimeout(t.unhoverTimeout);
                        var n = e.split(":");
                        n.length < 2 || (t.setState({
                            hoveredTier: +n[1],
                            hoveredCheermote: n[0]
                        }), t.props.trackBitsCardInteraction(Ii.a.PreviewEmote, {
                            emoteType: n[0],
                            emoteLevel: +n[1]
                        }))
                    }, t.handleUnhover = function() {
                        t.unhoverTimeout = setTimeout(t.clearHovered, 500)
                    }, t.clearHovered = function() {
                        t.setState({
                            hoveredTier: 0,
                            hoveredCheermote: null
                        })
                    }, t.handleTierClick = function(e) {
                        t.props.onClickCheermote(e.split(":").join(""))
                    }, t.handleCheermoteHover = function(e) {
                        clearTimeout(t.unhoverTimeout), t.setState({
                            hoveredCheermote: e,
                            hoveredTier: 0
                        }), t.props.trackBitsCardInteraction(Ii.a.PreviewEmote, {
                            emoteType: e,
                            emoteLevel: 100
                        })
                    }, t.handleCheermoteClick = function(e) {
                        t.setState({
                            chosenCheermote: e,
                            hoveredCheermote: null,
                            hoveredTier: 0
                        })
                    }, t.clearChosenCheermote = function() {
                        t.setState({
                            chosenCheermote: null,
                            hoveredCheermote: null,
                            hoveredTier: 0
                        })
                    }, t.showHelp = function(e) {
                        e.preventDefault(), t.setState({
                            helpRequested: !0
                        })
                    }, t.closeHelp = function() {
                        return t.setState({
                            helpRequested: !1
                        })
                    }, t.handleClickBuy = function() {
                        t.setState({
                            buyingBits: !0
                        }), t.props.trackBitsCardInteraction(Ii.a.BuyMain)
                    }, t.handleCloseBuy = function() {
                        return t.setState({
                            buyingBits: !1
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    var t = this.props.visible || !!this.props.currentCheers.length,
                        n = e.visible || !!e.currentCheers.length;
                    if (!t && n) {
                        var a = Date.now();
                        a - this.lastRefetchTime > 1e3 && this.props.data && e.data && !e.data.loading && (this.lastRefetchTime = a, e.data.refetch())
                    }
                    if (t && !n && this.setState({
                            chosenCheermote: null,
                            hoveredCheermote: null,
                            hoveredTier: 0,
                            buyingBits: !1
                        }), this.props.currentCheers !== e.currentCheers) {
                        var i = Object(Di.a)(e.currentCheers),
                            r = i.total,
                            s = i.largestCheermote,
                            o = i.smallestCheermote;
                        this.setState({
                            totalBits: r,
                            largestCheermote: s,
                            smallestCheermote: o
                        })
                    }
                }, t.prototype.render = function() {
                    var e = this;
                    if (!this.props.visible && !this.props.currentCheers.length) return null;
                    var t, n = {
                        border: !0,
                        background: Qe.m.Base,
                        elevation: 3,
                        fullWidth: !0
                    };
                    if (this.props.currentCheers.length || (t = je.createElement("button", {
                            className: "t-bits-card__close t-bits-card__top-controls",
                            onClick: this.props.onUserClose,
                            "data-test-selector": "cancel-button",
                            "data-a-target": "bits-card-close-button"
                        }, je.createElement(Qe._8, {
                            asset: Qe._9.Close,
                            height: 11,
                            width: 11
                        }))), !this.props.data || this.props.data.loading) return je.createElement(Qe._17, Ee.__assign({
                        className: "t-bits-card",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        alignItems: Qe.c.Center,
                        justifyContent: Qe.T.Center
                    }, n), je.createElement(Qe.X, {
                        delay: 0
                    }), je.createElement(Qe.U, {
                        padding: {
                            top: 2
                        }
                    }, je.createElement(Qe._21, {
                        italic: !0
                    }, Object(Ne.d)("Fetching Bits", "BitsCard"))));
                    if (this.props.data.error || !this.props.bitsConfig) return je.createElement(Wa, null);
                    if (this.props.data.currentUser && this.props.data.currentUser.login === this.props.channelLogin) return je.createElement(Qe._17, Ee.__assign({
                        className: "t-bits-card",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        alignItems: Qe.c.Center,
                        justifyContent: Qe.T.Center,
                        textAlign: Qe._22.Center,
                        padding: {
                            top: 2,
                            x: 1,
                            bottom: 1
                        }
                    }, n), t, je.createElement(Qe._21, {
                        color: Qe.F.Error,
                        italic: !0
                    }, Object(Ne.d)("You cannot Cheer in your own channel.", "BitsCard")));
                    if (this.state.buyingBits) return je.createElement(yi.a, {
                        bitsConfig: this.props.bitsConfig,
                        channelLogin: this.props.channelLogin,
                        closeAllBits: this.props.onUserClose,
                        onClose: this.handleCloseBuy,
                        trackBitsCardInteraction: this.props.trackBitsCardInteraction,
                        location: Ii.b.ChatTooltip
                    });
                    var a = null,
                        i = this.state.helpRequested && !this.props.currentCheers.length,
                        r = null;
                    if (this.props.data.user.cheer.settings.event && (r = this.props.data.user.cheer.settings.event.toLowerCase().replace("_", "-")), this.state.chosenCheermote) {
                        var s = this.props.bitsConfig.indexedActions[this.state.chosenCheermote.toLowerCase()];
                        if (s) {
                            var o = s.orderedTiers.filter(function(e) {
                                return e.bits <= Ha.l
                            }).map(function(e) {
                                return {
                                    imgSrc: e.indexedImages.LIGHT.static.get(2),
                                    imgSrcDark: e.indexedImages.DARK.static.get(2),
                                    key: s.prefix + ":" + e.bits
                                }
                            }).reverse();
                            a = je.createElement(Ci, {
                                bitsConfig: this.props.bitsConfig,
                                hide: i,
                                cheermotes: o,
                                showCheermoteAmount: !0,
                                event: r,
                                onHover: this.handleTierHover,
                                onHoverLeave: this.handleUnhover,
                                onClick: this.handleTierClick,
                                onClose: this.clearChosenCheermote
                            })
                        }
                    }
                    if (!a) {
                        var o = this.props.bitsConfig.orderedActions.filter(function(e) {
                            return e.type !== Ha.d
                        }).map(function(t) {
                            var n = Ha.g;
                            e.props.data && e.props.data.user.cheer.settings.event && (n = 1);
                            var a = t.indexedTiers.get(n);
                            return a ? {
                                imgSrc: a.indexedImages.LIGHT.static.get(2),
                                imgSrcDark: a.indexedImages.DARK.static.get(2),
                                key: t.prefix
                            } : null
                        });
                        a = je.createElement(Ci, {
                            bitsConfig: this.props.bitsConfig,
                            hide: i,
                            cheermotes: o,
                            event: r,
                            onHover: this.handleCheermoteHover,
                            onHoverLeave: this.handleUnhover,
                            onClick: this.handleCheermoteClick
                        })
                    }
                    var l = null;
                    this.props.isSending ? this.state.totalBits >= Ha.m && (l = je.createElement(Ni, {
                        onCancel: this.props.onCancelSend,
                        onConfirm: this.props.onConfirmSend
                    })) : l = r ? je.createElement(wi, {
                        event: r,
                        selfBitsBadge: this.props.data.user.self && this.props.data.user.self.bitsBadge,
                        bitsConfig: this.props.bitsConfig,
                        onClickGetBits: this.handleClickBuy,
                        balance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance
                    }) : je.createElement(Va, {
                        selfBitsBadge: this.props.data.user.self && this.props.data.user.self.bitsBadge,
                        bitsConfig: this.props.bitsConfig,
                        onClickGetBits: this.handleClickBuy,
                        balance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance
                    });
                    var c;
                    i && (c = je.createElement("button", {
                        className: "t-bits-card__go-back t-bits-card__top-controls",
                        onClick: this.closeHelp,
                        "data-a-target": "bits-card-back-button"
                    }, je.createElement(Qe._8, {
                        asset: Qe._9.Play,
                        height: 8
                    }), " ", Object(Ne.d)("Back", "BitsCard")));
                    var u = qe("t-bits-card", {
                        "t-bits-card--tall": !this.props.isSending
                    });
                    return je.createElement(Qe._17, Ee.__assign({
                        className: u,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        "data-a-target": "bits-card"
                    }, n), !this.props.isSending && c, t, je.createElement(Qe._17, {
                        className: "t-bits-card__contents",
                        display: Qe.H.Flex,
                        flexGrow: 0,
                        flexDirection: Qe.J.Column,
                        alignContent: Qe.b.Stretch,
                        textAlign: Qe._22.Center,
                        borderBottom: !this.props.isSending
                    }, je.createElement(ki, {
                        bitsBalance: this.props.data.currentUser && this.props.data.currentUser.bitsBalance,
                        bitsConfig: this.props.bitsConfig,
                        cheerMinimumBits: this.props.data.user.cheer.settings.cheerMinimumBits,
                        chosenCheermote: this.state.chosenCheermote,
                        currentCheers: this.props.currentCheers,
                        displayName: this.props.data.user.displayName,
                        emoteMinimumBits: this.props.data.user.cheer.settings.emoteMinimumBits,
                        event: r,
                        helpRequested: this.state.helpRequested,
                        hoveredCheermote: this.state.hoveredCheermote,
                        hoveredTier: this.state.hoveredTier,
                        isSending: this.props.isSending,
                        largestCheermote: this.state.largestCheermote,
                        recentMinimumBits: this.props.data.user.cheer.settings.recentMinimumBits,
                        smallestCheermote: this.state.smallestCheermote,
                        totalBits: this.state.totalBits,
                        tournament: this.props.data.user.tournament,
                        channelID: this.props.channelID,
                        showHelp: this.showHelp,
                        isStaff: this.props.isStaff
                    })), !this.props.isSending && a, l && je.createElement(Qe.U, {
                        className: "t-bits-card__footer",
                        display: Qe.H.Flex
                    }, l))
                }, t = Ee.__decorate([Object(Be.a)(Oi, {
                    name: "data",
                    skip: function(e) {
                        return !e.channelID
                    },
                    options: function(e) {
                        return {
                            variables: {
                                name: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                })], t)
            }(je.Component)),
            xi = Ui,
            Ti = n(11),
            Li = n(134),
            Fi = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.autocompleteType = Li.a.Hashtag, t.canBeTriggeredByTab = !1, t.getMatches = function(e) {
                        if (!e.startsWith("#")) return null;
                        if (null !== t.props.hashTags.edges) {
                            return t.props.hashTags.edges.filter(function(t) {
                                return t.node.id.includes(e)
                            }).map(function(n) {
                                return {
                                    current: e,
                                    replacement: n.node.id,
                                    element: t.genearateHashtagDisplay(n.node.id)
                                }
                            })
                        }
                        return null
                    }, t.genearateHashtagDisplay = function(e) {
                        return je.createElement(Qe.U, {
                            padding: {
                                right: .5
                            },
                            key: "hashtag:" + e
                        }, je.createElement(Qe._21, null, e))
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.unregister = this.context.registerAutocompleteProvider(this)
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister()
                }, t.prototype.render = function() {
                    return null
                }, t.contextTypes = {
                    registerAutocompleteProvider: Ti.func
                }, t
            }(je.Component),
            ji = n(889),
            Bi = n(48),
            Mi = n(383),
            Ai = 5,
            Ri = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.autocompleteType = Li.a.Mention, n.canBeTriggeredByTab = !0, n.getMatches = function(e, t) {
                        return t || e.startsWith("@") ? n.getMentions(e, t) : null
                    }, n.getMentions = function(e, t) {
                        var a = t ? e : e.substring(1),
                            i = new RegExp("^" + a, "i");
                        return n.state.sortedChatMembers.filter(function(e) {
                            return i.test(e.userLogin) || i.test(e.userDisplayName)
                        }).slice(0, Ai).map(function(a) {
                            return {
                                current: e,
                                replacement: (t ? "" : "@") + a.userDisplayName,
                                element: n.renderMention(a)
                            }
                        })
                    }, n.renderMention = function(e) {
                        return je.createElement("span", null, Object(Bi.a)(e.userLogin, e.userDisplayName))
                    }, n.sortChatMembers = function(e) {
                        var t = [Ee.__assign({}, Object(Mi.a)(e.channelDisplayName, e.channelLogin), {
                                userID: e.channelID,
                                userLogin: e.channelLogin,
                                userType: An.a.Owner
                            })],
                            n = e.chatMembers;
                        return n.sort(function(e, t) {
                            return e.userLogin < t.userLogin ? -1 : e.userLogin > t.userLogin ? 1 : 0
                        }), t.concat(n)
                    }, n.state = {
                        sortedChatMembers: n.sortChatMembers(t)
                    }, n
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.unregister = this.context.registerAutocompleteProvider(this)
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    this.props.chatMembers === e.chatMembers && this.props.channelDisplayName === e.channelDisplayName && this.props.channelLogin === e.channelLogin && this.props.channelID === e.channelID || this.setState({
                        sortedChatMembers: this.sortChatMembers(e)
                    })
                }, t.prototype.render = function() {
                    return null
                }, t.contextTypes = {
                    registerAutocompleteProvider: Ti.func
                }, t
            }(je.Component),
            Pi = function() {
                return je.createElement(Qe.p, {
                    direction: Qe.q.TopLeft,
                    offsetY: "11px",
                    show: !0
                }, je.createElement(Qe.U, {
                    padding: 1,
                    "data-test-selector": "raids-settings-tooltip"
                }, Object(Ne.d)("If a raid is offensive, moderate in chat settings.", "RaidReportingChat")))
            },
            Hi = {
                Embed: "embed",
                Web: "web"
            },
            Vi = n(975),
            Wi = this,
            qi = function(e) {
                return Ee.__awaiter(Wi, void 0, void 0, function() {
                    var t, n;
                    return Ee.__generator(this, function(a) {
                        switch (a.label) {
                            case 0:
                                return [4, Ne.n.apollo.client.query({
                                    query: Vi,
                                    variables: {
                                        id: e.channelID
                                    }
                                })];
                            case 1:
                                return t = a.sent(), t.data || Ne.i.warn("ChatEvent query failed; Chat tracking data sent may be incomplete."), n = Ee.__assign({}, Object(zn.a)(e), {
                                    broadcast_id: Ne.m.getVideoPlayerTrackingData().broadcastID,
                                    channel_id: e.channelID,
                                    game: t.data && t.data.user.stream && t.data.user.stream.game && t.data.user.stream.game.name,
                                    live: !!(t.data && t.data.user.stream && t.data.user.stream.id.length > 0),
                                    partner: t.data && t.data.user.isPartner,
                                    play_session_id: Ne.m.getVideoPlayerTrackingData().playSessionID,
                                    player: e.player,
                                    sub_only_mode: e.subOnlyMode
                                }), Ne.m.track(en.SpadeEventType.Chat, n), [2]
                        }
                    })
                })
            },
            zi = function(e) {
                var t = Ee.__assign({}, Object(zn.a)(e), {
                    mentioned_user_display_name: e.mentionedUserDisplayName,
                    user: e.userLogin
                });
                Ne.m.track(en.SpadeEventType.ChatMentionUsed, t)
            },
            Gi = n(857),
            $i = n(384),
            Ji = n(976),
            Ki = n(977),
            Qi = /\S/,
            Yi = 3;
        ! function(e) {
            e[e.Bits = 0] = "Bits", e[e.Emotes = 1] = "Emotes", e[e.None = 2] = "None"
        }(ii || (ii = {}));
        var Xi, Zi, er = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.cancelDelayedSend = null, n.confirmDelayedSend = null, n.hasConfirmedInEmbed = !1, n.hasSeenConfirmationPrompt = !1, n.setChatInputRef = function(e) {
                        return n.chatInputRef = e
                    }, n.setAutocompleteInputRef = function(e) {
                        return n.autocompleteInputRef = e
                    }, n.onChatSettingsToggle = function(e) {
                        n.handleRaidReportingToggle(e), e || Object(Gi.b)({
                            channelLogin: n.props.channelLogin,
                            isHostMode: n.props.isHostMode
                        })
                    }, n.handleRaidReportingToggle = function(e) {
                        n.props.raidReceived && (n.state.showRaidsSettingsTooltip && (n.setState({
                            showRaidsSettingsTooltip: !1
                        }), Ne.k.set("raidsModerationTooltipsSeenNumTimes", Yi)), e && n.setState({
                            showRaidsFollowerOnlyTooltip: !1
                        }))
                    }, n.onKeyDown = function(e) {
                        var t = e.charCode || e.keyCode;
                        switch (n.props.onKeyDown && t !== Ma.a.Enter && n.props.onKeyDown(e), t) {
                            case Ma.a.Enter:
                                return void(e.shiftKey || (e.preventDefault(), n.onMessageSend()));
                            case Ma.a.Esc:
                                return void(n.state.showCard === ii.Bits && n.setState({
                                    showCard: ii.None
                                }));
                            case Ma.a.Tab:
                                return void e.preventDefault();
                            default:
                                return
                        }
                    }, n.onMessageValueUpdate = function(e) {
                        n.setState({
                            value: e
                        })
                    }, n.onInputFocus = function() {
                        n.props.onInputFocus && n.props.onInputFocus(), n.state.hasInteractedOrPageload || n.setState({
                            hasInteractedOrPageload: !0
                        })
                    }, n.onMouseEnterInput = function() {
                        n.state.hasInteractedOrPageload || n.setState({
                            hasInteractedOrPageload: !0
                        })
                    }, n.onChatCommand = function(e) {
                        n.props.onChatCommand(e), n.trackChatEvent()
                    }, n.confirmEmbedAction = function(e, t, a) {
                        var i = n,
                            r = i.hasConfirmedInEmbed;
                        if (i.hasSeenConfirmationPrompt) return r;
                        var s = window.confirm(n.confirmationMessage(e, t, a));
                        return n.hasSeenConfirmationPrompt = !0, n.hasConfirmedInEmbed = s, s
                    }, n.confirmationMessage = function(e, t, n) {
                        return Object(Ne.d)('Hi {displayName}. You are attempting to send "{message}" in {channelLogin}\'s chat via an embedded version of Twitch Chat. Are you sure you want to do this? This setting will persist until you refresh the page', {
                            displayName: e,
                            message: t,
                            channelLogin: n
                        }, "ChatInput")
                    }, n.onMessageSend = function() {
                        return Ee.__awaiter(n, void 0, void 0, function() {
                            var e, t, n, a, i, r, s = this;
                            return Ee.__generator(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        return this.props.authToken ? this.props.channelID ? (e = Qi.test(this.state.value)) ? this.state.isSendingBits ? (Ne.i.debug("[ChatInput] Supressing chat message send. Bits spending is still in progress."), [2]) : this.props.isEmbedded && (this.props.isCurrentUserModerator || this.props.data && this.props.data.currentUser && this.props.data.currentUser.isPartner) && this.props.sessionUser && !this.confirmEmbedAction(this.props.sessionUser.displayName, this.state.value || "", this.props.channelLogin) ? (Ne.i.debug("[ChatInput] Embed Confirmation check failed. Not sending message"), [2]) : this.props.data && this.props.data.currentUser ? (t = Object(Di.a)(this.state.messageCheers), 0 === t.total ? (this.sendRegularMessage(), [2]) : this.props.data.user ? this.props.data.user.cheer ? (n = Object(Di.f)({
                                            messageBits: t,
                                            balance: this.props.data.currentUser.bitsBalance,
                                            cheerMinimumBits: this.props.data.user.cheer.settings.cheerMinimumBits,
                                            emoteMinimumBits: this.props.data.user.cheer.settings.emoteMinimumBits,
                                            inputValue: this.state.value
                                        }), n.canSpend ? this.props.sendCheer ? (this.setState({
                                            isSendingBits: !0
                                        }), t.total >= Ha.m ? [4, new Promise(function(e) {
                                            var t = setTimeout(e, Ha.n.UNDO_PROMPT_DURATION),
                                                n = function(n) {
                                                    void 0 === n && (n = !1), clearTimeout(t), s.cancelDelayedSend = null, s.confirmDelayedSend = null, e(n)
                                                };
                                            s.cancelDelayedSend = function() {
                                                return n(!0)
                                            }, s.confirmDelayedSend = function() {
                                                return n(!1)
                                            }
                                        })] : [3, 2]) : (Ne.i.warn("[Chat Input] No GraphQL mutation for sending cheers attached."), [2]) : (Ne.i.warn("[Chat Input] Spending bits forbidden.", n), [2])) : (Ne.i.warn("[Chat Input] Cheer is null."), [2]) : (Ne.i.warn("[Chat Input] User is null."), [2])) : (this.sendRegularMessage(), [2]) : (Ne.i.debug("[ChatInput] Supressing chat message send. Input failed to pass validation.", {
                                            hasSendableInput: e,
                                            value: this.state.value
                                        }), [2]) : (Ne.i.warn("[ChatInput] Attempt to send a message before channel ID"), [2]) : (this.props.login(), [2]);
                                    case 1:
                                        if (a = o.sent()) return this.setState({
                                            isSendingBits: !1
                                        }), this.chatInputRef.focus(), [2];
                                        o.label = 2;
                                    case 2:
                                        i = Object(Aa.a)(), o.label = 3;
                                    case 3:
                                        return o.trys.push([3, 5, , 6]), [4, this.props.sendCheer({
                                            variables: {
                                                input: {
                                                    id: i,
                                                    targetID: this.props.channelID,
                                                    bits: t.total,
                                                    content: this.state.value
                                                }
                                            }
                                        })];
                                    case 4:
                                        return o.sent(), [3, 6];
                                    case 5:
                                        return r = o.sent(), this.setState({
                                            isSendingBits: !1
                                        }), this.chatInputRef.focus(), [2];
                                    case 6:
                                        return this.setState({
                                            isSendingBits: !1,
                                            showCard: ii.None,
                                            value: ""
                                        }), this.chatInputRef.focus(), this.autocompleteInputRef.setValue(""), [2]
                                }
                            })
                        })
                    }, n.onEmotePickerToggle = function() {
                        n.setState(function(e) {
                            if (!e.messageCheers.length) return {
                                showCard: e.showCard === ii.Emotes ? ii.None : ii.Emotes
                            }
                        })
                    }, n.onBitsIconClick = function() {
                        n.state.showCard === ii.Bits ? n.trackBitsCardInteraction(Ii.a.CloseCard) : n.trackBitsCardInteraction(Ii.a.OpenCard), n.setState({
                            showCard: n.state.showCard === ii.Bits ? ii.None : ii.Bits
                        })
                    }, n.onShowViewersList = function() {
                        n.state.showCard !== ii.None && n.setState({
                            showCard: ii.None
                        }), n.props.showViewersList()
                    }, n.onBitsClose = function() {
                        n.state.showCard === ii.Bits && n.setState({
                            showCard: ii.None
                        }), n.trackBitsCardInteraction(Ii.a.CloseCard)
                    }, n.onClickEmote = function(e) {
                        var t = n.state.value;
                        n.state.value && n.state.value.length > 0 && !n.state.value.endsWith(" ") && (t += " "), t += e + " ", n.autocompleteInputRef.setValue(t)
                    }, n.onEmotePickerDataLoaded = function(e) {
                        e && n.setState({
                            showEmotePickerButton: !0
                        })
                    }, n.trackBitsCardInteraction = function(e, t) {
                        var a = {
                            actionName: e,
                            emoteType: t && t.emoteType,
                            emoteLevel: t && t.emoteLevel,
                            location: t && t.location,
                            displayedBalance: n.props.data && n.props.data.currentUser && n.props.data.currentUser.bitsBalance || 0
                        };
                        Object(Ii.h)(a)
                    }, n.state = {
                        hasInteractedOrPageload: t.firstPageLoaded,
                        isSendingBits: !1,
                        messageCheers: [],
                        showBuyBits: !1,
                        showCard: ii.None,
                        showEmotePickerButton: !!t.authToken,
                        showRaidsSettingsTooltip: !1,
                        showRaidsFollowerOnlyTooltip: !1,
                        value: ""
                    }, n
                }
                return Ee.__extends(t, e), t.prototype.componentWillUpdate = function(e, t) {
                    var n = this;
                    if (t.value !== this.state.value && this.props.bitsConfig) {
                        var a = [];
                        Object(Ve.c)(t.value, this.props.bitsConfig).forEach(function(e) {
                            e.type === xn.a.Emote && a.push(e.content)
                        }), a.length && t.showCard === ii.Emotes && this.setState({
                            showCard: ii.None
                        }), this.setState({
                            messageCheers: a
                        })
                    }
                    this.props.isCurrentUserModerator && !this.props.raidReceived && e.raidReceived && (Ne.k.get("raidsModerationTooltipsSeenNumTimes", 0), Number(Ne.k.get("raidsModerationTooltipsSeenNumTimes", 0)) < Yi && this.setState({
                        showRaidsSettingsTooltip: !0,
                        showRaidsFollowerOnlyTooltip: !0
                    }, function() {
                        setTimeout(function() {
                            Ne.k.set("raidsModerationTooltipsSeenNumTimes", Ne.k.get("raidsModerationTooltipsSeenNumTimes", 0) + 1), n.setState({
                                showRaidsSettingsTooltip: !1
                            })
                        }, 2e4)
                    }))
                }, t.prototype.componentWillReceiveProps = function(e) {
                    !this.props.firstPageLoaded && e.firstPageLoaded && this.setState({
                        hasInteractedOrPageload: !0
                    })
                }, t.prototype.render = function() {
                    var e = [];
                    this.props.bitsConfig && e.push(je.createElement(Qe.v, {
                        key: "bits",
                        icon: this.props.data && this.props.data.user && this.props.data.user.cheer && this.props.data.user.cheer.settings.event ? Qe._9.HGCNexus : Qe._9.Bits,
                        ariaLabel: Object(Ne.d)("Bits", "ChatInput"),
                        type: Qe.w.Secondary,
                        onClick: this.onBitsIconClick,
                        "data-a-target": "bits-button"
                    })), this.state.showEmotePickerButton && e.push(je.createElement($i.b, {
                        key: "emote-picker",
                        onClick: this.onEmotePickerToggle
                    }));
                    var t = null;
                    this.state.hasInteractedOrPageload && (t = je.createElement($i.c, {
                        channelOwnerID: this.props.channelID,
                        onClickEmote: this.onClickEmote,
                        onLoad: this.onEmotePickerDataLoaded,
                        toggleVisibility: this.onEmotePickerToggle,
                        visible: this.state.showCard === ii.Emotes
                    }));
                    var n = null;
                    this.state.hasInteractedOrPageload && this.props.bitsConfig && (n = je.createElement(xi, {
                        bitsConfig: this.props.bitsConfig,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        currentCheers: this.state.messageCheers,
                        isSending: this.state.isSendingBits,
                        isStaff: this.props.isStaff,
                        onCancelSend: this.cancelDelayedSend,
                        onClickCheermote: this.onClickEmote,
                        onConfirmSend: this.confirmDelayedSend,
                        onUserClose: this.onBitsClose,
                        trackBitsCardInteraction: this.trackBitsCardInteraction,
                        visible: this.state.showCard === ii.Bits
                    }));
                    var a = null;
                    return this.props.data.user && null !== this.props.data.user.cheer && null !== this.props.data.user.cheer.hashtags && this.state.messageCheers.length > 0 && (a = je.createElement(Fi, {
                        hashTags: this.props.data.user.cheer.hashtags
                    })), je.createElement(Qe.U, {
                        className: "chat-input",
                        padding: {
                            x: 2,
                            bottom: 2
                        }
                    }, je.createElement(Qe.P, {
                        position: Qe._2.Relative,
                        zIndex: Qe._38.Above
                    }, je.createElement("div", {
                        onMouseEnter: this.onMouseEnterInput
                    }, t, n, je.createElement(Ra.b, {
                        componentType: Ra.a.TextArea,
                        suggestionSource: Ra.c.Chat,
                        onValueUpdate: this.onMessageValueUpdate,
                        onFocus: this.onInputFocus,
                        onKeyDown: this.onKeyDown,
                        componentRefDelegate: this.setChatInputRef,
                        refDelegate: this.setAutocompleteInputRef,
                        paddingRight: 30 * e.length,
                        placeholder: Object(Ne.d)("Send a message", "ChatInput"),
                        noResize: !0,
                        "data-a-target": "chat-input",
                        "data-test-selector": "chat-input",
                        disabled: this.state.isSendingBits,
                        containerElement: this.props.containerElement
                    }, je.createElement(Ra.d, {
                        emotes: this.props.emotes
                    }), je.createElement(Ri, {
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.props.chatMembers
                    }), a), je.createElement(Qe.U, {
                        position: Qe._2.Absolute,
                        attachRight: !0,
                        attachTop: !0
                    }, e))), je.createElement(Qe.U, {
                        className: "chat-input__buttons-container",
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Between,
                        margin: {
                            top: 1
                        }
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row
                    }, je.createElement(Qe.U, {
                        position: Qe._2.Relative
                    }, je.createElement(ji.a, {
                        disabled: this.props.isEmbedded,
                        onToggle: this.onChatSettingsToggle,
                        channelLogin: this.props.channelLogin,
                        isHostMode: this.props.isHostMode,
                        authToken: this.props.authToken,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        onChatCommand: this.onChatCommand,
                        isPopout: this.props.isPopout,
                        channelID: this.props.channelID,
                        sawFirstRaidPrompt: this.state.showRaidsFollowerOnlyTooltip
                    }), this.state.showRaidsSettingsTooltip ? je.createElement(Pi, null) : null), je.createElement(Qe.v, {
                        ariaLabel: Object(Ne.d)("Viewer list", "ChatInput"),
                        "data-a-target": "chat-viewer-list",
                        "data-test-selector": "chat-viewer-list",
                        icon: Qe._9.ViewerList,
                        onClick: this.onShowViewersList
                    })), this.renderSendButton()))
                }, t.prototype.renderSendButton = function() {
                    var e;
                    return e = this.state.value && null !== Object(Yt.n)(this.state.value) ? Object(Ne.d)("Whisper", "ChatInput") : Object(Ne.d)("Chat", "ChatInput"), je.createElement(Qe.u, {
                        onClick: this.onMessageSend,
                        "data-a-target": "chat-send-button",
                        "data-test-selector": "chat-send-button",
                        disabled: this.state.isSendingBits
                    }, e)
                }, t.prototype.sendRegularMessage = function() {
                    this.props.onSendMessage && this.props.onSendMessage(this.state.value) && (this.trackChatEvent(), this.trackMentions(), this.autocompleteInputRef.setValue(""), this.setState({
                        showCard: ii.None
                    }))
                }, t.prototype.trackChatEvent = function() {
                    qi({
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        isHostMode: this.props.isHostMode,
                        player: this.props.isPopout ? Hi.Embed : Hi.Web,
                        subOnlyMode: this.props.isSubsOnlyModeEnabled
                    })
                }, t.prototype.trackMentions = function() {
                    if (!this.state.value || !this.props.sessionUser) return void Ne.i.warn("[ChatInput] trackMentions was called in a nonsensical state.");
                    for (var e = Object(Pn.c)(this.state.value, this.props.sessionUser.displayName, !1), t = 0, n = e; t < n.length; t++) {
                        var a = n[t];
                        a.type === xn.a.Mention && a.content.recipient !== a.content.sender && zi({
                            channelLogin: this.props.channelLogin,
                            isHostMode: this.props.isHostMode,
                            mentionedUserDisplayName: a.content.recipient,
                            userLogin: this.props.sessionUser.login
                        })
                    }
                }, t
            }(je.Component),
            tr = Object(Me.compose)(Object(Be.a)(Ki, {
                name: "sendCheer"
            }), Object(Be.a)(Ji), Object(yt.c)("ChatInput", {
                autoReportInteractive: !0
            }), Object(Le.a)(me, he))(er),
            nr = n(856),
            ar = function(e) {
                var t = e.data.twitch_metadata.clip_metadata,
                    n = {
                        clip: {
                            slug: t.slug,
                            id: t.id,
                            url: e.data.request_url,
                            title: e.data.title,
                            thumbnailURL: e.data.thumbnail_url,
                            curator: {
                                displayName: e.data.author_name,
                                __typename: "User"
                            },
                            broadcaster: {
                                displayName: t.channel_display_name,
                                __typename: "User"
                            },
                            game: null,
                            __typename: "Clip"
                        }
                    };
                return t.game && (n.clip.game = {
                    displayName: t.game,
                    __typename: "Game"
                }), n
            },
            ir = n(28),
            rr = (n(978), ["scroll", "wheel", "mousewheel", "DOMMouseScroll", "keyup", "mousedown"]),
            sr = 10,
            or = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isAutoScrolling: !0
                    }, t.saveScrollRef = function(e) {
                        return t.scroll = e
                    }, t.handleScrollEvent = function(e) {
                        if (t.scroll && (e.which > 0 || "mousedown" === e.type || "mousewheel" === e.type || "wheel" === e.type)) {
                            t.scroll.scrollContent.scrollHeight - t.scroll.scrollContent.scrollTop - t.scroll.scrollContent.offsetHeight <= sr ? t.setState({
                                isAutoScrolling: !0
                            }) : t.setState({
                                isAutoScrolling: !1
                            })
                        }
                    }, t.handleClickMoreMessages = function() {
                        t.setState({
                            isAutoScrolling: !0
                        }, t.scrollToBottom)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    var e = this;
                    rr.forEach(function(t) {
                        return e.scroll.scrollContent.addEventListener(t, e.handleScrollEvent)
                    })
                }, t.prototype.componentWillUnmount = function() {
                    var e = this;
                    rr.forEach(function(t) {
                        return e.scroll.scrollContent.removeEventListener(t, e.handleScrollEvent)
                    })
                }, t.prototype.componentDidUpdate = function(e) {
                    this.state.isAutoScrolling && this.props.messages !== e.messages && this.scrollToBottom()
                }, t.prototype.render = function() {
                    var e = this,
                        t = this.props.messages,
                        n = t.map(function(t) {
                            return je.createElement(Da, {
                                badgeSets: e.props.badgeSets,
                                channelID: e.props.channelID,
                                isCurrentUserModerator: e.props.isCurrentUserModerator,
                                message: t,
                                key: t.id,
                                showModerationIcons: e.props.showModerationIcons && !e.props.isEmbedded,
                                showTimestamps: e.props.showTimestamps,
                                currentUserDisplayName: e.props.currentUserDisplayName,
                                currentUserLogin: e.props.currentUserLogin,
                                onPushMessage: e.props.onPushMessage
                            })
                        });
                    return je.createElement(Qe.U, {
                        refDelegate: this.props.containerRef,
                        className: "chat-list",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        flexWrap: Qe.K.NoWrap,
                        overflow: Qe.Y.Hidden,
                        flexGrow: 1
                    }, je.createElement(ir.b, {
                        className: "chat-list__lines",
                        scrollRef: this.saveScrollRef,
                        "data-a-target": "chat-scroller"
                    }, je.createElement(Qe.U, {
                        flexGrow: 1,
                        fullHeight: !0,
                        padding: {
                            bottom: 1
                        }
                    }, n)), je.createElement(Qe.U, {
                        className: "chat-list__more-messages-placeholder",
                        position: Qe._2.Relative,
                        margin: {
                            x: 2
                        }
                    }, this.moreMessages()))
                }, t.prototype.moreMessages = function() {
                    return this.state.isAutoScrolling ? null : je.createElement(Qe.P, {
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center,
                        alignItems: Qe.c.Center,
                        position: Qe._2.Absolute,
                        padding: .5,
                        attachBottom: !0,
                        fullWidth: !0
                    }, je.createElement("div", {
                        className: "chat-list__more-messages",
                        onClick: this.handleClickMoreMessages
                    }, Object(Ne.d)("More messages below.", "ChatList")))
                }, t.prototype.scrollToBottom = function() {
                    this.scroll.scrollContent.scrollTop = this.scroll.scrollContent.scrollHeight
                }, t
            }(je.Component),
            lr = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    var t = e.pubsub.messages.chatRichEmbedInfo;
                    t && this.props.pubsub.messages.chatRichEmbedInfo !== t && Ne.n.apollo.client.writeQuery({
                        query: nr,
                        variables: {
                            slug: t.data.twitch_metadata.clip_metadata.slug
                        },
                        data: ar(t)
                    })
                }, t.prototype.render = function() {
                    return je.createElement(or, {
                        channelID: this.props.channelID,
                        badgeSets: this.props.badgeSets,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        channelLogin: this.props.channelLogin,
                        onPushMessage: this.props.onPushMessage,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        messages: this.props.messages,
                        showModerationIcons: this.props.showModerationIcons,
                        showTimestamps: this.props.showTimestamps,
                        currentUserLogin: this.props.currentUserLogin,
                        containerRef: this.props.containerRef
                    })
                }, t
            }(je.Component),
            cr = Object(Ae.compose)(Object(Le.a)(fe), Object(ze.a)([{
                skip: function(e) {
                    return !e.channelID
                },
                topic: function(e) {
                    return e.channelID ? Object(Je.h)(e.channelID) : ""
                },
                mapMessageTypesToProps: (Xi = {}, Xi[Ge.c.StreamChatRoomChatRichEmbed] = "chatRichEmbedInfo", Xi)
            }]))(lr),
            ur = (n(979), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.onClickConfirm = function() {
                        n.markRoomSeen(), n.setState({
                            showRules: !1
                        })
                    };
                    var a = n.getRoomsSeen();
                    return n.state = {
                        showRules: n.props.chatRules && n.props.chatRules.length > 0 && !a[n.props.channelLogin]
                    }, n
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    return this.state.showRules ? je.createElement(Qe.U, {
                        className: "chat-rules",
                        position: Qe._2.Relative
                    }, je.createElement(Qe._17, {
                        border: !0,
                        background: Qe.m.Base,
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Qe.U, {
                        padding: 1
                    }, je.createElement(Qe.U, {
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Qe._21, {
                        type: Qe._26.H6
                    }, Object(Ne.d)("Chat Rules:", "ChatRules"))), je.createElement(Qe.U, null, je.createElement("ul", null, this.props.chatRules.map(function(e, t) {
                        return je.createElement("li", {
                            key: t
                        }, e)
                    }))), je.createElement(Qe.U, {
                        margin: {
                            top: 1
                        },
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center
                    }, je.createElement(Qe.u, {
                        size: Qe.x.Small,
                        onClick: this.onClickConfirm
                    }, Object(Ne.d)("Ok, got it!", "ChatRules")))))) : null
                }, t.prototype.getRoomsSeen = function() {
                    return Ne.k.get("chat_rules_shown", {})
                }, t.prototype.markRoomSeen = function() {
                    var e = this.getRoomsSeen();
                    e[this.props.channelLogin] = !0, Ne.k.set("chat_rules_shown", e)
                }, t
            }(je.Component)),
            dr = 3,
            pr = (n(980), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.usernameClickHandler = function(e) {
                        var n = e.currentTarget.getAttribute("data-username");
                        n && t.props.onUsernameClick(n, aa.a.viewer_list, "")
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = this,
                        t = this.props,
                        n = t.viewers,
                        a = t.header,
                        i = n.map(function(t) {
                            return je.createElement("div", {
                                key: "chat-viewers-list-item-" + t
                            }, je.createElement("button", {
                                className: "chat-viewers-list__button",
                                "data-username": t,
                                onClick: e.usernameClickHandler
                            }, je.createElement(Qe._21, {
                                transform: Qe._25.Capitalize
                            }, t)))
                        });
                    return je.createElement(Qe.U, {
                        className: "chat-viewers-list",
                        padding: {
                            bottom: 2
                        }
                    }, je.createElement("div", null, je.createElement(Qe._21, {
                        transform: Qe._25.Uppercase
                    }, a)), i)
                }, t
            }(je.Component)),
            mr = (n(981), function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        filter: "",
                        inputValue: "",
                        filteredViewers: {},
                        viewersPage: 0,
                        renderedViewers: [],
                        isLoading: !1
                    }, t.filterTimeout = 0, t.saveScrollRef = function(e) {
                        return t.scroll = e
                    }, t.loadMore = function() {
                        return Ee.__awaiter(t, void 0, void 0, function() {
                            var e = this;
                            return Ee.__generator(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, new Promise(function(t) {
                                            e.setState(function(t) {
                                                return {
                                                    renderedViewers: e.getRenderedViewers(t.filteredViewers.viewers, t.viewersPage + 1),
                                                    viewersPage: t.viewersPage + 1
                                                }
                                            }, function() {
                                                t()
                                            })
                                        })];
                                    case 1:
                                        return t.sent(), [2]
                                }
                            })
                        })
                    }, t.getRenderedViewers = function(e, t) {
                        return e ? e.slice(0, 100 * (t || 1)) : []
                    }, t.handleFilter = function(e, n) {
                        var a = ve(n, e),
                            i = t.getRenderedViewers(a.viewers, 1);
                        t.scroll && t.scroll.scrollToTop(), t.setState({
                            filteredViewers: a,
                            isLoading: !1,
                            renderedViewers: i,
                            viewersPage: 1
                        })
                    }, t.handleFilterChange = function(e) {
                        var n = e.target.value,
                            a = n.toLowerCase().trim();
                        t.setState({
                            filter: a,
                            inputValue: n,
                            isLoading: !0
                        }), clearTimeout(t.filterTimeout), t.filterTimeout = setTimeout(function() {
                            t.handleFilter(a, t.props.viewers)
                        }, 350)
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    this.handleFilter(this.state.filter, e.viewers)
                }, t.prototype.render = function() {
                    var e = this.props.onShowViewerCard,
                        t = [],
                        n = this.state.filteredViewers;
                    n.staff && n.staff.length > 0 && t.push(je.createElement(pr, {
                        key: "chat-viewers-list-staff",
                        header: Object(Ne.d)("Staff", "ChatViewers"),
                        viewers: n.staff,
                        onUsernameClick: e
                    })), n.admins && n.admins.length > 0 && t.push(je.createElement(pr, {
                        key: "chat-viewers-list-admins",
                        header: Object(Ne.d)("Admins", "ChatViewers"),
                        viewers: n.admins,
                        onUsernameClick: e
                    })), n.global_mods && n.global_mods.length > 0 && t.push(je.createElement(pr, {
                        key: "chat-viewers-list-global-mods",
                        header: Object(Ne.d)("Global Moderators", "ChatViewers"),
                        viewers: n.global_mods,
                        onUsernameClick: e
                    })), n.moderators && n.moderators.length > 0 && t.push(je.createElement(pr, {
                        key: "chat-viewers-list-moderators",
                        header: Object(Ne.d)("Moderators", "ChatViewers"),
                        viewers: n.moderators,
                        onUsernameClick: e
                    })), n.viewers && n.viewers.length > 0 && t.push(je.createElement(pr, {
                        key: "chat-viewers-list-viewers",
                        "data-test-selector": "chat-viewers-list-viewers",
                        header: Object(Ne.d)("Viewers", "ChatViewers"),
                        viewers: this.state.renderedViewers,
                        onUsernameClick: e
                    }));
                    var a = this.props.isLoading || this.state.isLoading,
                        i = a && je.createElement(Qe.U, {
                            className: "chat-viewers__loading",
                            display: Qe.H.Flex,
                            alignItems: Qe.c.Center,
                            justifyContent: Qe.T.Center,
                            zIndex: Qe._38.Above,
                            position: Qe._2.Absolute,
                            attachTop: !0,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0
                        }, je.createElement(Qe.X, null));
                    return je.createElement(Qe.U, {
                        className: "chat-viewers__container",
                        fullWidth: !0,
                        fullHeight: !0,
                        flexShrink: 0,
                        zIndex: Qe._38.Default
                    }, je.createElement(Qe.U, {
                        className: "chat-viewers__pane",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        flexWrap: Qe.K.NoWrap,
                        position: Qe._2.Absolute,
                        attachBottom: !0,
                        attachLeft: !0,
                        attachRight: !0
                    }, je.createElement(Qe.U, {
                        className: "chat-viewers__header",
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center,
                        alignItems: Qe.c.Center,
                        padding: {
                            y: 1
                        },
                        flexShrink: 0
                    }, je.createElement(Qe.U, {
                        position: Qe._2.Absolute,
                        attachLeft: !0,
                        margin: {
                            left: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.Close,
                        ariaLabel: Object(Ne.d)("Close", "ChatViewers"),
                        "data-a-target": "chat-viewer-list",
                        onClick: this.props.closeViewersList
                    })), je.createElement("p", {
                        "data-a-target": "chat-viewers_header-channel-name"
                    }, Object(Ne.d)("Viewer List", "ChatViewers"))), je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        flexWrap: Qe.K.NoWrap,
                        fullHeight: !0
                    }, je.createElement(Qe.U, {
                        className: "chat-viewers__filter",
                        margin: {
                            x: 2,
                            y: 1
                        }
                    }, je.createElement(Qe.Q, {
                        type: Qe.R.Search,
                        name: "viewers-filter",
                        placeholder: Object(Ne.d)("Filter Viewers", "ChatViewers"),
                        readOnly: this.props.isLoading,
                        onChange: this.handleFilterChange,
                        value: this.state.inputValue
                    })), je.createElement(ir.b, {
                        className: "chat-viewers__list",
                        scrollRef: this.saveScrollRef,
                        suppressScrollX: !0,
                        scrollContentClassName: "chat-viewers__scroll-container"
                    }, je.createElement(Qe.U, {
                        padding: {
                            x: 2
                        }
                    }, t, je.createElement(ir.a, {
                        key: this.state.filter,
                        enabled: !a,
                        loadMore: this.loadMore
                    })))), i))
                }, t
            }(je.Component)),
            hr = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.state = {
                        viewers: {},
                        viewerCount: 0,
                        isLoading: !1
                    }, n.logger = Ne.i.withCategory("chat-viewers"), n
                }
                return Ee.__extends(t, e), t.prototype.componentWillReceiveProps = function(e) {
                    this.props.channelLogin !== e.channelLogin && this.updateViewers(e.channelLogin)
                }, t.prototype.componentDidMount = function() {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        return Ee.__generator(this, function(e) {
                            return this.updateViewers(this.props.channelLogin), [2]
                        })
                    })
                }, t.prototype.render = function() {
                    return je.createElement(mr, {
                        channelLogin: this.props.channelLogin,
                        closeViewersList: this.props.closeViewersList,
                        viewers: this.state.viewers,
                        viewerCount: this.state.viewerCount,
                        isLoading: this.state.isLoading,
                        onShowViewerCard: this.props.onShowViewerCard
                    })
                }, t.prototype.updateViewers = function(e) {
                    return Ee.__awaiter(this, void 0, void 0, function() {
                        var t, n, a;
                        return Ee.__generator(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return this.setState({
                                        isLoading: !0
                                    }), [4, ge(e)];
                                case 1:
                                    return t = i.sent(), n = t ? t.chatters : {}, a = t ? t.chatter_count : 0, Ne.i.debug("Updated viewers list with " + a + " viewers"), this.setState({
                                        viewers: n,
                                        viewerCount: a,
                                        isLoading: !1
                                    }), [2]
                            }
                        })
                    })
                }, t
            }(je.Component),
            fr = Object(Le.a)(null, be)(hr),
            gr = n(379),
            vr = n(445),
            br = n(446),
            kr = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        isIgnored: !1
                    }, t.ignoreUser = function() {
                        t.props.sendMessageToTMI(Object(Yt.h)(t.props.targetLogin)), t.setState({
                            isIgnored: !0
                        })
                    }, t.unignoreUser = function() {
                        t.props.sendMessageToTMI(Object(Yt.j)(t.props.targetLogin)), t.setState({
                            isIgnored: !1
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return this.state.isIgnored ? je.createElement(Qe.v, {
                        icon: Qe._9.Ignore,
                        ariaLabel: Object(Ne.d)("Unblock {displayName}", {
                            displayName: this.props.targetDisplayName
                        }, "ViewerCardIgnoreAction"),
                        onClick: this.unignoreUser,
                        overlay: !0
                    }) : je.createElement(Qe.v, {
                        icon: Qe._9.Ignore,
                        ariaLabel: Object(Ne.d)("Block {displayName}", {
                            displayName: this.props.targetDisplayName
                        }, "ViewerCardIgnoreAction"),
                        onClick: this.ignoreUser,
                        overlay: !0
                    })
                }, t = Ee.__decorate([Object(yt.c)("ViewerCardIgnoreAction")], t)
            }(je.Component),
            yr = kr,
            _r = n(982),
            Cr = n(983),
            Sr = n(984),
            Er = "10 minutes",
            wr = function(e, t, n) {
                var a = e.readQuery({
                    query: Sr,
                    variables: {
                        targetUserID: n.userID,
                        channelID: n.channelID
                    }
                });
                t && t.data && (a.chatRoomBanStatus = {
                    isPermanent: !0,
                    __typename: "ChatRoomBanStatus"
                }), e.writeQuery({
                    query: Sr,
                    variables: {
                        targetUserID: n.userID,
                        channelID: n.channelID
                    },
                    data: a
                })
            },
            Nr = function(e, t) {
                var n = e.readQuery({
                        query: Sr,
                        variables: {
                            targetUserID: t.userID,
                            channelID: t.channelID
                        }
                    }),
                    a = Ee.__assign({}, n, {
                        chatRoomBanStatus: null
                    });
                e.writeQuery({
                    query: Sr,
                    variables: {
                        targetUserID: t.userID,
                        channelID: t.channelID
                    },
                    data: a
                })
            },
            Dr = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.onBanClick = function() {
                        var e = t.props,
                            n = e.banUser,
                            a = e.channelID,
                            i = e.userLogin;
                        n(Object($e.a)({
                            channelID: a,
                            bannedUserLogin: i
                        }))
                    }, t.onTimeoutClick = function() {
                        var e = t.props,
                            n = e.banUser,
                            a = e.channelID,
                            i = e.userLogin;
                        n(Object($e.a)({
                            channelID: a,
                            bannedUserLogin: i,
                            expiresIn: Er
                        }))
                    }, t.onUnbanClick = function() {
                        var e = t.props,
                            n = e.unbanUser,
                            a = e.channelID,
                            i = e.userLogin;
                        n(Object($e.a)({
                            channelID: a,
                            bannedUserLogin: i
                        }))
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return je.createElement(Qe.U, {
                        display: Qe.H.InlineFlex
                    }, this.getContent())
                }, t.prototype.getContent = function() {
                    return this.props.data.loading || this.props.data.error ? [this.renderBanAction(!0), this.renderTimeoutAction(!0)] : this.props.data.chatRoomBanStatus ? this.props.data.chatRoomBanStatus.isPermanent ? [this.renderUnbanAction(), this.renderTimeoutAction(!0)] : [this.renderBanAction(), this.renderUntimeoutAction()] : [this.renderBanAction(), this.renderTimeoutAction()]
                }, t.prototype.renderTimeoutAction = function(e) {
                    void 0 === e && (e = !1);
                    var t = Object(Ne.d)("Timeout User", "ViewerCardModActions");
                    return je.createElement(Qe._30, {
                        key: "Timeout",
                        label: t,
                        direction: Qe._32.Top,
                        align: Qe._31.Center
                    }, je.createElement(Qe.U, {
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.Timeout,
                        disabled: e,
                        ariaLabel: t,
                        onClick: this.onTimeoutClick
                    })))
                }, t.prototype.renderUntimeoutAction = function() {
                    var e = Object(Ne.d)("Untimeout User", "ViewerCardModActions");
                    return je.createElement(Qe._30, {
                        key: "Untimeout",
                        label: e,
                        direction: Qe._32.Top,
                        align: Qe._31.Center
                    }, je.createElement(Qe.U, {
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.FollowCheck,
                        ariaLabel: e,
                        onClick: this.onUnbanClick
                    })))
                }, t.prototype.renderBanAction = function(e) {
                    void 0 === e && (e = !1);
                    var t = Object(Ne.d)("Ban User", "ViewerCardModActions");
                    return je.createElement(Qe._30, {
                        key: "Ban",
                        label: t,
                        direction: Qe._32.Top,
                        align: Qe._31.Center
                    }, je.createElement(Qe.U, {
                        padding: {
                            right: 1,
                            left: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.Ban,
                        disabled: e,
                        ariaLabel: t,
                        onClick: this.onBanClick
                    })))
                }, t.prototype.renderUnbanAction = function() {
                    var e = Object(Ne.d)("Unban User", "ViewerCardModActions");
                    return je.createElement(Qe._30, {
                        key: "Unban",
                        label: e,
                        direction: Qe._32.Top,
                        align: Qe._31.Center
                    }, je.createElement(Qe.U, {
                        padding: {
                            right: 1,
                            left: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.FollowCheck,
                        ariaLabel: e,
                        onClick: this.onUnbanClick
                    })))
                }, t = Ee.__decorate([Object(yt.c)("ViewerCardModActions"), Object(Be.a)(Sr, {
                    options: function(e) {
                        return {
                            variables: {
                                targetUserID: e.userID,
                                channelID: e.channelID
                            },
                            fetchPolicy: "cache-and-network"
                        }
                    }
                }), Object(Be.a)(_r, {
                    name: "banUser",
                    options: function(e) {
                        return {
                            update: function(t, n) {
                                wr(t, n, e)
                            }
                        }
                    }
                }), Object(Be.a)(Cr, {
                    name: "unbanUser",
                    options: function(e) {
                        return {
                            update: function(t) {
                                Nr(t, e)
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Ir = Dr,
            Or = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.modUser = function() {
                        n.props.sendMessageToTMI(Object(Yt.i)(n.props.targetLogin)), n.setState({
                            isModerator: !0
                        })
                    }, n.unmodUser = function() {
                        n.props.sendMessageToTMI(Object(Yt.k)(n.props.targetLogin)), n.setState({
                            isModerator: !1
                        })
                    }, n.state = {
                        isModerator: !1
                    }, n
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.state.isModerator) {
                        var e = Object(Ne.d)("Unmod User", "ViewerCardOwnerActions");
                        return je.createElement(Qe._30, {
                            label: e,
                            direction: Qe._32.Top,
                            align: Qe._31.Center
                        }, je.createElement(Qe.U, {
                            key: "OP",
                            padding: {
                                right: 1
                            }
                        }, je.createElement(Qe.v, {
                            icon: Qe._9.FollowCheck,
                            ariaLabel: e,
                            onClick: this.unmodUser
                        })))
                    }
                    var e = Object(Ne.d)("Mod User", "ViewerCardOwnerActions");
                    return je.createElement(Qe._30, {
                        label: e,
                        direction: Qe._32.Top,
                        align: Qe._31.Center
                    }, je.createElement(Qe.U, {
                        key: "OP",
                        padding: {
                            right: 1
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.OP,
                        ariaLabel: e,
                        onClick: this.modUser
                    })))
                }, t = Ee.__decorate([Object(yt.c)("ViewerCardOwnerActions")], t)
            }(je.Component),
            Ur = Or,
            xr = n(447),
            Tr = n(262),
            Lr = n(443),
            Fr = n(270),
            jr = n(135),
            Br = n(49),
            Mr = (n(985), n(986));
        ! function(e) {
            e[e.ActionsPage = 0] = "ActionsPage", e[e.SubGiftSelectPage = 1] = "SubGiftSelectPage"
        }(Zi || (Zi = {}));
        var Ar = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        currentPage: Zi.ActionsPage
                    }, t.getContent = function() {
                        if (t.props.data.loading || t.props.data.error) return t.renderHideButton();
                        var e = {
                                backgroundImage: "url(" + (t.props.data.targetUser.bannerImageURL || vr) + ")"
                            },
                            n = t.state.currentPage === Zi.ActionsPage ? t.renderActions() : t.renderSubGiftSelect();
                        return je.createElement(Qe.U, null, je.createElement(Qe._17, {
                            elevation: 1,
                            border: !0
                        }, je.createElement("div", {
                            className: "viewer-card",
                            style: e
                        }, je.createElement(Qe.U, {
                            display: Qe.H.Flex,
                            flexDirection: Qe.J.Column,
                            fullHeight: !0,
                            fullWidth: !0,
                            className: "viewer-card__overlay"
                        }, je.createElement(Qe.U, {
                            padding: 1,
                            alignItems: Qe.c.Start,
                            justifyContent: Qe.T.Start,
                            display: Qe.H.Flex,
                            flexDirection: Qe.J.Row,
                            textAlign: Qe._22.Center,
                            fullWidth: !0,
                            flexGrow: 1
                        }, je.createElement(Qe.l, {
                            imageSrc: t.props.data.targetUser.profileImageURL,
                            size: 50,
                            imageAlt: t.props.data.targetUser.displayName
                        }), je.createElement(Qe.U, {
                            alignItems: Qe.c.Center,
                            margin: 1,
                            className: "viewer-card__display-name",
                            ellipsis: !0
                        }, je.createElement(Qe._21, {
                            type: Qe._26.H4
                        }, je.createElement("a", {
                            className: "viewer-card__display-name__link color-text-pill",
                            href: "/" + t.props.targetLogin,
                            target: "_blank"
                        }, t.props.data.targetUser.displayName))), t.renderHideButton(), t.renderIgnoreButton()))), n))
                    }, t.toggleGiftPage = function() {
                        var e = t.state.currentPage === Zi.ActionsPage ? Zi.SubGiftSelectPage : Zi.ActionsPage;
                        e === Zi.SubGiftSelectPage && t.trackGiftEvent(), t.setState({
                            currentPage: e
                        })
                    }, t.onWhisperButtonClick = function() {
                        t.props.hideViewerCard()
                    }, t.handleReportUserClick = function() {
                        t.props.showReportUserModal({
                            reportContext: {
                                contentType: t.reportContentTypeFromSourceType(t.props.sourceType),
                                targetUserID: t.props.data.targetUser.id,
                                contentID: t.props.sourceID,
                                extra: JSON.stringify({
                                    channel_id: t.props.channelID.toString()
                                })
                            },
                            title: Object(Ne.d)("Report {channelDisplayName}", {
                                channelDisplayName: t.props.data.targetUser.displayName
                            }, "ReportUserModalTitle")
                        })
                    }, t.trackBuyGiftSubEvent = function(e) {
                        Object(Br.b)(Ee.__assign({}, e, {
                            action: Br.a.BuyGiftSub,
                            channelID: t.props.channelID || "",
                            channelLogin: t.props.data.channelUser.login || "",
                            isMenuOpen: null,
                            hasSubCredit: null,
                            sub_location: "viewer_card",
                            modal: !1,
                            showPrimeContent: !0,
                            giftRecipient: t.props.data.targetUser.login
                        }))
                    }, t.trackGiftEvent = function() {
                        Object(Br.b)({
                            action: Br.a.GiftASub,
                            channelID: t.props.channelID || "",
                            channelLogin: t.props.data.channelUser.login || "",
                            isMenuOpen: null,
                            hasSubCredit: null,
                            sub_location: "viewer_card",
                            modal: !1,
                            showPrimeContent: !0,
                            giftRecipient: t.props.data.targetUser.login
                        })
                    }, t
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    return this.props.data.error ? null : this.getContent()
                }, t.prototype.renderIgnoreButton = function() {
                    var e = this.props.data.currentUser;
                    return this.props.isEmbedded || e && e.login === this.props.targetLogin ? null : je.createElement(Qe.U, {
                        key: "Ignore",
                        position: Qe._2.Absolute,
                        attachRight: !0,
                        margin: {
                            top: 3,
                            right: .5
                        }
                    }, je.createElement(yr, {
                        targetDisplayName: this.props.data.targetUser.displayName,
                        targetLogin: this.props.targetLogin,
                        sendMessageToTMI: this.props.sendMessageToTMI
                    }))
                }, t.prototype.renderHideButton = function() {
                    return je.createElement(Qe.U, {
                        className: "viewer-card__hide",
                        position: Qe._2.Absolute,
                        attachRight: !0,
                        attachTop: !0,
                        margin: {
                            top: .5,
                            right: .5
                        }
                    }, je.createElement(Qe.v, {
                        icon: Qe._9.Close,
                        onClick: this.props.hideViewerCard,
                        ariaLabel: Object(Ne.d)("Hide", "ViewerCard"),
                        overlay: !0
                    }))
                }, t.prototype.renderActions = function() {
                    var e = this.props.data.currentUser;
                    return this.props.isEmbedded || e && e.login === this.props.targetLogin ? null : je.createElement(Qe._17, {
                        className: "viewer-card__actions",
                        "data-test-selector": "viewer-card-actions",
                        background: Qe.m.Base,
                        attachBottom: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        justifyContent: Qe.T.Between,
                        fullWidth: !0,
                        flexGrow: 0
                    }, je.createElement(Qe.U, {
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        fullWidth: !0,
                        margin: {
                            left: .5,
                            right: 1,
                            bottom: 1,
                            top: .5
                        }
                    }, this.renderSocialActions()), je.createElement(Qe._17, {
                        display: Qe.H.Flex,
                        background: Qe.m.Alt2,
                        fullWidth: !0
                    }, je.createElement(Qe.U, {
                        display: Qe.H.InlineFlex,
                        flexDirection: Qe.J.Row
                    }, this.renderChatActions())))
                }, t.prototype.renderSocialActions = function() {
                    var e = null;
                    return this.isModeratorOrHigher && (e = je.createElement(jt.a, {
                        key: "MoreOptionsButton"
                    }, je.createElement(Qe.v, {
                        type: Qe.w.Hollow,
                        ariaLabel: Object(Ne.d)("More options", "ViewerCard"),
                        icon: Qe._9.More,
                        "data-a-target": "viewer-card-more-button"
                    }), je.createElement(Qe.p, {
                        direction: Qe.q.BottomRight,
                        "data-a-target": "viewer-card-more-balloon"
                    }, je.createElement(Qe.U, {
                        padding: {
                            y: 1
                        }
                    }, je.createElement(Qe.S, {
                        onClick: this.handleReportUserClick,
                        "data-a-target": "viewer-card-report-button"
                    }, je.createElement(Qe.U, {
                        padding: {
                            x: 1
                        }
                    }, Object(Ne.d)("Report {user}", {
                        user: this.props.targetLogin
                    }, "ViewerCard"))))))), [je.createElement(Qe.U, {
                        key: "FriendButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(xr.a, {
                        channelID: this.props.data.targetUser.id
                    })), this.renderWhisperButton(), this.renderGiftSubscriptionButton(), je.createElement(Qe.U, {
                        key: "ReportButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, e)]
                }, t.prototype.renderWhisperButton = function() {
                    if (!this.props.data.currentUser || !this.props.data.targetUser) return null;
                    var e = Object(En.a)(this.props.data.currentUser.id, this.props.data.targetUser.id);
                    return je.createElement(Qe.U, {
                        key: "WhisperButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(br.a, {
                        onClick: this.onWhisperButtonClick,
                        threadID: e
                    }))
                }, t.prototype.renderGiftSubscriptionButton = function() {
                    return !this.props.data.channelUser || !this.props.data.channelUser.subscriptionProducts || this.props.data.channelUser.subscriptionProducts.length < 1 ? null : je.createElement(Qe.U, {
                        key: "GiftButton",
                        padding: {
                            top: .5,
                            left: .5
                        }
                    }, je.createElement(Lr.a, {
                        onClick: this.toggleGiftPage,
                        subProductId: this.props.data.channelUser.subscriptionProducts[0].id,
                        giftRecipient: this.props.targetLogin
                    }))
                }, t.prototype.renderSubGiftSelect = function() {
                    return je.createElement(Qe.U, null, je.createElement(jr.a, {
                        subscriptionProducts: this.props.data.channelUser.subscriptionProducts,
                        isGift: !0
                    }), je.createElement(Qe._17, {
                        background: Qe.m.Base,
                        attachBottom: !0,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Row,
                        justifyContent: Qe.T.Between,
                        fullWidth: !0,
                        flexGrow: 0,
                        padding: 2
                    }, je.createElement(Fr.a, {
                        onBack: this.toggleGiftPage,
                        channelDisplayName: this.props.data.channelUser.displayName,
                        subscriptionProducts: this.props.data.channelUser.subscriptionProducts,
                        giftRecipient: this.props.data.targetUser.login,
                        reportSubMenuAction: this.trackBuyGiftSubEvent
                    })))
                }, t.prototype.renderChatActions = function() {
                    var e = [];
                    return this.isModeratorOrHigher() && e.push(je.createElement(Ir, {
                        key: "ModActions",
                        channelID: this.props.data.channelUser.id,
                        userID: this.props.data.targetUser.id,
                        userLogin: this.props.targetLogin
                    })), this.isOwnerOrHigher() && e.push(je.createElement(Ur, {
                        key: "OwnerActions",
                        sendMessageToTMI: this.props.sendMessageToTMI,
                        targetLogin: this.props.targetLogin
                    })), e
                }, t.prototype.isOwnerOrHigher = function() {
                    var e = this.props.data;
                    return !(e.loading || e.error || !e.currentUser) && (e.currentUser.roles.isGlobalMod || e.currentUser.roles.isSiteAdmin || e.currentUser.roles.isStaff || this.isOwner())
                }, t.prototype.isModeratorOrHigher = function() {
                    return this.isOwnerOrHigher() || this.props.data.channelUser.self && this.props.data.channelUser.self.isModerator
                }, t.prototype.isOwner = function() {
                    var e = this.props.data;
                    return !(e.loading || e.error || !e.currentUser) && e.currentUser.id === e.channelUser.id
                }, t.prototype.reportContentTypeFromSourceType = function(e) {
                    switch (e) {
                        case aa.a.chat_message:
                            return Tr.a.Chat;
                        case aa.a.recent_raids:
                            return Tr.a.Raid;
                        case aa.a.viewer_list:
                        default:
                            return Tr.a.User
                    }
                }, t = Ee.__decorate([Object(yt.c)("ViewerCard"), Object(Be.a)(Mr, {
                    options: function(e) {
                        return {
                            variables: {
                                targetLogin: e.targetLogin,
                                channelID: e.channelID
                            }
                        }
                    }
                })], t)
            }(je.Component),
            Rr = Ar,
            Pr = (n(987), function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentWillUnmount = function() {
                    this.props.hideViewerCard()
                }, t.prototype.render = function() {
                    var e = null;
                    return this.props.viewerCardOptions && (e = je.createElement(Qe.U, {
                        className: "viewer-card-layer",
                        position: Qe._2.Relative
                    }, je.createElement(Rr, {
                        isEmbedded: this.props.isEmbedded,
                        targetLogin: this.props.viewerCardOptions.targetLogin,
                        hideViewerCard: this.props.hideViewerCard,
                        sendMessageToTMI: this.props.onSendMessage,
                        channelID: this.props.channelID,
                        showReportUserModal: this.props.showReportUserModal,
                        sourceType: this.props.viewerCardOptions.sourceType,
                        sourceID: this.props.viewerCardOptions.sourceID
                    }))), e
                }, t
            }(je.Component)),
            Hr = Object(Le.a)(ke, ye)(Pr),
            Vr = n(988),
            Wr = (n(989), function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.closeViewersList = function() {
                        n.setState({
                            showViewersList: !1
                        })
                    }, n.showViewersList = function() {
                        n.setState({
                            showViewersList: !0
                        })
                    }, n.onChatInputFocus = function() {
                        n.props.authToken && !n.state.showChatRules && n.setState({
                            showChatRules: !0
                        })
                    }, n.setChatListElement = function(e) {
                        n.setState({
                            chatListElement: e
                        })
                    }, n.state = {
                        showChatRules: !1,
                        showViewersList: !1
                    }, n
                }
                return Ee.__extends(t, e), t.prototype.render = function() {
                    var e = fn.parse(this.props.location.search),
                        t = void 0 !== e.darkpopout,
                        n = (o = {}, o[Object($n.c)(Re.a.Dark)] = t, o);
                    if (this.props.isHidden) return je.createElement(Qe._17, {
                        alignItems: Qe.c.Center,
                        background: Qe.m.Alt,
                        className: qe("chat-room__pane", n),
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        fullHeight: !0,
                        fullWidth: !0,
                        justifyContent: Qe.T.Center,
                        color: Qe.F.Base,
                        position: Qe._2.Relative
                    }, je.createElement(Qe.U, {
                        margin: {
                            bottom: 1
                        }
                    }, je.createElement(Qe._21, {
                        fontSize: Qe.L.Size5
                    }, Object(Ne.d)("Chat is hidden.", "ChatRoom"))), je.createElement(Qe.u, {
                        onClick: this.props.onChatUnhide,
                        "data-a-target": "show-chat-button"
                    }, Object(Ne.d)("Show Chat", "ChatRoom")));
                    var a = this.props.bitsConfig && this.props.firstPageLoaded && je.createElement(Ba, {
                            badgeData: this.props.badgeSets,
                            bitsConfig: this.props.bitsConfig,
                            blockLinks: this.props.blockLinks,
                            channelID: this.props.channelID,
                            currentUserDisplayName: this.props.currentUserDisplayName,
                            currentUserLogin: this.props.currentUserLogin
                        }),
                        i = this.state.showViewersList && je.createElement(fr, {
                            channelLogin: this.props.channelLogin,
                            closeViewersList: this.closeViewersList
                        }),
                        r = !!this.props.authToken && !this.props.isEmbedded,
                        s = null;
                    return this.state.showChatRules && (s = je.createElement(Qe.U, {
                        padding: {
                            x: 2
                        }
                    }, je.createElement(ur, {
                        chatRules: this.props.chatRules,
                        channelLogin: this.props.channelLogin
                    }))), je.createElement(Qe.U, {
                        className: qe("chat-room__container", n),
                        "data-a-target": this.props.theme === Re.a.Dark ? "chat-theme-dark" : "chat-theme-light",
                        flexShrink: 1,
                        flexGrow: 1,
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        overflow: Qe.Y.Hidden,
                        fullWidth: !0,
                        fullHeight: !0
                    }, je.createElement(Qe._17, {
                        className: "chat-room__pane",
                        display: Qe.H.Flex,
                        flexDirection: Qe.J.Column,
                        flexWrap: Qe.K.NoWrap,
                        position: Qe._2.Relative,
                        flexGrow: 1,
                        fullHeight: !0,
                        overflow: Qe.Y.Hidden,
                        color: Qe.F.Base
                    }, je.createElement(Qe.U, {
                        className: "chat-room__header",
                        display: Qe.H.Flex,
                        justifyContent: Qe.T.Center,
                        alignItems: Qe.c.Center,
                        padding: {
                            y: 1
                        },
                        flexShrink: 0
                    }, je.createElement("p", {
                        "data-a-target": "chat-room__header-channel-name"
                    }, this.props.channelLogin)), this.props.chatRoomHeader, a, je.createElement(cr, {
                        badgeSets: this.props.badgeSets,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        currentUserDisplayName: this.props.currentUserDisplayName,
                        currentUserLogin: this.props.currentUserLogin,
                        isEmbedded: this.props.isEmbedded,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        onPushMessage: this.props.onPushMessage,
                        containerRef: this.setChatListElement
                    }), je.createElement(Qe.U, {
                        className: "chat-room__viewer-card",
                        position: Qe._2.Absolute
                    }, je.createElement(Hr, {
                        isEmbedded: this.props.isEmbedded,
                        onSendMessage: this.props.onSendMessage,
                        channelID: this.props.channelID
                    })), je.createElement(Qe.U, {
                        className: "chat-room__notifications",
                        position: Qe._2.Absolute,
                        zIndex: Qe._38.Default,
                        fullWidth: !0
                    }, this.props.children), s, this.props.isOwnChannel && !this.props.isEmbedded && je.createElement(Yn, {
                        hostedChannelLogin: this.props.hostedChannelLogin
                    }), i, je.createElement(tr, {
                        authToken: this.props.authToken,
                        bitsConfig: r ? this.props.bitsConfig : void 0,
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.props.chatMembers,
                        emotes: this.props.emotes,
                        firstPageLoaded: this.props.firstPageLoaded,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        isHostMode: this.props.isHostMode,
                        isPopout: this.props.isPopout,
                        isStaff: this.props.isStaff,
                        onChatCommand: this.props.onSendMessage,
                        badgeSets: this.props.badgeSets,
                        userBadges: this.props.userBadges,
                        showViewersList: this.showViewersList,
                        raidReceived: this.props.raidReceived,
                        onSendMessage: this.props.onSendMessage,
                        onInputFocus: this.onChatInputFocus,
                        containerElement: this.state.chatListElement
                    })));
                    var o
                }, t = Ee.__decorate([Object(Be.a)(Vr, {
                    props: function(e) {
                        var t = new Xn.c([], [], e.ownProps.channelLogin);
                        return e.data && e.data.badges && e.data.user && e.data.user.broadcastBadges && (t = new Xn.c(e.data.badges, e.data.user.broadcastBadges, e.ownProps.channelLogin)), {
                            badgeSets: t
                        }
                    },
                    options: function(e) {
                        return {
                            name: "data",
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                })], t)
            }(je.Component)),
            qr = Object(Pt.e)(Wr),
            zr = "(?:\\W|^)",
            Gr = "(?:$|\\W)",
            $r = 150,
            Jr = "PowerUpL DarkMode PowerUpR",
            Kr = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.state = {
                        activeChatters: [],
                        hasEnteredChatRoom: !1,
                        hostedChannelLogin: null,
                        raidReceived: !1,
                        userBadges: null
                    }, n.sendMessage = function(e) {
                        if (!e || 0 === e.length || !n.props.authToken) return !1;
                        var t = n.chatService.sendMessage(e);
                        return (!t || !t.preserveInput) && (n.parseOutgoingMessage(e), !0)
                    }, n.pushMessage = function(e) {
                        n.chatBuffer.consumeChatEvent(e), n.activeChatters.consumeChatEvent(e)
                    }, n.onChatMessage = function(e) {
                        n.chatBuffer.consumeChatEvent(e), n.activeChatters.consumeChatEvent(e), n.onChatEvent(e)
                    }, n.connect = function(e) {
                        n.setState({
                            hasEnteredChatRoom: !1
                        }), e.userID && e.channelID && (n.moderationActionService = new qn(e.channelID, e.userID, n.chatBuffer.consumeChatEvent)), n.syncBufferHandle = requestAnimationFrame(n.syncBufferedMessages), n.chatService.join()
                    }, n.disconnect = function() {
                        n.syncBufferHandle && cancelAnimationFrame(n.syncBufferHandle), n.moderationActionService && n.moderationActionService.unsubscribe(), n.chatService.part()
                    }, n.updateEmoteSets = function(e) {
                        n.chatService.updateEmotes(e), n.userEmotes && (n.userEmotes = Object(Vn.a)(e))
                    }, n.getCurrentEmotes = function() {
                        return n.userEmotes || (n.userEmotes = Object(Vn.a)(n.props.emoteSets)), n.userEmotes
                    }, n.updateBitsConfig = function(e) {
                        void 0 === e && (e = Ve.a), n.chatService.updateBitsConfig(e)
                    }, n.updateBlockLinks = function(e) {
                        n.chatService.updateBlockLinks(e)
                    }, n.syncBufferedMessages = function() {
                        n.chatBuffer && n.chatBuffer.isDirty && n.props.onChatMessagesUpdate(n.chatBuffer.toArray()), n.activeChatters.isDirty && n.setState({
                            activeChatters: n.activeChatters.getActiveChatters()
                        }), n.syncBufferHandle = requestAnimationFrame(n.syncBufferedMessages)
                    }, n.onChatEvent = function(e) {
                        switch (e.type) {
                            case Dn.a.Hosting:
                                n.hostingHandler(e.hostedChannel);
                                break;
                            case Dn.a.Unhost:
                                n.hostingHandler(null);
                                break;
                            case Dn.a.Connected:
                                n.onConnected();
                                break;
                            case Dn.a.RoomState:
                                n.roomStateHandler(e.state);
                                break;
                            case Dn.a.BadgesUpdated:
                                n.onBadgesUpdated(e);
                                break;
                            case Dn.a.Raid:
                                n.setState({
                                    raidReceived: !0
                                })
                        }
                    }, n.hostingHandler = function(e) {
                        n.setState({
                            hostedChannelLogin: e
                        }), n.props.onHostingChange && n.props.onHostingChange(e)
                    }, n.roomStateHandler = function(e) {
                        e.slowMode ? n.props.onSlowModeEnable() : n.props.onSlowModeDisable(), void 0 !== e.followersOnly && (e.followersOnly ? (n.props.onFollowerModeDurationChange(e.followersOnlyRequirement), n.props.onFollowerModeEnable()) : n.props.onFollowerModeDisable()), void 0 !== e.subsOnly && (e.subsOnly ? n.props.onSubsOnlyModeEnable() : n.props.onSubsOnlyModeDisable())
                    }, n.onConnected = function() {
                        Ne.i.debug("Connected"), n.props.latencyTracking.reportCustomEvent(n.chatConnected), n.state.hasEnteredChatRoom || Object(zn.b)({
                            channelLogin: n.props.channelLogin,
                            isHostMode: !!n.state.hostedChannelLogin
                        }), n.setState({
                            hasEnteredChatRoom: !0
                        }), n.props.latencyTracking.reportInteractive()
                    }, n.createOutgoingTokenMatchers = function(e) {
                        n.outgoingTokenMatchers = e.map(function(e) {
                            return {
                                token: e,
                                regex: new RegExp("" + zr + e + Gr)
                            }
                        })
                    }, n.parseOutgoingMessage = function(e) {
                        n.outgoingTokenMatchers.forEach(function(t) {
                            t.regex.test(e) && n.onOutgoingTokenMatch(t.token, e)
                        })
                    }, n.onOutgoingTokenMatch = function(e, t) {
                        switch (e) {
                            case Jr:
                                var a = n.props.theme === Re.a.Light ? Re.a.Dark : Re.a.Light;
                                n.props.onThemeChange(a);
                                break;
                            default:
                                return
                        }
                    }, n.onBadgesUpdated = function(e) {
                        n.setState({
                            userBadges: e.badges
                        })
                    }, n.chatService = new Wn(t.userLogin, t.channelLogin, n.onChatMessage), n.logger = Ne.i.withCategory("chat-room"), n.registerCustomLatencyEvents(), n.createOutgoingTokenMatchers([Jr]), n.userEmotes = null, n.activeChatters = new Un(t.channelID), n.chatBuffer = new Bn($r), n.chatBuffer.setBlockedUsers(t.blockedUsers), t.userLogin && n.chatBuffer.setCurrentUserLogin(t.userLogin), t.userID && n.activeChatters.setCurrentUserID(t.userID), n
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.connect(this.props), this.props.emoteSets && this.updateEmoteSets(this.props.emoteSets), this.props.bitsConfig && this.updateBitsConfig(this.props.bitsConfig), this.updateBlockLinks(this.props.blockLinks), this.chatService.disabled && this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentWillUnmount = function() {
                    this.disconnect(), this.chatBuffer && this.chatBuffer.shutdown(), this.props.onChatMessagesReset()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    var t = this.props,
                        n = e.isHidden && !t.isHidden || !e.rightColumnExpanded && t.rightColumnExpanded,
                        a = !1;
                    n ? this.disconnect() : (a = e.channelLogin !== t.channelLogin || e.userLogin !== t.userLogin || e.authToken !== t.authToken || !e.isHidden && t.isHidden || e.rightColumnExpanded && !t.rightColumnExpanded) && (this.logger.debug("Reconnecting..."), this.registerCustomLatencyEvents(), this.connect(e), this.setState({
                        hostedChannelLogin: null
                    })), (e.emoteSets !== t.emoteSets || a) && (this.logger.debug("Updating emote sets", {
                        shouldReconnect: a,
                        prevSets: t.emoteSets.slice(0),
                        nextSet: e.emoteSets.slice(0)
                    }), this.updateEmoteSets(e.emoteSets)), (e.bitsConfig !== t.bitsConfig || a) && this.updateBitsConfig(e.bitsConfig), (e.blockLinks !== t.blockLinks || a) && this.updateBlockLinks(e.blockLinks);
                    var i = e.isCurrentUserModerator ? 0 : e.chatDelayMS;
                    this.chatBuffer.setDelay(i), e.userLogin && t.userLogin !== e.userLogin && this.chatBuffer.setCurrentUserLogin(e.userLogin), e.userID && t.userID !== e.userID && this.activeChatters.setCurrentUserID(e.userID), t.channelID !== e.channelID && (this.activeChatters = new Un(e.channelID), this.setState({
                        activeChatters: []
                    })), t.blockedUsers !== e.blockedUsers && this.chatBuffer.setBlockedUsers(e.blockedUsers), !this.moderationActionService && e.userID && e.channelID && (this.moderationActionService = new qn(e.channelID, e.userID, this.chatBuffer.consumeChatEvent))
                }, t.prototype.render = function() {
                    return je.createElement(qr, {
                        authToken: this.props.authToken,
                        bitsConfig: this.props.bitsConfig,
                        blockLinks: this.props.blockLinks,
                        channelDisplayName: this.props.channelDisplayName,
                        channelID: this.props.channelID,
                        channelLogin: this.props.channelLogin,
                        chatMembers: this.state.activeChatters,
                        chatRoomHeader: je.createElement(Rt, {
                            channelLogin: this.props.channelLogin,
                            sendMessage: this.sendMessage
                        }),
                        chatRules: this.props.chatRules,
                        currentUserDisplayName: this.props.userDisplayName,
                        currentUserLogin: this.props.userLogin,
                        emotes: this.props.emoteSets,
                        firstPageLoaded: this.props.firstPageLoaded,
                        hostedChannelLogin: this.state.hostedChannelLogin,
                        isCurrentUserModerator: this.props.isCurrentUserModerator,
                        isEmbedded: this.props.isEmbedded,
                        isHidden: this.props.isHidden,
                        isHostMode: !!this.state.hostedChannelLogin,
                        isOwnChannel: this.isOwnChannel,
                        isPopout: this.props.isPopout,
                        onChatUnhide: this.props.onChatUnhide,
                        onPushMessage: this.pushMessage,
                        onSendMessage: this.sendMessage,
                        raidReceived: this.state.raidReceived,
                        theme: this.props.theme,
                        isStaff: this.props.isStaff,
                        userBadges: this.state.userBadges,
                        userID: this.props.userID
                    }, this.props.firstPageLoaded && this.props.authToken && !this.props.isEmbedded && je.createElement(ht, {
                        authToken: this.props.authToken,
                        channelDisplayName: this.props.channelDisplayName,
                        channelLogin: this.props.channelLogin,
                        bitsConfig: this.props.bitsConfig
                    }), this.props.hostedChannelDisplayName && !this.props.isPopout && je.createElement(ft, {
                        hostedChannelDisplayName: this.props.hostedChannelDisplayName || "",
                        hostedChannelLogin: this.state.hostedChannelLogin || ""
                    }), this.props.firstPageLoaded && !this.props.isEmbedded && je.createElement(yn, {
                        channelID: this.props.channelID,
                        send: this.sendMessage
                    }), je.createElement(Nn, {
                        isEmbedded: this.props.isEmbedded,
                        isPopout: this.props.isPopout,
                        userLogin: this.props.userLogin,
                        userID: this.props.userID,
                        getCurrentEmotes: this.getCurrentEmotes
                    }), je.createElement(Ft, {
                        userLogin: this.props.userLogin
                    }))
                }, t.prototype.registerCustomLatencyEvents = function() {
                    this.logger.debug("Registering custom latency events"), this.props.latencyTracking.resetCustomEvents("Chat"), this.chatInitialized = this.registerInitEvent(), this.chatConnected = this.registerConnectedEvent(), this.props.latencyTracking.reportCustomEvent(this.chatInitialized)
                }, t.prototype.registerInitEvent = function() {
                    return this.props.latencyTracking.registerCustomEvent("Chat", "chat-init", "Init", 3e3)
                }, t.prototype.registerConnectedEvent = function() {
                    return this.props.latencyTracking.registerCustomEvent("Chat", "chat-connected", "Connected", 4e3)
                }, Object.defineProperty(t.prototype, "isOwnChannel", {
                    get: function() {
                        return this.props.userID === this.props.channelID
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(je.Component),
            Qr = Object(Me.compose)(Object(yt.c)("ChatRoom"), Object(Be.a)(Gn, {
                props: function(e) {
                    var t;
                    return e.data && e.data.user && e.data.user.cheer && (t = Object(We.a)(e.data.user.cheer.emotes)), {
                        bitsConfig: t
                    }
                },
                options: function(e) {
                    return {
                        name: "data",
                        variables: {
                            channelLogin: e.channelLogin
                        }
                    }
                }
            }), function() {
                return Object(Be.a)(In, {
                    props: function(e) {
                        return e.data && !e.data.loading && !e.data.error && e.data.currentUser && e.data.currentUser.blockedUsers ? {
                            blockedUsers: e.data.currentUser.blockedUsers.map(function(e) {
                                return e.id
                            })
                        } : {
                            blockedUsers: []
                        }
                    },
                    skip: function(e) {
                        return !e.authToken
                    }
                })
            }(), Object(Le.a)(Ce, _e))(Kr),
            Yr = n(990),
            Xr = n(991),
            Zr = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ee.__extends(t, e), t.prototype.componentDidMount = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentDidUpdate = function() {
                    this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    var e = this.props.channelData.channel,
                        t = this.props.userData && this.props.userData.user,
                        n = !1,
                        a = !1;
                    if (t && e && e.self) {
                        var i = t.login === e.login,
                            r = t.roles.isGlobalMod || t.roles.isSiteAdmin || t.roles.isStaff;
                        n = e.self.isModerator || r || i, a = t.roles.isStaff
                    }
                    var s = e && e.chatSettings && e.chatSettings.rules,
                        o = e && e.chatSettings && e.chatSettings.chatDelayMs,
                        l = !(!e || !e.chatSettings) && e.chatSettings.blockLinks;
                    return je.createElement(Qr, {
                        key: this.props.channelLogin,
                        authToken: this.props.user && this.props.user.authToken,
                        blockLinks: l,
                        channelDisplayName: e && e.displayName,
                        channelID: e && e.id,
                        channelLogin: this.props.channelLogin,
                        chatRules: s,
                        chatDelayMS: o,
                        clientID: this.props.clientID,
                        isCurrentUserModerator: n,
                        isEmbedded: !!this.props.isEmbedded,
                        isPopout: !!this.props.isPopout,
                        hostedChannelDisplayName: this.props.hostedChannelDisplayName,
                        onHostingChange: this.props.onHostingChange,
                        userDisplayName: this.props.user && this.props.user.displayName,
                        userID: this.props.user && this.props.user.id.toString(),
                        userLogin: this.props.user && this.props.user.login,
                        isStaff: a
                    })
                }, t = Ee.__decorate([Object(Be.a)(Yr, {
                    name: "channelData",
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.channelLogin
                            }
                        }
                    }
                }), Object(Be.a)(Xr, {
                    name: "userData",
                    skip: function(e) {
                        return !e.user
                    }
                }), Object(yt.c)("Chat")], t)
            }(je.Component),
            es = Zr,
            ts = Object(Le.a)(Se)(es);
        n.d(t, "a", function() {
            return ts
        })
    },
    930: function(e, t) {},
    931: function(e, t) {},
    932: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "DismissPurchaseToken"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DismissPurchaseTokenInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "dismissPurchaseToken"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "token"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 122
            }
        };
        n.loc.source = {
            body: "mutation DismissPurchaseToken($input:DismissPurchaseTokenInput!) {\n  dismissPurchaseToken(input:$input) {\n    token\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    933: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_SharePurchase_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isCommerceRevShareEnabled"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "purchaseTokens"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "title"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: {
                                                    kind: "Name",
                                                    value: "imageThumbnail"
                                                },
                                                name: {
                                                    kind: "Name",
                                                    value: "imageURL"
                                                },
                                                arguments: [{
                                                    kind: "Argument",
                                                    name: {
                                                        kind: "Name",
                                                        value: "width"
                                                    },
                                                    value: {
                                                        kind: "IntValue",
                                                        value: "40"
                                                    }
                                                }],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "imageURL"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteSets"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "emoteSet"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }, {
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "emotes"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: {
                                                                    kind: "SelectionSet",
                                                                    selections: [{
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "id"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }, {
                                                                        kind: "Field",
                                                                        alias: null,
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "token"
                                                                        },
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet: null
                                                                    }]
                                                                }
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "badges"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "FragmentSpread",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "badge"
                                                                },
                                                                directives: []
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "bits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "quantity"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "inGameContents"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "id"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "imageURL"
                                                        },
                                                        arguments: [{
                                                            kind: "Argument",
                                                            name: {
                                                                kind: "Name",
                                                                value: "width"
                                                            },
                                                            value: {
                                                                kind: "IntValue",
                                                                value: "30"
                                                            }
                                                        }],
                                                        directives: [],
                                                        selectionSet: null
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 721
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery Chat_SharePurchase_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    isCommerceRevShareEnabled\n    self {\n      purchaseTokens {\n        id\n        title\n        imageThumbnail: imageURL(width: 40)\n        imageURL\n        emoteSets {\n          id\n          emoteSet {\n            id\n            emotes {\n              id\n              token\n            }\n          }\n        }\n        badges {\n          id\n          badge{\n            ...badge\n          }\n        }\n        bits {\n          id\n          quantity\n        }\n        inGameContents {\n          id\n          imageURL(width: 30)\n        }\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = a
    },
    934: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "SharePurchaseTokenInChat"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "SharePurchaseTokenInChatInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "sharePurchaseTokenInChat"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "token"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 134
            }
        };
        n.loc.source = {
            body: "mutation SharePurchaseTokenInChat($input:SharePurchaseTokenInChatInput!) {\n  sharePurchaseTokenInChat(input:$input) {\n    token\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    935: function(e, t) {},
    936: function(e, t) {},
    937: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_ShareResub_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "resubNotification"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "months"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "token"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 195
            }
        };
        n.loc.source = {
            body: "query Chat_ShareResub_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      resubNotification {\n        id\n        months\n        token\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    938: function(e, t) {},
    939: function(e, t) {},
    940: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "BlockUser_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 100
            }
        };
        n.loc.source = {
            body: "query BlockUser_User($targetUserID: ID!) {\n  user(id: $targetUserID) {\n    id\n    displayName\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    941: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ChatRoom_UnblockUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnblockUserInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unblockUser"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "targetUser"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 128
            }
        };
        n.loc.source = {
            body: "mutation ChatRoom_UnblockUser($input: UnblockUserInput!) {\n  unblockUser(input: $input) {\n    targetUser {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    942: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatWhisperCommand_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 86
            }
        };
        n.loc.source = {
            body: "query ChatWhisperCommand_User($login: String!) {\n  user(login: $login) {\n    id\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    943: function(e, t) {},
    944: function(e, t) {},
    945: function(e, t) {},
    946: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RaidNotification_Channels"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "sourceChannelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetChannelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "sourceChannel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "sourceChannelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "targetChannel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetChannelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 290
            }
        };
        n.loc.source = {
            body: "query RaidNotification_Channels($sourceChannelID: ID!, $targetChannelID: ID!) {\n  sourceChannel: user(id: $sourceChannelID) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n  targetChannel: user(id: $targetChannelID) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    947: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "RaidNotification_User"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 52
            }
        };
        n.loc.source = {
            body: "query RaidNotification_User {\n  user {\n    id\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    948: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_BlockedUsers"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "blockedUsers"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 89
            }
        };
        n.loc.source = {
            body: "query Chat_BlockedUsers {\n  currentUser {\n    id\n    blockedUsers {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    949: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatList_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                directives: []
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 163
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/chat/models/cheer-fragment.gql"\n\nquery ChatList_Bits($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    ...cheer\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(842).definitions)), e.exports = a
    },
    950: function(e, t) {},
    951: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatRoom_AutohostPrompt"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "login"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 161
            }
        };
        n.loc.source = {
            body: "query ChatRoom_AutohostPrompt($login: String!) {\n  currentUser {\n    id\n  }\n\n  user(login: $login) {\n    id\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    952: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_UnbanUserFromChatRoom"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "createdAt"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 154
            }
        };
        n.loc.source = {
            body: "mutation Chat_UnbanUserFromChatRoom($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      createdAt\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    953: function(e, t) {},
    954: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_AllowRejectedChatMessage"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "AllowRejectedChatMessageInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "allowRejectedChatMessage"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "message"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 160
            }
        };
        n.loc.source = {
            body: "mutation Chat_AllowRejectedChatMessage($input: AllowRejectedChatMessageInput!) {\n  allowRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    955: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "Chat_DenyRejectedChatMessage"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "DenyRejectedChatMessageInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "denyRejectedChatMessage"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "message"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 157
            }
        };
        n.loc.source = {
            body: "mutation Chat_DenyRejectedChatMessage($input: DenyRejectedChatMessageInput!) {\n  denyRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    956: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "IncomingRaidLine_Channel"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "50"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 157
            }
        };
        n.loc.source = {
            body: "query IncomingRaidLine_Channel($channelLogin: String!) {\n  channel: user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    957: function(e, t) {},
    958: function(e, t) {},
    959: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "PinnedCheer_Cheers"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "top"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "chatMessage"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "recent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "chatMessage"
                                                },
                                                directives: []
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "recentTimeoutMs"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isRecentEnabled"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "isTopEnabled"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "recentTimeoutMs"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 381
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/chat/models/chat-message-fragment.gql"\n\nquery PinnedCheer_Cheers($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    cheer {\n      id\n      top {\n        ...chatMessage\n      }\n      recent {\n        ...chatMessage\n      }\n      recentTimeoutMs\n      settings {\n        isRecentEnabled\n        isTopEnabled\n        recentTimeoutMs\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(960).definitions)), e.exports = a
    },
    960: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "FragmentDefinition",
                name: {
                    kind: "Name",
                    value: "chatMessage"
                },
                typeCondition: {
                    kind: "NamedType",
                    name: {
                        kind: "Name",
                        value: "ChatMessage"
                    }
                },
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "id"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "authorName"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "authorColor"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "author"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "body"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "content"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "emotes"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "embeddedEmote"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "badges"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "setID"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "version"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "bitsUsed"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: null
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 288
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/chat/models/embedded-emote-fragment.gql"\n\nfragment chatMessage on ChatMessage {\n  id\n  authorName\n  authorColor\n  author {\n    id\n    login\n  }\n  body {\n    content\n    emotes {\n      ...embeddedEmote\n    }\n  }\n  badges {\n    setID\n    version\n  }\n  bitsUsed\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(907).definitions)), e.exports = a
    },
    961: function(e, t) {},
    962: function(e, t) {},
    963: function(e, t) {},
    964: function(e, t, n) {
        e.exports = n.p + "assets/gift1-8573b4d1700bd278971c52e7d077d1c4.png"
    },
    965: function(e, t) {},
    966: function(e, t, n) {
        e.exports = n.p + "assets/halloween_banner-4cd26b58841153f5c3fa6488f22e0082.png"
    },
    967: function(e, t) {},
    968: function(e, t) {},
    969: function(e, t) {},
    970: function(e, t) {},
    971: function(e, t) {},
    972: function(e, t) {},
    973: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "BitsCard_Bits"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "name"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "recentMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "event"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "bitsBadge"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "totalBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "nextBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "progress"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "current"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "FragmentSpread",
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        directives: []
                                                    }]
                                                }
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "next"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "FragmentSpread",
                                                        name: {
                                                            kind: "Name",
                                                            value: "badge"
                                                        },
                                                        directives: []
                                                    }]
                                                }
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "tournament"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "teams"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "name"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 615
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery BitsCard_Bits($name: ID!) {\n  currentUser {\n    id\n    bitsBalance\n    login\n  }\n  user(id: $name) {\n    id\n    displayName\n    cheer {\n      id\n      settings {\n        emoteMinimumBits\n        cheerMinimumBits\n        recentMinimumBits\n        event\n      }\n    }\n    self {\n      bitsBadge {\n        id\n        totalBits\n        nextBits\n        progress\n        current {\n          ...badge\n        }\n        next {\n          ...badge\n        }\n      }\n    }\n    tournament {\n      id\n      teams {\n        id\n        name\n      }\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = a
    },
    974: function(e, t) {},
    975: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Core_Services_Spade_ChatEvent_User"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "id"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPartner"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "stream"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "game"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "name"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 171
            }
        };
        n.loc.source = {
            body: "query Core_Services_Spade_ChatEvent_User($id: ID!) {\n  user(id: $id) {\n    id\n    isPartner\n    stream {\n      id\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    976: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatInput"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "isEmbedded"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bitsBalance"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPartner"
                                },
                                arguments: [],
                                directives: [{
                                    kind: "Directive",
                                    name: {
                                        kind: "Name",
                                        value: "include"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "if"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "isEmbedded"
                                            }
                                        }
                                    }]
                                }],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "cheer"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "hashtags"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "edges"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [{
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "cursor"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null
                                                    }, {
                                                        kind: "Field",
                                                        alias: null,
                                                        name: {
                                                            kind: "Name",
                                                            value: "node"
                                                        },
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: {
                                                            kind: "SelectionSet",
                                                            selections: [{
                                                                kind: "Field",
                                                                alias: null,
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "id"
                                                                },
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet: null
                                                            }]
                                                        }
                                                    }]
                                                }
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "settings"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "emoteMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "cheerMinimumBits"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "event"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 420
            }
        };
        n.loc.source = {
            body: "query ChatInput($channelLogin: String!, $isEmbedded: Boolean!) {\n  currentUser {\n    id\n    bitsBalance\n    isPartner @include(if: $isEmbedded)\n  }\n  user(login: $channelLogin) {\n    id\n    cheer {\n      id\n      hashtags {\n        edges {\n          cursor\n          node {\n            id\n          }\n        }\n      }\n      settings {\n        emoteMinimumBits\n        cheerMinimumBits\n        event\n      }\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    977: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ChatInput_SendCheer"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "SendCheerInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "sendCheer"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "currentUser"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "bitsBalance"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 149
            }
        };
        n.loc.source = {
            body: "mutation ChatInput_SendCheer($input: SendCheerInput!) {\n  sendCheer(input: $input) {\n    id\n    currentUser {\n      id\n      bitsBalance\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    978: function(e, t) {},
    979: function(e, t) {},
    980: function(e, t) {},
    981: function(e, t) {},
    982: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions_BanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "BanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "banUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 154
            }
        };
        n.loc.source = {
            body: "mutation ViewerCardModActions_BanUser($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    983: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "mutation",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions_UnbanUser"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "input"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "UnbanUserFromChatRoomInput"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "unbanUserFromChatRoom"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "input"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "ban"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isPermanent"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 160
            }
        };
        n.loc.source = {
            body: "mutation ViewerCardModActions_UnbanUser($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      isPermanent\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    984: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ViewerCardModActions"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetUserID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "chatRoomBanStatus"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetUserID"
                                }
                            }
                        }, {
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "userID"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "isPermanent"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 202
            }
        };
        n.loc.source = {
            body: "query ViewerCardModActions($targetUserID: ID!, $channelID: ID!) {\n  # This is currently backwards on the server\n  chatRoomBanStatus(channelID: $targetUserID, userID: $channelID) {\n    isPermanent\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    985: function(e, t) {},
    986: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ViewerCard"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "targetLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }, {
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelID"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "targetUser"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "targetLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "bannerImageURL"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "profileImageURL"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "width"
                                    },
                                    value: {
                                        kind: "IntValue",
                                        value: "70"
                                    }
                                }],
                                directives: [],
                                selectionSet: null
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channelUser"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelID"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "subscriptionProducts"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "id"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "price"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "url"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "emoteSetID"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "emotes"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "id"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "giftPromotion"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [{
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "newPrice"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "oldPrice"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "discountType"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }, {
                                                kind: "Field",
                                                alias: null,
                                                name: {
                                                    kind: "Name",
                                                    value: "discountValue"
                                                },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null
                                            }]
                                        }
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isModerator"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "currentUser"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isGlobalMod"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 628
            }
        };
        n.loc.source = {
            body: "query ViewerCard($targetLogin: String!, $channelID: ID!) {\n  targetUser: user(login: $targetLogin) {\n    id\n    login\n    bannerImageURL\n    displayName\n    profileImageURL(width: 70)\n  }\n  channelUser: user(id: $channelID) {\n    id\n    login\n    displayName,\n    subscriptionProducts {\n      id\n      price\n      url\n      emoteSetID\n      emotes {\n        id\n      }\n      giftPromotion {\n        newPrice\n        oldPrice\n        discountType\n        discountValue\n      }\n    }\n    self {\n      isModerator\n    }\n  }\n  currentUser {\n    login\n    id\n    roles {\n      isSiteAdmin\n      isStaff\n      isGlobalMod\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    987: function(e, t) {},
    988: function(e, t, n) {
        var a = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "ChatList_Badges"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "badges"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: "badge"
                                },
                                directives: []
                            }]
                        }
                    }, {
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "broadcastBadges"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "FragmentSpread",
                                        name: {
                                            kind: "Name",
                                            value: "badge"
                                        },
                                        directives: []
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 225
            }
        };
        a.loc.source = {
            body: '#import "twilight/features/badges/models/badge-fragment.gql"\n\nquery ChatList_Badges($channelLogin: String!) {\n  badges {\n    ...badge\n  }\n  user(login: $channelLogin) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n  }\n}\n',
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        var i = {};
        a.definitions = a.definitions.concat(function(e) {
            return e.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !i[t] && (i[t] = !0, !0)
            })
        }(n(829).definitions)), e.exports = a
    },
    989: function(e, t) {},
    990: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_ChannelData"
                },
                variableDefinitions: [{
                    kind: "VariableDefinition",
                    variable: {
                        kind: "Variable",
                        name: {
                            kind: "Name",
                            value: "channelLogin"
                        }
                    },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    },
                    defaultValue: null
                }],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: {
                            kind: "Name",
                            value: "channel"
                        },
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [{
                            kind: "Argument",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            value: {
                                kind: "Variable",
                                name: {
                                    kind: "Name",
                                    value: "channelLogin"
                                }
                            }
                        }],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "chatSettings"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "blockLinks"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "rules"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "chatDelayMs"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "self"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isModerator"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 235
            }
        };
        n.loc.source = {
            body: "query Chat_ChannelData($channelLogin: String!) {\n  channel: user(login: $channelLogin) {\n    id\n    login\n    displayName\n    chatSettings {\n      blockLinks\n      rules\n      chatDelayMs\n    }\n    self {\n      isModerator\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    991: function(e, t) {
        var n = {
            kind: "Document",
            definitions: [{
                kind: "OperationDefinition",
                operation: "query",
                name: {
                    kind: "Name",
                    value: "Chat_UserData"
                },
                variableDefinitions: [],
                directives: [],
                selectionSet: {
                    kind: "SelectionSet",
                    selections: [{
                        kind: "Field",
                        alias: null,
                        name: {
                            kind: "Name",
                            value: "user"
                        },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "displayName"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: null
                            }, {
                                kind: "Field",
                                alias: null,
                                name: {
                                    kind: "Name",
                                    value: "roles"
                                },
                                arguments: [],
                                directives: [],
                                selectionSet: {
                                    kind: "SelectionSet",
                                    selections: [{
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isGlobalMod"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isSiteAdmin"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }, {
                                        kind: "Field",
                                        alias: null,
                                        name: {
                                            kind: "Name",
                                            value: "isStaff"
                                        },
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }],
            loc: {
                start: 0,
                end: 138
            }
        };
        n.loc.source = {
            body: "query Chat_UserData {\n  user {\n    id\n    displayName\n    login\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n    }\n  }\n}\n",
            name: "GraphQL request",
            locationOffset: {
                line: 1,
                column: 1
            }
        };
        e.exports = n
    },
    993: function(e, t, n) {
        "use strict";
        var a = n(848);
        n.d(t, "a", function() {
            return a.a
        }), n.d(t, "b", function() {
            return a.b
        })
    }
});
//# sourceMappingURL=pages.channel-events-2ffcfd5c92d25e4c168ed41c10e6c056.js.map