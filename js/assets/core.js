(window.webpackJsonp = window.webpackJsonp || []).push([
    [154], {
        "+H9m": function(e, t, n) {},
        "+Jjl": function(e, t, n) {
            "use strict";
            var i = n("oXhC"),
                r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("f00E"),
                l = n("G4ap"),
                c = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderPortal = function(e) {
                            l.c ? l.c.provideContent(e, n.contentID) : o.j.warn("RightColumn must be defined on the Root to manipulate its content.")
                        }, n.removePortal = function() {
                            l.c ? l.c.removeContent() : o.j.warn("RightColumn must be defined on the Root to manipulate its content.")
                        }, n.contentID = Object(s.a)(), n
                    }
                    return r.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.children ? this.renderPortal(e.children) : this.removePortal()
                    }, t.prototype.componentDidMount = function() {
                        l.c || o.j.warn("RightColumn must be defined on the Root to manipulate its content."), this.props.children && this.renderPortal(this.props.children)
                    }, t.prototype.componentWillUnmount = function() {
                        this.removePortal()
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(a.Component);
            n.d(t, "a", function() {
                return i.b
            }), n.d(t, "b", function() {
                return c
            })
        },
        "+PZR": function(e, t, n) {
            "use strict";
            var i = function(e, t) {
                    var n = "https://www.twitch.tv/communities/{communityName}".replace("{communityName}", e);
                    return 'community report (<a href="{link}">{link}</a>) {description}'.replace(/{link}/g, n).replace(/{description}/, t)
                },
                r = n("/7QA");

            function a() {
                return [{
                    id: "other",
                    text: Object(r.d)("Other Terms of Service Violation", "ReportUserModal")
                }]
            }
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return a
            })
        },
        "+nzp": function(e, t, n) {},
        "/0dD": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Light = 0] = "Light", e[e.Dark = 1] = "Dark"
                }(i || (i = {}))
        },
        "/7QA": function(e, t, n) {
            "use strict";
            var i = n("4rCz");
            n.d(t, "a", function() {
                return i.a
            }), n.d(t, "b", function() {
                return i.b
            }), n.d(t, "c", function() {
                return i.c
            }), n.d(t, "d", function() {
                return i.d
            }), n.d(t, "e", function() {
                return i.e
            }), n.d(t, "f", function() {
                return i.f
            }), n.d(t, "g", function() {
                return i.g
            }), n.d(t, "h", function() {
                return i.h
            }), n.d(t, "i", function() {
                return i.i
            }), n.d(t, "j", function() {
                return i.k
            }), n.d(t, "l", function() {
                return i.m
            }), n.d(t, "k", function() {
                return i.l
            }), n.d(t, "n", function() {
                return i.o
            }), n.d(t, "m", function() {
                return i.n
            }), n.d(t, "o", function() {
                return i.p
            })
        },
        "/HY+": function(e, t, n) {
            "use strict";
            var i = n("dAHa"),
                r = n("mrSG"),
                a = n("q1tI"),
                o = n("/MKj"),
                s = n("fvjX"),
                l = n("cZKs"),
                c = n("aCAx"),
                d = n("GnwI"),
                u = n("Ue10"),
                p = (n("iif/"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClose = function(e, n) {
                            t.props.closeModal(), t.props.onClose && t.props.onClose(e, n)
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(u.qb, {
                            className: "reporting-modal__container",
                            background: u.n.Base,
                            padding: {
                                x: 2,
                                y: 3
                            }
                        }, a.createElement(i.b, {
                            onClose: this.handleClose,
                            reportContext: this.props.reportContext,
                            title: this.props.title,
                            defaultDescription: this.props.defaultDescription
                        }), a.createElement(l.a, null))
                    }, t
                }(a.Component));
            var m = Object(s.d)(Object(d.c)("ReportUserModal"), Object(o.b)(null, function(e) {
                return Object(s.b)({
                    closeModal: c.c
                }, e)
            }))(p);
            n.d(t, !1, function() {}), n.d(t, !1, function() {
                return i.c
            }), n.d(t, !1, function() {
                return i.a
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return i.b
            }), n.d(t, !1, function() {
                return p
            }), n.d(t, "a", function() {
                return m
            })
        },
        "/IfK": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return u
            });
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("oJmH"),
                s = n("/7QA"),
                l = n("GnwI"),
                c = n("Ue10"),
                d = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.logger = s.j.withCategory("SideNavPageInfoSection"), n.setContainerRef = function(e) {
                            return n.containerRef = e
                        }, n.state = {
                            content: null,
                            contentID: null,
                            isError: !1
                        }, i && n.logger.warn("SideNavPageInfoSection should only ever be used in the SideNav component. Use <SideNavPageInfoSectionContent> instead to wrap components."), i = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidMount = function() {
                        this.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.state.content && this.reportInteractive()
                    }, t.prototype.render = function() {
                        return !this.state.content || this.state.isError ? null : a.createElement(c.qb, {
                            padding: {
                                bottom: .5
                            },
                            className: "side-nav-page-info",
                            refDelegate: this.setContainerRef
                        }, this.state.content)
                    }, t.prototype.provideContent = function(e, t) {
                        this.state.content && this.state.contentID !== t && this.logger.warn("Displaying another component already. Only one component can be displayed at a time using <SideNavPageInfoSectionContent>. Check the page or other subcomponents to find the other instance and determine which one should be showing."), this.setState({
                            content: e,
                            contentID: t
                        })
                    }, t.prototype.removeContent = function() {
                        this.setState({
                            content: null,
                            contentID: null
                        })
                    }, t.prototype.reportInteractive = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t
                }(a.Component),
                u = Object(o.compose)(Object(l.c)("SideNavPageInfoSection"))(d)
        },
        "/aPz": function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return o
            }), n.d(t, "e", function() {
                return s
            }), n.d(t, "f", function() {
                return l
            }), n.d(t, "g", function() {
                return c
            }), n.d(t, "A", function() {
                return d
            }), n.d(t, "B", function() {
                return u
            }), n.d(t, "j", function() {
                return p
            }), n.d(t, "u", function() {
                return m
            }), n.d(t, "z", function() {
                return h
            }), n.d(t, "m", function() {
                return f
            }), n.d(t, "n", function() {
                return g
            }), n.d(t, "k", function() {
                return v
            }), n.d(t, "o", function() {
                return b
            }), n.d(t, "p", function() {
                return y
            }), n.d(t, "h", function() {
                return k
            }), n.d(t, "b", function() {
                return S
            }), n.d(t, "a", function() {
                return w
            }), n.d(t, "v", function() {
                return E
            }), n.d(t, "y", function() {
                return C
            }), n.d(t, "i", function() {
                return N
            }), n.d(t, "w", function() {
                return T
            }), n.d(t, "x", function() {
                return _
            }), n.d(t, "C", function() {
                return R
            }), n.d(t, "l", function() {
                return O
            }), n.d(t, "q", function() {
                return I
            }), n.d(t, "d", function() {
                return D
            }), n.d(t, "r", function() {
                return P
            }), n.d(t, "t", function() {
                return x
            }), n.d(t, "s", function() {
                return L
            });
            var i = n("/7QA"),
                r = n("0Log"),
                a = n("geRD");

            function o(e) {
                return r.PubsubTopic.BroadcastSettingsUpdate + "." + e
            }

            function s(e) {
                return r.PubsubTopic.ChatRoom + "." + e
            }

            function l(e) {
                return r.PubsubTopic.ChatRoomsChannel + "." + e
            }

            function c(e) {
                return r.PubsubTopic.ChatRoomsUser + "." + e
            }

            function d(e) {
                return r.PubsubTopic.VideoPlayback + "." + e
            }

            function u(e) {
                return r.PubsubTopic.VideoThumbnailProcessing + "." + e
            }

            function p(e) {
                return r.PubsubTopic.ImageUpload + "." + e
            }

            function m(e) {
                return r.PubsubTopic.UploadService + "." + e
            }

            function h(e) {
                return r.PubsubTopic.VideoPlaybackById + "." + e
            }

            function f(e) {
                return r.PubsubTopic.PayoutOnboardingEvents + "." + e
            }

            function g(e) {
                return r.PubsubTopic.Presence + "." + e
            }

            function v(e, t) {
                return r.PubsubTopic.ModerationActionsByUserAndChannel + "." + e + "." + t
            }

            function b(e) {
                return r.PubsubTopic.Raid + "." + e
            }

            function y(e) {
                return r.PubsubTopic.StreamChange + "." + e
            }

            function k(e) {
                return r.PubsubTopic.Friendship + "." + e
            }

            function S(e) {
                return r.PubsubTopic.ChannelBitsPinEvents + "." + e
            }

            function w(e) {
                return r.PubsubTopic.BitsLeaderboardEvents + "." + e.id
            }

            function E(e) {
                return r.PubsubTopic.UserBitsUpdates + "." + e
            }

            function C(e) {
                return r.PubsubTopic.UserSubscribeEvents + "." + e
            }

            function N(e) {
                return r.PubsubTopic.CampaignGlobalEvents + "." + e
            }

            function T(e) {
                return r.PubsubTopic.CampaignUserEvents + "." + e
            }

            function _(e) {
                return r.PubsubTopic.UserCommerceEvents + "." + e
            }

            function R(e) {
                return r.PubsubTopic.Whispers + "." + e
            }

            function O(e) {
                return r.PubsubTopic.OnsiteNotifications + "." + e
            }

            function I(e) {
                return r.PubsubTopic.StreamChatRoom + "." + e
            }

            function D(e) {
                return r.PubsubTopic.ChannelEventUpdates + "." + e
            }

            function P(e) {
                return r.PubsubTopic.SubscribersCSV + "." + e
            }

            function x(e) {
                return i.k.subscribe({
                    topic: e.topic,
                    onMessage: function(t) {
                        t.type && !e.type && !e.types || t.type && e.type && t.type !== e.type || t.type && e.types && !e.types.includes(t.type) || Object(a.e)(e.query, e.variables, function(n) {
                            return e.mutator(t, n)
                        }, function(n) {
                            return !!e.skipMessage && e.skipMessage(t, n)
                        })
                    }
                })
            }

            function L(e) {
                return i.k.subscribe({
                    topic: e.topic,
                    onMessage: function(t) {
                        t.type && t.type !== e.type || Object(a.d)({
                            fragment: e.fragment,
                            id: e.id,
                            mutator: function(n) {
                                return e.mutator(t, n)
                            }
                        })
                    }
                })
            }
        },
        "/cy1": function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("3yfl");
            Object(i.b)() && (document.domain = "twitch.tv")
        },
        "/mBu": function(e, t, n) {},
        "/rr3": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Default = 0] = "Default", e[e.WhisperSettings = 1] = "WhisperSettings"
                }(i || (i = {}))
        },
        "06uF": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return u
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "d", function() {
                return m
            });
            var i, r = n("/7QA"),
                a = n("Td8r"),
                o = n("t5Gm"),
                s = 1,
                l = ((i = {})[a.a.Amazon] = !1, i[a.a.ComScore] = !1, i[a.a.Google] = !1, i[a.a.Nielsen] = !1, i[a.a.SalesforceDMP] = !1, i),
                c = {
                    version: s,
                    vendorPreferences: l
                },
                d = r.o.logger.withCategory("gdpr-storage");

            function u() {
                return h(r.o.storage.get(o.b, null))
            }

            function p() {
                var e = r.o.storage.get(o.b, c);
                return h(e) ? e.vendorPreferences : (d.warn("stored vendor preferences are invalid", {
                    storedPrefs: e
                }), l)
            }

            function m(e) {
                var t = {
                    version: s,
                    vendorPreferences: e
                };
                r.o.storage.set(o.b, t)
            }

            function h(e) {
                return e && "object" == typeof e && !Array.isArray(e) && void 0 !== e.version && "number" == typeof e.version && e.vendorPreferences && "object" == typeof e.vendorPreferences && !Array.isArray(e.vendorPreferences)
            }
        },
        "0D4T": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("oJmH"),
                o = n("/MKj"),
                s = n("yR8l"),
                l = n("x7UT"),
                c = n("Mj6i"),
                d = n("kRBY"),
                u = n("OpME"),
                p = n("/7QA"),
                m = n("cpJf"),
                h = n("W8Fi"),
                f = n("GnwI"),
                g = n("br9A"),
                v = n("TSYQ"),
                b = n("8/mp"),
                y = n("8Ad5");

            function k(e) {
                return e.charCode === y.a.Enter || e.charCode === y.a.Space
            }
            var S = n("7SjK"),
                w = n("4rCz"),
                E = n("Ue10"),
                C = (n("UmTV"), function(e) {
                    var t = {
                            "emote-picker__tab": !0
                        },
                        n = null,
                        a = null;
                    if (e.channelTabVisible) {
                        var o = v(i.a({}, t, {
                            "emote-picker__tab--active": e.channelTabEnabled && e.channelTabSelected,
                            "emote-picker__tab--disabled": !e.channelTabEnabled
                        }));
                        n = r.createElement(E.Fa, {
                            padding: {
                                x: 1
                            }
                        }, r.createElement("div", {
                            key: "ChannelTabLink",
                            id: "emote-picker__channel",
                            className: o,
                            onClick: e.channelTabEnabled ? e.selectChannelTab : void 0,
                            onKeyPress: e.channelTabEnabled ? e.selectChannelTabKeypress : void 0,
                            "data-a-target": "emote-channel-tab",
                            tabIndex: 0
                        }, r.createElement("span", null, Object(w.d)("Channel", "EmotePicker"))))
                    }
                    if (e.allTabVisible) {
                        var s = v(i.a({}, t, {
                            "emote-picker__tab--active": !(e.channelTabSelected && e.channelTabEnabled)
                        }));
                        a = r.createElement(E.Fa, {
                            padding: {
                                x: 1
                            }
                        }, r.createElement("div", {
                            key: "allTabLink",
                            id: "emote-picker__all",
                            className: s,
                            onClick: e.selectAllTab,
                            onKeyPress: e.selectAllTabKeypress,
                            "data-a-target": "emote-all-tab",
                            tabIndex: 0
                        }, r.createElement("span", null, Object(w.d)("All", "EmotePicker"))))
                    }
                    return r.createElement(E.qb, {
                        background: E.n.Base,
                        borderTop: !0,
                        className: "emote-picker__tabs-container"
                    }, n, a)
                }),
                N = n("DnOo"),
                T = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = [];
                        if (this.props.subscribeTexts)
                            for (var t = 0; t <= this.props.plan.level; t++) {
                                var n = this.props.subscribeTexts[t];
                                n && (t < this.props.plan.level ? (e.push(r.createElement("span", {
                                    key: "upsell-predicate:" + t
                                }, n)), e.push(r.createElement("span", {
                                    key: "upsell-plus:" + t
                                }, " + "))) : this.props.plan.level > 0 ? e.push(r.createElement("strong", {
                                    key: "upsell-strong-end:" + this.props.plan.level
                                }, n)) : e.push(r.createElement("span", {
                                    key: "upsell-end:" + t
                                }, n)))
                            }
                        if (!this.props.plan.emoteSetID) return null;
                        var i = {
                                id: this.props.plan.emoteSetID,
                                emotes: this.props.plan.emotes || []
                            },
                            a = {};
                        return this.props.plan.price && (a.purchase = this.props.plan.price), r.createElement(E.Ma, {
                            className: "emote-picker-plan-upsell",
                            display: E.R.Flex,
                            flexDirection: E.T.Column,
                            alignItems: E.c.Center,
                            margin: {
                                bottom: 1
                            }
                        }, r.createElement(S.a, {
                            emoteSet: i,
                            locked: !0
                        }), r.createElement(E.Ma, {
                            margin: 1,
                            alignItems: E.c.Center
                        }, e), r.createElement(N.a, {
                            isSubbedToTier: !1,
                            tierPrice: a.purchase || "",
                            reportSubAction: this.props.reportSubAction,
                            url: this.props.plan.url,
                            isEsportChannel: this.props.isEsportChannel
                        }))
                    }, t
                }(r.Component),
                _ = (n("E6oy"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.channelTabSelectionKeypress = function(e) {
                            k(e) && n.selectChannelTab(e)
                        }, n.allTabSelectionKeypress = function(e) {
                            k(e) && n.selectAllTab(e)
                        }, n.closeOnEsc = function(e) {
                            e.keyCode === y.a.Esc && n.props.toggleVisibility()
                        }, n.handleFilterChange = function(e) {
                            var t = e.target.value,
                                i = t.toLowerCase(),
                                r = n.filterAvailableUpsells(n.props.availableUpsells, i),
                                a = n.filterEmoteSets(n.props.ownedChannelEmoteSets, i);
                            n.setState({
                                filter: i,
                                filteredAllEmoteSets: n.filterEmoteSets(n.props.allEmoteSets, i),
                                filteredAvailableUpsells: r,
                                filteredOwnedChannelEmoteSets: a,
                                inputValue: t,
                                channelTabEnabled: a.length > 0 || r.length > 0
                            })
                        }, n.state = {
                            filter: "",
                            filteredOwnedChannelEmoteSets: t.ownedChannelEmoteSets,
                            filteredAvailableUpsells: t.availableUpsells,
                            filteredAllEmoteSets: t.allEmoteSets,
                            inputValue: "",
                            channelTabSelected: !0,
                            channelTabEnabled: t.ownedChannelEmoteSets.length > 0 || t.availableUpsells.length > 0
                        }, n.selectAllTab = function() {
                            return n.setChannelTabSelected(!1)
                        }, n.selectChannelTab = function() {
                            return n.setChannelTabSelected(!0)
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        if (!e.gqlError)
                            if (this.state.filter.length > 0) {
                                var t = this.filterAvailableUpsells(this.props.availableUpsells, this.state.filter),
                                    n = this.filterEmoteSets(this.props.ownedChannelEmoteSets, this.state.filter);
                                this.setState({
                                    filteredAllEmoteSets: this.filterEmoteSets(this.props.allEmoteSets, this.state.filter),
                                    filteredAvailableUpsells: t,
                                    filteredOwnedChannelEmoteSets: n,
                                    channelTabEnabled: n.length > 0 || t.length > 0
                                })
                            } else this.setState({
                                filteredOwnedChannelEmoteSets: e.ownedChannelEmoteSets,
                                filteredAvailableUpsells: e.availableUpsells,
                                filteredAllEmoteSets: e.allEmoteSets,
                                channelTabEnabled: e.ownedChannelEmoteSets.length > 0 || e.availableUpsells.length > 0
                            })
                    }, t.prototype.render = function() {
                        return r.createElement(E.q, {
                            "data-a-target": "emote-picker",
                            direction: this.props.direction ? this.props.direction : E.r.TopRight,
                            size: this.props.size ? this.props.size : E.s.Medium,
                            noTail: !0,
                            show: !0
                        }, r.createElement(E.Ma, {
                            className: v("emote-picker")
                        }, this.renderTabContent(), r.createElement(E.Ma, {
                            className: "emote-picker__controls-container",
                            position: E.Wa.Relative
                        }, r.createElement(E.qb, {
                            padding: 1,
                            borderTop: !0
                        }, r.createElement(E.Ha, {
                            autoFocus: !0,
                            onChange: this.handleFilterChange,
                            onKeyDown: this.closeOnEsc,
                            placeholder: Object(p.d)("Search for Emotes", "EmotePicker"),
                            type: E.Ia.Text,
                            value: this.state.inputValue
                        })), r.createElement(C, {
                            allTabVisible: this.props.allEmoteSets.length > 0,
                            channelTabEnabled: this.state.channelTabEnabled,
                            channelTabSelected: this.state.channelTabSelected,
                            channelTabVisible: !!this.props.channelTabVisible,
                            selectAllTab: this.selectAllTab,
                            selectAllTabKeypress: this.allTabSelectionKeypress,
                            selectChannelTab: this.selectChannelTab,
                            selectChannelTabKeypress: this.channelTabSelectionKeypress
                        }))))
                    }, t.prototype.renderTabContent = function() {
                        var e = this,
                            t = [];
                        return this.props.gqlError ? t.push(r.createElement(E.Ma, {
                            key: "emotePicker-error"
                        }, r.createElement(E.Q, {
                            color: E.K.Error
                        }, Object(p.d)("Unable to load available emotes.", "EmotePicker")))) : this.props.loading ? t.push(r.createElement(E.Ma, {
                            alignItems: E.c.Center,
                            display: E.R.Flex,
                            key: "loading",
                            fullHeight: !0,
                            fullWidth: !0,
                            justifyContent: E.La.Center
                        }, r.createElement(E.Oa, {
                            key: "LoadingSpinner"
                        }))) : this.state.channelTabEnabled && this.state.channelTabSelected ? (this.state.filteredOwnedChannelEmoteSets.length > 0 && t.push(r.createElement(E.Ma, {
                            className: "emote-picker__content-block",
                            key: "ownedChannelEmoteSets",
                            padding: 1,
                            position: E.Wa.Relative
                        }, r.createElement(S.a, {
                            emoteSet: this.state.filteredOwnedChannelEmoteSets[0],
                            onClickEmote: this.props.onClickEmote,
                            locked: !1
                        }))), t = t.concat(this.state.filteredAvailableUpsells.map(function(t) {
                            return r.createElement(E.Ma, {
                                className: "emote-picker__content-block",
                                key: "planUpsell:" + t.level,
                                padding: 1,
                                position: E.Wa.Relative
                            }, r.createElement(T, {
                                plan: t,
                                isEsportChannel: e.props.isEsportChannel,
                                subscribeTexts: e.props.subscribeTexts,
                                reportSubAction: e.props.reportSubAction
                            }))
                        }))) : t = this.state.filteredAllEmoteSets.map(function(t) {
                            return r.createElement(E.Ma, {
                                key: "emoteGrid" + t.id,
                                position: E.Wa.Relative,
                                padding: {
                                    top: 1,
                                    bottom: 2
                                },
                                className: "emote-picker__content-block"
                            }, r.createElement(S.a, {
                                emoteSet: t,
                                onClickEmote: e.props.onClickEmote,
                                locked: !1
                            }))
                        }), t.length > 0 ? r.createElement(b.b, {
                            className: "emote-picker__tab-content"
                        }, r.createElement(E.Ma, {
                            padding: 1
                        }, t)) : null
                    }, t.prototype.filterEmoteSet = function(e, t) {
                        return e.filter(function(e) {
                            return e.token.toLowerCase().includes(t)
                        })
                    }, t.prototype.setChannelTabSelected = function(e) {
                        this.setState({
                            channelTabSelected: e
                        })
                    }, t.prototype.filterEmoteSets = function(e, t) {
                        for (var n = [], i = 0, r = e; i < r.length; i++) {
                            var a = r[i],
                                o = this.filterEmoteSet(a.emotes, t);
                            o.length > 0 && n.push({
                                id: a.id,
                                emotes: o
                            })
                        }
                        return n
                    }, t.prototype.filterAvailableUpsells = function(e, t) {
                        for (var n = [], r = 0, a = e; r < a.length; r++) {
                            var o = a[r];
                            if (o.emotes) {
                                var s = this.filterEmoteSet(o.emotes, t);
                                s.length > 0 && n.push(i.a({}, o, {
                                    emotes: s
                                }))
                            }
                        }
                        return n
                    }, t = i.c([Object(f.c)("EmotePickerMenu", {
                        autoReportInteractive: !0
                    })], t)
                }(r.Component)),
                R = n("DB+C"),
                O = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.trackSubEvent = function(e) {
                            Object(g.b)(i.a({}, e, {
                                action: g.a.ClickCheckout,
                                channelID: n.props.channelData && n.props.channelData.user && n.props.channelData.user.id || "",
                                channelLogin: n.props.channelData && n.props.channelData.user && n.props.channelData.user.displayName || "",
                                isMenuOpen: null,
                                hasSubCredit: null,
                                sub_location: "emote_picker",
                                modal: !1,
                                showPrimeContent: !0,
                                giftRecipient: null
                            }))
                        };
                        var r = {
                            allEmoteSets: [],
                            availableUpsells: [],
                            channelTabVisible: !1,
                            gqlError: t.emoteSetsData && !!t.emoteSetsData.error || t.channelData && !!t.channelData.error || !1,
                            gqlLoading: t.emoteSetsData && !!t.emoteSetsData.loading || t.channelData && !!t.channelData.loading || !1,
                            subscribeTexts: [],
                            ownedChannelEmoteSets: [],
                            ownedSetIDs: new Set([])
                        };
                        return r = n.applyDataPropsToState(t, r), n.state = i.a({}, r), n
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.checkDataLoaded(this.props) && (this.props.onLoad && this.props.onLoad(this.checkForContent(this.props)), this.props.latencyTracking.reportInteractive())
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (e.emoteSetsData && e.emoteSetsData.error || e.channelData && e.channelData.error) this.setState({
                            gqlError: !0
                        });
                        else {
                            var t = this.applyDataPropsToState(e, this.state);
                            this.props.pubsub.messages.subscriptionInfo !== e.pubsub.messages.subscriptionInfo && (this.props.channelData && this.props.channelData.refetch(), this.props.emoteSetsData && this.props.emoteSetsData.refetch()), this.checkDataLoaded(e) && (e.latencyTracking.reportInteractive(), e.onLoad && e.onLoad(this.checkForContent(e)), t.gqlLoading = !1), this.setState(i.a({}, t, {
                                gqlError: !1
                            }))
                        }
                    }, t.prototype.render = function() {
                        var e = this.props.channelData && this.props.channelData.user && this.props.channelData.user.campaignProperties && this.props.channelData.user.campaignProperties.domains && this.props.channelData.user.campaignProperties.domains.length > 0 || !1;
                        return this.props.visible ? r.createElement(_, {
                            allEmoteSets: this.state.allEmoteSets,
                            availableUpsells: this.state.availableUpsells,
                            channelTabVisible: this.state.channelTabVisible,
                            gqlError: this.state.gqlError,
                            isEsportChannel: e,
                            loading: this.state.gqlLoading,
                            onClickEmote: this.props.onClickEmote,
                            ownedChannelEmoteSets: this.state.ownedChannelEmoteSets,
                            toggleVisibility: this.props.toggleVisibility,
                            subscribeTexts: this.state.subscribeTexts,
                            reportSubAction: this.trackSubEvent,
                            direction: this.props.direction,
                            size: this.props.size
                        }) : null
                    }, t.prototype.checkDataLoaded = function(e) {
                        var t = !e.channelOwnerID || e.channelData && !e.channelData.loading,
                            n = !e.isLoggedIn || e.emoteSetsData && !e.emoteSetsData.loading;
                        return t && n
                    }, t.prototype.checkForContent = function(e) {
                        var t = e.emoteSetsData && e.emoteSetsData.emoteSets && e.emoteSetsData.emoteSets.length > 0 || !1,
                            n = e.channelData && e.channelData.user && e.channelData.user.subscriptionProducts.filter(this.subscriptionProductHasEmotes).length > 0 || !1;
                        return t || n
                    }, t.prototype.applyDataPropsToState = function(e, t) {
                        var n, r, a, o, s = i.a({}, t);
                        if (e.emoteSetsData && e.emoteSetsData.emoteSets && (s.ownedSetIDs = new Set(e.emoteSetsData.emoteSets.map(function(e) {
                                return parseInt(e.id, 10)
                            })), s.allEmoteSets = Object(u.a)(e.emoteSetsData.emoteSets)), e.channelData && e.channelData.user) {
                            var l = void 0;
                            e.channelData.user.self && e.channelData.user.self.subscriptionBenefit && (l = e.channelData.user.self.subscriptionBenefit.platform), s.availableUpsells = (n = s.ownedSetIDs, r = e.channelData.user.subscriptionProducts, o = [], !(a = l) || a !== m.a.IOS && a !== m.a.Android ? (r.forEach(function(e, t) {
                                var a = e.price;
                                0 === t && Object(h.d)(r) && (a = Object(h.a)(r[0])), e.emotes && e.emotes.length && e.emoteSetID && !n.has(parseInt(e.emoteSetID, 10)) && o.push(i.a({}, e, {
                                    emotes: Object(u.b)(e.emotes),
                                    level: t,
                                    price: a
                                }))
                            }), o) : o), s.subscribeTexts = function(e) {
                                for (var t = [], n = 0; n < e.length; n++) {
                                    var i = e[n];
                                    0 === n && i.emotes && i.emotes.length > 1 ? t[n] = Object(p.d)("Unlock {numEmotes, number} Sub Emotes", {
                                        numEmotes: i.emotes.length
                                    }, "assembleSubscribeTexts") : 0 === n ? t[n] = Object(p.d)("Unlock 1 Sub Emote", "assembleSubscribeTexts") : i.emotes && i.emotes.length > 1 ? t[n] = Object(p.d)("{numEmotes, number} Extra {price} Sub Emotes", {
                                        numEmotes: i.emotes.length,
                                        price: i.price
                                    }, "assembleSubscribeTexts") : i.emotes && i.emotes.length && (t[n] = Object(p.d)("1 Extra {price} Sub Emote", {
                                        price: i.price
                                    }, "assembleSubscribeTexts"))
                                }
                                return t
                            }(e.channelData.user.subscriptionProducts), s.ownedChannelEmoteSets = function(e, t) {
                                for (var n = [{
                                        id: "0",
                                        emotes: []
                                    }], i = 0, r = t; i < r.length; i++) {
                                    var a = r[i];
                                    a.emotes && a.emoteSetID && e.has(parseInt(a.emoteSetID, 10)) && (n[0].emotes = n[0].emotes.concat(Object(u.b)(a.emotes)))
                                }
                                return n[0].emotes.length ? n : []
                            }(s.ownedSetIDs, e.channelData.user.subscriptionProducts)
                        }
                        return s.channelTabVisible = e.channelData && e.channelData.user && e.channelData.user.subscriptionProducts.filter(this.subscriptionProductHasEmotes).length > 0 || !1, s
                    }, t.prototype.subscriptionProductHasEmotes = function(e) {
                        return void 0 !== e.emoteSetID && !!e.emotes && e.emotes.length > 0
                    }, t
                }(r.Component);
            var I = Object(a.compose)(Object(o.b)(function(e) {
                return {
                    currentUserID: e.session.user && e.session.user.id,
                    sessionUser: e.session.user,
                    isLoggedIn: Object(d.e)(e)
                }
            }), Object(s.a)(R, {
                name: "channelData",
                skip: function(e) {
                    return !e.channelOwnerID
                },
                options: function(e) {
                    return {
                        variables: {
                            channelOwnerID: e.channelOwnerID
                        }
                    }
                }
            }), Object(l.a)([{
                topic: function(e) {
                    return "user-subscribe-events-v1." + e.currentUserID
                },
                mapMessageTypesToProps: {
                    "*": "subscriptionInfo"
                },
                skip: function(e) {
                    return !e.currentUserID
                }
            }]), Object(f.c)("EmotePicker"), Object(c.a)())(O);
            n.d(t, "a", function() {
                return I
            })
        },
        "0FG4": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return c
            });
            var i, r = n("RcPG"),
                a = n("a1OF");
            ! function(e) {
                e[e.Position = 0] = "Position", e[e.Token = 1] = "Token"
            }(i || (i = {}));
            var o = "0";

            function s(e, t, n) {
                var o, s, l = n.type === i.Position ? t : e,
                    c = n.map[l];
                if (c) {
                    var d = (o = e, s = c.id, {
                        images: {
                            sources: {
                                "1x": Object(a.e)(s, 1),
                                "2x": Object(a.e)(s, 2),
                                "4x": Object(a.e)(s, 4)
                            },
                            themed: !1
                        },
                        alt: o
                    });
                    return {
                        type: r.a.Emote,
                        content: d
                    }
                }
                return null
            }
            var l = {
                "\\:\\&gt\\;": [":>"],
                "\\&gt\\;\\(": [">("],
                "\\&lt\\;\\]": ["<]"],
                "\\&lt\\;3": ["<3"],
                ":-?(?:7|L)": [":-7", ":-L", ":7", ":L"],
                "[oO](_|\\.)[oO]": ["o_o", "O_O", "o_O", "O_o", "o.o", "O.O", "o.O", "O.o"],
                "\\;-?(p|P)": [";-p", ";-P", ";p", ";P"],
                "\\;-?\\)": [";-)", ";)"],
                "\\:-?(o|O)": [":-o", ":-O", ":o", ":O"],
                "\\:-?(p|P)": [":-p", ":-P", ":p", ":P"],
                "\\:-?(S|s)": [":-S", ":-s", ":s", ":S"],
                "\\:-?[\\\\/]": [":-/", ":-\\", ":/", ":\\"],
                "\\:-?[z|Z|\\|]": [":-|", ":-Z", ":-z", ":|", ":Z", ":z"],
                "\\:-?\\(": [":-(", ":("],
                "\\:-?\\)": [":-)", ":)"],
                "\\:-?D": [":-D", ":D"],
                "#-?[\\\\/]": ["#-/", "#-\\", "#/", "#\\"],
                "B-?\\)": ["B-)", "B)"],
                "R-?\\)": ["R-)", "R)"]
            };

            function c(e) {
                for (var t = {}, n = 0, i = e; n < i.length; n++)
                    for (var r = i[n], a = 0, s = r.emotes; a < s.length; a++)
                        for (var c = s[a], d = 0, u = l[c.token] || [c.token]; d < u.length; d++) {
                            var p = u[d];
                            t[p] && r.id === o || (t[p] = {
                                id: c.id,
                                token: p
                            })
                        }
                return t
            }
        },
        "0GkP": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.ViewerCount = "VIEWER_COUNT", e.Relevance = "RELEVANCE"
                }(i || (i = {}))
        },
        "0Hzr": function(e, t, n) {},
        "0Log": function(e, t, n) {
            "use strict";
            var i = n("VSaV");
            n.o(i, "FrienshipChangeType") && n.d(t, "FrienshipChangeType", function() {
                return i.FrienshipChangeType
            }), n.o(i, "ModerationActions") && n.d(t, "ModerationActions", function() {
                return i.ModerationActions
            }), n.o(i, "PubsubMessageType") && n.d(t, "PubsubMessageType", function() {
                return i.PubsubMessageType
            }), n.o(i, "PubsubTopic") && n.d(t, "PubsubTopic", function() {
                return i.PubsubTopic
            }), n.o(i, "TargetedModerationActions") && n.d(t, "TargetedModerationActions", function() {
                return i.TargetedModerationActions
            });
            var r = n("By5U");
            n.o(r, "FrienshipChangeType") && n.d(t, "FrienshipChangeType", function() {
                return r.FrienshipChangeType
            }), n.o(r, "ModerationActions") && n.d(t, "ModerationActions", function() {
                return r.ModerationActions
            }), n.o(r, "PubsubMessageType") && n.d(t, "PubsubMessageType", function() {
                return r.PubsubMessageType
            }), n.o(r, "PubsubTopic") && n.d(t, "PubsubTopic", function() {
                return r.PubsubTopic
            }), n.o(r, "TargetedModerationActions") && n.d(t, "TargetedModerationActions", function() {
                return r.TargetedModerationActions
            });
            var a = n("WQCf");
            n.d(t, "FrienshipChangeType", function() {
                return a.a
            }), n.d(t, "ModerationActions", function() {
                return a.b
            }), n.d(t, "PubsubMessageType", function() {
                return a.c
            }), n.d(t, "PubsubTopic", function() {
                return a.d
            }), n.d(t, "TargetedModerationActions", function() {
                return a.e
            })
        },
        "0Lz3": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            }), n.d(t, "b", function() {
                return s
            });
            var i = n("mrSG"),
                r = n("uYEN"),
                a = n("5zXJ");

            function o(e) {
                var t = [],
                    n = {};
                return e.forEach(function(e) {
                    var o, s, c, d = e.tiers.map(function(e) {
                        return l(e)
                    });
                    "Cheer" === e.prefix && d.push((o = ["DARK", "LIGHT"], s = ["static", "animated"], c = [], [1, 1.5, 2, 3, 4].forEach(function(e) {
                        o.forEach(function(t) {
                            s.forEach(function(n) {
                                c.push({
                                    url: a.a + "/cheer/" + t.toLowerCase() + "/" + n + "/100000/" + e + "." + ("static" === n ? "png" : "gif"),
                                    isAnimated: "animated" === n,
                                    theme: t,
                                    dpiScale: e
                                })
                            })
                        })
                    }), l({
                        id: "Cheer:100000",
                        bits: 1e5,
                        canCheer: !1,
                        canShowInBitsCard: !1,
                        color: a.f[r.a.Yellow],
                        images: c
                    }))), d.sort(function(e, t) {
                        return t.bits - e.bits
                    });
                    var u = i.a({}, e, {
                        indexedTiers: new Map(d.map(function(e) {
                            return [e.bits, e]
                        })),
                        orderedTiers: d
                    });
                    t.push(u), n[u.prefix.toLowerCase()] = u
                }), {
                    indexedActions: n,
                    orderedActions: t
                }
            }

            function s(e, t) {
                return {
                    cursor: "" + e.rank,
                    node: {
                        id: t + "_" + e.entry_key,
                        entryKey: e.entry_key,
                        rank: e.rank,
                        score: e.score,
                        __typename: "BitsLeaderboardItem"
                    },
                    __typename: "BitsLeaderboardItemEdge"
                }
            }

            function l(e) {
                var t = new Map,
                    n = new Map,
                    r = new Map,
                    a = new Map;
                return e.images.forEach(function(e) {
                    "LIGHT" === e.theme ? e.isAnimated ? n.set(e.dpiScale, e.url) : t.set(e.dpiScale, e.url) : e.isAnimated ? a.set(e.dpiScale, e.url) : r.set(e.dpiScale, e.url)
                }), i.a({
                    indexedImages: {
                        LIGHT: {
                            static: t,
                            animated: n
                        },
                        DARK: {
                            static: r,
                            animated: a
                        }
                    }
                }, e)
            }
        },
        "0OKo": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("1uls");

            function o(e) {
                return {
                    latencyTracking: function(e, t) {
                        return new a.a(e, t)
                    }(e),
                    rootLatencyTracker: s()
                }
            }

            function s() {
                return new a.a("Root")
            }
            n("gCs8");

            function l(e, t) {
                return function(t) {
                    return function(n) {
                        function a() {
                            return null !== n && n.apply(this, arguments) || this
                        }
                        return i.d(a, n), a.prototype.render = function() {
                            return r.createElement(t, i.a({}, this.props, o(e)))
                        }, a
                    }(r.Component)
                }
            }
            n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "a", function() {
                return l
            })
        },
        "0ROh": function(e, t, n) {},
        "0jUA": function(e, t, n) {},
        "0tEc": function(e, t, n) {
            "use strict";
            var i = n("oJmH"),
                r = n("/MKj"),
                a = n("yR8l"),
                o = n("kRBY"),
                s = n("GnwI"),
                l = n("mrSG"),
                c = n("q1tI"),
                d = n("fvjX"),
                u = n("geRD"),
                p = n("1/iK"),
                m = n("y5D0"),
                h = "FriendEdge",
                f = "IncomingFriendRequestEdge",
                g = "",
                v = "OutgoingFriendRequestEdge";

            function b(e, t, n, i) {
                return {
                    optimisticResponse: (r = {}, r[e] = {
                        __typename: t,
                        user: {
                            __typename: "User",
                            id: n,
                            self: {
                                __typename: "UserSelfConnection",
                                friendship: {
                                    __typename: i
                                }
                            }
                        }
                    }, r)
                };
                var r
            }
            var y = n("/7QA"),
                k = n("/rr3"),
                S = n("Ue10"),
                w = n("heM0");
            var E = Object(i.compose)(Object(r.b)(null, function(e) {
                    return Object(d.b)({
                        onLoginClick: function() {
                            return m.f(p.a.FriendAdd)
                        }
                    }, e)
                }), Object(a.a)(w, {
                    name: "onCreateFriendRequest",
                    options: function(e) {
                        return l.a({}, Object(u.a)({
                            targetID: e.targetID
                        }), b("createFriendRequest", "CreateFriendRequestPayload", e.targetID, v))
                    }
                }))(function(e) {
                    var t = Object(y.d)("Add Friend", "AddFriendButton");
                    switch (e.friendButtonUIType) {
                        case k.a.WhisperSettings:
                            return c.createElement(S.Ja, {
                                ariaLabel: t,
                                onClick: e.isLoggedIn ? e.onCreateFriendRequest : e.onLoginClick
                            }, c.createElement(S.Ma, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, t));
                        default:
                            return c.createElement(S.v, {
                                ariaLabel: t,
                                onClick: e.isLoggedIn ? e.onCreateFriendRequest : e.onLoginClick,
                                "data-test-selector": "add-button"
                            }, t)
                    }
                }),
                C = n("aECu"),
                N = n("csdq"),
                T = Object(i.compose)(Object(a.a)(C, {
                    name: "onAcceptFriendRequest",
                    options: function(e) {
                        return l.a({}, Object(u.a)({
                            targetID: e.targetID
                        }), b("acceptFriendRequest", "AcceptFriendRequestPayload", e.targetID, h))
                    }
                }), Object(a.a)(N, {
                    name: "onRejectFriendRequest",
                    options: function(e) {
                        return l.a({}, Object(u.a)({
                            targetID: e.targetID
                        }), b("rejectFriendRequest", "RejectFriendRequestPayload", e.targetID, g))
                    }
                }))(function(e) {
                    if (e.friendButtonUIType === k.a.WhisperSettings) return c.createElement(S.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(y.d)("Friend Request Pending", "IncomingFriendRequestButton"));
                    var t = Object(y.d)("Accept", "IncomingFriendRequestButton"),
                        n = Object(y.d)("Reject", "IncomingFriendRequestButton");
                    return c.createElement(S.Ma, null, c.createElement(S.Ma, {
                        display: S.R.InlineBlock,
                        margin: {
                            right: .5
                        }
                    }, c.createElement(S.Jb, {
                        align: S.Kb.Left,
                        label: Object(y.d)("Accept Friend Request", "IncomingFriendRequestButton")
                    }, c.createElement(S.v, {
                        ariaLabel: t,
                        onClick: e.onAcceptFriendRequest,
                        "data-test-selector": "accept-button"
                    }, t))), c.createElement(S.Jb, {
                        align: S.Kb.Left,
                        label: Object(y.d)("Reject Friend Request", "IncomingFriendRequestButton")
                    }, c.createElement(S.v, {
                        ariaLabel: n,
                        onClick: e.onRejectFriendRequest,
                        type: S.B.Alert,
                        "data-test-selector": "reject-button"
                    }, n)))
                }),
                _ = n("Xcb2"),
                R = Object(i.compose)(Object(a.a)(_, {
                    name: "onCancelFriendRequest",
                    options: function(e) {
                        return l.a({}, Object(u.a)({
                            targetID: e.targetID
                        }), b("cancelFriendRequest", "CancelFriendRequestPayload", e.targetID, g))
                    }
                }))(function(e) {
                    if (e.friendButtonUIType === k.a.WhisperSettings) return c.createElement(S.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(y.d)("Friend Request Pending", "OutgoingFriendRequestButton"));
                    var t = Object(y.d)("Cancel Request", "OutgoingFriendRequestButton");
                    return c.createElement(S.v, {
                        ariaLabel: t,
                        onClick: e.onCancelFriendRequest,
                        "data-test-selector": "cancel-button"
                    }, t)
                }),
                O = n("IRYN"),
                I = Object(i.compose)(Object(a.a)(O, {
                    name: "onUnfriendUser",
                    options: function(e) {
                        return l.a({}, Object(u.a)({
                            targetID: e.targetID
                        }), b("unfriendUser", "UnfriendUserPayload", e.targetID, g))
                    }
                }))(function(e) {
                    if (e.friendButtonUIType === k.a.WhisperSettings) return null;
                    var t = Object(y.d)("Friends", "UnfriendButton"),
                        n = Object(y.d)("Unfriend", "UnfriendButton");
                    return c.createElement(S.v, {
                        ariaLabel: n,
                        onClick: e.onUnfriendUser,
                        statusAlertText: n,
                        "data-test-selector": "unfriend-button"
                    }, t)
                }),
                D = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return l.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.friendButtonUIType || k.a.Default;
                        if (!this.props.friendData && this.props.data && (this.props.data.loading || this.props.data.error)) return e === k.a.WhisperSettings ? null : c.createElement(S.Va, {
                            height: 30,
                            width: 60
                        });
                        var t = this.props.friendData || this.props.data;
                        if (!t || !t.user || !t.user.self || this.props.targetID === this.props.currentUserID) return null;
                        if (!this.props.isLoggedIn) return c.createElement(E, {
                            friendButtonUIType: e,
                            isLoggedIn: this.props.isLoggedIn,
                            targetID: this.props.targetID
                        });
                        switch (t.user.self.friendship ? t.user.self.friendship.__typename : g) {
                            case h:
                                return c.createElement(I, {
                                    friendButtonUIType: e,
                                    targetID: this.props.targetID
                                });
                            case f:
                                return c.createElement(T, {
                                    friendButtonUIType: e,
                                    targetID: this.props.targetID
                                });
                            case v:
                                return c.createElement(R, {
                                    friendButtonUIType: e,
                                    targetID: this.props.targetID
                                });
                            case g:
                            default:
                                return c.createElement(E, {
                                    friendButtonUIType: e,
                                    isLoggedIn: this.props.isLoggedIn,
                                    targetID: this.props.targetID
                                })
                        }
                    }, t
                }(c.Component),
                P = n("GGok");
            var x = Object(i.compose)(Object(s.c)("FriendButton"), Object(r.b)(function(e) {
                var t = Object(o.d)(e);
                return {
                    currentUserID: t && t.id,
                    isLoggedIn: Object(o.e)(e)
                }
            }), Object(a.a)(P, {
                options: function(e) {
                    return {
                        variables: {
                            id: e.targetID
                        }
                    }
                },
                skip: function(e) {
                    return !!e.friendData || !e.isLoggedIn || e.currentUserID === e.targetID
                }
            }))(D);
            n.d(t, "a", function() {
                return x
            })
        },
        "1/iK": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            });
            var i, r = n("/7QA"),
                a = 30,
                o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

            function s(e, t) {
                var n = {
                    action: t.action,
                    auth_ux: "modal",
                    type: t.type,
                    nonce: t.nonce
                };
                r.o.tracking.track(e, n)
            }

            function l() {
                for (var e = "", t = 0; t < a; t++) {
                    var n = Math.floor(Math.random() * o.length);
                    e += o.charAt(n)
                }
                return e
            }! function(e) {
                e.ActivateDevice = "activate_device_page", e.BitsLandingPage = "bits_landing_page", e.BitsCheckoutPage = "bits_checkout_page", e.ChatLoginButton = "chat_login_button", e.ChatSignupButton = "chat_signup_button", e.Chat = "chat", e.ChannelUpsellLogin = "channel_upsell_login", e.ChannelUpsellSignup = "channel_upsell_signup", e.ClipsManager = "clips_manager", e.ClipsOptions = "clips_options", e.CodeRedemptionPage = "code_redemption", e.CommunityModeration = "community_moderation", e.CommunityCreate = "community_create", e.DashboardPage = "dashboard_page", e.DirectoryFollowButton = "directory-follow-button", e.DropsLoginButton = "drops-login-button", e.EsportsCampaignTabsFTUE = "esports_campaign_tabs_ftue", e.EsportsCampaignTabsMilestoneBalloon = "esports_campaign_tabs_milestone_balloon", e.EventFollowButton = "event_follow_button", e.ExtensionInstallButton = "extension_install_button", e.FeedReactionToggle = "feed_reaction_toggle", e.FollowButton = "follow-button", e.FollowGameButton = "follow-game-button", e.FollowingPage = "following_page", e.FriendAdd = "friend_add", e.FriendsPage = "friends-require-login", e.InventoryPage = "inventory_page", e.LoginRequiredInterstitial = "login_required_interstitial", e.MessagesPage = "messages_page", e.PartnershipSignupPage = "partnership_signup_page", e.PaymentsLandingPage = "payments_landing_page", e.RaidJoin = "raid_join", e.ReportHoster = "report_hoster", e.ReportChannel = "report_channel", e.SettingsPage = "settings_page", e.SideNavUpsellCenter = "side-nav-upsell-center", e.SubsLandingPage = "subs_landing_Page", e.SubsCheckoutPage = "subs_checkout_page", e.SubsManagementPage = "backpack", e.TopNavLoginButton = "topnav_login_button", e.TopNavSignupButton = "topnav_signup_button", e.TrendingEmotesLogin = "trending-emotes-login", e.TrendingEmotesSignup = "trending-emotes-signup", e.ViewerCard = "viewer_card", e.VODComment = "vod_comment", e.VODOptions = "vod_options", e.WhisperButton = "whisper_button"
            }(i || (i = {}))
        },
        123: function(e, t) {},
        "14MF": function(e, t, n) {},
        170: function(e, t, n) {
            n("/cy1"), n("gg62"), n("LVaA"), e.exports = n("sNlA")
        },
        "19zd": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_TargetReportUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "userId"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "userId"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "blockedUsers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 132
                }
            };
            n.loc.source = {
                body: "query ReportUserModal_TargetReportUser($userId: ID!) {\nuser(id: $userId) {\nid\ndisplayName\n}\ncurrentUser {\nid\nblockedUsers {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "1ET2": function(e, t, n) {},
        "1Ot3": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "OnsiteNotifications_Summary"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "notifications"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "summary"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "unseenCount"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "lastSeenAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "incomingFriendRequests"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "1"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalUnreadCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "newestEdge"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "createdAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 188
                }
            };
            n.loc.source = {
                body: "query OnsiteNotifications_Summary {\ncurrentUser {\nid\nnotifications {\nsummary {\nunseenCount\nlastSeenAt\n}\n}\nincomingFriendRequests(first: 1) {\ntotalUnreadCount\nnewestEdge {\ncreatedAt\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "1uls": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("mrSG"),
                r = n("DiGQ"),
                a = function() {
                    function e(e, t) {
                        var n = this;
                        this.getDestination = function() {
                            return n.destination
                        }, this.getLocation = function() {
                            return n.location
                        }, this.destination = t
                    }
                    return e.prototype.reportInteractive = function(e) {
                        return e
                    }, e.prototype.getHasReportedInteractive = function() {
                        return !1
                    }, e.prototype.createChild = function(t, n) {
                        return new e(t, n)
                    }, e.prototype.setDestination = function(e) {
                        this.destination = e
                    }, e.prototype.setLocation = function(e) {
                        this.location = e
                    }, e.prototype.reset = function() {}, e.prototype.registerCustomEvent = function(e) {
                        return i.a({}, e, {
                            duration: {
                                latencyStatus: r.a.Unknown
                            },
                            startTime: 0
                        })
                    }, e.prototype.reportCustomEvent = function(e) {}, e.prototype.resetCustomEvents = function(e) {}, e.prototype.unregister = function() {}, e
                }()
        },
        "2+sX": function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("Ue10"),
                l = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            isError: !1,
                            options: null,
                            hovering: !1
                        }, n.logger = o.o.logger.withCategory("balloon-layer"), n.clearTimeoutAndRun = function(e, t) {
                            void 0 === t && (t = 400), n.displayTimeout && (clearTimeout(n.displayTimeout), n.displayTimeout = 0), n.displayTimeout = setTimeout(function() {
                                e(), n.displayTimeout = 0
                            }, t)
                        }, n.setRef = function(e) {
                            n.ref !== e && (n.removeEventListeners(), n.ref = e, n.addEventListeners(e))
                        }, n.addEventListeners = function(e) {
                            e && n.shouldAutoClose(n.state) && (e.addEventListener("mouseenter", n.handleMouseEnter, !0), e.addEventListener("mouseleave", n.handleMouseLeave))
                        }, n.removeEventListeners = function() {
                            n.ref && n.shouldAutoClose(n.state) && (n.ref.removeEventListener("mouseenter", n.handleMouseEnter), n.ref.removeEventListener("mouseleave", n.handleMouseLeave))
                        }, n.handleMouseEnter = function() {
                            n.setState({
                                hovering: !0
                            })
                        }, n.handleMouseLeave = function() {
                            n.setState({
                                hovering: !1
                            }, function() {
                                n.displayTimeout || n.hideBalloon()
                            })
                        }, n.shouldAutoClose = function(e) {
                            return !(!e.options || e.options.persistOnMouseExit)
                        }, i = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            o.o.stats.recordComponentError("BalloonLayer"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidUpdate = function(e, t) {
                        var n = this.shouldAutoClose(this.state),
                            i = this.shouldAutoClose(t);
                        this.ref && n !== i && (n ? this.addEventListeners(this.ref) : this.removeEventListeners())
                    }, t.prototype.componentWillUnmount = function() {
                        this.removeEventListeners()
                    }, t.prototype.render = function() {
                        if (this.state.isError) return null;
                        var e = null;
                        if (this.state.options) {
                            var t = {
                                left: this.state.options.from.x,
                                top: this.state.options.from.y
                            };
                            e = a.createElement(s.Fa, {
                                className: "balloon-layer",
                                position: s.Wa.Fixed,
                                zIndex: s.Tb.Above
                            }, a.createElement("div", {
                                style: t,
                                ref: this.setRef
                            }, a.createElement(s.q, {
                                direction: this.state.options.direction ? this.state.options.direction : s.r.Right,
                                size: s.s.Large,
                                show: !0,
                                tailOffset: this.state.options.tailOffset
                            }, a.createElement(s.Ma, {
                                padding: 1
                            }, this.state.options.content))))
                        }
                        return e
                    }, t.prototype.showBalloon = function(e) {
                        var t = this;
                        this.clearTimeoutAndRun(function() {
                            t.setState({
                                options: e
                            })
                        })
                    }, t.prototype.hideBalloon = function(e) {
                        var t = this;
                        void 0 === e && (e = {}), this.clearTimeoutAndRun(function() {
                            t.state.hovering && !e.force || t.setState({
                                options: null
                            })
                        }, e.timeout)
                    }, t
                }(a.Component);

            function c(e) {
                if (i && e.ref) {
                    var t = function(e, t) {
                        var n = r.a({}, e),
                            i = 0;
                        e.y + t + 20 > window.innerHeight && (n.y = window.innerHeight - t - 20, i = e.y - n.y);
                        return {
                            coords: n,
                            offset: i
                        }
                    }(function(e, t) {
                        var n = t.getBoundingClientRect();
                        switch (e) {
                            case s.r.Bottom:
                            case s.r.BottomLeft:
                                return {
                                    x: n.left,
                                    y: n.bottom
                                };
                            case s.r.BottomCenter:
                                return {
                                    x: n.left + n.width / 2,
                                    y: n.bottom
                                };
                            case s.r.BottomRight:
                                return {
                                    x: n.right,
                                    y: n.bottom
                                };
                            case s.r.Left:
                            case s.r.Top:
                            case s.r.TopLeft:
                                return {
                                    x: n.left,
                                    y: n.top
                                };
                            case s.r.LeftCenter:
                                return {
                                    x: n.left,
                                    y: n.top + n.height / 2
                                };
                            case s.r.TopCenter:
                                return {
                                    x: n.left + n.width / 2,
                                    y: n.top
                                };
                            case s.r.TopRight:
                            case s.r.Right:
                                return {
                                    x: n.right,
                                    y: n.top
                                };
                            case s.r.RightCenter:
                                return {
                                    x: n.right,
                                    y: n.top + n.height / 2
                                };
                            default:
                                return {
                                    x: n.left,
                                    y: n.bottom
                                }
                        }
                    }(e.direction, e.ref), e.contentHeight);
                    i.showBalloon({
                        content: e.content,
                        direction: e.direction,
                        from: {
                            x: t.coords.x,
                            y: t.coords.y
                        },
                        tailOffset: t.offset,
                        persistOnMouseExit: e.persistOnMouseExit
                    })
                }
            }

            function d(e) {
                void 0 === e && (e = {}), i && i.hideBalloon(e)
            }
            n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            })
        },
        "2Dht": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "WhisperThread"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "whisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "userLastMessageRead"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "sentAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "unreadMessagesCount"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "messages"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "20"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cursor"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "nonce"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "content"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "content"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "emotes"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "emoteID"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "setID"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "from"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "to"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "__typename"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "__typename"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "from"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "sentAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "editedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "deletedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "__typename"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "__typename"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "__typename"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 347
                }
            };
            n.loc.source = {
                body: "query WhisperThread($id: ID!) {\nwhisperThread(id: $id) {\nid\nuserLastMessageRead {\nid\nsentAt\n__typename\n}\nunreadMessagesCount\nmessages(first: 20) {\nedges {\ncursor\nnode {\nid\nnonce\ncontent {\ncontent\nemotes {\nid\nemoteID\nsetID\nfrom\nto\n__typename\n}\n__typename\n}\nfrom {\nid\n}\nsentAt\neditedAt\ndeletedAt\n__typename\n}\n__typename\n}\n__typename\n}\n__typename\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "2F2A": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = "features.ads.TRACKING_SET";

            function r() {
                return {
                    type: i
                }
            }
        },
        "2b5K": function(e, t, n) {},
        "2oG4": function(e, t, n) {},
        "2oY0": function(e, t, n) {},
        "2xye": function(e, t, n) {
            "use strict";
            var i = n("75DT");
            n.d(t, "Spade", function() {
                return i.a
            });
            var r = n("L9xt");
            n.o(r, "PageviewContent") && n.d(t, "PageviewContent", function() {
                return r.PageviewContent
            }), n.o(r, "PageviewDirectoryContentType") && n.d(t, "PageviewDirectoryContentType", function() {
                return r.PageviewDirectoryContentType
            }), n.o(r, "PageviewFollowingTab") && n.d(t, "PageviewFollowingTab", function() {
                return r.PageviewFollowingTab
            }), n.o(r, "PageviewLocation") && n.d(t, "PageviewLocation", function() {
                return r.PageviewLocation
            }), n.o(r, "PageviewMedium") && n.d(t, "PageviewMedium", function() {
                return r.PageviewMedium
            }), n.o(r, "ShareItemContext") && n.d(t, "ShareItemContext", function() {
                return r.ShareItemContext
            }), n.o(r, "ShareItemType") && n.d(t, "ShareItemType", function() {
                return r.ShareItemType
            }), n.o(r, "SourceItemType") && n.d(t, "SourceItemType", function() {
                return r.SourceItemType
            }), n.o(r, "SpadeEventType") && n.d(t, "SpadeEventType", function() {
                return r.SpadeEventType
            }), n.o(r, "SpadeFollowingCategory") && n.d(t, "SpadeFollowingCategory", function() {
                return r.SpadeFollowingCategory
            }), n.o(r, "SpadePlatform") && n.d(t, "SpadePlatform", function() {
                return r.SpadePlatform
            }), n.o(r, "SpadeVideoBroadcastType") && n.d(t, "SpadeVideoBroadcastType", function() {
                return r.SpadeVideoBroadcastType
            }), n.o(r, "TwitchDataType") && n.d(t, "TwitchDataType", function() {
                return r.TwitchDataType
            })
        },
        "2yyz": function(e, t, n) {},
        "3Bft": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return r
                }),
                function(e) {
                    e.PercentOff = "percent_off", e.FixedValueOff = "fixed_value_off"
                }(i || (i = {}));
            var r = {
                Prime: "prime",
                Tier1: "1000",
                Tier2: "2000",
                Tier3: "3000",
                Custom: "Custom"
            }
        },
        "3KNA": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "TopNav_User_UpdateIsSharingActivity"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdateIsSharingActivityInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updateIsSharingActivity"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "settings"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "isSharingActivity"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 173
                }
            };
            n.loc.source = {
                body: "mutation TopNav_User_UpdateIsSharingActivity($input: UpdateIsSharingActivityInput!) {\nupdateIsSharingActivity(input: $input) {\nuser {\nid\nsettings {\nisSharingActivity\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "3YIm": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "SendWhisper"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "SendWhisperInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "sendWhisper"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "message"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "nonce"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "content"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "content"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "emotes"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "emoteID"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "setID"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "from"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "to"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "__typename"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "__typename"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "from"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "__typename"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "sentAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "editedAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "deletedAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "error"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "code"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "__typename"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 278
                }
            };
            n.loc.source = {
                body: "mutation SendWhisper($input: SendWhisperInput!) {\nsendWhisper(input: $input) {\nmessage {\nid\nnonce\ncontent {\ncontent\nemotes {\nid\nemoteID\nsetID\nfrom\nto\n__typename\n}\n__typename\n}\nfrom {\nid\n__typename\n}\nsentAt\neditedAt\ndeletedAt\n__typename\n}\nerror {\ncode\n__typename\n}\n__typename\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "3qZk": function(e, t, n) {
            e.exports = n.p + "assets/friend_requests-aec9595d7e19764bc23d.png"
        },
        "3yfl": function(e, t, n) {
            "use strict";

            function i() {
                return "twitch.tv" === window.location.hostname || window.location.hostname.endsWith(".twitch.tv")
            }

            function r() {
                if (i()) return ".twitch.tv"
            }
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            })
        },
        "4/kP": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "ChannelPage_SetSessionStatus"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "SetSessionStatusInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "setSessionStatus"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "setAgainInSeconds"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 127
                }
            };
            n.loc.source = {
                body: "mutation ChannelPage_SetSessionStatus($input: SetSessionStatusInput!) {\nsetSessionStatus(input: $input) {\nsetAgainInSeconds\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "487o": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Prime_BlueBar_CurrentUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "stringIds"
                            }
                        },
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: {
                                    kind: "NamedType",
                                    name: {
                                        kind: "Name",
                                        value: "ID"
                                    }
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "dateOverride"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Time"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "primePromotions"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "ids"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "stringIds"
                                    }
                                }
                            }, {
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "dateOverride"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "dateOverride"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "text"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "externalURL"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isExternalLink"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 231
                }
            };
            n.loc.source = {
                body: "query Prime_BlueBar_CurrentUser($stringIds: [ID!] $dateOverride: Time) {\ncurrentUser {\nid\nhasPrime\n}\nprimePromotions (ids: $stringIds dateOverride: $dateOverride) {\nid\ntext\nexternalURL\nisExternalLink\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "4NwI": function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("mrSG"),
                a = n("q1tI"),
                o = n("oJmH"),
                s = n("/7QA"),
                l = n("8/mp"),
                c = n("yR8l"),
                d = n("GnwI"),
                u = n("Ue10"),
                p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = Object(s.d)("You'll get characters, vehicles, skins, and boosts for games like {hearthstone} and {smite}, plus surprises like a rotating selection of indie games.", {
                            hearthstone: a.createElement(u.Q, {
                                italic: !0,
                                type: u.Gb.Span
                            }, Object(s.d)("Hearthstone", "PrimeEmpty")),
                            smite: a.createElement(u.Q, {
                                italic: !0,
                                type: u.Gb.Span
                            }, Object(s.d)("Smite", "PrimeEmpty"))
                        }, "PrimeEmpty");
                        return a.createElement(u.Ma, {
                            className: "prime-empty",
                            margin: 2
                        }, a.createElement(u.Ma, {
                            textAlign: u.Cb.Center,
                            margin: 2
                        }, a.createElement("img", {
                            className: "prime-empty__image",
                            src: "https://m.media-amazon.com/images/G/01/sm/landing/Trunk_w_Star_transparent._V530838660_.png",
                            alt: Object(s.d)("Prime Treasure Chest", "PrimeEmpty")
                        })), a.createElement(u.Q, {
                            type: u.Gb.P,
                            bold: !0
                        }, Object(s.d)("Free in-game loot every month, plus surprises", "PrimeEmpty")), a.createElement("div", null, e))
                    }, t
                }(a.Component),
                m = Object(d.c)("PrimeEmpty", {
                    autoReportInteractive: !0
                })(p),
                h = n("6x+I"),
                f = n("geRD"),
                g = n("JVUd"),
                v = n("cinR"),
                b = n("Rjl4"),
                y = n("O4UZ"),
                k = (n("8EWP"), n("WcZC")),
                S = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClick = function(e) {
                            Object(b.f)({
                                offerID: t.props.offerID,
                                externalURL: t.props.externalURL,
                                hasPrime: !0,
                                index: t.props.index
                            }, t.props.offerType), t.props.claimCallback && t.props.offerType !== y.e.EXTERNAL_OFFER && !t.props.externalURL && t.props.claimCallback(e)
                        }, t.onHover = function() {
                            Object(b.g)({
                                offerID: t.props.offerID,
                                externalURL: t.props.externalURL,
                                hasPrime: !0,
                                index: t.props.index
                            }, t.props.offerType)
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default,
                            t = y.j(e),
                            n = y.h("prime-claim-button", e);
                        return a.createElement(u.Ma, {
                            fullWidth: !0,
                            className: n,
                            display: t ? u.R.Block : u.R.InlineBlock
                        }, this.getClaimButton())
                    }, t.prototype.getClaimButton = function() {
                        var e = this.props,
                            t = e.externalURL,
                            n = e.claiming,
                            i = e.offerType,
                            r = this.getButtonText();
                        if (t || i === y.e.EXTERNAL_OFFER) return a.createElement(v.a, {
                            onHover: this.onHover
                        }, a.createElement(u.v, {
                            fullWidth: !0,
                            linkTo: t,
                            targetBlank: !0,
                            onClick: this.onClick,
                            "data-a-target": "prime-claim-button"
                        }, r));
                        var o = a.createElement(v.a, {
                            onHover: this.onHover
                        }, a.createElement(u.v, {
                            fullWidth: !0,
                            state: n ? u.A.Loading : u.A.Default,
                            disabled: n,
                            linkTo: t,
                            onClick: this.onClick,
                            "data-a-target": "prime-claim-button"
                        }, r));
                        return a.createElement(u.Ma, {
                            position: u.Wa.Relative
                        }, o)
                    }, t.prototype.getButtonText = function() {
                        var e = Object(s.d)("Learn More", "PrimeClaimButton");
                        if (this.props.externalURL) return e;
                        switch (this.props.offerType) {
                            case y.e.CLAIM_CODE:
                                return Object(s.d)("Get Code", "PrimeClaimButton");
                            case y.e.EXTERNAL_OFFER:
                                return e;
                            case y.e.DIRECT_ENTITLEMENT:
                            default:
                                return Object(s.d)("Claim Offer", "PrimeClaimButton")
                        }
                    }, t
                }(a.Component),
                w = Object(o.compose)(Object(c.a)(k), Object(d.c)("PrimeClaimButton"))(S),
                E = (n("uhg1"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.toggleShowDescription = function() {
                            var e = !n.state.showDescription;
                            Object(b.i)(e, {
                                offerID: n.props.offerID,
                                externalURL: n.props.externalURL,
                                hasPrime: n.props.hasPrime,
                                index: n.props.index
                            }), n.setState({
                                showDescription: e
                            })
                        }, n.onHover = function() {
                            n.state.showDescription ? Object(b.h)({
                                offerID: n.props.offerID,
                                externalURL: n.props.externalURL,
                                hasPrime: n.props.hasPrime,
                                index: n.props.index
                            }) : Object(b.j)({
                                offerID: n.props.offerID,
                                externalURL: n.props.externalURL,
                                hasPrime: n.props.hasPrime,
                                index: n.props.index
                            })
                        }, n.renderVerticalDescriptionBlock = function() {
                            return a.createElement(u.qb, {
                                className: "prime-claim-description__body",
                                background: u.n.Alt2,
                                border: !0,
                                position: u.Wa.Relative
                            }, n.renderDescription())
                        }, n.renderHorizontalDescriptionBlock = function() {
                            return a.createElement(u.qb, {
                                className: "prime-claim-description__body",
                                background: u.n.Base,
                                border: !0,
                                position: u.Wa.Absolute,
                                attachTop: !0,
                                attachLeft: !0,
                                attachRight: !0,
                                margin: {
                                    right: 1,
                                    top: .5
                                },
                                overflow: u.Pa.Scroll
                            }, n.renderDescription())
                        }, n.renderDescription = function() {
                            return a.createElement(u.Ma, {
                                "data-a-target": "prime-claim-description-body",
                                margin: {
                                    bottom: 2
                                },
                                padding: 1
                            }, a.createElement(h, {
                                source: n.props.description || ""
                            }))
                        }, n.state = {
                            showDescription: !1
                        }, n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default,
                            t = Object(y.h)("prime-claim-description", e);
                        return a.createElement(u.Ma, {
                            fullWidth: !0,
                            className: t,
                            margin: {
                                top: 1
                            }
                        }, a.createElement(v.a, {
                            onHover: this.onHover
                        }, a.createElement(u.v, {
                            "data-a-target": "prime-claim-description-button",
                            fullWidth: !0,
                            type: u.B.Hollow,
                            onClick: this.toggleShowDescription
                        }, this.getDescriptionButtonText())), this.getDescriptionBlock(e))
                    }, t.prototype.getDescriptionButtonText = function() {
                        return this.state.showDescription ? Object(s.d)("Close Info", "PrimeClaimDescription") : Object(s.d)("More Info", "PrimeClaimDescription")
                    }, t.prototype.getDescriptionBlock = function(e) {
                        var t = null,
                            n = Object(y.j)(e);
                        return this.state.showDescription && (t = n ? this.renderVerticalDescriptionBlock() : this.renderHorizontalDescriptionBlock()), t
                    }, t
                }(a.Component)),
                C = Object(d.c)("PrimeClaimDescription", {
                    autoReportInteractive: !0
                })(E),
                N = n("9pSj"),
                T = n("j3KY"),
                _ = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onClick = function() {
                            Object(b.n)({
                                offerID: t.props.offerID,
                                externalURL: t.getLink(),
                                hasPrime: !1,
                                index: t.props.index
                            })
                        }, t.onHover = function() {
                            Object(b.o)({
                                offerID: t.props.offerID,
                                externalURL: t.getLink(),
                                hasPrime: !1,
                                index: t.props.index
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(u.Ma, {
                            className: "prime-upsell-button",
                            margin: {
                                top: 2,
                                bottom: 1
                            }
                        }, a.createElement(v.a, {
                            onHover: this.onHover
                        }, a.createElement(u.v, {
                            fullWidth: !0,
                            linkTo: this.getLink(),
                            targetBlank: !0,
                            onClick: this.onClick
                        }, Object(s.d)("Start Your Free Trial", "PrimeUpsellButton"))))
                    }, t.prototype.getLink = function() {
                        if (this.props.externalURL) return this.props.externalURL;
                        var e = (this.props.orientation || N.b.Default) === N.b.Vertical,
                            t = e ? T.d : T.b,
                            n = this.props.externalReftag || t,
                            i = window.location.pathname.substring(1);
                        return e ? Object(T.f)(n, i) : Object(T.e)(n, i)
                    }, t
                }(a.Component),
                R = Object(d.c)("PrimeUpsellButton", {
                    autoReportInteractive: !0
                })(_),
                O = n("zUQL"),
                I = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default,
                            t = Object(y.h)("prime-claim", e);
                        return a.createElement(u.Ma, {
                            className: t,
                            margin: {
                                bottom: 1
                            }
                        }, this.getCallToAction(), this.getClaimDescriptionSection())
                    }, t.prototype.getCallToAction = function() {
                        var e = this.props.data;
                        return Object(y.l)(e) ? a.createElement(w, {
                            offerType: this.props.offerType,
                            offerID: this.props.offerID,
                            claimCallback: this.props.claimCallback,
                            claiming: this.props.claiming,
                            orientation: this.props.orientation,
                            externalURL: this.props.externalURL,
                            index: this.props.index
                        }) : a.createElement(R, {
                            externalReftag: this.props.externalReftag,
                            externalURL: this.props.externalURL,
                            offerID: this.props.offerID,
                            index: this.props.index,
                            orientation: this.props.orientation
                        })
                    }, t.prototype.getClaimDescriptionSection = function() {
                        if (this.props.offerType === y.e.EXTERNAL_OFFER || this.props.externalURL) return null;
                        var e = this.props.data;
                        return a.createElement(C, {
                            description: this.props.offerDescription,
                            offerID: this.props.offerID,
                            externalURL: this.props.externalURL,
                            index: this.props.index,
                            orientation: this.props.orientation,
                            hasPrime: Object(y.l)(e)
                        })
                    }, t
                }(a.Component),
                D = Object(o.compose)(Object(c.a)(O), Object(d.c)("PrimeInstructions"))(I),
                P = n("z8lI"),
                x = n("fvjX"),
                L = (n("DvQC"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.setRef = function(e) {
                            n.setState({
                                clipboardInput: e
                            })
                        }, n.copy = function() {
                            var e;
                            try {
                                n.state.clipboardInput && n.state.clipboardInput.select(), e = document.execCommand("copy")
                            } catch (t) {
                                e = !1
                            }
                            return n.setState({
                                copied: e
                            }), e
                        }, n.state = {
                            copied: !1,
                            clipboardInput: null
                        }, n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.state.copied ? Object(s.d)("copied", "CopyButton") : Object(s.d)("copy", "CopyButton");
                        return a.createElement(u.Ma, {
                            className: "copy-button copy-btn",
                            display: u.R.Flex,
                            "data-test-target": "copy-button"
                        }, a.createElement(u.Fa, {
                            className: "copy-button__btn"
                        }, a.createElement(u.v, {
                            onClick: this.copy,
                            type: this.state.copied ? u.B.Success : u.B.Default
                        }, e)), a.createElement("input", {
                            className: "copy-button__copy-input",
                            ref: this.setRef,
                            value: this.props.clipboardText,
                            readOnly: !0
                        }))
                    }, t
                }(a.Component)),
                F = Object(x.d)(Object(d.c)("CopyButton"))(L),
                M = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onChange = function(e) {
                            t.setState({
                                value: e.currentTarget.value,
                                copied: !1
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentWillMount = function() {
                        this.props.initialText && this.setState({
                            value: this.props.initialText,
                            copied: !1
                        })
                    }, t.prototype.render = function() {
                        return this.state && this.state.value ? a.createElement(u.Ma, {
                            className: "copyable-item",
                            display: u.R.Flex,
                            flexGrow: 1
                        }, a.createElement(u.Ma, {
                            flexGrow: 1
                        }, a.createElement(u.Ha, {
                            type: u.Ia.Text,
                            onChange: this.onChange,
                            value: this.state.value,
                            disabled: this.props.disabled,
                            readOnly: this.props.readOnly
                        })), a.createElement(u.Ma, null, a.createElement(F, {
                            clipboardText: this.state.value
                        }))) : null
                    }, t
                }(a.Component),
                A = Object(x.d)(Object(d.c)("CopyableItem"))(M),
                U = (n("2b5K"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.getClaimInstructions = function() {
                            return a.createElement(u.Pb, null, a.createElement(h, {
                                source: n.props.claimInstructions || "",
                                escapeHtml: !0,
                                renderers: {
                                    Link: function(e) {
                                        return a.createElement("a", {
                                            href: e.href,
                                            target: "_blank",
                                            rel: "nofollow noopener noreferrer"
                                        }, e.children)
                                    }
                                }
                            }))
                        }, n.renderVerticalLayout = function() {
                            return a.createElement(u.qb, {
                                className: "prime-claim-instructions prime-claim-instructions--vertical",
                                "data-a-target": "prime-claim-instructions--vertical",
                                background: u.n.Alt2,
                                border: !0,
                                padding: 1,
                                fontSize: u.V.Size6
                            }, n.getClaimInstructions())
                        }, n.renderHorizontalLayout = function() {
                            return a.createElement(u.qb, {
                                fullWidth: !0,
                                className: "prime-claim-instructions prime-claim-instructions--horizontal",
                                margin: {
                                    top: 1
                                }
                            }, a.createElement(u.v, {
                                fullWidth: !0,
                                type: u.B.Text,
                                onClick: n.toggleShowDescription
                            }, n.getDescriptionButtonText()), n.state.showDescription && a.createElement(u.qb, {
                                className: "prime-claim-instructions__body",
                                "data-a-target": "prime-claim-instructions--horizontal",
                                border: !0,
                                position: u.Wa.Absolute,
                                padding: 1,
                                background: u.n.Alt,
                                overflow: u.Pa.Scroll,
                                attachTop: !0,
                                attachLeft: !0,
                                attachRight: !0,
                                margin: {
                                    right: 1,
                                    top: .5
                                }
                            }, n.getClaimInstructions()))
                        }, n.toggleShowDescription = function() {
                            n.setState({
                                showDescription: !n.state.showDescription
                            })
                        }, n.getDescriptionButtonText = function() {
                            return n.state.showDescription ? Object(s.d)("Close Info", "PrimeClaimInstruction") : Object(s.d)("Click here for Claim Instructions", "PrimeClaimInsctuction")
                        }, n.state = {
                            showDescription: !1
                        }, n
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default;
                        return Object(y.j)(e) ? this.renderVerticalLayout() : this.renderHorizontalLayout()
                    }, t
                }(a.Component)),
                B = Object(d.c)("PrimeClaimInstructions", {
                    autoReportInteractive: !0
                })(U),
                j = (n("QZ2B"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.getPrimeClaimInstructions = function() {
                            if (t.props.claimInstructions) return a.createElement(B, {
                                claimInstructions: t.props.claimInstructions || "",
                                orientation: t.props.orientation
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default,
                            t = Object(y.h)("prime-redeem", e);
                        return a.createElement(u.Ma, {
                            className: t
                        }, this.getCodeOrConfirmation(e), this.getPrimeClaimInstructions())
                    }, t.prototype.getCodeOrConfirmation = function(e) {
                        var t = Object(y.j)(e);
                        if (this.props.code && this.props.deliveryMethod === y.e.CLAIM_CODE) return a.createElement(u.Ma, {
                            "data-a-target": "prime-redeem-code-container"
                        }, a.createElement(A, {
                            initialText: this.props.code,
                            readOnly: !0,
                            textCenter: !0
                        }));
                        var n = t ? 1 : 0;
                        return a.createElement(u.qb, {
                            display: u.R.Flex,
                            justifyContent: u.La.Center,
                            margin: {
                                bottom: n
                            },
                            padding: {
                                y: n
                            },
                            className: "prime-redeem__confirmation"
                        }, a.createElement(u.Q, {
                            type: t ? u.Gb.H4 : u.Gb.H6,
                            align: u.Qb.Middle,
                            color: u.K.Overlay
                        }, a.createElement(u.Ma, {
                            display: u.R.InlineFlex,
                            flexGrow: 1,
                            flexWrap: u.U.NoWrap,
                            alignItems: u.c.Center,
                            "data-test-target": "prime-redeem-check",
                            "data-a-target": "prime-redeem-check",
                            padding: {
                                left: n
                            }
                        }, a.createElement(u.Ma, {
                            margin: {
                                right: 1
                            },
                            display: u.R.InlineFlex,
                            flexGrow: 1,
                            flexWrap: u.U.NoWrap,
                            padding: {
                                y: .5
                            },
                            alignItems: u.c.Center
                        }, a.createElement(u.fb, {
                            asset: u.gb.Check,
                            width: 20,
                            height: 20
                        })), Object(s.d)("Added To Your Twitch Account", "PrimeRedeem"))))
                    }, t
                }(a.Component)),
                z = Object(d.c)("PrimeRedeem", {
                    autoReportInteractive: !0
                })(j),
                W = n("SStD"),
                V = (n("+H9m"), "prime-offer__video"),
                H = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            claimed: !1,
                            claiming: !1,
                            error: void 0,
                            claimData: void 0,
                            status: void 0
                        }, t.renderVerticalLayout = function(e) {
                            var n = t.props.isLast || !1,
                                i = e.content || {},
                                r = i.game || {},
                                o = i.categories || [];
                            return a.createElement(u.qb, {
                                "data-a-target": "prime-offer",
                                className: "prime-offer prime-offer--vertical",
                                alignItems: u.c.Center,
                                display: u.R.Block,
                                borderBottom: !n,
                                textAlign: u.Cb.Left,
                                position: u.Wa.Relative,
                                padding: {
                                    x: 2,
                                    y: 1
                                }
                            }, a.createElement(u.Ma, {
                                "data-a-target": e.id,
                                className: "prime-offer__title",
                                padding: {
                                    y: .5
                                },
                                alignItems: u.c.Start
                            }, a.createElement(h, {
                                className: "prime-offer__title__markdown",
                                containerTagName: "h4",
                                source: e.title || ""
                            })), t.renderOfferImageOrVideo(e.imageURL), a.createElement(u.qb, {
                                margin: {
                                    bottom: 2
                                }
                            }, a.createElement(u.Ma, {
                                className: "prime-offer__description",
                                padding: {
                                    top: .5
                                }
                            }, a.createElement(u.Q, {
                                type: u.Gb.P
                            }, r.name, " ", o[0])), a.createElement(u.Ma, {
                                className: "prime-offer__publisher"
                            }, a.createElement(u.Q, {
                                type: u.Gb.P,
                                color: u.K.Alt2,
                                fontSize: u.V.Size7
                            }, i.publisher))), t.renderRedeemUpsellOrClaimSection(e))
                        }, t.renderHorizontalLayout = function(e) {
                            var n = e.content || {},
                                i = n.game || {},
                                r = n.categories || [];
                            return a.createElement(u.qb, {
                                "data-a-target": "prime-offer",
                                className: "prime-offer prime-offer--horizontal",
                                alignItems: u.c.Center,
                                display: u.R.InlineBlock,
                                textAlign: u.Cb.Left,
                                position: u.Wa.Relative,
                                padding: {
                                    right: 1,
                                    y: .5
                                },
                                fullWidth: !0
                            }, a.createElement(u.qb, {
                                className: "prime-offer__content",
                                margin: {
                                    bottom: 2
                                }
                            }, a.createElement(u.qb, {
                                className: "prime-offer__content__text",
                                background: u.n.Base
                            }, a.createElement(u.Ma, {
                                className: "prime-offer__publisher"
                            }, a.createElement(u.Q, {
                                type: u.Gb.P,
                                color: u.K.OverlayAlt,
                                fontSize: u.V.Size7,
                                transform: u.Fb.Uppercase
                            }, n.publisher)), a.createElement(u.Ma, {
                                className: "prime-offer__title",
                                alignItems: u.c.Start
                            }, a.createElement(h, {
                                className: "prime-offer__title__markdown",
                                containerTagName: "h4",
                                source: e.title || ""
                            })), a.createElement(u.Ma, {
                                className: "prime-offer__description"
                            }, a.createElement(u.Q, {
                                type: u.Gb.P,
                                color: u.K.Alt2
                            }, i.name, " ", r[0]))), t.renderOfferImageOrVideo(e.imageURL)), t.renderRedeemUpsellOrClaimSection(e))
                        }, t.renderOfferImageOrVideo = function(e) {
                            var n, i = t.getExtensionFromURL(e),
                                r = /iPhone.*Mobile|iPod|iPad/.test(navigator.userAgent);
                            return n = "mp4" === i ? a.createElement("video", {
                                ref: function(e) {
                                    t.offerVideo = e || void 0
                                },
                                preload: "auto",
                                loop: !0,
                                autoPlay: !0,
                                playsInline: !0,
                                muted: !0,
                                controls: r,
                                "data-test-selector": V
                            }, a.createElement("source", {
                                src: e,
                                type: "video/mp4"
                            })) : a.createElement("img", {
                                src: e
                            }), a.createElement(u.Ga, {
                                borderRadius: u.t.Medium
                            }, n)
                        }, t.getExtensionFromURL = function(e) {
                            if (!e) return e;
                            var t = e.split(".");
                            return t[t.length - 1]
                        }, t.renderRedeemUpsellOrClaimSection = function(e) {
                            var n = e.content || {},
                                i = e.self || {
                                    claimData: ""
                                },
                                r = t.props.data || {};
                            if (t.state.error) {
                                var o = t.getErrorType();
                                return a.createElement(P.a, {
                                    fontSize: u.V.Size6,
                                    testTarget: "prime-offer-error",
                                    errorType: o
                                })
                            }
                            if (!n.externalURL && (t.isCurrentOfferClaimed(e) || t.state.claimed) && Object(y.l)(r)) {
                                var s = t.state.claimData || i.claimData;
                                return a.createElement(z, {
                                    claimInstructions: e.claimInstructions,
                                    code: s,
                                    deliveryMethod: e.deliveryMethod,
                                    orientation: t.props.orientation
                                })
                            }
                            return a.createElement(D, {
                                offerID: e.id,
                                offerDescription: e.description,
                                offerType: e.deliveryMethod,
                                externalReftag: t.props.externalReftag,
                                externalURL: n.externalURL,
                                claimCallback: t.claimOffer,
                                claiming: t.state.claiming,
                                index: t.props.index,
                                orientation: t.props.orientation
                            })
                        }, t.getErrorType = function() {
                            return t.state.error || y.b.UNKNOWN_ERROR
                        }, t.claimOffer = function(e) {
                            e.nativeEvent.stopImmediatePropagation(), t.setState({
                                claiming: !0
                            });
                            var n = t.props.data;
                            if (!n.loading && !n.error && n.currentUser && n.currentUser.id) {
                                var i = t.props.offer,
                                    r = Object(f.a)({
                                        offerID: i.id
                                    });
                                t.props.claimPrimeOffer(r).then(function(e) {
                                    var n = (e.data || {}).claimPrimeOffer || {},
                                        r = n.self || {},
                                        a = n.error || {};
                                    if (r && r.hasEntitlement && i && t.setState({
                                            claimData: r.claimData,
                                            claiming: !1,
                                            claimed: !0,
                                            error: void 0
                                        }), a && a.code) {
                                        var o = y.b[a.code];
                                        t.setState({
                                            claiming: !1,
                                            claimed: !1,
                                            error: o || y.b.UNKNOWN_ERROR
                                        })
                                    }
                                }).catch(function() {
                                    t.setState({
                                        claiming: !1,
                                        claimed: !1,
                                        error: y.b.UNKNOWN_ERROR
                                    })
                                })
                            }
                        }, t.trackImpression = function() {
                            var e;
                            t.props.offer.content && (e = t.props.offer.content.externalURL), Object(b.m)({
                                offerID: t.props.offer.id,
                                externalURL: e || "",
                                index: t.props.index,
                                hasPrime: Object(y.l)(t.props.data),
                                displayWidthType: t.props.displayWidthType
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive(), this.props.impressionListener.registerImpressionCallback(this.trackImpression)
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive(), this.offerVideo && this.offerVideo.play()
                    }, t.prototype.render = function() {
                        var e = this.props.offer;
                        if (e) {
                            var t = this.props.orientation || y.c.Default;
                            return y.j(t) ? this.renderVerticalLayout(e) : this.renderHorizontalLayout(e)
                        }
                        return null
                    }, t.prototype.isCurrentOfferClaimed = function(e) {
                        return (e.self || {
                            hasEntitlement: !1
                        }).hasEntitlement
                    }, t
                }(a.Component),
                G = Object(o.compose)(Object(c.a)(O, {
                    name: "data"
                }), Object(c.a)(W, {
                    name: "claimPrimeOffer"
                }), Object(d.c)("PrimeOffer"), Object(g.a)("PrimeOffer", {
                    pixels: 100
                }))(H),
                q = (n("YO7o"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props.orientation || y.c.Default,
                            t = Object(y.j)(e);
                        return a.createElement(u.qb, {
                            className: "prime-offer-placeholder",
                            alignItems: u.c.Center,
                            borderBottom: t,
                            padding: {
                                x: 2,
                                y: 1
                            },
                            display: t ? u.R.Block : u.R.InlineBlock,
                            fullWidth: t
                        }, a.createElement(u.Ma, {
                            className: "prime-offer-placeholder__title",
                            padding: {
                                y: .5
                            }
                        }, a.createElement(u.Va, {
                            height: 20
                        })), a.createElement(u.Va, {
                            height: 160
                        }), a.createElement(u.Ma, {
                            className: "prime-offer-placeholder__description",
                            padding: {
                                y: .5
                            }
                        }, a.createElement(u.Va, {
                            height: 20,
                            width: 160
                        })), a.createElement(u.Ma, {
                            className: "prime-offer-placeholder__publisher"
                        }, a.createElement(u.Va, {
                            height: 20,
                            width: 80
                        })), a.createElement(u.Ma, {
                            className: "prime-offer-placeholder__claim",
                            margin: {
                                top: 2,
                                bottom: 1
                            }
                        }, a.createElement(u.Va, {
                            height: 40
                        })))
                    }, t
                }(a.Component)),
                Q = Object(d.c)("PrimeOfferPlaceholder", {
                    autoReportInteractive: !0
                })(q),
                K = (n("B1YN"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(u.qb, {
                            "data-test-target": "prime-offers-upsell",
                            "data-a-target": "prime-offers-upsell",
                            className: "prime-offers-upsell",
                            alignItems: u.c.Center,
                            padding: {
                                x: 2,
                                y: 1
                            },
                            borderBottom: !0
                        }, a.createElement(u.Q, {
                            type: u.Gb.H4
                        }, Object(s.d)("Claim With Twitch Prime", "PrimeUpsell")), a.createElement(u.Ma, {
                            className: "prime-upsell__logo-container",
                            fullWidth: !0,
                            margin: {
                                y: 2
                            },
                            textAlign: u.Cb.Center
                        }, a.createElement(u.fb, {
                            asset: u.gb.LogoTwitchPrime,
                            width: 330,
                            height: 150,
                            type: u.hb.Brand
                        })), a.createElement(u.Q, {
                            type: u.Gb.P
                        }, Object(s.d)("Get free game loot like this every month plus surprises, ad-free viewing, and loads more with Twitch Prime.", "PrimeUpsell")), a.createElement(R, null))
                    }, t
                }(a.Component)),
                Y = Object(d.c)("PrimeUpsell", {
                    autoReportInteractive: !0
                })(K),
                X = n("RfIv"),
                $ = n("OeOm"),
                J = (n("vSEG"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.shouldShowOffersSection = function() {
                            if (t.isOffersDataLoading) return !0;
                            var e = t.props.offersData,
                                n = e && e.primeOffers && e.primeOffers.length && t.getSortedOffers(),
                                i = n && n.length;
                            return i || !i && !t.props.hideWithNoOffers
                        }, t.renderDesktopOffers = function() {
                            return a.createElement(u.Ma, {
                                className: "prime-offer-list__content--desktop"
                            }, t.renderSectionTitle(), a.createElement(u.Mb, {
                                childWidth: u.Nb.Large,
                                gutterSize: u.Ob.Small,
                                center: !0,
                                placeholderItems: 20
                            }, t.renderOfferExperience(b.a.Wide)))
                        }, t.renderSectionTitle = function() {
                            return t.props.sectionTitle ? t.shouldShowPlaceholders ? a.createElement(u.Ma, {
                                padding: {
                                    x: 1
                                },
                                className: "prime-offers__title__placeholder"
                            }, a.createElement(u.Va, {
                                height: 28,
                                width: 300
                            })) : a.createElement(u.Ma, {
                                margin: {
                                    y: 1
                                },
                                className: "prime-offers__title"
                            }, a.createElement(u.Q, {
                                type: u.Gb.H3,
                                color: u.K.Base,
                                bold: !0
                            }, t.props.sectionTitle)) : null
                        }, t.renderMobileOffers = function() {
                            return a.createElement(u.Ma, {
                                className: "prime-offer-list__content--mobile"
                            }, t.renderSectionTitle(), t.renderOfferExperience(b.a.Narrow))
                        }, t.getOfferListOrientation = function() {
                            return t.props.listDirection || y.c.Default
                        }, t.getHiddenOfferIdsByPlacement = function(e) {
                            switch (e) {
                                case y.d.Crown:
                                    return s.b.get("prime-crown-hidden-ids", []);
                                case y.d.LootPage:
                                    return s.b.get("prime-loot-page-hidden-ids", []);
                                default:
                                    return []
                            }
                        }, t.renderOfferPlaceholders = function() {
                            for (var e = [], n = 0; n < 3; ++n) {
                                var i = a.createElement(Q, {
                                    key: n,
                                    orientation: t.getOfferListOrientation()
                                });
                                e.push(i)
                            }
                            return e
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.shouldReportInteractive && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.shouldReportInteractive && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.getOfferListOrientation(),
                            t = e.toLowerCase(),
                            n = Object(y.h)("prime-offer-list", e),
                            i = "prime-offer-list__content prime-offer-list__content--" + t,
                            r = this.props.listDirection === y.c.Horizontal,
                            o = this.props.listDirection === y.c.Vertical;
                        return this.shouldShowOffersSection() ? a.createElement(l.b, {
                            className: n,
                            suppressScrollX: o,
                            suppressScrollY: r
                        }, a.createElement(u.Ma, {
                            className: i,
                            alignItems: u.c.Center,
                            padding: {
                                top: 1,
                                bottom: 2,
                                x: 1
                            }
                        }, this.renderUpsell(), this.props.listDirection === y.c.Horizontal && this.renderDesktopOffers(), this.renderMobileOffers())) : null
                    }, t.prototype.renderUpsell = function() {
                        var e = this.props.userData;
                        if (!Object(y.k)(e) && !Object(y.l)(e) && !this.props.hideUpsell) return a.createElement(Y, null)
                    }, t.prototype.renderOfferExperience = function(e) {
                        var t = this,
                            n = this.props.offersData;
                        if (this.shouldShowPlaceholders) return this.renderOfferPlaceholders();
                        if (n.primeOffers && n.primeOffers.length) {
                            var i = this.getSortedOffers(),
                                r = i[i.length - 1];
                            return i.map(function(n, i) {
                                return a.createElement(u.Ma, {
                                    display: u.R.InlineBlock,
                                    key: n.id
                                }, a.createElement(G, {
                                    externalReftag: t.props.externalReftag,
                                    key: n.id,
                                    offer: n,
                                    isLast: r.id === n.id,
                                    index: i,
                                    orientation: t.getOfferListOrientation(),
                                    displayWidthType: e
                                }))
                            })
                        }
                        return a.createElement(m, null)
                    }, t.prototype.getFreeGamesWithPrimeOfferIds = function() {
                        return s.b.get("prime_free_game_offerids", [])
                    }, t.prototype.getSortedOffers = function() {
                        var e = this,
                            t = this.getUserId();
                        if (!this.props.offersData || !this.props.offersData.primeOffers) return [];
                        var n = this.props.offersData.primeOffers,
                            i = this.getHiddenOfferIdsByPlacement(this.props.placement),
                            r = n.filter(function(e) {
                                return !i.includes(e.id)
                            });
                        if (t) {
                            var a = r.filter(function(t) {
                                    return !e.offerHasExternalURL(t) && t.self && t.self.hasEntitlement
                                }).sort(y.o),
                                o = this.filterOffersByOfferType(a),
                                s = r.filter(function(t) {
                                    return e.offerHasExternalURL(t) || !t.self || !t.self.hasEntitlement
                                }).sort(y.o);
                            return this.filterOffersByOfferType(s).concat(o)
                        }
                        return this.filterOffersByOfferType(r).slice().sort(y.o)
                    }, t.prototype.offerHasExternalURL = function(e) {
                        var t = e && e.content;
                        return t && t.externalURL
                    }, t.prototype.filterOffersByOfferType = function(e) {
                        var t = this.getFreeGamesWithPrimeOfferIds();
                        return this.props.offerFilterType === X.a.Game ? e.filter(function(e) {
                            return t.includes(e.id)
                        }).sort(y.o) : this.props.offerFilterType === X.a.InGameLoot ? e.filter(function(e) {
                            return !t.includes(e.id)
                        }).sort(y.o) : e
                    }, t.prototype.getUserId = function() {
                        var e = this.props.userData;
                        return e && !e.loading && !e.error && e.currentUser && e.currentUser.id ? e.currentUser.id : ""
                    }, Object.defineProperty(t.prototype, "shouldShowPlaceholders", {
                        get: function() {
                            var e = this.props.offersData;
                            return !e || e.loading
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "shouldReportInteractive", {
                        get: function() {
                            return (!this.isUserDataLoading || this.isUserDataError) && (!this.isOffersDataLoading || this.isOffersDataError)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isUserDataLoading", {
                        get: function() {
                            var e = this.props.userData;
                            return e && e.loading
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isUserDataError", {
                        get: function() {
                            var e = this.props.userData;
                            return e && e.error
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isOffersDataLoading", {
                        get: function() {
                            var e = this.props.offersData;
                            return e && e.loading
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isOffersDataError", {
                        get: function() {
                            var e = this.props.offersData;
                            return e && e.error
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(a.Component)),
                Z = Object(o.compose)(Object(c.a)($, {
                    name: "offersData",
                    options: function() {
                        return {
                            variables: {
                                dateOverride: Object(y.f)()
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.firstPageLoaded && !e.ignoreFirstPageLoad
                    }
                }), Object(c.a)(O, {
                    name: "userData",
                    skip: function(e) {
                        return !e.firstPageLoaded && !e.ignoreFirstPageLoad
                    }
                }), Object(d.c)("PrimeOfferList"))(J);
            var ee = Object(i.b)(function(e) {
                return {
                    firstPageLoaded: e.session.firstPageLoaded
                }
            })(Z);
            n.d(t, "a", function() {
                return ee
            })
        },
        "4Qec": function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("kRBY"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("/7QA"),
                l = n("4rCz"),
                c = n("NAv5"),
                d = n("HGFl"),
                u = "esport_prime_promotion_start_date",
                p = "1990-01-01T00:00:00Z",
                m = "esport_prime_promotion_end_date",
                h = "1990-01-01T00:00:00Z",
                f = "esport_prime_promotion_user_whitelist",
                g = [],
                v = "-1";
            var b = n("W8Fi"),
                y = n("Ue10"),
                k = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return a.d(t, e), t.prototype.render = function() {
                        var e = this.getPrimePromotionTextNode(),
                            t = this.props.isOverlay ? y.K.Overlay : y.K.Base;
                        return e ? o.createElement(y.Ma, null, o.createElement(y.Ma, {
                            display: y.R.Flex
                        }, o.createElement(y.Ma, {
                            margin: {
                                right: .5
                            }
                        }, o.createElement(y.fb, {
                            asset: y.gb.Crown,
                            type: y.hb.Prime
                        })), o.createElement(y.Q, {
                            color: t
                        }, e))) : null
                    }, t.prototype.getPrimePromotionTextNode = function() {
                        var e = this.props.isOverlay ? y.P.Overlay : y.P.Default,
                            t = function(e, t) {
                                var n = l.b.get(u, p),
                                    i = l.b.get(m, h),
                                    r = l.b.get(f, g),
                                    a = r[0] === v,
                                    o = Object(d.c)(n),
                                    s = Object(d.c)(i),
                                    b = (Object(c.isEqual)(e, o) || Object(c.isAfter)(e, o)) && Object(c.isBefore)(e, s),
                                    y = a || !!t && r.includes(t);
                                return b && y
                            }(new Date(Date.now()), this.props.user && this.props.user.id),
                            n = Object(b.d)(this.props.subscriptionProducts);
                        if (this.props.userHasPrime) {
                            if (n) {
                                var i = Object(b.b)(this.props.subscriptionProducts[0]),
                                    r = Object(l.e)(i / 100, {
                                        style: "currency",
                                        currency: "USD"
                                    });
                                return Object(s.d)("You're saving {discountCurrencyValue} off for Prime Day and you'll get 500 Bits as a bonus reward with Twitch Prime.", {
                                    discountCurrencyValue: r
                                }, "CampaignsTabs")
                            }
                            return Object(s.d)("Get 500 Bits as a bonus reward on purchase, only with Twitch Prime.", "CampaignsTabs")
                        }
                        var a = function(t) {
                            return o.createElement(y.Q, {
                                key: "try-link-text",
                                noWrap: !0,
                                type: y.Gb.Span
                            }, o.createElement(y.O, {
                                key: "insider-prime-link",
                                to: s.a.tryPrimeURI,
                                type: e,
                                targetBlank: !0
                            }, t))
                        };
                        if (t) {
                            r = Object(l.e)(15, {
                                style: "currency",
                                currency: "USD"
                            });
                            return Object(s.d)("Save {discountCurrencyValue} on your purchase just for Prime Day and you'll get 500 Bits as a bonus reward with Twitch Prime. <x:link>Sign up now!</x:link>", {
                                discountCurrencyValue: r,
                                "x:link": a
                            }, "CampaignsTabs")
                        }
                        return Object(s.d)("Get 500 Bits as a bonus reward on purchase, only with Twitch Prime. <x:link>Sign up now!</x:link>", {
                            "x:link": a
                        }, "CampaignsTabs")
                    }, t
                }(o.PureComponent);
            var S = Object(i.b)(function(e) {
                return {
                    user: Object(r.d)(e)
                }
            })(k);
            n.d(t, "a", function() {
                return S
            })
        },
        "4VQm": function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("TSYQ"),
                o = n("17x9"),
                s = n("q1tI"),
                l = n("GxwZ"),
                c = n("N0BP"),
                d = (n("GiH9"), 100);
            ! function(e) {
                e[e.Resize = 0] = "Resize", e[e.Scroll = 1] = "Scroll", e[e.Wheel = 2] = "Wheel"
            }(i || (i = {}));
            var u = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.root = null, n.scrollContent = null, n.xScrollContent = null, n.resizeTimeout = 0, n.receivers = [], n.scrollTimeout = 0, n.wheelTimeout = 0, n.getChildContext = function() {
                        return {
                            registerReceiver: n.registerReceiver,
                            requestVisibilityCheck: n.requestVisibilityCheck,
                            getScrollContent: n.getScrollContent,
                            scrollToTop: n.scrollToTop,
                            yScrollTo: n.yScrollTo
                        }
                    }, n.scrollToBottom = function() {
                        n.scrollContent && n.yScrollTo(n.scrollContent.scrollHeight)
                    }, n.scrollToTop = function() {
                        n.yScrollTo(0)
                    }, n.notifyReceivers = function(e) {
                        requestAnimationFrame(function() {
                            if (n.scrollContent) {
                                var t = n.scrollContent.getBoundingClientRect();
                                e && (e.offset = n.scrollContent.scrollTop), n.receivers.forEach(function(n) {
                                    n.checkVisible(t, e)
                                })
                            }
                        })
                    }, n.onResize = function() {
                        if (!n.resizeTimeout && n.scrollContent) {
                            var e = {
                                type: i.Resize,
                                offset: n.scrollContent.scrollTop
                            };
                            n.props.disableDebounce ? n.notifyReceivers(e) : n.resizeTimeout = setTimeout(function() {
                                n.resizeTimeout = 0, n.notifyReceivers(e)
                            }, d)
                        }
                    }, n.onScroll = function() {
                        if (!n.scrollTimeout && n.scrollContent) {
                            var e = {
                                type: i.Scroll,
                                offset: n.scrollContent.scrollTop
                            };
                            n.props.disableDebounce ? n.notifyReceivers(e) : n.scrollTimeout = setTimeout(function() {
                                n.scrollTimeout = 0, n.notifyReceivers(e)
                            }, d)
                        }
                    }, n.onWheel = function(e) {
                        if (!n.wheelTimeout && n.scrollContent) {
                            var t = {
                                type: i.Wheel,
                                offset: n.scrollContent.scrollTop,
                                wheelEvent: e
                            };
                            n.props.disableDebounce ? n.notifyReceivers(t) : n.wheelTimeout = setTimeout(function() {
                                n.wheelTimeout = 0, n.notifyReceivers(t)
                            }, d)
                        }
                    }, n.registerReceiver = function(e) {
                        return n.scrollContext && n.scrollContext.registerReceiver && n.scrollContext.registerReceiver(e), n.receivers.push(e), n.requestVisibilityCheck(e),
                            function() {
                                var t = n.receivers.indexOf(e);
                                n.receivers.splice(t, 1)
                            }
                    }, n.requestVisibilityCheck = function(e) {
                        requestAnimationFrame(function() {
                            var t = n.scrollContent;
                            if (t) {
                                var i = t.getBoundingClientRect();
                                e.checkVisible(i)
                            }
                        })
                    }, n.setRef = function(e) {
                        return n.root = e
                    }, n.yScrollTo = function(e) {
                        n.scrollContent && (n.scrollContent.scrollTop = e), n.onScroll()
                    }, n.getScrollContent = function() {
                        return n.scrollContent
                    }, n.createSimpleBarOptions = function() {
                        return {
                            autoHide: void 0 === n.props.autoHide || n.props.autoHide
                        }
                    }, t.scrollRef && t.scrollRef(n), n
                }
                return r.d(t, e), t.prototype.componentDidMount = function() {
                    if (this.scrollContext = this.context, this.root) {
                        if (this.simplebarRef = new l(this.root, this.createSimpleBarOptions()), this.scrollContent = this.simplebarRef.getScrollElement(), this.xScrollContent = this.simplebarRef.getContentElement(), this.props.contentRef && this.props.contentRef(this.scrollContent), this.props.contentClassName) {
                            var e = this.scrollContent.querySelector(".simplebar-content");
                            e && e.classList.add(this.props.contentClassName)
                        }
                        this.props.scrollContentClassName && this.scrollContent.classList.add(this.props.scrollContentClassName), window.addEventListener("resize", this.onResize), this.scrollContent.addEventListener("scroll", this.onScroll), this.xScrollContent.addEventListener("scroll", this.onScroll), this.scrollContent.addEventListener("wheel", this.onWheel), this.notifyReceivers()
                    }
                }, t.prototype.componentWillUnmount = function() {
                    this.root && (delete this.simplebarRef, window.removeEventListener("resize", this.onResize), this.scrollContent && this.scrollContent.removeEventListener("scroll", this.onScroll), this.xScrollContent && this.xScrollContent.removeEventListener("scroll", this.onScroll))
                }, t.prototype.render = function() {
                    var e = this.props,
                        t = (e.disableDebounce, e.suppressScrollX, e.suppressScrollY, e.scrollRef, e.scrollContentClassName, e.contentClassName, r.g(e, ["disableDebounce", "suppressScrollX", "suppressScrollY", "scrollRef", "scrollContentClassName", "contentClassName"])),
                        n = {
                            "scrollable-area": !0,
                            "scrollable-area--suppress-scroll-x": this.props.suppressScrollX,
                            "scrollable-area--suppress-scroll-y": this.props.suppressScrollY
                        };
                    return s.createElement("div", r.a({
                        className: a(t.className, n),
                        "data-test-selector": "scrollable-area-wrapper",
                        ref: this.setRef
                    }, Object(c.a)(this.props), {
                        style: this.props.style
                    }), s.Children.only(this.props.children))
                }, t.contextTypes = {
                    registerReceiver: o.func
                }, t.childContextTypes = {
                    registerReceiver: o.func,
                    requestVisibilityCheck: o.func,
                    getScrollContent: o.func,
                    scrollToTop: o.func,
                    yScrollTo: o.func
                }, t
            }(s.Component);
            n.d(t, !1, function() {
                return "scrollable-area-wrapper"
            }), n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return u
            })
        },
        "4Wd7": function(e, t, n) {
            "use strict";
            var i, r = n("TSYQ"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("5zXJ"),
                l = n("XmgI"),
                c = n("4h+t"),
                d = n("x1M1"),
                u = n("Ue10");
            n("lKJS");
            ! function(e) {
                e[e.Large = 4] = "Large", e[e.Medium = 3] = "Medium", e[e.Small = 2] = "Small", e[e.ExtraSmall = 1.5] = "ExtraSmall", e[e.ExtremelySmall = 1] = "ExtremelySmall"
            }(i || (i = {}));
            var p = function(e) {
                var t = e.bitsConfig && e.bitsConfig.indexedActions[e.prefix.toLowerCase()];
                t || (t = Object(c.b)());
                var n = e.amount && e.amount <= s.i ? e.amount : s.i,
                    p = t.orderedTiers.find(function(e) {
                        return e.bits <= (n || 100)
                    });
                p || (p = t.orderedTiers[0]);
                var m = e.display === u.R.Inline || e.display === u.R.InlineFlex || e.display === u.R.InlineBlock,
                    h = null,
                    f = r("cheermote-for-amount__cheer-amount", {
                        "cheermote-for-amount__display--table-cell": !m
                    }, {
                        "cheermote-for-amount__cheer-amount--medium": e.size === i.Medium
                    }, {
                        "cheermote-for-amount__cheer-amount--small": e.size === i.Small || e.size === i.ExtraSmall
                    }, {
                        "cheermote-for-amount__cheer-amount--extremely-small": e.size === i.ExtremelySmall
                    });
                if (void 0 !== e.amount && e.showAmount) {
                    var g = e.formattedNumber ? Object(o.e)(e.amount) : e.amount;
                    h = a.createElement(u.Fa, {
                        padding: e.size === i.Small ? 0 : void 0,
                        textAlign: e.size === i.Small ? u.Cb.Center : void 0
                    }, a.createElement("strong", {
                        className: f,
                        style: {
                            color: p.color
                        }
                    }, g))
                }
                var v = r("cheermote-for-amount__cheer-image", {
                        "cheermote-for-amount__display--table-cell": !m
                    }, {
                        "cheermote-for-amount__cheer--inline": m
                    }, {
                        "cheermote-for-amount__cheer-image--small": e.size === i.Small
                    }, {
                        "cheermote-for-amount__cheer-image--extra-small": e.size === i.ExtraSmall
                    }, {
                        "cheermote-for-amount__cheer-image--extremely-small": e.size === i.ExtremelySmall
                    }),
                    b = a.createElement(d.a, {
                        className: v,
                        sources: Object(l.b)(p, e.size || i.Large, e.animated)
                    });
                return e.showImage || (b = null), a.createElement(u.Fa, {
                    className: "cheermote-for-amount",
                    alignItems: e.alignItems,
                    display: e.display
                }, a.createElement("span", null, b, h))
            };
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return p
            })
        },
        "4gQA": function(e, t, n) {},
        "4h+t": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            }), n.d(t, "b", function() {
                return u
            });
            var i = n("uYEN"),
                r = n("5zXJ"),
                a = {
                    Cheer: r.d,
                    Kreygasm: r.d,
                    Kappa: r.d,
                    Muxy: r.e,
                    Streamlabs: r.e,
                    SwiftRage: r.d,
                    VoHiYo: r.d
                },
                o = ["LIGHT", "DARK"],
                s = [1, 1.5, 2, 3, 4],
                l = null;

            function c() {
                if (!l) {
                    var e = [],
                        t = {};
                    Object.keys(a).forEach(function(n) {
                        var i = p(n, a[n]);
                        e.push(i), t[n.toLowerCase()] = i
                    }), l = {
                        orderedActions: e,
                        indexedActions: t
                    }
                }
                return l
            }
            var d = null;

            function u() {
                return d || (d = function(e) {
                    if (l) return l.indexedActions[e.toLowerCase()];
                    return p(e, a[e])
                }("Cheer")), d
            }

            function p(e, t) {
                var n = [i.a.Red, i.a.Blue, i.a.Green, i.a.Purple, i.a.Gray],
                    r = new Map,
                    a = [];
                if ("Cheer" === e) {
                    var o = m(e, i.a.Yellow);
                    r.set(i.a.Yellow, o), a.push(o)
                }
                return a.push.apply(a, n.map(function(t) {
                    var n = m(e, t);
                    return r.set(t, n), n
                })), {
                    prefix: e,
                    type: t,
                    tiers: a,
                    orderedTiers: a,
                    indexedTiers: r
                }
            }

            function m(e, t) {
                for (var n = [], i = {}, a = 0, l = o; a < l.length; a++)
                    for (var c = l[a], d = 0, u = s; d < u.length; d++) {
                        var p = u[d];
                        i[c] || (i[c] = {
                            animated: new Map,
                            static: new Map
                        });
                        var m = h(e, c, !0, t, p);
                        n.push(m), i[c].animated.set(p, m.url);
                        var f = h(e, c, !1, t, p);
                        n.push(f), i[c].static.set(p, f.url)
                    }
                return {
                    id: e + ";" + t,
                    canCheer: t <= r.l,
                    canShowInBitsCard: !0,
                    bits: t,
                    color: r.f[t],
                    images: n,
                    indexedImages: i
                }
            }

            function h(e, t, n, i, r) {
                var a = n ? "gif" : "png";
                return {
                    theme: t,
                    isAnimated: n,
                    dpiScale: r,
                    url: "https://d3aqoihi2n8ty8.cloudfront.net/actions/" + e.toLowerCase() + "/" + t.toLowerCase() + "/" + (n ? "animated" : "static") + "/" + i + "/" + r + "." + a
                }
            }
        },
        "4iu0": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("W8Fi"),
                s = n("Ue10"),
                l = (n("ujl+"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        if (this.hasDiscount(this.props.subscriptionProducts)) {
                            var e = this.getMessage();
                            return r.createElement(s.qb, {
                                textAlign: s.Cb.Center,
                                className: "sub-discount-banner",
                                padding: 1,
                                color: s.K.Overlay,
                                "data-test-selector": "sub-discount-banner"
                            }, r.createElement(s.Q, {
                                bold: !0
                            }, e))
                        }
                        return null
                    }, t.prototype.getMessage = function() {
                        var e = Object(o.b)(this.props.subscriptionProducts[0], this.props.isGift);
                        return this.props.isGift ? Object(a.d)("Gift a sub and get {percent} off!", {
                            percent: Object(a.e)(e / 100, "percent")
                        }, "SubDiscountBanner") : Object(a.d)("Get {percent} off the first month of any paid subscription!", {
                            percent: Object(a.e)(e / 100, "percent")
                        }, "SubDiscountBanner")
                    }, t.prototype.hasDiscount = function(e) {
                        return this.props.isGift ? Object(o.c)(e) : Object(o.d)(e)
                    }, t
                }(r.Component));
            n.d(t, !1, function() {
                return "sub-discount-banner"
            }), n.d(t, "a", function() {
                return l
            })
        },
        "4qQ0": function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.ChannelFeedComment = "CHANNEL_FEED_COMMENT_REPORT", e.ChannelFeedPost = "CHANNEL_FEED_POST_REPORT", e.Chat = "CHAT_REPORT", e.Clip = "CLIP_REPORT", e.Collection = "COLLECTION_REPORT", e.Community = "COMMUNITY_REPORT", e.Event = "EVENT_REPORT", e.Extension = "EXTENSION_REPORT", e.LiveUp = "LIVE_UP_REPORT", e.Raid = "RAID_REPORT", e.Room = "ROOM_REPORT", e.StreamUp = "STREAM_UP_REPORT", e.User = "USER_REPORT", e.VideoChatMessage = "VOD_COMMENT_REPORT", e.Vod = "VOD_REPORT", e.Whisper = "WHISPER_REPORT"
                }(i || (i = {})),
                function(e) {
                    e.BitsViolation = "bits_violation", e.ChatBanEvasion = "chat_ban_evasion", e.Cheating = "cheating", e.Gore = "gore", e.Harassment = "harassment", e.Harm = "harm", e.HatefulConduct = "hateful_conduct", e.Impersonation = "impersonation", e.Miscategorized = "miscategorized", e.OffensiveUsername = "offensive_username", e.Other = "other", e.Porn = "porn", e.Prohibited = "prohibited", e.SelfHarm = "selfharm", e.SexualContent = "sexual_content", e.SexualViolence = "sexual_violence", e.Spam = "spam", e.TosBanEvasion = "tos_ban_evasion", e.Underaged = "underaged"
                }(r || (r = {}))
        },
        "4rCz": function(e, t, n) {
            "use strict";
            var i, r = n("q1tI"),
                a = n("oJmH"),
                o = n("i8i4"),
                s = n("/MKj"),
                l = n("zB42"),
                c = n("I4Vk"),
                d = n("GlMZ"),
                u = "detector_urls",
                p = function() {
                    function e(e) {
                        this.detected = !1, this.blockDetectorURLS = [], this.storage = e.storage, this.detected = this.detected || this.storage.get("blockDetector.detected", !1), this.logger = e.logger.withCategory("ad-block-detector"), this.blockDetectorURLS = e.dynamicSettings.get(u, ["https://pubads.g.doubleclick.net/|"]), this.logger.debug("Created.")
                    }
                    return e.prototype.detectAdBlock = function() {
                        this.logger.debug("Start ad block tests."), this.blockDetectorURLS.forEach(this.testAccessToURL.bind(this)), this.detectEasyListPrivacy()
                    }, e.prototype.testAccessToURL = function(e) {
                        var t = this;
                        e = e.replace(/\|/g, Object(c.a)(10)), fetch(e, {
                            method: "GET",
                            mode: "no-cors"
                        }).then(function(n) {
                            t.logger.debug(e, "is reachable, with response", n)
                        }).catch(function(n) {
                            t.logger.debug(e, "is unreachable.", {
                                err: n
                            }), t.setBlockDetectedToTrue()
                        })
                    }, e.prototype.detectEasyListPrivacy = function() {
                        var e = this,
                            t = {
                                event: "dummy-event",
                                properties: {
                                    time: Date.now(),
                                    random1: Object(c.a)(256),
                                    random2: Object(c.a)(256),
                                    random3: Object(c.a)(256),
                                    random4: Object(c.a)(256)
                                }
                            },
                            n = {
                                method: "POST",
                                body: new Blob([Object(d.a)([t])], {
                                    type: "application/x-www-form-urlencoded; charset=UTF-8"
                                })
                            };
                        fetch("https://spade.twitch.tv", n).then(function(t) {
                            e.logger.debug("Spade is reachable.", {
                                status: t.status
                            })
                        }).catch(function(t) {
                            e.logger.debug("Spade unreachable: ", {
                                err: t
                            }), e.setBlockDetectedToTrue()
                        })
                    }, e.prototype.addTwitchGlobal = function() {
                        window.Twitch || (window.Twitch = {}), window.Twitch.blockDetector ? this.logger.debug("Block Detecter global already exists.", {
                            blockDetector: window.Twitch.blockDetector
                        }) : (window.Twitch.blockDetector = this, this.logger.debug("Setting global sentinel."))
                    }, e.prototype.setBlockDetectedToTrue = function() {
                        this.storage.set("blockDetector.detected", !0), this.detected = !0
                    }, e
                }(),
                m = n("mrSG"),
                h = n("p46w"),
                f = n("wMnI"),
                g = n("cr+I"),
                v = n("/7QA"),
                b = n("D7An"),
                y = n("pXgH"),
                k = "twilight.ignore_experiments",
                S = function() {
                    function e(e) {
                        this.eventThrottleStatus = {}, this.hasInitialized = !1, this.ignoreExperiments = !1, this.dynamicSettings = e.dynamicSettings, this.logger = e.logger.withCategory("Experiment"), this.session = e.session, this.store = e.store, this.tracking = e.tracking, this.ignoreExperiments = e.storage.get(k, !1)
                    }
                    return e.prototype.getAssignment = function(e, t) {
                        if (void 0 === t && (t = {}), this.ignoreExperiments) return this.logger.debug("Ingoring experiments because local storage key is present"), null;
                        if (!this.hasInitialized) try {
                            this.initialize()
                        } catch (e) {
                            return this.logger.warn("Cannot initialize", e), null
                        }
                        if (!b.b[e]) return this.logger.warn("Experiment name not in mapping", e), null;
                        var n = b.b[e];
                        if (!this.experiments[n]) return this.logger.warn("Unable to find experiment configuration", {
                            name: e,
                            id: n
                        }), b.a[n] && this.overrides[n] ? (this.logger.warn("Using experiment override despite missing experiment configuration", {
                            name: e,
                            id: n,
                            assignment: this.overrides[n]
                        }), this.overrides[n]) : null;
                        var i = this.experiments[n];
                        if (!this.assignments[n]) return this.logger.warn("Unable to determine default assignment", {
                            name: e,
                            id: n,
                            experiment: i
                        }), null;
                        var r, a, o = this.assignments[n];
                        switch (this.overrides[n] ? r = this.overrides[n] : 3 === i.t ? t.channel ? r = Object(f.selectTreatment)(n, i, t.channel) : (this.logger.warn("Called getAssignment() for channel experiment with no channel", i), r = o) : r = o, i.t) {
                            case 1:
                                a = y.a.Device;
                                break;
                            case 2:
                                a = y.a.User;
                                break;
                            case 3:
                                a = y.a.Channel;
                                break;
                            default:
                                a = void 0
                        }
                        return this.trackExperiment({
                            assignment: r,
                            channel: t.channel,
                            id: n,
                            name: i.name,
                            version: i.v,
                            type: a
                        }), r
                    }, e.prototype.trackExperiment = function(e) {
                        var t = {
                                channel: e.channel || void 0,
                                device_id: this.session.deviceID,
                                login: this.login,
                                experiment_id: e.id,
                                experiment_group: e.assignment,
                                experiment_name: e.name,
                                experiment_version: e.version,
                                experiment_type: e.type
                            },
                            n = JSON.stringify(e),
                            i = this.eventThrottleStatus[n];
                        this.dynamicSettings.get("throttled_experiment_event_enabled", !1) && (!this.eventThrottleStatus[n] || Date.now() - i > 6e4) && (this.tracking.trackExperimentThrottled(t), this.eventThrottleStatus[n] = Date.now()), this.tracking.trackExperiment(t)
                    }, e.prototype.getAssignments = function() {
                        return this.assignments
                    }, e.prototype.initialize = function() {
                        if (window.__twilightSettings && window.__twilightSettings.experiments) {
                            this.experiments = window.__twilightSettings && window.__twilightSettings.experiments;
                            var e = Object(f.validate)(this.experiments);
                            e && (this.logger.error(e, "Invalid experiment configuration. Experiments will be default"), this.experiments = {})
                        } else this.logger.warn("Unable to get experiment data from dynamic settings. Experiments will be default."), this.experiments = {};
                        var t = this.store.getState().session;
                        if (!t || !t.authInitialized) throw new Error("Cannot provide assignments before session has initialized");
                        var n = t && t.user;
                        this.overrides = this.determineOverrides(!(!n || !n.roles) && n.roles.isStaff), this.login = n ? n.login : void 0, this.assignments = this.determineAssignments(this.experiments, this.session.deviceID, this.login), this.logger.debug("Experiment settings determined", {
                            overrides: this.overrides,
                            assignments: this.assignments,
                            experiments: this.experiments
                        }), this.hasInitialized = !0
                    }, e.prototype.determineOverrides = function(e) {
                        var t = this,
                            n = {};
                        e && Object.keys(b.c).forEach(function(e) {
                            b.b[e] ? b.c[e] && (n[b.b[e]] = b.c[e]) : t.logger.warn("Staff experiment name is not in mapping", e)
                        });
                        var i = {};
                        try {
                            var r = h.get(v.a.experimentsOverrideCookie);
                            if (r) {
                                var a = JSON.parse(r);
                                Object.keys(a).forEach(function(e) {
                                    b.a[e] ? i[e] = a[e] : t.logger.warn("Cookie experiment ID is not in DEFAULT_ASSIGNMENTS mapping", e)
                                })
                            }
                        } catch (e) {
                            this.logger.warn("Unable to parse cookie overrides", e)
                        }
                        var o = {},
                            s = g.parse(window.location.search);
                        if (s.experiments) try {
                            var l = JSON.parse(s.experiments);
                            Object.keys(l).forEach(function(e) {
                                b.b[e] ? o[b.b[e]] = l[e] : t.logger.warn("URL override experiment name is not in mapping", e)
                            })
                        } catch (e) {
                            this.logger.warn("Unable to parse URL overrides", e)
                        }
                        return m.a({}, n, i, o)
                    }, e.prototype.determineAssignments = function(e, t, n) {
                        var i = this,
                            r = {};
                        return Object.keys(b.a).forEach(function(a) {
                            if (e[a]) {
                                var o = e[a];
                                1 === o.t ? r[a] = Object(f.selectTreatment)(a, o, t) : 2 === o.t && n ? r[a] = Object(f.selectTreatment)(a, o, n) : r[a] = b.a[a]
                            } else i.logger.warn("Experiment is deprecated", a)
                        }), r
                    }, e
                }(),
                w = n("B9ku"),
                E = n.n(w),
                C = function() {
                    function e(e, t) {
                        this.store = e, this.logger = t.withCategory("pubsub")
                    }
                    return e.prototype.subscribe = function(e) {
                        var t = this;
                        this.driver || (this.driver = E.a.getInstance("production"));
                        var n = this.wrapMessageCallback(e.onMessage),
                            i = this.store.getState();
                        return this.driver.Listen({
                                topic: e.topic,
                                auth: i.session && i.session.user && i.session.user.authToken,
                                success: function() {
                                    t.logger.debug("Subscribed to topic.", {
                                        opts: e
                                    }), e.success && e.success()
                                },
                                failure: function(n) {
                                    v.a.buildType === l.a.Production ? t.logger.warn("Failed to subscribe to topic.", {
                                        opts: e,
                                        err: n
                                    }) : t.logger.error(new Error("Failed to subscribe to topic."), "Failed to subscribe to topic.", {
                                        opts: e,
                                        err: n
                                    }), e.failure && e.failure(n)
                                },
                                message: n
                            }),
                            function() {
                                return t.unsubscribe(e, n)
                            }
                    }, e.prototype.unsubscribe = function(e, t) {
                        var n = this;
                        this.driver.Unlisten({
                            topic: e.topic,
                            success: function() {
                                n.logger.debug("Unsubscribed from topic.", {
                                    opts: e
                                })
                            },
                            failure: function(t) {
                                n.logger.error(new Error("Failed to unsubscribe from topic."), "Failed to unsubscribe from topic.", {
                                    opts: e,
                                    err: t
                                })
                            },
                            message: t
                        })
                    }, e.prototype.wrapMessageCallback = function(e) {
                        var t = this;
                        return function(n) {
                            var i;
                            try {
                                i = JSON.parse(n)
                            } catch (e) {
                                return void t.logger.error(e, "Failed to parse message.", {
                                    msg: n
                                })
                            }
                            e(i)
                        }
                    }, e
                }(),
                N = function() {
                    function e(e) {
                        this.currentPageComponentName = "", this.buildID = e.buildID, this.endpoint = e.endpoint, this.logger = e.logger.withCategory("sentinel"), this.session = e.session, this.store = e.store, this.logger.debug("Creating instance.", {
                            buildID: e.buildID,
                            endpoint: e.endpoint
                        })
                    }
                    return e.prototype.report = function(e) {
                        return m.b(this, void 0, void 0, function() {
                            var t, n, i, r;
                            return m.e(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        t = {
                                            buildId: this.buildID,
                                            clientTime: Date.now(),
                                            deviceId: this.session.deviceID,
                                            pageComponentName: this.currentPageComponentName,
                                            pageSessionId: this.session.pageviewID,
                                            logEntries: e,
                                            platform: "web",
                                            product: "twilight",
                                            userAgent: navigator.userAgent,
                                            userId: 0,
                                            username: ""
                                        };
                                        try {
                                            n = this.store && this.store.getState().session.user, t.userId = n ? Number(n.id) : 0, t.username = n ? n.login : ""
                                        } catch (e) {
                                            this.logger.warn("Failed to get user data from the global store.", e)
                                        }
                                        this.logger.debug("Reporting error.", t), i = 1, a.label = 1;
                                    case 1:
                                        if (!(i <= 3)) return [3, 6];
                                        a.label = 2;
                                    case 2:
                                        return a.trys.push([2, 4, , 5]), [4, fetch(this.endpoint, {
                                            method: "POST",
                                            headers: {
                                                "Content-Type": "application/json; charset=UTF-8",
                                                Accept: "application/json; charset=UTF-8"
                                            },
                                            body: JSON.stringify(t)
                                        })];
                                    case 3:
                                        return a.sent(), this.logger.debug("Report sent."), [2];
                                    case 4:
                                        return r = a.sent(), this.logger.warn("Failed to submit error report.", {
                                            attempt: i,
                                            maxAttempts: 3
                                        }, r), [3, 5];
                                    case 5:
                                        return ++i, [3, 1];
                                    case 6:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.setPageComponentName = function(e) {
                        this.currentPageComponentName = e
                    }, e
                }(),
                T = n("2xye"),
                _ = n("56gP"),
                R = "stats_sample_rate",
                O = "twilight",
                I = function() {
                    function e(e) {
                        this.logger = e.logger.withCategory("twilight-stats"), this.recordingEnabled = e.config.buildType === l.a.Production && e.dynamicSettings.get(R, 0) > 100 * Math.random(), this.statsClient = _.Stats.getInstance(e.config.buildType === l.a.Production ? "production" : "development", O)
                    }
                    return e.prototype.recordComponentError = function(e) {
                        if (this.recordingEnabled) try {
                            this.statsClient.logCounter("web.errors.component." + e, 1)
                        } catch (t) {
                            this.logger.error(t, "Unable to record component error", {
                                name: e
                            })
                        }
                    }, e.prototype.recordFailsafeError = function(e) {
                        if (this.recordingEnabled) try {
                            this.statsClient.logCounter("web.errors.failsafe." + e, 1)
                        } catch (e) {
                            this.logger.error(e, "Unable to record failsafe error")
                        }
                    }, e.prototype.recordSearchError = function(e, t) {
                        if (this.recordingEnabled) try {
                            this.statsClient.logCounter("features.algolia.error." + e, 1), this.statsClient.logTimer("features.algolia.error_duration." + e, t)
                        } catch (e) {
                            this.logger.error(e, "Unable to record search error")
                        }
                    }, e.prototype.recordSearchSuccess = function(e, t) {
                        if (this.recordingEnabled) try {
                            this.statsClient.logCounter("features.algolia.success." + e, 1), this.statsClient.logTimer("features.algolia.success_duration." + e, t)
                        } catch (e) {
                            this.logger.error(e, "Unable to record search success")
                        }
                    }, e
                }(),
                D = n("Two0"),
                P = function() {
                    function e(e, t) {
                        this.activeOperations = [], this.logger = e.withCategory("tmi");
                        var n = this.getConnectionOptions(t);
                        this.disabled = n.disabled, this.logger.debug("Creating TMI client", n), this.client = new D.a({
                            connection: n,
                            logger: this.logger
                        })
                    }
                    return e.prototype.setIdentity = function(e, t) {
                        this.logger.debug("Setting identity", {
                            username: e,
                            authToken: t
                        }), this.client.updateIdentity({
                            username: e,
                            authToken: t
                        })
                    }, e.prototype.connect = function() {
                        return m.b(this, void 0, void 0, function() {
                            var e, t;
                            return m.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (this.disabled) return [2];
                                        n.label = 1;
                                    case 1:
                                        return n.trys.push([1, 3, 4, 5]), this.pendingConnection ? this.logger.debug("Waiting on the pending connection...") : (this.logger.debug("Establishing a new connection to TMI..."), this.pendingConnection = this.client.connect()), [4, this.pendingConnection];
                                    case 2:
                                        return e = n.sent(), this.logger.debug("Connection completed", e), [3, 5];
                                    case 3:
                                        return t = n.sent(), this.logger.warn("Failed to connect, due to error", t), [3, 5];
                                    case 4:
                                        return this.pendingConnection = null, [7];
                                    case 5:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.disconnect = function() {
                        try {
                            this.client.disconnect()
                        } catch (e) {
                            this.logger.warn("Failed to disconnect client!", e)
                        }
                    }, e.prototype.getCurrentChannel = function() {
                        return this.currentChannel
                    }, e.prototype.join = function(e) {
                        return m.b(this, void 0, void 0, function() {
                            return m.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return this.disabled ? [2] : [4, this.setChannel(e)];
                                    case 1:
                                        return t.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.part = function() {
                        return m.b(this, void 0, void 0, function() {
                            return m.e(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        return [4, this.setChannel(null)];
                                    case 1:
                                        return e.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.setChannel = function(e) {
                        return m.b(this, void 0, void 0, function() {
                            var t, n, i, r, a = this;
                            return m.e(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        (t = this.logger.withCategory("setChannel").withCategory(e ? "join" : "part")).info("begin", {
                                            channel: e,
                                            prevChannel: this.currentChannel
                                        }), o.label = 1;
                                    case 1:
                                        o.trys.push([1, 6, , 7]), n = null, o.label = 2;
                                    case 2:
                                        return o.trys.push([2, , 4, 5]), n = new Promise(function(n) {
                                            return m.b(a, void 0, void 0, function() {
                                                var i, r;
                                                return m.e(this, function(a) {
                                                    switch (a.label) {
                                                        case 0:
                                                            return a.trys.push([0, 8, 9, 10]), this.activeOperations.length > 0 ? (t.info("awaiting active operations", {
                                                                channel: e,
                                                                prevChannel: this.currentChannel
                                                            }), [4, Promise.all(this.activeOperations)]) : [3, 2];
                                                        case 1:
                                                            a.sent(), a.label = 2;
                                                        case 2:
                                                            return [4, this.ensureConnected()];
                                                        case 3:
                                                            return a.sent(), this.currentChannel ? [4, this.client.partChannel(this.currentChannel)] : [3, 5];
                                                        case 4:
                                                            if (!a.sent().response.succeeded) throw new Error("failed to part channel");
                                                            i = e ? "parted previous channel" : "success", t.info(i, {
                                                                channel: e,
                                                                prevChannel: this.currentChannel
                                                            }), this.currentChannel = null, a.label = 5;
                                                        case 5:
                                                            return e ? [4, this.client.joinChannel(e)] : [3, 7];
                                                        case 6:
                                                            if (!a.sent().response.succeeded) throw new Error("failed to join channel");
                                                            t.info("success", {
                                                                channel: e
                                                            }), this.currentChannel = e, a.label = 7;
                                                        case 7:
                                                            return [3, 10];
                                                        case 8:
                                                            return r = a.sent(), t.warn(r, "operation failed to complete", {
                                                                channel: e,
                                                                prevChannel: this.currentChannel
                                                            }), [3, 10];
                                                        case 9:
                                                            return n(), [7];
                                                        case 10:
                                                            return [2]
                                                    }
                                                })
                                            })
                                        }), this.activeOperations.push(n), [4, n];
                                    case 3:
                                        return o.sent(), [3, 5];
                                    case 4:
                                        return n && (i = this.activeOperations.indexOf(n)) >= 0 && this.activeOperations.splice(i, 1), [7];
                                    case 5:
                                        return [3, 7];
                                    case 6:
                                        return r = o.sent(), t.warn("failed to set channel", {
                                            channel: e,
                                            err: r,
                                            previousChannel: this.currentChannel
                                        }), [3, 7];
                                    case 7:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.ensureConnected = function() {
                        return m.b(this, void 0, void 0, function() {
                            return m.e(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        return this.client.isConnected() ? [3, 2] : (this.logger.debug("Connection not yet established. Waiting on connect to complete..."), [4, this.connect()]);
                                    case 1:
                                        e.sent(), e.label = 2;
                                    case 2:
                                        if (!this.client.isConnected()) throw new Error("Failed to connect");
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.getConnectionOptions = function(e) {
                        var t = {
                                disabled: !1,
                                secure: !0,
                                port: 443,
                                server: e.tmiHost
                            },
                            n = this.getQueryStringOptions();
                        return null === n ? (this.logger.debug("Using options from configuration"), t) : "false" === n.server ? m.a({}, t, {
                            disabled: !0
                        }) : e.buildType !== l.a.Dev ? t : {
                            disabled: !1,
                            secure: null !== n.secure ? n.secure : t.secure,
                            port: null !== n.port ? n.port : t.port,
                            server: null !== n.server ? n.server : t.server
                        }
                    }, e.prototype.getQueryStringOptions = function() {
                        try {
                            var e = g.parse(window.location.search),
                                t = {
                                    server: void 0 !== e.tmi_host ? e.tmi_host : null,
                                    port: void 0 !== e.tmi_port ? +e.tmi_port : null,
                                    secure: void 0 !== e.tmi_secure ? "false" !== e.tmi_secure : null
                                };
                            if (null !== t.server || null !== t.port || null !== t.secure) return this.logger.debug("Using options from query string", t), t
                        } catch (e) {
                            this.logger.warn("Failed to parse connection options from query string. Default options will be used.", e)
                        }
                        return null
                    }, e
                }(),
                x = n("o4DC"),
                L = n("lmy8"),
                F = n("h9Rz"),
                M = n("+0NX"),
                A = n("uhBA"),
                U = n("dqQ1"),
                B = new x.b({
                    introspectionQueryResultData: {
                        __schema: {
                            types: [{
                                kind: "UNION",
                                name: "BitsOffer",
                                possibleTypes: [{
                                    name: "BitsAdOffer"
                                }, {
                                    name: "BitsBundleOffer"
                                }]
                            }, {
                                kind: "UNION",
                                name: "Activity",
                                possibleTypes: [{
                                    name: "PlayingActivity"
                                }, {
                                    name: "StreamingActivity"
                                }, {
                                    name: "WatchingActivity"
                                }]
                            }, {
                                kind: "UNION",
                                name: "FeedItem",
                                possibleTypes: [{
                                    name: "Post"
                                }, {
                                    name: "Video"
                                }, {
                                    name: "Stream"
                                }, {
                                    name: "Clip"
                                }]
                            }, {
                                kind: "UNION",
                                name: "PostEmbed",
                                possibleTypes: [{
                                    name: "Video"
                                }, {
                                    name: "Clip"
                                }, {
                                    name: "Stream"
                                }, {
                                    name: "PhotoOEmbed"
                                }, {
                                    name: "VideoOEmbed"
                                }]
                            }, {
                                kind: "INTERFACE",
                                name: "Panel",
                                possibleTypes: [{
                                    name: "DefaultPanel"
                                }, {
                                    name: "ExtensionPanel"
                                }]
                            }, {
                                kind: "INTERFACE",
                                name: "Directory",
                                possibleTypes: [{
                                    name: "Game"
                                }, {
                                    name: "Community"
                                }]
                            }]
                        }
                    }
                }),
                j = n("t5Gm"),
                z = function() {
                    function e(e) {
                        this.authToken = null, this.batchID = 0, this.eventEmitter = new A.EventEmitter, this.queryID = 0, this.config = e.config, this.dynamicSettings = e.dynamicSettings, this.logger = e.logger.withCategory("apollo"), this.store = e.store, this.session = e.session, this.client = this.createApolloClient()
                    }
                    return e.prototype.addQueryMetricsListener = function(e) {
                        this.eventEmitter.addListener("query-metrics", e)
                    }, e.prototype.removeQueryMetricsListener = function(e) {
                        this.eventEmitter.removeListener("query-metrics", e)
                    }, e.prototype.createApolloClient = function() {
                        var e = this.createBatchHTTPLink();
                        return this.dynamicSettings.get("persisted_queries_enabled", !1) && (e = Object(M.a)().concat(e)), new L.a({
                            cache: new x.a({
                                fragmentMatcher: B
                            }),
                            link: e,
                            queryDeduplication: !0
                        })
                    }, e.prototype.collectQueryStats = function(e, t) {
                        return m.b(this, void 0, void 0, function() {
                            var n, i, r = this;
                            return m.e(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        return a.trys.push([0, 2, , 3]), [4, e.json()];
                                    case 1:
                                        return n = a.sent(), [3, 3];
                                    case 2:
                                        return i = a.sent(), this.logger.error(i, "Unable to parse response json"), [2];
                                    case 3:
                                        return setTimeout(function() {
                                            var e = n.map(function(e, n) {
                                                var i = t.requests[n];
                                                return e.extensions && e.extensions.durationMilliseconds && !e.status ? {
                                                    queryID: ++r.queryID,
                                                    durationMs: e.extensions.durationMilliseconds,
                                                    operationName: e.extensions.operationName,
                                                    variables: i.variables
                                                } : {
                                                    queryID: ++r.queryID,
                                                    operationName: "<extensions field missing>",
                                                    durationMs: 0
                                                }
                                            });
                                            r.eventEmitter.listeners("query-metrics", !0) && r.eventEmitter.emit("query-metrics", {
                                                batchID: t.id,
                                                batchTimestamp: t.timestamp,
                                                queries: e
                                            })
                                        }), [2]
                                }
                            })
                        })
                    }, e.prototype.createBatchHTTPLink = function() {
                        var e = this;
                        return new F.a({
                            batchMax: 20,
                            uri: this.config.graphqlEndpoint,
                            includeExtensions: !0,
                            fetch: function(t, n) {
                                var i = {
                                        "Client-Id": e.config.authSettings.clientID,
                                        "X-Device-Id": e.session.deviceID
                                    },
                                    r = e.store.getState();
                                r.session && (i["Accept-Language"] = r.session.locale), e.authToken && (i.Authorization = "OAuth " + e.authToken), n.headers = i;
                                var a = {
                                    id: ++e.batchID,
                                    timestamp: performance.timing.navigationStart + performance.now(),
                                    requests: JSON.parse(n.body)
                                };
                                return fetch(t, n).then(function(t) {
                                    return m.b(e, void 0, void 0, function() {
                                        var e, n, i, r;
                                        return m.e(this, function(o) {
                                            switch (o.label) {
                                                case 0:
                                                    return t.status && (t.status >= 400 || t.status < 200) ? 401 !== t.status ? [3, 4] : this.config.embedded ? (this.logger.warn("Received 401 response from GraphQL."), [3, 3]) : [3, 1] : [3, 7];
                                                case 1:
                                                    return this.logger.warn("Received 401 response from GraphQL, logging user out."), Object(j.a)(), [4, Object(U.b)(this.authToken, {
                                                        config: this.config,
                                                        logger: this.logger
                                                    })];
                                                case 2:
                                                    return o.sent(), window.location.reload(!0), [2, t];
                                                case 3:
                                                    return [3, 6];
                                                case 4:
                                                    return n = (e = this.logger).error, i = [new Error("Received non-200 response from GraphQL."), "Received non-200 response from GraphQL."], r = {
                                                        status: t.status
                                                    }, [4, t.clone().text()];
                                                case 5:
                                                    n.apply(e, i.concat([(r.body = o.sent(), r)])), o.label = 6;
                                                case 6:
                                                    return [2, t];
                                                case 7:
                                                    return [4, this.collectQueryStats(t.clone(), a)];
                                                case 8:
                                                    return o.sent(), [2, t]
                                            }
                                        })
                                    })
                                })
                            }
                        })
                    }, e
                }(),
                W = function() {
                    function e(e) {
                        this.logger = e.withCategory("integrations"), window.__twilightIntegrations ? (this.desklight = this.loadIntegration("desklight"), this.spotlight = this.loadIntegration("spotlight")) : this.logger.debug("No integrations found.")
                    }
                    return e.prototype.loadIntegration = function(e) {
                        var t = window.__twilightIntegrations && window.__twilightIntegrations[e];
                        if (t)
                            if ("function" == typeof t.getMetadata) {
                                var n = t.getMetadata();
                                if (n && "object" == typeof n && "string" == typeof n.name && "string" == typeof n.version) {
                                    if (n.name === e) return this.logger.info("Loaded integration.", {
                                        name: e,
                                        metadata: n
                                    }), t;
                                    this.logger.warn("Integration names do not match.", {
                                        name: e,
                                        metadata: n
                                    })
                                } else this.logger.warn("Invalid integration metadata.", {
                                    name: e,
                                    metadata: n
                                })
                            } else this.logger.warn("Integration does not match interface.", {
                                name: e
                            });
                        else this.logger.debug("Integration not found.", {
                            name: e
                        })
                    }, e
                }(),
                V = n("fvjX"),
                H = n("TdMD"),
                G = n.n(H),
                q = function() {
                    function e(e) {
                        var t = this;
                        this.reducers = {}, this.rootReducer = function(e, n) {
                            e || (e = {});
                            var i, r = {},
                                a = !1;
                            switch (n.type) {
                                case "twilight.registerReducer":
                                    if (void 0 === (s = t.reducers[n.name](e[n.name], {
                                            type: "@@INIT"
                                        }))) throw new Error("Reducer for key " + n.name + " returned undefined!");
                                    r = m.a({}, e, ((i = {})[n.name] = s, i)), a = !0;
                                    break;
                                default:
                                    for (var o in t.reducers)
                                        if (t.reducers[o]) {
                                            var s;
                                            if (void 0 === (s = t.reducers[o](e[o], n))) throw new Error("Reducer for key " + o + " returned undefined!");
                                            r[o] = s, a = a || s !== e[o]
                                        }
                            }
                            return a ? r : e
                        }, this.reduxStore = Object(V.e)(this.rootReducer, (e.buildType !== l.a.Production && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || V.d)(Object(V.a)(G.a)))
                    }
                    return e.prototype.getReduxStore = function() {
                        return this.reduxStore
                    }, e.prototype.getState = function() {
                        return this.reduxStore.getState()
                    }, e.prototype.dispatch = function(e) {
                        return this.reduxStore.dispatch(e)
                    }, e.prototype.registerReducer = function(e, t) {
                        if (this.reducers[e]) throw Error("Reducer already registered: " + e);
                        this.reducers[e] = t, this.dispatch({
                            type: "twilight.registerReducer",
                            name: e
                        })
                    }, e
                }(),
                Q = n("NdhY"),
                K = n("oUNp"),
                Y = n("6LFT"),
                X = n.n(Y),
                $ = n("h0rt"),
                J = n.n($);
            ! function(e) {
                e[e.Debug = 1] = "Debug", e[e.Info = 2] = "Info", e[e.Warn = 3] = "Warn", e[e.Error = 4] = "Error", e[e.Fatal = 5] = "Fatal"
            }(i || (i = {}));
            var Z, ee, te, ne, ie, re, ae, oe, se, le, ce, de, ue, pe, me, he = function() {
                    function e(e, t) {
                        var n = this;
                        if (this.eventEmitter = new A.EventEmitter, this.addMessageListener = function(e) {
                                n.eventEmitter.addListener("message", e)
                            }, this.removeMessageListener = function(e) {
                                n.eventEmitter.removeListener("message", e)
                            }, this.onWindowError = function(e) {
                                e.error ? (e.preventDefault(), n.write(i.Error, "Uncaught error.", void 0, e.error, "uncaught")) : n.write(i.Warn, "Uncaught error, but the error object is null. This is usually caused by a browser permission issue. Please check the browser console.", [{
                                    event: e
                                }], new Error("Uncaught error, but the error object is null."), "uncaught")
                            }, e && t) throw new Error("Cannot pass both `options` and `childOptions` arguments.");
                        e ? (this.buildType = e.buildType, this.buffer = [], this.minConsoleLogLevel = e.minConsoleLogLevel, this.maxBufferSize = e.maxBufferSize || 1e3) : t && (this.category = t.category, this.rootLogger = t.rootLogger)
                    }
                    return e.prototype.addWindowErrorListener = function() {
                        if (this.rootLogger) throw new Error("Attempted to add child logger to window error listeners.");
                        this.windowErrorListenerAdded ? this.warn("Attempted to add window error listener multiple times.") : (this.windowErrorListenerAdded = !0, window.addEventListener("error", this.onWindowError), this.debug("Window error listener added."))
                    }, e.prototype.withCategory = function(t) {
                        return new e(null, {
                            rootLogger: this.rootLogger || this,
                            category: (this.category ? this.category + "." : "") + t
                        })
                    }, e.prototype.debug = function(e) {
                        for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                        this.write(i.Debug, e, t)
                    }, e.prototype.info = function(e) {
                        for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                        this.write(i.Info, e, t)
                    }, e.prototype.warn = function(e) {
                        for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                        this.write(i.Warn, e, t)
                    }, e.prototype.error = function(e, t) {
                        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];
                        this.write(i.Error, t, n, e, "caught")
                    }, e.prototype.fatal = function(e, t) {
                        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];
                        this.write(i.Fatal, t, n, e, "fatal")
                    }, e.prototype.flush = function() {
                        if (this.rootLogger) throw new Error("Cannot flush a child logger.");
                        var e = this.buffer;
                        return this.buffer = [], this.messagesTruncated && e.unshift({
                            time: e[0].time - 1,
                            level: i[i.Info].toLowerCase(),
                            message: "Log truncated.",
                            args: [{
                                firstMessageTime: this.firstMessageTime,
                                messagesTruncated: this.messagesTruncated,
                                truncationEvents: this.truncationEvents
                            }]
                        }), e
                    }, e.prototype.write = function(e, t, n, r, a, o, s) {
                        void 0 === n && (n = []), void 0 === s && (s = !1), this.rootLogger ? this.rootLogger.write(e, t, n, r, a, this.category, s) : (this.buffer.length === this.maxBufferSize && (this.firstMessageTime || (this.firstMessageTime = this.buffer[0].time), this.truncationEvents = (this.truncationEvents || 0) + 1, this.messagesTruncated = (this.messagesTruncated || 0) + this.buffer.splice(0, Math.ceil(this.maxBufferSize / 10)).length), o = o || this.category, e >= this.minConsoleLogLevel && this.writeToConsole(e, o, t, n, r), e !== i.Debug && this.writeToBuffer(e, o, t, n, r, a, s), !this.onError || e !== i.Error && e !== i.Fatal || this.onError(this))
                    }, e.prototype.writeToBuffer = function(e, t, n, r, a, o, s) {
                        void 0 === s && (s = !1);
                        var c = [],
                            d = {
                                time: Date.now(),
                                level: i[e].toLowerCase(),
                                message: n
                            };
                        if (r && r.length > 0 && (d.args = r.map(function(e, t) {
                                if (e instanceof Error) return {
                                    name: e.name,
                                    message: e.message,
                                    stack: e.stack || null
                                };
                                if ("object" == typeof e) try {
                                    return JSON.parse(JSON.stringify(e))
                                } catch (e) {
                                    return c.push({
                                        message: n,
                                        argIndex: t,
                                        err: e
                                    }), "<unserializable>"
                                } else if ("function" == typeof e) return e.name ? "<function " + e.name + ">" : "<anonymous function>";
                                return e
                            })), t && (d.category = t), a && (d.errors = [{
                                name: a.name,
                                message: a.message,
                                stack: a.stack || null,
                                type: o || "caught"
                            }]), this.buffer.push(d), !s)
                            for (var u = 0, p = c; u < p.length; u++) {
                                var m = p[u];
                                this.buildType === l.a.Production ? this.write(i.Warn, "Failed to serialize argument for log message.", [{
                                    message: m.message,
                                    argIndex: m.argIndex,
                                    err: m.err
                                }], void 0, void 0, void 0, !0) : this.write(i.Error, "Failed to serialize argument for log message.", [{
                                    message: m.message,
                                    argIndex: m.argIndex
                                }], m.err, "caught", t, !0)
                            }
                        this.eventEmitter.emit("message", d)
                    }, e.prototype.writeToConsole = function(e, t, n, r, a) {
                        var o = (new Date).toLocaleTimeString();
                        t = t ? "[" + t + "] " : "", n = o + " [" + i[e].toUpperCase() + "] " + t + n, e === i.Fatal && (e = i.Error);
                        var s = (console[i[e].toLowerCase()] || console.log).bind(console);
                        a ? s.apply(void 0, [n, a].concat(r)) : s.apply(void 0, [n].concat(r))
                    }, e
                }(),
                fe = n("f00E"),
                ge = n("3yfl"),
                ve = ["0000000000000000", "00000000000000000000000000000000"],
                be = function() {
                    function e(e) {
                        var t = this;
                        this.onHistoryChange = function() {
                            t.pageviewID = t.getUniqueID()
                        }, this.storage = e.storage, this.tempStorage = e.tempStorage, this.benchmarkID = this.getOrCreateBenchmarkSessionID(), this.deviceID = this.getOrCreateDeviceID(), this.localStorageDeviceID = this.getOrCreateLocalStorageDeviceID(), this.pageviewID = this.getUniqueID(), this.tabID = this.getOrCreateSessionStorageUniqueID(), e.history.listen(this.onHistoryChange)
                    }
                    return e.prototype.getUniqueID = function() {
                        return Object(fe.b)().substring(0, 16)
                    }, e.prototype.getOrCreateDeviceID = function() {
                        var e = h.get("unique_id");
                        return e && this.isValidDeviceID(e) ? e : (e = Object(fe.b)().substring(0, 16), h.set("unique_id", e, {
                            expires: 3650,
                            domain: Object(ge.a)(),
                            secure: "https:" === window.location.protocol
                        }), e)
                    }, e.prototype.getOrCreateBenchmarkSessionID = function() {
                        return h.get("twilight.automation_session_id") || Object(fe.b)().substring(0, 16)
                    }, e.prototype.getOrCreateSessionStorageUniqueID = function() {
                        var e = this.tempStorage.get("session_storage_unique_id", "");
                        return e || (e = Object(fe.b)().substring(0, 16), this.tempStorage.set("session_storage_unique_id", e), e)
                    }, e.prototype.getOrCreateLocalStorageDeviceID = function() {
                        var e = this.storage.get("local_storage_device_id", "");
                        return e || (e = Object(fe.b)().substring(0, 16), this.storage.set("local_storage_device_id", e), e)
                    }, e.prototype.isValidDeviceID = function(e) {
                        return e.length >= 16 && !ve.includes(e)
                    }, e
                }(),
                ye = function() {
                    function e(e, t) {
                        this.cache = {}, this.storage = e, this.logger = t
                    }
                    return e.prototype.get = function(e, t) {
                        var n = null;
                        try {
                            n = this.storage.getItem(e)
                        } catch (t) {
                            this.logger.warn("Failed to load stored value.", t, {
                                key: e
                            }), n = this.cache[e] || null
                        }
                        if (null === n || "undefined" === n) return t;
                        try {
                            return JSON.parse(n)
                        } catch (i) {
                            return this.logger.warn("Failed to deserialize stored value, removing from storage.", i, {
                                key: e,
                                value: n
                            }), this.remove(e), t
                        }
                    }, e.prototype.getOptional = function(e) {
                        return this.get(e, null)
                    }, e.prototype.set = function(e, t) {
                        var n;
                        try {
                            n = JSON.stringify(t)
                        } catch (n) {
                            throw this.logger.warn("Failed to serialize value.", n, {
                                key: e,
                                value: t
                            }), n
                        }
                        this.cache[e] = n;
                        try {
                            this.storage.setItem(e, n)
                        } catch (i) {
                            this.logger.warn("Failed to save value.", i, {
                                key: e,
                                value: t,
                                serializedValue: n
                            })
                        }
                    }, e.prototype.remove = function(e) {
                        delete this.cache[e];
                        try {
                            this.storage.removeItem(e)
                        } catch (t) {
                            this.logger.warn("Failed to remove key from storage.", t, {
                                key: e
                            })
                        }
                    }, e.prototype.clear = function() {
                        this.cache = {};
                        try {
                            this.storage.clear()
                        } catch (e) {
                            this.logger.warn("Failed to clear storage.", e)
                        }
                    }, e
                }(),
                ke = n("VSCq");

            function Se(e) {
                Z = new we(e), ee = Z.config, te = Z.dynamicSettings, ne = Z.intl.formatDate, ie = Z.intl.formatMessage, re = Z.intl.formatNumber, ae = Z.intl.formatNumberShort, oe = Z.intl.formatPastRelativeDate, se = Z.intl.formatRelativeDate, le = Z.intl.formatTime, ce = Z.logger, de = Z.pubsub, Z.stats, ue = Z.storage, pe = Z.tempStorage, me = Z.tracking
            }
            n.d(t, "p", function() {
                return Z
            }), n.d(t, "a", function() {
                return ee
            }), n.d(t, "b", function() {
                return te
            }), n.d(t, "c", function() {
                return ne
            }), n.d(t, "d", function() {
                return ie
            }), n.d(t, "e", function() {
                return re
            }), n.d(t, "f", function() {
                return ae
            }), n.d(t, "g", function() {
                return oe
            }), n.d(t, "h", function() {
                return se
            }), n.d(t, "i", function() {
                return le
            }), n.d(t, "k", function() {
                return ce
            }), n.d(t, "l", function() {
                return de
            }), n.d(t, "m", function() {
                return ue
            }), n.d(t, "n", function() {
                return pe
            }), n.d(t, "o", function() {
                return me
            }), n.d(t, "j", function() {
                return Se
            });
            var we = function() {
                function e(e) {
                    var t, n, r, a, o = this;
                    this.history = (n = t ? J()() : X()(), r = n.push.bind(n), a = /^([^#?]+)?(\?[^#]+)?(\#.+)?$/i, n.push = function(e, t) {
                        var i = n.location.pathname,
                            o = "",
                            s = "";
                        if ("string" == typeof e) {
                            var l = a.exec(e);
                            if (!l) return void r(e, t);
                            l[1] && (i = l[1]), l[2] && (o = l[2]), l[3] && (s = l[3])
                        } else e.pathname && (i = e.pathname), e.search && ((o = e.search).startsWith("?") || (o = "?" + o)), e.hash && ((s = e.hash).startsWith("#") || (s = "#" + s));
                        (i === n.location.pathname || !i.startsWith("/") && n.location.pathname.endsWith("/" + i)) && o === n.location.search && s === n.location.hash ? n.replace(e, t) : r(e, t)
                    }, n), this.pageTitle = "Twitch", this.config = e, this.store = new q(this.config);
                    var s = this.config.buildType === l.a.Production ? i.Error : i.Debug;
                    try {
                        var c = localStorage.getItem(this.config.forceMinConsoleLogLevelKey);
                        null !== c && (s = Number(c))
                    } catch (e) {
                        console.error("Failed to get log level override from local storage.", {
                            err: e,
                            key: this.config.forceMinConsoleLogLevelKey
                        })
                    }
                    this.logger = new he({
                        minConsoleLogLevel: s,
                        maxBufferSize: 1e3,
                        buildType: this.config.buildType
                    }), this.logger.addWindowErrorListener(), this.storage = new ye(localStorage, this.logger.withCategory("storage")), this.tempStorage = new ye(sessionStorage, this.logger.withCategory("tempStorage")), this.dynamicSettings = new K.a({
                        logger: this.logger,
                        storage: this.storage
                    }), this.stats = new I({
                        config: this.config,
                        dynamicSettings: this.dynamicSettings,
                        logger: this.logger
                    }), this.session = new be({
                        history: this.history,
                        storage: this.storage,
                        tempStorage: this.tempStorage
                    }), this.config.embedded || (this.sentinel = new N({
                        buildID: e.buildID,
                        endpoint: e.sentinelEndpoint,
                        logger: this.logger,
                        session: this.session,
                        store: this.store
                    }), this.logger.onError = function(e) {
                        o.sentinel.report(e.flush())
                    }), this.adBlockDetector = new p({
                        dynamicSettings: this.dynamicSettings,
                        storage: this.storage,
                        logger: this.logger
                    }), this.adBlockDetector.addTwitchGlobal(), this.adBlockDetector.detectAdBlock(), this.apollo = new z({
                        config: this.config,
                        dynamicSettings: this.dynamicSettings,
                        logger: this.logger,
                        session: this.session,
                        store: this.store
                    }), this.tracking = new T.Spade({
                        apollo: this.apollo,
                        config: this.config,
                        endpoint: this.dynamicSettings.get("spade_url", e.defaultSpadeEndpoint),
                        logger: this.logger,
                        session: this.session,
                        store: this.store,
                        adBlockDetector: this.adBlockDetector
                    }), this.pubsub = new C(this.store, this.logger), this.intl = new ke.TwitchIntl(e.locales), this.config.embedded || (this.benchmarking = new Q.a({
                        apollo: this.apollo,
                        config: this.config,
                        dynamicSettings: this.dynamicSettings,
                        logger: this.logger,
                        sentinel: this.sentinel,
                        session: this.session,
                        stats: this.stats,
                        storage: this.storage,
                        store: this.store,
                        tracking: this.tracking,
                        window: window
                    })), this.experiments = new S({
                        dynamicSettings: this.dynamicSettings,
                        logger: this.logger,
                        session: this.session,
                        store: this.store,
                        storage: this.storage,
                        tracking: this.tracking
                    }), this.tmi = new P(this.logger, this.config), this.integrations = new W(this.logger)
                }
                return e.prototype.mount = function(e, t) {
                    o.render(this.wrap(e), t)
                }, e.prototype.wrap = function(e) {
                    return r.createElement(a.ApolloProvider, {
                        client: this.apollo.client
                    }, r.createElement(s.a, {
                        store: this.store.getReduxStore()
                    }, e))
                }, e.prototype.setPageTitle = function(e) {
                    this.pageTitle = e ? e + " - Twitch" : "Twitch", this.updateDocumentTitle()
                }, e.prototype.setBadgeCount = function(e) {
                    this.badgeCount = e, this.updateDocumentTitle()
                }, e.prototype.updateDocumentTitle = function() {
                    if (this.badgeCount > 0) {
                        var e = this.badgeCount > 99 ? "99+" : "" + this.badgeCount;
                        document.title = "(" + e + ") " + this.pageTitle
                    } else document.title = this.pageTitle
                }, e
            }()
        },
        "5DzM": function(e, t, n) {},
        "5KRU": function(e, t, n) {},
        "5b/9": function(e, t, n) {},
        "5e4V": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            });
            var i, r = n("p46w"),
                a = n("3yfl"),
                o = "language";

            function s() {
                return void 0 === i && (i = r.get(o) || null), i
            }

            function l(e) {
                var t = [];
                if (!e || e.includeChosenLanguage) {
                    var n = s();
                    n && t.push(n)
                }
                return navigator.languages ? t = t.concat(navigator.languages.slice()) : navigator.language ? t.push(navigator.language) : navigator.userLanguage && t.push(navigator.userLanguage), t
            }

            function c(e) {
                i = e, r.set(o, e, {
                    expires: 365,
                    domain: Object(a.a)(),
                    secure: "https:" === window.location.protocol
                })
            }
        },
        "5hPa": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Search_SearchGameResultCard_Game"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "name"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "game"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "name"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "name"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "boxArtURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "40"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "height"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "55"
                                        }
                                    }],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 115
                }
            };
            n.loc.source = {
                body: "query Search_SearchGameResultCard_Game($name: String!) {\ngame(name: $name) {\nid\nboxArtURL(width: 40 height: 55)\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "5jJa": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "GDPRConsent"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isMinimumGDPRConsentAge"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isFromEEA"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 90
                }
            };
            n.loc.source = {
                body: "query GDPRConsent {\ncurrentUser {\nid\nisMinimumGDPRConsentAge\n}\nrequestInfo {\nisFromEEA\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "5zC2": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("1hWM"),
                a = n("17x9"),
                o = n("q1tI"),
                s = n("/7QA"),
                l = n("GnwI"),
                c = n("eFQ3"),
                d = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.setIframeContainer = function(e) {
                            t.iframeContainer = e
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        var e = this.context.registerReceiver;
                        e ? this.unregister = e(this) : s.j.warn("<ExtensionFrame /> initialized missing a <ScrollableArea /> provider"), this.props.latencyTracking.reportInteractive();
                        var t = this.props,
                            n = t.languageCode,
                            i = t.locale;
                        this.extensionFrameAPI = new r.ExtensionFrame({
                            anchor: this.props.anchor,
                            channelId: parseInt(this.props.channelID, 10),
                            loginId: this.props.loginID ? parseInt(this.props.loginID, 10) : null,
                            dobbin: {
                                trackEvent: s.n.track.bind(s.n)
                            },
                            extension: this.props.extension,
                            iframeClassName: this.props.className,
                            language: n,
                            locale: i,
                            mode: this.props.extensionMode,
                            parentElement: this.iframeContainer,
                            platform: r.ExtensionPlatform.Web,
                            trackingProperties: {
                                channel: this.props.channelName,
                                device_id: s.o.session.deviceID,
                                login: this.props.login,
                                platform: s.o.tracking.getPlatform(),
                                player_type: c.b.Site
                            },
                            onBeginPurchase: this.props.onBeginPurchase,
                            features: {
                                sharePubsub: !0
                            }
                        }), this.props.saveExtensionAPI && this.props.saveExtensionAPI(this.extensionFrameAPI)
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister && this.unregister(), this.extensionFrameAPI.destroy()
                    }, t.prototype.render = function() {
                        return o.createElement("div", {
                            ref: this.setIframeContainer,
                            "data-test-selector": "iframe_container_selector"
                        })
                    }, t.prototype.checkVisible = function() {
                        this.extensionFrameAPI && this.extensionFrameAPI.visibilityChanged()
                    }, t.contextTypes = {
                        registerReceiver: a.func
                    }, t
                }(o.Component),
                u = Object(l.c)("ExtensionFrame")(d),
                p = n("lBSt");

            function m(e) {
                return function(t) {
                    return function(n) {
                        function a() {
                            var t = null !== n && n.apply(this, arguments) || this;
                            return t.state = {
                                data: null,
                                loading: !1
                            }, t.fetchExtensions = function(n) {
                                return i.b(t, void 0, void 0, function() {
                                    var t, a;
                                    return i.e(this, function(i) {
                                        switch (i.label) {
                                            case 0:
                                                this.setState({
                                                    loading: !0
                                                }), t = null, i.label = 1;
                                            case 1:
                                                return i.trys.push([1, 3, , 4]), n = n || e.options(this.props).variables.channelID, [4, r.extensionService.getInstalledExtensions(n)];
                                            case 2:
                                                return a = i.sent(), t = Object(p.extensionInstallationsFromRest)(a), [3, 4];
                                            case 3:
                                                return i.sent(), this.setState({
                                                    loading: !1,
                                                    error: "Failed to load data."
                                                }), [3, 4];
                                            case 4:
                                                return this.setState({
                                                    loading: !1,
                                                    data: t
                                                }), [2]
                                        }
                                    })
                                })
                            }, t
                        }
                        return i.d(a, n), a.prototype.componentDidMount = function() {
                            if (!this.shouldSkip(this.props)) {
                                var t = e.options(this.props).variables.channelID;
                                this.fetchExtensions(t)
                            }
                        }, a.prototype.componentWillReceiveProps = function(t) {
                            if (!this.shouldSkip(t)) {
                                var n = e.options(this.props).variables.channelID,
                                    i = e.options(t).variables.channelID;
                                n !== i && this.fetchExtensions(i)
                            }
                        }, a.prototype.render = function() {
                            if (this.shouldSkip(this.props)) return o.createElement(t, i.a({}, this.props));
                            var n, r = ((n = {})[e.name || "data"] = i.a({
                                refetch: this.fetchExtensions
                            }, this.state), n);
                            return o.createElement(t, i.a({}, this.props, r))
                        }, a.prototype.shouldSkip = function(t) {
                            return void 0 !== e.skip && ("function" == typeof e.skip ? e.skip(t) : e.skip)
                        }, a
                    }(o.Component)
                }
            }
            var h = n("/MKj"),
                f = n("kRBY"),
                g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        r.extensionService.setEnvironmentOptions({
                            apiUrl: s.a.apiBaseURL
                        }), this.setExtensionServiceAuthToken(this.props)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        e.authToken !== this.props.authToken && this.setExtensionServiceAuthToken(e)
                    }, t.prototype.shouldComponentUpdate = function() {
                        return !1
                    }, t.prototype.render = function() {
                        return null
                    }, t.prototype.setExtensionServiceAuthToken = function(e) {
                        var t = e.authToken || "";
                        r.extensionService.setEnvironmentOptions({
                            authToken: t
                        })
                    }, t
                }(o.Component);

            function v(e) {
                return {
                    authToken: Object(f.a)(e)
                }
            }
            var b = Object(h.b)(v)(g);
            n.d(t, !1, function() {
                return "iframe_container_selector"
            }), n.d(t, !1, function() {
                return d
            }), n.d(t, "a", function() {
                return u
            }), n.d(t, "c", function() {
                return m
            }), n.d(t, !1, function() {
                return v
            }), n.d(t, "b", function() {
                return b
            })
        },
        "5zXJ": function(e, t, n) {
            "use strict";
            n.d(t, "o", function() {
                return a
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "i", function() {
                return c
            }), n.d(t, "j", function() {
                return d
            }), n.d(t, "l", function() {
                return u
            }), n.d(t, "m", function() {
                return p
            }), n.d(t, "k", function() {
                return m
            }), n.d(t, "n", function() {
                return h
            }), n.d(t, "g", function() {
                return f
            }), n.d(t, "h", function() {
                return g
            }), n.d(t, "d", function() {
                return v
            }), n.d(t, "e", function() {
                return b
            }), n.d(t, "f", function() {
                return y
            });
            var i, r = n("uYEN"),
                a = {
                    ERROR_DISPLAY_TIMEOUT: 5e3,
                    GET_BALANCE_RATE_LIMIT: 5e3,
                    UNDO_PROMPT_DURATION: 5e3
                },
                o = "https://d3aqoihi2n8ty8.cloudfront.net",
                s = o + "/cheer",
                l = o + "/actions",
                c = 1e4,
                d = 8e5,
                u = 1e5,
                p = 25e4,
                m = 500,
                h = 1e3,
                f = "cheer",
                g = r.a.Purple,
                v = "FIRST_PARTY",
                b = "THIRD_PARTY",
                y = ((i = {})[r.a.Gray] = "#979797", i[r.a.Purple] = "#9c3ee8", i[r.a.Green] = "#1db2a5", i[r.a.Blue] = "#0099fe", i[r.a.Red] = "#f43021", i[r.a.Yellow] = "#f3a71a", i)
        },
        "60o1": function(e, t, n) {
            "use strict";

            function i(e, t) {
                var n = e,
                    i = !1;
                return n ? n.split("").map(function(e) {
                    return e.charCodeAt(0) > 127
                }).reduce(function(e, t) {
                    return e || t
                }) && (i = !0) : n = t, {
                    userDisplayName: n,
                    isIntl: i
                }
            }
            n.d(t, "a", function() {
                return i
            })
        },
        "6Add": function(e, t, n) {},
        "6qmu": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TopNav_UserMenu_Dropdown"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "availability"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "settings"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isSharingActivity"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "visibility"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isStaff"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 144
                }
            };
            n.loc.source = {
                body: "query TopNav_UserMenu_Dropdown {\ncurrentUser {\nid\ndisplayName\nlogin\navailability\nsettings {\nisSharingActivity\nvisibility\n}\nroles {\nisStaff\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        74: function(e, t) {},
        75: function(e, t) {},
        "75DT": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("uhBA"),
                a = n("6BPK"),
                o = n("L9xt"),
                s = n("GlMZ");
            var l = n("5e4V"),
                c = n("E5z5");
            n.d(t, "a", function() {
                return d
            });
            var d = function() {
                function e(e) {
                    var t = this;
                    this.eventEmitter = new r.EventEmitter, this.eventQueue = new Array, this.hasCheckedInitialReferrer = !1, this.trackingDataCache = {
                        platform: o.SpadePlatform.Web,
                        videoPlayerData: {
                            followCTAVisible: !1
                        }
                    }, this.referrerURL = "", this.firstBatchSubmitted = !1, this.getEventQueue = function() {
                        return t.eventQueue
                    }, this.getEndpoint = function() {
                        return t.endpoint
                    }, this.getLastPageview = function() {
                        return t.trackingDataCache.lastPageView
                    }, this.getPlatform = function() {
                        return t.trackingDataCache.platform
                    }, this.getVideoPlayerTrackingData = function() {
                        return t.trackingDataCache.videoPlayerData
                    }, this.getOrQueryDeviceFingerprint = function() {
                        return i.b(t, void 0, void 0, function() {
                            var e = this;
                            return i.e(this, function(t) {
                                return this.trackingDataCache.deviceFingerprint ? (this.logger.debug("Using cached device fingerprint"), [2, this.trackingDataCache.deviceFingerprint]) : this.deviceFingerprintPromise ? (this.logger.debug("Awaiting existing device fingerprint promise"), [2, this.deviceFingerprintPromise]) : (this.deviceFingerprintPromise = new Promise(function(t) {
                                    e.logger.debug("Querying device fingerprint");
                                    try {
                                        (new a.Fingerprint2).get(function(n, i) {
                                            e.trackingDataCache.deviceFingerprint = n, e.logger.debug("Identified device fingerprint", {
                                                fingerprint: n
                                            }), t(n);
                                            var r = {};
                                            i.forEach(function(e) {
                                                r["fp_" + e.key] = e.valueHash
                                            }), e.track(o.SpadeEventType.BrowserFingerprint, r)
                                        })
                                    } catch (n) {
                                        e.logger.debug("Error identifying fingerprint:", n), t(null)
                                    }
                                }), [2, this.deviceFingerprintPromise])
                            })
                        })
                    }, this.getOrQueryEventData = function() {
                        return i.b(t, void 0, void 0, function() {
                            var e, t;
                            return i.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return this.trackingDataCache.eventData ? (this.logger.debug("Using cached event data"), [2, this.trackingDataCache.eventData]) : [3, 1];
                                    case 1:
                                        return this.eventDataPromise ? (this.logger.debug("Awaiting existing promise"), [4, this.eventDataPromise]) : [3, 3];
                                    case 2:
                                        return [2, (t = n.sent()).data];
                                    case 3:
                                        return e = this.store.getState(), this.isLoggedIn(e) ? (this.logger.debug("Querying event data to submit events..."), this.eventDataPromise = this.apollo.client.query({
                                            query: c
                                        }), [4, this.eventDataPromise]) : [3, 5];
                                    case 4:
                                        (t = n.sent()).data && !t.loading && (this.logger.debug("Event data query completed."), this.trackingDataCache.eventData = t.data), n.label = 5;
                                    case 5:
                                        return this.trackingDataCache.eventData || (this.trackingDataCache.eventData = {
                                            currentUser: {
                                                id: null,
                                                hasTurbo: !1,
                                                hasPrime: !1,
                                                language: null,
                                                login: null
                                            }
                                        }), [2, this.trackingDataCache.eventData]
                                }
                            })
                        })
                    }, this.processEvents = function(e) {
                        return i.b(t, void 0, void 0, function() {
                            var t, n, r, a, s, l, c;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return t = this.getOrQueryEventData(), n = this.getOrQueryDeviceFingerprint(), [4, t];
                                    case 1:
                                        return r = i.sent(), [4, n];
                                    case 2:
                                        for (a = i.sent(), s = 0, l = e; s < l.length; s++)(c = l[s]).properties.login = r.currentUser.login, c.properties.logged_in = !!r.currentUser.id, c.properties.user_id = r.currentUser.id ? +r.currentUser.id : null, c.properties.device_fingerprint = a, c.event === o.SpadeEventType.Pageview ? (c.properties.is_turbo = r.currentUser.hasTurbo, c.properties.language = r.currentUser.language || navigator.language) : c.event === o.SpadeEventType.Subscription && (c.properties.has_prime = r.currentUser.hasPrime);
                                        return [2]
                                }
                            })
                        })
                    }, this.onWindowUnload = function() {
                        t.logger.debug("Unload triggered."), t.sendEvents(!0)
                    }, this.logger = e.logger.withCategory("spade"), this.transmitLogger = this.logger.withCategory("transmitter"), this.endpoint = e.endpoint, this.session = e.session, this.apollo = e.apollo, this.config = e.config, this.store = e.store, this.adBlockDetector = e.adBlockDetector, this.logger.debug("Creating instance.", {
                        endpoint: this.endpoint,
                        sessionID: this.session.benchmarkID
                    }), window.addEventListener("unload", this.onWindowUnload)
                }
                return e.prototype.setPlatform = function(e) {
                    this.trackingDataCache.platform = e
                }, e.prototype.reportFollowCTAVisibility = function(e) {
                    this.trackingDataCache.videoPlayerData.followCTAVisible = e
                }, e.prototype.setVideoPlayerTrackingData = function(e) {
                    this.trackingDataCache.videoPlayerData = i.a({}, this.trackingDataCache.videoPlayerData, e)
                }, e.prototype.track = function(e, t) {
                    return this.trackEvent(e, t)
                }, e.prototype.trackExperiment = function(e) {
                    return this.track(o.SpadeEventType.ExperimentBranch, e)
                }, e.prototype.trackExperimentThrottled = function(e) {
                    return this.track(o.SpadeEventType.ExperimentBranchThrottled, e)
                }, e.prototype.trackPageview = function(e) {
                    void 0 === e && (e = {});
                    var t = this.store.getState(),
                        n = i.a({
                            browser: navigator.userAgent,
                            collapse_right: t.ui && !t.ui.inlineRightColumnExpanded,
                            collapse_left: t.ui && !t.ui.sideNavExpanded,
                            localstorage_device_id: this.session.localStorageDeviceID,
                            location: e.location || o.PageviewLocation.None,
                            page_session_id: this.session.pageviewID,
                            referrer: this.lastLocationURL ? this.lastLocationURL.href : document.referrer,
                            referrer_domain: this.lastLocationURL ? this.lastLocationURL.hostname : this.getCurrentReferrerURL().hostname,
                            session_device_id: this.session.deviceID,
                            tab_session_id: this.session.tabID,
                            viewport_height: window.innerHeight,
                            viewport_width: window.innerWidth
                        }, e);
                    this.track(o.SpadeEventType.Pageview, n), this.trackingDataCache.lastPageView = n, this.eventEmitter.emit(o.SpadeEventType.Pageview), this.lastLocationURL = new URL(location.href)
                }, e.prototype.trackBenchmark = function(e, t) {
                    this.track(e, i.a({
                        benchmark_session_id: this.session.benchmarkID,
                        page_session_id: this.session.pageviewID
                    }, t))
                }, e.prototype.trackApiQueryBenchmark = function(e) {
                    this.track(o.SpadeEventType.APIQuery, i.a({
                        benchmark_session_id: this.session.benchmarkID,
                        page_session_id: this.session.pageviewID
                    }, e))
                }, e.prototype.trackCustomEventBenchmark = function(e) {
                    this.track(o.SpadeEventType.CustomEvent, i.a({
                        benchmark_session_id: this.session.benchmarkID,
                        page_session_id: this.session.pageviewID
                    }, e))
                }, e.prototype.trackItemSectionLoad = function(e) {
                    this.track(o.SpadeEventType.ItemSectionLoad, function(e) {
                        return i.a({}, e, {
                            rendered_item_list: e.rendered_item_list.join(","),
                            rendered_item_types: e.rendered_item_types.join(","),
                            rendered_items_viewcounts: e.rendered_items_viewcounts.join(",")
                        })
                    }(e))
                }, e.prototype.trackItemSectionClick = function(e) {
                    this.track(o.SpadeEventType.ItemSectionClick, e)
                }, e.prototype.trackEvent = function(e, t) {
                    this.hasCheckedInitialReferrer || this.setSpadeReferrerURL();
                    var n = {
                        event: e,
                        properties: i.a({
                            adblock: this.adBlockDetector.detected,
                            app_version: this.config.buildID,
                            client_app: "twilight",
                            device_id: this.session.deviceID,
                            domain: window.document.domain,
                            host: window.location.host,
                            platform: this.trackingDataCache.platform,
                            preferred_language: Object(l.b)({
                                includeChosenLanguage: !1
                            })[0],
                            referrer_host: this.lastLocationURL ? this.lastLocationURL.host : this.getCurrentReferrerURL().host,
                            referrer_url: this.referrerURL || "",
                            received_language: Object(l.a)() || "en",
                            tab_session_id: this.session.tabID,
                            batch_time: Math.round((new Date).getTime() / 1e3),
                            url: window.location.href
                        }, t)
                    };
                    this.logger.debug("Tracking event", n), this.eventQueue.push(n), this.scheduleEvents()
                }, e.prototype.sendEvents = function(e) {
                    return void 0 === e && (e = !1), i.b(this, void 0, void 0, function() {
                        var t, n, r, a, o;
                        return i.e(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return 0 === this.eventQueue.length ? [2] : [4, this.processEvents(this.eventQueue)];
                                case 1:
                                    return i.sent(), t = this.eventQueue, this.eventQueue = [], Date.now() < this.squelchUntil ? (this.logger.debug("Skipped Spade transmission. Client event tracking is squelched due to failure to sumbit to Spade service."), [2]) : (n = new Blob([Object(s.a)(t)], {
                                        type: "application/x-www-form-urlencoded; charset=UTF-8"
                                    }), e && navigator.sendBeacon ? (navigator.sendBeacon(this.endpoint, n) ? this.transmitLogger.debug("Events sent using beacon.", {
                                        size: n.size,
                                        transmitBatch: t
                                    }) : this.transmitLogger.warn("Events failed to send using beacon.", {
                                        size: n.size,
                                        transmitBatch: t
                                    }), [3, 8]) : [3, 2]);
                                case 2:
                                    r = 1, i.label = 3;
                                case 3:
                                    if (!(r <= 3)) return [3, 8];
                                    i.label = 4;
                                case 4:
                                    return i.trys.push([4, 6, , 7]), [4, fetch(this.endpoint, {
                                        method: "POST",
                                        body: n
                                    })];
                                case 5:
                                    return i.sent(), this.firstBatchSubmitted || (this.firstBatchSubmitted = !0, (a = document.getElementById("root")) && a.setAttribute("data-a-page-events-submitted", Date.now().toString())), this.transmitLogger.debug("Events sent using fetch.", {
                                        size: n.size,
                                        transmitBatch: t
                                    }), [2];
                                case 6:
                                    return o = i.sent(), r < 3 ? this.transmitLogger.warn("Events send attempt failed with fetch.", {
                                        attempt: r,
                                        size: n.size,
                                        transmitBatch: t
                                    }, o) : (this.squelchUntil = Date.now() + 6e4, this.transmitLogger.error(o, "Events failed to send using fetch. Maximum attemps tried, so events will be discarded, and further tracking will be temporarily squelched.", {
                                        attempt: r,
                                        size: n.size,
                                        maxAttempts: 3,
                                        squelch: this.squelchUntil,
                                        squelchDuration: 6e4
                                    })), [3, 7];
                                case 7:
                                    return ++r, [3, 3];
                                case 8:
                                    return [2]
                            }
                        })
                    })
                }, e.prototype.scheduleEvents = function() {
                    var e = this;
                    this.eventQueueTimeout || (this.eventQueueTimeout = setTimeout(function() {
                        try {
                            if (!e.store.getState().session.firstPageLoaded) return e.eventQueueTimeout = 0, void e.scheduleEvents();
                            e.sendEvents()
                        } catch (t) {
                            e.transmitLogger.error(t, "Failed to send events.")
                        }
                        e.eventQueueTimeout = 0
                    }, this.config.spadeBatchWindow))
                }, e.prototype.isLoggedIn = function(e) {
                    return !(!e.session || !e.session.user)
                }, e.prototype.getCurrentReferrerURL = function() {
                    return document.referrer.length ? new URL(document.referrer) : {
                        host: "",
                        hostname: "",
                        href: ""
                    }
                }, e.prototype.setSpadeReferrerURL = function() {
                    var e;
                    try {
                        e = new URL(document.referrer)
                    } catch (e) {}
                    e && "www.twitch.tv" !== e.hostname && (this.referrerURL = e.href), this.hasCheckedInitialReferrer = !0
                }, e
            }()
        },
        76: function(e, t) {},
        "76Lv": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return s
            }), n.d(t, "d", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, "a", function() {
                return d
            });
            var i = n("/7QA"),
                r = n("/0dD"),
                a = "twilight.theme",
                o = "storage:theme";

            function s() {
                return i.l.get(a, function() {
                    var e = i.l.get(o, {
                        activeTheme: ""
                    });
                    if (e && "theme--dark" === e.activeTheme) return r.a.Dark;
                    return r.a.Light
                }())
            }

            function l(e) {
                i.l.set(a, e)
            }

            function c(e) {
                switch (e) {
                    case r.a.Dark:
                        return "tw-theme--dark";
                    default:
                        return ""
                }
            }

            function d(e) {
                return e === r.a.Light ? "tw-theme--light" : c(e)
            }
        },
        "7CzK": function(e, t, n) {
            e.exports = n.p + "assets/bg_glitch_pattern-34ca2e369aad1ed33b57.png"
        },
        "7PB7": function(e, t, n) {},
        "7SjK": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("GnwI"),
                l = n("Ue10"),
                c = (n("UkmT"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this,
                            t = r("emote-picker__emote-link", {
                                "emote-picker__emote-link--locked": this.props.locked
                            }),
                            n = a.createElement(l.qb, {
                                alignItems: l.c.Center,
                                background: l.n.Overlay,
                                borderRadius: l.t.Small,
                                className: "emote-picker__emote-lock",
                                color: l.K.Overlay,
                                display: l.R.InlineFlex,
                                justifyContent: l.La.Center,
                                position: l.Wa.Absolute,
                                zIndex: l.Tb.Above
                            }, a.createElement(l.fb, {
                                asset: l.gb.Lock,
                                height: 10,
                                width: 10
                            })),
                            i = this.props.emoteSet.emotes.map(function(i, r) {
                                if (!i.srcSet) return null;
                                var c = a.createElement("img", {
                                    className: "emote-picker__emote-image",
                                    srcSet: i.srcSet,
                                    alt: i.displayName
                                });
                                if (0 === r) {
                                    var d = i.srcSet.split(" ")[0];
                                    c = a.createElement(s.b, {
                                        className: "emote-picker__emote-image",
                                        src: d,
                                        srcSet: i.srcSet,
                                        alt: i.displayName
                                    })
                                }
                                return a.createElement("div", {
                                    key: i.id,
                                    className: "emote-picker__emote"
                                }, a.createElement(l.Jb, {
                                    label: i.displayName || Object(o.d)("Emote", "EmoteGrid"),
                                    direction: l.Lb.Bottom
                                }, a.createElement(l.Fa, {
                                    display: l.R.Flex,
                                    alignItems: l.c.Center,
                                    justifyContent: l.La.Center
                                }, a.createElement("button", {
                                    className: t,
                                    "aria-label": i.displayName,
                                    name: i.displayName,
                                    onClick: e.props.locked ? void 0 : e.handleClickEmote.bind(e, i.id),
                                    "data-a-target": i.displayName
                                }, a.createElement("figure", {
                                    className: "emote-picker__emote-figure"
                                }, e.props.locked ? n : null, c)))))
                            });
                        return a.createElement(l.Ma, {
                            display: l.R.Flex,
                            flexWrap: l.U.Wrap,
                            justifyContent: l.La.Center
                        }, i)
                    }, t.prototype.handleClickEmote = function(e, t) {
                        this.props.onClickEmote && this.props.onClickEmote(t.currentTarget.name, e)
                    }, t
                }(a.Component));
            n.d(t, "a", function() {
                return c
            })
        },
        "7deH": function(e, t, n) {},
        "8/mp": function(e, t, n) {
            "use strict";
            var i = n("4VQm"),
                r = n("HAa/"),
                a = n("/MKj"),
                o = n("mrSG"),
                s = n("17x9"),
                l = n("q1tI"),
                c = n("/7QA"),
                d = n("Ue10"),
                u = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.getStyles = function() {
                            if (n.props.disableStickiness) return {
                                position: "relative"
                            };
                            var e = n.state,
                                t = e.anchoredBottom,
                                i = e.anchoredTop,
                                r = e.top,
                                a = e.width,
                                o = t || i,
                                s = "absolute";
                            return window.outerWidth < (n.props.disableStickinessBelowWidth || 0) ? (s = "inherit", o = !1) : o && (s = "fixed"), {
                                position: s,
                                top: i ? "inherit" : r,
                                width: o ? a : "inherit"
                            }
                        }, n.lockBottom = function(e) {
                            n.element && n.setState({
                                anchoredBottom: !0,
                                top: window.innerHeight - e,
                                width: n.element.getBoundingClientRect().width
                            })
                        }, n.lockTop = function() {
                            n.element && n.setState({
                                anchoredTop: !0,
                                width: n.element.getBoundingClientRect().width
                            })
                        }, n.resizeStickyColumn = function() {
                            n.unlock(n.state.lastOffset || 0), n.checkBounding(!0, 0)
                        }, n.setRef = function(e) {
                            return n.element = e
                        }, n.state = {
                            anchoredBottom: !1,
                            anchoredTop: !1,
                            lastOffset: void 0,
                            offsetTop: void 0,
                            top: void 0,
                            width: void 0
                        }, n
                    }
                    return o.d(t, e), t.prototype.componentDidMount = function() {
                        if (this.element) {
                            var e = this.element.getBoundingClientRect();
                            this.setState({
                                offsetTop: e.top
                            })
                        }
                        var t = this.context.registerReceiver;
                        t ? this.unregister = t(this) : c.j.warn("<StickyContainer /> initialized missing a <ScrollableArea /> provider")
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.props.sideNavExpanded !== e.sideNavExpanded && this.resizeStickyColumn()
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister && this.unregister()
                    }, t.prototype.render = function() {
                        return l.createElement(d.Ma, {
                            position: d.Wa.Relative,
                            fullWidth: !0
                        }, l.createElement("div", {
                            className: "sticky-container",
                            ref: this.setRef,
                            style: this.getStyles()
                        }, this.props.children))
                    }, t.prototype.checkVisible = function(e, t) {
                        return o.b(this, void 0, void 0, function() {
                            var e, n, r, a, s;
                            return o.e(this, function(o) {
                                return !t || t.type !== i.a.Resize && t.type !== i.a.Wheel && t.type !== i.a.Scroll || (e = this.state.anchoredBottom || this.state.anchoredTop, n = t.offset >= (this.state.lastOffset || 0), t.type === i.a.Resize ? (this.unlock(t.offset), this.checkBounding(n, t.offset)) : t.wheelEvent && t.type === i.a.Wheel && e ? (r = t.wheelEvent, a = void 0, a = 0 === r.deltaMode ? r.deltaY || r.wheelDelta : 16 * r.deltaY, s = a + t.offset, this.context.yScrollTo(s), this.checkBounding(a > 0, t.offset)) : t.type !== i.a.Scroll || t.offset === this.state.lastOffset || e || this.checkBounding(n, t.offset)), [2]
                            })
                        })
                    }, t.prototype.checkBounding = function(e, t) {
                        e && this.state.anchoredTop && this.unlock(t), !e && this.state.anchoredBottom && this.unlock(t), this.state.anchoredBottom || this.state.anchoredTop || this.shouldLock(e), this.setState({
                            lastOffset: t
                        })
                    }, t.prototype.shouldLock = function(e) {
                        if (this.element) {
                            var t = this.element.getBoundingClientRect(),
                                n = this.state.offsetTop || 0;
                            if (t.height < window.innerHeight - n) this.lockTop();
                            else {
                                var i = t.top < n,
                                    r = t.top >= window.innerHeight,
                                    a = t.bottom < n,
                                    o = t.bottom + (this.props.bottomPixelThreshold || 0) >= window.innerHeight,
                                    s = !r && !i,
                                    l = !o && !a;
                                !s && !l || s && l || (!e && s && this.lockTop(), e && l && this.lockBottom(t.height + (this.props.bottomPixelThreshold || 0))), i && a && this.lockBottom(t.height + (this.props.bottomPixelThreshold || 0)), r && o && this.lockTop()
                            }
                        }
                    }, t.prototype.unlock = function(e) {
                        if (this.element) {
                            var t, n = this.state,
                                i = n.offsetTop,
                                r = n.width,
                                a = this.element.getBoundingClientRect(),
                                o = window.innerHeight - (i || 0),
                                s = r;
                            t = "inherit", a.height <= o ? s = "inherit" : this.state.anchoredTop ? t = e : this.state.anchoredBottom && (t = e - a.height + o - (this.props.bottomPixelThreshold || 0)), this.setState({
                                top: t,
                                width: s,
                                anchoredBottom: !1,
                                anchoredTop: !1
                            })
                        }
                    }, t.contextTypes = {
                        registerReceiver: s.func,
                        yScrollTo: s.func
                    }, t
                }(l.Component);
            var p = Object(a.b)(function(e) {
                return {
                    sideNavExpanded: e.ui.sideNavExpanded
                }
            })(u);
            n.d(t, "b", function() {
                return i.b
            }), n.d(t, "a", function() {
                return r.a
            }), n.d(t, "c", function() {
                return p
            })
        },
        "8/nF": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "RecommendedFriend_CancelFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "CancelFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "cancelFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 136
                }
            };
            n.loc.source = {
                body: "mutation RecommendedFriend_CancelFriendRequest($input: CancelFriendRequestInput!) {\ncancelFriendRequest(input: $input) {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "8Ad5": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Backspace = 8] = "Backspace", e[e.Tab = 9] = "Tab", e[e.Enter = 13] = "Enter", e[e.Esc = 27] = "Esc", e[e.Space = 32] = "Space", e[e.Left = 37] = "Left", e[e.Up = 38] = "Up", e[e.Right = 39] = "Right", e[e.Down = 40] = "Down", e[e.Colon = 58] = "Colon", e[e.At = 64] = "At", e[e.B = 66] = "B", e[e.F = 70] = "F", e[e.M = 77] = "M", e[e.P = 80] = "P", e[e.S = 83] = "S"
                }(i || (i = {}))
        },
        "8EWP": function(e, t, n) {},
        "8NHS": function(e, t, n) {},
        "8jSG": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "blockedUsers"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "blockedUsers"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 56
                }
            };
            n.loc.source = {
                body: "fragment blockedUsers on User {\nid\nblockedUsers {\nid\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "8ssJ": function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("d0ua"),
                o = n("kRBY"),
                s = n("mrSG"),
                l = n("q1tI"),
                c = n("eO8H"),
                d = n("/7QA"),
                u = n("TSYQ"),
                p = n("tuvy"),
                m = n("oXhC"),
                h = n("UMvU"),
                f = n("eFQ3"),
                g = n("lTz2"),
                v = n("Ue10"),
                b = (n("wksc"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            sideNavCollapsedByCSSBreakpoint: window.innerWidth < h.b
                        }, t.resizeAnimationFrame = 0, t.renderMiniHoverControls = function() {
                            var e = t.state.isPaused ? Object(d.d)("Play", "PersistentPlayerMini") : Object(d.d)("Pause", "PersistentPlayerMini");
                            return l.createElement(v.qb, {
                                className: "persistent-player__hover-controls",
                                attachTop: !0,
                                attachBottom: !0,
                                attachLeft: !0,
                                attachRight: !0,
                                borderRadius: v.t.Medium,
                                overflow: v.Pa.Hidden,
                                position: v.Wa.Absolute,
                                zIndex: v.Tb.Above,
                                "data-test-selector": "persistent-player-mini-hover"
                            }, l.createElement(v.Ma, {
                                className: "persistent-player__title",
                                alignItems: v.c.Center,
                                display: v.R.Flex,
                                flexDirection: v.T.Row,
                                flexWrap: v.U.NoWrap,
                                justifyContent: v.La.Between,
                                padding: {
                                    y: .5,
                                    right: .5
                                },
                                zIndex: v.Tb.Above,
                                "data-test-selector": "persistent-player-mini-title"
                            }, l.createElement(v.Ma, {
                                ellipsis: !0,
                                margin: {
                                    x: 1
                                }
                            }, l.createElement(v.Q, {
                                fontSize: v.V.Size5,
                                type: v.Gb.Span
                            }, t.props.options.miniPlayerTitle)), l.createElement(v.Ma, {
                                flexShrink: 0
                            }, l.createElement(v.w, {
                                ariaLabel: Object(d.d)("Dismiss Mini Player", "PersistentPlayerMini"),
                                icon: v.gb.Close,
                                overlay: !0,
                                onClick: t.props.onClickDismiss,
                                "data-test-selector": "persistent-player-mini-dismiss"
                            }))), l.createElement(v.Ma, {
                                attachTop: !0,
                                attachBottom: !0,
                                attachLeft: !0,
                                attachRight: !0,
                                alignItems: v.c.Center,
                                display: v.R.Flex,
                                flexDirection: v.T.Row,
                                justifyContent: v.La.Center,
                                margin: {
                                    top: 4
                                },
                                position: v.Wa.Absolute
                            }, t.renderMiniControl(v.gb.MiniPlayerExpand, Object(d.d)("Expand Player", "PersistentPlayerMini"), "persistent-player-mini-expand", t.props.onClickExpand), l.createElement(v.Ma, {
                                margin: {
                                    left: 2
                                }
                            }, t.renderMiniControl(t.state.isPaused ? v.gb.MiniPlayerPlay : v.gb.MiniPlayerPause, e, "persistent-player-mini-pause-play", t.togglePause))))
                        }, t.renderMiniControl = function(e, t, n, i) {
                            return l.createElement("button", {
                                className: "persistent-player__control",
                                onClick: i,
                                "aria-label": t,
                                "data-test-selector": n
                            }, l.createElement(v.fb, {
                                asset: e,
                                width: 30,
                                height: 30
                            }))
                        }, t.renderMiniInterceptPointerView = function() {
                            return l.createElement(v.Ma, {
                                className: "persistent-player__intercept-view",
                                position: v.Wa.Absolute,
                                attachBottom: !0,
                                attachLeft: !0,
                                attachRight: !0,
                                zIndex: v.Tb.Above,
                                "data-test-selector": "persistent-player-mini-cover"
                            })
                        }, t.togglePause = function() {
                            t.setState(function(e) {
                                return {
                                    shouldPause: !e.isPaused
                                }
                            })
                        }, t.onPauseToggled = function(e) {
                            t.setState({
                                isPaused: e,
                                shouldPause: e
                            })
                        }, t.collapseOnBreakpoint = function() {
                            var e = window.innerWidth;
                            e < h.b && !t.state.sideNavCollapsedByCSSBreakpoint ? t.setState({
                                sideNavCollapsedByCSSBreakpoint: !0
                            }) : e >= h.b && t.state.sideNavCollapsedByCSSBreakpoint && t.setState({
                                sideNavCollapsedByCSSBreakpoint: !1
                            }), t.resizeAnimationFrame = 0
                        }, t.handleWindowResize = function() {
                            t.resizeAnimationFrame || (t.resizeAnimationFrame = requestAnimationFrame(t.collapseOnBreakpoint))
                        }, t.handleLocationChange = function() {
                            t.props.theatreModeEnabled && t.props.disableTheatreMode()
                        }, t
                    }
                    return s.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        this.props.location.pathname !== e.location.pathname && this.handleLocationChange(), Object(g.b)(this.props.options.playerProps, e.options.playerProps) && this.setState({
                            shouldPause: !1
                        })
                    }, t.prototype.componentDidMount = function() {
                        window.addEventListener("resize", this.handleWindowResize)
                    }, t.prototype.componentWillUnmount = function() {
                        this.handleLocationChange(), window.removeEventListener("resize", this.handleWindowResize), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame)
                    }, t.prototype.render = function() {
                        var e, t = this.props.theatreModeEnabled && !this.props.mini,
                            n = u({
                                "persistent-player--theatre": t
                            }),
                            i = this.props.mainRef.getBoundingClientRect(),
                            r = 0;
                        if (t) e = {
                            position: "fixed",
                            left: 0,
                            top: 0,
                            maxHeight: "100vh",
                            height: "100%",
                            width: window.innerWidth < 820 || this.props.rightNavCollapsed ? "100%" : "calc(100% - " + m.a + ")",
                            zIndex: 3e3
                        };
                        else if (this.props.mini) e = {
                            position: "fixed",
                            width: "28rem",
                            height: "15.75rem",
                            left: i.left,
                            bottom: 0,
                            margin: "1rem",
                            zIndex: 1e3
                        }, r = 5;
                        else {
                            var a = this.props.contentRef.getBoundingClientRect(),
                                o = a.left - i.left,
                                c = i.right - a.right;
                            e = {
                                top: a.top - i.top,
                                left: o,
                                position: "absolute",
                                width: "100%",
                                maxWidth: "calc(100% - " + (o + c) + "px)",
                                maxHeight: "calc(100vh - 16rem)",
                                overflow: "hidden",
                                height: "auto"
                            }, Object(p.a)() && (r = 3)
                        }
                        return l.createElement(v.Ga, {
                            elevation: r,
                            className: u({
                                "persistent-player__border--mini": this.props.mini
                            }),
                            borderRadius: this.props.mini ? v.t.Medium : v.t.None,
                            overflow: this.props.mini ? v.Pa.Hidden : void 0
                        }, l.createElement("div", {
                            className: u("persistent-player", n),
                            style: e
                        }, l.createElement(v.k, null, l.createElement(f.c, s.a({}, this.props.options.playerProps, {
                            instanceRef: this.props.onVideoPlayerInstance,
                            miniModeEnabled: this.props.mini,
                            paused: this.state.shouldPause,
                            onPauseToggled: this.onPauseToggled
                        }))), this.props.mini && this.renderMiniInterceptPointerView(), this.props.mini && this.renderMiniHoverControls()))
                    }, t
                }(l.Component)),
                y = Object(c.f)(b);
            var k, S, w = Object(i.b)(function(e) {
                return {
                    sideNavCollapsed: !e.ui.sideNavExpanded,
                    rightNavCollapsed: !e.ui.rightColumnExpanded,
                    theatreModeEnabled: e.ui.theatreModeEnabled
                }
            }, function(e) {
                return Object(r.b)({
                    disableTheatreMode: a.t
                }, e)
            })(y);
            ! function(e) {
                e.CloseMini = "close", e.OpenMini = "open", e.ExpandPlayer = "expand", e.ContentChange = "content_change"
            }(k || (k = {})),
            function(e) {
                e.Minimize = "minimize", e.Maximize = "maximize", e.UserMinimize = "user_minimize", e.UserMaximize = "user_maximize"
            }(S || (S = {}));
            var E, C = n("p5Wp"),
                N = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.logger = d.j.withCategory("PersistentPlayerRoot"), n.trackMiniPlayerAction = function(e, t) {
                            n.videoPlayerComponent && n.videoPlayerComponent.trackMiniPlayerAction(e, t)
                        }, n.setVideoPlayerRef = function(e) {
                            return n.videoPlayerComponent = e
                        }, n.onClickExpand = function() {
                            n.state.options && (n.state.overrides && n.state.overrides.onMiniPlayerExpand ? n.state.overrides.onMiniPlayerExpand() : (n.props.history.push(n.state.options.miniPlayerContentRoute), n.trackMiniPlayerAction(k.ExpandPlayer, S.UserMaximize)))
                        }, n.onClickDismiss = function() {
                            n.state.options && (n.state.overrides && n.state.overrides.onMiniPlayerDismiss ? n.state.overrides.onMiniPlayerDismiss() : (n.destroyPlayer(), n.trackMiniPlayerAction(k.CloseMini, S.UserMinimize)))
                        }, n.onHistoryChange = function(e) {
                            var t = n.props.isLoggedIn,
                                i = Object(C.a)({
                                    isLoggedIn: t,
                                    location: e
                                });
                            i !== n.state.hideSideNav && n.setState({
                                hideSideNav: i
                            })
                        };
                        var i = t.isLoggedIn,
                            r = t.location;
                        return n.state = {
                            isError: !1,
                            mini: !1,
                            hideSideNav: Object(C.a)({
                                isLoggedIn: i,
                                location: r
                            })
                        }, E && n.logger.warn("attempting to create a second instance of the Persistent Player Root. There should only be one in <Root>, use <PersistentPlayerContent> instead."), E = n, n
                    }
                    return s.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            d.o.stats.recordComponentError("PersistentPlayerRoot"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidMount = function() {
                        this.historyUnlisten = d.o.history.listen(this.onHistoryChange)
                    }, t.prototype.componentWillUnmount = function() {
                        this.historyUnlisten && this.historyUnlisten()
                    }, t.prototype.render = function() {
                        return !this.state.isError && this.state.options && this.state.contentRef && this.props.mainRef ? l.createElement(w, {
                            options: this.state.options,
                            contentRef: this.state.contentRef,
                            mainRef: this.props.mainRef,
                            mini: this.state.mini,
                            hideSideNav: this.state.hideSideNav,
                            forceRender: this.state.forcePresentationRender,
                            onClickExpand: this.onClickExpand,
                            onClickDismiss: this.onClickDismiss,
                            onVideoPlayerInstance: this.setVideoPlayerRef
                        }) : null
                    }, t.prototype.destroyPlayer = function(e) {
                        var t = this;
                        this.setState({
                            mini: !1,
                            options: void 0,
                            overrides: void 0,
                            contentRef: void 0
                        }, function() {
                            t.props.stopPersistingPlayer(), e && e()
                        })
                    }, t.prototype.requestVideoContent = function(e) {
                        var t = this.state.options && this.state.options.playerProps;
                        Object(g.b)(t, e.options.playerProps) && this.trackMiniPlayerAction(k.ContentChange, ""), this.setState({
                            contentRef: e.ref,
                            options: e.options,
                            overrides: e.overrides
                        }, e.onCompletion)
                    }, t.prototype.transitionToMiniPlayer = function(e) {
                        this.setState({
                            mini: !0
                        }), this.props.beginPersistingPlayer(), e && this.trackMiniPlayerAction(k.OpenMini, e)
                    }, t.prototype.transitionToAnchoredPlayer = function(e) {
                        this.setState({
                            mini: !1
                        }), this.props.stopPersistingPlayer(), e && this.trackMiniPlayerAction(k.CloseMini, e)
                    }, t.prototype.reposition = function() {
                        var e = this.state.forcePresentationRender;
                        this.setState({
                            forcePresentationRender: e ? e + 1 : 1
                        })
                    }, t
                }(l.Component),
                T = Object(c.f)(N);
            var _ = Object(i.b)(function(e) {
                    return {
                        isLoggedIn: Object(o.e)(e)
                    }
                }, function(e) {
                    return Object(r.b)({
                        beginPersistingPlayer: a.o,
                        stopPersistingPlayer: a.z
                    }, e)
                })(T),
                R = n("17x9"),
                O = n("76Lv"),
                I = null,
                D = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            userHasDismissedContent: !1
                        }, n.logger = d.j.withCategory("PersistentPlayer"), n.setDomRef = function(e) {
                            return n.domRef = e
                        }, n.onMiniPlayerDismiss = function() {
                            n.transitionToAnchoredPlayer(S.UserMinimize), n.setState({
                                userHasDismissedContent: !0
                            })
                        }, n.onMiniPlayerExpand = function() {
                            n.context.scrollToTop()
                        }, n.getPersistentPlayerOverrides = function() {
                            return {
                                onMiniPlayerDismiss: n.onMiniPlayerDismiss,
                                onMiniPlayerExpand: n.onMiniPlayerExpand
                            }
                        }, I && n.logger.error(new Error, "there should only ever be one <PersistentPlayer> rendered at a time. Verify that no other component above or below this in the tree has rendered one as well."), I = n, n
                    }
                    return s.d(t, e), t.prototype.componentDidMount = function() {
                        var e = this;
                        E || this.logger.error(new Error, "No <PersistentPlayerRoot> found. Make sure it is mounted in the Root component"), this.unregister = this.context.registerReceiver(this), E.requestVideoContent({
                            ref: this.domRef,
                            options: this.props,
                            overrides: this.getPersistentPlayerOverrides(),
                            onCompletion: function() {
                                return e.transitionToAnchoredPlayer()
                            }
                        }), this.props.repositionPlayerRef && this.props.repositionPlayerRef(this.reposition)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        E.requestVideoContent({
                            ref: this.domRef,
                            options: e,
                            overrides: this.getPersistentPlayerOverrides()
                        }), e.repositionPlayerRef && e.repositionPlayerRef !== this.props.repositionPlayerRef && e.repositionPlayerRef(this.reposition)
                    }, t.prototype.componentWillUnmount = function() {
                        var e = this;
                        if (this.unregister(), this.props.repositionPlayerRef && this.props.repositionPlayerRef(null), this.props.disablePersistenceOnUnmount || this.state.userHasDismissedContent || !this.props.persistentPlayerEnabled) return E.destroyPlayer(), void(I = null);
                        var t = this.props,
                            n = t.playerProps,
                            i = t.miniPlayerTitle,
                            r = t.miniPlayerContentRoute,
                            a = {
                                playerProps: {
                                    channelLogin: n.channelLogin,
                                    hostChannel: n.hostChannel,
                                    collectionID: n.collectionID,
                                    disableTheatreButton: n.disableTheatreButton,
                                    nextVideoOffset: n.nextVideoOffset,
                                    playerTypeOverride: n.playerTypeOverride,
                                    vodID: n.vodID,
                                    attachToWindow: n.attachToWindow
                                },
                                miniPlayerTitle: i,
                                miniPlayerContentRoute: r
                            };
                        E.requestVideoContent({
                            ref: this.domRef,
                            options: a,
                            onCompletion: function() {
                                return e.transitionToMiniPlayer(S.Minimize)
                            }
                        }), I = null
                    }, t.prototype.render = function() {
                        return l.createElement(v.qb, {
                            background: v.n.Alt2,
                            position: v.Wa.Absolute,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0,
                            attachTop: !0,
                            refDelegate: this.setDomRef,
                            "data-target": "persistent-player-content",
                            className: Object(O.a)(this.props.theme)
                        })
                    }, t.prototype.transitionToMiniPlayer = function(e) {
                        E.transitionToMiniPlayer(e)
                    }, t.prototype.transitionToAnchoredPlayer = function(e) {
                        E.transitionToAnchoredPlayer(e)
                    }, t.prototype.isMini = function() {
                        return E.state.mini
                    }, t.prototype.checkVisible = function(e, t) {
                        var n = this.context.getScrollContent();
                        if (t && n) {
                            var i = this.domRef.getBoundingClientRect(),
                                r = n.getBoundingClientRect(),
                                a = i.top + i.height - r.top;
                            a <= 100 && this.props.persistentPlayerEnabled && !this.isMini() && !this.props.disablePersistenceOnScroll && !this.state.userHasDismissedContent && this.transitionToMiniPlayer(S.Minimize), a > 100 && (this.isMini() && this.transitionToAnchoredPlayer(S.Maximize), this.state.userHasDismissedContent && this.setState({
                                userHasDismissedContent: !1
                            }))
                        }
                    }, t.prototype.reposition = function() {
                        E.reposition()
                    }, t.contextTypes = {
                        registerReceiver: R.func,
                        getScrollContent: R.func,
                        scrollToTop: R.func
                    }, t
                }(l.Component);
            var P = Object(i.b)(function(e) {
                return {
                    theme: e.ui.theme,
                    persistentPlayerEnabled: e.ui.persistentPlayerEnabled
                }
            })(D);
            n.d(t, "b", function() {
                return _
            }), n.d(t, "a", function() {
                return P
            }), n.d(t, !1, function() {
                return S
            })
        },
        "9aiH": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FriendRequestsNotification_Query"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "incomingFriendRequests"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "1"
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "totalUnreadCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 115
                }
            };
            n.loc.source = {
                body: "query FriendRequestsNotification_Query {\ncurrentUser {\nid\nincomingFriendRequests(first: 1) {\ntotalUnreadCount\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "9kXc": function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            });
            var i = n("/7QA"),
                r = n("yLwq"),
                a = n("kduP"),
                o = n("2xye");

            function s(e) {
                var t, n, s, c, d, u = e.append,
                    p = void 0 !== u && u,
                    m = e.searchResults,
                    h = e.currentGameResults,
                    f = e.currentUserResults,
                    g = e.currentCommunityResults,
                    v = e.currentVideoResults,
                    b = e.currentLiveResults;
                if (m.games && (t = {
                        totalHits: m.games.totalHits,
                        results: p && h ? h.results : []
                    }, p && m.exhaustedHits && h && !m.games.totalHits && (t.totalHits = h.totalHits), t.results = t.results.concat(m.games.hits.map(function(e, t) {
                        var n = i.o.intl.getLanguageCode();
                        return {
                            title: n && void 0 !== e.localizations && n in e.localizations ? e.localizations[n] : e.name,
                            thumbnailAltText: e.name,
                            linkTo: {
                                pathname: Object(a.c)(e.name),
                                state: {
                                    content: o.PageviewContent.Game,
                                    content_index: t,
                                    medium: o.PageviewMedium.NavSearch
                                }
                            },
                            id: e.objectID,
                            popularity: e.popularity
                        }
                    }))), m.videos) {
                    var y = p && v ? v.results : [],
                        k = m.videos.totalHits;
                    p && m.exhaustedHits && v && !m.videos.totalHits && (k = v.totalHits), c = function(e, t, n) {
                        return {
                            results: e.concat(t.hits.map(l)),
                            totalHits: t.totalHits || n
                        }
                    }(y, m.videos, k)
                }
                return m.users && (n = {
                    totalHits: p && f ? f.totalHits : m.users.totalHits,
                    results: p && f ? f.results : []
                }, p && m.exhaustedHits && f && !m.users.totalHits && (n.totalHits = f.totalHits), n.results = n.results.concat(m.users.hits.map(function(e, t) {
                    return {
                        login: e.login,
                        name: e.name,
                        thumbnail: e.profile_image || Object(r.c)(e.objectID, 64),
                        thumbnailAltText: e.name,
                        linkTo: {
                            pathname: "/" + e.login,
                            state: {
                                content: o.PageviewContent.User,
                                content_index: t,
                                medium: o.PageviewMedium.NavSearch
                            }
                        },
                        id: e.objectID,
                        followers: e.followers
                    }
                }))), m.channels && ((d = {
                    totalHits: p && b ? b.totalHits : m.channels.totalHits,
                    results: p && b ? b.results : []
                }).results = d.results.concat(m.channels.hits.map(function(e, t) {
                    return {
                        viewerCount: e.channel_count,
                        login: e.login,
                        name: e.name,
                        thumbnailAltText: e.status,
                        linkTo: {
                            pathname: "/" + e.login,
                            state: {
                                content: o.PageviewContent.Live,
                                content_index: t,
                                medium: o.PageviewMedium.NavSearch
                            }
                        },
                        id: e.objectID,
                        status: e.status
                    }
                }))), m.communities && (s = {
                    totalHits: m.communities.totalHits,
                    results: p && g ? g.results : []
                }, p && m.exhaustedHits && g && !m.communities.totalHits && (s.totalHits = g.totalHits), s.results = s.results.concat(m.communities.hits.map(function(e, t) {
                    return {
                        name: e.name,
                        thumbnail: e.avatar_image_url,
                        thumbnailAltText: e.name,
                        linkTo: {
                            pathname: "/communities/" + e.name,
                            state: {
                                content: o.PageviewContent.Community,
                                content_index: t,
                                medium: o.PageviewMedium.NavSearch
                            }
                        },
                        viewerCount: e.viewers,
                        id: e.objectID
                    }
                }))), {
                    currentGameResults: t,
                    currentUserResults: n,
                    currentLiveResults: d,
                    currentCommunityResults: s,
                    currentVideoResults: c,
                    exhaustedHits: m.exhaustedHits
                }
            }

            function l(e, t) {
                return {
                    title: e.title,
                    thumbnail: e.thumbnail,
                    thumbnailAltText: e.title,
                    linkTo: {
                        pathname: "/videos/" + e.objectID,
                        state: {
                            content: o.PageviewContent.Video,
                            content_index: t,
                            medium: o.PageviewMedium.NavSearch
                        }
                    },
                    login: e.broadcaster_login,
                    name: e.broadcaster_name,
                    createdAt: e.created_at,
                    length: e.length,
                    id: e.objectID
                }
            }
        },
        "9pSj": function(e, t, n) {
            "use strict";
            var i, r = n("/MKj"),
                a = n("mrSG"),
                o = n("cr+I"),
                s = n("q1tI"),
                l = n("oJmH"),
                c = n("/7QA"),
                d = n("eJ65"),
                u = n("yR8l"),
                p = n("ht6z"),
                m = n("geRD"),
                h = n("kz7j"),
                f = n("GnwI"),
                g = n("cinR"),
                v = n("Ue10"),
                b = (n("fR/m"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return a.d(t, e), t.prototype.render = function() {
                        return s.createElement(v.Ma, null, s.createElement(v.qb, {
                            className: "prime-offer-header",
                            borderBottom: !0,
                            background: v.n.Alt2,
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, s.createElement(v.Q, {
                            bold: !0,
                            type: v.Gb.H6
                        }, Object(c.d)("Free with Prime", "PrimeOfferHeader"))), this.getNumOfUnseenOffersDisplay())
                    }, t.prototype.getNumOfUnseenOffersDisplay = function() {
                        var e = this.props.numOfUnseenOffers;
                        if (e) return s.createElement(v.qb, {
                            className: "prime-offer__new-offer-header",
                            borderBottom: !0,
                            background: v.n.Alt2,
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, s.createElement(v.Ma, {
                            fullWidth: !0,
                            display: v.R.Flex,
                            alignItems: v.c.Center
                        }, s.createElement(v.Ma, {
                            flexGrow: 1
                        }, s.createElement(v.Q, {
                            bold: !0,
                            type: v.Gb.H6
                        }, Object(c.d)("New Prime Loot", "PrimeOfferHeader"))), s.createElement(v.Ma, {
                            className: "prime-offer__new-offer-header-count",
                            textAlign: v.Cb.Center
                        }, s.createElement(v.qb, {
                            className: "prime-offer__new-offer-header-count__text",
                            background: v.n.Base,
                            color: v.K.Base,
                            display: v.R.Flex,
                            alignItems: v.c.Center,
                            justifyContent: v.La.Center
                        }, s.createElement(v.Q, null, e.toString())))))
                    }, t
                }(s.Component)),
                y = Object(f.c)("PrimeOfferHeader", {
                    autoReportInteractive: !0
                })(b),
                k = n("4NwI"),
                S = n("Rjl4"),
                w = n("O4UZ");
            ! function(e) {
                e.OFFERS_FAILED_TO_UPDATE = "OFFERS_FAILED_TO_UPDATE", e.UNKNOWN = "UNKNOWN"
            }(i || (i = {}));
            var E = n("QAxy"),
                C = n("SXud"),
                N = (n("4gQA"), n("yO+B")),
                T = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            numOfUnseenOffers: 0,
                            updated: !1,
                            status: void 0,
                            error: void 0
                        }, t.showOffersByDefault = function() {
                            var e = location.search,
                                n = o.parse(e);
                            return n && !!n.expandoffers || t.props.openByDefault
                        }, t.onToggleMenu = function(e) {
                            t.seeOffers(), e && t.setState({
                                numOfUnseenOffers: 0
                            }), Object(S.d)(!e, {
                                hasPrime: t.hasPrime(),
                                numberOfOffers: t.getNumberOfOffers()
                            }), t.refreshImpressionTracking()
                        }, t.refreshImpressionTracking = function() {
                            window.dispatchEvent(new Event("resize"))
                        }, t.getHiddenCrownOfferIds = function() {
                            return c.b.get("prime-crown-hidden-ids", [])
                        }, t.getNumberOfOffers = function() {
                            var e = t.props.offersData,
                                n = e && e.primeOffers;
                            return n && n.length || 0
                        }, t.onHover = function() {
                            Object(S.c)({
                                hasPrime: t.hasPrime()
                            })
                        }, t.hasPrime = function() {
                            return !(!t.props.userData.currentUser || !t.props.userData.currentUser.hasPrime)
                        }, t.registerOffersLoadedEvent = function() {
                            return t.props.latencyTracking.registerCustomEvent({
                                benchmark: 1e3,
                                group: h.a.TwitchPrime,
                                key: h.b.PrimeOfferLoaded,
                                label: h.c.Loaded,
                                start: h.d.Registration
                            })
                        }, t.getUnseenOffers = function(e) {
                            var n = e.offersData;
                            if (n && !n.loading && !n.error) {
                                var i = n.primeOffers || [];
                                t.setState({
                                    numOfUnseenOffers: i.filter(t.offerIsUnseen).length
                                })
                            }
                        }, t.offerIsUnseen = function(e) {
                            var n = Object(w.i)();
                            return !(t.getHiddenCrownOfferIds().includes(e.id) || n.includes(e.id) || t.offerIsSeen(e))
                        }, t.seeOffers = function() {
                            var e = t.props.offersData;
                            if (e && !e.loading && !e.error) {
                                var n = (e.primeOffers || []).map(function(e) {
                                    return "" + e.id
                                });
                                t.updateOfferStatus(), Object(w.m)(n)
                            }
                        }, t.updateOfferStatus = function() {
                            return a.b(t, void 0, void 0, function() {
                                var e, t, n, r, o, s, l, c;
                                return a.e(this, function(a) {
                                    switch (a.label) {
                                        case 0:
                                            if (e = this.props.userData, !(t = e.currentUser && e.currentUser.id)) return [2];
                                            n = this.props.offersData.primeOffers || [], r = n.map(function(e) {
                                                return {
                                                    offerID: e.id,
                                                    status: w.a.Seen
                                                }
                                            }), o = Object(m.a)({
                                                userID: t,
                                                statusChanges: r
                                            }), a.label = 1;
                                        case 1:
                                            return a.trys.push([1, 3, , 4]), [4, this.props.updatePrimeOfferStatus(o)];
                                        case 2:
                                            return s = a.sent(), (l = s.updatePrimeOfferStatus && s.updatePrimeOfferStatus.error) && l.code ? (c = i[l.code], this.setState({
                                                updated: !1,
                                                error: c || i.UNKNOWN
                                            }), [2]) : s.updatePrimeOfferStatus && s.updatePrimeOfferStatus.self ? (this.setState({
                                                updated: !0,
                                                error: void 0
                                            }), [3, 4]) : (this.setState({
                                                updated: !1,
                                                error: i.UNKNOWN
                                            }), [2]);
                                        case 3:
                                            return a.sent(), this.setState({
                                                updated: !1,
                                                error: i.UNKNOWN
                                            }), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, t.renderOfferList = function() {
                            return s.createElement(v.Ma, {
                                "data-a-target": "offers-list",
                                className: "prime-offers__list"
                            }, s.createElement(y, {
                                numOfUnseenOffers: t.state.numOfUnseenOffers
                            }), s.createElement(k.a, {
                                placement: w.d.Crown
                            }))
                        }, t.shouldReportInteractive = function() {
                            return (!t.isUserDataLoading || t.isUserDataError) && (!t.isOffersDataLoading || t.isOffersDataError)
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentDidMount = function() {
                        this.shouldReportInteractive() && this.props.latencyTracking.reportInteractive(), this.offersLoadedEvent = this.registerOffersLoadedEvent(), this.getUnseenOffers(this.props)
                    }, t.prototype.componentDidUpdate = function() {
                        this.shouldReportInteractive() && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.getUnseenOffers(e);
                        var t = this.props.offersData,
                            n = e.offersData;
                        if (t && t.loading && n && !n.loading && n.primeOffers) {
                            this.props.latencyTracking.reportCustomEvent(this.offersLoadedEvent);
                            var i = n.primeOffers,
                                r = i && i.length;
                            Object(S.e)({
                                hasPrime: this.hasPrime(),
                                numberOfOffers: r || 0
                            })
                        }
                    }, t.prototype.render = function() {
                        var e = this.props.userData && this.props.userData.requestInfo && Object(p.a)(this.props.userData.requestInfo.countryCode),
                            t = this.props.userData && this.props.userData.currentUser && this.props.userData.currentUser.hasPrime;
                        if (!e && !t) return null;
                        var n = {
                            align: v.Kb.Center,
                            direction: v.Lb.Bottom,
                            label: ""
                        };
                        return this.state.numOfUnseenOffers > 0 ? n.label = Object(c.d)("New Prime Loot", "PrimeOffers") : n.label = Object(c.d)("Prime Loot", "PrimeOffers"), s.createElement(v.Ma, {
                            className: "prime-offers",
                            position: v.Wa.Relative
                        }, s.createElement(d.a, {
                            onToggle: this.onToggleMenu,
                            openByDefault: this.showOffersByDefault(),
                            tooltipProps: n
                        }, s.createElement(g.a, {
                            onHover: this.onHover
                        }, s.createElement(v.w, {
                            ariaLabel: Object(c.d)("Prime offers", "PrimeOffers"),
                            overlay: !0,
                            icon: v.gb.Crown,
                            "data-a-target": "prime-offers-icon",
                            "data-target": "prime-offers-icon"
                        })), s.createElement(v.q, {
                            direction: v.r.BottomRight,
                            size: v.s.Large,
                            offsetX: "7px"
                        }, this.renderOfferList())), this.renderUnseenOffersDisplay())
                    }, t.prototype.offerIsSeen = function(e) {
                        return e.self && e.self.status === w.a.Seen
                    }, t.prototype.renderUnseenOffersDisplay = function() {
                        var e = this.state.numOfUnseenOffers;
                        if (e && !this.state.error) return s.createElement(v.Ma, {
                            className: "prime-offers__pill",
                            position: v.Wa.Absolute
                        }, s.createElement(v.e, {
                            type: v.j.BounceIn,
                            duration: v.g.Medium,
                            timing: v.i.EaseIn,
                            enabled: e > 0
                        }, s.createElement(v.Ta, {
                            label: e.toString(),
                            type: v.Ua.Notification
                        })))
                    }, Object.defineProperty(t.prototype, "isUserDataLoading", {
                        get: function() {
                            var e = this.props.userData;
                            return e && e.loading
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isUserDataError", {
                        get: function() {
                            var e = this.props.userData;
                            return e && e.error
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isOffersDataLoading", {
                        get: function() {
                            var e = this.props.offersData;
                            return e && e.loading
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "isOffersDataError", {
                        get: function() {
                            var e = this.props.offersData;
                            return e && e.error
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(s.Component),
                _ = Object(l.compose)(Object(u.a)(C, {
                    name: "offersData",
                    skip: function(e) {
                        return !e.firstPageLoaded && !e.openByDefault
                    },
                    options: function() {
                        return {
                            variables: {
                                dateOverride: Object(w.f)()
                            }
                        }
                    }
                }), Object(u.a)(N, {
                    name: "userData"
                }), Object(u.a)(E, {
                    name: "updatePrimeOfferStatus"
                }), Object(f.c)("PrimeOffers"))(T);
            var R = Object(r.b)(function(e) {
                    return {
                        firstPageLoaded: !!e.session.firstPageLoaded
                    }
                })(_),
                O = n("6x+I"),
                I = n("KxT4"),
                D = n("j3KY"),
                P = (n("sWJ6"), n("487o")),
                x = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.reportInteractive = function() {
                            var e = t.props,
                                n = e.data,
                                i = e.latencyTracking;
                            (n.loading || n.error) && i.reportInteractive()
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentDidMount = function() {
                        this.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.props,
                            t = e.data,
                            n = e.blockBannerForGDPR,
                            i = t.currentUser && t.currentUser.hasPrime,
                            r = t.requestInfo && t.requestInfo.countryCode;
                        if (!Object(w.n)(i, r) || t.loading || n) return null;
                        var a = Object(D.f)(D.a, ""),
                            o = Object(c.d)("Twitch Prime", "BlueBar"),
                            l = s.createElement("span", null, Object(c.d)("Free loot every month, plus exclusives and surprises, ad-free viewing, and loads more.", "BlueBar")),
                            d = Object(D.f)(D.a, ""),
                            u = Object(c.d)("Start Your Free Trial", "BlueBar");
                        return t.loading || t.error || t.primePromotions && t.primePromotions.forEach(function(e) {
                            switch (e.id) {
                                case "twitch.prime.bluebar.left1":
                                    a = e.externalURL, o = e.text;
                                    break;
                                case "twitch.prime.bluebar.center1":
                                    l = s.createElement(O, {
                                        source: e.text,
                                        renderers: {
                                            Link: function(e) {
                                                return s.createElement("a", {
                                                    href: e.href,
                                                    target: "_blank",
                                                    rel: "noopener noreferrer"
                                                }, e.children)
                                            }
                                        }
                                    });
                                    break;
                                case "twitch.prime.bluebar.right1":
                                    d = e.externalURL, u = e.text
                            }
                        }), s.createElement(v.qb, {
                            color: v.K.Base,
                            className: "blue-bar",
                            "data-a-target": "blue-bar",
                            position: v.Wa.Relative,
                            fullWidth: !0,
                            zIndex: v.Tb.Above
                        }, s.createElement(v.Ma, {
                            className: "blue-bar__bar",
                            display: v.R.Flex,
                            alignItems: v.c.Center,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap,
                            margin: "auto",
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, s.createElement(v.Ma, {
                            display: v.R.InlineFlex,
                            alignItems: v.c.Center,
                            padding: {
                                right: .5
                            }
                        }, s.createElement(v.Ma, {
                            className: "blue-bar__logo",
                            display: v.R.InlineFlex,
                            margin: {
                                right: .5
                            },
                            flexShrink: 0
                        }, s.createElement(v.fb, {
                            asset: v.gb.Crown
                        })), s.createElement(v.Q, {
                            bold: !0,
                            type: v.Gb.Span,
                            noWrap: !0,
                            fontSize: v.V.Size6
                        }, s.createElement(v.Fa, {
                            padding: {
                                x: 1
                            }
                        }, s.createElement("a", {
                            className: "blue-bar__link",
                            "data-a-target": "blue-bar__link",
                            href: a,
                            target: "_blank",
                            rel: "noopener noreferrer"
                        }, o))), s.createElement(v.Q, {
                            className: "blue-bar__headline",
                            type: v.Gb.Span,
                            fontSize: v.V.Size6
                        }, l)), s.createElement(v.Ma, {
                            display: v.R.InlineFlex,
                            flexShrink: 0
                        }, s.createElement(v.Q, {
                            bold: !0,
                            type: v.Gb.Span,
                            noWrap: !0,
                            fontSize: v.V.Size6,
                            color: v.K.Base
                        }, s.createElement("a", {
                            className: "blue-bar__link",
                            href: d,
                            target: "_blank",
                            rel: "noopener noreferrer"
                        }, u)))))
                    }, t
                }(s.Component),
                L = Object(l.compose)(Object(r.b)(function(e) {
                    return {
                        blockBannerForGDPR: Object(I.h)(e)
                    }
                }), Object(u.a)(P, {
                    options: function() {
                        return {
                            variables: {
                                stringIds: ["twitch.prime.bluebar.left1", "twitch.prime.bluebar.center1", "twitch.prime.bluebar.right1"],
                                dateOverride: Object(w.f)()
                            }
                        }
                    }
                }), Object(f.c)("BlueBarComponent"))(x),
                F = n("z8lI");
            n.d(t, "d", function() {
                return R
            }), n.d(t, "a", function() {
                return L
            }), n.d(t, "c", function() {
                return F.a
            }), n.d(t, "e", function() {
                return w.f
            }), n.d(t, "b", function() {
                return w.c
            })
        },
        AEoH: function(e, t, n) {},
        AKKo: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "SideNav_FeaturedChannels"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "language"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "featuredStreams"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "language"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "language"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "stream"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "broadcaster"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "login"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "profileImageURL"
                                                    },
                                                    arguments: [{
                                                        kind: "Argument",
                                                        name: {
                                                            kind: "Name",
                                                            value: "width"
                                                        },
                                                        value: {
                                                            kind: "IntValue",
                                                            value: "70"
                                                        }
                                                    }],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 189
                }
            };
            n.loc.source = {
                body: "query SideNav_FeaturedChannels($language: String) {\nfeaturedStreams(language: $language) {\nstream {\nid\nbroadcaster {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\n}\ngame {\nid\nname\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        AKMF: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("S1Za");

            function o(e) {
                return e.videoPlayer.activeVideoPlayerInstanceRefID
            }
            r.o.store.registerReducer("videoPlayer", function(e, t) {
                switch (void 0 === e && (e = {
                    activeVideoPlayerInstanceRefID: void 0
                }), t.type) {
                    case a.a:
                        return i.a({}, e, {
                            activeVideoPlayerInstanceRefID: t.playerRefID
                        });
                    default:
                        return e
                }
            })
        },
        AOPA: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TrackingManager_RequestInfo"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "ipAddress"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 75
                }
            };
            n.loc.source = {
                body: "query TrackingManager_RequestInfo {\nrequestInfo {\ncountryCode\nipAddress\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        AXRb: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("oJmH"),
                s = n("/7QA"),
                l = n("yR8l"),
                c = n("3Bft"),
                d = n("geRD"),
                u = n("GnwI"),
                p = n("br9A"),
                m = n("9pSj"),
                h = n("O4UZ"),
                f = n("Ue10"),
                g = n("D/KL");
            ! function(e) {
                e.ANDROID = "ANDROID", e.IOS = "IOS", e.WEB = "WEB"
            }(i || (i = {}));
            var v = n("JRpg");
            n.d(t, "a", function() {
                return k
            });
            var b = "subscribe-button__prime-subscribe",
                y = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isSubscribing: !1,
                            primeSubFailure: !1,
                            error: void 0
                        }, t.handleStartPrimeTrialClick = function() {
                            t.props.reportSubMenuAction({
                                action: p.a.ClickSignupForPrime
                            })
                        }, t.getErrorType = function() {
                            return t.state.error || h.b.UNABLE_TO_SPEND
                        }, t.spendPrimeCredit = function() {
                            t.setState({
                                isSubscribing: !0
                            });
                            var e = t.props,
                                n = e.data;
                            if (t.isUserDataReady(e) && n.currentUser && n.currentUser.id && n.user && n.user.id) {
                                var r = n.user.id,
                                    a = n.currentUser.id,
                                    o = Object(d.a)({
                                        broadcasterID: r,
                                        userID: a
                                    });
                                t.props.spendPrimeSubscriptionCredit(o).then(function(e) {
                                    var n = ((e.data || {}).spendSubscriptionCredit || {}).error;
                                    if (n) {
                                        var r = h.b[n.code];
                                        t.setState({
                                            isSubscribing: !1,
                                            primeSubFailure: !0,
                                            error: r || h.b.UNABLE_TO_SPEND
                                        })
                                    } else {
                                        t.setState({
                                            isSubscribing: !1,
                                            primeSubFailure: !1,
                                            error: void 0
                                        });
                                        Object(d.e)(v, {
                                            login: t.props.channelLogin
                                        }, function(e) {
                                            var t = e.user;
                                            return t && t.self && t.id && (t.self.subscriptionBenefit || (t.self.subscriptionBenefit = {
                                                __typename: "SubscriptionBenefit",
                                                id: t.id,
                                                purchasedWithPrime: !0,
                                                tier: c.a.Prime,
                                                platform: i.WEB,
                                                gift: {
                                                    __typename: "SubscriptionGift",
                                                    isGift: !1,
                                                    gifter: null
                                                },
                                                renewsAt: null,
                                                endsAt: null,
                                                paidUpgrade: null
                                            }), t.self.canPrimeSubscribe = !1), e
                                        })
                                    }
                                }).catch(function() {
                                    t.setState({
                                        isSubscribing: !1,
                                        primeSubFailure: !0,
                                        error: h.b.UNABLE_TO_SPEND
                                    })
                                })
                            }
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        if (this.state.isSubscribing) return a.createElement(f.v, r.a({
                            "data-test-selector": b,
                            disabled: this.state.isSubscribing,
                            icon: f.gb.Crown,
                            state: f.A.Loading
                        }, Object(f.Ub)(this.props)));
                        if (this.state.primeSubFailure) {
                            var e = this.getErrorType();
                            return a.createElement(m.c, {
                                fontSize: f.V.Size6,
                                testTarget: "prime-sub-error",
                                errorType: e
                            })
                        }
                        if (!this.isUserDataReady(this.props)) return a.createElement(f.Va, {
                            width: 82,
                            height: 30
                        });
                        var t = this.canPrimeSubscribe(this.props),
                            n = this.canResub(this.props);
                        if (!this.props.data.currentUser || !this.props.data.currentUser.hasPrime) {
                            var i = Object(s.d)("Start Your Free Trial", "PrimeSubscribe");
                            return a.createElement(f.v, r.a({
                                ariaLabel: i,
                                "data-test-selector": b,
                                icon: f.gb.Crown,
                                linkTo: s.a.tryPrimeURI,
                                onClick: this.handleStartPrimeTrialClick
                            }, Object(f.Ub)(this.props), {
                                targetBlank: !0
                            }), i)
                        }
                        if (this.isSubscribed(this.props) && !n) {
                            var o = Object(s.d)("Subscribed", "PrimeSubscribe");
                            return a.createElement(f.v, r.a({
                                ariaLabel: o,
                                "data-test-selector": b,
                                disabled: !0,
                                icon: f.gb.Crown
                            }, Object(f.Ub)(this.props)), o)
                        }
                        if (!t) {
                            var l = Object(s.d)("Not yet!", "PrimeSubscribe");
                            return a.createElement(f.v, r.a({
                                ariaLabel: l,
                                "data-test-selector": b,
                                disabled: !0,
                                icon: f.gb.Crown
                            }, Object(f.Ub)(this.props)), l)
                        }
                        var c = n ? Object(s.d)("Resubscribe Free", "PrimeSubscribe") : Object(s.d)("Subscribe Free", "PrimeSubscribe");
                        return a.createElement(f.v, r.a({
                            ariaLabel: c,
                            "data-test-selector": b,
                            disabled: this.state.isSubscribing,
                            icon: f.gb.Crown,
                            state: this.state.isSubscribing ? f.A.Loading : f.A.Default,
                            onClick: this.spendPrimeCredit
                        }, Object(f.Ub)(this.props)), c)
                    }, t.prototype.isUserDataReady = function(e) {
                        return e.data && e.data.user && !e.data.loading && !e.data.error
                    }, t.prototype.canPrimeSubscribe = function(e) {
                        return e.data && e.data.user && e.data.user.self && e.data.user.self.canPrimeSubscribe
                    }, t.prototype.canResub = function(e) {
                        return e.data && e.data.user && e.data.user.self && e.data.user.self.subscriptionBenefit && e.data.user.self.subscriptionBenefit.purchasedWithPrime && this.canPrimeSubscribe(this.props)
                    }, t.prototype.isSubscribed = function(e) {
                        var t = e.data,
                            n = t && t.user,
                            i = n && n.self;
                        return i && i.subscriptionBenefit
                    }, t
                }(a.Component),
                k = Object(o.compose)(Object(u.c)("PrimeSubscribe"), Object(l.a)(v, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin
                    }
                }), Object(l.a)(g, {
                    name: "spendPrimeSubscriptionCredit"
                }))(y)
        },
        Addw: function(e, t, n) {
            "use strict";

            function i(e) {
                var t = Math.floor(e / 3600),
                    n = Math.floor((e - 3600 * t) / 60),
                    i = e - 3600 * t - 60 * n;
                return t < 10 && (t = "0" + t), n < 10 && (n = "0" + n), i < 10 && (i = "0" + i), t + "h" + n + "m" + i + "s"
            }
            n.d(t, "a", function() {
                return i
            })
        },
        Ahlu: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "b", function() {
                return s
            });
            var i, r = n("/7QA"),
                a = n("2xye");

            function o(e) {
                r.n.track(a.SpadeEventType.BrowserPushNotificationPrompt, e)
            }

            function s(e) {
                r.n.track(a.SpadeEventType.BrowserPushNotificationDisable, e)
            }! function(e) {
                e.Settings = "settings", e.Channel = "channel"
            }(i || (i = {}))
        },
        Ar2k: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("TSYQ"),
                o = n("q1tI"),
                s = n("/0dD"),
                l = n("76Lv"),
                c = n("Ue10"),
                d = (n("b7GR"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e, t = ((e = {})[Object(l.c)(s.a.Dark)] = this.props.forceDarkTheme, e),
                            n = r.a({
                                direction: c.r.Right,
                                show: !0
                            }, this.props.balloonProps);
                        return o.createElement(c.Ma, {
                            className: a("rich-content-tooltip", t)
                        }, this.props.children, o.createElement(c.q, r.a({}, n), o.createElement("div", {
                            ref: this.props.refCallback,
                            className: "rich-content-tooltip__pointer-target"
                        }, o.createElement(c.Ma, {
                            padding: .5
                        }, this.props.content))))
                    }, t
                }(o.Component)),
                u = n("/7QA"),
                p = (n("BfUL"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            isError: !1,
                            options: null,
                            richOptions: null,
                            hovering: !1
                        }, n.logger = u.o.logger.withCategory("tooltip-layer"), n.clearTimeoutAndRun = function(e, t) {
                            void 0 === t && (t = 0), n.displayTimeout && (clearTimeout(n.displayTimeout), n.displayTimeout = 0), n.displayTimeout = setTimeout(function() {
                                e(), n.displayTimeout = 0
                            }, t)
                        }, n.setRef = function(e) {
                            n.removeEventListeners(), n.addEventListeners(e), n.ref = e
                        }, n.addEventListeners = function(e) {
                            e && (e.addEventListener("mouseenter", n.handleMouseEnter), e.addEventListener("mouseleave", n.handleMouseLeave), e.addEventListener("click", n.handleMouseClick))
                        }, n.removeEventListeners = function() {
                            n.ref && (n.ref.removeEventListener("mouseenter", n.handleMouseEnter), n.ref.removeEventListener("mouseleave", n.handleMouseLeave), n.ref.removeEventListener("click", n.handleMouseClick))
                        }, n.handleMouseEnter = function() {
                            n.setState({
                                hovering: !0
                            })
                        }, n.handleMouseLeave = function() {
                            n.setState({
                                hovering: !1
                            }, function() {
                                n.displayTimeout || n.hideTooltip()
                            })
                        }, n.handleMouseClick = function() {
                            n.setState({
                                hovering: !1
                            }, function() {
                                n.hideTooltip(!0)
                            })
                        }, i = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            u.o.stats.recordComponentError("TooltipLayer"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        if (this.state.isError) return null;
                        var e = this.state.options && this.state.options.from || this.state.richOptions && this.state.richOptions.from;
                        if (!e) return null;
                        var t = this.state.richOptions ? 2 : 0,
                            n = e.getBoundingClientRect(),
                            i = {
                                transform: "translate(" + Math.floor(n.left) + "px, " + Math.floor(n.top) + "px)",
                                width: n.width + t,
                                height: n.height
                            },
                            a = o.createElement("div", {
                                style: {
                                    width: i.width,
                                    height: i.height
                                }
                            }),
                            s = null;
                        return this.state.options ? s = o.createElement(c.Jb, {
                            direction: this.state.options.direction,
                            align: this.state.options.align,
                            label: this.state.options.label,
                            show: !0
                        }, a) : this.state.richOptions && (s = o.createElement(d, {
                            content: this.state.richOptions.richContent,
                            refCallback: this.state.richOptions.allowHover && this.setRef || void 0,
                            forceDarkTheme: this.state.richOptions.forceDarkTheme,
                            balloonProps: r.a({}, this.state.richOptions.balloonProps, {
                                show: !0
                            })
                        }, a)), o.createElement("div", {
                            className: "tooltip-layer",
                            style: i
                        }, s)
                    }, t.prototype.showTooltip = function(e) {
                        var t = this;
                        this.clearTimeoutAndRun(function() {
                            t.setState({
                                options: e,
                                richOptions: null
                            })
                        }), this.hoverTimeout && (clearTimeout(this.hoverTimeout), this.hoverTimeout = 0)
                    }, t.prototype.showRichTooltip = function(e) {
                        var t = this;
                        this.clearTimeoutAndRun(function() {
                            t.setState({
                                richOptions: e,
                                options: null
                            })
                        }, e && e.delayOpenMS && !this.hoverTimeout ? e.delayOpenMS : 0), this.hoverTimeout && (clearTimeout(this.hoverTimeout), this.hoverTimeout = 0)
                    }, t.prototype.hideTooltip = function(e) {
                        var t = this;
                        e || this.state.hovering || this.displayTimeout || (this.hoverTimeout = setTimeout(function() {
                            clearTimeout(t.hoverTimeout), t.hoverTimeout = 0
                        }, 1e3)), this.clearTimeoutAndRun(function() {
                            t.state.hovering || t.setState({
                                options: null,
                                richOptions: null
                            })
                        }, !e && this.state.richOptions && this.state.richOptions.allowHover ? 400 : 0)
                    }, t
                }(o.Component));

            function m() {
                return function(e) {
                    return function(t) {
                        function n() {
                            var e = null !== t && t.apply(this, arguments) || this;
                            return e.logger = u.j.withCategory("TooltipLayer"), e.show = function(t) {
                                i ? i.showTooltip(t) : e.logger.error(new Error, "Attempted to show a tooltip in the global layer, but the global layer was not mounted.")
                            }, e.showRich = function(t) {
                                i ? i.showRichTooltip(t) : e.logger.error(new Error, "Attempted to show a tooltip in the global layer, but the global layer was not mounted.")
                            }, e.hide = function() {
                                i ? i.hideTooltip() : e.logger.error(new Error, "Attempted to show a tooltip in the global layer, but the global layer was not mounted.")
                            }, e
                        }
                        return r.d(n, t), n.prototype.render = function() {
                            var t = {
                                tooltipLayer: {
                                    show: this.show,
                                    showRich: this.showRich,
                                    hide: this.hide
                                }
                            };
                            return o.createElement(e, r.a({}, this.props, t))
                        }, n
                    }(o.Component)
                }
            }
            n.d(t, "a", function() {
                return d
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "c", function() {
                return m
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, !1, function() {})
        },
        AsVq: function(e, t, n) {},
        "B+KG": function(e, t, n) {},
        B1YN: function(e, t, n) {},
        BK8n: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("Ue10"),
                a = function(e) {
                    var t = null;
                    return e.title && (t = i.createElement(r.Ma, {
                        padding: {
                            bottom: 1
                        }
                    }, i.createElement(r.Q, {
                        fontSize: r.V.Size6,
                        color: e.error ? r.K.Error : r.K.Base,
                        bold: !0
                    }, e.title))), i.createElement(r.qb, {
                        padding: 2,
                        borderTop: !0
                    }, t, e.children, e.errorMessage && i.createElement(r.Q, {
                        color: r.K.Error,
                        fontSize: r.V.Size7
                    }, e.errorMessage))
                };
            n.d(t, "a", function() {
                return a
            })
        },
        BLPV: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return l
            });
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("Ue10");
            ! function(e) {
                e[e.NoChanges = 0] = "NoChanges", e[e.DirtyChanges = 1] = "DirtyChanges", e[e.Working = 2] = "Working", e[e.Success = 3] = "Success", e[e.Error = 4] = "Error"
            }(i || (i = {}));
            var l = function(e) {
                var t = e.status,
                    n = e.children,
                    l = r.g(e, ["status", "children"]),
                    c = s.A.Default,
                    d = s.B.Default,
                    u = !1;
                return t === i.Working ? c = s.A.Loading : t === i.Success ? c = s.A.Success : t === i.Error ? d = s.B.Alert : t === i.NoChanges && (u = !0), n || (n = t === i.Error ? Object(o.d)("Error", "Save Button") : Object(o.d)("Save", "Save Button")), a.createElement(s.v, r.a({
                    disabled: u,
                    state: c,
                    type: d
                }, l), n)
            }
        },
        BS0g: function(e, t, n) {},
        BSQc: function(e, t, n) {},
        BSTw: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Algolia_RequestInfo"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 57
                }
            };
            n.loc.source = {
                body: "query Algolia_RequestInfo {\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Ba7Q: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("kRBY"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("oJmH"),
                l = n("/7QA"),
                c = n("yR8l"),
                d = n("geRD"),
                u = n("0OKo"),
                p = n("Ue10"),
                m = n("htqZ"),
                h = n("i46O"),
                f = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isFollowing: !1,
                            disableNotifications: !0
                        }, t.toggleNotificationsEnabled = function() {
                            var e = t.getFollowData();
                            if (e) {
                                var n = e.user && e.user.id || "",
                                    i = {
                                        disableNotifications: !t.state.disableNotifications,
                                        targetID: n
                                    },
                                    r = {
                                        followUser: {
                                            __typename: "FollowUserPayload",
                                            follow: {
                                                __typename: "Follow",
                                                user: {
                                                    __typename: "User",
                                                    id: n,
                                                    self: {
                                                        __typename: "UserSelfConnection",
                                                        follower: {
                                                            __typename: "FollowerEdge",
                                                            disableNotifications: !t.state.disableNotifications
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    };
                                t.props.followUser(Object(d.b)(i, r)), t.setState(function(e) {
                                    return {
                                        disableNotifications: !e.disableNotifications
                                    }
                                })
                            }
                        }, t.getFollowData = function() {
                            return t.props.followData ? t.props.followData : t.props.data
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentWillMount = function() {
                        var e = this.props.followData;
                        if (e) {
                            var t = e.user && e.user.self && e.user.self.follower && e.user.self.follower.disableNotifications;
                            this.setState({
                                isFollowing: null !== t || !1,
                                disableNotifications: t
                            })
                        }
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = null;
                        e.followData && e.followData.user ? t = e.followData.user : !e.data || e.data.loading || e.data.error || (t = e.data.user), t && this.setState({
                            isFollowing: t && t.self && t.self.follower && null !== t.self.follower.disableNotifications || !1,
                            disableNotifications: !(t && t.self && t.self.follower && null !== t.self.follower.disableNotifications) || t.self.follower.disableNotifications
                        })
                    }, t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e, t;
                        return this.state.isFollowing ? this.state.disableNotifications ? (t = "live-notifications-toggle__status-text--disabled", e = Object(l.d)("Opt in to notifications to receive updates on this channel's activity, including when they go live.", "LiveNotificationsToggle")) : (t = "live-notifications-toggle__status-text--enabled", e = Object(l.d)("You will be notified on this channel's activity, including when they go live.", "LiveNotificationsToggle")) : (e = Object(l.d)("Follow this channel to receive notifications when they go live.", "LiveNotificationsToggle"), t = "live-notifications-toggle__status-text--not-following"), o.createElement(p.qb, {
                            color: p.K.Base,
                            display: p.R.Flex,
                            flexWrap: p.U.Wrap
                        }, o.createElement(p.Ma, {
                            display: p.R.Flex,
                            flexWrap: p.U.NoWrap,
                            fullWidth: !0,
                            justifyContent: p.La.Between
                        }, o.createElement(p.Ma, {
                            display: p.R.Flex,
                            padding: {
                                right: 2
                            }
                        }, o.createElement("span", null, o.createElement(p.Q, {
                            fontSize: p.V.Size4,
                            bold: !0
                        }, Object(l.d)("Notifications", "LiveNotificationsToggle")))), o.createElement(p.Ma, {
                            display: p.R.Flex,
                            flexShrink: 0
                        }, o.createElement(p.Ib, {
                            onChange: this.toggleNotificationsEnabled,
                            checked: !this.state.disableNotifications,
                            "data-test-selector": "live-notifications-toggle__toggle",
                            "data-a-target": "notifications-toggle",
                            disabled: !this.state.isFollowing
                        }))), o.createElement(p.Ma, {
                            display: p.R.InlineFlex,
                            padding: {
                                bottom: 1
                            }
                        }, o.createElement(p.Q, {
                            type: p.Gb.Span,
                            color: p.K.Alt2,
                            "data-test-selector": t
                        }, e)))
                    }, t
                }(o.Component),
                g = Object(s.compose)(Object(c.a)(h, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return !(e.firstPageLoaded && e.isLoggedIn && e.channelLogin && !e.followData)
                    }
                }), Object(c.a)(m, {
                    name: "followUser"
                }), Object(u.a)("LiveNotificationsToggle"))(f);
            var v = Object(i.b)(function(e) {
                return {
                    firstPageLoaded: e.session.firstPageLoaded,
                    isLoggedIn: Object(r.e)(e)
                }
            })(g);
            n.d(t, "a", function() {
                return v
            })
        },
        BfUL: function(e, t, n) {},
        Bh3T: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("dtw8"),
                a = n("fvjX"),
                o = n("mrSG"),
                s = n("TSYQ"),
                l = n("17x9"),
                c = n("q1tI"),
                d = n("4VQm"),
                u = n("Ue10"),
                p = (n("k3L1"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            scrollableProps: {}
                        }, t.historyUnlisten = null, t.currentPath = t.props.location.pathname, t.getChildContext = function() {
                            return {
                                setRootScrollableProps: t.setRootScrollableProps,
                                resetRootScrollableProps: t.resetRootScrollableProps
                            }
                        }, t.setRootScrollableProps = function(e) {
                            t.setState({
                                scrollableProps: e
                            })
                        }, t.resetRootScrollableProps = function() {
                            t.setState({
                                scrollableProps: {}
                            })
                        }, t.onHistoryChange = function(e, n) {
                            !t.scrollableAreaRef || "POP" === n || e.pathname === t.currentPath || t.state.scrollableProps && t.state.scrollableProps.suppressScrollToTop || t.scrollableAreaRef.scrollToTop(), t.currentPath = e.pathname
                        }, t.setScrollableAreaRef = function(e) {
                            return t.scrollableAreaRef = e
                        }, t
                    }
                    return o.d(t, e), t.prototype.componentDidMount = function() {
                        this.historyUnlisten = this.props.history.listen(this.onHistoryChange)
                    }, t.prototype.componentWillUnmount = function() {
                        this.historyUnlisten && this.historyUnlisten()
                    }, t.prototype.render = function() {
                        var e = this.props.playerIsPersisting && this.state.scrollableProps && this.state.scrollableProps.addPaddingWhenPlayerIsPersisting,
                            t = s({
                                "root-scrollable": !this.state.scrollableProps.className,
                                "root-scrollable--persisting-player": e
                            }, this.state.scrollableProps.className || ""),
                            n = o.a({
                                contentClassName: "root-scrollable__content"
                            }, this.state.scrollableProps, {
                                className: t
                            });
                        return c.createElement(d.b, o.a({}, n, {
                            "data-a-target": "root-scroller",
                            scrollRef: this.setScrollableAreaRef
                        }), c.createElement(u.Ma, {
                            position: u.Wa.Relative,
                            fullWidth: !0,
                            className: "root-scrollable__wrapper",
                            refDelegate: this.props.contentRefDelegate
                        }, this.props.children))
                    }, t.childContextTypes = {
                        setRootScrollableProps: l.func,
                        resetRootScrollableProps: l.func
                    }, t
                }(c.Component));
            var m = Object(a.d)(r.f, Object(i.b)(function(e) {
                    return {
                        playerIsPersisting: e.ui.persistentPlayerEnabled && e.ui.persistentPlayerIsPersisting
                    }
                }))(p),
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.shouldSetRootScrollableProps = function(e, t) {
                            return !(!e || !t) && (e.disableDebounce !== t.disableDebounce || (e.scrollRef !== t.scrollRef || (e.contentClassName !== t.contentClassName || (e.scrollContentClassName !== t.scrollContentClassName || (e.suppressScrollToTop !== t.suppressScrollToTop || (e.suppressScrollX !== t.suppressScrollX || (e.suppressScrollY !== t.suppressScrollY || e.className !== t.className)))))))
                        }, t
                    }
                    return o.d(t, e), t.prototype.componentDidMount = function() {
                        this.context.setRootScrollableProps && this.context.setRootScrollableProps(this.props)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.shouldSetRootScrollableProps(this.props, e) && this.context.setRootScrollableProps && this.context.setRootScrollableProps(e)
                    }, t.prototype.componentWillUnmount = function() {
                        this.context.resetRootScrollableProps && this.context.resetRootScrollableProps()
                    }, t.prototype.render = function() {
                        return null
                    }, t.contextTypes = {
                        setRootScrollableProps: l.func,
                        resetRootScrollableProps: l.func
                    }, t
                }(c.Component);
            n.d(t, "a", function() {
                return m
            }), n.d(t, "b", function() {
                return h
            })
        },
        BhFH: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("yR8l"),
                a = n("8jSG"),
                o = n("cMjZ"),
                s = n("kSkr");

            function l() {
                var e = this;
                return Object(r.a)(s, {
                    props: function(t) {
                        return {
                            blockUserMutation: function(n, r, s, l) {
                                return i.b(e, void 0, void 0, function() {
                                    return i.e(this, function(e) {
                                        switch (e.label) {
                                            case 0:
                                                return t.mutate ? [4, t.mutate({
                                                    variables: {
                                                        input: {
                                                            targetUserID: n,
                                                            sourceContext: s,
                                                            reason: r
                                                        }
                                                    },
                                                    optimisticResponse: {
                                                        blockUser: {
                                                            __typename: "BlockUserPayload",
                                                            targetUser: {
                                                                __typename: "User",
                                                                id: n
                                                            }
                                                        }
                                                    },
                                                    update: function(e) {
                                                        var t = e.readFragment({
                                                            id: Object(o.a)(l),
                                                            fragment: a
                                                        });
                                                        t && (t.blockedUsers.push({
                                                            id: n,
                                                            __typename: "User"
                                                        }), e.writeFragment({
                                                            id: Object(o.a)(l),
                                                            fragment: a,
                                                            data: t
                                                        }))
                                                    }
                                                })] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 3];
                                            case 2:
                                                throw new Error("blockUserMutation is not ready");
                                            case 3:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }
        },
        BndF: function(e, t, n) {},
        By5U: function(e, t) {},
        CZEr: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FollowButton_UnfollowUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UnfollowUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "unfollowUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follow"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "disableNotifications"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 130
                }
            };
            n.loc.source = {
                body: "mutation FollowButton_UnfollowUser($input: UnfollowUserInput!) {\nunfollowUser(input: $input) {\nfollow {\ndisableNotifications\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        ClZk: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return s
            }), n.d(t, "e", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            }), n.d(t, "a", function() {
                return d
            });
            var i = n("mrSG"),
                r = n("KxT4"),
                a = n("eLB1");

            function o(e, t) {
                var n = e.gdpr,
                    i = n.status,
                    r = n.vendorPreferences;
                return i !== a.a.Skip && (i !== a.a.ConsentSaved || !r[t])
            }

            function s(e) {
                return Object(r.f)() && e === a.a.ConsentRequired
            }

            function l(e) {
                return e.gdpr.status === a.a.Loading || s(e.gdpr.status)
            }

            function c(e, t) {
                var n = i.a({}, e);
                return n = Object.keys(n).reduce(function(e, n) {
                    return i.a({}, e, ((r = {})[n] = t, r));
                    var r
                }, n)
            }

            function d(e, t) {
                return Object.keys(e).every(function(n) {
                    return e[n] === t
                })
            }
        },
        CzFK: function(e, t, n) {
            "use strict";
            n.d(t, "f", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "d", function() {
                return o
            }), n.d(t, "e", function() {
                return s
            }), n.d(t, "g", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            }), n.d(t, "l", function() {
                return d
            }), n.d(t, "h", function() {
                return u
            }), n.d(t, "i", function() {
                return p
            }), n.d(t, "j", function() {
                return m
            }), n.d(t, "m", function() {
                return h
            }), n.d(t, "k", function() {
                return f
            }), n.d(t, "n", function() {
                return g
            });
            var i = "whispers.THREAD_OPENED",
                r = "whispers.THREAD_CLOSED",
                a = "whispers.THREAD_COLLAPSED",
                o = "whispers.THREAD_EXPANDED",
                s = "whispers.THREAD_FOCUSED",
                l = "whispers.THREAD_UNFOCUSED",
                c = "whispers.CONTENT_RESIZED";

            function d(e, t) {
                return {
                    type: i,
                    data: e,
                    contentWidth: t
                }
            }

            function u(e, t) {
                return {
                    type: r,
                    threadID: e,
                    contentWidth: t
                }
            }

            function p(e, t) {
                return {
                    type: a,
                    threadID: e,
                    contentWidth: t
                }
            }

            function m(e, t) {
                return {
                    type: o,
                    threadID: e,
                    contentWidth: t
                }
            }

            function h(e) {
                return {
                    type: c,
                    contentWidth: e
                }
            }

            function f(e, t) {
                return {
                    type: s,
                    threadID: e,
                    contentWidth: t
                }
            }

            function g(e, t) {
                return {
                    type: l,
                    threadID: e,
                    contentWidth: t
                }
            }
        },
        "D/KL": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "PrimeSubscribe_SpendPrimeSubscriptionCredit"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "SpendSubscriptionCreditInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "spendSubscriptionCredit"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "userID"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionBenefit"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "purchasedWithPrime"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "tier"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "platform"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "endsAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "error"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "code"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 227
                }
            };
            n.loc.source = {
                body: "mutation PrimeSubscribe_SpendPrimeSubscriptionCredit($input: SpendSubscriptionCreditInput!) {\nspendSubscriptionCredit(input: $input) {\nuserID\nsubscriptionBenefit {\nid\npurchasedWithPrime\ntier\nplatform\nendsAt\n}\nerror {\ncode\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "D2+s": function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("8Ad5"),
                l = n("/0dD"),
                c = n("76Lv"),
                d = n("8/mp"),
                u = n("oUNp"),
                p = n("Ue10"),
                m = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.openEditing = function(e) {
                            t.props.openEditing(e)
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e, t, n = this,
                            i = this.props.override,
                            r = void 0 !== i;
                        return "boolean" == typeof this.props.settingData ? t = a.createElement(p.Ma, null, this.renderToggle(this.props.settingKey, !!this.props.settingData, i)) : (t = a.createElement(p.Q, {
                            wordBreak: p.Sb.BreakAll
                        }, r ? JSON.stringify(i) : JSON.stringify(this.props.settingData)), e = a.createElement(p.Ma, {
                            margin: {
                                left: 1
                            }
                        }, a.createElement(p.w, {
                            ariaLabel: "Edit",
                            icon: p.gb.Edit,
                            key: this.props.settingKey,
                            onClick: function() {
                                return n.openEditing(n.props.settingKey)
                            },
                            blurAfterClick: !0
                        }))), a.createElement(p.qb, {
                            margin: {
                                bottom: 1,
                                right: 1
                            },
                            padding: 1,
                            color: p.K.Base,
                            display: p.R.Flex,
                            justifyContent: p.La.Between,
                            border: !0,
                            borderMarked: r,
                            key: this.props.settingKey
                        }, a.createElement(p.X, {
                            label: this.props.settingKey
                        }, t), e)
                    }, t.prototype.renderToggle = function(e, t, n) {
                        var i = this;
                        return a.createElement(p.Ib, {
                            onChange: function(n) {
                                var r = n.currentTarget.checked;
                                i.props.setOverride(e, r === t ? void 0 : r)
                            },
                            checked: void 0 === n ? t : !!n
                        })
                    }, t
                }(a.Component),
                h = (n("IhyH"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            value: t.props.value
                        }, t.onValueChange = function(e) {
                            t.setState({
                                value: e.target.value
                            })
                        }, t.saveOverride = function() {
                            t.props.saveOverride(t.props.overrideKey, t.state.value)
                        }, t.removeOverride = function() {
                            t.props.saveOverride(t.props.overrideKey, void 0), t.props.close()
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = "string" == typeof this.state.value ? this.state.value : JSON.stringify(this.props.value);
                        return a.createElement(d.b, {
                            contentClassName: "dynamic-setting-edit__content"
                        }, a.createElement(p.qb, {
                            background: p.n.Alt,
                            padding: 1,
                            fullWidth: !0,
                            display: p.R.Flex,
                            flexDirection: p.T.Column,
                            overflow: p.Pa.Hidden
                        }, a.createElement(p.Q, {
                            fontSize: p.V.Size3,
                            color: p.K.Alt
                        }, this.props.overrideKey), a.createElement(p.Ma, {
                            display: p.R.Flex,
                            alignItems: p.c.Stretch,
                            margin: {
                                y: 1
                            },
                            fullHeight: !0
                        }, a.createElement(p.Db, {
                            placeholder: "(undefined)",
                            onChange: this.onValueChange,
                            value: e,
                            noResize: !0
                        })), a.createElement(p.Ma, {
                            flexShrink: 0,
                            display: p.R.Flex,
                            flexDirection: p.T.Column,
                            alignItems: p.c.End
                        }, this.props.error && a.createElement(p.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(p.Q, {
                            color: p.K.Error
                        }, this.props.error)), a.createElement(p.Ma, {
                            display: p.R.Flex,
                            justifyContent: p.La.End
                        }, a.createElement(p.Ma, {
                            display: p.R.InlineBlock,
                            margin: {
                                right: 1
                            }
                        }, a.createElement(p.v, {
                            onClick: this.props.close,
                            type: p.B.Hollow
                        }, "Cancel")), this.props.hasOverride && a.createElement(p.Ma, {
                            display: p.R.InlineBlock,
                            margin: {
                                right: 1
                            }
                        }, a.createElement(p.v, {
                            type: p.B.Alert,
                            onClick: this.removeOverride
                        }, "Remove Override")), a.createElement(p.v, {
                            disabled: this.props.value === e,
                            onClick: this.saveOverride
                        }, "Save Override")))))
                    }, t
                }(a.Component));
            ! function(e) {
                e.OverridesOnLoad = "PAGE LOADED WITH OVERRIDES ACTIVE", e.OverridesRequireRefresh = "Refresh the page to see your changes.", e.None = ""
            }(i || (i = {}));
            var f = n("p46w"),
                g = n("D7An");

            function v() {
                return o.l.get(u.b, {})
            }

            function b() {
                var e = {};
                try {
                    var t = f.get(o.a.experimentsOverrideCookie);
                    if (t) {
                        var n = JSON.parse(t);
                        Object.keys(n).forEach(function(t) {
                            g.a[t] ? e[t] = n[t] : o.j.warn("Cookie experiment ID is not in DEFAULT_ASSIGNMENTS mapping", t)
                        })
                    }
                } catch (e) {
                    o.j.warn("Unable to parse cookie overrides", e), f.set(o.a.experimentsOverrideCookie, JSON.stringify({}))
                }
                return e
            }

            function y(e, t) {
                var n = t.length,
                    i = e.length;
                if (i > n) return !1;
                if (i === n) return e === t;
                e: for (var r = 0, a = 0; r < i; r++) {
                    for (var o = e.charCodeAt(r); a < n;)
                        if (t.charCodeAt(a++) === o) continue e;
                    return !1
                }
                return !0
            }
            var k = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            searchQuery: "",
                            dynamicSettingError: "",
                            overrides: v(),
                            editingOverrideKey: ""
                        }, t.dynamicSettings = window.__twilightSettings, t.filteredDynamicSettings = function() {
                            return "" === t.state.searchQuery ? Object.keys(t.dynamicSettings) : Object.keys(t.dynamicSettings).filter(function(e) {
                                return y(t.state.searchQuery, e.toLowerCase())
                            })
                        }, t.openEditing = function(e) {
                            t.setState({
                                editingOverrideKey: e
                            })
                        }, t.closeEditing = function() {
                            t.setState({
                                editingOverrideKey: "",
                                dynamicSettingError: ""
                            })
                        }, t.setOverride = function(e, n) {
                            var a = r.a({}, t.state.overrides);
                            if (void 0 === n) delete a[e];
                            else {
                                var s = void 0;
                                try {
                                    s = JSON.parse(n)
                                } catch (e) {
                                    s = n
                                }
                                var l = typeof t.dynamicSettings[e],
                                    c = typeof s;
                                if (l !== c) return void t.setState({
                                    dynamicSettingError: "Invalid entry: <" + c + "> is not of type <" + l + ">"
                                });
                                a[e] = s
                            }
                            t.closeEditing(), t.setState({
                                overrides: a
                            }), o.l.set(u.b, a), t.props.showUrgentMessage(i.OverridesRequireRefresh)
                        }, t.onSearchTextChange = function(e) {
                            t.setState({
                                searchQuery: e.target.value.toLowerCase()
                            })
                        }, t.clearOverrides = function() {
                            o.l.set(u.b, {}), t.setState({
                                overrides: {}
                            }), t.props.showUrgentMessage(i.OverridesRequireRefresh)
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this,
                            t = Object.keys(this.state.overrides).length,
                            n = this.state.editingOverrideKey ? this.dynamicSettings[this.state.editingOverrideKey] : void 0,
                            i = this.state.editingOverrideKey ? this.state.overrides[this.state.editingOverrideKey] : void 0,
                            r = void 0 !== i,
                            o = r ? i : n;
                        return a.createElement(p.Ma, {
                            fullHeight: !0,
                            fullWidth: !0,
                            overflow: p.Pa.Hidden,
                            padding: {
                                bottom: 2
                            }
                        }, a.createElement(p.Ma, {
                            padding: {
                                right: 1
                            },
                            display: p.R.Flex,
                            fullWidth: !0
                        }, a.createElement(p.Ma, {
                            flexGrow: 1
                        }, a.createElement(p.Ha, {
                            type: p.Ia.Search,
                            onChange: this.onSearchTextChange,
                            placeholder: "Search for Dynamic Settings"
                        })), a.createElement(p.Ma, {
                            flexShrink: 1,
                            margin: {
                                left: 1
                            }
                        }, a.createElement(p.v, {
                            onClick: this.clearOverrides,
                            disabled: 0 === t
                        }, "clear overrides (", t, ")"))), a.createElement(p.Fa, {
                            fullWidth: !0
                        }, a.createElement(d.b, {
                            suppressScrollX: !0
                        }, a.createElement(p.Ma, {
                            padding: {
                                y: 1
                            }
                        }, this.filteredDynamicSettings().map(function(t) {
                            return a.createElement(m, {
                                key: t,
                                settingKey: t,
                                override: e.state.overrides[t],
                                settingData: window.__twilightSettings[t],
                                openEditing: e.openEditing,
                                setOverride: e.setOverride
                            })
                        })))), this.state.editingOverrideKey && a.createElement(p.qb, {
                            position: p.Wa.Absolute,
                            attachTop: !0,
                            attachLeft: !0,
                            fullHeight: !0,
                            fullWidth: !0,
                            padding: 1,
                            background: p.n.Overlay
                        }, a.createElement(h, {
                            close: this.closeEditing,
                            saveOverride: this.setOverride,
                            overrideKey: this.state.editingOverrideKey,
                            value: o,
                            hasOverride: r,
                            error: this.state.dynamicSettingError
                        })))
                    }, t
                }(a.Component),
                S = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onOverrideSelect = function(e) {
                            var n = t.props.override === e ? void 0 : e;
                            t.props.setOverride(t.props.experimentData.id, n)
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.experimentData,
                            n = void 0 !== this.props.override;
                        return a.createElement(p.qb, {
                            margin: {
                                bottom: 1,
                                right: 1
                            },
                            padding: 1,
                            color: p.K.Base,
                            display: p.R.Flex,
                            alignItems: p.c.Center,
                            justifyContent: p.La.Between,
                            border: !0,
                            borderMarked: n
                        }, a.createElement(p.X, {
                            label: t.name
                        }, a.createElement(p.Ma, {
                            display: p.R.Flex,
                            flexDirection: p.T.Column,
                            fullWidth: !0,
                            ellipsis: !0
                        }, t.groups.map(function(i) {
                            var r = n ? e.props.override : o.o.experiments.getAssignments()[t.id];
                            return a.createElement(p.Ma, {
                                margin: {
                                    bottom: .5
                                },
                                key: i.value
                            }, a.createElement(p.cb, {
                                onChange: function() {
                                    return e.onOverrideSelect(i.value)
                                },
                                label: i.value,
                                name: t.name,
                                checked: r === i.value
                            }))
                        }))))
                    }, t
                }(a.Component);
            var w = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.experiments = Object.keys(window.__twilightSettings.experiments).filter(function(e) {
                            return !!g.a[e]
                        }).reduce(function(e, t) {
                            return e[t] = r.a({
                                id: t
                            }, window.__twilightSettings.experiments[t]), e
                        }, {}), n.filteredExperiments = function() {
                            return "" === n.state.searchQuery ? Object.keys(n.experiments) : Object.keys(n.experiments).filter(function(e) {
                                return y(n.state.searchQuery, n.experiments[e].name.toLowerCase())
                            })
                        }, n.onExperimentSearchTextChange = function(e) {
                            n.setState({
                                searchQuery: e.target.value.toLowerCase()
                            })
                        }, n.setOverride = function(e, t) {
                            var a = r.a({}, n.state.overrides);
                            t ? a[e] = t : delete a[e], n.setState({
                                overrides: a
                            }), f.set(o.a.experimentsOverrideCookie, JSON.stringify(a)), n.props.showUrgentMessage(i.OverridesRequireRefresh)
                        }, n.clearOverrides = function() {
                            f.set(o.a.experimentsOverrideCookie, JSON.stringify({})), n.setState({
                                overrides: {}
                            }), n.props.showUrgentMessage(i.OverridesRequireRefresh)
                        }, n.state = {
                            searchQuery: "",
                            overrides: b()
                        }, n
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this,
                            t = Object.keys(this.state.overrides).length;
                        return a.createElement(p.Ma, {
                            fullHeight: !0,
                            fullWidth: !0,
                            overflow: p.Pa.Hidden,
                            padding: {
                                bottom: 2
                            }
                        }, a.createElement(p.Ma, {
                            padding: {
                                right: 1
                            },
                            display: p.R.Flex,
                            fullWidth: !0
                        }, a.createElement(p.Ma, {
                            flexGrow: 1
                        }, a.createElement(p.Ha, {
                            type: p.Ia.Search,
                            onChange: this.onExperimentSearchTextChange,
                            placeholder: "Search for Experiments"
                        })), a.createElement(p.Ma, {
                            flexShrink: 1,
                            margin: {
                                left: 1
                            }
                        }, a.createElement(p.v, {
                            onClick: this.clearOverrides,
                            disabled: 0 === t
                        }, "Clear overrides (", t, ")"))), a.createElement(p.Fa, {
                            fullWidth: !0
                        }, a.createElement(d.b, null, a.createElement(p.Ma, {
                            padding: {
                                y: 1
                            }
                        }, this.filteredExperiments().map(function(t) {
                            var n = e.state.overrides[t];
                            return a.createElement(S, {
                                key: t,
                                experimentData: e.experiments[t],
                                override: n,
                                setOverride: e.setOverride
                            })
                        })))))
                    }, t
                }(a.Component),
                E = n("EuNP");
            n("NM47");
            n.d(t, "a", function() {
                return N
            }), n.d(t, "b", function() {
                return O
            });
            var C, N = "twilight.perf-hide",
                T = "twilight.perf-size",
                _ = "twilight.staff-tab",
                R = 3;
            ! function(e) {
                e.Latency = "Latency", e.Experiments = "Experiments", e.DynamicSettings = "Dynamic Settings"
            }(C || (C = {}));
            var O = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.showUrgentMessage = function(e) {
                        n.setState({
                            urgentMessage: e
                        })
                    }, n.renderStaffTabButton = function(e, t, i) {
                        void 0 === i && (i = !1);
                        var r = n.state.selectedTab === e;
                        return a.createElement(p.Jb, {
                            label: e,
                            direction: p.Lb.Right
                        }, a.createElement(p.w, {
                            onClick: function() {
                                n.setState({
                                    selectedTab: e
                                }), o.l.set(_, e)
                            },
                            icon: t,
                            size: p.x.Large,
                            overlay: !r,
                            ariaLabel: "Go To " + e,
                            type: r ? p.y.Primary : p.y.Default,
                            blurAfterClick: !0
                        }), i && a.createElement(p.Ma, {
                            position: p.Wa.Relative
                        }, a.createElement(p.Ma, {
                            position: p.Wa.Absolute,
                            attachTop: !0,
                            attachRight: !0
                        }, a.createElement(p.Ta, {
                            label: "!",
                            type: p.Ua.Notification
                        }))))
                    }, n.onReload = function() {
                        location.reload()
                    }, n.onClickWindowSize = function() {
                        var e = n.state.size + 1;
                        e > R && (e = 0), o.l.set(T, e.toString()), n.setState({
                            size: e
                        })
                    }, n.onClickClose = function() {
                        n.setState({
                            hidden: !0
                        })
                    }, n.onKeyDown = function(e) {
                        var t = e.keyCode === s.a.S && e.shiftKey && (e.ctrlKey || e.metaKey);
                        t && n.state.hidden ? (o.l.remove(N), n.setState({
                            hidden: !1
                        })) : t && !n.state.hidden && (o.l.set(N, !0), n.setState({
                            hidden: !0
                        }))
                    };
                    var r = Object.keys(b()).length > 0,
                        l = Object.keys(v()).length > 0,
                        c = r || l,
                        d = c ? i.OverridesOnLoad : i.None;
                    return n.state = {
                        hidden: o.l.get(N, !1) && !c,
                        size: o.l.get(T, 0),
                        selectedTab: o.l.get(_, C.Latency),
                        urgentMessage: d
                    }, n
                }
                return r.d(t, e), t.prototype.componentWillMount = function() {
                    window.addEventListener("keydown", this.onKeyDown), o.o.experiments.getAssignment("just using this to init")
                }, t.prototype.componentWillUnmount = function() {
                    window.removeEventListener("keydown", this.onKeyDown)
                }, t.prototype.render = function() {
                    if (this.state.hidden) return null;
                    var e = Object.keys(b()).length > 0,
                        t = Object.keys(v()).length > 0;
                    return a.createElement(p.qb, {
                        className: "staff-console staff-console--size-" + this.state.size + " " + Object(c.c)(l.a.Dark),
                        position: p.Wa.Fixed,
                        display: p.R.Flex
                    }, a.createElement(p.qb, {
                        display: p.R.Flex,
                        border: !0,
                        fullWidth: !0
                    }, a.createElement(p.qb, {
                        className: "staff-consol__select-bar",
                        flexShrink: 1,
                        flexGrow: 0,
                        display: p.R.Flex,
                        flexDirection: p.T.Column,
                        borderRight: !0
                    }, this.renderStaffTabButton(C.Latency, p.gb.OP), this.renderStaffTabButton(C.Experiments, p.gb.Experiment, e), this.renderStaffTabButton(C.DynamicSettings, p.gb.NavSettings, t)), a.createElement(p.Ma, {
                        flexGrow: 1,
                        display: p.R.Flex,
                        flexDirection: p.T.Column,
                        overflow: p.Pa.Hidden
                    }, a.createElement(p.qb, {
                        className: "staff-console__top-bar",
                        flexGrow: 0,
                        flexShrink: 0,
                        display: p.R.Flex,
                        justifyContent: p.La.Between,
                        flexWrap: p.U.NoWrap,
                        alignItems: p.c.Center,
                        borderBottom: !0
                    }, a.createElement(p.Ma, {
                        padding: {
                            left: 1
                        }
                    }, a.createElement(p.Q, {
                        bold: !0,
                        fontSize: p.V.Size4,
                        type: p.Gb.Span
                    }, this.state.selectedTab)), a.createElement(p.Ma, {
                        display: p.R.Flex,
                        padding: {
                            right: .5
                        }
                    }, a.createElement(p.w, {
                        onClick: this.onClickWindowSize,
                        icon: p.gb.Maximize,
                        overlay: !0,
                        ariaLabel: "Change Size"
                    }), a.createElement(p.w, {
                        onClick: this.onClickClose,
                        icon: p.gb.Close,
                        overlay: !0,
                        ariaLabel: "Close"
                    }))), a.createElement(p.Ma, {
                        display: p.R.Flex,
                        position: p.Wa.Relative,
                        flexGrow: 1,
                        fullHeight: !0,
                        padding: {
                            left: 1,
                            top: 1
                        }
                    }, this.renderTabContent(this.state.selectedTab)), a.createElement(p.qb, {
                        flexShrink: 0,
                        flexGrow: 0,
                        borderTop: !0
                    }, this.state.urgentMessage && a.createElement(p.qb, {
                        background: p.n.Accent,
                        padding: {
                            x: 1,
                            y: .5
                        },
                        display: p.R.Flex,
                        alignItems: p.c.Center,
                        justifyContent: p.La.Between
                    }, a.createElement(p.Q, null, this.state.urgentMessage), this.state.urgentMessage === i.OverridesRequireRefresh && a.createElement(p.v, {
                        onClick: this.onReload,
                        size: p.z.Small,
                        type: p.B.Hollow,
                        overlay: !0
                    }, "Reload Page")), a.createElement(p.Ma, {
                        padding: {
                            x: 1,
                            y: .5
                        },
                        className: "staff-console__hint-text"
                    }, 'Press "Ctr/Cmd + Shift + S" to toggle Staff Console')))))
                }, t.prototype.renderTabContent = function(e) {
                    switch (e) {
                        case C.Latency:
                            return a.createElement(E.a, {
                                benchmarking: o.o.benchmarking
                            });
                        case C.Experiments:
                            return a.createElement(w, {
                                showUrgentMessage: this.showUrgentMessage
                            });
                        case C.DynamicSettings:
                            return a.createElement(k, {
                                showUrgentMessage: this.showUrgentMessage
                            });
                        default:
                            return null
                    }
                }, t
            }(a.Component)
        },
        D7An: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return a
            });
            var i = {
                    "ef25ca44-13bd-4e89-99d2-f9939c013fec": "off",
                    "a9667563-723a-4cf7-b253-674d9eef0a53": "control",
                    "74156eb2-ed95-482c-b006-60c1428e8846": "control",
                    "e9fe3136-84bc-4a61-9079-0c7df78abeb3": "control",
                    "47c76558-9d79-4181-9e43-d7c440a1a148": "control",
                    "9619b63b-2e9a-4e20-af4b-cce72346691d": "control",
                    "5c8e4a59-8c63-4000-9c4e-6224f34b7c21": "control",
                    "72c14aa9-d78d-4095-8f27-d97b9aac4233": "no",
                    "3fa31c3d-1477-40a5-9433-0b64b398c86a": "recurly",
                    "afc307f3-4011-40ba-9406-56c474b5922b": "control",
                    "4cfb5972-e20e-4ae1-92dd-7287ec58b4a4": "control",
                    "3763f4e7-c786-4000-a6c3-b91b9c774302": "control",
                    "d6bb4aa4-efae-4031-96be-f08950d6c8f4": "shown",
                    "db2180db-bc89-4f97-8bef-208b1782e18f": "off",
                    "47597570-dd4e-4996-85eb-86db164cae9c": "control",
                    "7aa589f3-34d8-425f-8227-29007d50757e": "control",
                    "0dc9a9c9-fee5-4b5f-a462-f07675713e5e": "control",
                    "e0fdfc17-389d-4ba5-8596-065352ddc01e": "control",
                    "0ca9c0f5-f9fc-40c6-be3f-52a9fa69a8b9": "control",
                    "ee491c3c-d6f7-4f00-8c53-c630dfa10f41": "price",
                    "50e947d4-24b7-4000-a046-f48f4072b7cf": "control",
                    "c9fb1ee5-b3ff-4bfb-9584-4412a8878f16": "control",
                    "b24e5cd6-c649-4cab-b768-03ad6cf488be": "control",
                    "3fc50829-31d6-449a-a757-7a3f44d77ab3": "no",
                    "d1fe9a0a-e9f2-4450-ac57-4ff2eefa0dcf": "control",
                    "6699df7d-9f23-494c-87a1-06fdf80f1e68": "control",
                    "ba473bec-1ad3-4b55-9b3e-fdc002ba695c": "control",
                    "5fd568be-2073-4f99-84d5-565e8b2a3343": "no",
                    "fa443b30-d363-4978-a831-14c653eb6f41": "no",
                    "3f03eebb-3cbb-4f7c-b64b-e1ed0115a773": "off",
                    "03f25f55-ded6-417a-b241-d656571c4a1f": "off",
                    "647bfc96-3fc6-4f5e-ab95-38c4eab60830": "off",
                    "f3920cff-ef57-46c9-8dd9-b4f145acf6e5": "control",
                    "080c0331-3073-4539-992f-93274236a97d": "off",
                    "51efc82d-cfe8-42bd-ae4b-9304112ed9df": "control",
                    "d4752777-a16a-4128-bcfb-42cbd4a53613": "off",
                    "f75ab09d-daf7-46db-bdd5-bb5a2f413cf7": "control",
                    "bf00cae3-c729-4ff9-816c-f9ede2f69f02": "control",
                    "7a149a1e-2edd-403a-8e1a-bc466fa8ae46": "control",
                    "9ba74270-ecf4-466d-b04e-f66b9883d632": "control",
                    "ba44e8c9-0beb-4982-b48f-87457bfa962c": "off",
                    "db6dc127-b372-48fe-9d8b-493ea6c51c57": "control",
                    "10c75b60-f4c7-460b-99c8-e5caa22fd61f": "control",
                    "6147aed8-6beb-4c24-a00b-a9ec189a4c1d": "no",
                    "40f4fd80-86ca-44f4-9abc-0324d24908bc": "control",
                    "8e177f68-71cc-491c-96f5-35e25db2b61d": "control",
                    "099f5ff5-819d-4927-a1c4-8c9061545ac6": "control"
                },
                r = {
                    TWILIGHT_AAX_DISPLAY: "5fd568be-2073-4f99-84d5-565e8b2a3343",
                    TWILIGHT_AD_DENSITY_WIDGET: "fa443b30-d363-4978-a831-14c653eb6f41",
                    STREAMER_TRAILERS: "ef25ca44-13bd-4e89-99d2-f9939c013fec",
                    TWILIGHT_WEB_ONBOARDING: "a9667563-723a-4cf7-b253-674d9eef0a53",
                    TWILIGHT_WEB_ONBOARDING_CHANNEL_RANKING: "74156eb2-ed95-482c-b006-60c1428e8846",
                    TWILIGHT_WEB_ONBOARDING_CATEGORIES: "e9fe3136-84bc-4a61-9079-0c7df78abeb3",
                    TWILIGHT_WEB_ONBOARDING_CATEGORIES_ANON_FRONT_PAGE: "47c76558-9d79-4181-9e43-d7c440a1a148",
                    TWILIGHT_WEB_ONBOARDING_FOLLOW_CATEGORIES: "9619b63b-2e9a-4e20-af4b-cce72346691d",
                    TWILIGHT_WEB_ONBOARDING_CHANNEL_SURFING: "5c8e4a59-8c63-4000-9c4e-6224f34b7c21",
                    TWILIGHT_SUB_CHECKOUT_POPUP: "72c14aa9-d78d-4095-8f27-d97b9aac4233",
                    TWILIGHT_SUB_CHECKOUT_VARIANT: "3fa31c3d-1477-40a5-9433-0b64b398c86a",
                    TWILIGHT_PAY__SAVED_PAYMENT_METHODS: "080c0331-3073-4539-992f-93274236a97d",
                    TWILIGHT_VIDEO_FEATURO_EN: "afc307f3-4011-40ba-9406-56c474b5922b",
                    TWILIGHT_THEATRE_FULLSCREEN: "4cfb5972-e20e-4ae1-92dd-7287ec58b4a4",
                    TWILIGHT_FENIX_DOWN: "3763f4e7-c786-4000-a6c3-b91b9c774302",
                    TWILIGHT_EVENT_GAME_DIRECTORY: "d6bb4aa4-efae-4031-96be-f08950d6c8f4",
                    TWILIGHT_LEADERBOARDS: "db2180db-bc89-4f97-8bef-208b1782e18f",
                    TWILIGHT_AML_RANKING_FOLLOWS: "47597570-dd4e-4996-85eb-86db164cae9c",
                    TWILIGHT_GROWTH_EMAIL_VERIFY_BAR: "7aa589f3-34d8-425f-8227-29007d50757e",
                    TWILIGHT_FOLLOWING_INDEX_LATEST_VIDEOS_V2: "0dc9a9c9-fee5-4b5f-a462-f07675713e5e",
                    TWILIGHT_BROWSER_NOTIFICATIONS_UPSELL: "e0fdfc17-389d-4ba5-8596-065352ddc01e",
                    TWILIGHT_ANIMATED_DIRECTORY_THUMBNAILS: "0ca9c0f5-f9fc-40c6-be3f-52a9fa69a8b9",
                    TWILIGHT_MOBILE_SUBS_TIER_NAMES: "ee491c3c-d6f7-4f00-8c53-c630dfa10f41",
                    TWILIGHT_SUBSCRIBED_CHANNELS_SIDENAV: "50e947d4-24b7-4000-a046-f48f4072b7cf",
                    TWILIGHT_SUBS_AFFILIATE_BADGES: "c9fb1ee5-b3ff-4bfb-9584-4412a8878f16",
                    TWILIGHT_EXTENDED_PRESENCE: "b24e5cd6-c649-4cab-b768-03ad6cf488be",
                    TWILIGHT_NEW_REPORTING_WIZARD: "3fc50829-31d6-449a-a757-7a3f44d77ab3",
                    TWILIGHT_GET_BITS_TOP_NAV: "d1fe9a0a-e9f2-4450-ac57-4ff2eefa0dcf",
                    TWILIGHT_VIDEO_CARD_UPDATES: "6699df7d-9f23-494c-87a1-06fdf80f1e68",
                    TWILIGHT_PRIME_SUB_CREDIT_API_WEXIT: "ba473bec-1ad3-4b55-9b3e-fdc002ba695c",
                    TWILIGHT_WATCH_WINSTON: "3f03eebb-3cbb-4f7c-b64b-e1ed0115a773",
                    TWILIGHT_WATCH_SYMMETRA: "03f25f55-ded6-417a-b241-d656571c4a1f",
                    TWILIGHT_WATCH_SOMBRA: "647bfc96-3fc6-4f5e-ab95-38c4eab60830",
                    TWILIGHT_DISCOVERY_FRONTPAGE_MVP: "f3920cff-ef57-46c9-8dd9-b4f145acf6e5",
                    TWILIGHT_VOD_PROVOCATEUR: "51efc82d-cfe8-42bd-ae4b-9304112ed9df",
                    TWILIGHT_OWL_ROOM_CHEERING: "d4752777-a16a-4128-bcfb-42cbd4a53613",
                    TWILIGHT_CLIPS_ON_THE_BRAIN: "f75ab09d-daf7-46db-bdd5-bb5a2f413cf7",
                    TWILIGHT_VOD_USED_TO_THIS: "bf00cae3-c729-4ff9-816c-f9ede2f69f02",
                    TWILIGHT_WORLD_CUP_EVENT: "7a149a1e-2edd-403a-8e1a-bc466fa8ae46",
                    TWILIGHT_WORLD_CUP_EVENT_SETTINGS: "9ba74270-ecf4-466d-b04e-f66b9883d632",
                    TWILIGHT_EXTENSIONS_DISCOVERY_RELEASE: "ba44e8c9-0beb-4982-b48f-87457bfa962c",
                    TWILIGHT_PREVIEW_CARD_ICONIC_IMAGES: "db6dc127-b372-48fe-9d8b-493ea6c51c57",
                    TWILIGHT_WEB_SIDE_NAV_UPSELL_CENTER: "10c75b60-f4c7-460b-99c8-e5caa22fd61f",
                    TWILIGHT_CHANNEL_ANALYTICS_CONTENT_OVERLAP_PANELS: "6147aed8-6beb-4c24-a00b-a9ec189a4c1d",
                    TWILIGHT_RAID_UPSELL: "40f4fd80-86ca-44f4-9abc-0324d24908bc",
                    TWILIGHT_NATIVE_LOGIN: "8e177f68-71cc-491c-96f5-35e25db2b61d",
                    TWILIGHT_VOD_VOLTRON: "099f5ff5-819d-4927-a1c4-8c9061545ac6"
                },
                a = {
                    TWILIGHT_AAX_DISPLAY: "yes",
                    TWILIGHT_ANIMATED_DIRECTORY_THUMBNAILS: "experiment",
                    TWILIGHT_SUBSCRIBED_CHANNELS_SIDENAV: "variant_a",
                    TWILIGHT_VIDEO_CARD_UPDATES: "variation",
                    TWILIGHT_NEW_REPORTING_WIZARD: "yes",
                    TWILIGHT_DISCOVERY_FRONTPAGE_MVP: "variant",
                    TWILIGHT_PAY__SAVED_PAYMENT_METHODS: "yes",
                    TWILIGHT_EXTENSIONS_DISCOVERY_RELEASE: "on",
                    TWILIGHT_PREVIEW_CARD_ICONIC_IMAGES: "control",
                    TWILIGHT_WATCH_SYMMETRA: "on"
                }
        },
        "DB+C": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "EmotePicker_EmotePicker_UserSubscriptionProducts"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelOwnerID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelOwnerID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "campaignProperties"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "domains"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "url"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "price"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "self"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "promotion"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "newPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "oldPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "platform"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 317
                }
            };
            n.loc.source = {
                body: "query EmotePicker_EmotePicker_UserSubscriptionProducts($channelOwnerID: ID!) {\nuser(id: $channelOwnerID) {\nid\nlogin\ncampaignProperties {\ndomains\n}\ndisplayName\nsubscriptionProducts {\nid\nurl\nprice\nemotes {\nid\ntoken\n}\nemoteSetID\nself {\npromotion {\nnewPrice\noldPrice\n}\n}\n}\nself {\nsubscriptionBenefit {\nid\nplatform\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        DBPb: function(e, t, n) {},
        DLia: function(e, t, n) {},
        DNc1: function(e, t, n) {},
        DS6v: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TopNav_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "createdAt"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 66
                }
            };
            n.loc.source = {
                body: "query TopNav_CurrentUser {\ncurrentUser {\nid\ncreatedAt\nhasPrime\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        DSFQ: function(e, t, n) {},
        DiGQ: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Unknown = 0] = "Unknown", e[e.Pass = 1] = "Pass", e[e.Fail = 2] = "Fail"
                }(i || (i = {}))
        },
        DiOp: function(e, t, n) {},
        DnOo: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("nQLi"),
                s = n("GnwI"),
                l = n("br9A"),
                c = n("Ue10"),
                d = "subscribe-button__subscribe-tier-button",
                u = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasPopupExperiment: !1
                        }, t.handleClick = function() {
                            t.openCheckout(), t.props.reportSubAction({
                                action: l.a.ClickCheckout,
                                checkoutButtonTier: t.props.tierPrice
                            })
                        }, t.setPopupExperiment = function() {
                            var e = a.o.experiments.getAssignment("TWILIGHT_SUB_CHECKOUT_POPUP");
                            t.setState({
                                hasPopupExperiment: "yes" === e
                            })
                        }, t.openCheckout = function() {
                            t.state.hasPopupExperiment && window.open(Object(o.a)(t.props.url, {
                                ref: "subscribe-tier-button"
                            }), "Twitch", "width=1000, height=1100, menubar, toolbar, location, personalbar, scrollbars")
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        !1 !== this.props.targetBlank && this.setPopupExperiment()
                    }, t.prototype.render = function() {
                        if (this.props.isSubbedToTier) {
                            var e = Object(a.d)("Subscribed", "SubTierButton");
                            return r.createElement(c.v, {
                                ariaLabel: e,
                                "data-test-selector": d,
                                disabled: !0,
                                icon: c.gb.Star
                            }, e)
                        }
                        var t = this.props.isEsportChannel ? Object(a.d)("Get the All-Access Pass", "SubTierButton") : Object(a.d)("Subscribe Now", "SubTierButton");
                        return r.createElement(c.v, i.a({
                            ariaLabel: t + " " + this.props.tierPrice,
                            "data-test-selector": d,
                            linkTo: this.state.hasPopupExperiment ? void 0 : this.props.url,
                            onClick: this.handleClick,
                            purchase: this.props.tierPrice
                        }, Object(c.Ub)(this.props), {
                            targetBlank: void 0 === this.props.targetBlank || this.props.targetBlank
                        }), t)
                    }, t = i.c([Object(s.c)("SubTierButton", {
                        autoReportInteractive: !0
                    })], t)
                }(r.Component);
            n.d(t, !1, function() {
                return d
            }), n.d(t, "a", function() {
                return u
            })
        },
        DqL7: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("3Bft"),
                l = n("OpME"),
                c = n("GnwI"),
                d = n("JMwM"),
                u = n("L+W6"),
                p = n("DnOo"),
                m = n("W8Fi"),
                h = n("br9A"),
                f = n("AXRb"),
                g = n("Ue10"),
                v = (n("6Add"), "gift-subscription-button"),
                b = "subscribe-button";
            ! function(e) {
                e[e.Prime = 0] = "Prime", e[e.Tier1 = 1] = "Tier1", e[e.Tier2 = 2] = "Tier2", e[e.Tier3 = 3] = "Tier3"
            }(i || (i = {}));
            var y = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.toggleActiveTab = function(e) {
                        if (e.currentTarget.parentElement) switch (e.currentTarget.parentElement.getAttribute("data-tier")) {
                            case "subscribe-button-modal-tab-" + i.Prime:
                                n.setState({
                                    activeTab: i.Prime,
                                    currentPurchasePrice: n.getPrice(n.props.subscriptionProducts[0])
                                }), n.props.onSelectTierTab(i.Prime);
                                break;
                            case "subscribe-button-modal-tab-" + i.Tier1:
                                n.setState({
                                    activeTab: i.Tier1,
                                    currentPurchasePrice: n.getPrice(n.props.subscriptionProducts[0])
                                }), n.props.onSelectTierTab(i.Tier1);
                                break;
                            case "subscribe-button-modal-tab-" + i.Tier2:
                                n.setState({
                                    activeTab: i.Tier2,
                                    currentPurchasePrice: n.getPrice(n.props.subscriptionProducts[1])
                                }), n.props.onSelectTierTab(i.Tier2);
                                break;
                            case "subscribe-button-modal-tab-" + i.Tier3:
                                n.setState({
                                    activeTab: i.Tier3,
                                    currentPurchasePrice: n.getPrice(n.props.subscriptionProducts[2])
                                }), n.props.onSelectTierTab(i.Tier3);
                                break;
                            default:
                                n.setState({
                                    activeTab: i.Prime,
                                    currentPurchasePrice: n.getPrice(n.props.subscriptionProducts[0])
                                }), n.props.onSelectTierTab(i.Prime)
                        }
                    }, n.getTabTitle = function() {
                        switch (n.state.activeTab) {
                            case i.Prime:
                                return Object(o.d)("Free Channel Sub with Twitch Prime", "SubTierTabs");
                            case i.Tier1:
                                return n.props.subscriptionProducts[0].displayName;
                            case i.Tier2:
                                return n.props.subscriptionProducts[1].displayName;
                            case i.Tier3:
                                return n.props.subscriptionProducts[2].displayName;
                            default:
                                return n.props.subscriptionProducts[0].displayName
                        }
                    }, n.getTierSubscribeButton = function() {
                        var e = n.props.subscriptionProducts[n.state.activeTab - 1];
                        if (n.props.isGift) {
                            var t = Object(o.d)("Gift A Subscription", "SubTierTabs");
                            return n.props.giftRecipient ? a.createElement(d.a, {
                                subProductId: e.id,
                                giftRecipient: n.props.giftRecipient,
                                checkoutURL: e.url,
                                buttonMessage: t,
                                purchase: n.state.currentPurchasePrice,
                                onClick: n.reportGiftCheckoutAction
                            }) : a.createElement(g.v, {
                                ariaLabel: t + " " + n.state.currentPurchasePrice,
                                "data-test-selector": v,
                                onClick: n.onGiftSelect,
                                purchase: n.state.currentPurchasePrice
                            }, t)
                        }
                        return n.state.subbedTier === n.state.activeTab && n.state.activeTab === i.Prime ? a.createElement(f.a, {
                            "data-a-target": "subscribe-with-prime-button",
                            reportSubMenuAction: n.props.reportSubMenuAction,
                            channelLogin: n.props.subLogin
                        }) : a.createElement(p.a, {
                            isSubbedToTier: n.state.subbedTier === n.state.activeTab,
                            tierPrice: n.state.currentPurchasePrice,
                            reportSubAction: n.props.reportSubMenuAction,
                            url: e.url,
                            "data-a-target": "subscribe-now-button",
                            "data-test-selector": b
                        })
                    }, n.reportGiftCheckoutAction = function() {
                        n.props.reportSubMenuAction({
                            action: h.a.BuyGiftSub,
                            checkoutButtonTier: n.state.currentPurchasePrice,
                            giftRecipient: n.props.giftRecipient ? n.props.giftRecipient : null
                        })
                    }, n.onGiftSelect = function() {
                        n.props.onGiftSelect && n.props.onGiftSelect()
                    }, n.getTierExperimentAssignment = function() {
                        var e = o.o.experiments.getAssignment("TWILIGHT_MOBILE_SUBS_TIER_NAMES");
                        n.setState({
                            tierNameEnabled: "name" === e
                        })
                    }, n.mapSubbedTierToTabs = function(e) {
                        e.subbedTier === s.a.Prime ? (n.setState({
                            activeTab: i.Prime,
                            subbedTier: i.Prime
                        }), e.onSelectTierTab(i.Prime)) : e.subbedTier === s.a.Tier1 ? (n.setState({
                            activeTab: i.Tier1,
                            subbedTier: i.Tier1
                        }), e.onSelectTierTab(i.Tier1)) : e.subbedTier === s.a.Tier2 ? (n.setState({
                            activeTab: i.Tier2,
                            subbedTier: i.Tier2
                        }), e.onSelectTierTab(i.Tier2)) : e.subbedTier === s.a.Tier3 ? (n.setState({
                            activeTab: i.Tier3,
                            subbedTier: i.Tier3
                        }), e.onSelectTierTab(i.Tier3)) : e.isGift ? e.onSelectTierTab(n.state.activeTab) : e.onSelectTierTab(i.Prime)
                    }, n.getExtraEmotes = function(e) {
                        return (e === i.Tier2 ? Object(l.b)(n.props.subscriptionProducts[1].emotes) : Object(l.b)(n.props.subscriptionProducts[2].emotes.concat(n.props.subscriptionProducts[1].emotes))).map(function(e) {
                            return a.createElement(g.Ma, {
                                display: g.R.InlineFlex,
                                margin: {
                                    right: .5
                                },
                                key: e.id
                            }, a.createElement("img", {
                                srcSet: "https://static-cdn.jtvnw.net/emoticons/v1/" + e.srcSet
                            }))
                        })
                    }, n.state = n.getInitialState(), n
                }
                return r.d(t, e), t.prototype.componentWillMount = function() {
                    this.mapSubbedTierToTabs(this.props), this.getTierExperimentAssignment()
                }, t.prototype.render = function() {
                    var e = null;
                    this.state.subbedTier && (e = a.createElement(g.Ma, {
                        display: g.R.InlineFlex,
                        margin: {
                            right: .5
                        },
                        className: "subscription-balloon-options__subbed-star"
                    }, a.createElement(g.fb, {
                        asset: g.gb.Star
                    })));
                    var t = null,
                        n = null,
                        r = null,
                        l = this.state.tierNameEnabled ? Object(o.d)("Tier 3", "SubTierTabs") : this.props.subscriptionProducts[2].price,
                        c = a.createElement(g.Ma, {
                            display: g.R.InlineFlex
                        }, this.state.subbedTier === i.Tier3 && e, a.createElement(g.rb, {
                            active: this.state.activeTab === i.Tier3,
                            "data-tier": k(i.Tier3),
                            "data-a-target": k(i.Tier3),
                            onClick: this.toggleActiveTab
                        }, l));
                    if (this.props.subbedTier !== s.a.Prime || this.props.isGift || (t = a.createElement(g.Ma, {
                            display: g.R.InlineFlex,
                            margin: {
                                right: 2
                            }
                        }, a.createElement(g.Ma, {
                            display: g.R.InlineFlex,
                            margin: {
                                right: 1
                            },
                            className: "subscription-balloon-options__prime-crown"
                        }, a.createElement(g.fb, {
                            asset: g.gb.Crown
                        })), a.createElement(g.rb, {
                            active: this.state.activeTab === i.Prime,
                            "data-tier": k(i.Prime),
                            "data-a-target": k(i.Prime),
                            onClick: this.toggleActiveTab
                        }, Object(o.d)("Prime", "SubTierTabs")))), !this.props.subbedTier || this.props.subbedTier === s.a.Tier1) {
                        var d = this.state.tierNameEnabled ? Object(o.d)("Tier 1", "SubTierTabs") : this.props.subscriptionProducts[0].price;
                        n = a.createElement(g.Ma, {
                            display: g.R.InlineFlex,
                            margin: {
                                right: 2
                            }
                        }, this.state.subbedTier === i.Tier1 && e, a.createElement(g.rb, {
                            active: this.state.activeTab === i.Tier1,
                            "data-tier": k(i.Tier1),
                            "data-a-target": k(i.Tier1),
                            onClick: this.toggleActiveTab
                        }, d))
                    }
                    if (!this.props.subbedTier || this.props.subbedTier === s.a.Prime || this.props.subbedTier === s.a.Tier1 || this.props.subbedTier === s.a.Tier2) {
                        var p = this.state.tierNameEnabled ? Object(o.d)("Tier 2", "SubTierTabs") : this.props.subscriptionProducts[1].price;
                        r = a.createElement(g.Ma, {
                            display: g.R.InlineFlex,
                            margin: {
                                right: 2
                            }
                        }, this.state.subbedTier === i.Tier2 && e, a.createElement(g.rb, {
                            active: this.state.activeTab === i.Tier2,
                            "data-tier": k(i.Tier2),
                            "data-a-target": k(i.Tier2),
                            onClick: this.toggleActiveTab
                        }, p))
                    }
                    var m = this.props.subscriptionProducts[1].emotes.length,
                        h = m + this.props.subscriptionProducts[2].emotes.length,
                        f = null;
                    (m > 0 && this.state.activeTab === i.Tier2 || h > 0 && this.state.activeTab === i.Tier3) && (f = a.createElement(g.Ma, {
                        display: g.R.InlineFlex,
                        alignItems: g.c.Center
                    }, this.getExtraEmotes(this.state.activeTab), a.createElement(g.Q, {
                        bold: !0
                    }, Object(o.d)("{extraEmoteCount, plural, one {Plus {extraEmoteCount, number} extra channel emote} other {Plus {extraEmoteCount, number} extra channel emotes}}", {
                        extraEmoteCount: this.state.activeTab === i.Tier2 ? m : h
                    }, "SubTierTabs"))));
                    var v = this.props.subscriptionProducts[this.state.activeTab - 1];
                    return a.createElement(g.Ma, {
                        className: "channel-header__subscription-balloon-options"
                    }, a.createElement(g.Ma, {
                        margin: {
                            bottom: 1
                        }
                    }, a.createElement(g.sb, null, t, n, r, c)), a.createElement(g.Ma, null, a.createElement(g.Ma, {
                        margin: {
                            bottom: 1
                        }
                    }, a.createElement(g.Q, {
                        type: g.Gb.H5,
                        bold: !0
                    }, this.getTabTitle())), a.createElement(g.Ma, {
                        margin: {
                            bottom: 1
                        }
                    }, a.createElement(g.Q, null, Object(o.d)("{availableEmoteCount, plural, one {Includes {availableEmoteCount, number} emoticon, subscriber badge, and customizable messages upon subscribing} other {Includes {availableEmoteCount, number} emoticons, subscriber badge, and customizable messages upon subscribing}}", {
                        availableEmoteCount: this.props.subscriptionProducts[0].emotes.length
                    }, "SubTierTabs"))), f, a.createElement(u.a, {
                        subscriptionProduct: v,
                        isGift: this.props.isGift
                    }), a.createElement(g.Ma, {
                        margin: {
                            top: 1,
                            right: 1
                        }
                    }, this.getTierSubscribeButton())))
                }, t.prototype.getInitialState = function() {
                    var e = this.props.subscriptionProducts[0].price;
                    return (Object(m.d)(this.props.subscriptionProducts) || Object(m.c)(this.props.subscriptionProducts)) && (e = Object(m.a)(this.props.subscriptionProducts[0], this.props.isGift)), {
                        activeTab: i.Tier1,
                        currentPurchasePrice: e,
                        subbedTier: null,
                        tierNameEnabled: !1
                    }
                }, t.prototype.getPrice = function(e) {
                    return Object(m.d)(this.props.subscriptionProducts) || Object(m.c)(this.props.subscriptionProducts) ? Object(m.a)(e, this.props.isGift) : e.price
                }, t
            }(a.Component);

            function k(e) {
                return "subscribe-button-modal-tab-" + e
            }
            var S = Object(c.c)("SubTierTabs", {
                autoReportInteractive: !0
            })(y);
            n.d(t, !1, function() {
                return v
            }), n.d(t, !1, function() {
                return b
            }), n.d(t, "b", function() {
                return i
            }), n.d(t, !1, function() {
                return y
            }), n.d(t, !1, function() {
                return k
            }), n.d(t, "a", function() {
                return S
            })
        },
        DvQC: function(e, t, n) {},
        E0yN: function(e, t, n) {},
        E5z5: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Core_Services_Spade_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasTurbo"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "language"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 93
                }
            };
            n.loc.source = {
                body: "query Core_Services_Spade_CurrentUser {\ncurrentUser {\nid\nlogin\nhasTurbo\nhasPrime\nlanguage\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        E6oy: function(e, t, n) {},
        E7z1: function(e, t, n) {},
        E8HR: function(e, t, n) {},
        EJVd: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "UserCard"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "userCardFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 138
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/user-card/queries/user-card-fragment.gql"\nquery UserCard($id: ID!) {\nuser(id: $id) {\nid\n...userCardFragment\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("xXGc").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        EMHe: function(e, t, n) {
            "use strict";
            var i = n("BLPV");
            n.d(t, "a", function() {
                return i.a
            }), n.d(t, "b", function() {
                return i.b
            })
        },
        ENuL: function(e, t, n) {},
        EOHf: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("fvjX"),
                a = n("LA8z"),
                o = n("V+GM"),
                s = n("NvVO"),
                l = n("2xye"),
                c = n("GnwI");
            var d = Object(r.d)(Object(c.c)("ContentUnavailablePage", {
                autoReportInteractive: !0,
                destination: s.a.ContentUnavailable
            }), Object(o.a)({
                location: l.PageviewLocation.ContentUnavailable
            }))(function() {
                return i.createElement(a.a, null)
            });
            n.d(t, "a", function() {
                return d
            })
        },
        EYHg: function(e, t, n) {},
        Eo7B: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelSubscribeRedirect"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelLogin"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelLogin"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "tier"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 130
                }
            };
            n.loc.source = {
                body: "query ChannelSubscribeRedirect($channelLogin: String!) {\nuser(login: $channelLogin) {\nid\nsubscriptionProducts {\nid\nname\ntier\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        EpBn: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                a = n("BK8n"),
                o = n("Ue10"),
                s = (n("tQCf"), function(e) {
                    return i.createElement(o.qb, {
                        className: "settings-form-group"
                    }, i.createElement(a.a, null, i.createElement(o.X, {
                        error: e.error,
                        errorMessage: e.errorMessage || Object(r.d)("Sorry, something went wrong. Please try again later.", "SettingsFormGroup"),
                        hint: e.hint,
                        id: e.id,
                        label: e.label,
                        labelOptional: e.labelOptional,
                        orientation: e.orientation || o.Y.Horizontal
                    }, e.children)))
                });
            n.d(t, "a", function() {
                return s
            })
        },
        EsYX: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "BrowserPushNotifications_AddBrowserPushSubscription"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "AddBrowserPushSubscriptionInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "addBrowserPushSubscription"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "browserPushSubscriptionID"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 178
                }
            };
            n.loc.source = {
                body: "mutation BrowserPushNotifications_AddBrowserPushSubscription($input: AddBrowserPushSubscriptionInput!) {\naddBrowserPushSubscription(input: $input) {\nbrowserPushSubscriptionID\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        EuNP: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("8/mp"),
                s = n("kz7j"),
                l = n("DiGQ"),
                c = function() {
                    function e() {}
                    return e.getComponentStats = function(t) {
                        var n = 0,
                            i = 0,
                            r = 0,
                            a = 0;
                        e.updateLatencyStatus(t.rootInitDuration, 800), e.updateLatencyStatus(t.pageLoadDuration, 2e3), e.updateLatencyStatus(t.componentDuration, 2e3);
                        var o = e.flattenTrackers(t);
                        o.forEach(function(t) {
                            e.updateLatencyStatus(t.componentDuration, 400)
                        });
                        var s = o.map(function(e) {
                            return e.componentDuration.value || 0
                        });
                        s.length > 0 && (n = s.reduce(function(e, t) {
                            return e + t
                        }), i = Math.max.apply(Math, s), a = Math.min.apply(Math, s), r = n / s.length);
                        var l = {};
                        return o.forEach(function(e) {
                            l[e.componentDuration.latencyStatus] || (l[e.componentDuration.latencyStatus] = 0), l[e.componentDuration.latencyStatus]++
                        }), {
                            rootTracker: t,
                            average: e.getLatencyStatus(r, 400),
                            count: e.getLatencyStatus(o.length, 200),
                            max: e.getLatencyStatus(i, 400),
                            min: e.getLatencyStatus(a, 400),
                            countByStatus: l
                        }
                    }, e.getNetworkStats = function(t) {
                        var n = t.networkEvents.filter(function(e) {
                            return e.isPrePageload
                        });
                        n.forEach(function(t) {
                            e.updateLatencyStatus(t.duration, 150)
                        });
                        var i = n.map(function(e) {
                                return e.networkEvent.duration
                            }),
                            r = n.map(function(e) {
                                return e.networkEvent.transfer_size || 0
                            }),
                            a = 0,
                            o = 0,
                            s = 0,
                            l = 0,
                            c = 0;
                        i.length && (a = i.reduce(function(e, t) {
                            return e + t
                        }), o = r.reduce(function(e, t) {
                            return e + t
                        }), s = Math.max.apply(Math, i), l = Math.min.apply(Math, i), c = a / i.length), n.sort(function(e, t) {
                            return (t.duration.value || 0) - (e.duration.value || 0)
                        });
                        var d = {};
                        return n.forEach(function(e) {
                            d[e.duration.latencyStatus] || (d[e.duration.latencyStatus] = 0), d[e.duration.latencyStatus]++
                        }), {
                            metrics: n,
                            average: e.getLatencyStatus(c, 150),
                            count: e.getLatencyStatus(n.length, 200),
                            max: e.getLatencyStatus(s, 150),
                            min: e.getLatencyStatus(l, 150),
                            totalSize: o,
                            countByStatus: d
                        }
                    }, e.getQueryBatchStats = function(t) {
                        var n = t.queryBatchMetrics,
                            i = n.map(function(e) {
                                return e.slowestQueryInBatch || 0
                            }),
                            r = Math.max.apply(Math, i),
                            a = {
                                batchCount: {
                                    value: n.length,
                                    latencyStatus: l.a.Unknown
                                },
                                slowestQuery: {
                                    value: r,
                                    latencyStatus: l.a.Unknown
                                }
                            };
                        return e.updateLatencyStatus(a.batchCount, 3), e.updateLatencyStatus(a.slowestQuery, 150), a
                    }, e.getQueryStats = function(t) {
                        var n = 0,
                            i = 0,
                            r = 0,
                            a = t.queryEvents;
                        a.forEach(function(t) {
                            e.updateLatencyStatus(t.requestDuration, 150), e.updateLatencyStatus(t.queryDuration, 150)
                        });
                        var o = a.map(function(e) {
                            return e.queryDuration.value || 0
                        });
                        o.length > 0 && (n = o.reduce(function(e, t) {
                            return e + t
                        }), i = Math.max.apply(Math, o), r = n / o.length), a.sort(function(e, t) {
                            return (t.queryDuration.value || 0) - (e.queryDuration.value || 0)
                        });
                        var s = {};
                        return a.forEach(function(e) {
                            s[e.queryDuration.latencyStatus] || (s[e.queryDuration.latencyStatus] = 0), s[e.queryDuration.latencyStatus]++
                        }), {
                            metrics: a,
                            count: e.getLatencyStatus(a.length, 200),
                            max: e.getLatencyStatus(i, 150),
                            average: e.getLatencyStatus(r, 150),
                            min: e.getLatencyStatus(0, 150),
                            countByStatus: s
                        }
                    }, e.getLatencyStatus = function(e, t) {
                        return void 0 === e ? {
                            value: e,
                            latencyStatus: l.a.Unknown
                        } : {
                            value: e,
                            latencyStatus: e > t ? l.a.Fail : l.a.Pass
                        }
                    }, e.updateLatencyStatus = function(e, t) {
                        e && void 0 !== e.value && (e.latencyStatus = e.value > t ? l.a.Fail : l.a.Pass)
                    }, e.flattenTrackers = function(t, n) {
                        return n || (n = []), t.isRoot || n.push(t), t.children.forEach(function(t) {
                            e.flattenTrackers(t, n)
                        }), n
                    }, e
                }(),
                d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement("span", null, this.bytesToSize(this.props.totalSize))
                    }, t.prototype.bytesToSize = function(e) {
                        if (0 === e) return "0 Bytes";
                        var t = Math.floor(Math.log(e) / Math.log(1024));
                        return Math.round(e / Math.pow(1024, t)) + " " + ["Bytes", "KB", "MB", "GB", "TB"][t]
                    }, t
                }(r.Component),
                u = n("TSYQ"),
                p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        if (this.props.metric.latencyStatus === l.a.Unknown || void 0 === this.props.metric.value) return r.createElement("span", {
                            className: "latency-metrics__dot-animation"
                        }, " ");
                        var e = this.props.metric.latencyStatus === l.a.Fail ? "red" : "green";
                        return r.createElement("span", {
                            className: "latency-metrics__item-number latency-metrics__item-" + e
                        }, Math.round(this.props.metric.value), " ms")
                    }, t
                }(r.Component),
                m = (n("ryLB"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.onClickExpand = function() {
                            n.setState({
                                isExpanded: !n.state.isExpanded
                            })
                        };
                        var i = t.tracker.depth < 2;
                        return n.state = {
                            isExpanded: i
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return this.props.tracker.isRoot ? r.createElement("div", {
                            className: "latency-metrics-component"
                        }, r.createElement("div", {
                            className: "request-latency-metrics__header"
                        }, r.createElement("div", {
                            className: "request-latency-metrics__header-url"
                        }, "Component"), r.createElement("div", {
                            className: "request-latency-metrics__header-time"
                        }, "Started"), r.createElement("div", {
                            className: "request-latency-metrics__header-size"
                        }, "Duration")), r.createElement("ul", null, this.renderItem())) : this.renderItem()
                    }, t.prototype.renderItem = function() {
                        var e = this.props.tracker,
                            t = e.children.length > 0,
                            n = {
                                "latency-metrics-component__metrics": !0,
                                "latency-metrics-component__metrics-with-children": t
                            };
                        return r.createElement("li", null, r.createElement("div", {
                            className: u(n),
                            onClick: this.onClickExpand
                        }, r.createElement("div", {
                            className: "latency-metrics-component__left"
                        }, r.createElement("span", {
                            className: "latency-metrics-component__name"
                        }, e.componentName), " ", t && r.createElement("span", null, "(", e.children.length, ")")), r.createElement("div", {
                            className: "latency-metrics-component__time"
                        }, Math.round(e.relativeStartTime), " ms"), r.createElement("div", {
                            className: "latency-metrics-component__duration"
                        }, r.createElement(p, {
                            metric: e.componentDuration
                        }))), r.createElement("ul", null, this.state.isExpanded && e.children.map(function(e) {
                            return r.createElement(m, {
                                tracker: e,
                                key: e.id
                            })
                        })))
                    }, t
                }(r.Component)),
                h = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        if (this.props.metric.latencyStatus === l.a.Unknown || void 0 === this.props.metric.value) return r.createElement("span", {
                            className: "latency-metrics__dot-animation"
                        }, " ");
                        var e = this.props.metric.latencyStatus === l.a.Fail ? "red" : "green";
                        return r.createElement("span", {
                            className: "latency-metrics__item-number latency-metrics__item-" + e
                        }, this.props.metric.value)
                    }, t
                }(r.Component),
                f = (n("Pxir"), function(e) {
                    function t(t) {
                        return e.call(this, t) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this;
                        return r.createElement("div", {
                            className: "query-metrics"
                        }, r.createElement("div", {
                            className: "query-metrics__header"
                        }, r.createElement("div", {
                            className: "query-metrics__header-batch"
                        }, "Batch"), r.createElement("div", {
                            className: "query-metrics__header-name"
                        }, "Name"), r.createElement("div", {
                            className: "query-metrics__header-time"
                        }, "Started"), r.createElement("div", {
                            className: "query-metrics__header-time"
                        }, "Request"), r.createElement("div", {
                            className: "query-metrics__header-time"
                        }, "Query")), this.props.queryMetrics.map(function(t) {
                            return e.renderItem(t)
                        }))
                    }, t.prototype.renderItem = function(e) {
                        var t = e.queryID;
                        return r.createElement("div", {
                            className: "query-metrics__item",
                            key: t
                        }, r.createElement("div", {
                            className: "query-metrics__item-batch"
                        }, e.batchID), r.createElement("div", {
                            className: "query-metrics__item-name"
                        }, this.renderQueryTitle(e)), r.createElement("div", {
                            className: "query-metrics__item-time"
                        }, Math.round(e.relativeStartTime), " ms"), r.createElement("div", {
                            className: "query-metrics__item-time"
                        }, e.requestDuration && e.requestDuration.latencyStatus && r.createElement(p, {
                            metric: e.requestDuration
                        })), r.createElement("div", {
                            className: "query-metrics__item-time"
                        }, r.createElement(p, {
                            metric: e.queryDuration
                        })))
                    }, t.prototype.renderQueryTitle = function(e) {
                        var t = e.variables && e.variables;
                        return t && t.id ? r.createElement("span", null, e.operationName, " (id: ", t.id, ")") : r.createElement("span", null, e.operationName)
                    }, t
                }(r.Component)),
                g = (n("B+KG"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this;
                        return r.createElement("div", {
                            className: "request-latency-metrics"
                        }, r.createElement("div", {
                            className: "request-latency-metrics__header"
                        }, r.createElement("div", {
                            className: "request-latency-metrics__header-url"
                        }, "Url"), r.createElement("div", {
                            className: "request-latency-metrics__header-time"
                        }, "Started"), r.createElement("div", {
                            className: "request-latency-metrics__header-size"
                        }, "Size"), r.createElement("div", {
                            className: "request-latency-metrics__header-time"
                        }, "Time")), this.props.metricsGroup.metrics.map(function(t) {
                            return e.renderItem(t)
                        }))
                    }, t.prototype.getDisplayLink = function(e) {
                        var t = new URL(e),
                            n = t.hostname + t.pathname;
                        if (n.length < 24) return n;
                        var i = t.pathname.substring(t.pathname.lastIndexOf("/"));
                        i || a.j.warn("Failed to parse url", {
                            url: t,
                            fileName: i
                        });
                        var r = i.split(".");
                        return 3 === r.length && (i = r[0] + "." + r[2]), i.length > 24 && (i = i.substring(0, 16) + "..." + i.substring(i.lastIndexOf(".") - 4)), t.hostname + i
                    }, t.prototype.renderItem = function(e) {
                        var t = e.networkEvent,
                            n = t.request_url + ":" + t.duration + ":" + t.start_time;
                        return r.createElement("div", {
                            className: "request-latency-metrics__item",
                            key: n
                        }, r.createElement("div", {
                            className: "request-latency-metrics__item-url",
                            title: t.request_url
                        }, r.createElement("div", null, this.getDisplayLink(t.request_url))), r.createElement("div", {
                            className: "request-latency-metrics__item-time"
                        }, Math.round(e.relativeStartTime), " ms"), r.createElement("div", {
                            className: "request-latency-metrics__item-size"
                        }, t.transfer_size && t.transfer_size > 0 ? r.createElement(d, {
                            totalSize: t.transfer_size
                        }) : r.createElement("span", null)), r.createElement("div", {
                            className: "request-latency-metrics__item-time"
                        }, r.createElement(p, {
                            metric: e.duration
                        })))
                    }, t
                }(r.Component)),
                v = n("Ue10"),
                b = (n("8NHS"), "twilight.perf-tab"),
                y = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderTab = function(e, t, i) {
                            var a = n.state.selectedTab === e;
                            return r.createElement(v.rb, {
                                active: a,
                                onClick: function() {
                                    return n.onClickTab(e)
                                }
                            }, r.createElement(v.Ma, {
                                display: v.R.Flex
                            }, t, i && n.renderTabBubble(i)))
                        }, n.renderTabBubble = function(e) {
                            return r.createElement(v.Ma, {
                                margin: {
                                    left: .5
                                }
                            }, r.createElement(v.Ta, {
                                label: e.toString(),
                                type: v.Ua.Notification
                            }))
                        }, n.onClickTab = function(e) {
                            a.l.set(b, e), n.setState({
                                selectedTab: e
                            })
                        }, n.onLatencyUpdate = function() {
                            var e = c.getComponentStats(n.tracker),
                                t = c.getNetworkStats(n.tracker),
                                i = c.getQueryStats(n.tracker),
                                r = c.getQueryBatchStats(n.tracker),
                                a = n.tracker.getCustomEvents();
                            n.setState({
                                componentStats: e,
                                networkStats: t,
                                queryStats: i,
                                queryBatchStats: r,
                                customEvents: a
                            })
                        }, n.tracker = t.benchmarking.getRootLatencyTracker(), n.state = {
                            selectedTab: a.l.get(b, "overview"),
                            componentStats: c.getComponentStats(n.tracker),
                            networkStats: c.getNetworkStats(n.tracker),
                            queryStats: c.getQueryStats(n.tracker),
                            queryBatchStats: c.getQueryBatchStats(n.tracker),
                            customEvents: n.tracker.getCustomEvents()
                        }, n.tracker.subscribeToUpdates(n.onLatencyUpdate), n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(v.Ma, {
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            fullHeight: !0,
                            fullWidth: !0
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__header-container",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap,
                            alignItems: v.c.Start
                        }, r.createElement(v.sb, null, this.renderTab("overview", "Overview"), this.renderTab("components", "Components", this.state.componentStats.countByStatus[l.a.Fail]), this.renderTab("queries", "Queries", this.state.queryStats.countByStatus[l.a.Fail]), this.renderTab("requests", "Requests", this.state.networkStats.countByStatus[l.a.Fail]))), r.createElement(v.Ma, {
                            className: "latency-metrics__body",
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            flexGrow: 1,
                            overflow: v.Pa.Hidden,
                            fullHeight: !0
                        }, r.createElement(o.b, {
                            className: "latency-metrics__scroller"
                        }, r.createElement(v.Ma, {
                            margin: {
                                y: 1,
                                right: 1
                            }
                        }, "overview" === this.state.selectedTab && this.renderOverviewTab(), "components" === this.state.selectedTab && this.renderComponentsTab(), "queries" === this.state.selectedTab && this.renderQueriesTab(), "requests" === this.state.selectedTab && this.renderRequestsTab()))))
                    }, t.prototype.renderOverviewTab = function() {
                        var e = this,
                            t = this.state.networkStats,
                            n = this.state.queryStats,
                            i = this.state.queryBatchStats,
                            a = this.state.componentStats;
                        return r.createElement(v.Ma, null, r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, s.c.FirstPaint)), r.createElement(v.Ma, {
                            className: "latency-metrics__item-right",
                            display: v.R.Flex,
                            flexWrap: v.U.NoWrap,
                            flexShrink: 0
                        }, r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, this.tracker.isFirstLoad ? r.createElement(p, {
                            metric: this.tracker.firstPaint
                        }) : r.createElement("span", null, "n/a")))), r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, "Initialize")), r.createElement(v.Ma, {
                            className: "latency-metrics__item-right",
                            display: v.R.Flex,
                            flexWrap: v.U.NoWrap,
                            flexShrink: 0
                        }, r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, this.tracker.isFirstLoad ? r.createElement(p, {
                            metric: this.tracker.rootInitDuration
                        }) : r.createElement("span", null, "n/a")))), r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, this.tracker.isFirstLoad ? "Page Load" : "App Transition")), r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, r.createElement(p, {
                            metric: this.tracker.pageLoadDuration
                        }))), r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, "Components (", a.count.value, ")")), r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Slowest:"), r.createElement(p, {
                            metric: a.max
                        }), r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Average:"), r.createElement(p, {
                            metric: a.average
                        })))), r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, "Queries (", n.count.value, ")")), r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Batches:"), r.createElement(h, {
                            metric: i.batchCount
                        }), r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Slowest:"), r.createElement(p, {
                            metric: n.max
                        }), r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Average:"), r.createElement(p, {
                            metric: n.average
                        })))), r.createElement(v.Ma, {
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, "Requests (", t.count.value, ")")), r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats"
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Slowest:"), r.createElement(p, {
                            metric: t.max
                        }), r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Average:"), r.createElement(p, {
                            metric: t.average
                        }), r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, "Size:"), " ", r.createElement(d, {
                            totalSize: t.totalSize
                        })))), Object.keys(this.state.customEvents).map(function(t) {
                            return e.renderCustomEventGroup(t, e.state.customEvents[t])
                        }))
                    }, t.prototype.renderCustomEventGroup = function(e, t) {
                        var n = this;
                        return r.createElement(v.Ma, {
                            key: e,
                            className: "latency-metrics__item",
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            flexWrap: v.U.NoWrap
                        }, r.createElement(v.Ma, {
                            className: "latency-metrics__item-left latency-metrics__item-name",
                            ellipsis: !0
                        }, r.createElement("span", null, e)), r.createElement("div", {
                            className: "latency-metrics__item-number"
                        }, t.map(function(e) {
                            return n.renderCustomEvent(e)
                        })))
                    }, t.prototype.renderCustomEvent = function(e) {
                        return r.createElement("span", {
                            key: e.key
                        }, r.createElement("span", {
                            className: "latency-metrics__item-stats-label"
                        }, e.label, ":"), " ", r.createElement(p, {
                            metric: e.duration
                        }))
                    }, t.prototype.renderComponentsTab = function() {
                        return r.createElement(m, {
                            tracker: this.tracker
                        })
                    }, t.prototype.renderRequestsTab = function() {
                        return r.createElement(g, {
                            metricsGroup: this.state.networkStats
                        })
                    }, t.prototype.renderQueriesTab = function() {
                        return r.createElement(f, {
                            queryMetrics: this.tracker.queryEvents
                        })
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return y
            })
        },
        EvYO: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return u
            });
            var i, r, a = n("mrSG"),
                o = n("/7QA"),
                s = n("ua1/"),
                l = n("2xye"),
                c = n("m98o"),
                d = n("GyWW");

            function u(e) {
                return a.b(this, void 0, void 0, function() {
                    var t, n, i, u, p, m, h, f;
                    return a.e(this, function(a) {
                        switch (a.label) {
                            case 0:
                                return (t = e.friendActivity) ? (n = Object(c.c)(e.friendLogin, t)) ? (i = "/" === n[0] ? n.slice(1) : n, t.type !== s.a.Streaming ? [3, 1] : (u = {
                                    target_action: r.Streaming,
                                    target_channel: e.friendLogin,
                                    target_game: t.stream.game && t.stream.game.name || void 0,
                                    target_login: e.friendLogin,
                                    target_url: i,
                                    ui_context: e.context
                                }, [3, 7])) : (o.j.warn("[trackPresenceClick] Attempted to track a click on an unjoinable activity."), [2]) : (o.j.warn("[trackPresenceClick] Attempted to track a click with no activity."), [2]);
                            case 1:
                                if (t.type !== s.a.Watching) return [3, 6];
                                p = void 0, m = null, a.label = 2;
                            case 2:
                                return a.trys.push([2, 4, , 5]), [4, o.o.apollo.client.query({
                                    query: d,
                                    variables: {
                                        login: t.user.login
                                    }
                                })];
                            case 3:
                                return m = a.sent(), [3, 5];
                            case 4:
                                return h = a.sent(), o.j.error(h, "[trackPresenceClick] Failed to query watched user data.", {
                                    watchedUser: t.user.login
                                }), [3, 5];
                            case 5:
                                return (f = m && m.data && m.data.user) ? p = f.hosting && f.hosting.stream ? f.hosting.stream.game && f.hosting.stream.game.name || void 0 : f.stream && f.stream.game && f.stream.game.name || void 0 : o.j.error(new Error("GraphQL empty response"), "[trackPresenceClick] Query for watched user info returned no data.", {
                                    watchedUser: t.user.login
                                }), u = {
                                    target_action: r.Watching,
                                    target_channel: t.user.login,
                                    target_game: p,
                                    target_hosted_channel: t.user.hosting && t.user.hosting.login || void 0,
                                    target_login: e.friendLogin,
                                    target_url: i,
                                    ui_context: e.context
                                }, [3, 7];
                            case 6:
                                return o.j.warn("[trackPresenceClick] Attempted to track a click on an unjoinable activity."), [2];
                            case 7:
                                return o.n.track(l.SpadeEventType.PresenceClick, u), [2]
                        }
                    })
                })
            }! function(e) {
                e.FriendsListButton = "friends", e.WhisperHeaderButton = "convo_join", e.WhisperHeaderLink = "convo_link"
            }(i || (i = {})),
            function(e) {
                e.Streaming = "streaming", e.Watching = "watching"
            }(r || (r = {}))
        },
        F3u3: function(e, t, n) {},
        F9eG: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "cheer"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "cheer"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "emotes"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "prefix"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "type"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "tiers"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "bits"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "color"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "canCheer"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "canShowInBitsCard"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "images"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "url"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "theme"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "isAnimated"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "dpiScale"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 160
                }
            };
            n.loc.source = {
                body: "fragment cheer on User {\ncheer {\nid\nemotes {\nid\nprefix\ntype\ntiers {\nid\nbits\ncolor\ncanCheer\ncanShowInBitsCard\nimages {\nid\nurl\ntheme\nisAnimated\ndpiScale\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        FAZm: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "RecommendedFriend_CreateFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "CreateFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "createFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 136
                }
            };
            n.loc.source = {
                body: "mutation RecommendedFriend_CreateFriendRequest($input: CreateFriendRequestInput!) {\ncreateFriendRequest(input: $input) {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Fxe2: function(e, t, n) {
            "use strict";

            function i(e) {
                return e && "v" === e.charAt(0) ? e.substring(1) : e
            }
            n.d(t, "a", function() {
                return i
            })
        },
        G4NU: function(e, t, n) {},
        G4ap: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return h
            }), n.d(t, "c", function() {
                return i
            }), n.d(t, "b", function() {
                return f
            });
            var i, r = n("mrSG"),
                a = n("TSYQ"),
                o = n("imBb"),
                s = n("q1tI"),
                l = n("/7QA"),
                c = n("XhOd"),
                d = n("nxnD"),
                u = n("GnwI"),
                p = n("Ue10"),
                m = (n("QCfw"), 920),
                h = "34rem",
                f = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.logger = l.j.withCategory("RightColumn"), n.handleToggleVisibility = function() {
                            var e = n.getLayoutCache();
                            n.props.fullscreenTheatreModeEnabled ? n.props.isExpanded ? (n.props.collapseFullscreenRightColumn(), e.resource.isFullscreenRightColumnOpenedByUserAction = !1) : (n.props.expandFullscreenRightColumn(), e.resource.isFullscreenRightColumnOpenedByUserAction = !0) : n.props.isExpanded ? (n.props.collapseRightColumn(), e.resource.isRightColumnClosedByUserAction = !0) : (n.props.expandRightColumn(), e.resource.isRightColumnClosedByUserAction = !1), l.l.set(l.o.config.layoutCacheKey, e), Object(c.c)({
                                element: n.props.fullscreenTheatreModeEnabled ? c.a.FullscreenChat : c.a.Chat,
                                action: n.props.isExpanded ? c.b.Close : c.b.Open
                            })
                        }, n.hideOnBreakpoint = function() {
                            if (n.containerRef) {
                                var e = m;
                                window.innerWidth < e && !n.props.theatreModeEnabled ? "none" !== n.containerRef.style.display && (n.containerRef.style.display = "none") : "none" === n.containerRef.style.display && (n.containerRef.style.display = "")
                            }
                        }, n.onTheatreMouseMove = function() {
                            n.state.hideCollapseButton && n.setState({
                                hideCollapseButton: !1
                            }), window.removeEventListener("mousemove", n.onTheatreMouseMove), clearTimeout(n.mouseMoveTimer), n.mouseMoveTimer = setTimeout(function() {
                                document.addEventListener("mousemove", n.onTheatreMouseMove)
                            }, 1e3), n.startHideButtonTimer()
                        }, n.setContainerRef = function(e) {
                            return n.containerRef = e
                        }, n.state = {
                            content: null,
                            contentID: null,
                            isError: !1,
                            hideCollapseButton: !1
                        }, i && n.logger.warn("RightColumn should only ever be used in the Root. Use <RightColumnContent> instead to wrap components that should display in the right column."), i = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("RightColumn"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidMount = function() {
                        window.addEventListener("resize", this.hideOnBreakpoint), this.hideOnBreakpoint(), this.reportInteractive(), o.bind("alt+r", this.handleToggleVisibility), this.props.theatreModeEnabled && (window.addEventListener("mousemove", this.onTheatreMouseMove), this.startHideButtonTimer())
                    }, t.prototype.componentDidUpdate = function(e) {
                        this.hideOnBreakpoint(), this.state.content && this.reportInteractive(), e.theatreModeEnabled !== this.props.theatreModeEnabled && (this.props.theatreModeEnabled ? (window.addEventListener("mousemove", this.onTheatreMouseMove), this.startHideButtonTimer()) : (clearTimeout(this.hideToggleTimer), clearTimeout(this.mouseMoveTimer), window.removeEventListener("mousemove", this.onTheatreMouseMove)))
                    }, t.prototype.componentWillUnmount = function() {
                        clearTimeout(this.hideToggleTimer), clearTimeout(this.mouseMoveTimer), window.removeEventListener("mousemove", this.onTheatreMouseMove), window.removeEventListener("resize", this.hideOnBreakpoint), o.unbind("alt+r")
                    }, t.prototype.render = function() {
                        if (!this.state.content || this.state.isError) return null;
                        var e = a("right-column", {
                                "right-column--collapsed": !this.props.isExpanded,
                                "right-column--theatre": this.props.theatreModeEnabled
                            }),
                            t = this.props.isExpanded ? "right-column-chat-bar" : "right-column-chat-bar-collapsed";
                        return s.createElement(p.Ma, {
                            className: e,
                            refDelegate: this.setContainerRef,
                            flexShrink: 0,
                            fullHeight: !0,
                            position: this.props.theatreModeEnabled ? p.Wa.Fixed : p.Wa.Relative,
                            attachTop: this.props.theatreModeEnabled,
                            attachRight: this.props.theatreModeEnabled,
                            "data-a-target": t
                        }, s.createElement(p.Ma, {
                            position: p.Wa.Relative,
                            flexGrow: 0,
                            flexShrink: 0,
                            fullHeight: !0,
                            display: this.props.isExpanded ? p.R.Block : p.R.Hide
                        }, this.state.content), s.createElement(p.Fa, {
                            className: "right-column__toggle-visibility",
                            position: p.Wa.Absolute,
                            flexGrow: 0,
                            flexShrink: 0,
                            display: this.state.hideCollapseButton ? p.R.Hide : p.R.Flex,
                            zIndex: p.Tb.Above
                        }, s.createElement("button", {
                            onClick: this.handleToggleVisibility,
                            "data-a-target": "right-column__toggle-collapse-btn"
                        }, s.createElement(p.fb, {
                            asset: this.props.isExpanded ? p.gb.GlyphArrRight : p.gb.GlyphArrLeft
                        }))))
                    }, t.prototype.provideContent = function(e, t) {
                        this.state.content && this.state.contentID !== t && this.logger.warn("Displaying another component already. Only one component can be displayed at a time using <RightColumnContent>. Check the page or other subcomponents to find the other instance and determine which one should be showing."), this.setState({
                            content: e,
                            contentID: t
                        })
                    }, t.prototype.removeContent = function() {
                        this.setState({
                            content: null,
                            contentID: null
                        })
                    }, t.prototype.reportInteractive = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.getLayoutCache = function() {
                        return l.l.get(l.o.config.layoutCacheKey, d.a)
                    }, t.prototype.startHideButtonTimer = function() {
                        var e = this;
                        clearTimeout(this.hideToggleTimer), this.hideToggleTimer = setTimeout(function() {
                            e.setState({
                                hideCollapseButton: !0
                            })
                        }, 5e3)
                    }, t = r.c([Object(u.c)("RightColumn")], t)
                }(s.Component)
        },
        GAhM: function(e, t, n) {},
        GGok: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FriendButton"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "friendButtonFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 154
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nquery FriendButton($id: ID!) {\nuser(id: $id) {\nid\n...friendButtonFragment\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        GNna: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_UserCommunities"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "userId"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "userId"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "directories"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "nodes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "directoryType"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 140
                }
            };
            n.loc.source = {
                body: "query ReportUserModal_UserCommunities($userId: ID!) {\nuser(id: $userId) {\nid\ndirectories {\nnodes {\nid\nname\ndisplayName\ndirectoryType\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        GRNm: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "OnlineFriends"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "friends"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "activity"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "type"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Playing"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Streaming"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "stream"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "game"
                                                                            },
                                                                            arguments: [],
                                                                            directives: [],
                                                                            selectionSet: {
                                                                                kind: "SelectionSet",
                                                                                selections: [{
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "id"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }, {
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "name"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }]
                                                                            }
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Watching"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "user"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "displayName"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "login"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "hosting"
                                                                            },
                                                                            arguments: [],
                                                                            directives: [],
                                                                            selectionSet: {
                                                                                kind: "SelectionSet",
                                                                                selections: [{
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "id"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }, {
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "displayName"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }, {
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "login"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }]
                                                                            }
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "availability"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "login"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "profileImageURL"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "width"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "70"
                                                                }
                                                            }],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "hosting"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 338
                }
            };
            n.loc.source = {
                body: "query OnlineFriends {\ncurrentUser {\nid\nfriends {\nedges {\nactivity {\ntype\n... on Playing {\ngame {\nid\nname\n}\n}\n... on Streaming {\nstream {\nid\ngame {\nid\nname\n}\n}\n}\n... on Watching {\nuser {\nid\ndisplayName\nlogin\nhosting {\nid\ndisplayName\nlogin\n}\n}\n}\n}\navailability\nnode {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\nhosting {\nid\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        GgTn: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "OnsiteNotifications_ReadNotifications"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReadNotificationsInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "readNotifications"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "notifications"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isRead"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 148
                }
            };
            n.loc.source = {
                body: "mutation OnsiteNotifications_ReadNotifications($input: ReadNotificationsInput!) {\nreadNotifications(input: $input) {\nnotifications {\nid\nisRead\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        GiH9: function(e, t, n) {},
        GkXq: function(e, t, n) {},
        GlMZ: function(e, t, n) {
            "use strict";

            function i(e) {
                var t = encodeURIComponent(JSON.stringify(e)).replace(/%([0-9A-F]{2})/g, function(e, t) {
                        return String.fromCharCode(Number("0x" + t))
                    }),
                    n = btoa(t);
                return "data=" + encodeURIComponent(n)
            }
            n.d(t, "a", function() {
                return i
            })
        },
        GnwI: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("Ue10"),
                o = n("MAvR"),
                s = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleLoad = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(a.m, i.a({
                            size: this.props.size,
                            src: this.props.src,
                            alt: this.props.alt,
                            onLoad: this.handleLoad
                        }, this.props, Object(a.Ub)(this.props)))
                    }, t = i.c([Object(o.a)("CriticalAvatar")], t)
                }(r.Component),
                l = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleLoad = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement("img", i.a({
                            alt: this.props.alt,
                            className: this.props.className,
                            src: this.props.src,
                            srcSet: this.props.srcSet,
                            onLoad: this.handleLoad
                        }, Object(a.Ub)(this.props)))
                    }, t = i.c([Object(o.a)("CriticalImage")], t)
                }(r.Component);
            n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return o.a
            })
        },
        Grq2: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("cr+I"),
                o = n("q1tI"),
                s = n("fvjX"),
                l = n("/7QA"),
                c = n("yR8l"),
                d = n("zB42"),
                u = n("2xye"),
                p = n("GnwI"),
                m = n("KxT4"),
                h = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.logger = l.j.withCategory("Tracking/AmazonAds");
                        var i = l.b.get("amazon_ads_url", ""),
                            r = l.b.get("amazon_ads_countries", ["US"]),
                            a = t.countryCode,
                            o = a && r.includes(a);
                        return o && i ? (n.imageSrc = i, n.logger.debug("Created", {
                            imageSrc: n.imageSrc,
                            userCountry: a,
                            isSupportedCountry: o,
                            supportedCountries: r
                        })) : n.logger.debug("Skipping", {
                            isSupportedCountry: o,
                            userCountry: a,
                            supportedCountries: r
                        }), n
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return this.imageSrc && !this.props.gdpr.blockConsentRequiredContent ? o.createElement("img", {
                            src: this.imageSrc,
                            style: {
                                display: "none"
                            }
                        }) : null
                    }, t
                }(o.Component),
                f = Object(s.d)(Object(p.c)("AmazonAds", {
                    autoReportInteractive: !0
                }), Object(m.i)(m.c.Amazon))(h),
                g = n("eO8H"),
                v = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderBinding = function(e) {
                            n.containerRef = e
                        }, n.onScriptLoaded = function() {
                            n.logger.debug("Script loaded"), n.sendBeacon()
                        }, n.sendBeacon = function() {
                            window.COMSCORE && window.COMSCORE.beacon ? (n.logger.debug("Sent", {
                                data: n.data
                            }), window.COMSCORE.beacon(n.data)) : n.logger.debug("Could not send beacon; COMSCORE not available.", {
                                data: n.data
                            })
                        }, n.onHistoryChange = function() {
                            window.COMSCORE && window.COMSCORE.beacon && n.sendBeacon()
                        }, n.scriptSrc = l.b.get("comscore_url", ""), n.logger = l.j.withCategory("Tracking/Comscore"), n.data = {
                            c1: l.b.get("comscore_config_c1", 0),
                            c2: l.b.get("comscore_config_c2", 0),
                            c3: l.b.get("comscore_config_c3", 0),
                            c5: l.b.get("comscore_config_c5", ""),
                            cs_ucfr: n.props.gdpr.blockConsentRequiredContent ? 0 : 1
                        }, n
                    }
                    return r.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.data.cs_ucfr = this.props.gdpr.blockConsentRequiredContent ? 0 : 1
                    }, t.prototype.componentDidMount = function() {
                        if (this.scriptSrc && this.containerRef) {
                            if (document.querySelector('[data-name="comscore"]')) return;
                            this.logger.debug("Loading", {
                                url: this.scriptSrc
                            });
                            var e = document.createElement("script");
                            e.async = !0, e.src = this.scriptSrc, e.dataset && (e.dataset.name = "comscore"), e.onload = this.onScriptLoaded, this.containerRef.appendChild(e)
                        } else this.logger.warn("Skipping");
                        this.props.history.listen(this.onHistoryChange), this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return this.scriptSrc ? o.createElement("div", {
                            ref: this.renderBinding
                        }) : null
                    }, t
                }(o.Component),
                b = Object(s.d)(g.f, Object(p.c)("Comscore"), Object(m.i)(m.c.ComScore))(v),
                y = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderBinding = function(e) {
                            n.containerRef = e
                        }, n.logger = l.j.withCategory("Tracking/GoogleAnalytics"), n.scriptSrc = l.b.get("google_analytics_url", ""), n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        if (this.scriptSrc && this.containerRef) {
                            if (document.querySelector('[data-name="google-analytics"]')) return;
                            var e = document.createElement("script");
                            e.async = !0, e.src = this.scriptSrc, e.dataset && (e.dataset.name = "google-analytics"), this.containerRef.appendChild(e), this.logger.debug("Created", {
                                url: this.scriptSrc
                            })
                        } else this.logger.debug("Skipped");
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return this.scriptSrc ? o.createElement("div", {
                            ref: this.renderBinding
                        }) : null
                    }, t = r.c([Object(p.c)("GoogleAnalytics")], t)
                }(o.Component),
                k = n("NvVO"),
                S = n("L9xt");
            ! function(e) {
                e.ivwUrl = "ivw_url", e.ivwCountries = "ivw_countries", e.ivwLanguages = "ivw_languages", e.miscGames = "ivw_misc_games", e.codeGameDirectory = "ivw_code_game_directory", e.codeMiscDirectory = "ivw_code_misc_directory", e.codeGameVideo = "ivw_code_game_video", e.codeMiscVideo = "ivw_code_misc_video", e.codeFrontpage = "ivw_code_frontpage"
            }(i || (i = {}));
            var w = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.loadSettings = function() {
                            n.scriptSrc = l.b.get(i.ivwUrl, ""), n.supportedCountries = l.b.get(i.ivwCountries, ["DE"]), n.supportedLanguages = l.b.get(i.ivwLanguages, ["de"]), n.miscGames = l.b.get(i.miscGames, ["Creative", "IRL", "Music", "Always On", "Talk Shows", "Programming"]), n.ivwCodeGameDirectory = l.b.get(i.codeGameDirectory, "1148directory"), n.ivwCodeMiscDirectory = l.b.get(i.codeMiscDirectory, "1148directory_misc"), n.ivwCodeFrontpage = l.b.get(i.codeFrontpage, "1101homepage"), n.ivwCodeGameVideo = l.b.get(i.codeGameVideo, "1148gameVIDE"), n.ivwCodeMiscVideo = l.b.get(i.codeMiscVideo, "1148miscVIDE")
                        }, n.getPageCode = function(e) {
                            var t = n.props.destination,
                                i = n.props.rootLatencyTracker;
                            switch (t || (t = i.getDestination()), t) {
                                case k.a.BrowseGames:
                                case k.a.BrowseCreative:
                                case k.a.BrowseCommunities:
                                case k.a.DirectoryPopular:
                                case k.a.DirectoryPopularByLanguage:
                                    return n.ivwCodeMiscDirectory;
                                case k.a.DirectoryGameIndex:
                                    return n.getDirectoryPageCode(e.content_type, e.game);
                                case k.a.ChannelIndex:
                                case k.a.VideoWatchPage:
                                    return n.getVideoPageCode(e.game, e.hosted_game);
                                case k.a.Index:
                                    return n.ivwCodeFrontpage;
                                default:
                                    return null
                            }
                        }, n.getDirectoryPageCode = function(e, t) {
                            return e === S.PageviewDirectoryContentType.Games && t && !n.miscGames.includes(t) ? n.ivwCodeGameDirectory : n.ivwCodeMiscDirectory
                        }, n.getVideoPageCode = function(e, t) {
                            return t && n.miscGames.includes(t) ? n.ivwCodeMiscVideo : t ? n.ivwCodeGameVideo : e && n.miscGames.includes(e) ? n.ivwCodeMiscVideo : n.ivwCodeGameVideo
                        }, n.isMultilingual = function(e) {
                            return n.logger.debug("isMultilingual()", {
                                languageCode: n.languageCode,
                                broadcastLanguage: e
                            }), !n.supportedLanguages.includes(n.languageCode) || e && !n.supportedLanguages.includes(e)
                        }, n.onScriptLoad = function() {
                            n.trackPageView()
                        }, n.trackPageView = function() {
                            var e = l.n.getLastPageview();
                            if (window.iom && window.iom.c && l.n.getLastPageview())
                                if (e && e.location) {
                                    var t = n.getPageCode(e);
                                    if (t) {
                                        n.isMultilingual(e.language) && (t += "_multilanguage");
                                        var i = {
                                            st: "twitchtv",
                                            cp: t,
                                            mg: "yes",
                                            sv: "home" === e.location ? "ke" : "in"
                                        };
                                        n.logger.debug("Tracking pageview", {
                                            data: i
                                        }), window.iom.c(i, 1)
                                    } else n.logger.debug("Skipping pageview. No page code.", {
                                        pageName: e.location
                                    })
                                } else n.logger.debug("Pageview data unavailable or incomplete, skipping pageview.", e);
                            else n.logger.debug("Unable to track pageview. IOM is missing.")
                        }, n.renderBinding = function(e) {
                            n.containerRef = e
                        }, n.logger = l.j.withCategory("Tracking/IVW"), n.loadSettings(), n.languageCode = n.props.language || l.o.intl.getLanguageCode() || "en";
                        var r = t.countryCode,
                            a = void 0 !== r && n.supportedCountries.includes(r),
                            o = n.supportedLanguages.includes(n.languageCode);
                        return n.loadScript = void 0 !== n.scriptSrc && (a || o), n.loadScript ? n.logger.debug("Created", {
                            scriptSrc: n.scriptSrc,
                            supportedCountries: n.supportedCountries,
                            supportedLanguages: n.supportedLanguages,
                            languageCode: n.languageCode,
                            userCountry: r
                        }) : n.logger.debug("Skipping", {
                            scriptSrc: n.scriptSrc,
                            supportedCountries: n.supportedCountries,
                            supportedLanguages: n.supportedLanguages,
                            languageCode: n.languageCode,
                            userCountry: r
                        }), n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        if (this.loadScript && this.containerRef) {
                            if (document.querySelector('[data-name="ivw"]')) return;
                            var e = document.createElement("script");
                            e.async = !0, e.src = this.scriptSrc, e.dataset && (e.dataset.name = "ivw"), this.containerRef.appendChild(e), e.onload = this.onScriptLoad, l.n.eventEmitter.addListener(S.SpadeEventType.Pageview, this.trackPageView)
                        }
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return this.loadScript ? o.createElement("div", {
                            ref: this.renderBinding
                        }) : null
                    }, t.prototype.componentWillUnmount = function() {
                        l.n.eventEmitter.removeListener(S.SpadeEventType.Pageview, this.trackPageView)
                    }, t = r.c([Object(p.c)("IVW")], t)
                }(o.Component),
                E = n("p46w"),
                C = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.unlistener = null, n.hasLoadedScript = !1, n.appendKruxScript = function() {
                            if (!n.hasLoadedScript && n.scriptSrc && n.containerRef && n.props.gdpr.status !== m.b.Loading) {
                                if (document.querySelector('[data-name="krux"]')) return;
                                var e = document.createElement("script");
                                e.async = !0, e.src = n.scriptSrc, e.dataset && (e.dataset.name = "krux"), e.onload = n.onScriptLoad, n.containerRef.appendChild(e), n.hasLoadedScript = !0
                            }
                        }, n.renderBinding = function(e) {
                            n.containerRef = e
                        }, n.onScriptLoad = function() {
                            n.logger.debug("Script loaded"), n.checkForKrux(0)
                        }, n.checkForKrux = function(e) {
                            if (void 0 === window.Krux) return e > 50 && n.logger.warn("Failed to load", {
                                attempt: e
                            }), void setTimeout(function() {
                                return n.checkForKrux(++e)
                            }, 100);
                            n.logger.debug("Krux loaded", {
                                attempt: e
                            });
                            var t = n.retrieve("segs");
                            window.Krux.user = n.retrieve("user"), window.Krux.segments = t && t.split(",") || [], n.trackPageload()
                        }, n.trackPageload = function() {
                            n.logger.debug("Tracking pageload"), window.Krux("page:load", n.onTrackError, {
                                pageView: !0
                            })
                        }, n.onTrackError = function(e) {
                            e ? n.logger.warn("Failed to track pageview.", e) : n.logger.debug("Tracked pageview")
                        }, n.onHistoryChange = function() {
                            window.Krux ? n.trackPageload() : l.j.debug("Failed to track pageview; Krux not available.")
                        }, n.retrieve = function(e) {
                            var t = "kx" + e;
                            if (window.localStorage) return window.localStorage[t] || "";
                            if (navigator.cookieEnabled) {
                                var n = E.get(t);
                                return n && decodeURI(n[1]) || ""
                            }
                            return ""
                        }, n.logger = l.j.withCategory("Tracking/Krux");
                        var i = t.countryCode,
                            r = l.b.get("krux_countries", [""]);
                        if (i && r.includes(i)) {
                            var a = location.href.match(/\bkxsrc=([^&]+)/),
                                o = a && decodeURIComponent(a[1]),
                                s = l.b.get("krux_url", "");
                            o && (/^https?:\/\/([a-z0-9_\-\.]+\.)?krxd\.net(:\d{1,5})?\//i.test(o) ? s = o : "disable" === o && (s = "")), n.scriptSrc = s, n.logger.debug("Created", {
                                userCountry: i,
                                supportedCountries: r,
                                src: n.scriptSrc
                            })
                        } else n.logger.debug("Skipping", {
                            userCountry: i,
                            supportedCountries: r
                        });
                        return n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.unlistener = this.props.history.listen(this.onHistoryChange), this.appendKruxScript()
                    }, t.prototype.componentWillUnmount = function() {
                        this.unlistener && this.unlistener()
                    }, t.prototype.componentDidUpdate = function() {
                        this.appendKruxScript()
                    }, t.prototype.render = function() {
                        return !this.scriptSrc || this.props.gdpr.blockConsentRequiredContent ? null : o.createElement("div", {
                            ref: this.renderBinding
                        })
                    }, t
                }(o.Component),
                N = Object(s.d)(g.f, Object(p.c)("Krux", {
                    autoReportInteractive: !0
                }), Object(m.i)(m.c.SalesforceDMP))(C),
                T = n("AOPA");
            n.d(t, "a", function() {
                return R
            });
            var _ = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            isError: !1
                        }, n.logger = l.j.withCategory("Tracking/Manager"), n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("TrackingManager"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidMount = function() {
                        this.reportInteractive(), l.n.track(u.SpadeEventType.BTTV, {
                            is_bttv: !!window.BetterTTV
                        }), l.n.track(u.SpadeEventType.FFZ, {
                            is_ffz: !!window.FrankerFaceZ
                        })
                    }, t.prototype.componentDidUpdate = function() {
                        this.reportInteractive()
                    }, t.prototype.render = function() {
                        if (this.state.isError || !this.props.data || this.props.data.loading || this.props.data.error) return null;
                        var e = this.props.data.requestInfo.countryCode;
                        if (!e && l.a.buildType !== d.a.Production) {
                            var t = a.parse(this.props.history.location.search || "");
                            t.country ? (e = t.country, this.logger.debug("Using supplied country code", {
                                countryCode: e
                            })) : (e = "US", this.logger.debug("Using default country code", {
                                countryCode: e
                            }))
                        }
                        return o.createElement("div", null, o.createElement(N, {
                            countryCode: e
                        }), o.createElement(f, {
                            countryCode: e
                        }), o.createElement(y, null), o.createElement(b, null), o.createElement(w, {
                            countryCode: e
                        }))
                    }, t.prototype.reportInteractive = function() {
                        !this.props.data || this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t
                }(o.Component),
                R = Object(s.d)(Object(c.a)(T), Object(p.c)("TrackingManager"))(_)
        },
        Gw3k: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("eO8H"),
                a = n("fvjX"),
                o = n("1/iK"),
                s = n("y5D0"),
                l = n("kRBY"),
                c = n("mrSG"),
                d = n("q1tI"),
                u = n("/7QA"),
                p = n("J4y2"),
                m = function(e) {
                    return u.o.integrations.desklight ? e.children(u.o.integrations.desklight) : null
                },
                h = function(e) {
                    return u.o.integrations.desklight ? null : e.children()
                },
                f = n("eJ65"),
                g = n("yR8l"),
                v = n("2xye"),
                b = n("jz1t"),
                y = n("trn+"),
                k = n("VwD5"),
                S = n("aCAx"),
                w = n("KxT4"),
                E = n("v2f3"),
                C = n("Ue10"),
                N = function(e) {
                    return d.createElement(C.Ja, c.a({
                        onClick: e.onClick,
                        linkTo: e.linkTo,
                        targetBlank: e.targetBlank
                    }, Object(C.Ub)(e)), d.createElement(C.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, e.title))
                },
                T = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = this.props.status === w.b.ConsentSaved || this.props.status === w.b.ConsentRequired;
                        return Object(w.f)() && e ? d.createElement(N, {
                            title: Object(u.d)("Consent Management Tool", "TopNavGDPRLink"),
                            "data-a-target": "gdpr-link",
                            onClick: this.props.showConsentTool
                        }) : null
                    }, t
                }(d.Component),
                _ = Object(i.b)(function(e) {
                    return {
                        status: e.gdpr.status
                    }
                }, function(e) {
                    return Object(a.b)({
                        showConsentTool: function() {
                            return Object(S.d)(E.a, {})
                        }
                    }, e)
                })(T),
                R = n("GnwI"),
                O = n("TDc0"),
                I = n("oSPo");
            var D = Object(i.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded,
                        languageCode: e.session.languageCode,
                        currentUser: Object(l.d)(e)
                    }
                })(I.b),
                P = n("dtw8"),
                x = n("8Ad5"),
                L = n("f00E"),
                F = n("kz7j"),
                M = n("NZDK"),
                A = n("9kXc"),
                U = n("H/lO"),
                B = "search_tracking_enabled";

            function j() {
                var e = Math.round(Date.now() / 1e3);
                return {
                    client_time: e,
                    distinct_id: u.o.session.deviceID,
                    time: e
                }
            }

            function z() {
                return u.o.dynamicSettings.get(B, !1)
            }

            function W(e, t) {
                z() && u.o.tracking.track(v.SpadeEventType.SearchQuery, c.a({}, j(), {
                    query: e,
                    count: t
                }))
            }
            var V = n("u5aL"),
                H = n("TSYQ"),
                G = n("8/mp"),
                q = n("QVaV"),
                Q = n("hyVY"),
                K = n("fk61"),
                Y = n("N0BP"),
                X = (n("+nzp"), n("KRR4")),
                $ = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e, t = {
                            "search-live-result-card": !0,
                            "search-live-result-card--hover": this.props.borderHover
                        };
                        return this.props.data && !this.props.data.loading && this.props.data.user && this.props.data.user.stream && (e = this.props.data.user.stream.previewImageURL), d.createElement(C.Ma, {
                            className: H(t),
                            key: this.props.id,
                            fullWidth: !0
                        }, d.createElement(C.Ja, c.a({
                            linkTo: this.props.linkTo,
                            hover: this.props.borderHover,
                            tabIndex: -1,
                            "data-a-target": "search-live-result-card-link",
                            onClick: this.props.onClick
                        }, Object(Y.a)(this.props)), d.createElement(C.C, null, d.createElement(C.Ma, {
                            className: "search-live-result-card__wrapper",
                            position: C.Wa.Relative,
                            overflow: C.Pa.Hidden,
                            fullWidth: !0
                        }, d.createElement(C.E, {
                            src: e || u.a.defaultStreamPreviewURL,
                            alt: this.props.imageAlt,
                            aspect: C.l.Aspect16x9
                        }), d.createElement(C.qb, {
                            className: "search-live-result-card__overlay",
                            position: C.Wa.Absolute,
                            attachLeft: !0,
                            attachTop: !0,
                            attachRight: !0,
                            attachBottom: !0,
                            display: C.R.Flex,
                            flexDirection: C.T.Column,
                            justifyContent: C.La.End,
                            overflow: C.Pa.Hidden,
                            color: C.K.Overlay
                        }, d.createElement(C.D, null, d.createElement(C.Ma, {
                            className: "search-live-result-card__body",
                            padding: .5
                        }, d.createElement(C.Q, {
                            type: C.Gb.H5,
                            ellipsis: !0,
                            className: "search-live-result-card__title"
                        }, this.props.channelName), d.createElement(C.Ma, {
                            className: "search-live-result-card__viewer-count-container",
                            display: C.R.Flex,
                            alignItems: C.c.Center
                        }, d.createElement(C.Ma, {
                            margin: {
                                right: .5
                            },
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            flexShrink: 0
                        }, d.createElement(C.fb, {
                            asset: C.gb.GlyphLive,
                            type: C.hb.Live,
                            width: 14,
                            height: 14
                        })), d.createElement(C.Q, {
                            className: "search-live-result-card__viewer-count",
                            ellipsis: !0
                        }, Object(u.e)(this.props.viewerCount))), d.createElement(C.Q, {
                            className: "search-live-result-card__info",
                            ellipsis: !0
                        }, this.props.title))))))))
                    }, t = c.c([Object(g.a)(X, {
                        options: function(e) {
                            return {
                                variables: {
                                    login: e.login
                                }
                            }
                        }
                    })], t)
                }(d.Component),
                J = (n("aKpu"), function(e) {
                    var t, n, i, r;
                    return e.title && (e.hitsCount && e.hitsCount > 0 ? t = Object(u.d)("more", "SearchResultSection") : e.totalHitsCount && e.totalHitsCount > 0 && (t = Object(u.d)("Show", "SearchResultSection")), void 0 !== e.totalHitsCount && (i = d.createElement(C.Ta, {
                        type: C.Ua.Brand,
                        label: e.totalHitsCount < 100 ? Object(u.e)(e.totalHitsCount) : "99+"
                    })), n = d.createElement(C.Ma, {
                        className: "search-result-section__titlesep"
                    }, d.createElement(C.Ja, c.a({
                        onClick: e.onHeaderClick,
                        tabIndex: -1,
                        type: C.Ka.Alpha
                    }, Object(C.Ub)(e), {
                        "data-ts_selectable": !0
                    }), d.createElement(C.Ma, {
                        display: C.R.Flex,
                        padding: {
                            left: 1,
                            right: 2,
                            y: .5
                        }
                    }, d.createElement(C.Ma, {
                        display: C.R.Inline,
                        margin: {
                            right: 1
                        }
                    }, d.createElement(C.Q, {
                        type: C.Gb.Span,
                        color: C.K.Link,
                        fontSize: C.V.Size7,
                        transform: C.Fb.Uppercase
                    }, e.title)), d.createElement("div", null, i), d.createElement(C.Ma, {
                        textAlign: C.Cb.Right,
                        flexGrow: 1
                    }, d.createElement(C.Q, {
                        fontSize: C.V.Size7,
                        transform: C.Fb.Uppercase
                    }, t)))))), (Array.isArray(e.children) && e.children.length > 0 || e.children && !Array.isArray(e.children)) && (r = d.createElement(C.Ma, {
                        className: "search-result-section__listing-wrapper",
                        margin: {
                            top: .5,
                            bottom: .5
                        }
                    }, e.children)), d.createElement("div", {
                        className: "search-result-section__block"
                    }, n, r)
                }),
                Z = (n("Ru8C"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(C.qb, {
                            className: "search-title-bar " + (this.props.showBack ? "search-title-bar--show" : ""),
                            background: C.n.Alt2,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            position: C.Wa.Relative,
                            zIndex: C.Tb.Above,
                            borderBottom: !0,
                            "data-a-target": "nav-search-title-bar"
                        }, d.createElement(C.Ma, {
                            className: "search-title-bar__back-container",
                            display: C.R.Flex,
                            alignContent: C.b.Stretch
                        }, d.createElement(C.w, {
                            icon: C.gb.AngleLeft,
                            type: C.y.Secondary,
                            size: C.x.Large,
                            onClick: this.props.onBackClick,
                            ariaLabel: Object(u.d)("Back button", "SearchTitleBar"),
                            "data-ts_selectable": this.props.showBack,
                            "data-a-target": "nav-search-back"
                        })), d.createElement(C.Ma, {
                            className: "search-title-bar__title",
                            position: C.Wa.Relative,
                            padding: {
                                left: 1
                            }
                        }, d.createElement(C.Q, {
                            fontSize: C.V.Size5
                        }, this.props.title)))
                    }, t
                }(d.Component)),
                ee = n("vR4/"),
                te = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleOptionChange = function(e) {
                            var n = e.currentTarget.elements;
                            t.props.onOptionsChange({
                                type: +n.type.value,
                                length: +n.video_length.value
                            })
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(C.qb, {
                            className: "search__video-filters",
                            background: C.n.Alt,
                            padding: {
                                top: .5,
                                x: 1
                            }
                        }, d.createElement(C.Fa, {
                            display: C.R.Flex,
                            justifyContent: C.La.Between,
                            flexWrap: C.U.Wrap
                        }, d.createElement("form", {
                            onInput: this.handleOptionChange
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex
                        }, d.createElement(C.Ma, {
                            display: C.R.InlineFlex,
                            margin: {
                                right: 1,
                                bottom: .5
                            },
                            flexShrink: 0
                        }, d.createElement(C.lb, {
                            name: "type"
                        }, d.createElement("option", {
                            value: ee.b.AllVideos
                        }, Object(u.d)("All Videos", "search__video-filters")), d.createElement("option", {
                            value: ee.b.PastBroadcasts
                        }, Object(u.d)("Past Broadcasts", "search__video-filters")), d.createElement("option", {
                            value: ee.b.Uploads
                        }, Object(u.d)("Uploads", "search__video-filters")), d.createElement("option", {
                            value: ee.b.Highlights
                        }, Object(u.d)("Highlights", "search__video-filters")))), d.createElement(C.Ma, {
                            display: C.R.InlineFlex,
                            margin: {
                                right: 1,
                                bottom: .5
                            }
                        }, d.createElement(C.lb, {
                            name: "video_length"
                        }, d.createElement("option", {
                            value: ee.a.AnyLength
                        }, Object(u.d)("Any Length", "search__video-filters")), d.createElement("option", {
                            value: ee.a.Short
                        }, Object(u.d)("Short", "search__video-filters")), d.createElement("option", {
                            value: ee.a.Long
                        }, Object(u.d)("Long", "search__video-filters"))))))))
                    }, t
                }(d.Component),
                ne = (n("OjLy"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onBackClick = function() {
                            return t.headerSelect(null)
                        }, t.gameHeaderSelect = function() {
                            return t.headerSelect(U.a.Games)
                        }, t.liveHeaderSelect = function() {
                            return t.headerSelect(U.a.Channels)
                        }, t.userHeaderSelect = function() {
                            return t.headerSelect(U.a.Users)
                        }, t.videoHeaderSelect = function() {
                            return t.headerSelect(U.a.Videos)
                        }, t.communityHeaderSelect = function() {
                            return t.headerSelect(U.a.Communities)
                        }, t.headerSelect = function(e) {
                            t.props.onCategorySelected(e)
                        }, t.onClick = function(e) {
                            if (e.nativeEvent.stopImmediatePropagation(), e.target !== e.currentTarget) {
                                var n = e.target,
                                    i = n.querySelector("a"),
                                    r = i ? i.querySelector("[data-tt_content]") : null;
                                r || (i = n.closest("a")), (r = i && i.dataset.tt_content ? i : null) && t.props.onResultSelected()
                            }
                        }, t.setScrollRef = function(e) {
                            return t.scroll = e
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.previousCategory !== this.props.currentCategory && (this.previousCategory = this.props.currentCategory, this.scroll.scrollToTop())
                    }, t.prototype.render = function() {
                        var e, t, n, i = {
                            "search-results-panel": !0,
                            "search-results-panel--active": !0,
                            "search-results-panel--closed": !this.props.isOpen,
                            "search-results-panel--filtered": this.props.currentCategory === U.a.Videos
                        };
                        return e = this.props.currentCategory && null !== this.props.currentCategory ? d.createElement(Z, {
                            title: this.getCategoryTitle(this.props.currentCategory),
                            showBack: !0,
                            onBackClick: this.onBackClick
                        }) : d.createElement(Z, {
                            title: Object(u.d)("Top Results", "SearchResultPanel__titlebar"),
                            showBack: !1
                        }), t = this.props.isWaiting ? d.createElement(C.Oa, {
                            fillContent: !0
                        }) : this.props.isErrored ? this.getErrorMessage() : this.props.currentCategory && null !== this.props.currentCategory ? this.getCategoryDrillDown(this.props.currentCategory) : this.props.gameResults && this.props.gameResults.totalHits > 0 || this.props.userResults && this.props.userResults.totalHits > 0 || this.props.communityResults && this.props.communityResults.totalHits > 0 || this.props.videoResults && this.props.videoResults.totalHits > 0 || this.props.liveResults && this.props.liveResults.totalHits > 0 ? this.getResultSections() : this.getNoResultsMessage(), this.props.currentCategory === U.a.Videos && (n = d.createElement(te, {
                            key: "video-filters",
                            onOptionsChange: this.props.onVideoOptionsChange
                        })), d.createElement("div", {
                            tabIndex: 0,
                            onKeyDown: this.props.onKeyDown
                        }, d.createElement(C.qb, {
                            className: H(i),
                            background: C.n.Base,
                            overflow: C.Pa.Hidden,
                            elevation: 5,
                            display: C.R.Flex,
                            flexDirection: C.T.Column,
                            flexWrap: C.U.NoWrap
                        }, e, n, d.createElement(G.b, {
                            className: "search-results-panel__wrapper",
                            contentClassName: "search-results-panel__content",
                            onClick: this.onClick,
                            scrollRef: this.setScrollRef,
                            suppressScrollX: !0,
                            "data-a-target": "search-scroller"
                        }, d.createElement(C.Ma, {
                            fullWidth: !0
                        }, t, d.createElement(G.a, {
                            key: this.props.currentCategory || "none",
                            enabled: !this.props.isWaiting && this.props.isOpen,
                            loadMore: this.props.loadMore
                        })))))
                    }, t.prototype.getResultSections = function() {
                        var e, t = [],
                            n = [],
                            i = this.getGameCards(),
                            r = this.getUserCards(),
                            a = this.getCommunityCards(),
                            o = this.getVideoCards(),
                            s = this.getLiveCards();
                        return s.length > 0 && (e = d.createElement(C.Ma, {
                            className: "search-results-panel__live",
                            margin: {
                                y: 1,
                                x: 1
                            }
                        }, d.createElement(C.Ba, null, s))), this.getResultSection("games-section", U.a.Games, this.gameHeaderSelect, this.props.gameResults, i.length, i, n, t), this.getResultSection("live-section", U.a.Channels, this.liveHeaderSelect, this.props.liveResults, s.length, e, n, t), this.getResultSection("channels-section", U.a.Users, this.userHeaderSelect, this.props.userResults, r.length, r, n, t), this.getResultSection("videos-section", U.a.Videos, this.videoHeaderSelect, this.props.videoResults, o.length, o, n, t), this.getResultSection("communities-section", U.a.Communities, this.communityHeaderSelect, this.props.communityResults, a.length, a, n, t), t.concat(n)
                    }, t.prototype.getResultSection = function(e, t, n, i, r, a, o, s) {
                        var l = d.createElement(J, {
                            key: e,
                            totalHitsCount: i ? i.totalHits : 0,
                            hitsCount: r,
                            title: this.getCategoryTitle(t),
                            onHeaderClick: n,
                            "data-a-target": e
                        }, a);
                        0 === r ? o.push(l) : s.push(l)
                    }, t.prototype.getGameCards = function() {
                        var e = this;
                        return this.props.gameResults ? this.props.gameResults.results.map(function(t) {
                            return d.createElement(K.a, {
                                onClick: e.onClick,
                                id: "game_" + t.id,
                                key: "game_" + t.id,
                                imageAlt: t.thumbnailAltText,
                                linkTo: t.linkTo,
                                title: t.title,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0
                            })
                        }) : []
                    }, t.prototype.getLiveCards = function() {
                        var e = this;
                        return this.props.liveResults ? this.props.liveResults.results.map(function(t) {
                            var n = Object(q.a)(t.login || "", t.name || "");
                            return d.createElement(C.L, {
                                key: "live_" + t.id,
                                cols: 6
                            }, d.createElement(C.Ma, {
                                margin: {
                                    bottom: 1
                                }
                            }, d.createElement($, {
                                onClick: e.onClick,
                                id: "live_" + t.id,
                                imageAlt: t.thumbnailAltText,
                                linkTo: t.linkTo,
                                title: t.status || "",
                                login: t.login ? t.login : "",
                                channelName: n,
                                viewerCount: t.viewerCount || 0,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0
                            })))
                        }) : []
                    }, t.prototype.getUserCards = function() {
                        var e = this;
                        return this.props.userResults ? this.props.userResults.results.map(function(t) {
                            var n = Object(q.a)(t.login || "", t.name || "");
                            return d.createElement(C.Ja, {
                                linkTo: t.linkTo,
                                onClick: e.onClick,
                                tabIndex: -1,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0,
                                key: t.id
                            }, d.createElement(C.Ma, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, d.createElement(C.C, {
                                row: !0
                            }, d.createElement(C.E, {
                                alt: t.thumbnailAltText,
                                src: t.thumbnail || "",
                                size: C.F.Size4,
                                aspect: C.l.Aspect1x1
                            }), d.createElement(C.D, {
                                overflow: C.Pa.Hidden
                            }, d.createElement(C.Fa, {
                                padding: {
                                    x: 1
                                }
                            }, d.createElement(C.Q, {
                                type: C.Gb.H5,
                                ellipsis: !0
                            }, n))))))
                        }) : []
                    }, t.prototype.getVideoCards = function() {
                        var e = this;
                        return this.props.videoResults ? this.props.videoResults.results.map(function(t) {
                            var n = Object(q.a)(t.login || "", t.name || ""),
                                i = Object(Q.b)(t.length || 0);
                            return d.createElement(C.Ja, {
                                key: "video_" + t.id,
                                linkTo: t.linkTo,
                                onClick: e.onClick,
                                tabIndex: -1,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0
                            }, d.createElement(C.Ma, {
                                className: "search-results-panel__card",
                                fullWidth: !0,
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, d.createElement(C.C, {
                                row: !0
                            }, d.createElement(C.E, {
                                src: t.thumbnail ? t.thumbnail : "",
                                alt: t.thumbnailAltText,
                                size: C.F.Size8,
                                aspect: C.l.Aspect16x9
                            }), d.createElement(C.D, {
                                overflow: C.Pa.Hidden
                            }, d.createElement(C.Fa, {
                                margin: {
                                    left: 1
                                }
                            }, d.createElement(C.Q, {
                                type: C.Gb.H5,
                                ellipsis: !0
                            }, t.title)), d.createElement(C.Fa, {
                                margin: {
                                    left: 1
                                }
                            }, d.createElement(C.Q, {
                                className: "search-results-panel__link",
                                ellipsis: !0
                            }, t.createdAt ? Object(u.c)(new Date(1e3 * t.createdAt), "medium") : "", " · ", i || "", " · ", d.createElement(C.Q, {
                                className: "search-results-panel__highlight-link",
                                type: C.Gb.Span
                            }, n)))))))
                        }) : []
                    }, t.prototype.getCommunityCards = function() {
                        var e = this;
                        return this.props.communityResults ? this.props.communityResults.results.map(function(t) {
                            return d.createElement(C.Ja, {
                                key: "community_" + t.id,
                                linkTo: t.linkTo,
                                onClick: e.onClick,
                                tabIndex: -1,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0
                            }, d.createElement(C.Ma, {
                                className: "search-results-panel__card",
                                fullWidth: !0,
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, d.createElement(C.C, {
                                row: !0
                            }, d.createElement(C.E, {
                                src: t.thumbnail ? t.thumbnail : "",
                                alt: t.thumbnailAltText,
                                size: C.F.Size4,
                                aspect: C.l.BoxArt
                            }), d.createElement(C.D, {
                                overflow: C.Pa.Hidden
                            }, d.createElement(C.Fa, {
                                margin: {
                                    left: 1
                                }
                            }, d.createElement(C.Q, {
                                type: C.Gb.H5,
                                ellipsis: !0
                            }, t.name)), d.createElement(C.Fa, {
                                margin: {
                                    left: 1
                                }
                            }, d.createElement(C.Q, {
                                className: "search-results-panel__link",
                                ellipsis: !0
                            }, Object(u.d)("{viewerCount,number} Viewers", {
                                viewerCount: t.viewerCount || 0
                            }, "SearchResultPanel")))))))
                        }) : []
                    }, t.prototype.getCategoryDrillDown = function(e) {
                        var t;
                        switch (e) {
                            case U.a.Games:
                                if (!this.props.gameResults || 0 === this.props.gameResults.totalHits) return this.getNoResultsMessage();
                                t = this.getGameCards();
                                break;
                            case U.a.Users:
                                if (!this.props.userResults || 0 === this.props.userResults.totalHits) return this.getNoResultsMessage();
                                t = this.getUserCards();
                                break;
                            case U.a.Communities:
                                if (!this.props.communityResults || 0 === this.props.communityResults.totalHits) return this.getNoResultsMessage();
                                t = this.getCommunityCards();
                                break;
                            case U.a.Videos:
                                if (!this.props.videoResults || 0 === this.props.videoResults.totalHits) return this.getNoResultsMessage();
                                t = this.getVideoCards();
                                break;
                            case U.a.Channels:
                                if (!this.props.liveResults || 0 === this.props.liveResults.totalHits) return this.getNoResultsMessage();
                                t = [d.createElement(C.Ma, {
                                    className: "search-results-panel__live",
                                    margin: {
                                        x: 1
                                    },
                                    key: "live_drill-down-container"
                                }, d.createElement(C.Ba, null, this.getLiveCards()))];
                                break;
                            default:
                                return this.getNoResultsMessage()
                        }
                        return d.createElement(J, null, t)
                    }, t.prototype.getCategoryTitle = function(e) {
                        switch (e) {
                            case U.a.Games:
                                return Object(u.d)("Games", "SearchResultPanel");
                            case U.a.Users:
                                return Object(u.d)("Channels", "SearchResultPanel");
                            case U.a.Communities:
                                return Object(u.d)("Communities", "SearchResultPanel");
                            case U.a.Videos:
                                return Object(u.d)("Videos", "SearchResultPanel");
                            case U.a.Channels:
                                return Object(u.d)("Live", "SearchResultPanel");
                            default:
                                return Object(u.d)("Top Results", "SearchResultPanel")
                        }
                    }, t.prototype.getNoResultsMessage = function() {
                        return d.createElement(C.Ma, {
                            display: C.R.Flex,
                            flexDirection: C.T.Column,
                            justifyContent: C.La.Center,
                            alignItems: C.c.Center,
                            flexGrow: 1,
                            fullHeight: !0,
                            zIndex: C.Tb.Above,
                            className: "search-results-panel__notice-wrap"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt2,
                            textAlign: C.Cb.Center,
                            flexShrink: 1
                        }, d.createElement(C.fb, {
                            asset: C.gb.SearchNoResults,
                            width: 46,
                            height: 48
                        })), d.createElement(C.Fa, {
                            margin: {
                                top: 1
                            },
                            textAlign: C.Cb.Center
                        }, d.createElement(C.Q, {
                            type: C.Gb.H4,
                            "data-test-selector": "panel-body-no-results"
                        }, Object(u.d)("No results found", "SearchResultPanel"))), d.createElement(C.Q, {
                            type: C.Gb.P
                        }, Object(u.d)("They're probably in another castle", "SearchResultPanel")))
                    }, t.prototype.getErrorMessage = function() {
                        return d.createElement(C.Ma, {
                            display: C.R.Flex,
                            flexDirection: C.T.Column,
                            justifyContent: C.La.Center,
                            alignItems: C.c.Center,
                            flexGrow: 1,
                            fullHeight: !0,
                            zIndex: C.Tb.Above,
                            className: "search-results-panel__notice-wrap"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt2,
                            textAlign: C.Cb.Center,
                            flexShrink: 1
                        }, d.createElement(C.fb, {
                            asset: C.gb.DeadGlitch,
                            width: 46,
                            height: 48
                        })), d.createElement(C.Fa, {
                            margin: {
                                top: 1
                            },
                            textAlign: C.Cb.Center
                        }, d.createElement(C.Q, {
                            type: C.Gb.H4,
                            "data-test-selector": "search-error-message"
                        }, Object(u.d)("Search is not available at this time", "SearchResultPanel"))), d.createElement(C.Q, {
                            type: C.Gb.P
                        }, Object(u.d)("Please try again later", "SearchResultPanel")))
                    }, t
                }(d.Component)),
                ie = (n("yH8i"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            isAnimating: !1,
                            currentCategory: t.currentCategory
                        }, n
                    }
                    return c.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        var t = this;
                        e.currentCategory && e.currentCategory !== this.props.currentCategory && this.setState({
                            currentCategory: e.currentCategory
                        }), this.props.isVisible !== e.isVisible && (this.animationTimeout && window.clearTimeout(this.animationTimeout), this.setState({
                            isAnimating: !0
                        }), this.animationTimeout = window.setTimeout(function() {
                            t.setState({
                                isAnimating: !1
                            })
                        }, 300))
                    }, t.prototype.componentWillUnmount = function() {
                        this.animationTimeout && window.clearTimeout(this.animationTimeout)
                    }, t.prototype.render = function() {
                        if (!this.state.currentCategory) return null;
                        var e = this.getAssetName(this.state.currentCategory);
                        return this.props.isVisible || this.state.isAnimating ? d.createElement(C.Ma, {
                            className: "search-tag",
                            display: C.R.Flex,
                            position: C.Wa.Absolute,
                            attachTop: !0,
                            attachBottom: !0
                        }, d.createElement(C.e, {
                            enabled: !0,
                            type: this.props.isVisible ? C.j.BounceIn : C.j.BounceOut
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            fullHeight: !0
                        }, d.createElement(C.zb, {
                            type: C.Bb.Accent,
                            action: C.Ab.Remove,
                            label: this.state.currentCategory,
                            icon: e,
                            onClick: this.props.onClick,
                            "data-test-selector": "filter-icon",
                            "data-a-target": "nav-search-clear"
                        })))) : null
                    }, t.prototype.getAssetName = function(e) {
                        switch (e) {
                            case U.a.Games:
                                return C.gb.NavGames;
                            case U.a.Users:
                                return C.gb.NavProfile;
                            case U.a.Communities:
                                return C.gb.Communities;
                            case U.a.Videos:
                                return C.gb.NavVideos;
                            case U.a.Channels:
                            default:
                                return C.gb.NavChannels
                        }
                    }, t
                }(d.Component)),
                re = (n("b52s"), "nav-search-input"),
                ae = {
                    align: C.Kb.Center,
                    direction: C.Lb.Bottom,
                    label: ""
                },
                oe = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleKeydown = function(e) {
                            e.keyCode === x.a.F && e.altKey && (e.preventDefault(), t.NavSearchInputRef.focus())
                        }, t.focusInput = function(e) {
                            e || t.NavSearchInputRef.focus()
                        }, t.renderSearchInput = function() {
                            return d.createElement(C.ib, {
                                onChange: t.handleChange,
                                onFocus: t.props.onFocus,
                                onKeyDown: t.props.onKeyDown,
                                placeholder: ae.label,
                                id: re,
                                "data-a-target": "nav-search-input",
                                spellCheck: !1,
                                refDelegate: t.setNavSearchInputRef
                            })
                        }, t.getSearchPanelProps = function() {
                            return {
                                isOpen: !!t.props.truncated || t.props.isOpen,
                                gameResults: t.props.gameResults,
                                userResults: t.props.userResults,
                                communityResults: t.props.communityResults,
                                videoResults: t.props.videoResults,
                                liveResults: t.props.liveResults,
                                isErrored: t.props.isErrored,
                                isWaiting: t.props.isWaiting,
                                onResultSelected: t.props.onResultSelected,
                                onCategorySelected: t.props.onCategorySelected,
                                currentCategory: t.props.currentCategory,
                                onVideoOptionsChange: t.props.onVideoOptionsChange,
                                loadMore: t.props.loadMore,
                                onKeyDown: t.props.onKeyDown
                            }
                        }, t.setNavSearchInputRef = function(e) {
                            return t.NavSearchInputRef = e
                        }, t.handleChange = function(e) {
                            t.props.onChange(e.target.value)
                        }, t.categoryTagClicked = function(e) {
                            e.nativeEvent.stopImmediatePropagation(), t.props.onCategorySelected(null)
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentWillMount = function() {
                        window.addEventListener("keydown", this.handleKeydown)
                    }, t.prototype.componentWillUnmount = function() {
                        window.removeEventListener("keydown", this.handleKeydown)
                    }, t.prototype.render = function() {
                        return ae.label = Object(u.d)("Search", "NavSearch"), this.props.truncated ? d.createElement(f.a, {
                            onToggle: this.focusInput,
                            tooltipProps: ae
                        }, d.createElement(C.w, {
                            ariaLabel: ae.label,
                            icon: C.gb.NavSearch,
                            overlay: !0
                        }), d.createElement(C.q, {
                            direction: C.r.BottomRight,
                            size: C.s.Large,
                            tailOffset: 7,
                            tailBackground: C.n.Alt2,
                            "data-a-target": "nav-search-balloon"
                        }, d.createElement(C.qb, {
                            background: C.n.Alt2,
                            padding: 1,
                            borderBottom: !0
                        }, this.renderSearchInput()), d.createElement(ne, c.a({}, this.getSearchPanelProps())))) : d.createElement("div", {
                            className: "top-nav__search-container",
                            "data-click-out-id": "nav-search-balloon"
                        }, d.createElement(V.a, {
                            onClickOut: this.props.onClickOut
                        }, this.renderSearchInput(), d.createElement(C.q, {
                            direction: C.r.Bottom,
                            noTail: !0,
                            size: C.s.Large,
                            show: this.props.isOpen,
                            offsetY: "5px",
                            "data-a-target": "nav-search-balloon"
                        }, d.createElement(ne, c.a({}, this.getSearchPanelProps()))), d.createElement(ie, {
                            isVisible: this.props.isOpen && !!this.props.currentCategory,
                            currentCategory: this.props.currentCategory,
                            onClick: this.categoryTagClicked
                        })))
                    }, t
                }(d.Component),
                se = 175,
                le = 1e3,
                ce = 1e3,
                de = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.didSelectCategory = !1, n.didSelectResult = !1, n.searchResultsFirstPage = null, n.onCategorySelected = function(e) {
                            n.setState(function(t) {
                                return c.a({}, n.getEmptyState(), {
                                    term: t.term,
                                    currentCategory: e,
                                    isOpen: !0,
                                    isWaiting: !0
                                })
                            }, function() {
                                n.didSelectCategory = !0, n.doSearch(n.state.term)
                            })
                        }, n.onChange = function(e) {
                            n.inputTimer && (clearTimeout(n.inputTimer), n.inputTimer = 0), n.props.latencyTracking.resetCustomEvents(F.a.Search), e ? (n.searchResultsFirstPage = n.props.latencyTracking.registerCustomEvent({
                                benchmark: le,
                                group: F.a.Search,
                                key: F.b.SearchResultsFirstPage,
                                label: F.c.FirstPageLoaded,
                                start: F.d.Registration
                            }), n.inputTimer = setTimeout(function() {
                                n.setState({
                                    topGameResults: null,
                                    topUserResults: null,
                                    topLiveResults: null,
                                    topVideoResults: null,
                                    topCommunityResults: null,
                                    isWaiting: !0,
                                    term: e
                                }, function() {
                                    n.state.videoOptions ? n.doVideosSearch(e, n.state.videoOptions) : n.doSearch(e)
                                })
                            }, se)) : n.setState(n.getEmptyState())
                        }, n.onHistoryChange = function() {
                            n.state.isOpen && n.setState({
                                isOpen: !1
                            })
                        }, n.onClickOut = function() {
                            n.state.isOpen && n.setState({
                                isOpen: !1
                            })
                        }, n.onFocus = function() {
                            n.state.term && !n.state.isOpen && n.setState({
                                isOpen: !0
                            })
                        }, n.onKeyDown = function(e) {
                            if (n.state.term) {
                                var t = function() {
                                    e.preventDefault(), e.stopPropagation()
                                };
                                e.keyCode === x.a.Esc ? n.setState({
                                    isOpen: !1
                                }) : e.keyCode === x.a.Up ? (t(), n.focusNext(-1)) : e.keyCode === x.a.Down && (t(), n.focusNext(1))
                            }
                        }, n.onResultSelected = function() {
                            n.didSelectResult = !0, n.setState({
                                isOpen: !1
                            })
                        }, n.loadMore = function() {
                            return c.b(n, void 0, void 0, function() {
                                var e, t, n, i, r, a = this;
                                return c.e(this, function(o) {
                                    switch (o.label) {
                                        case 0:
                                            if (this.state.queryID || null === this.state.currentCategory || !0 === this.state.exhaustedHits || this.state.videoOptions) return [2];
                                            e = this.state.currentPage + 1, this.props.latencyTracking.resetCustomEvents(F.a.Search), n = this.props.latencyTracking.registerCustomEvent({
                                                benchmark: ce,
                                                group: F.a.Search,
                                                key: F.b.SearchResultsLaterPage,
                                                label: F.c.LaterPageLoaded,
                                                start: F.d.Registration
                                            }), o.label = 1;
                                        case 1:
                                            return o.trys.push([1, 3, , 4]), [4, this.searchClient.queryForType(this.state.currentCategory, this.state.term, "", {
                                                page: e
                                            })];
                                        case 2:
                                            return t = o.sent(), [3, 4];
                                        case 3:
                                            return i = o.sent(), u.j.error(i, "Algolia page search failed"), this.setState(c.a({}, this.getEmptyState(), {
                                                isErrored: !0,
                                                isOpen: !0
                                            })), [2];
                                        case 4:
                                            return t ? (r = Object(A.b)({
                                                searchResults: t,
                                                append: e > 0,
                                                currentGameResults: this.state.currentGameResults,
                                                currentUserResults: this.state.currentUserResults,
                                                currentCommunityResults: this.state.currentCommunityResults,
                                                currentVideoResults: this.state.currentVideoResults,
                                                currentLiveResults: this.state.currentLiveResults
                                            }), this.setState(c.a({}, r, {
                                                isOpen: !0,
                                                isWaiting: !1,
                                                currentPage: e,
                                                exhaustedHits: r.exhaustedHits
                                            }), function() {
                                                a.props.latencyTracking.reportCustomEvent(n)
                                            }), [2]) : (this.setState(c.a({}, this.getEmptyState(), {
                                                isErrored: !0,
                                                isOpen: !0
                                            })), [2])
                                    }
                                })
                            })
                        }, n.doVideosSearch = function(e, t) {
                            return c.b(n, void 0, void 0, function() {
                                var n, i, r, a = this;
                                return c.e(this, function(o) {
                                    switch (o.label) {
                                        case 0:
                                            n = L.a(), o.label = 1;
                                        case 1:
                                            return o.trys.push([1, 3, , 4]), [4, this.searchClient.queryVideos(e, n, t)];
                                        case 2:
                                            return i = o.sent(), W(e, i.totalHits), i.hits && this.setState({
                                                topGameResults: null,
                                                topUserResults: null,
                                                topLiveResults: null,
                                                topVideoResults: null,
                                                topCommunityResults: null,
                                                currentVideoResults: {
                                                    totalHits: i.totalHits,
                                                    results: i.hits.map(A.a)
                                                },
                                                queryID: "",
                                                isWaiting: !1
                                            }, function() {
                                                a.searchResultsFirstPage && (a.props.latencyTracking.reportCustomEvent(a.searchResultsFirstPage), a.searchResultsFirstPage = null)
                                            }), [3, 4];
                                        case 3:
                                            return r = o.sent(), u.j.error(r, "Algolia video search failed"), this.setState({
                                                isErrored: !0,
                                                isWaiting: !1
                                            }), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, n.changeVideoOptions = function(e) {
                            n.setState({
                                videoOptions: e
                            }, function() {
                                n.doVideosSearch(n.state.term, e)
                            })
                        }, n.searchClient = new M.a({
                            appId: u.a.algoliaApplicationID,
                            apiKey: u.a.algoliaAPIKey,
                            apolloClient: u.o.apollo.client,
                            logger: u.j,
                            config: u.a,
                            stats: u.o.stats
                        }), n.state = n.getEmptyState(), n
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), this.props.history.listen(this.onHistoryChange)
                    }, t.prototype.componentDidUpdate = function(e, t) {
                        var n, i;
                        !this.state.focusSelectable || this.state.queryID || this.inputTimer || (this.focusNext(1), this.setState({
                            focusSelectable: !1
                        })), t.isOpen && !this.state.isOpen ? (this.didSelectCategory || this.didSelectResult ? (n = this.state.term, i = this.state.currentCategory ? function(e) {
                            switch (e) {
                                case U.a.Channels:
                                    return "channels";
                                case U.a.Communities:
                                    return "communities";
                                case U.a.Games:
                                    return "games";
                                case U.a.Users:
                                    return "users";
                                case U.a.Videos:
                                    return "videos";
                                default:
                                    return ""
                            }
                        }(this.state.currentCategory) : "", z() && u.o.tracking.track(v.SpadeEventType.CompletedSearch, c.a({}, j(), {
                            query: n,
                            filter: i
                        }))) : function(e) {
                            z() && u.o.tracking.track(v.SpadeEventType.AbandonedSearch, c.a({}, j(), {
                                query: e
                            }))
                        }(this.state.term), this.didSelectCategory = !1, this.didSelectResult = !1) : !t.isOpen && this.state.isOpen && function(e) {
                            z() && u.o.tracking.track(v.SpadeEventType.BeganSearch, c.a({}, j(), {
                                query: e
                            }))
                        }(this.state.term)
                    }, t.prototype.render = function() {
                        return d.createElement(oe, {
                            onChange: this.onChange,
                            onClickOut: this.onClickOut,
                            onFocus: this.onFocus,
                            onKeyDown: this.onKeyDown,
                            onResultSelected: this.onResultSelected,
                            gameResults: this.state.currentGameResults,
                            userResults: this.state.currentUserResults,
                            communityResults: this.state.currentCommunityResults,
                            videoResults: this.state.currentVideoResults,
                            liveResults: this.state.currentLiveResults,
                            isOpen: this.state.isOpen,
                            isErrored: this.state.isErrored,
                            isWaiting: this.state.isWaiting,
                            onCategorySelected: this.onCategorySelected,
                            currentCategory: this.state.currentCategory,
                            onVideoOptionsChange: this.changeVideoOptions,
                            loadMore: this.loadMore,
                            truncated: this.props.truncated
                        })
                    }, t.prototype.focusNext = function(e) {
                        var t, n = document.querySelectorAll("[data-ts_selectable=true]"),
                            i = document.activeElement,
                            r = Array.prototype.indexOf.call(n, i);
                        if ((t = r < 0 ? e > 0 ? 0 : n.length - 1 : r + e) < 0 && (t = 0), !(t >= n.length)) {
                            var a = n.item(t);
                            a.focus(), a.tabIndex = 0, this.state.currentFocus && (this.state.currentFocus.tabIndex = -1), this.setState({
                                currentFocus: a
                            })
                        }
                    }, t.prototype.doSearch = function(e) {
                        return c.b(this, void 0, void 0, function() {
                            var t, n, i, r, a, o, s = this;
                            return c.e(this, function(l) {
                                switch (l.label) {
                                    case 0:
                                        this.inputTimer = 0, t = -1, n = L.a(), i = document.activeElement && "INPUT" === document.activeElement.tagName.toUpperCase(), this.setState({
                                            queryID: n,
                                            focusSelectable: !i && !!this.state.currentFocus
                                        }), l.label = 1;
                                    case 1:
                                        return l.trys.push([1, 6, , 7]), this.state.currentCategory && null !== this.state.currentCategory ? (t = 0, [4, this.searchClient.queryForType(this.state.currentCategory, e, n)]) : [3, 3];
                                    case 2:
                                        return r = l.sent(), [3, 5];
                                    case 3:
                                        return this.state.topGameResults && this.state.topUserResults && this.state.topLiveResults && this.state.topVideoResults && this.state.topCommunityResults ? (this.setState({
                                            currentGameResults: this.state.topGameResults,
                                            currentUserResults: this.state.topUserResults,
                                            currentLiveResults: this.state.topLiveResults,
                                            currentVideoResults: this.state.topVideoResults,
                                            currentCommunityResults: this.state.topCommunityResults,
                                            queryID: "",
                                            term: e,
                                            isOpen: !0,
                                            isWaiting: !1,
                                            currentPage: t
                                        }), [2]) : [4, this.searchClient.queryTopResults(e, n)];
                                    case 4:
                                        r = l.sent(), l.label = 5;
                                    case 5:
                                        return [3, 7];
                                    case 6:
                                        return a = l.sent(), u.j.error(a, "Algolia top results search failed"), this.setState(c.a({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            isOpen: !0,
                                            term: e
                                        })), [2];
                                    case 7:
                                        return r ? (W(e, (r.channels ? r.channels.totalHits : 0) + (r.communities ? r.communities.totalHits : 0) + (r.games ? r.games.totalHits : 0) + (r.users ? r.users.totalHits : 0) + (r.videos ? r.videos.totalHits : 0)), this.state.queryID !== r.id ? [2] : (o = Object(A.b)({
                                            searchResults: r,
                                            append: !1,
                                            currentGameResults: this.state.currentGameResults,
                                            currentUserResults: this.state.currentUserResults,
                                            currentCommunityResults: this.state.currentCommunityResults,
                                            currentVideoResults: this.state.currentVideoResults,
                                            currentLiveResults: this.state.currentLiveResults
                                        }), this.setState(c.a({}, o, {
                                            queryID: "",
                                            term: e,
                                            isOpen: !0,
                                            isWaiting: !1,
                                            currentPage: t
                                        }), function() {
                                            s.searchResultsFirstPage && (s.props.latencyTracking.reportCustomEvent(s.searchResultsFirstPage), s.searchResultsFirstPage = null)
                                        }), this.state.currentCategory && null === this.state.currentCategory && this.setState({
                                            topGameResults: o.currentGameResults,
                                            topUserResults: o.currentUserResults,
                                            topLiveResults: o.currentLiveResults,
                                            topVideoResults: o.currentVideoResults,
                                            topCommunityResults: o.currentCommunityResults,
                                            exhaustedHits: o.exhaustedHits
                                        }), [2])) : (this.setState(c.a({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            isOpen: !0,
                                            term: e
                                        })), [2])
                                }
                            })
                        })
                    }, t.prototype.getEmptyState = function() {
                        return {
                            term: "",
                            currentGameResults: {
                                totalHits: 0,
                                results: []
                            },
                            currentUserResults: {
                                totalHits: 0,
                                results: []
                            },
                            currentLiveResults: {
                                totalHits: 0,
                                results: []
                            },
                            currentCommunityResults: {
                                totalHits: 0,
                                results: []
                            },
                            currentVideoResults: {
                                totalHits: 0,
                                results: []
                            },
                            isOpen: !1,
                            isErrored: !1,
                            queryID: "",
                            isWaiting: !1,
                            currentCategory: null,
                            currentPage: -1,
                            focusSelectable: !1,
                            exhaustedHits: !1,
                            videoOptions: void 0
                        }
                    }, t = c.c([Object(R.c)("NavSearch")], t)
                }(d.Component),
                ue = Object(P.f)(de),
                pe = n("RVih"),
                me = n("YSKX"),
                he = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = !1;
                        if (this.props.data) {
                            if (this.props.data.loading || this.props.data.error) return null;
                            e = !!this.props.data.currentUser && this.props.data.currentUser.hasPrime
                        }
                        return !this.props.isLoggedIn || e ? d.createElement("a", {
                            href: k.a,
                            target: "_blank",
                            className: "top-nav__nav-link",
                            "data-a-target": "store-link"
                        }, Object(u.d)("Store", "TopNavStore")) : null
                    }, t = c.c([Object(g.a)(me, {
                        skip: function(e) {
                            return !e.isLoggedIn
                        }
                    }), Object(R.c)("TopNavStoreComponent", {
                        autoReportInteractive: !0
                    })], t)
                }(d.Component);
            var fe, ge = Object(i.b)(function(e) {
                    return {
                        isLoggedIn: Object(l.e)(e)
                    }
                })(he),
                ve = n("ht6z"),
                be = n("j3KY"),
                ye = n("myUo"),
                ke = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        if (this.props.data.loading || this.props.data.error) return null;
                        var e = this.props.data.requestInfo && !Object(ve.a)(this.props.data.requestInfo.countryCode),
                            t = !this.props.data.currentUser || !this.props.data.currentUser.hasTurbo;
                        if (e && t) return d.createElement(C.O, {
                            to: "/products/turbo?ref=top_nav",
                            targetBlank: !0,
                            className: "top-nav__nav-link",
                            "data-a-target": "try-prime-link"
                        }, Object(u.d)("Go Turbo", "TopNavUpsell"));
                        if (!this.props.data.currentUser || !this.props.data.currentUser.hasPrime) {
                            var n = Object(be.f)(be.c, window.location.pathname.substring(1));
                            return d.createElement("a", {
                                href: n,
                                target: "_blank",
                                className: "top-nav__nav-link",
                                "data-a-target": "try-prime-link"
                            }, Object(u.d)("Try Prime", "TopNavUpsell"))
                        }
                        return null
                    }, t = c.c([Object(g.a)(ye), Object(R.c)("TopNavUpsellComponent")], t)
                }(d.Component),
                Se = n("x7UT"),
                we = n("eDVu"),
                Ee = n("NSwr"),
                Ce = n("0Log"),
                Ne = n("/0dD"),
                Te = n("/aPz"),
                _e = n("daa2"),
                Re = n("76Lv"),
                Oe = n("JOxF"),
                Ie = n("jZLd"),
                De = n("XDQu"),
                Pe = n("geRD");
            ! function(e) {
                e.Disable = "disable", e.Enable = "enable"
            }(fe || (fe = {}));
            var xe = n("dUi4"),
                Le = (n("g6pS"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onLogoutClick = function(e) {
                            e.preventDefault(), t.props.logout()
                        }, t.onShareCheckboxClick = function() {
                            t.props.data && !t.props.data.error && t.props.data.currentUser && t.props.toggleShareActivity()
                        }, t.onDarkModeCheckboxClick = function() {
                            var e = t.props.theme === Ne.a.Dark ? Ne.a.Light : Ne.a.Dark;
                            t.props.changeTheme(e, Ie.a.UserMenu)
                        }, t.onOnlineClick = function(e) {
                            t.props.data && !t.props.data.error && t.props.data.currentUser && (e && e.stopPropagation(), t.props.toggleVisibility(Ee.a.Online))
                        }, t.onInvisibleClick = function(e) {
                            t.props.data && !t.props.data.error && t.props.data.currentUser && (e && e.stopPropagation(), t.props.toggleVisibility(Ee.a.Offline))
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = H("top-nav-user-menu-dropdown", {
                                "top-nav-user-menu-dropdown--toggled": this.props.dropdownOpen
                            }),
                            t = this.props.dropdownOpen ? "dropdown-down" : "dropdown-up",
                            n = this.props.dropdownOpen ? "dropdown-down" : "dropdown-up",
                            i = !1,
                            r = C.K.Alt2,
                            a = C.K.Alt2,
                            o = !1,
                            s = !0,
                            l = !1,
                            c = !1,
                            p = void 0,
                            m = void 0,
                            h = void 0;
                        return this.props.data && !this.props.data.error && this.props.data.currentUser && (i = !0, r = this.props.data.currentUser.availability === Ee.a.Offline ? C.K.Base : C.K.Alt2, a = this.props.data.currentUser.availability === Ee.a.Online ? C.K.Base : C.K.Alt2, o = !!this.props.data.currentUser.settings && this.props.data.currentUser.settings.isSharingActivity, s = this.props.data.currentUser.availability === Ee.a.Offline, l = this.props.data.currentUser.availability === Ee.a.Online, c = this.props.data.currentUser.availability === Ee.a.Offline, p = {
                            pathname: "/" + this.props.data.currentUser.login,
                            state: {
                                content: v.PageviewContent.SelfChannel,
                                medium: v.PageviewMedium.TopNav
                            }
                        }, m = "/" + this.props.data.currentUser.login + "/manager", h = "/" + this.props.data.currentUser.login + "/dashboard/live"), d.createElement(C.qb, {
                            overflow: C.Pa.Hidden,
                            position: C.Wa.Absolute,
                            className: e,
                            background: C.n.Base,
                            color: C.K.Base,
                            "data-a-target": t,
                            "data-test-selector": n,
                            attachRight: !0,
                            zIndex: C.Tb.Below
                        }, d.createElement(G.b, {
                            className: "top-nav-user-menu-dropdown__scrollable",
                            suppressScrollX: !0
                        }, d.createElement(C.Ma, null, d.createElement(C.qb, {
                            padding: {
                                y: 1
                            },
                            background: C.n.Alt
                        }, d.createElement(C.Ja, {
                            disabled: !i,
                            onClick: this.onOnlineClick,
                            "data-a-target": "online-dropdown-button",
                            "data-test-selector": "online-dropdown-button"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt2,
                            display: C.R.Flex,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            alignItems: C.c.Center,
                            display: C.R.InlineFlex,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.Xa, {
                            status: C.Ya.Online
                        })), d.createElement(C.Q, {
                            bold: l,
                            color: a
                        }, Object(u.d)("Online", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            disabled: !i,
                            onClick: this.onInvisibleClick,
                            "data-a-target": "invisible-dropdown-button",
                            "data-test-selector": "invisible-dropdown-button"
                        }, d.createElement(C.qb, {
                            color: C.K.Base,
                            display: C.R.Flex,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            alignItems: C.c.Center,
                            display: C.R.InlineFlex,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.Xa, {
                            status: C.Ya.Invisible
                        })), d.createElement(C.Q, {
                            bold: c,
                            color: r
                        }, Object(u.d)("Invisible", "UserMenuDropdown")))), d.createElement(C.Ma, {
                            margin: {
                                x: 2,
                                bottom: 1,
                                top: .5
                            }
                        }, d.createElement(C.J, {
                            id: "share-activity-toggle",
                            label: Object(u.d)("Share my activity", "UserMenuDropdown"),
                            "data-a-target": "share-activity-toggle",
                            "data-test-selector": "share-activity-toggle",
                            "data-a-value": o,
                            checked: o,
                            onChange: this.onShareCheckboxClick,
                            disabled: s
                        }), d.createElement(C.Q, {
                            type: C.Gb.Span,
                            color: C.K.Alt
                        }, Object(u.d)("Share what you're watching, playing, or streaming with your friends.", "UserMenuDropdown"))), d.createElement(C.qb, {
                            borderBottom: !0,
                            margin: {
                                x: 2,
                                y: 1
                            }
                        }), d.createElement(C.Ma, {
                            margin: {
                                x: 2,
                                bottom: 1
                            }
                        }, d.createElement(C.J, {
                            id: "dark-mode-toggle",
                            label: Object(u.d)("Dark Mode", "UserMenuDropdown"),
                            "data-a-target": "dark-mode-toggle",
                            "data-test-selector": "dark-mode-toggle",
                            "data-a-value": this.props.theme,
                            checked: this.props.theme === Ne.a.Dark,
                            onChange: this.onDarkModeCheckboxClick
                        })), d.createElement(xe.a, null)), d.createElement(C.Ma, {
                            margin: {
                                y: 1
                            }
                        }, d.createElement(C.Ja, {
                            disabled: !i,
                            linkTo: p,
                            "data-a-target": "channel-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavMyChannel,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Channel", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            disabled: !i,
                            linkTo: m,
                            "data-a-target": "video-manager-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavManager,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Video Producer", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            disabled: !i,
                            linkTo: h,
                            "data-a-target": "dashboard-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavDashboard,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Dashboard", "UserMenuDropdown")))), d.createElement(C.qb, {
                            borderBottom: !0,
                            margin: {
                                x: 2,
                                y: 1
                            }
                        }), d.createElement(C.Ja, {
                            linkTo: "/friends",
                            "data-a-target": "friends-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.Friends,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Friends", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            linkTo: "/messages/inbox",
                            "data-a-target": "inbox-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavMessages,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Messages", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            linkTo: "/subscriptions",
                            "data-a-target": "subscriptions-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.Star,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Subscriptions", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            linkTo: "/inventory",
                            "data-a-target": "inventory-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.Crate,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Inventory", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            linkTo: "/payments",
                            "data-a-target": "payments-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavBackpack,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Payments", "UserMenuDropdown")))), d.createElement(C.qb, {
                            borderBottom: !0,
                            margin: {
                                x: 2,
                                y: 1
                            }
                        }), d.createElement(C.Ja, {
                            linkTo: "/settings/profile",
                            "data-a-target": "settings-dropdown-link"
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavSettings,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Settings", "UserMenuDropdown")))), d.createElement(C.Ja, {
                            "data-a-target": "dropdown-logout",
                            onClick: this.onLogoutClick
                        }, d.createElement(C.qb, {
                            color: C.K.Alt,
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            padding: {
                                x: 2,
                                y: .5
                            }
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            margin: {
                                right: 1
                            }
                        }, d.createElement(C.fb, {
                            asset: C.gb.NavLogout,
                            height: 20,
                            width: 20
                        })), d.createElement(C.Q, null, Object(u.d)("Log Out", "UserMenuDropdown"))))))))
                    }, t = c.c([Object(R.c)("UserMenuDropdown")], t)
                }(d.Component)),
                Fe = n("6qmu"),
                Me = n("3KNA"),
                Ae = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.toggleShareActivity = function() {
                            if (t.props.data && !t.props.data.error && t.props.data.currentUser) {
                                var e, n, i = !!t.props.data.currentUser.settings && !t.props.data.currentUser.settings.isSharingActivity,
                                    r = c.a({}, Object(Pe.a)({
                                        isSharingActivity: i
                                    }), {
                                        optimisticResponse: {
                                            updateIsSharingActivity: {
                                                __typename: "UpdateIsSharingActivityPayload",
                                                user: {
                                                    __typename: "User",
                                                    id: t.props.data.currentUser.id,
                                                    settings: {
                                                        isSharingActivity: i,
                                                        __typename: "UserSettings"
                                                    }
                                                }
                                            }
                                        }
                                    });
                                t.props.updateIsSharingActivity(r), e = {
                                    login: t.props.data.currentUser.login,
                                    isSharingEnabled: i
                                }, n = {
                                    login: e.login,
                                    action: e.isSharingEnabled ? fe.Enable : fe.Disable
                                }, u.n.track(v.SpadeEventType.PresenceToggle, n)
                            }
                        }, t.toggleVisibility = function(e) {
                            t.props.data && !t.props.data.error && t.props.data.currentUser && Object(_e.e)(e)
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(Le, {
                            data: this.props.data,
                            dropdownOpen: this.props.dropdownOpen,
                            toggleShareActivity: this.toggleShareActivity,
                            toggleVisibility: this.toggleVisibility,
                            changeTheme: this.props.changeTheme,
                            logout: this.props.logout,
                            theme: this.props.theme
                        })
                    }, t = c.c([Object(g.a)(Fe, {
                        skip: function(e) {
                            return !e.firstPageLoaded
                        }
                    }), Object(g.a)(Me, {
                        name: "updateIsSharingActivity"
                    }), Object(we.a)(function(e) {
                        return {
                            query: Fe,
                            topic: e.data && e.data.currentUser ? Object(Te.n)(e.data.currentUser.id) : "",
                            skip: !(e.data && !e.data.loading && !e.data.error && e.data.currentUser),
                            type: Ce.PubsubMessageType.PresenceSettings,
                            mutator: function(e, t) {
                                return t.currentUser && t.currentUser.settings && (t.currentUser.settings.visibility = e.data.availability_override.toUpperCase(), t.currentUser.settings.isSharingActivity = e.data.share_activity), t
                            }
                        }
                    })], t)
                }(d.Component);
            var Ue = Object(i.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded,
                        theme: Object(De.a)(e)
                    }
                }, function(e) {
                    return Object(a.b)({
                        changeTheme: Ie.b,
                        logout: s.g
                    }, e)
                })(Ae),
                Be = (n("ENuL"), function(e) {
                    return d.createElement(C.Ma, {
                        position: C.Wa.Relative,
                        display: C.R.Flex,
                        flexGrow: 1,
                        alignItems: C.c.Stretch,
                        fullHeight: !0,
                        className: Object(Re.c)(Ne.a.Dark)
                    }, d.createElement(C.Ma, {
                        display: C.R.Flex,
                        flexGrow: 1,
                        alignItems: C.c.Stretch,
                        fullHeight: !0
                    }, d.createElement(C.Ja, {
                        onClick: e.onMenuCardClick,
                        "data-a-target": "user-menu-toggle",
                        "data-test-selector": "user-menu-toggle"
                    }, d.createElement(C.Ma, {
                        display: C.R.Flex,
                        flexGrow: 1,
                        alignItems: C.c.Center,
                        fullHeight: !0,
                        className: "top-nav-user-menu-placeholder",
                        "data-a-target": "user-card"
                    }, d.createElement(C.Ma, {
                        display: C.R.Flex,
                        flexWrap: C.U.NoWrap,
                        alignItems: C.c.Center,
                        flexGrow: 1,
                        padding: {
                            right: 1
                        },
                        fullHeight: !0
                    }, d.createElement(C.Ma, {
                        margin: {
                            x: 1
                        }
                    }, d.createElement(C.Va, {
                        width: 30,
                        height: 30,
                        overlay: !0
                    })), d.createElement(C.Ma, {
                        flexGrow: 1,
                        display: C.R.Hide,
                        flexDirection: C.T.Column,
                        justifyContent: C.La.Center,
                        breakpointSmall: {
                            display: C.R.Flex
                        }
                    }, d.createElement(C.qb, {
                        margin: {
                            y: .5
                        }
                    }, d.createElement(C.Va, {
                        width: 80,
                        height: 4,
                        overlay: !0
                    })), d.createElement(C.Ma, null, d.createElement(C.Ma, {
                        ellipsis: !0,
                        display: C.R.Flex,
                        alignItems: C.c.Center
                    }, d.createElement(C.qb, {
                        display: C.R.InlineFlex,
                        margin: {
                            y: .5
                        }
                    }, d.createElement(C.Va, {
                        width: 40,
                        height: 4,
                        overlay: !0
                    }))))), d.createElement(C.qb, {
                        display: C.R.Flex,
                        flexShrink: 0,
                        color: C.K.Base,
                        className: "top-nav-user-menu__dropdown-arrow",
                        "data-a-target": "top-nav-dropdown-arrow"
                    }, d.createElement(C.fb, {
                        asset: C.gb.GlyphArrDown
                    })))))))
                }),
                je = n("m98o"),
                ze = (n("rF0/"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onCardClick = function() {
                            t.props.onMenuCardClick()
                        }, t.getUserStatus = function(e) {
                            var t = C.Ya.Online;
                            switch (e) {
                                case Ee.a.Idle:
                                case Ee.a.Away:
                                    t = C.Ya.Away;
                                    break;
                                case Ee.a.Busy:
                                    t = C.Ya.Busy;
                                    break;
                                case Ee.a.Invisible:
                                    t = C.Ya.Invisible;
                                    break;
                                case Ee.a.Offline:
                                    t = C.Ya.Offline;
                                    break;
                                case Ee.a.Online:
                                    t = C.Ya.Online;
                                    break;
                                default:
                                    t = C.Ya.Online
                            }
                            return t
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = this.props.data.currentUser,
                            t = e && e.profileImageURL || u.a.defaultAvatarURL,
                            n = e && e.displayName || "",
                            i = Ee.a.Offline;
                        return e && (e.availability ? i = e.availability : e.settings && e.settings.visibility && (i = e.settings.visibility)), d.createElement(C.Ma, {
                            position: C.Wa.Relative,
                            display: C.R.Flex,
                            flexGrow: 1,
                            alignItems: C.c.Stretch,
                            fullHeight: !0
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            flexGrow: 1,
                            alignItems: C.c.Stretch,
                            fullHeight: !0
                        }, d.createElement(C.Ja, {
                            onClick: this.onCardClick,
                            "data-a-target": "user-menu-toggle",
                            "data-test-selector": "user-menu-toggle"
                        }, d.createElement(C.Ma, {
                            display: C.R.Flex,
                            flexWrap: C.U.NoWrap,
                            alignItems: C.c.Center,
                            flexGrow: 1,
                            padding: {
                                right: 1
                            },
                            fullHeight: !0,
                            className: "top-nav-user-menu"
                        }, d.createElement(C.Ma, {
                            margin: {
                                x: 1
                            },
                            flexShrink: 0
                        }, d.createElement(C.Ma, {
                            className: "top-nav-user-menu__avatar-container"
                        }, d.createElement(R.a, {
                            size: 30,
                            src: t,
                            alt: Object(u.d)("User avatar", "UserMenuToggle"),
                            "data-a-target": "top-nav-avatar",
                            presenceIndicator: !0,
                            presenceStatus: this.getUserStatus(i)
                        }))), d.createElement(C.Ma, {
                            className: "top-nav-user-menu__info",
                            overflow: C.Pa.Hidden,
                            flexGrow: 1,
                            flexShrink: 1,
                            flexDirection: C.T.Column,
                            display: C.R.Hide,
                            breakpointSmall: {
                                display: C.R.Block
                            }
                        }, d.createElement(C.qb, {
                            color: C.K.Base,
                            fontSize: C.V.Size5,
                            className: "top-nav-user-menu__username",
                            "data-a-target": "user-display-name"
                        }, d.createElement(C.Q, {
                            lineHeight: C.Na.Heading
                        }, n)), d.createElement(C.qb, {
                            className: "top-nav-user-menu__status-wrapper",
                            ellipsis: !0,
                            fullWidth: !0,
                            alignItems: C.c.Center,
                            display: C.R.Flex,
                            flexWrap: C.U.NoWrap
                        }, d.createElement(C.qb, {
                            ellipsis: !0,
                            color: C.K.Alt,
                            fontSize: C.V.Size7
                        }, d.createElement(C.Q, {
                            type: C.Gb.Span,
                            noWrap: !0,
                            "data-a-target": "online-status",
                            lineHeight: C.Na.Heading
                        }, this.props.data.currentUser && d.createElement(je.a, {
                            activity: this.props.data.currentUser.activity,
                            availability: i === Ee.a.Offline ? Ee.a.Invisible : i
                        }))))), d.createElement(C.qb, {
                            display: C.R.Flex,
                            flexShrink: 0,
                            color: C.K.Base,
                            className: "top-nav-user-menu__dropdown-arrow",
                            "data-a-target": "top-nav-dropdown-arrow"
                        }, d.createElement(C.fb, {
                            asset: C.gb.GlyphArrDown
                        }))))))
                    }, t
                }(d.Component)),
                We = n("jeWT"),
                Ve = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.isSettingNewSession = !1, n.onMenuCardClick = function() {
                            n.props.data.loading && !n.props.data.currentUser || n.setState({
                                dropdownOpen: !n.state.dropdownOpen
                            })
                        }, n.onClickOut = function() {
                            n.setState({
                                dropdownOpen: !1
                            })
                        }, n.dataIsReady = function(e) {
                            return e.data && !e.data.loading && !e.data.error && e.data.currentUser
                        }, n.setUserToOffline = function() {
                            Object(_e.c)(Ee.a.Offline), Object(_e.a)()
                        }, n.setNewSession = function() {
                            return c.b(n, void 0, void 0, function() {
                                var e;
                                return c.e(this, function(t) {
                                    switch (t.label) {
                                        case 0:
                                            if (this.isSettingNewSession) return [2];
                                            this.isSettingNewSession = !0, t.label = 1;
                                        case 1:
                                            return t.trys.push([1, 3, 4, 5]), [4, Object(_e.g)()];
                                        case 2:
                                            return t.sent(), this.props.initialUserAvailabilitySet(), [3, 5];
                                        case 3:
                                            return e = t.sent(), u.j.warn("Failed to set new user availability session.", e), [3, 5];
                                        case 4:
                                            return this.isSettingNewSession = !1, [7];
                                        case 5:
                                            return [2]
                                    }
                                })
                            })
                        }, n.maybeRefetchData = function(e) {
                            var t = e.pubsub.messages.presence;
                            t && e.data.currentUser && e.data.currentUser.id && t.data.user_id === +e.data.currentUser.id && n.props.pubsub.messages.presence !== t && e.data.refetch()
                        }, n.unsubscribeFromHistory = n.props.history.listen(function() {
                            n.setState({
                                dropdownOpen: !1
                            })
                        }), n.state = {
                            dropdownOpen: !1
                        }, n
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        this.maybeRefetchData(this.props), this.props.firstPageLoaded && this.dataIsReady(this.props) && !this.props.initialUserAvailabilityIsSet && this.setNewSession(), this.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.maybeRefetchData(e), e.firstPageLoaded && this.dataIsReady(e) && !e.initialUserAvailabilityIsSet && this.setNewSession()
                    }, t.prototype.componentDidUpdate = function() {
                        this.reportInteractive()
                    }, t.prototype.componentWillUnmount = function() {
                        this.unsubscribeFromHistory(), this.setUserToOffline()
                    }, t.prototype.render = function() {
                        var e = H(Object(Re.c)(Ne.a.Dark), {
                                "top-nav-user-menu--dropdown-open": this.state.dropdownOpen
                            }),
                            t = null;
                        return t = this.props.data.loading && !this.props.data.currentUser || this.props.data.error ? d.createElement(Be, {
                            onMenuCardClick: this.onMenuCardClick
                        }) : d.createElement(ze, {
                            data: this.props.data,
                            onMenuCardClick: this.onMenuCardClick,
                            theme: this.props.theme
                        }), d.createElement(C.Ma, {
                            position: C.Wa.Relative,
                            display: C.R.Flex,
                            flexGrow: 1,
                            alignItems: C.c.Stretch,
                            fullHeight: !0
                        }, d.createElement(V.a, {
                            onClickOut: this.onClickOut,
                            className: e
                        }, t, d.createElement(Ue, {
                            dropdownOpen: this.state.dropdownOpen
                        })))
                    }, t.prototype.reportInteractive = function() {
                        this.props.data.loading || this.props.latencyTracking.reportInteractive()
                    }, t = c.c([Object(g.a)(We), Object(we.a)(function(e) {
                        return {
                            query: We,
                            topic: e.data.currentUser ? Object(Te.n)(e.data.currentUser.id) : "",
                            skip: !(e.data && !e.data.loading && !e.data.error && e.data.currentUser),
                            type: Ce.PubsubMessageType.PresenceSettings,
                            mutator: function(e, t) {
                                return t.currentUser && t.currentUser.settings && (t.currentUser.settings.visibility = e.data.availability_override.toUpperCase(), t.currentUser.settings.isSharingActivity = e.data.share_activity), t
                            }
                        }
                    }), Object(Se.a)([{
                        topic: function(e) {
                            return e.data.currentUser ? Object(Te.n)(e.data.currentUser.id) : ""
                        },
                        mapMessageTypesToProps: (He = {}, He[Ce.PubsubMessageType.Presence] = "presence", He),
                        skip: function(e) {
                            return !(e.data && !e.data.loading && !e.data.error && e.data.currentUser)
                        }
                    }]), Object(R.c)("User")], t)
                }(d.Component);
            var He, Ge = Object(i.b)(function(e) {
                    return {
                        theme: Object(De.a)(e),
                        firstPageLoaded: e.session.firstPageLoaded,
                        initialUserAvailabilityIsSet: e.session.initialUserAvailabilityIsSet
                    }
                }, function(e) {
                    return Object(a.b)({
                        changeTheme: Ie.b,
                        initialUserAvailabilitySet: Oe.g
                    }, e)
                })(Object(r.f)(Ve)),
                qe = n("9pSj"),
                Qe = n("DS6v"),
                Ke = (n("Rh8e"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.state = {
                            isError: !1,
                            isGetBitsButtonExperimentEnabled: !1
                        }, n.logger = u.o.logger.withCategory("top-nav"), n.renderBitsButton = function() {
                            return d.createElement(C.Ma, {
                                flexGrow: 0,
                                alignSelf: C.d.Center,
                                flexWrap: C.U.NoWrap,
                                flexShrink: 0,
                                margin: {
                                    x: 1
                                }
                            }, d.createElement(b.a, {
                                isInTopNav: !0,
                                channelLogin: null
                            }))
                        }, n.renderOnsiteNotifications = function() {
                            return n.props.isLoggedIn ? d.createElement(C.Ma, {
                                flexGrow: 0,
                                alignSelf: C.d.Center,
                                flexWrap: C.U.NoWrap,
                                padding: {
                                    left: .5,
                                    right: 1
                                },
                                flexShrink: 0
                            }, d.createElement(D, null)) : null
                        }, n.renderTwitchPrimeCrown = function(e) {
                            return d.createElement(C.Ma, {
                                className: "top-nav__prime",
                                flexGrow: 0,
                                flexShrink: 0,
                                padding: {
                                    x: .5
                                },
                                alignSelf: C.d.Center,
                                flexWrap: C.U.NoWrap
                            }, !e && d.createElement(qe.d, null))
                        }, n.renderStoreLink = function() {
                            var e = !1;
                            if (n.props.data) {
                                if (n.props.data.loading || n.props.data.error) return null;
                                e = !!n.props.data.currentUser && n.props.data.currentUser.hasPrime
                            }
                            return !n.props.isLoggedIn || e ? null : d.createElement(N, {
                                targetBlank: !0,
                                linkTo: k.a,
                                "data-a-target": "store-link-dropdown",
                                "data-test-selector": "store-link-dropdown",
                                title: Object(u.d)("Store", "TopNav")
                            })
                        }, n.saveEllipsisRef = function(e) {
                            return n.ellipsisMenu = e
                        }, n.onNavigationClicked = function() {
                            n.ellipsisMenu.toggleBalloon(!1)
                        }, n.renderBrowseLink = function(e) {
                            var t = e.match,
                                n = t && "following" !== t.params.subpage,
                                i = Object(u.d)("Browse", "TopNav");
                            return d.createElement(r.a, {
                                className: "top-nav__nav-link" + (n ? " active" : ""),
                                "data-a-target": "browse-link",
                                title: i,
                                to: {
                                    pathname: "/directory",
                                    state: {
                                        medium: v.PageviewMedium.TopNav,
                                        content: v.PageviewContent.Games
                                    }
                                }
                            }, i)
                        }, n.renderModsLink = function(e) {
                            if (!e.mods) return null;
                            var t = Object(u.d)("Mods", "TopNav");
                            return d.createElement(r.b, {
                                activeClassName: "active",
                                to: {
                                    pathname: "/mods",
                                    state: {
                                        medium: v.PageviewMedium.TopNav
                                    }
                                },
                                className: "top-nav__nav-link",
                                "data-a-target": "following-link",
                                title: t
                            }, t)
                        };
                        var i = u.o.experiments.getAssignment(O.j),
                            a = u.o.experiments.getAssignment(O.e);
                        return n.state = {
                            shouldSeeForYou: Object(O.p)(i) && !Object(O.o)(a),
                            isError: !1,
                            isGetBitsButtonExperimentEnabled: Object(y.a)()
                        }, n
                    }
                    return c.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            u.o.stats.recordComponentError("TopNav"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        var e = null;
                        if (this.props.isLoggedIn) {
                            var t = Object(u.d)("Following", "TopNav"),
                                n = this.props.data && this.props.data.currentUser && Object(O.q)(new Date(this.props.data.currentUser.createdAt)),
                                i = this.state.shouldSeeForYou && n ? "/directory/following/foryou" : "/directory/following";
                            e = d.createElement(r.b, {
                                activeClassName: "active",
                                to: {
                                    pathname: i,
                                    state: {
                                        medium: v.PageviewMedium.TopNav,
                                        content: v.PageviewContent.Following
                                    }
                                },
                                className: "top-nav__nav-link",
                                "data-a-target": "following-link",
                                title: t
                            }, t)
                        }
                        return d.createElement(C.Fa, {
                            position: C.Wa.Relative,
                            flexShrink: 0
                        }, d.createElement("nav", {
                            className: "top-nav",
                            "data-a-target": "top-nav-container",
                            style: {
                                height: "5rem"
                            }
                        }, d.createElement(C.Ma, {
                            className: "top-nav__menu",
                            display: C.R.Flex,
                            alignItems: C.c.Stretch,
                            flexWrap: C.U.NoWrap,
                            fullHeight: !0
                        }, d.createElement(C.Fa, {
                            display: C.R.InlineFlex,
                            alignItems: C.c.Center,
                            padding: 1,
                            flexShrink: 0
                        }, d.createElement(r.a, {
                            to: {
                                pathname: "/",
                                state: {
                                    medium: v.PageviewMedium.TopNav,
                                    content: v.PageviewContent.Logo
                                }
                            },
                            className: "top-nav__home-link",
                            "data-a-target": "home-link"
                        }, d.createElement(C.fb, {
                            asset: C.gb.LogoGlitch,
                            width: 30,
                            height: 30
                        }))), d.createElement(C.Ma, {
                            className: "top-nav__nav-items-container",
                            display: C.R.Flex,
                            alignItems: C.c.Stretch,
                            flexGrow: 1,
                            flexWrap: C.U.NoWrap,
                            flexShrink: 0
                        }, d.createElement(C.Ma, {
                            alignItems: C.c.Stretch,
                            flexWrap: C.U.NoWrap,
                            flexShrink: 0,
                            display: C.R.Flex
                        }, e, d.createElement(r.d, {
                            path: "/directory/:subpage?",
                            children: this.renderBrowseLink
                        }), d.createElement(h, null, function() {
                            return d.createElement(C.Fa, {
                                display: C.R.Hide,
                                breakpointMedium: {
                                    display: C.R.Flex
                                }
                            }, d.createElement("a", {
                                href: "https://app.twitch.tv/download",
                                "data-a-target": "get-desktop-link",
                                className: "top-nav__nav-link"
                            }, Object(u.d)("Get Desktop", "TopNav")))
                        }), d.createElement(m, null, this.renderModsLink), d.createElement(C.Ma, {
                            display: C.R.Hide,
                            breakpointSmall: {
                                display: C.R.Flex
                            }
                        }, d.createElement(ke, null), d.createElement(ge, null))), d.createElement(C.Ma, {
                            className: "top-nav__ellipsis-button",
                            display: C.R.Flex,
                            alignItems: C.c.Center
                        }, d.createElement(f.a, {
                            ref: this.saveEllipsisRef
                        }, d.createElement(C.w, {
                            icon: C.gb.NavMore,
                            overlay: !0,
                            ariaLabel: Object(u.d)("More nav items", "TopNav"),
                            "data-a-target": "ellipsis-button"
                        }), d.createElement(C.q, {
                            direction: C.r.Bottom,
                            tailOffset: 7,
                            size: C.s.Small,
                            "data-a-target": "overflow-menu"
                        }, d.createElement(C.Ma, {
                            padding: 1
                        }, d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/about",
                            "data-a-target": "about-link",
                            title: Object(u.d)("About", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/legal/ad-choices",
                            "data-a-target": "ad-choices-link",
                            title: Object(u.d)("Ad Choices", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "http://twitchadvertising.tv/",
                            "data-a-target": "advertisers-link",
                            title: Object(u.d)("Advertisers", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://blog.twitch.tv/",
                            "data-a-target": "blog-link",
                            title: Object(u.d)("Blog", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/legal/community-guidelines",
                            "data-a-target": "community-guidelines-link",
                            title: Object(u.d)("Community Guidelines", "TopNav")
                        }), d.createElement(_, null), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/cookie-policy",
                            "data-a-target": "cookie-policy-link",
                            title: Object(u.d)("Cookie Policy", "TopNav")
                        }), d.createElement(N, {
                            onClick: this.onNavigationClicked,
                            linkTo: "/directory/game/Creative",
                            "data-a-target": "creative-link",
                            title: Object(u.d)("Creative", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://dev.twitch.tv/",
                            "data-a-target": "developers-link",
                            title: Object(u.d)("Developers", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://help.twitch.tv/",
                            "data-a-target": "help-link",
                            title: Object(u.d)("Help", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/jobs",
                            "data-a-target": "jobs-link",
                            title: Object(u.d)("Jobs", "TopNav")
                        }), d.createElement(f.a, {
                            display: C.R.Block
                        }, d.createElement(N, {
                            "data-target": "language-selector-click",
                            "data-a-target": "language-selector",
                            title: Object(u.d)("Language", "TopNav")
                        }), d.createElement(C.q, {
                            size: C.s.Small,
                            direction: C.r.Right,
                            tailOffset: 270,
                            offsetY: "-263px",
                            offsetX: "20px",
                            "data-target": "language-selector",
                            "data-a-target": "language-selector-menu"
                        }, d.createElement(p.a, null))), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://music.twitch.tv/",
                            "data-a-target": "music-link",
                            title: Object(u.d)("Music", "TopNav")
                        }), this.renderStoreLink(), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/partners",
                            "data-a-target": "partners-link",
                            title: Object(u.d)("Partners", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/press",
                            "data-a-target": "press-link",
                            title: Object(u.d)("Press", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/legal/privacy-policy",
                            "data-a-target": "privacy-policy-link",
                            title: Object(u.d)("Privacy Policy", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/security",
                            "data-a-target": "security-link",
                            title: Object(u.d)("Security", "TopNav")
                        }), d.createElement(N, {
                            targetBlank: !0,
                            linkTo: "https://www.twitch.tv/p/terms-of-service",
                            "data-a-target": "terms-link",
                            title: Object(u.d)("Terms", "TopNav")
                        }))))), d.createElement(C.Ma, {
                            className: "top-nav__search",
                            display: C.R.Hide,
                            flexGrow: 1,
                            alignSelf: C.d.Center,
                            breakpointMedium: {
                                display: C.R.Block
                            }
                        }, !this.state.isError && d.createElement(ue, null))), d.createElement(C.Ma, {
                            flexGrow: 0,
                            flexShrink: 0,
                            padding: {
                                x: .5
                            },
                            alignSelf: C.d.Center,
                            flexWrap: C.U.NoWrap,
                            breakpointMedium: {
                                display: C.R.Hide
                            }
                        }, d.createElement(ue, {
                            truncated: !0
                        })), !this.state.isError && this.renderTwitchPrimeCrown(), !this.state.isError && this.renderOnsiteNotifications(), this.state.isGetBitsButtonExperimentEnabled && this.renderBitsButton(), !this.state.isError && d.createElement(C.Ma, {
                            className: "top-nav__nav-items-container",
                            display: C.R.Flex,
                            alignItems: C.c.Center,
                            flexWrap: C.U.NoWrap,
                            flexGrow: 0,
                            flexShrink: 0
                        }, this.props.isLoggedIn ? d.createElement(Ge, null) : d.createElement(pe.a, {
                            login: this.props.login,
                            signup: this.props.signup
                        })))))
                    }, t = c.c([Object(g.a)(Qe, {
                        skip: function(e) {
                            return !e.isLoggedIn
                        }
                    }), Object(R.c)("TopNav", {
                        autoReportInteractive: !0
                    })], t)
                }(d.Component));
            var Ye = Object(r.f)(Object(i.b)(function(e) {
                return {
                    isLoggedIn: Object(l.e)(e)
                }
            }, function(e) {
                return Object(a.b)({
                    login: function() {
                        return Object(s.f)(o.a.TopNavSignupButton)
                    },
                    logout: s.g,
                    signup: function() {
                        return Object(s.h)(o.a.TopNavSignupButton)
                    }
                }, e)
            })(Ke));
            n.d(t, !1, function() {
                return "5rem"
            }), n.d(t, !1, function() {
                return "9.5rem"
            }), n.d(t, "a", function() {
                return Ye
            })
        },
        Gw6o: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "GetBitsButton_Bits"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "isLoggedIn"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "withChannel"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "bitsOffers"
                            },
                            arguments: [],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "skip"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "isLoggedIn"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "bitsOffersFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "isLoggedIn"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "idSHA1"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "bitsBalance"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "bitsOffers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "bitsOffersFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "withChannel"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "cheer"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 748
                }
            };
            i.loc.source = {
                body: '# Documentation about how to use GraphQL is located in the Data Access Guide:\n# https://git-aws.internal.justin.tv/pages/twilight/twilight-docs/docs/guides/data-access.html\n# Additionally use the GraphQL explorer (https://api.twitch.tv/gql/explore) to browse\n# available GraphQL data and construct your query.\n#import "twilight/features/bits/models/bits-offers-fragment.gql"\n#import "twilight/features/chat/models/cheer-fragment.gql"\nquery GetBitsButton_Bits($isLoggedIn: Boolean! $withChannel: Boolean! $login: String!) {\nbitsOffers @skip(if: $isLoggedIn) {\n...bitsOffersFragment\n}\ncurrentUser @include(if: $isLoggedIn) {\nid\nidSHA1\nbitsBalance\nbitsOffers {\n...bitsOffersFragment\n}\n}\nuser(login: $login) @include(if: $withChannel) {\nid\n...cheer\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};

            function a(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }
            i.definitions = i.definitions.concat(a(n("hWzS").definitions)), i.definitions = i.definitions.concat(a(n("F9eG").definitions)), e.exports = i
        },
        GyWW: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Presence_WatchingClick_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "stream"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hosting"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "stream"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "game"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "name"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 158
                }
            };
            n.loc.source = {
                body: "query Presence_WatchingClick_User($login: String!) {\nuser(login: $login) {\nid\nstream {\nid\ngame {\nid\nname\n}\n}\nhosting {\nid\nstream {\nid\ngame {\nid\nname\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        GzrM: function(e, t, n) {},
        "H/lO": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Games = "game", e.Videos = "vod", e.Users = "user", e.Channels = "live_channel", e.Communities = "community"
                }(i || (i = {}))
        },
        "HAa/": function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("TSYQ"),
                o = n("17x9"),
                s = n("q1tI"),
                l = n("/7QA");
            n("vpvt");
            ! function(e) {
                e[e.Up = 0] = "Up", e[e.Down = 1] = "Down"
            }(i || (i = {}));
            var c = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        hasPendingLoadMoreRequest: !1,
                        loadedMore: !0
                    }, t.isTriggerVisible = function(e, t) {
                        var n = t.top,
                            i = t.top + t.height;
                        return !(e.bottom < n || e.top > i)
                    }, t.getOrientation = function() {
                        return void 0 === t.props.orientation ? i.Up : t.props.orientation
                    }, t.setWrapRef = function(e) {
                        return t.wrapElement = e
                    }, t.setRef = function(e) {
                        return t.element = e
                    }, t
                }
                return r.d(t, e), t.prototype.render = function() {
                    var e = this.getOrientation(),
                        t = a({
                            "scrollable-trigger__trigger-area": !0,
                            "scrollable-trigger__trigger-area--up": e === i.Up,
                            "scrollable-trigger__trigger-area--down": e === i.Down
                        }),
                        n = {
                            height: this.props.pixelThreshold || 100
                        };
                    return s.createElement("div", {
                        className: "scrollable-trigger__wrapper",
                        ref: this.setWrapRef
                    }, s.createElement("div", {
                        className: t,
                        ref: this.setRef,
                        style: n
                    }))
                }, t.prototype.componentDidMount = function() {
                    var e = this.context.registerReceiver;
                    e ? this.unregister = e(this) : l.j.warn("<InfiniteScrollTrigger /> initialized missing a <ScrollableArea /> provider")
                }, t.prototype.componentWillUnmount = function() {
                    this.unregister && this.unregister()
                }, t.prototype.componentWillReceiveProps = function(e) {
                    !this.props.enabled && e.enabled && this.context.requestVisibilityCheck && this.context.requestVisibilityCheck(this)
                }, t.prototype.checkVisible = function(e, t, n) {
                    return r.b(this, void 0, void 0, function() {
                        var t, i, a, o, s = this;
                        return r.e(this, function(r) {
                            switch (r.label) {
                                case 0:
                                    if (void 0 === n && (n = this.props.requestCap || 5), !(this.wrapElement && this.element && (this.state.loadedMore || this.props.forceLoadMoreContent) && !this.state.hasPendingLoadMoreRequest && this.props.enabled && n > 0)) return [3, 4];
                                    if (t = this.element.getBoundingClientRect(), i = this.props.contentLength, a = this.wrapElement.offsetTop, !this.isTriggerVisible(t, e)) return [3, 4];
                                    this.setState({
                                        hasPendingLoadMoreRequest: !0
                                    }), r.label = 1;
                                case 1:
                                    return r.trys.push([1, 3, , 4]), [4, this.props.loadMore()];
                                case 2:
                                    return r.sent(), this.setState({
                                        hasPendingLoadMoreRequest: !1
                                    }), requestAnimationFrame(function() {
                                        var t;
                                        s.element && (t = void 0 !== s.props.contentLength && void 0 !== i ? s.props.contentLength > i : s.wrapElement.offsetTop > a, s.setState({
                                            loadedMore: t
                                        }), n && (t || s.props.forceLoadMoreContent) && s.checkVisible(e, void 0, n - 1))
                                    }), [3, 4];
                                case 3:
                                    throw o = r.sent(), this.element && this.setState({
                                        hasPendingLoadMoreRequest: !1
                                    }), o;
                                case 4:
                                    return [2]
                            }
                        })
                    })
                }, t.contextTypes = {
                    registerReceiver: o.func,
                    requestVisibilityCheck: o.func
                }, t
            }(s.Component);
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return c
            })
        },
        HGFl: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return s
            });
            var i = n("NAv5"),
                r = {
                    RFC3399: "YYYY-MM-DDTHH:mm:ssZ",
                    timeString: "h:mma"
                };

            function a(e, t) {
                return Object(i.format)(e, t)
            }

            function o(e) {
                return Object(i.parse)(e)
            }

            function s(e, t) {
                var n = e.split(":");
                if (2 !== n.length) throw new Error("invalid time string: " + e);
                var i = parseInt(n[0], 10),
                    r = parseInt(n[1].substring(0, 2), 10),
                    a = n[1].substring(n[1].length - 2);
                if (12 === i && "am" === a && (i = 0), "pm" === a && i < 12 && (i += 12), isNaN(i) || i < 0 || i > 23 || isNaN(r) || r < 0 || r > 59) throw new Error("invalid time string: " + e);
                var o = t || new Date;
                return o.setHours(i, r), o
            }
        },
        HWwS: function(e, t, n) {},
        HkFb: function(e, t, n) {},
        HuHG: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("/MKj"),
                s = n("KxT4"),
                l = n("yR8l"),
                c = n("Ue10"),
                d = n("Xu/Q"),
                u = (n("qAOU"), "eeaCookieDismiss"),
                p = "eea-cookie-notification__link",
                m = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.content = Object(a.d)("We use cookies to personalize content and provide features, advertising, and analytics. By using our site, you consent to cookies. <x:link>Learn more</x:link>.", {
                            "x:link": function(e) {
                                return r.createElement(c.O, {
                                    key: "eea-cookie-alert",
                                    "data-a-target": p,
                                    className: "eea-cookie-alert__link",
                                    to: "https://www.twitch.tv/p/cookie-policy",
                                    targetBlank: !0
                                }, e)
                            }
                        }, "EEACookieAlert"), t.dismiss = function() {
                            a.l.set(u, !0), t.props.remove()
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentWillMount = function() {
                        this.checkForDismissedKey() && this.dismiss()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        !e.data.loading && e.data.requestInfo && !1 === e.data.requestInfo.isFromEEA && this.dismiss()
                    }, t.prototype.render = function() {
                        return this.props.data.requestInfo && this.props.data.requestInfo.isFromEEA || this.props.data.error ? r.createElement(c.Hb, {
                            onClose: this.dismiss
                        }, r.createElement(c.Ma, {
                            className: "eea-cookie-alert__body",
                            display: c.R.Flex,
                            alignItems: c.c.Center,
                            padding: 1
                        }, r.createElement(c.qb, {
                            textAlign: c.Cb.Center,
                            background: c.n.Base,
                            margin: {
                                x: "auto"
                            }
                        }, r.createElement(c.Q, {
                            type: c.Gb.Span,
                            color: c.K.Base,
                            fontSize: c.V.Size5
                        }, this.content)))) : null
                    }, t.prototype.checkForDismissedKey = function() {
                        return a.l.get(u, !1)
                    }, t
                }(r.Component),
                h = Object(l.a)(d)(m),
                f = Object(o.b)(function(e) {
                    return {
                        status: e.gdpr.status
                    }
                })(function(e) {
                    return Object(s.f)() && e.status !== s.b.BelowMinimumAge ? null : r.createElement(h, i.a({}, e))
                }),
                g = (n("bvBK"), [f]),
                v = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.logger = a.o.logger.withCategory("toast-manager"), n.state = {
                            isError: !1,
                            toastsToShow: g.map(function(e, t) {
                                return {
                                    Component: e,
                                    props: {
                                        remove: function() {
                                            return n.removeToastAtIndex(t)
                                        }
                                    }
                                }
                            })
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            a.o.stats.recordComponentError("ToastManager"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        if (this.state.isError) return null;
                        var e = this.state.toastsToShow.map(function(e, t) {
                            var n = e.Component,
                                a = e.props;
                            return r.createElement(c.Ma, {
                                key: "" + n.name + t,
                                margin: {
                                    bottom: 2
                                }
                            }, r.createElement(n, i.a({}, a)))
                        });
                        return 0 === e.length ? null : r.createElement(c.Ma, {
                            className: "toast-manager__container",
                            position: c.Wa.Fixed,
                            flexDirection: c.T.Column,
                            alignItems: c.c.Center,
                            justifyContent: c.La.Center,
                            zIndex: c.Tb.Above
                        }, e)
                    }, t.prototype.removeToastAtIndex = function(e) {
                        var t = this.state.toastsToShow.slice();
                        t.splice(e, 1), this.setState({
                            toastsToShow: t
                        })
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return v
            })
        },
        I4Vk: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });

            function i(e) {
                for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = "", i = 0; i < e; i++) n += t.charAt(Math.floor(Math.random() * t.length));
                return n
            }
        },
        I6K6: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            });
            var i = n("/7QA"),
                r = n("/0dD"),
                a = n("QzU5"),
                o = n("jZLd"),
                s = n("2xye");

            function l(e, t) {
                var n = "";
                switch (t) {
                    case o.a.TypedCommand:
                        n = "typed_command";
                        break;
                    case o.a.UserMenu:
                        n = "user_menu";
                        break;
                    default:
                        n = "user_menu"
                }
                var a = "";
                switch (e) {
                    case r.a.Dark:
                        a = "dark";
                        break;
                    case r.a.Light:
                        a = "light";
                        break;
                    default:
                        a = "light"
                }
                i.n.track(s.SpadeEventType.ThemeChange, {
                    source: n,
                    mode: a
                })
            }

            function c(e) {
                switch (e) {
                    case a.a.Archive:
                        return s.SpadeVideoBroadcastType.Archive;
                    case a.a.Highlight:
                        return s.SpadeVideoBroadcastType.Highlight;
                    case a.a.Upload:
                        return s.SpadeVideoBroadcastType.Upload;
                    case a.a.PastPremiere:
                        return s.SpadeVideoBroadcastType.PastPremiere;
                    case a.a.PremiereUpload:
                        return s.SpadeVideoBroadcastType.PremiereUpload;
                    default:
                        return e
                }
            }
        },
        I7Ho: function(e, t, n) {},
        IRYN: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FriendButton_UnfriendUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UnfriendUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "unfriendUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "friendButtonFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 211
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nmutation FriendButton_UnfriendUser($input: UnfriendUserInput!) {\nunfriendUser(input: $input) {\nuser {\nid\n...friendButtonFragment\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        IW1U: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "RecommendedFriends"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "recommendations"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "friends"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "user"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "login"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "profileImageURL"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "width"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "70"
                                                                }
                                                            }],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 136
                }
            };
            n.loc.source = {
                body: "query RecommendedFriends {\ncurrentUser {\nid\nrecommendations {\nfriends {\nuser {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        IX50: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return u
            }), n.d(t, "c", function() {
                return p
            }), n.d(t, "b", function() {
                return m
            });
            var i = n("/7QA"),
                r = n("KxT4"),
                a = n("u0aY"),
                o = n("t5Gm"),
                s = n("ClZk"),
                l = n("06uF"),
                c = n("Mn7C"),
                d = i.o.logger.withCategory("gdpr-consent-actions");

            function u() {
                var e = Object(r.e)(l.a, !0);
                return h(c.a.Given, e)
            }

            function p(e) {
                var t = c.a.Mixed;
                return Object(s.a)(e, !0) ? t = c.a.Given : Object(s.a)(e, !1) && (t = c.a.Denied), h(t, e)
            }

            function m() {
                return d.debug("resetting GDPR vendor preferences"), Object(o.a)(),
                    function(e) {
                        return e(Object(a.d)())
                    }
            }

            function h(e, t) {
                return d.debug("updating GDPR vendor preferences", t), Object(c.c)(e, t), l.d(t),
                    function(e) {
                        e(Object(a.f)(t)), e(Object(a.e)(r.b.ConsentSaved))
                    }
            }
        },
        IhyH: function(e, t, n) {},
        IrUU: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "OnsiteNotifications_ListNotifications"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "limit"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Int"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "cursor"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Cursor"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "language"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "notifications"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "limit"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "after"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "cursor"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "language"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "language"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "pageInfo"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "hasNextPage"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cursor"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "type"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "body"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "createdAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "updatedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "isRead"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "thumbnailURL"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "actions"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "body"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "type"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "url"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 311
                }
            };
            n.loc.source = {
                body: "query OnsiteNotifications_ListNotifications($limit: Int $cursor: Cursor $language: String) {\ncurrentUser {\nid\nnotifications(first: $limit after: $cursor language: $language) {\npageInfo {\nhasNextPage\n}\nedges {\ncursor\nnode {\nid\ntype\nbody\ncreatedAt\nupdatedAt\nisRead\nthumbnailURL\nactions {\nbody\ntype\nurl\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        J4y2: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("mrSG"),
                o = n("5e4V"),
                s = n("Pmew");

            function l(e, t) {
                var n = this;
                return function() {
                    return a.b(n, void 0, void 0, function() {
                        return a.e(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    return t ? [4, Object(s.c)({
                                        userID: t,
                                        preferredLanguageTag: Object(s.b)(e)
                                    })] : [3, 2];
                                case 1:
                                    n.sent(), n.label = 2;
                                case 2:
                                    return Object(o.c)(e), window.location.reload(!0), [2]
                            }
                        })
                    })
                }
            }
            var c = n("q1tI"),
                d = n("/7QA"),
                u = n("Ue10"),
                p = (n("siWu"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.renderLink = function(e) {
                            return c.createElement(u.Ja, {
                                key: e.languageCode,
                                onClick: t.handleLanguageClick,
                                "data-target": "language-selector-link",
                                "data-language": e.languageCode
                            }, c.createElement(u.Ma, {
                                padding: {
                                    y: .5,
                                    x: 1
                                },
                                "data-a-target": "language-" + e.languageCode
                            }, e.name))
                        }, t.handleLanguageClick = function(e) {
                            var n = e.currentTarget.getAttribute("data-language");
                            n && t.props.changeLanguage(n, t.props.currentUserID)
                        }, t
                    }
                    return a.d(t, e), t.prototype.render = function() {
                        var e = Math.floor(d.a.locales.length / 2);
                        return c.createElement(u.Ma, {
                            className: "language-selector",
                            display: u.R.Flex,
                            padding: {
                                y: 1
                            }
                        }, c.createElement("div", {
                            className: "language-selector__list language-selector__list--border-right"
                        }, d.a.locales.slice(0, e).map(this.renderLink)), c.createElement("div", {
                            className: "language-selector__list"
                        }, d.a.locales.slice(e).map(this.renderLink)))
                    }, t
                }(c.Component));
            var m = Object(i.b)(function(e) {
                return {
                    currentUserID: e.session.user && e.session.user.id || null
                }
            }, function(e) {
                return Object(r.b)({
                    changeLanguage: l
                }, e)
            })(p);
            n.d(t, "a", function() {
                return m
            })
        },
        J9w5: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Core_Services_Spade_Video"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 81
                }
            };
            n.loc.source = {
                body: "query Core_Services_Spade_Video($id: ID!) {\nvideo(id: $id) {\nid\nbroadcastType\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        JMwM: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("yR8l"),
                s = n("nQLi"),
                l = n("GnwI"),
                c = n("Ue10"),
                d = n("k91D"),
                u = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.handleClick = function() {
                            return n.openCheckout(), n.props.onClick && n.props.onClick()
                        }, n.openCheckout = function() {
                            n.state.hasPopupExperiment && n.props.checkoutURL && n.props.giftRecipient && window.open(Object(s.a)(n.props.checkoutURL, {
                                recipient: n.props.giftRecipient,
                                ref: "gift-subscribe-button"
                            }), "Twitch", "width=1000, height=1100, menubar, toolbar, location, personalbar, scrollbars")
                        };
                        var i = a.o.experiments.getAssignment("TWILIGHT_SUB_CHECKOUT_POPUP");
                        return n.state = {
                            hasPopupExperiment: "yes" === i
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e, t, n = !!(this.props.data && this.props.data.user && this.props.data.user.self) && this.props.data.user.self.canGift;
                        this.props.checkoutURL ? this.props.isEsportChannel ? (e = Object(a.d)("Buy All-Access Pass Gift", "GiftSubscribeButton"), t = "esports-checkout-gift-subscribe-button") : (e = Object(a.d)("Buy Gift Subscription", "GiftSubscribeButton"), t = "checkout-gift-subscribe-button") : this.props.isEsportChannel ? (e = Object(a.d)("Gift All-Access Pass", "GiftSubscribeButton"), t = "esports-gift-subscribe-button") : (e = Object(a.d)("Gift Subscription", "GiftSubscribeButton"), t = "gift-subscribe-button");
                        var i = this.props.checkoutURL && this.props.giftRecipient ? Object(s.a)(this.props.checkoutURL, {
                            recipient: this.props.giftRecipient
                        }) : "";
                        return r.createElement(c.v, {
                            targetBlank: !0,
                            disabled: !n,
                            onClick: this.handleClick,
                            linkTo: this.state.hasPopupExperiment ? void 0 : i,
                            "data-test-selector": t,
                            purchase: this.props.purchase
                        }, this.props.buttonMessage || e)
                    }, t = i.c([Object(l.c)("GiftSubscribeButton", {
                        autoReportInteractive: !0
                    }), Object(o.a)(d, {
                        options: function(e) {
                            return {
                                variables: {
                                    recipientLogin: e.giftRecipient,
                                    subProductId: e.subProductId
                                }
                            }
                        },
                        skip: function(e) {
                            return !e.giftRecipient || !e.subProductId
                        }
                    })], t)
                }(r.Component);
            n.d(t, !1, function() {
                return "gift-subscribe-button"
            }), n.d(t, !1, function() {
                return "checkout-gift-subscribe-button"
            }), n.d(t, !1, function() {
                return "esports-gift-subscribe-button"
            }), n.d(t, !1, function() {
                return "esports-checkout-gift-subscribe-button"
            }), n.d(t, "a", function() {
                return u
            })
        },
        JOxF: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "d", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "e", function() {
                return s
            }), n.d(t, "h", function() {
                return l
            }), n.d(t, "f", function() {
                return c
            }), n.d(t, "g", function() {
                return d
            });
            var i = "core.session.AUTH_INITIALIZED",
                r = "core.session.LANGUAGE_INITIALIZED",
                a = "core.session.FIRST_PAGE_LOADED",
                o = "core.session.INITIAL_AVAILABILITY_SET";

            function s(e) {
                return {
                    type: i,
                    user: e || void 0
                }
            }

            function l(e, t) {
                return {
                    type: r,
                    languageCode: e,
                    locale: t
                }
            }

            function c() {
                return {
                    type: a
                }
            }

            function d() {
                return {
                    type: o
                }
            }
        },
        JRTt: function(e, t, n) {},
        JRpg: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "PrimeSubscribe_UserPrimeData"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "platform"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "renewsAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "endsAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "paidUpgrade"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "price"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "startsAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "gift"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "isGift"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "gifter"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "displayName"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 314
                }
            };
            n.loc.source = {
                body: "query PrimeSubscribe_UserPrimeData($login: String!) {\nuser(login: $login) {\nid\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\npurchasedWithPrime\ntier\nplatform\nrenewsAt\nendsAt\npaidUpgrade {\nprice\nstartsAt\n}\ngift {\nisGift\ngifter {\nid\ndisplayName\n}\n}\n}\n}\n}\ncurrentUser {\nid\nhasPrime\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        JSR2: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FollowedChannels_RENAME2"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "limit"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Int"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "cursor"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Cursor"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "sort"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "StreamSort"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follows"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "limit"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "after"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "cursor"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cursor"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "login"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "profileImageURL"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "width"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "70"
                                                                }
                                                            }],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "stream"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "title"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "viewersCount"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "lastBroadcast"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "pageInfo"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "hasNextPage"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "followedLiveUsers"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "limit"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "sort"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "sort"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "nodes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "login"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "profileImageURL"
                                                    },
                                                    arguments: [{
                                                        kind: "Argument",
                                                        name: {
                                                            kind: "Name",
                                                            value: "width"
                                                        },
                                                        value: {
                                                            kind: "IntValue",
                                                            value: "70"
                                                        }
                                                    }],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "stream"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "title"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "viewersCount"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "game"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "name"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "type"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "lastBroadcast"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "game"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "name"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 529
                }
            };
            n.loc.source = {
                body: "query FollowedChannels_RENAME2($limit: Int $cursor: Cursor $sort: StreamSort) {\ncurrentUser {\nid\nfollows(first: $limit after: $cursor) {\nedges {\ncursor\nnode {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\nstream {\nid\ntitle\nviewersCount\ngame {\nid\nname\n}\n}\nlastBroadcast {\nid\ngame {\nid\nname\n}\n}\n}\n}\npageInfo {\nhasNextPage\n}\n}\nfollowedLiveUsers(first: $limit sort: $sort) {\nnodes {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\nstream {\nid\ntitle\nviewersCount\ngame {\nid\nname\n}\ntype\n}\nlastBroadcast {\nid\ngame {\nid\nname\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        JVUd: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("17x9"),
                a = n("q1tI"),
                o = n("/7QA");

            function s(e) {
                var t = {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0,
                        height: 0,
                        width: 0
                    },
                    n = function() {
                        if (window.innerWidth) return window.innerWidth;
                        if (document.documentElement.clientWidth) return document.documentElement.clientWidth;
                        return screen.width
                    }(),
                    i = function() {
                        if (window.innerHeight) return window.innerHeight;
                        if (document.documentElement.clientHeight) return document.documentElement.clientHeight;
                        return screen.height
                    }();
                return e.bottom <= 0 || e.top > i || e.right < 0 || e.left > n ? t : (t.top = Math.max(0, e.top), t.left = Math.max(0, e.left), t.right = Math.min(e.right, n), t.bottom = Math.min(e.bottom, i), t.width = t.right - t.left, t.height = t.bottom - t.top, t)
            }

            function l(e, t) {
                return function(n) {
                    return function(l) {
                        function c() {
                            var e = null !== l && l.apply(this, arguments) || this;
                            return e.state = {
                                hadImpression: !1,
                                didScroll: !1
                            }, e.logger = o.j.withCategory("with-impression-listener"), e.setRef = function(t) {
                                return e.element = t
                            }, e.registerImpressionCallback = function(t) {
                                e.reportImpression = t
                            }, e
                        }
                        return i.d(c, l), c.prototype.componentDidMount = function() {
                            this.scrollContext = this.context;
                            var n = this.scrollContext.registerReceiver;
                            n ? t && void 0 !== t.percentage && void 0 !== t.pixels ? this.logger.warn("<" + e + " /> should only be initialized with percentage or pixel thresholds, not both") : this.unregister = n(this) : this.logger.warn("<" + e + " /> initialized missing a <ScrollableArea /> provider")
                        }, c.prototype.componentWillUnmount = function() {
                            this.unregister && this.unregister()
                        }, c.prototype.render = function() {
                            var e = {
                                impressionListener: {
                                    hadImpression: this.state.hadImpression,
                                    didScroll: this.state.didScroll,
                                    registerImpressionCallback: this.registerImpressionCallback
                                }
                            };
                            return a.createElement("div", {
                                ref: this.setRef
                            }, a.createElement(n, i.a({}, this.props, e)))
                        }, c.prototype.checkVisible = function(e) {
                            return i.b(this, void 0, void 0, function() {
                                var t, n;
                                return i.e(this, function(i) {
                                    return this.state.hadImpression || (t = this.isVisible(e)) && (n = this.isScrolled(), this.setState({
                                        hadImpression: t,
                                        didScroll: n
                                    }), this.reportImpression && this.reportImpression(n)), [2]
                                })
                            })
                        }, c.prototype.isVisible = function(e) {
                            if (!this.element) return !1;
                            var n = s(e),
                                i = this.element.getBoundingClientRect();
                            if (i.left < n.right && i.right > n.left && i.top < n.bottom && i.bottom > n.top) {
                                if (!t || 0 === t.percentage || 0 === t.pixels) return !0;
                                var r = t.percentage,
                                    a = t.pixels,
                                    o = i.bottom - i.top,
                                    l = n.bottom - n.top,
                                    c = Math.min(n.bottom - i.top, o, l);
                                if (a) {
                                    if (o >= a) return c >= a;
                                    r = 100
                                }
                                return !r || 100 * (c / o) >= r
                            }
                            return !1
                        }, c.prototype.isScrolled = function() {
                            if (!this.scrollContext) return !1;
                            var e = this.scrollContext.getScrollContent();
                            return !(!e || 0 === e.scrollTop)
                        }, c.contextTypes = {
                            registerReceiver: r.func,
                            getScrollContent: r.func
                        }, c
                    }(a.Component)
                }
            }
            n.d(t, "a", function() {
                return l
            })
        },
        JbHs: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("ua1/");

            function r(e, t) {
                switch (e.type) {
                    case i.b.Playing:
                        return {
                            type: i.a.Playing,
                            "Symbol(id)": t,
                            __typename: "Playing",
                            game: {
                                id: e.game_id,
                                name: e.game,
                                "Symbol(id)": t + ".game",
                                __typename: "Game"
                            }
                        };
                    case i.b.Streaming:
                        var n = {
                            type: i.a.Streaming,
                            "Symbol(id)": t,
                            __typename: "Streaming",
                            stream: {
                                id: e.channel_id,
                                game: null,
                                "Symbol(id)": t + ".stream",
                                __typename: "Stream"
                            }
                        };
                        return e.game && e.game_id && (n.stream.game = {
                            id: e.game_id,
                            name: e.game,
                            "Symbol(id)": t + ".stream.game",
                            __typename: "Game"
                        }), n;
                    case i.b.Watching:
                        return {
                            type: i.a.Watching,
                            "Symbol(id)": t,
                            __typename: "Watching",
                            user: {
                                id: e.channel_id,
                                login: e.channel_login,
                                displayName: e.channel_display_name,
                                "Symbol(id)": t + ".user",
                                __typename: "User",
                                hosting: {
                                    id: e.hosted_channel_id || null,
                                    displayName: e.hosted_channel_display_name || null,
                                    login: e.hosted_channel_login || null,
                                    "Symbol(id)": t + ".user.hosting",
                                    __typename: "User"
                                }
                            }
                        };
                    default:
                        return null
                }
            }
        },
        Je81: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "OnsiteNotifications_DeleteNotification"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "DeleteNotificationInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "deleteNotification"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "notification"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 143
                }
            };
            n.loc.source = {
                body: "mutation OnsiteNotifications_DeleteNotification($input: DeleteNotificationInput!) {\ndeleteNotification(input: $input) {\nnotification {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Jpf8: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Whispers_Thread_WhisperThread"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "cursor"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Cursor"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "whisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "userLastMessageRead"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "sentAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "participants"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "chatColor"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "profileImageURL"
                                            },
                                            arguments: [{
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "width"
                                                },
                                                value: {
                                                    kind: "IntValue",
                                                    value: "70"
                                                }
                                            }],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "login"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "spamInfo"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "lastMarkedNotSpamAt"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "likelihood"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isMuted"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isArchived"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "messages"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "20"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "after"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "cursor"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cursor"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "nonce"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "content"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "content"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "emotes"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "emoteID"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "setID"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "from"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "to"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "__typename"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "__typename"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "from"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "__typename"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "sentAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "editedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "deletedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "__typename"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "__typename"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "__typename"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "unreadMessagesCount"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 565
                }
            };
            n.loc.source = {
                body: "query Whispers_Thread_WhisperThread($id: ID! $cursor: Cursor) {\nwhisperThread(id: $id) {\nid\nuserLastMessageRead {\nid\nsentAt\n__typename\n}\nparticipants {\nid\nchatColor\ndisplayName\nprofileImageURL(width: 70)\nlogin\n__typename\n}\nspamInfo {\nlastMarkedNotSpamAt\nlikelihood\n__typename\n}\nisMuted\nisArchived\nmessages(first: 20 after: $cursor) {\nedges {\ncursor\nnode {\nid\nnonce\ncontent {\ncontent\nemotes {\nid\nemoteID\nsetID\nfrom\nto\n__typename\n}\n__typename\n}\nfrom {\nid\n__typename\n}\nsentAt\neditedAt\ndeletedAt\n__typename\n}\n__typename\n}\n__typename\n}\n__typename\nunreadMessagesCount\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Jyij: function(e, t, n) {},
        KRR4: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Search_SearchLiveResultCard_UserStream"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "stream"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "previewImageURL"
                                            },
                                            arguments: [{
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "width"
                                                },
                                                value: {
                                                    kind: "IntValue",
                                                    value: "156"
                                                }
                                            }, {
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "height"
                                                },
                                                value: {
                                                    kind: "IntValue",
                                                    value: "88"
                                                }
                                            }],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 145
                }
            };
            n.loc.source = {
                body: "query Search_SearchLiveResultCard_UserStream($login: String!) {\nuser(login: $login) {\nid\nstream {\nid\npreviewImageURL(width: 156 height: 88)\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        KTpA: function(e, t, n) {
            "use strict";
            var i, r, a;
            n.d(t, "b", function() {
                    return i
                }), n.d(t, "c", function() {
                    return r
                }), n.d(t, "a", function() {
                    return a
                }),
                function(e) {
                    e.Collection = "collection"
                }(i || (i = {})),
                function(e) {
                    e.Chomment = "chomment", e.Collection = "collection"
                }(r || (r = {})),
                function(e) {
                    e.Collection = "collection", e.Chomment = "chomment"
                }(a || (a = {}))
        },
        KtNF: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                a = n("/0dD"),
                o = n("5zXJ"),
                s = n("XmgI"),
                l = n("4h+t"),
                c = n("x1M1");
            n("E0yN");

            function d(e) {
                var t, n = Object(r.d)("{bitsAmount} Bits", {
                    bitsAmount: e.count.toString()
                }, "Bits--BitsCount");
                if (e.withImage) {
                    var d = e.bitsConfig && e.bitsConfig.indexedActions[o.g];
                    d || (d = Object(l.b)());
                    var u = d.orderedTiers.find(function(t) {
                        return t.bits <= e.count
                    });
                    if (u) {
                        var p = Object(s.b)(u, void 0, e.animated);
                        return void 0 !== e.themeOverride && (e.themeOverride === a.a.Light ? p.dark = p.light : p.light = p.dark), t = i.createElement(c.a, {
                            className: "bits-count--img",
                            sources: p
                        }), i.createElement("strong", {
                            className: "bits-count",
                            "data-a-target": "bits-count"
                        }, i.createElement("span", null, t, " ", e.withText ? n : ""))
                    }
                }
                return i.createElement("strong", {
                    className: "bits-count",
                    "data-a-target": "bits-count"
                }, i.createElement("span", null, n))
            }
            n.d(t, "a", function() {
                return d
            })
        },
        KxT4: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("u0aY"),
                o = n("eLB1"),
                s = n("06uF");

            function l() {
                return {
                    status: o.a.Loading,
                    vendorPreferences: s.a
                }
            }

            function c(e, t) {
                switch (void 0 === e && (e = l()), t.type) {
                    case a.b:
                        return i.a({}, e, {
                            status: t.status
                        });
                    case a.c:
                        return i.a({}, e, {
                            vendorPreferences: t.vendorPreferences
                        });
                    case a.a:
                        return l();
                    default:
                        return e
                }
            }
            r.o.store.registerReducer("gdpr", c);
            var d = n("YUvD"),
                u = n("q1tI"),
                p = n("/MKj"),
                m = n("fvjX"),
                h = n("yR8l");

            function f() {
                return window.location.search.includes("gdpr_override")
            }
            var g = n("Mn7C"),
                v = n("GnwI"),
                b = n("5jJa"),
                y = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.updateGDPRVendorPreferences(s.b()), this.setNextGDPRStatus(this.props)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.setNextGDPRStatus(e)
                    }, t.prototype.render = function() {
                        return null
                    }, t.prototype.setNextGDPRStatus = function(e) {
                        var t = e.data.requestInfo,
                            n = o.a.Loading,
                            i = !e.data.currentUser || e.data.currentUser.isMinimumGDPRConsentAge;
                        e.data.loading || ((n = e.data.error ? o.a.Error : this.isEEAUser(t.isFromEEA) ? i ? s.c() ? o.a.ConsentSaved : o.a.ConsentRequired : o.a.BelowMinimumAge : o.a.Skip) !== e.status && (e.updateGDPRStatus(n), n === o.a.BelowMinimumAge && Object(g.b)()), e.latencyTracking.reportInteractive())
                    }, t.prototype.isEEAUser = function(e) {
                        return e || f() || window.location.search.includes("eea")
                    }, t
                }(u.Component),
                k = Object(m.d)(Object(p.b)(function(e) {
                    return {
                        status: e.gdpr.status
                    }
                }, function(e) {
                    return Object(m.b)({
                        updateGDPRStatus: a.e,
                        updateGDPRVendorPreferences: a.f
                    }, e)
                }), Object(h.a)(b), Object(v.c)("GDPRConsentManager"))(y);

            function S() {
                return f() || r.b.get("gdpr_consent_enabled", !1)
            }
            var w = n("ClZk"),
                E = n("Td8r");
            n.d(t, !1, function() {
                return l
            }), n.d(t, !1, function() {
                return c
            }), n.d(t, "i", function() {
                return d.a
            }), n.d(t, !1, function() {}), n.d(t, "a", function() {
                return k
            }), n.d(t, "f", function() {
                return S
            }), n.d(t, "g", function() {
                return w.c
            }), n.d(t, !1, function() {
                return w.d
            }), n.d(t, !1, function() {}), n.d(t, "h", function() {
                return w.e
            }), n.d(t, "e", function() {
                return w.b
            }), n.d(t, "d", function() {
                return w.a
            }), n.d(t, "b", function() {
                return o.a
            }), n.d(t, "c", function() {
                return E.a
            })
        },
        KyRl: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "SideNav_SubscribedChannels"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "limit"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Int"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "cursor"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Cursor"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "isLive"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Boolean"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscribedChannels"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "limit"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "after"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "cursor"
                                            }
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "live"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "isLive"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "pageInfo"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "hasNextPage"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cursor"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "login"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "profileImageURL"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "width"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "70"
                                                                }
                                                            }],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "broadcastSettings"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "title"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "stream"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "viewersCount"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "title"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "type"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 350
                }
            };
            n.loc.source = {
                body: "query SideNav_SubscribedChannels($limit: Int $cursor: Cursor $isLive: Boolean) {\ncurrentUser {\nid\nsubscribedChannels(first: $limit after: $cursor live: $isLive){\npageInfo{\nhasNextPage\n}\nedges {\ncursor\nnode{\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\nbroadcastSettings {\nid\ntitle\n}\nstream {\nid\nviewersCount\ntitle\ngame {\nid\nname\n}\ntype\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "L+W6": function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                a = n("W8Fi"),
                o = n("Ue10"),
                s = (n("QCUs"), function(e) {
                    var t = e.subscriptionProduct;
                    if (void 0 === t) return i.createElement("div", null);
                    var n = e.isOneTime ? Object(r.d)("{price} / One-time purchase", {
                        price: t.price
                    }, "SubDiscountPriceLabel") : Object(r.d)("{price} / Month", {
                        price: t.price
                    }, "SubDiscountPriceLabel");
                    if (e.isGift ? Object(a.c)([e.subscriptionProduct]) : Object(a.d)([e.subscriptionProduct])) {
                        var s = void 0;
                        return s = e.isGift ? Object(r.d)("{price} (Save {percent})", {
                            price: Object(a.a)(e.subscriptionProduct, e.isGift),
                            percent: Object(r.e)(Object(a.b)(e.subscriptionProduct, e.isGift) / 100, "percent")
                        }, "SubDiscountPriceLabel") : Object(r.d)("{price} for the first month (Save {percent})", {
                            price: Object(a.a)(e.subscriptionProduct, e.isGift),
                            percent: Object(r.e)(Object(a.b)(e.subscriptionProduct, e.isGift) / 100, "percent")
                        }, "SubDiscountPriceLabel"), i.createElement(o.Ma, {
                            "data-test-selector": "sub-discount-price-label__discounted"
                        }, i.createElement(o.Q, {
                            color: o.K.Alt2,
                            decoration: o.Eb.Strikethrough
                        }, n), i.createElement(o.Q, {
                            className: "sub-discount-price-label__discount-price",
                            type: o.Gb.H5,
                            bold: !0
                        }, s))
                    }
                    return i.createElement(o.Ma, {
                        "data-test-selector": "sub-discount-price-label__non-discounted"
                    }, i.createElement(o.Q, null, n))
                });
            n.d(t, !1, function() {
                return "sub-discount-price-label__discounted"
            }), n.d(t, !1, function() {
                return "sub-discount-price-label__non-discounted"
            }), n.d(t, "a", function() {
                return s
            })
        },
        L9xt: function(e, t, n) {
            "use strict";
            var i = n("hiH0");
            n.d(t, "SpadeFollowingCategory", function() {
                return i.a
            }), n.d(t, "SpadePlatform", function() {
                return i.b
            }), n.d(t, "SpadeVideoBroadcastType", function() {
                return i.c
            }), n.d(t, "TwitchDataType", function() {
                return i.d
            });
            var r = n("rnKL");
            n.d(t, "SpadeEventType", function() {
                return r.a
            });
            var a = n("QA0N");
            n.d(t, "PageviewContent", function() {
                return a.a
            }), n.d(t, "PageviewDirectoryContentType", function() {
                return a.b
            }), n.d(t, "PageviewFollowingTab", function() {
                return a.c
            }), n.d(t, "PageviewLocation", function() {
                return a.d
            }), n.d(t, "PageviewMedium", function() {
                return a.e
            });
            var o = n("yVY3");
            n.o(o, "ShareItemContext") && n.d(t, "ShareItemContext", function() {
                return o.ShareItemContext
            }), n.o(o, "ShareItemType") && n.d(t, "ShareItemType", function() {
                return o.ShareItemType
            }), n.o(o, "SourceItemType") && n.d(t, "SourceItemType", function() {
                return o.SourceItemType
            });
            var s = n("KTpA");
            n.d(t, "ShareItemContext", function() {
                return s.a
            }), n.d(t, "ShareItemType", function() {
                return s.b
            }), n.d(t, "SourceItemType", function() {
                return s.c
            })
        },
        LA8z: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                a = n("ZDlU"),
                o = n("Ue10"),
                s = function(e) {
                    var t = i.createElement(o.v, {
                        linkTo: "/directory",
                        "data-a-target": "browse-channels-button"
                    }, Object(r.d)("Browse channels", "PageNotFound"));
                    return i.createElement(a.a, {
                        message: Object(r.d)("Sorry. Unless you’ve got a time machine, that content is unavailable.", "PageNotFound")
                    }, i.createElement(o.Ma, {
                        margin: {
                            top: 2
                        }
                    }, e.children || t))
                };
            s.displayName = "PageNotFound", n.d(t, "a", function() {
                return s
            })
        },
        LGxt: function(e, t, n) {},
        LVaA: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("2F2A");
            r.o.store.registerReducer("ads", function(e, t) {
                switch (void 0 === e && (e = {
                    trackingSet: !1
                }), t.type) {
                    case a.a:
                        return i.a({}, e, {
                            trackingSet: !0
                        });
                    default:
                        return e
                }
            });
            n("YV3K"), n("kRBY"), n("XDQu")
        },
        Lf2s: function(e, t, n) {},
        Lmqf: function(e, t, n) {
            e.exports = n.p + "assets/upsell-center-dark-6c092df86238db84cff1.png"
        },
        "M/Go": function(e, t, n) {},
        MAvR: function(e, t, n) {
            "use strict";
            var i = n("gCs8");
            n.d(t, "a", function() {
                return i.a
            })
        },
        MJbm: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = (n("kxDl"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.logger = a.o.logger.withCategory("resize-detector"), t.onScroll = function() {
                            var e = t.container,
                                n = e.offsetWidth,
                                i = e.offsetHeight,
                                r = e.offsetLeft,
                                a = e.offsetTop;
                            t.logger.debug("Resize Detector -- onScroll"), n === t.width && i === t.height && a === t.top && r === t.left || (t.width = n, t.height = i, t.props.onResize(n, i, a, r)), t.reset()
                        }, t.setGrowDivRef = function(e) {
                            return t.growDiv = e
                        }, t.setGrowChildDivRef = function(e) {
                            return t.growChildDiv = e
                        }, t.setShrinkDivRef = function(e) {
                            return t.shrinkDiv = e
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement("div", {
                            className: "resize-detector"
                        }, r.createElement("div", {
                            className: "resize-detector",
                            ref: this.setGrowDivRef
                        }, r.createElement("div", {
                            className: "resize-detector__grow",
                            ref: this.setGrowChildDivRef
                        })), r.createElement("div", {
                            className: "resize-detector",
                            ref: this.setShrinkDivRef
                        }, r.createElement("div", {
                            className: "resize-detector__shrink"
                        })))
                    }, t.prototype.componentDidMount = function() {
                        if (this.growDiv) {
                            this.growDiv.parentElement || this.logger.warn("growDiv.parentElement is undefined!"), this.container = this.growDiv.parentElement.parentElement;
                            var e = this.container.style.position;
                            if ("relative" !== e && "absolute" !== e && "fixed" !== e) {
                                var t = window.getComputedStyle(this.container);
                                t && "static" === t.getPropertyValue("position") && (this.container.style.position = "relative")
                            }
                            this.onScroll(), this.growDiv.addEventListener("scroll", this.onScroll), this.shrinkDiv.addEventListener("scroll", this.onScroll)
                        } else this.logger.warn("growDiv is undefined!")
                    }, t.prototype.componentWillUnmount = function() {
                        this.growDiv.removeEventListener("scroll", this.onScroll), this.shrinkDiv.removeEventListener("scroll", this.onScroll)
                    }, t.prototype.reset = function() {
                        var e = this.growDiv,
                            t = this.shrinkDiv,
                            n = this.growChildDiv.style;
                        n.width = "100000px", n.height = "100000px", e.scrollLeft = 1e5, e.scrollTop = 1e5, t.scrollLeft = 1e5, t.scrollTop = 1e5
                    }, t
                }(r.Component));
            n.d(t, "a", function() {
                return o
            })
        },
        MPw5: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("I4Vk"),
                o = n("2xye");

            function s(e) {
                return i.b(this, void 0, void 0, function() {
                    var t;
                    return i.e(this, function(n) {
                        return t = {
                            slot_id: e.slot.getSlotElementId(),
                            service_name: e.serviceName
                        }, r.n.track(o.SpadeEventType.AdImpressionViewableEvent, t), [2]
                    })
                })
            }

            function l(e, t) {
                return i.b(this, void 0, void 0, function() {
                    return i.e(this, function(n) {
                        return r.n.track(e, t), [2]
                    })
                })
            }
            var c = n("cTNz");
            n.d(t, "a", function() {
                return p
            });
            var d = /[^A-Za-z0-9]+/g,
                u = r.o.logger.withCategory("McGill"),
                p = function() {
                    function e() {}
                    return e.polyfillGoogletag = function() {
                        window.googletag = window.googletag || {}, window.googletag.cmd = window.googletag.cmd || []
                    }, e.setAppWideTracking = function(e, t) {
                        var n = this;
                        this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            window.googletag.pubads().setTargeting(e, n.normalizeTargetingValue(t))
                        })
                    }, e.clearAppWideTracking = function(e) {
                        this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            window.googletag.pubads().clearTargeting(e)
                        })
                    }, e.createSlot = function(e, t, n, r, s, c) {
                        return i.b(this, void 0, void 0, function() {
                            var d = this;
                            return i.e(this, function(p) {
                                return u.debug("Creating slot", {
                                    div: e,
                                    adUnitPath: t,
                                    size: n,
                                    targeting: r
                                }), this.polyfillGoogletag(), [2, new Promise(function(p, m) {
                                    window.googletag.cmd.push(function() {
                                        return i.b(d, void 0, void 0, function() {
                                            var d, h = this;
                                            return i.e(this, function(i) {
                                                switch (i.label) {
                                                    case 0:
                                                        return [4, this.shouldUseAPSTag(t, c)];
                                                    case 1:
                                                        return i.sent() && window.apstag && window.apstag.fetchBids ? (d = Object(a.a)(20), l(o.SpadeEventType.DisplayAdAuction, {
                                                            nonce: d,
                                                            slotID: e,
                                                            slotName: t
                                                        }), u.debug("displayAd: fetchBids"), [2, window.apstag.fetchBids(this.apstagBidQuery(e, t, n), function(i) {
                                                            u.debug("displayAd: apstagcallback", t, e), u.debug("displayAd: bids", i);
                                                            var a = i[0] || {};
                                                            l(o.SpadeEventType.DisplayAdAuctionResponse, {
                                                                nonce: d,
                                                                slotID: e,
                                                                slotName: t,
                                                                amznbid: a.amznbid,
                                                                amzniid: a.amzniid,
                                                                amznp: a.amznp,
                                                                amznsz: a.amznsz
                                                            }), h.displayAd(e, t, n, r, s, c, p, m)
                                                        })]) : (this.displayAd(e, t, n, r, s, c, p, m), [2])
                                                }
                                            })
                                        })
                                    })
                                })]
                            })
                        })
                    }, e.shouldUseAPSTag = function(e, t) {
                        return i.b(this, void 0, void 0, function() {
                            return i.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return [4, r.o.experiments.getAssignment("TWILIGHT_AAX_DISPLAY")];
                                    case 1:
                                        return [2, "yes" === n.sent() && c.d.directory === e && !t]
                                }
                            })
                        })
                    }, e.displayAd = function(e, t, n, r, a, o, s, l) {
                        return i.b(this, void 0, void 0, function() {
                            var c, d = this;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return (c = window.googletag.defineSlot(t, n, e)) ? (c.addService(window.googletag.companionAds()), c.addService(window.googletag.pubads()), Object.keys(r).forEach(function(e) {
                                            c.setTargeting(e, d.normalizeTargetingValue(r[e]))
                                        }), [4, this.shouldUseAPSTag(t, o)]) : (l(), [2]);
                                    case 1:
                                        return i.sent() && window.apstag && window.apstag.setDisplayBids && (u.debug("displayAd: setDisplayBids"), window.apstag.setDisplayBids()), a && window.googletag.enableServices(), s(c), [2]
                                }
                            })
                        })
                    }, e.display = function(e) {
                        this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            u.debug("displayAd: render"), window.googletag.pubads().refresh(), window.googletag.display(e)
                        })
                    }, e.destroySlot = function(e) {
                        this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            window.googletag.destroySlots([e])
                        })
                    }, e.initialize = function(e) {
                        this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            window.googletag.pubads().disableInitialLoad(), window.googletag.pubads().enableSingleRequest(), window.googletag.enableServices(), [window.googletag.companionAds, window.googletag.pubads].forEach(function(t) {
                                t().addEventListener("slotRenderEnded", function(t) {
                                    e(t),
                                        function(e) {
                                            i.b(this, void 0, void 0, function() {
                                                var t;
                                                return i.e(this, function(n) {
                                                    return t = {
                                                        slot_id: e.slot.getSlotElementId(),
                                                        is_empty: e.isEmpty,
                                                        service_name: e.serviceName,
                                                        size_width: e.size && e.size[0],
                                                        size_length: e.size && e.size[1],
                                                        creative_id: e.creativeId,
                                                        line_item_id: e.lineItemId
                                                    }, r.n.track(o.SpadeEventType.AdSlotRenderEnded, t), [2]
                                                })
                                            })
                                        }(t)
                                }), t().addEventListener("impressionViewable", s)
                            })
                        })
                    }, e.setRequestPersonalizedAds = function(e) {
                        u.debug("Setting GPT personalization", e), this.polyfillGoogletag(), window.googletag.cmd.push(function() {
                            window.googletag.pubads().setRequestNonPersonalizedAds(e ? 0 : 1)
                        })
                    }, e.normalizeTargetingValue = function(e) {
                        var t = function(e) {
                            return e.replace(d, "_")
                        };
                        return "string" == typeof e ? t(e) : e.map(t)
                    }, e.apstagBidQuery = function(e, t, n) {
                        return {
                            slots: [{
                                slotID: e,
                                slotName: t,
                                sizes: n
                            }]
                        }
                    }, e
                }()
        },
        MgK0: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return d
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "g", function() {
                return f
            }), n.d(t, "e", function() {
                return g
            }), n.d(t, "j", function() {
                return v
            }), n.d(t, "f", function() {
                return b
            }), n.d(t, "d", function() {
                return y
            }), n.d(t, "c", function() {
                return k
            }), n.d(t, "i", function() {
                return S
            }), n.d(t, "h", function() {
                return w
            });
            var i = n("mrSG"),
                r = n("p46w"),
                a = n("f00E"),
                o = n("3yfl"),
                s = "auth-token",
                l = "twilight-login-state",
                c = "api_token",
                d = "twilight.",
                u = [l, "persistent", c, "_twitch_session_id", "login", "name", "twilight-auth"],
                p = 2,
                m = {
                    domain: Object(o.a)(),
                    secure: "https:" === window.location.protocol
                },
                h = i.a({}, m, {
                    expires: 365
                });

            function f(e) {
                for (var t = e.config, n = 0, i = u; n < i.length; n++) {
                    var a = i[n];
                    r.remove(a, h)
                }
                for (var o = 0, l = Object.keys(t.allAuthSettings); o < l.length; o++) {
                    var c = l[o];
                    r.remove(t.allAuthSettings[c].cookieName, h)
                }
                r.remove(s, h)
            }

            function g(e) {
                var t = e.config,
                    n = e.logger;
                return Object.keys(t.allAuthSettings).reduce(function(e, i) {
                    var a = r.get(t.allAuthSettings[i].cookieName);
                    if (!a) return e;
                    try {
                        var o = JSON.parse(a);
                        if (!o.authToken || "string" != typeof o.authToken) throw new Error('Missing or invalid "authToken" value stored in user cookie.');
                        e.push(o.authToken)
                    } catch (e) {
                        n.error(e, "Failed to load data from user cookie.", {
                            data: a
                        }), r.remove(t.allAuthSettings[i].cookieName)
                    }
                    return e
                }, [])
            }

            function v(e, t) {
                var n = t.config,
                    i = t.logger,
                    a = {
                        authToken: e.authToken,
                        displayName: e.displayName,
                        id: e.id,
                        login: e.login,
                        roles: e.roles,
                        version: p
                    };
                i.debug("Saving user cookie"), r.set(n.authSettings.cookieName, JSON.stringify(a), h), E(e.authToken, {
                    config: n,
                    logger: i
                })
            }

            function b(e) {
                var t = e.config,
                    n = e.logger,
                    i = r.get(t.authSettings.cookieName);
                if (i) try {
                    var a = JSON.parse(i);
                    if (n.debug("Found user cookie.", a), !a.authToken || "string" != typeof a.authToken) throw new Error('Missing or invalid "authToken" value stored in user cookie.');
                    if (!a.displayName || "string" != typeof a.displayName) throw new Error('Missing or invalid "displayName" value stored in user cookie.');
                    if (!a.id) throw new Error('Missing "id" value in user cookie.');
                    if ("number" == typeof a.id) n.debug('Converting numerical user cookie "id" value to string.'), a.id = String(a.id);
                    else if ("string" != typeof a.id) throw new Error('Invalid "id" value stored in user cookie.');
                    if (!a.login || "string" != typeof a.login) throw new Error('Missing or invalid "login" value stored in user cookie.');
                    if (a.version) {
                        if ("number" != typeof a.version) throw new Error('Invalid "version" value stored in user cookie.')
                    } else n.debug("Unversioned user cookie, using default."), a.version = 1;
                    return E(a.authToken, {
                        config: t,
                        logger: n
                    }), n.debug("Successfully loaded user data.", a), a
                } catch (e) {
                    n.error(e, "Failed to load data from user cookie.", {
                        data: i
                    }), r.remove(t.authSettings.cookieName)
                }
            }

            function y(e) {
                var t = e.logger;
                if (Object(o.b)()) {
                    var n = r.get(c);
                    return n || (t.info("Legacy CSRF token cookie not found, creating."), n = d + Object(a.b)(), r.set(c, n, h)), n
                }
            }

            function k(e) {
                var t = e.logger,
                    n = r.get(l);
                if (n) try {
                    return JSON.parse(n)
                } catch (e) {
                    t.withCategory("auth").error(e, "Failed to load login state from cookie.", {
                        state: n
                    }), r.remove(l)
                }
            }

            function S(e) {
                r.set(l, JSON.stringify(e), m)
            }

            function w() {
                r.remove(l, m)
            }

            function E(e, t) {
                var n = t.config,
                    i = t.logger;
                n.authSettings.primary && (r.get(s) !== e && (i.info("Primary auth token cookie out of sync, updating."), r.set(s, e, h)))
            }
        },
        Mj6i: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return s
            });
            var i = n("mrSG"),
                r = n("yR8l"),
                a = n("0FG4"),
                o = n("S4w9");

            function s() {
                return Object(r.a)(o, {
                    props: function(e) {
                        if (e.data) {
                            var t = e.data.currentUser && e.data.currentUser.emoteSets,
                                n = t && Object(a.b)(t);
                            return {
                                emoteSetsData: i.a({}, e.data, {
                                    emoteMap: n,
                                    emoteSets: t
                                })
                            }
                        }
                        return {}
                    },
                    skip: function(e) {
                        return !e.isLoggedIn
                    }
                })
            }
        },
        Mn7C: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            });
            var i, r = n("/7QA"),
                a = n("2xye"),
                o = n("kRBY");

            function s(e, t) {
                var n = Object(o.d)(r.o.store.getState()),
                    i = "";
                try {
                    i = JSON.stringify(t)
                } catch (e) {
                    r.j.withCategory("gdpr-tracking").warn("Failed constructing vendor string")
                }
                var s = {
                    consent_action: e,
                    consent_string: i,
                    user_id: n && n.id || null
                };
                r.n.track(a.SpadeEventType.GDPRConsentSet, s)
            }

            function l() {
                var e = r.o.store.getState().gdpr.vendorPreferences;
                s(i.DeniedByAge, e)
            }

            function c() {
                var e = Object(o.d)(r.o.store.getState());
                r.n.track(a.SpadeEventType.GDPRConsentBannerDisplayed, {
                    user_id: e && e.id || null
                })
            }! function(e) {
                e.Given = "consent_given", e.Denied = "consent_denied", e.DeniedByAge = "consent_denied_age", e.Mixed = "consent_mixed"
            }(i || (i = {}))
        },
        N0BP: function(e, t, n) {
            "use strict";

            function i(e) {
                for (var t = {}, n = 0, i = Object.keys(e).filter(function(e) {
                        return e.startsWith("data-")
                    }); n < i.length; n++) {
                    var r = i[n];
                    t[r] = e[r]
                }
                return t
            }
            n.d(t, "a", function() {
                return i
            })
        },
        NEdi: function(e, t, n) {},
        NKxy: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "WhisperThread_SetThreadSpamStatus"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdateWhisperThreadInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updateWhisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "thread"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "spamInfo"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "lastMarkedNotSpamAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "likelihood"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 178
                }
            };
            n.loc.source = {
                body: "mutation WhisperThread_SetThreadSpamStatus($input: UpdateWhisperThreadInput!) {\nupdateWhisperThread(input: $input) {\nthread {\nid\nspamInfo {\nlastMarkedNotSpamAt\nlikelihood\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        NM47: function(e, t, n) {},
        NMMG: function(e, t, n) {
            "use strict";

            function i(e, t) {
                return parseInt(t, 10) < parseInt(e, 10) ? t + "_" + e : e + "_" + t
            }

            function r(e, t) {
                return e.split("_").find(function(e) {
                    return e !== t
                }) || null
            }
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            })
        },
        NSwr: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                Away: "AWAY",
                Busy: "BUSY",
                Idle: "IDLE",
                Invisible: "INVISIBLE",
                Offline: "OFFLINE",
                Online: "ONLINE"
            }
        },
        NT6a: function(e, t, n) {
            "use strict";
            var i = n("D2+s"),
                r = n("EuNP");
            n.d(t, "a", function() {
                return i.b
            }), n.d(t, !1, function() {
                return r.a
            })
        },
        NZDK: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("hnrd"),
                a = n("H/lO"),
                o = n("vR4/"),
                s = n("BSTw"),
                l = {
                    games: {
                        indexName: a.a.Games,
                        hitsPerPage: 2,
                        topNumericFilters: ["popularity>1"],
                        singleTypeNumericFilters: [],
                        optionalFacetFilters: ""
                    },
                    videos: {
                        indexName: a.a.Videos,
                        hitsPerPage: 6,
                        get topNumericFilters() {
                            return ["created_at>" + function(e) {
                                if (e <= 100) return e;
                                return 100 * Math.round(e / 100)
                            }((e = new Date, e.setMonth(e.getMonth() - 1), Math.floor(e.getTime() / 1e3)))];
                            var e
                        },
                        singleTypeNumericFilters: [],
                        optionalFacetFilters: ""
                    },
                    users: {
                        indexName: a.a.Users,
                        hitsPerPage: 2,
                        topNumericFilters: ["followers>50"],
                        singleTypeNumericFilters: [],
                        optionalFacetFilters: ""
                    },
                    channels: {
                        indexName: a.a.Channels,
                        hitsPerPage: 6,
                        get topNumericFilters() {
                            return ["channel_count>10", "updated_on>" + d()]
                        },
                        get singleTypeNumericFilters() {
                            return ["updated_on>" + d()]
                        },
                        optionalFacetFilters: ""
                    },
                    communities: {
                        indexName: a.a.Communities,
                        hitsPerPage: 2,
                        topNumericFilters: [],
                        singleTypeNumericFilters: [],
                        optionalFacetFilters: ""
                    }
                },
                c = function() {
                    function e(e) {
                        this.client = r(e.appId, e.apiKey), this.stats = e.stats, this.logger = e.logger.withCategory("search-client"), this.getCountryCode(e.apolloClient)
                    }
                    return e.prototype.queryTopResults = function(e, t) {
                        return i.b(this, void 0, void 0, function() {
                            var n, r, a, o;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return r = [], (n = []).push(this.getTopResult(l.games, e)), n.push(this.getTopResult(l.videos, e)), n.push(this.getTopResult(l.users, e)), n.push(this.getTopResult(l.channels, e)), n.push(this.getTopResult(l.communities, e)), r.push(this.getTotalResult(l.games, e)), r.push(this.getTotalResult(l.videos, e)), r.push(this.getTotalResult(l.users, e)), r.push(this.getTotalResult(l.channels, e)), [4, this.query(n.concat(r))];
                                    case 1:
                                        return (a = i.sent()) ? (o = a.results, [2, {
                                            id: t,
                                            games: {
                                                totalHits: o[5].nbHits,
                                                hits: o[0].hits
                                            },
                                            videos: {
                                                totalHits: o[6].nbHits,
                                                hits: o[1].hits
                                            },
                                            users: {
                                                totalHits: o[7].nbHits,
                                                hits: o[2].hits
                                            },
                                            channels: {
                                                totalHits: o[8].nbHits,
                                                hits: o[3].hits
                                            },
                                            communities: {
                                                totalHits: o[4].nbHits,
                                                hits: o[4].hits
                                            }
                                        }]) : [2, function(e) {
                                            return {
                                                id: e,
                                                games: {
                                                    totalHits: 0,
                                                    hits: []
                                                },
                                                videos: {
                                                    totalHits: 0,
                                                    hits: []
                                                },
                                                users: {
                                                    totalHits: 0,
                                                    hits: []
                                                },
                                                channels: {
                                                    totalHits: 0,
                                                    hits: []
                                                },
                                                communities: {
                                                    totalHits: 0,
                                                    hits: []
                                                }
                                            }
                                        }(t)]
                                }
                            })
                        })
                    }, e.prototype.queryForType = function(e, t, n, r) {
                        var o = void 0 === r ? {} : r,
                            s = o.page,
                            c = void 0 === s ? 0 : s,
                            d = o.hitsPerPage,
                            u = void 0 === d ? 50 : d,
                            p = o.facetFilters,
                            m = void 0 === p ? "" : p,
                            h = o.numericFilters;
                        return i.b(this, void 0, void 0, function() {
                            var r, o, s, d, p, f, g, v = this;
                            return i.e(this, function(b) {
                                switch (b.label) {
                                    case 0:
                                        switch (r = {
                                            id: n,
                                            currentPage: c
                                        }, o = function(e) {
                                            return i.b(v, void 0, void 0, function() {
                                                var n, a;
                                                return i.e(this, function(i) {
                                                    switch (i.label) {
                                                        case 0:
                                                            return n = {
                                                                indexName: e.indexName,
                                                                query: t,
                                                                params: {
                                                                    page: c,
                                                                    hitsPerPage: u,
                                                                    numericFilters: h || e.singleTypeNumericFilters,
                                                                    facets: "*",
                                                                    facetFilters: m
                                                                }
                                                            }, [4, this.query([n])];
                                                        case 1:
                                                            return (a = i.sent()) ? (r.exhaustedHits = !a.results[0].nbHits || a.results[0].hits.length < u, [2, {
                                                                totalHits: a.results[0].nbHits,
                                                                hits: a.results[0].hits
                                                            }]) : (r.exhaustedHits = !0, [2, {
                                                                totalHits: 0,
                                                                hits: []
                                                            }])
                                                    }
                                                })
                                            })
                                        }, e) {
                                            case a.a.Games:
                                                return [3, 1];
                                            case a.a.Users:
                                                return [3, 3];
                                            case a.a.Channels:
                                                return [3, 5];
                                            case a.a.Videos:
                                                return [3, 7];
                                            case a.a.Communities:
                                                return [3, 9]
                                        }
                                        return [3, 11];
                                    case 1:
                                        return s = r, [4, o(l.games)];
                                    case 2:
                                        return s.games = b.sent(), [3, 12];
                                    case 3:
                                        return d = r, [4, o(l.users)];
                                    case 4:
                                        return d.users = b.sent(), [3, 12];
                                    case 5:
                                        return p = r, [4, o(l.channels)];
                                    case 6:
                                        return p.channels = b.sent(), [3, 12];
                                    case 7:
                                        return f = r, [4, o(l.videos)];
                                    case 8:
                                        return f.videos = b.sent(), [3, 12];
                                    case 9:
                                        return g = r, [4, o(l.communities)];
                                    case 10:
                                        return g.communities = b.sent(), [3, 12];
                                    case 11:
                                        return [2, null];
                                    case 12:
                                        return [2, r]
                                }
                            })
                        })
                    }, e.prototype.queryVideos = function(e, t, n) {
                        return i.b(this, void 0, void 0, function() {
                            var r, s, l, c;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        switch (r = a.a.Videos, s = [], n.length) {
                                            case o.a.Short:
                                                s.push("length<=900");
                                                break;
                                            case o.a.Long:
                                                s.push("length>900")
                                        }
                                        switch (l = {
                                            indexName: r,
                                            query: e,
                                            params: {
                                                page: 0,
                                                hitsPerPage: 50,
                                                numericFilters: s,
                                                facets: "*",
                                                facetFilters: ""
                                            }
                                        }, n.type) {
                                            case o.b.PastBroadcasts:
                                                l.params.facetFilters = "broadcast_type:archive";
                                                break;
                                            case o.b.Uploads:
                                                l.params.facetFilters = "broadcast_type:upload";
                                                break;
                                            case o.b.Highlights:
                                                l.params.facetFilters = "broadcast_type:highlight"
                                        }
                                        return [4, this.query([l])];
                                    case 1:
                                        return (c = i.sent()) ? [2, {
                                            id: t,
                                            totalHits: c.results[0].nbHits,
                                            hits: c.results[0].hits
                                        }] : [2, {
                                            id: t,
                                            totalHits: 0,
                                            hits: []
                                        }]
                                }
                            })
                        })
                    }, e.prototype.getCountryCode = function(e) {
                        var t = this;
                        e.query({
                            query: s
                        }).then(function(e) {
                            t.countryCode = e.data.requestInfo.countryCode
                        }).catch(function(e) {
                            t.logger.error(e, "Failed to get country code")
                        })
                    }, e.prototype.getTopResult = function(e, t) {
                        return {
                            indexName: e.indexName,
                            query: t,
                            params: {
                                page: 0,
                                hitsPerPage: e.hitsPerPage,
                                numericFilters: e.topNumericFilters
                            }
                        }
                    }, e.prototype.getTotalResult = function(e, t) {
                        return {
                            indexName: e.indexName,
                            query: t,
                            params: {
                                hitsPerPage: 0,
                                numericFilters: e.singleTypeNumericFilters
                            }
                        }
                    }, e.prototype.query = function(e) {
                        return i.b(this, void 0, void 0, function() {
                            var t, n, r, a;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        n = Date.now(), a = !1, i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, , 4]), [4, this.client.search(e)];
                                    case 2:
                                        return t = i.sent(), [3, 4];
                                    case 3:
                                        return i.sent(), a = !0, t = null, [3, 4];
                                    case 4:
                                        return r = Date.now(), this.countryCode && (a ? this.stats.recordSearchError(this.countryCode, r - n) : this.stats.recordSearchSuccess(this.countryCode, r - n)), [2, t]
                                }
                            })
                        })
                    }, e
                }();

            function d() {
                return Math.floor(((new Date).getTime() - 6e5) / 1e3)
            }
        },
        NdhY: function(e, t, n) {
            "use strict";
            var i = n("uhBA"),
                r = function() {
                    function e(e, t, n) {
                        this.sniffers = e, this.trackFunc = t, this.filterFunc = n, this.startCalled = !1
                    }
                    return e.prototype.start = function() {
                        return !this.startCalled && (this.startCalled = !0, this.sniffers.forEach(this.processSniffer.bind(this)), !0)
                    }, e.prototype.flush = function() {
                        this.sniffers.forEach(function(e) {
                            return e.getAvailableResourceTimings()
                        })
                    }, e.prototype.processSniffer = function(e) {
                        var t = e.frameURL,
                            n = e.getFrameTiming(),
                            i = n.navigationStart;
                        this.processFrameTiming(t, n), e.addResourceListener(this.processResourceTiming.bind(this, i)), e.getAvailableResourceTimings().forEach(this.processResourceTiming.bind(this, i))
                    }, e.prototype.processFrameTiming = function(e, t) {
                        if (this.shouldSend(e)) {
                            var n = this.createFrameNetworkEventData(e, t);
                            this.trackFunc(n)
                        }
                    }, e.prototype.processResourceTiming = function(e, t) {
                        if (this.shouldSend(t.name)) {
                            var n = this.createResourceNetworkEventData(e, t);
                            this.trackFunc(n)
                        }
                    }, e.prototype.shouldSend = function(e) {
                        return !this.filterFunc || this.filterFunc(e)
                    }, e.prototype.createFrameNetworkEventData = function(e, t) {
                        return {
                            type: "frame",
                            request_url: e,
                            start_time: t.navigationStart,
                            duration: Math.round(t.responseEnd - t.fetchStart),
                            dns_duration: this.computeDuration(t.domainLookupStart, t.domainLookupEnd),
                            connect_duration: this.computeDuration(t.connectStart, t.connectEnd),
                            request_duration: this.computeDuration(t.requestStart, t.responseStart),
                            response_duration: this.computeDuration(t.responseStart, t.responseEnd),
                            redirect_duration: this.computeDuration(t.redirectStart, t.redirectEnd)
                        }
                    }, e.prototype.createResourceNetworkEventData = function(e, t) {
                        return {
                            type: "resource",
                            request_url: t.name,
                            start_time: e + t.startTime,
                            duration: Math.round(t.duration),
                            dns_duration: this.computeDuration(t.domainLookupStart, t.domainLookupEnd),
                            connect_duration: this.computeDuration(t.connectStart, t.connectEnd),
                            request_duration: this.computeDuration(t.requestStart, t.responseStart),
                            response_duration: this.computeDuration(t.responseStart, t.responseEnd),
                            redirect_duration: this.computeDuration(t.redirectStart, t.redirectEnd),
                            transfer_size: t.transferSize,
                            decoded_size: t.decodedBodySize
                        }
                    }, e.prototype.computeDuration = function(e, t) {
                        return e > 0 && t > 0 ? t - e : void 0
                    }, e
                }(),
                a = "resource";

            function o(e) {
                return !!(e && e.timing && e.getEntriesByType && e.setResourceTimingBufferSize && e.clearResourceTimings)
            }
            var s = function() {
                    function e(e, t, n) {
                        var r = this;
                        this.performance = t, this.frameURL = n, this.startCalled = !1, this.eventEmitter = new i.EventEmitter, this.emitterName = "network-sniffer", this.processNewResourceTimings = function() {
                            var e = r.performance.getEntriesByType(a);
                            if (0 !== e.length) {
                                for (var t = 0, n = e; t < n.length; t++) {
                                    var i = n[t];
                                    r.fireResourceListeners(i)
                                }
                                r.clearResourceBuffer()
                            }
                        }, this.logger = e.withCategory("network-sniffer"), o(t) ? this.logger.debug("Created") : this.logger.warn("No sniffing allowed!")
                    }
                    return e.prototype.start = function() {
                        return !this.startCalled && (this.startCalled = !0, this.setResourceBufferSize(), setInterval(this.processNewResourceTimings, 500), !0)
                    }, e.prototype.getFrameTiming = function() {
                        return this.performance.timing
                    }, e.prototype.getAvailableResourceTimings = function() {
                        return this.processNewResourceTimings(), this.performance.getEntriesByType(a)
                    }, e.prototype.addResourceListener = function(e) {
                        this.eventEmitter.addListener(this.emitterName, e)
                    }, e.prototype.removeResourceListener = function(e) {
                        this.eventEmitter.removeListener(this.emitterName, e)
                    }, e.prototype.setResourceBufferSize = function() {
                        this.performance.setResourceTimingBufferSize(1e3)
                    }, e.prototype.clearResourceBuffer = function() {
                        this.performance.clearResourceTimings(), this.setResourceBufferSize()
                    }, e.prototype.fireResourceListeners = function(e) {
                        this.eventEmitter.emit(this.emitterName, e)
                    }, e
                }(),
                l = function() {
                    function e(e) {
                        var t = this;
                        this.buffer = [], this.eventEmitter = new i.EventEmitter, this.emitterName = "network-metrics", this.loggedHostWarnings = {}, this.shouldLogHosts = function(e) {
                            return function(n) {
                                var i = new URL(n),
                                    r = i.hostname,
                                    a = r.split(".");
                                a.length > 2 && (r = a[a.length - 2] + "." + a[a.length - 1]);
                                var o = e.some(function(e) {
                                    return 0 === r.indexOf(e)
                                });
                                return o || t.loggedHostWarnings[r] || (t.loggedHostWarnings[r] = !0, t.logger.debug("Request not in whitelist", {
                                    urlHost: r,
                                    url: i
                                })), o
                            }
                        }, this.onRequestCompleted = function(e) {
                            if (t.eventEmitter.listeners(t.emitterName, !0)) {
                                if (t.buffer.length > 0) {
                                    for (var n = 0, i = t.buffer; n < i.length; n++) {
                                        var r = i[n];
                                        t.eventEmitter.emit(t.emitterName, r)
                                    }
                                    t.buffer = []
                                }
                                t.eventEmitter.emit(t.emitterName, e)
                            } else t.buffer.push(e)
                        }, this.logger = e.logger.withCategory("network monitoring"), this.window = e.window;
                        var n = this.createSniffers();
                        n.map(function(e) {
                            t.logger.debug("Starting network sniffer"), e.start()
                        }), this.networkLogger = new r(n, this.onRequestCompleted, this.shouldLogHosts(e.config.networkLoggingHostNames)), this.logger.debug("Starting network logger"), this.networkLogger.start()
                    }
                    return e.prototype.flush = function() {
                        this.networkLogger.flush()
                    }, e.prototype.subscribeToUpdates = function(e) {
                        this.eventEmitter.addListener(this.emitterName, e)
                    }, e.prototype.removeQueryMetricsListener = function(e) {
                        this.eventEmitter.removeListener(this.emitterName, e)
                    }, e.prototype.createSniffers = function() {
                        var e = [];
                        this.canAccessPerformance(this.window) && ((n = this.createSniffer(this.window)) && (this.logger.debug("Creating network sniffer for main window"), e.push(n)));
                        for (var t = 0; t < this.window.frames.length; t++) {
                            var n;
                            if (this.canAccessFrame(t) && this.canAccessPerformance(this.window.frames[t].window))(n = this.createSniffer(this.window.frames[t].window)) && (this.logger.debug("Creating network sniffer for frame", t), e.push(n))
                        }
                        return e
                    }, e.prototype.canAccessFrame = function(e) {
                        try {
                            return !!this.window.frames[e].window
                        } catch (t) {
                            return this.logger.warn("Can't access frame", {
                                index: e,
                                err: t
                            }), !1
                        }
                    }, e.prototype.canAccessPerformance = function(e) {
                        try {
                            return o(e.performance)
                        } catch (e) {
                            return this.logger.warn("Unable to determine if network sniffing is allowed", e), !1
                        }
                    }, e.prototype.createSniffer = function(e) {
                        try {
                            return new s(this.logger, e.performance, e.location.href)
                        } catch (e) {
                            this.logger.warn("Unable to create network sniffer", e)
                        }
                    }, e
                }(),
                c = n("mrSG"),
                d = n("JOxF"),
                u = n("kz7j"),
                p = n("DiGQ"),
                m = n("NvVO"),
                h = function() {
                    function e(t, n) {
                        var i = this;
                        if (this.componentDuration = {
                                latencyStatus: p.a.Unknown
                            }, this.isRoot = !1, this.hasReportedInteractive = !1, this.customEvents = {}, this.hasSentInitializing = !1, this.hasSentInteractive = !1, this.getHasReportedInteractive = function() {
                                return i.hasReportedInteractive
                            }, this.setLocation = function(e) {
                                i.root.setLocation(e)
                            }, this.sendInitializingEvent = function(e, t, n) {
                                i.hasSentInitializing || (i.tracker.trackInitialize(e, t, n, i.componentName, i.relativeStartTime, i.id.toString(), i.startTimestamp, i.isPrePageLoad, i.root && i.root.hasLostVisibility, i.parent && i.parent.id.toString()), i.hasSentInitializing = !0)
                            }, this.sendInteractiveEvent = function(e, t, n) {
                                !i.hasSentInteractive && i.componentDuration.value && (i.tracker.trackInteractive(e, t, n, i.componentName, i.relativeStartTime, i.id.toString(), i.completedTimestamp, i.componentDuration.value, i.isPrePageLoad, i.root && i.root.hasLostVisibility, i.parent && i.parent.id.toString(), i.parent && i.parent.componentName), i.hasSentInteractive = !0)
                            }, this.shouldWarnChild = function() {
                                return i.getCurrentTimestamp() - i.completedTimestamp < 500
                            }, this.id = e.counter++, this.componentName = t, this.parent = n && n.parent, this.children = [], this.parent ? (this.tracker = this.parent.tracker, this.root = this.parent.root || this.parent, this.depth = this.parent.depth + 1, this.parent.registerChild(this)) : this.depth = 0, this.logger = n.logger, this.isPageComponent = this.componentName.endsWith("Page"), this.isPrePageLoad = this.isRoot || this.root && !this.root.completedTimestamp, this.isPageComponent) {
                            var r = n && n.destination;
                            r || (this.logger.error(new Error("The " + this.componentName + " component must supply a canonical destination, ex: directory.index"), "Invalid withLatencyTracking options"), r = m.a.Unknown), this.logger.debug("Set root page to: " + r), this.root && this.root.setPage(this, r)
                        }
                        n && n.destination && !this.isPageComponent && this.logger.error(new Error("The " + this.componentName + ' component supplied a destination but the component name does not end in "Page".'), "Invalid withLatencyTracking options"), this.resetStartTime(), this.raiseUpdate(), this.logger.debug("Latency tracker created")
                    }
                    return e.prototype.reset = function(e) {
                        void 0 === e && (e = !0), this.completedTimestamp && (e && (this.children = [], this.hasReportedInteractive = !1), this.resetStartTime(), this.parent && this.parent.childReset(this), this.logger.debug(this.componentName + " reset", {
                            children: this.children
                        }), this.raiseUpdate())
                    }, e.prototype.resetChildren = function() {
                        if (this.children && this.children.length)
                            for (var e = 0, t = this.children; e < t.length; e++) {
                                t[e].resetChildren()
                            }
                        this.children = []
                    }, e.prototype.reportInteractive = function(e) {
                        this.hasReportedInteractive ? this.logger.debug("Already reported interactive") : (this.hasReportedInteractive = !0, this.logger.debug(this.componentName + " reported interactive", {
                            expectedChildCount: e,
                            children: this.getChildNames()
                        }), e && (this.expectedChildCount = e), this.checkChildCompleted())
                    }, e.prototype.unregister = function() {
                        this.hasReportedInteractive || (this.parent ? (this.parent.unregisterChild(this), this.logger.debug("Unregistering component which has not reported interactive yet", {
                            component: this.componentName
                        })) : this.logger.debug("Attempted to unregister a parent-less component. This is a no-op.", {
                            component: this.componentName
                        }))
                    }, e.prototype.resetCustomEvents = function(e) {
                        this.root.customEvents[e] = []
                    }, e.prototype.registerCustomEvent = function(e) {
                        var t, n = !1;
                        switch (e.start) {
                            case u.d.Registration:
                                t = this.getCurrentTimestamp();
                                break;
                            default:
                                this.root.customEvents[e.group] && this.root.customEvents[e.group].find(function(t) {
                                    return t.key === e.key
                                }) && (n = !0, this.logger.warn("Registered a custom event timed from navigation start, that was previously registered. Reporting this event will be a no-op.", {
                                    customEventOptions: e
                                })), t = this.getRootInitTimestamp()
                        }
                        var i = c.a({}, e, {
                            doNotTrack: n,
                            duration: {
                                latencyStatus: p.a.Unknown
                            },
                            startTime: t
                        });
                        return this.logger.debug("[" + e.group + "][" + e.label + "] Event registered", {
                            customEvent: i
                        }), n || (this.root.customEvents[e.group] || (this.root.customEvents[e.group] = []), this.root.customEvents[e.group].push(i)), this.raiseUpdate(), i
                    }, e.prototype.reportCustomEvent = function(e) {
                        if (!(e.duration && e.duration.value || e.doNotTrack)) {
                            var t = Math.round(this.getCurrentTimestamp() - e.startTime),
                                n = t <= e.benchmark ? p.a.Pass : p.a.Fail;
                            e.duration.value = t, e.duration.latencyStatus = n, this.logger.debug("[" + e.group + "][" + e.label + "] Event reported", {
                                customEvent: e
                            }), this.raiseUpdate(), this.root.sendCustomEventToSpade(e)
                        }
                    }, e.prototype.createChild = function(t, n) {
                        return new e(t, {
                            destination: n,
                            parent: this,
                            logger: this.logger.withCategory(t)
                        })
                    }, e.prototype.sendBenchmarkEventsToSpade = function() {
                        if (this.root) {
                            var e = this.root.getLocation(),
                                t = this.root.getDestination(),
                                n = this.root.getPageComponentName();
                            if (t && e && n) {
                                this.sendInitializingEvent(t, e, n), this.sendInteractiveEvent(t, e, n);
                                for (var i = 0, r = this.children; i < r.length; i++) {
                                    r[i].sendBenchmarkEventsToSpade()
                                }
                            }
                        }
                    }, e.prototype.raiseUpdate = function() {
                        this.root && this.root.raiseUpdate()
                    }, e.prototype.markCompleted = function() {
                        if (!this.completedTimestamp) {
                            this.completedTimestamp = this.getCurrentTimestamp();
                            var e = Math.round(this.completedTimestamp - this.startTimestamp);
                            this.componentDuration = {
                                value: e,
                                latencyStatus: p.a.Unknown
                            }, this.logger.debug("Done", {
                                componantName: this.componentName,
                                durationMs: this.componentDuration.value
                            }), this.parent && this.parent.childCompleted(this), this.raiseUpdate()
                        }
                    }, e.prototype.checkChildCompleted = function() {
                        var e = this.expectedChildCount ? this.expectedChildCount : this.children.length;
                        this.children.filter(function(e) {
                            return e.completedTimestamp
                        }).length >= e && (this.logger.debug("All children completed", {
                            componentName: this.componentName,
                            expectedChildCount: e,
                            children: this.getChildNames()
                        }), this.markCompleted())
                    }, e.prototype.registerChild = function(e) {
                        if (this.completedTimestamp) {
                            if (this.root && this.root.completedTimestamp) return void(this.shouldWarnChild() && this.logger.warn("Child attempted to register itself, but parent is already completed", {
                                child: e.componentName,
                                parent: this.componentName
                            }));
                            this.reset(!1)
                        }
                        this.root.resetFirstPageLoadedFailsafe(), this.children.push(e)
                    }, e.prototype.unregisterChild = function(e) {
                        var t = this.children.indexOf(e);
                        t > -1 ? (this.children.splice(t, 1), this.expectedChildCount && this.expectedChildCount--) : this.logger.warn("Child attempted to unregister itself, but was not registered", {
                            child: e.componentName,
                            parent: this.componentName
                        }), this.hasReportedInteractive && this.checkChildCompleted()
                    }, e.prototype.getChildNames = function() {
                        return this.children.map(function(e) {
                            return e.componentName
                        })
                    }, e.prototype.getRootInitTimestamp = function() {
                        return this.root.startTimestamp
                    }, e.prototype.getNavigationStartTimestamp = function() {
                        return this.root ? this.root.navigationStart : Date.now()
                    }, e.prototype.getCurrentTimestamp = function() {
                        return performance.timing.navigationStart + performance.now()
                    }, e.prototype.getRelativeStartTimestamp = function() {
                        return Math.round(this.startTimestamp - this.getNavigationStartTimestamp())
                    }, e.prototype.resetStartTime = function() {
                        var e = this.getCurrentTimestamp();
                        this.startTimestamp = e, this.relativeStartTime = this.getRelativeStartTimestamp(), this.completedTimestamp = 0, this.componentDuration = {
                            value: void 0,
                            latencyStatus: p.a.Unknown
                        }
                    }, e.prototype.childReset = function(e) {
                        this.children.includes(e) || this.children.push(e), this.completedTimestamp ? this.logger.warn("Child component reset after this one completed", {
                            child: e.componentName
                        }) : this.logger.debug("Child component reset", {
                            child: e.componentName
                        })
                    }, e.prototype.childCompleted = function(e) {
                        this.completedTimestamp ? this.shouldWarnChild() && this.logger.warn("Child attempted to report completed, but parent is already completed", {
                            child: e.componentName,
                            parent: this.componentName
                        }) : (this.logger.debug(this.componentName + " child " + e.componentName + " completed", {
                            children: this.getChildNames()
                        }), this.hasReportedInteractive && this.checkChildCompleted())
                    }, e.counter = 1, e
                }(),
                f = n("2xye"),
                g = function() {
                    function e(e, t) {
                        this.tracking = e, this.logger = t.withCategory("tracker"), this.logger.debug("Created")
                    }
                    return e.prototype.trackNetworkRequestEvent = function(e, t, n, i, r, a) {
                        a.request_url !== this.tracking.getEndpoint() ? this.tracking.trackBenchmark(f.SpadeEventType.NetworkRequest, c.a({
                            is_pre_pageload: i,
                            destination: e,
                            location: t,
                            page_component_name: n,
                            client_time: a.start_time / 1e3,
                            relative_start_time: r
                        }, a)) : this.logger.debug("Skipping Spade network request.")
                    }, e.prototype.trackCompleteTransition = function(e, t, n, i, r, a, o) {
                        this.tracking.trackBenchmark(f.SpadeEventType.CompleteTransition, {
                            client_time: i / 1e3,
                            lost_visibility: o,
                            destination: e,
                            location: t,
                            page_component_name: n,
                            is_app_launch: a,
                            time_from_fetch: r
                        })
                    }, e.prototype.trackCustomEvent = function(e, t, n, i, r) {
                        this.tracking.trackCustomEventBenchmark({
                            benchmark: e.benchmark,
                            destination: i,
                            duration: Math.round(e.duration && e.duration.value || 0),
                            group: e.group,
                            is_app_launch: t,
                            key: e.key,
                            label: e.label,
                            lost_visibility: n,
                            page_component_name: r
                        })
                    }, e.prototype.trackAppBooted = function(e, t, n, i, r, a) {
                        this.tracking.trackBenchmark(f.SpadeEventType.AppBooted, {
                            client_time: i / 1e3,
                            lost_visibility: a,
                            destination: e,
                            location: t,
                            page_component_name: n,
                            time_from_fetch: r
                        })
                    }, e.prototype.trackInitialize = function(e, t, n, i, r, a, o, s, l, c) {
                        this.tracking.trackBenchmark(f.SpadeEventType.ComponentInitializing, {
                            destination: e,
                            location: t,
                            page_component_name: n,
                            component: i,
                            component_id: a,
                            parent_component_id: c,
                            client_time: o / 1e3,
                            lost_visibility: l,
                            is_pre_pageload: s,
                            relative_start_time: r
                        })
                    }, e.prototype.trackInteractive = function(e, t, n, i, r, a, o, s, l, c, d, u) {
                        this.tracking.trackBenchmark(f.SpadeEventType.ComponentInteractive, {
                            destination: e,
                            location: t,
                            page_component_name: n,
                            component: i,
                            component_id: a,
                            parent_component_id: d,
                            parent_component: u,
                            client_time: o / 1e3,
                            time_from_initializing: s / 1e3,
                            duration: s,
                            lost_visibility: c,
                            relative_start_time: r,
                            is_pre_pageload: l
                        })
                    }, e.prototype.trackFetchStart = function(e, t, n, i, r) {
                        this.tracking.trackBenchmark(f.SpadeEventType.FetchStart, {
                            destination: e,
                            location: t,
                            page_component_name: n,
                            client_time: i / 1e3,
                            lost_visibility: r
                        })
                    }, e.prototype.trackApiQuery = function(e, t, n, i, r, a, o, s, l) {
                        this.tracking.trackApiQueryBenchmark({
                            destination: e,
                            location: t,
                            client_time: i / 1e3,
                            page_component_name: r,
                            query_name: a,
                            is_pre_pageload: l,
                            execution_time: o,
                            request_time: s,
                            relative_start_time: n
                        })
                    }, e
                }(),
                v = "first_page_loaded_timeout",
                b = function(e) {
                    function t(t) {
                        var n = e.call(this, "Root", {
                            logger: t.logger.withCategory("latency-tracker")
                        }) || this;
                        if (n.rootInitDuration = {
                                latencyStatus: p.a.Unknown
                            }, n.firstPaint = {
                                latencyStatus: p.a.Unknown
                            }, n.pageLoadDuration = {
                                latencyStatus: p.a.Unknown
                            }, n.networkEvents = [], n.queryBatchMetrics = [], n.queryEvents = [], n.isFirstLoad = !0, n.isRoot = !0, n.hasLostVisibility = !1, n.emitter = new i.EventEmitter, n.hasDispatchedFirstPageLoaded = !1, n.firstPageLoadedFailsafe = 0, n.firstPageLoadedTimeout = 1e4, n.getLocation = function() {
                                return n.location
                            }, n.setLocation = function(e) {
                                n.logger.debug("Updating location", {
                                    location: e
                                }), n.location = e, n.sendBenchmarkEventsToSpade()
                            }, n.getDestination = function() {
                                return n.destination
                            }, n.getPageComponentName = function() {
                                return n.page && n.page.componentName
                            }, n.setPage = function(e, t) {
                                n.page = e, n.destination = t, n.sentinel.setPageComponentName(e.componentName)
                            }, n.sendCustomEventToSpade = function(e) {
                                n.componentEventsEnabled && n.tracker.trackCustomEvent(e, n.isFirstLoad, n.hasLostVisibility, n.destination, n.getPageComponentName())
                            }, n.addPageLoadFailedListener = function(e) {
                                n.emitter.addListener("firstPageLoadFailed", e)
                            }, n.removePageLoadFailedListener = function(e) {
                                n.emitter.removeListener("firstPageLoadFailed", e)
                            }, n.sendAllEvents = function() {
                                n.networkMonitor && (n.networkMonitor.flush(), n.doReconcileQueries(!0)), n.sendBenchmarkEventsToSpade(), n.sendNetworkRequestsToSpade()
                            }, n.sendFetchStartEvent = function(e, t, i) {
                                n.isFirstLoad && !n.hasSentFetchStart && (n.tracker.trackFetchStart(e, t, i, performance.timing.fetchStart, n.hasLostVisibility), n.hasSentFetchStart = !0)
                            }, n.sendCompleteTransitionEvent = function(e, t, i) {
                                !n.hasSentCompleteTransition && n.pageLoadDuration.value && (n.tracker.trackCompleteTransition(e, t, i, n.completedTimestamp, n.pageLoadDuration.value, n.isFirstLoad, n.hasLostVisibility), n.hasSentCompleteTransition = !0)
                            }, n.sendAppBootedEvent = function(e, t, i) {
                                if (n.isFirstLoad && !n.hasSentAppBooted && n.rootInitDuration.value) {
                                    n.tracker.trackAppBooted(e, t, i, n.startTimestamp, n.rootInitDuration.value, n.hasLostVisibility);
                                    try {
                                        var r = performance.getEntriesByType("paint").find(function(e) {
                                            return "first-contentful-paint" === e.name
                                        });
                                        r && (n.firstPaint.value = r.startTime, r.startTime > 250 ? n.firstPaint.latencyStatus = p.a.Fail : n.firstPaint.latencyStatus = p.a.Pass, n.tracker.trackCustomEvent({
                                            benchmark: 250,
                                            duration: n.firstPaint,
                                            group: u.a.Page,
                                            key: u.b.FirstPaint,
                                            label: u.c.FirstPaint,
                                            startTime: n.navigationStart
                                        }, n.isFirstLoad, n.hasLostVisibility, n.destination, n.getPageComponentName()))
                                    } catch (e) {
                                        n.logger.debug("First paint metrics not available on this platform", e)
                                    }
                                    n.hasSentAppBooted = !0
                                }
                            }, n.onNetworkRequest = function(e) {
                                var t = e.request_url.startsWith(n.graphqlEndpoint),
                                    i = !n.completedTimestamp || e.start_time <= n.completedTimestamp,
                                    r = Math.round(e.start_time - n.getNavigationStartTimestamp());
                                n.networkEvents.push({
                                    networkEvent: e,
                                    latencyStatus: p.a.Unknown,
                                    relativeStartTime: r,
                                    isPendingSpade: !0,
                                    isApiRequest: t,
                                    isPrePageload: i,
                                    duration: {
                                        value: e.duration,
                                        latencyStatus: p.a.Unknown
                                    }
                                }), n.reconcileQueries()
                            }, n.reconcileQueries = function() {
                                n.queryReconciliationTimer || (n.queryReconciliationTimer = setTimeout(function() {
                                    n.queryReconciliationTimer = null, n.doReconcileQueries(!1), n.sendNetworkRequestsToSpade()
                                }, 250))
                            }, n.doReconcileQueries = function(e) {
                                for (var t = n.networkEvents.filter(function(e) {
                                        return e.isApiRequest
                                    }), i = function(i) {
                                        var r = t.find(function(e) {
                                            return e.networkEvent.duration >= i.slowestQueryInBatch && e.networkEvent.start_time >= i.batchTimestamp && e.networkEvent.start_time - i.batchTimestamp < 10
                                        });
                                        !r && e && (r = t.find(function(e) {
                                            return e.networkEvent.duration >= i.slowestQueryInBatch && e.networkEvent.start_time >= i.batchTimestamp
                                        })), r ? (i.relatedNetworkEvent = r.networkEvent, i.isPrePageload = r.isPrePageload, i.requestDuration = {
                                            value: Math.round(r.networkEvent.duration),
                                            latencyStatus: p.a.Unknown
                                        }) : e && n.logger.warn("Unable to find a related network event for query", {
                                            queryEvent: i,
                                            filteredApiRequests: t,
                                            allNetworkRequests: n.networkEvents.slice()
                                        })
                                    }, r = 0, a = n.queryEvents.filter(function(e) {
                                        return !e.relatedNetworkEvent
                                    }); r < a.length; r++) {
                                    i(a[r])
                                }
                                n.raiseUpdate()
                            }, n.onQuery = function(e) {
                                if (n.completedTimestamp && e.batchTimestamp > n.completedTimestamp) n.logger.debug("Query event data skipped, it is post page load.", e);
                                else {
                                    var t = Math.max.apply(Math, e.queries.map(function(e) {
                                        return e.durationMs
                                    }));
                                    n.queryBatchMetrics.push({
                                        batchID: e.batchID,
                                        batchTimestamp: e.batchTimestamp,
                                        latencyStatus: p.a.Unknown,
                                        slowestQueryInBatch: t
                                    });
                                    for (var i = 0, r = e.queries; i < r.length; i++) {
                                        var a = r[i];
                                        n.queryEvents.push({
                                            batchID: e.batchID,
                                            batchTimestamp: e.batchTimestamp,
                                            relativeStartTime: Math.round(e.batchTimestamp - n.getNavigationStartTimestamp()),
                                            queryDuration: {
                                                value: a.durationMs,
                                                latencyStatus: p.a.Unknown
                                            },
                                            requestDuration: {
                                                latencyStatus: p.a.Unknown
                                            },
                                            operationName: a.operationName,
                                            queryID: a.queryID,
                                            slowestQueryInBatch: t,
                                            variables: a.variables,
                                            latencyStatus: p.a.Unknown,
                                            isPendingSpade: !0,
                                            isPrePageload: !1
                                        })
                                    }
                                    n.logger.debug("GraphQL query completed: ", {
                                        latestQueryData: e,
                                        allBatches: n.queryBatchMetrics
                                    }), n.reconcileQueries()
                                }
                            }, n.sendNetworkRequestsToSpade = function() {
                                if (n.networkEventsEnabled && n.destination && n.location && n.page) {
                                    n.logger.debug("Sending ready network and query events to Spade");
                                    var e = n.networkEvents.filter(function(e) {
                                        return e.isPendingSpade
                                    });
                                    if (e.length) {
                                        for (var t = 0, i = e; t < i.length; t++) {
                                            var r = i[t];
                                            r.isPendingSpade = !1, n.tracker.trackNetworkRequestEvent(n.destination, n.location, n.page.componentName, r.isPrePageload, r.relativeStartTime, r.networkEvent)
                                        }
                                        n.logger.debug("Sent network events to spade:", {
                                            count: e.length
                                        })
                                    }
                                    var a = n.queryEvents.filter(function(e) {
                                        return e.isPendingSpade && e.isPrePageload
                                    });
                                    if (a.length > 0) {
                                        for (var o = 0, s = 0, l = a; s < l.length; s++) {
                                            var c = l[s];
                                            void 0 !== c.requestDuration.value && void 0 !== c.queryDuration.value && (c.isPendingSpade = !1, n.tracker.trackApiQuery(n.destination, n.location, c.relativeStartTime, c.batchTimestamp, n.page.componentName, c.operationName, c.queryDuration.value, c.requestDuration.value, c.isPrePageload), o += 1)
                                        }
                                        n.logger.debug("Sent " + o + " query events to Spade, " + (a.length - o) + " events skipped because they are not yet ready.")
                                    }
                                }
                            }, n.checkLostVisibility = function() {
                                n.hasLostVisibility || (n.hasLostVisibility = document.hidden)
                            }, n.dispatchFirstPageLoaded = function() {
                                n.store.dispatch(Object(d.f)()), n.hasDispatchedFirstPageLoaded = !0
                            }, n.root = n, n.store = t.store, n.networkEventsEnabled = t.networkEventsEnabled, n.componentEventsEnabled = t.componentEventsEnabled, n.toolsEnabled = t.toolsEnabled, n.graphqlEndpoint = t.config.graphqlEndpoint, n.tracker = new g(t.tracking, n.logger), n.navigationStart = performance.timing.navigationStart, n.rootInitDuration = {
                                value: Math.round(n.startTimestamp - n.navigationStart),
                                latencyStatus: p.a.Unknown
                            }, n.networkMonitor = t.networkMonitor, n.sentinel = t.sentinel, n.stats = t.stats, n.firstPageLoadedTimeout = t.dyanmicSettings.get(v, 1e4), n.networkEventsEnabled && n.networkMonitor && n.networkMonitor.subscribeToUpdates(n.onNetworkRequest), n.networkEventsEnabled && t.apollo && t.apollo.addQueryMetricsListener(n.onQuery), t.trackVisibility) try {
                            n.checkLostVisibility(), document.addEventListener("visibilitychange", n.checkLostVisibility)
                        } catch (e) {
                            n.logger.warn("Failed to attach event listener for document visibility change, assuming visibility has been lost.", e), n.hasLostVisibility = !0
                        }
                        return n.raiseUpdate(), n
                    }
                    return c.d(t, e), t.prototype.resetFirstPageLoadedFailsafe = function() {
                        var e = this;
                        this.clearFirstPageLoadedFailsafeTimer();
                        var t = function() {
                            return void 0 !== e.componentDuration.value || !e.isFirstLoad || !e.page || e.hasDispatchedFirstPageLoaded
                        };
                        t() || (this.firstPageLoadedFailsafe = setTimeout(function() {
                            if (!t()) {
                                var n = e.page ? e.page.componentName : "Unknown",
                                    i = [],
                                    r = function(t) {
                                        for (var a = 0, o = t; a < o.length; a++) {
                                            var s = o[a];
                                            s.getHasReportedInteractive() || (i.push(s.componentName), e.stats.recordFailsafeError([n, s.componentName].join("_"))), s.children && s.children.length && r(s.children)
                                        }
                                    };
                                r(e.children || []), i.length || e.stats.recordFailsafeError(n), e.logger.error(new Error("First Page Loaded Failsafe Triggered"), "The first page loaded failsafe was triggered for page " + n + (i.length ? " and components " + i.join(", ") : "")), e.emitter.emit("firstPageLoadFailed"), e.dispatchFirstPageLoaded()
                            }
                        }, this.firstPageLoadedTimeout))
                    }, t.prototype.subscribeToUpdates = function(e) {
                        this.emitter.addListener("root-latency-tracker", e)
                    }, t.prototype.getCustomEvents = function() {
                        return this.customEvents
                    }, t.prototype.reset = function() {
                        this.isFirstLoad && this.dispatchFirstPageLoaded(), this.clearFirstPageLoadedFailsafeTimer();
                        var e = this.getCurrentTimestamp();
                        this.customEvents = {}, this.resetChildren(), this.children = [], this.startTimestamp = e, this.navigationStart = e, this.relativeStartTime = 0, this.rootInitDuration = {
                            latencyStatus: p.a.Unknown
                        }, this.firstPaint = {
                            latencyStatus: p.a.Unknown
                        }, this.completedTimestamp = 0, this.componentDuration = {
                            latencyStatus: p.a.Unknown
                        }, this.hasReportedInteractive = !1, this.page = void 0, this.isFirstLoad = !1, this.pageLoadDuration = {
                            latencyStatus: p.a.Unknown
                        }, this.networkEvents = [], this.queryEvents = [], this.queryBatchMetrics = [], this.hasSentInitializing = !1, this.hasSentInteractive = !1, this.hasSentAppBooted = !1, this.hasSentCompleteTransition = !1, this.hasReportedInteractive = !1, this.hasLostVisibility = !1, this.raiseUpdate(), this.logger.debug("Reset Root")
                    }, t.prototype.raiseUpdate = function() {
                        var e = this;
                        this.toolsEnabled && !this.dispatchTimer && (this.dispatchTimer = setTimeout(function() {
                            e.dispatchTimer = null, e.emitter.emit("root-latency-tracker")
                        }, 100))
                    }, t.prototype.sendBenchmarkEventsToSpade = function() {
                        if (this.destination && this.location && this.page) {
                            if (this.sendFetchStartEvent(this.destination, this.location, this.page.componentName), this.sendAppBootedEvent(this.destination, this.location, this.page.componentName), this.componentEventsEnabled && (this.sendInitializingEvent(this.destination, this.location, this.page.componentName), this.sendInteractiveEvent(this.destination, this.location, this.page.componentName)), this.sendCompleteTransitionEvent(this.destination, this.location, this.page.componentName), this.componentEventsEnabled)
                                for (var e = 0, t = this.children; e < t.length; e++) {
                                    t[e].sendBenchmarkEventsToSpade()
                                }
                        } else this.logger.debug("Unable to send events to spade. destination or location is not set")
                    }, t.prototype.registerChild = function(t) {
                        e.prototype.registerChild.call(this, t), this.logger.debug("Root page got a new child", {
                            newChild: t.componentName,
                            allChildren: this.getChildNames()
                        })
                    }, t.prototype.checkChildCompleted = function() {
                        this.page ? e.prototype.checkChildCompleted.call(this) : this.logger.debug("Root page incomplete, pending a page to register.")
                    }, t.prototype.markCompleted = function() {
                        if (!this.completedTimestamp)
                            if (this.page) {
                                if (this.completedTimestamp = this.getCurrentTimestamp(), this.componentDuration = {
                                        value: Math.round(this.completedTimestamp - this.startTimestamp),
                                        latencyStatus: p.a.Unknown
                                    }, this.logger.debug("Root tracker done", {
                                        durationMs: this.componentDuration
                                    }), this.pageLoadDuration = {
                                        value: (this.componentDuration.value || 0) + (this.rootInitDuration.value || 0),
                                        latencyStatus: p.a.Unknown
                                    }, this.logger.debug("Root page completed", {
                                        pageLoadDuration: this.pageLoadDuration,
                                        rootInitDuration: this.rootInitDuration,
                                        componentDuration: this.componentDuration,
                                        children: this.getChildNames()
                                    }), this.raiseUpdate(), this.sendAllEvents(), this.isFirstLoad) {
                                    this.clearFirstPageLoadedFailsafeTimer(), this.dispatchFirstPageLoaded();
                                    var e = document.getElementById("root");
                                    e && e.setAttribute("data-a-page-loaded", Date.now().toString())
                                }
                            } else this.logger.warn("Root page attemped to complete without a registered page component.")
                    }, t.prototype.getNavigationStartTimestamp = function() {
                        return this.navigationStart > 0 ? this.navigationStart : performance.timing.navigationStart
                    }, t.prototype.clearFirstPageLoadedFailsafeTimer = function() {
                        this.firstPageLoadedFailsafe && (clearTimeout(this.firstPageLoadedFailsafe), this.firstPageLoadedFailsafe = 0)
                    }, t
                }(h);
            n.d(t, "b", function() {
                return y
            }), n.d(t, "a", function() {
                return S
            });
            var y = {
                    forceNetworkLoggingStorageKey: "twilight.force-component-benchmarking",
                    forceComponentBenchmarkingStorageKey: "twilight.force-network-monitoring",
                    forceToolsStorageKey: "twilight.force-benchmarking-tools"
                },
                k = {
                    networkingThreshold: "benchmark_networking_threshold",
                    componentThreshold: "benchmark_component_threshold"
                },
                S = function() {
                    function e(e) {
                        var t = this;
                        this.getRootLatencyTracker = function() {
                            return t.latencyTracker
                        }, this.logger = e.logger.withCategory("Benchmarking"), this.seed = Math.round(100 * Math.random()) / 100, this.storage = e.storage;
                        var n = e.dynamicSettings.get(k.networkingThreshold, e.config.defaultNetworkLoggingThreshold),
                            i = e.dynamicSettings.get(k.componentThreshold, e.config.defaultComponentBenchmarkingThreshold);
                        this.toolsEnabled = this.shouldEnableTools(e.config), this.componentsEnabled = this.shouldEnableComponentBenchmarking(e.config, i, this.toolsEnabled), this.networkingEnabled = this.shouldEnableNetworkBenchmarking(e.config, n, this.componentsEnabled, this.toolsEnabled), this.networkingEnabled && (this.networkMonitoring = new l(e)), this.latencyTracker = new b({
                            componentEventsEnabled: this.componentsEnabled,
                            dyanmicSettings: e.dynamicSettings,
                            networkEventsEnabled: this.networkingEnabled,
                            toolsEnabled: this.toolsEnabled,
                            config: e.config,
                            logger: e.logger,
                            apollo: e.apollo,
                            networkMonitor: this.networkMonitoring,
                            sentinel: e.sentinel,
                            tracking: e.tracking,
                            stats: e.stats,
                            store: e.store,
                            trackVisibility: !0
                        }), this.logger.debug("Initialized", {
                            seed: this.seed,
                            toolsEnabled: this.toolsEnabled,
                            componentsEnabled: this.componentsEnabled,
                            componentThreshold: i,
                            networkingEnabled: this.networkingEnabled,
                            networkingThreshold: n
                        })
                    }
                    return e.prototype.shouldEnableTools = function(e) {
                        return e.forceBenchmarkingTools ? (this.logger.debug("Tools enabled, due to config."), !0) : !!this.storage.get(y.forceToolsStorageKey, !1) && (this.logger.debug("Tools enabled, due to local storage."), !0)
                    }, e.prototype.shouldEnableComponentBenchmarking = function(e, t, n) {
                        return n ? (this.logger.debug("Components enabled, due to Tools being enabled"), !0) : e.forceComponentBenchmarking ? (this.logger.debug("Components enabled, due to config."), !0) : this.storage.get(y.forceComponentBenchmarkingStorageKey, !1) ? (this.logger.debug("Components enabled, due to local storage."), !0) : this.seed <= t && (this.logger.debug("Components enabled, due to random selection"), !0)
                    }, e.prototype.shouldEnableNetworkBenchmarking = function(e, t, n, i) {
                        return n || i ? (this.logger.debug("Networking enabled, due to Components or Tools being enabled"), !0) : e.forceNetworkLogging ? (this.logger.debug("Networking enabled, due to config."), !0) : this.storage.get(y.forceNetworkLoggingStorageKey, !1) ? (this.logger.debug("Networking enabled, due to local storage."), !0) : this.seed <= t && (this.logger.debug("Networking enabled, due to random selection"), !0)
                    }, e
                }()
        },
        NvVO: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.AutohostSettings = "channel.dashboard.settings.autohost", e.BitsBuyCard = "bits-buy-card", e.BitsCheckoutSelect = "bits-checkout.select", e.BitsCheckoutSummary = "bits-checkout.summary", e.BroadcastPage = "broadcast", e.BrowseCommunities = "browse.communities", e.BrowseCreative = "browse.creative", e.BrowseGames = "browse.games", e.ChannelClips = "channel.clips", e.ChannelCollections = "channel.collections", e.ChannelClipsManager = "videoManager.clips.channel", e.ChannelDashboardActivity = "dashboards.activity", e.ChannelDashboardAchievements = "channel.dashboard.achievements", e.ChannelDashboardBounties = "channel.dashboard.bounties", e.ChannelDashboardChannelAnalytics = "channel.dashboard.channel-analytics", e.ChannelDashboardChannelAnalyticsReferrals = "channel.dashboard.channel-analytics.referrals", e.ChannelDashboardExtensionsLegacy = "channel.dashboard.extensions", e.ChannelDashboardExtensionsManagement = "channel.dashboard.extensions.management", e.ChannelDashboardExtensionsConfigure = "channel.dashboard.extensions.configure", e.ChannelDashboardModeration = "channel.dashboard.moderation", e.ChannelDashboardStreamSummary = "channel.dashboard.stream-summary", e.ChannelDashboardStreamSummaryReferrals = "channel.dashboard.stream-summary.referrals", e.ChannelEsportsLoot = "channel.esports-loot", e.ChannelEsportsPass = "channel.esports-pass", e.ChannelEsportsProgress = "channel.esports-progress", e.ChannelEvents = "channel.events", e.ChannelFollowers = "channel.followers", e.ChannelFollows = "channel.follows", e.ChannelIndex = "channel.index.index", e.ChatEmbed = "chat.embed", e.ChatPopout = "chat", e.CheermoteCarousel = "cheermote-carousel", e.ClipsEditing = "clips.edit", e.ClipsError = "clips.error", e.ClipsViewing = "clips.view", e.ClipsWatch = "clips.watch", e.CodeRedemptionPage = "redeem", e.CommunityModeration = "community.moderation", e.CommunityCreate = "community.create", e.DashboardBroadcastPage = "channel.dashboard.broadcast", e.DashboardEventsAll = "channel.dashboard.events.index", e.DashboardEventsCollection = "channel.dashboard.events.collection", e.DashboardPermissions = "dashboards.permissions", e.DashboardSettingsAutoMod = "channel.dashboard.settings.automod", e.DashboardSettingsIndex = "channel.dashboard.settings.index", e.DashboardSettingsRevenue = "channel.dashboard.settings.revenue", e.DashboardSettingsRevenueCheer = "channel.dashboard.settings.revenue.cheer", e.DashboardSettingsRevenueCheerBadges = "channel.dashboard.settings.revenue.cheerbadges", e.DashboardSettingsRevenueCheermotes = "channel.dashboard.settings.revenue.cheermotes", e.DashboardSettingsRevenueIndex = "channel.dashboard.settings.revenue", e.DashboardSettingsRevenueSubsNameSettings = "channel.dashboard.settings.revenue.subscription.ticket", e.DashboardSettingsRevenueChatEmoticons = "channel.dashboard.settings.revenue.subscription.chatperks", e.DashboardSettingsRevenueLoyaltyBadges = "channel.dashboard.settings.revenue.subscription.badges", e.DashboardSettingsRevenueGameCommerce = "channel.dashboard.settings.revenue.game-commerce", e.DashboardSettingsRevenueGameCommerceV2 = "channel.dashboard.settings.revenue.game-commerce-v2", e.DashboardSettingsRevenueMerchByAmazon = "channel.dashboard.settings.revenue.merch-by-amazon", e.DashboardSettingsRevenuePayoutOnboarding = "channel.dashboard.settings.revenue.payout-onboarding", e.DashboardSettingsRevenuePayoutSettings = "channel.dashboard.settings.revenue.payouts", e.DashboardSettingsRevenueUpgradeTerms = "channel.dashboard.settings.revenue.upgrade-terms", e.DashboardSettingsRevenueViewTerms = "channel.dashboard.settings.revenue.view-terms", e.DevOnly = "dev", e.DirectoryCommunityByLanguage = "directory.community.language", e.DirectoryCommunityIndex = "directory.community.index", e.DirectoryCommunityDetails = "directory.community.details", e.DirectoryFollowingCommunities = "directory.following.communities", e.DirectoryFollowingGames = "directory.following.games", e.DirectoryFollowingHosts = "directory.following.hosts", e.DirectoryFollowingIndex = "directory.following.index", e.DirectoryFollowingLiveChannels = "directory.following.channels", e.DirectoryFollowingVideos = "directory.following.videos.video-type", e.DirectoryGameClips = "directory.game.clips", e.DirectoryGameDetails = "directory.game.details", e.DirectoryGameIndex = "directory.game.index", e.DirectoryGames = "directory.games", e.DirectoryPopular = "directory.popular", e.DirectoryPopularByLanguage = "directory.popular.language", e.DirectoryGameVideos = "directory.game.videos", e.DirectoryVideosHistory = "directory.videos.history", e.EmailUnsubscribe = "emailUnsubscribe", e.EmailVerification = "emailVerification", e.EventDetails = "event.details", e.ExtensionDetails = "extensions.extension", e.ExtensionsDiscovery = "extensions.discovery", e.ExtensionsCategory = "extensions.category", e.ExtensionsSearch = "extensions.search", e.ForYou = "for-you", e.FriendRequests = "friends.requests", e.Friends = "friends.list", e.Index = "index", e.Inventory = "inventory", e.LivePage = "live.page", e.LoginRequired = "loginRequired", e.MessagesPage = "messages", e.MyClipsManager = "videoManager.clips", e.NotificationSettingsPage = "settings.notificationSettings", e.OnboardingIndex = "onboarding.index", e.OnboardingSurf = "onboarding.surf", e.PaymentsLandingPage = "payments.landingPage", e.PartnershipSignupPage = "partnership.signup", e.ContentUnavailable = "404", e.ReportUserPage = "reportUser.page", e.SettingsConnections = "private/embed-components", e.SettingsChannel = "private/embed-components", e.SettingsNotifications = "settings.notifications", e.SettingsPrime = "settings.prime", e.SettingsProfile = "settings.profile", e.SettingsSecurity = "private/embed-components", e.SettingsTurbo = "settings.turbo", e.StoreMerchPage = "store.merch", e.SquadStreamPage = "squadStream.page", e.SubsLandingPage = "subs.landing", e.SubsCheckoutPage = "subs.checkout", e.SubsManagementPage = "backpack", e.TeamsDashboardRevenue = "teams.dashboard.revenue", e.TeamsDashboardStats = "teams.dashboard.stats", e.TeamsDashboardMembers = "teams.dashboard.members", e.TeamsDashboardFeaturedChannels = "teams.dashboard.featured-channels", e.TeamsDashboardSettings = "teams.dashboard.settings", e.TeamsLandingPage = "teams.landing", e.TwitchPrimeFortnitePage = "prime.fortnite.landing", e.TwitchPrimeLinkingPage = "prime.fortnite.linking", e.TwitchPrimeOffersPage = "prime.landing", e.TwitchPrimeSuccessPage = "prime.fortnite.success", e.SubsBroadcasterPage = "subs.broadcaster", e.VideoManagerEditPropertiesPage = "videoManager.edit", e.VideoManagerPage = "videoManager.page", e.VideoManagerUploadListPage = "videoManager.upload-list", e.VideoManagerUploadPage = "videoManager.upload", e.VideoManagerCollectionsManager = "videoManager.collections", e.VideoManagerCollectionsEditor = "videoManager.collections.editor", e.VideoManagerHighlighter = "videoManager.highlighter", e.VideosPage = "videos", e.VideoWatchPage = "video", e.UnsubscribePage = "unsubscribe", e.DevSiteApps = "dev.apps.list", e.DevSiteAppCreate = "dev.apps.create", e.DevSiteAppEdit = "dev.apps.edit", e.DevSiteOverview = "dev.overview", e.Unknown = "unknown"
                }(i || (i = {}))
        },
        O4UZ: function(e, t, n) {
            "use strict";
            n.d(t, "e", function() {
                return u
            }), n.d(t, "c", function() {
                return i
            }), n.d(t, "d", function() {
                return r
            }), n.d(t, "b", function() {
                return m
            }), n.d(t, "g", function() {
                return h
            }), n.d(t, "a", function() {
                return p
            }), n.d(t, "j", function() {
                return f
            }), n.d(t, "h", function() {
                return g
            }), n.d(t, "i", function() {
                return v
            }), n.d(t, "m", function() {
                return b
            }), n.d(t, "o", function() {
                return y
            }), n.d(t, "n", function() {
                return S
            }), n.d(t, "f", function() {
                return w
            }), n.d(t, "l", function() {
                return E
            }), n.d(t, "k", function() {
                return C
            });
            var i, r, a = n("TSYQ"),
                o = n("cr+I"),
                s = n("q1tI"),
                l = n("eO8H"),
                c = n("/7QA"),
                d = n("ht6z"),
                u = {
                    DIRECT_ENTITLEMENT: "DIRECT_ENTITLEMENT",
                    CLAIM_CODE: "CLAIM_CODE",
                    EXTERNAL_OFFER: "EXTERNAL_OFFER"
                };
            ! function(e) {
                e.Vertical = "Vertical", e.Horizontal = "Horizontal", e.Default = "Vertical"
            }(i || (i = {})),
            function(e) {
                e.Crown = "Crown", e.LootPage = "LootPage"
            }(r || (r = {}));
            var p, m = {
                    UNKNOWN_ERROR: "UNKNOWN_ERROR",
                    OFFER_ALREADY_CLAIMED: "OFFER_ALREADY_CLAIMED",
                    UNABLE_TO_SPEND: "UNABLE_TO_SPEND",
                    TOO_MANY_RECENT_SPENDS: "TOO_MANY_RECENT_SPENDS"
                },
                h = function(e) {
                    switch (e || m.UNKNOWN_ERROR) {
                        case m.OFFER_ALREADY_CLAIMED:
                            return Object(c.d)("Oh no! Unable to claim. Another linked Twitch account may have already claimed this content. Click <x:link>here to learn more</x:link>.", {
                                "x:link": function(e) {
                                    return s.createElement(l.a, {
                                        to: "https://help.twitch.tv/customer/portal/articles/2572060-twitch-prime-guide#MultipleAccounts",
                                        target: "_blank",
                                        className: "prime-error__link",
                                        "data-a-target": "prime-error_link"
                                    }, e)
                                }
                            }, "PrimeError");
                        case m.UNABLE_TO_SPEND:
                        case m.TOO_MANY_RECENT_SPENDS:
                        default:
                            return Object(c.d)("Something has gone wrong. Please try again later.", "PrimeError")
                    }
                };
            ! function(e) {
                e.Seen = "SEEN", e.Unseen = "UNSEEN", e.Claimed = "CLAIMED"
            }(p || (p = {}));
            var f = function(e) {
                    return e === i.Vertical
                },
                g = function(e, t) {
                    var n = t === i.Horizontal ? "horizontal" : "vertical";
                    return a(e, e + "--" + n)
                },
                v = function() {
                    return k("seenOffers")
                },
                b = function(e) {
                    c.l.set("seenOffers", e)
                },
                y = function(e, t) {
                    return (e && (e.priority || 0 === e.priority) ? e.priority : 99999) - (t && (t.priority || 0 === t.priority) ? t.priority : 99999)
                },
                k = function(e) {
                    return c.l.get(e, [])
                },
                S = function(e, t) {
                    return void 0 !== e && void 0 !== t && (!e && Object(d.a)(t))
                },
                w = function() {
                    var e = location.search,
                        t = o.parse(e);
                    return t && t.dateOverride || void 0
                },
                E = function(e) {
                    return e && !e.loading && !e.error && null !== e.currentUser && e.currentUser.hasPrime
                },
                C = function(e) {
                    return e && e.loading
                }
        },
        OcOS: function(e, t, n) {},
        OeOm: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Prime_PrimeOfferList_PrimeOffers"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "dateOverride"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Time"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "primeOffers"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "dateOverride"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "dateOverride"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "title"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "imageURL"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "claimInstructions"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "description"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "deliveryMethod"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "priority"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "content"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "externalURL"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "publisher"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "categories"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "hasEntitlement"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "claimData"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 276
                }
            };
            n.loc.source = {
                body: "query Prime_PrimeOfferList_PrimeOffers($dateOverride: Time) {\nprimeOffers(dateOverride: $dateOverride) {\nid\ntitle\nimageURL\nclaimInstructions\ndescription\ndeliveryMethod\npriority\ncontent {\ngame {\nid\nname\n}\nexternalURL\npublisher\ncategories\n}\nself {\nhasEntitlement\nclaimData\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Oidp: function(e, t, n) {},
        OjLy: function(e, t, n) {},
        OpME: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            }), n.d(t, "a", function() {
                return p
            }), n.d(t, "e", function() {
                return h
            }), n.d(t, "d", function() {
                return f
            });
            var i = n("mrSG"),
                r = n("lZdE"),
                a = n("cpJf"),
                o = {
                    "^B-?\\)$": "B)",
                    "^:-?[z|Z|\\|]$": ":|",
                    "^:-?\\)$": ":)",
                    "^:-?\\($": ":(",
                    "^:-?(p|P)$": ":P",
                    "^;-?(p|P)$": ";P",
                    "^:-?[\\\\/]$": ":/",
                    "^;-?\\)$": ";)",
                    "^R-?\\)$": "R)",
                    "^:>$": ":>",
                    "^[oO](_|\\.)[oO]$": "O_o",
                    "^:-?D$": ":D",
                    "^:-?(o|O)$": ":O",
                    "^>\\($": ">(",
                    "^:-?(?:7|L)$": ":7",
                    "^:-?(S|s)$": ":S",
                    "^#-?[\\\\/]$": "#/",
                    "^<\\]$": "<]",
                    "^<3$": "<3",
                    "^&lt;3$": "<3",
                    "^&lt;\\]$": "<]",
                    "^&gt;\\($": ">("
                },
                s = ["1.0", "2.0", "3.0"],
                l = new Set([457, 33, 42, 0]),
                c = function(e) {
                    return e.map(function(e) {
                        var t = m(e.token),
                            n = o[t] || t,
                            r = s.reduce(function(t, n) {
                                var i = t.concat("https://static-cdn.jtvnw.net/emoticons/v1/" + e.id + "/" + n + " " + n + "x");
                                return "3.0" !== n && (i = i.concat(", ")), i
                            }, "");
                        return i.a({
                            displayName: n,
                            srcSet: r
                        }, e)
                    })
                },
                d = function(e) {
                    var t = m(e);
                    return o[t] || t
                },
                u = function(e) {
                    return e.slice().sort(function(e, t) {
                        return parseInt(e.id, 10) - parseInt(t.id, 10)
                    })
                },
                p = function(e) {
                    for (var t = [], n = [], i = 0, r = e; i < r.length; i++) {
                        var a = r[i];
                        l.has(parseInt(a.id, 10)) ? t.push({
                            id: a.id,
                            emotes: c(u(a.emotes))
                        }) : n.push({
                            id: a.id,
                            emotes: c(u(a.emotes))
                        })
                    }
                    return n.concat(t)
                },
                m = function(e) {
                    return function(e) {
                        return /[\|\\\^\$\*\+\?\:\#]/.test(e)
                    }(e) ? "^" + e.replace(/\\(?=[&;:])/g, "") + "$" : e
                },
                h = function(e, t) {
                    var n = a.c,
                        i = [],
                        o = [],
                        s = [],
                        l = new RegExp("^" + Object(r.a)(t), "i");
                    return e.forEach(function(e) {
                        n[e.token] ? s.push(e) : e.token.match(l) ? i.push(e) : o.push(e)
                    }), i.sort(function(e, t) {
                        return e.token < t.token ? -1 : e.token > t.token ? 1 : 0
                    }), o.sort(function(e, t) {
                        return e.token < t.token ? -1 : e.token > t.token ? 1 : 0
                    }), s.sort(function(e, t) {
                        return n[t.token].count - n[e.token].count
                    }), s.concat(i).concat(o)
                },
                f = function(e) {
                    var t = {};
                    return e.filter(function(e) {
                        return !t.hasOwnProperty(e.token) && (t[e.token] = !0)
                    })
                }
        },
        OuEP: function(e, t, n) {},
        PaqN: function(e, t, n) {},
        PkHO: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "RecommendedChannels"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "first"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Int"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "recID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "language"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "recommendations"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "liveRecommendations"
                                            },
                                            arguments: [{
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "first"
                                                },
                                                value: {
                                                    kind: "Variable",
                                                    name: {
                                                        kind: "Name",
                                                        value: "first"
                                                    }
                                                }
                                            }, {
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "recRequestID"
                                                },
                                                value: {
                                                    kind: "Variable",
                                                    name: {
                                                        kind: "Name",
                                                        value: "recID"
                                                    }
                                                }
                                            }, {
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "language"
                                                },
                                                value: {
                                                    kind: "Variable",
                                                    name: {
                                                        kind: "Name",
                                                        value: "language"
                                                    }
                                                }
                                            }],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "generationID"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "responseID"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "nodes"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "broadcaster"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "displayName"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "login"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "profileImageURL"
                                                                    },
                                                                    arguments: [{
                                                                        kind: "Argument",
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "width"
                                                                        },
                                                                        value: {
                                                                            kind: "IntValue",
                                                                            value: "70"
                                                                        }
                                                                    }],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "game"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "name"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 315
                }
            };
            n.loc.source = {
                body: "query RecommendedChannels($first: Int $recID: String! $language: String!) {\ncurrentUser {\nid\nrecommendations {\nliveRecommendations (first: $first recRequestID: $recID language: $language) {\ngenerationID\nresponseID\nnodes {\nid\nbroadcaster {\nid\ndisplayName\nlogin\nprofileImageURL(width: 70)\n}\ngame {\nid\nname\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Pmew: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("geRD"),
                o = n("UY/B");

            function s(e) {
                var t = i.a({
                    mutation: o
                }, Object(a.a)(e), {
                    optimisticResponse: {
                        setPreferredLanguageTag: {
                            __typename: "SetPreferredLanguageTagPayload",
                            user: {
                                __typename: "User",
                                id: e.userID,
                                settings: {
                                    __typename: "UserSettings",
                                    preferredLanguageTag: e.preferredLanguageTag
                                }
                            }
                        }
                    }
                });
                return r.o.apollo.client.mutate(t)
            }

            function l(e) {
                return e.replace("-", "_").toUpperCase()
            }

            function c(e) {
                return e.toLowerCase().replace("_", "-")
            }
        },
        PrJw: function(e, t, n) {
            "use strict";
            var i = n("vGFN");
            n.d(t, "a", function() {
                return i.b
            }), n.d(t, "b", function() {
                return i.c
            }), n.d(t, "c", function() {
                return i.d
            }), n.d(t, "d", function() {
                return i.e
            }), n.d(t, "e", function() {
                return i.f
            }), n.d(t, "f", function() {
                return i.g
            }), n.d(t, "g", function() {
                return i.h
            }), n.d(t, "h", function() {
                return i.i
            }), n.d(t, "i", function() {
                return i.j
            }), n.d(t, "j", function() {
                return i.k
            }), n.d(t, "k", function() {
                return i.m
            }), n.d(t, "l", function() {
                return i.p
            }), n.d(t, "m", function() {
                return i.q
            })
        },
        Pxir: function(e, t, n) {},
        QA0N: function(e, t, n) {
            "use strict";
            var i, r, a, o, s;
            n.d(t, "d", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }), n.d(t, "a", function() {
                    return a
                }), n.d(t, "e", function() {
                    return o
                }), n.d(t, "c", function() {
                    return s
                }),
                function(e) {
                    e.AutohostSettings = "autohost_settings", e.BitsCheckoutSelect = "bits-checkout.select", e.BitsCheckoutSummary = "bits-checkout.summary", e.BitsLandingPage = "bits_landing", e.Broadcast = "broadcast", e.Browse = "browse", e.BrowseCommunities = "browse_communities", e.BrowseCreative = "browse_creative", e.BrowseForYou = "browse_for_you", e.Channel = "channel", e.ChannelClips = "channel_clips", e.ChannelClipsManager = "my_clips_channel", e.ChannelEsportsLoot = "channel_esports_loot", e.ChannelEsportsPass = "channel_esports_pass", e.ChannelEsportsProgress = "channel_esports_progress", e.ChannelEvents = "channel_events", e.ChannelVideos = "channel_vods", e.ChannelCollections = "channel_collections", e.Chat = "chat", e.ClipsGame = "clips_game", e.ClipsEditing = "clips_edit", e.ClipsError = "clips_error", e.ClipsViewing = "clips_viewing", e.ClipsWatchPage = "clips_watch", e.CodeRedemptionPage = "code_redemption", e.CommunityModerationLog = "community_moderation_log", e.CommunityModerationSettings = "community_moderation_settings", e.CommunityCreate = "community_create", e.Dashboard = "dashboard", e.DashboardAchievements = "dashboard/achievements", e.DashboardActivity = "dashboard/activity", e.DashboardBounties = "dashboard/bounties", e.DashboardBroadcast = "dashboard/broadcast", e.DashboardChannelAnalytics = "dashboard/channel-analytics", e.DashboardChannelAnalyticsReferrals = "dashboard/channel-analytics-referrals", e.DashboardEventsCollection = "dashboard/events/collection", e.DashboardEventsAll = "dashboard/events", e.DashboardExtensionsLegacy = "dashboard/extensions", e.DashboardExtensionsManagement = "dashboard/extensions/management", e.DashboardExtensionsConfigure = "dashboard/extensions/configure", e.DashboardLivePage = "dashboard/live", e.DashboardPermissions = "dashboard/permissions", e.DashboardSettingsAutoMod = "dashboard/settings/automod", e.DashboardSettingsIndex = "dashboard/settings", e.DashboardSettingsRevenueIndex = "dashboard/settings/revenue", e.DashboardSettingsRevenueSubsNameSettings = "dashboard/settings/revenue/subscription/ticket", e.DashboardSettingsRevenueChatEmoticons = "dashboard/settings/revenue/subscription/chatperks", e.DashboardSettingsRevenueLoyaltyBadges = "dashboard/settings/revenue/subscription/badges", e.DashboardSettingsRevenueCheer = "dashboard/settings/revenue/cheer", e.DashboardSettingsRevenueCheerBadges = "dashboard/settings/revenue/cheerbadges", e.DashboardSettingsRevenueCheermotes = "dashboard/settings/revenue/cheermotes", e.DashboardSettingsRevenueGameCommerce = "dashboard/settings/revenue/game-commerce", e.DashboardSettingsRevenueGameCommerceV2 = "dashboard/settings/revenue/game-commerce-v2", e.DashboardSettingsRevenueMerchByAmazon = "dashboard/settings/revenue/merch-by-amazon", e.DashboardSettingsRevenuePayoutOnboarding = "dashboard/settings/revenue/payout-onboarding", e.DashboardSettingsRevenuePayoutSettings = "dashboard/settings/revenue/payouts", e.DashboardSettingsRevenueUpgradeTerms = "dashboard/settings/revenue/upgrade-terms", e.DashboardSettingsRevenueViewTerms = "dashboard/settings/revenue/view-terms", e.DashboardStreamSummary = "dashboard/stream-summary", e.DashboardStreamSummaryReferrals = "dashboard/stream-summary-referrals", e.Directory = "directory", e.DirectoryPopular = "directory.popular", e.EmailUnsubscribe = "email_unsubscribe", e.EmailVerification = "email_verification", e.EventDetails = "event_details", e.ExtensionDetails = "extension_details", e.ExtensionsCategory = "extensions_category", e.ExtensionsDiscovery = "extensions_discovery", e.ExtensionsSearch = "extensions_search", e.Followers = "followers", e.Follows = "follows", e.FriendRequests = "friends.requests", e.Friends = "friends.list", e.FrontPage = "home", e.GameDetail = "game_detail", e.Inventory = "inventory", e.LoginRequired = "loginRequired", e.MyClipsManager = "my_clips", e.None = "", e.OnboardingCommunitySelection = "onboarding/community-selection", e.OnboardingChannelSurfing = "onboarding/channel-surfing", e.PaymentsLandingPage = "payments_landing_page", e.PartnershipSignupPage = "partnership_signup_page", e.ContentUnavailable = "404", e.SquadStreamPage = "squad-stream", e.SubsLandingPage = "subs-landing", e.SubsCheckoutPage = "subs_checkout", e.SubsManagementPage = "subs_management", e.SettingsPage = "settings", e.SubsBroadcasterPage = "subs-broadcaster", e.TeamsLandingPage = "team", e.TwitchPrimeFortnitePage = "twitch_prime_fortnite_page", e.TwitchPrimeLinkingPage = "twitch_prime_linking_page", e.TwitchPrimeOffersPage = "twitch_prime_offers_page", e.TwitchPrimeSuccessPage = "twitch_prime_success_page", e.UnsubscribePage = "unsubscribe", e.VideoManager = "video_manager", e.VideoManagerCollectionManager = "video_manager_collections", e.VideoManagerCollectionEditor = "video_manager_collection_editor", e.VideoManagerHighlighter = "video_manager_highlighter", e.VideoWatchPage = "vod", e.DevSiteOverview = "dev/overview", e.DevSiteApps = "dev/apps", e.DevSiteAppCreate = "dev/app-create", e.DevSiteAppEdit = "dev/app-edit"
                }(i || (i = {})),
                function(e) {
                    e.Channels = "channels", e.Communities = "communities", e.Games = "games", e.Hosts = "hosts", e.Mixed = "mixed", e.Videos = "vods"
                }(r || (r = {})),
                function(e) {
                    e.AnnouncementBanner = "announcement_banner", e.ChannelMetadata = "channel_metadata", e.ChatCard = "chat_card", e.CollectionCard = "collection_card", e.CollectionCreator = "collection_creator", e.CollectionItemCard = "collection_item_card", e.ClipCuratorName = "curator_name", e.Community = "community", e.EventLive = "event_suggestion_live", e.EventPast = "event_suggestion_past", e.EventUpcoming = "event_suggestion_upcoming", e.ExtensionCard = "extension_card", e.ExtensionCategoryPreview = "extension_category_preview", e.ExtensionDetails = "extension_details", e.ExtensionNavTabLink = "extension_nav_tab_link", e.ExtensionPanel = "extension_panel", e.ExtensionSearchBar = "extension_search_bar", e.ExtensionConfigureButton = "extension_configure_button", e.Following = "directory_following", e.FollowedChannels = "followed_channels", e.Game = "game", e.GameBoxart = "game_boxart", e.GameMetadata = "game_metadata", e.GameName = "game_name", e.Games = "directory_games", e.HeaderGameName = "header_game_name", e.HighlighterSuccess = "highlight_creation_success", e.Host = "host_channel", e.InstalledExtensionCard = "installed_extension_card", e.LatestCollection = "latest_collection", e.Live = "live_channel", e.LiveHost = "live_host", e.LocalLiveChannel = "local_live_channel", e.LocalPopularChannel = "local_popular_channel", e.Logo = "twitch_logo", e.Popular = "popular_games", e.PopularOverallVideos = "popular_overall_videos", e.PopularVideos = "popular_videos", e.Presence = "friend_presence", e.RecentVideos = "recent_videos", e.RecommendedChannels = "recommended_channels", e.RecommendedVideos = "recommended_videos", e.ReferralsBack = "referrals_back", e.ReferralsDetails = "referrals_details", e.ResumeWatchingVideos = "resume_watching_videos", e.SelfChannel = "self_channel", e.SubscribedChannels = "subscribed_channels", e.SuggestedVideos = "suggested_videos", e.TopClips = "topclips", e.TopStatsChart = "topstats_chart", e.TopClipsDetails = "topclips_details", e.TopStreams = "topstreams", e.TextLink = "text_link", e.User = "user", e.UserThumbnail = "user_thumbnail", e.Video = "video", e.VideoThumbnail = "video_thumbnail", e.VideoTitle = "video_title", e.VideoShelf = "video_shelf"
                }(a || (a = {})),
                function(e) {
                    e.AnonFrontPage = "anon_home", e.Browse = "twitch_browse_directory", e.BrowseForYou = "twitch_browse_for_you", e.Channel = "twitch_channel", e.ChannelAnalytics = "channel_analytics", e.ChannelCollections = "channel_collections", e.ChannelVideos = "channel_videos", e.Chat = "twitch_chat", e.ChatNotification = "chat_bar_notification", e.ClipsWatchPage = "clips_watch_page", e.Community = "twitch_community_directory", e.DashboardLeftNav = "dashboard_left_nav", e.DashboardLive = "dashboard_live", e.EventDetails = "event_details", e.ExtensionCategory = "extension_category", e.ExtensionConfiguration = "extension_configuration", e.ExtensionPage = "extension_page", e.ExtensionSearch = "extension_search", e.ExtensionDiscovery = "extension_discovery", e.ExtensionManagement = "extension_management", e.ExtensionDashboardTopNav = "extension_dashboard_top_nav", e.ExtensionInstalledModal = "extension_modal_installed", e.ExtensionManagerCarousel = "extension_mgr_carousel", e.ExtensionsWhitelisted = "extensions_whitelisted", e.FinishWatching = "finish_watching", e.Following = "following_directory", e.Game = "twitch_game_directory", e.GameVideos = "twitch_video_game_directory", e.NavSearch = "header_search", e.NotificationCenter = "notification_center", e.NotificationToast = "notification_toast", e.OnboardingChannelSurfing = "channel_surfing", e.SideNav = "twitch_socialcolumn", e.StreamSummary = "stream_summary", e.TopNav = "twitch_topnav", e.TwitchHome = "twitch_home", e.VideoEmbed = "vod_embed", e.VideoManagerCollectionEditor = "video_manager_collection_editor", e.VideoManagerCollectionManager = "video_manager_collection_manager", e.VideoManagerHighlighter = "video_manager_highlighter", e.VideoNotFoundPage = "vod_not_found", e.VideoWatchPage = "vod", e.Whispers = "conversations"
                }(o || (o = {})),
                function(e) {
                    e.Channels = "channels", e.Communities = "communities", e.Games = "games", e.Hosts = "hosts", e.Overview = "overview", e.Videos = "videos"
                }(s || (s = {}))
        },
        QAxy: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "updatePrimeOfferStatus"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdatePrimeOfferStatusInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updatePrimeOfferStatus"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "hasEntitlement"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "claimData"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "status"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "error"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "code"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 171
                }
            };
            n.loc.source = {
                body: "mutation updatePrimeOfferStatus($input: UpdatePrimeOfferStatusInput!) {\nupdatePrimeOfferStatus(input: $input) {\nself {\nhasEntitlement\nclaimData\nstatus\n}\nerror {\ncode\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        QCUs: function(e, t, n) {},
        QCfw: function(e, t, n) {},
        QM53: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FollowedChannels_CurrentUser_FollowedVideos_RENAME2"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoTypes"
                            }
                        },
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: {
                                    kind: "NamedType",
                                    name: {
                                        kind: "Name",
                                        value: "BroadcastType"
                                    }
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "followedVideos"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "first"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "100"
                                        }
                                    }, {
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "types"
                                        },
                                        value: {
                                            kind: "Variable",
                                            name: {
                                                kind: "Name",
                                                value: "videoTypes"
                                            }
                                        }
                                    }],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "title"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "viewCount"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "publishedAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "previewThumbnailURL"
                                                            },
                                                            arguments: [{
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "width"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "126"
                                                                }
                                                            }, {
                                                                kind: "Argument",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "height"
                                                                },
                                                                value: {
                                                                    kind: "IntValue",
                                                                    value: "71"
                                                                }
                                                            }],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "owner"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "displayName"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "self"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "viewingHistory"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "position"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 316
                }
            };
            n.loc.source = {
                body: "query FollowedChannels_CurrentUser_FollowedVideos_RENAME2($videoTypes: [BroadcastType!]) {\ncurrentUser {\nid\nfollowedVideos(first: 100 types: $videoTypes) {\nedges {\nnode {\nid\ntitle\nviewCount\npublishedAt\npreviewThumbnailURL(width: 126 height: 71)\nowner {\nid\ndisplayName\n}\nself {\nviewingHistory {\nposition\n}\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        QNoE: function(e, t, n) {},
        QVaV: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            }), n.d(t, "b", function() {
                return o
            });
            var i = n("q1tI"),
                r = /^[\x00-\x7F]*$/,
                a = function(e, t, n) {
                    return void 0 === n && (n = !1), t && e && !o(t) ? n ? t + " (" + e + ")" : i.createElement("span", null, t, " ", i.createElement("span", {
                        className: "intl-login"
                    }, "(" + e + ")")) : t || (e || "")
                };

            function o(e) {
                return r.test(e)
            }
        },
        QZ2B: function(e, t, n) {},
        Qdxp: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FollowButton_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "followButtonFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 156
                }
            };
            i.loc.source = {
                body: '#import "twilight/common/queries/follow-button-fragment.gql"\nquery FollowButton_User($login: String!) {\nuser(login: $login) {\nid\n...followButtonFragment\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("V94A").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        QjI3: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/MKj"),
                s = n("kRBY"),
                l = n("GnwI"),
                c = n("/7QA"),
                d = n("2+sX"),
                u = n("u5aL"),
                p = n("eJ65"),
                m = n("yR8l"),
                h = n("x7UT"),
                f = n("3Bft"),
                g = n("tIid"),
                v = n("ht6z"),
                b = n("/aPz"),
                y = n("4Qec"),
                k = n("5zXJ"),
                S = n("Ue10"),
                w = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(S.Ma, {
                            className: "esports-top-page-details"
                        }, a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            },
                            padding: {
                                x: 2,
                                y: 1
                            },
                            display: S.R.Flex,
                            justifyContent: S.La.Center,
                            className: "insider-pass-pre-purchase__header"
                        }, a.createElement("img", {
                            src: k.c + "/owl-2017/all-access-logo.svg",
                            alt: Object(c.d)("Overwatch League All-Access Pass on Twitch", "CampaignsTopPageDetails"),
                            height: "80px",
                            "data-test-selector": "balloon-detail-logo"
                        })), a.createElement(S.Fa, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0,
                            "data-test-selector": "balloon-detail-subheader"
                        }, Object(c.d)("Your VIP pass to the best of the Overwatch League", "CampaignsTopPageDetails"))), a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H6,
                            bold: !0,
                            "data-test-selector": "balloon-detail-igc-subheader"
                        }, Object(c.d)("Overwatch In-Game Content (requires Blizzard account link)", "CampaignsTopPageDetails")), a.createElement(S.Q, {
                            "data-test-selector": "balloon-detail-igc-copy"
                        }, Object(c.d)("3 Hero Skins • Overwatch League Player Icon • Overwatch League Spray •", "CampaignsTopPageDetails"), " ", a.createElement(S.Q, {
                            type: S.Gb.Span,
                            italic: !0
                        }, Object(c.d)("Plus more content coming soon", "CampaignsTopPageDetails")))), a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H6,
                            bold: !0,
                            "data-test-selector": "balloon-detail-experience-subheader"
                        }, Object(c.d)("The Overwatch League All-Access Experience", "CampaignsTopPageDetails")), a.createElement(S.Q, {
                            "data-test-selector": "balloon-detail-experience-copy"
                        }, Object(c.d)("Exclusive Command Center stream • Match analysis videos by players • Ask questions in post-match Q&A with players • Passholder-only chat • 23 Twitch emotes • Overwatch League chat badges • Ad-free viewing on Overwatch League", "CampaignsTopPageDetails"))))
                    }, t
                }(a.PureComponent),
                E = n("DnOo"),
                C = n("W8Fi"),
                N = (n("Tp30"), function(e) {
                    var t = Object(C.d)(e.subscriptionProducts) ? Object(C.a)(e.subscriptionProducts[0]) : e.subscriptionProducts[0].price,
                        n = Object(c.d)("Gift All-Access Pass", "CampaignsNonSubbedTopPage"),
                        i = a.createElement(S.v, {
                            ariaLabel: n,
                            onClick: e.showRecipientSelect,
                            type: S.B.Hollow,
                            "data-test-selector": "subscribe-button__gift"
                        }, n);
                    return a.createElement(S.Ma, {
                        padding: 2
                    }, a.createElement(w, null), a.createElement(S.Q, {
                        type: S.Gb.H6,
                        bold: !0
                    }, Object(c.d)("One-Time Purchase for the 2018 Season", "CampaignsNonSubbedTopPage")), a.createElement(S.Q, null, Object(c.d)("All-Access benefits last up to the start of the 2019 Overwatch League Season. Twitch emotes, badges, and in-game content are yours to keep forever.", "CampaignsNonSubbedTopPage")), a.createElement(S.Ma, {
                        margin: {
                            top: 1
                        }
                    }, a.createElement(S.Ma, {
                        margin: {
                            right: .5
                        },
                        display: S.R.Inline
                    }, a.createElement(E.a, {
                        isSubbedToTier: !1,
                        tierPrice: t,
                        "data-a-target": "tier1-subscribe-button",
                        reportSubAction: e.handleTopPageSubButtonClick,
                        url: e.subscriptionProducts[0].url,
                        isEsportChannel: !0
                    })), i), a.createElement(S.Ma, {
                        display: S.R.Flex,
                        margin: {
                            top: 1
                        },
                        flexDirection: S.T.Column
                    }, a.createElement(y.a, {
                        subscriptionProducts: e.subscriptionProducts,
                        userHasPrime: e.userHasPrime
                    })))
                }),
                T = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = Object(c.d)("Gift All-Access Pass", "CampaignsSubbedTopPage"),
                            t = a.createElement(S.Ma, {
                                margin: {
                                    top: 1
                                }
                            }, a.createElement(S.v, {
                                ariaLabel: e,
                                onClick: this.props.showRecipientSelect,
                                type: S.B.Hollow,
                                "data-test-selector": "subscribe-button__gift"
                            }, e));
                        return a.createElement(S.Ma, {
                            padding: 2
                        }, a.createElement(w, null), a.createElement(S.Q, {
                            "test-selector": "subbed-subheader",
                            type: S.Gb.H4,
                            bold: !0
                        }, Object(c.d)("You have the All-Access Pass", "CampaignsSubbedTopPage")), a.createElement(S.Q, {
                            "test-selector": "subbed-copy"
                        }, Object(c.d)("All-Access benefits last up to the start of the 2019 Overwatch League Season. Twitch emotes, badges, and in-game content are yours to keep.", "CampaignsSubbedTopPage")), t)
                    }, t
                }(a.PureComponent),
                _ = n("8Ad5"),
                R = n("f00E"),
                O = n("H/lO"),
                I = n("NZDK"),
                D = n("9kXc"),
                P = n("8/mp"),
                x = n("QVaV"),
                L = n("fvjX"),
                F = n("k91D"),
                M = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        if (!this.props.data || this.props.data.loading || !this.props.recipientLogin || this.props.data.user.self.canGift) return null;
                        var e = this.props.isEsportChannel ? Object(c.d)("Sorry, an All-Access Pass to this channel is not available for this user", "GiftRecipientIneligibleMessage") : Object(c.d)("Sorry, a gift subscription to this channel is not available for this user.", "GiftRecipientIneligibleMessage"),
                            t = this.props.isEsportChannel ? "esports-gift-eligibility-message-selector" : "gift-eligibility-message-selector";
                        return a.createElement(S.Ma, {
                            margin: {
                                top: 1
                            }
                        }, a.createElement(S.Q, {
                            italic: !0,
                            color: S.K.Alt2,
                            "data-test-selector": t
                        }, e))
                    }, t
                }(a.Component),
                A = Object(L.d)(Object(l.c)("GiftRecipientIneligibleMessage"), Object(m.a)(F, {
                    options: function(e) {
                        return {
                            variables: {
                                recipientLogin: e.recipientLogin,
                                subProductId: e.subProductId
                            }
                        }
                    },
                    skip: function(e) {
                        return !e.recipientLogin || !e.subProductId
                    }
                }))(M),
                U = n("JMwM"),
                B = n("br9A"),
                j = (n("zdEN"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            selectedUser: null
                        }, t.reportGiftCheckoutAction = function() {
                            t.props.reportSubMenuAction({
                                action: B.a.BuyGiftSub,
                                checkoutButtonTier: t.props.selectedProductPrice,
                                giftRecipient: t.state.selectedUser ? t.state.selectedUser.login : null
                            })
                        }, t.onUserClick = function(e) {
                            for (var n = e.target; n.parentElement && !n.dataset.user_id;) n = n.parentElement;
                            n.dataset.user_id && n.dataset.user_login && n.dataset.user_name ? t.setState({
                                selectedUser: {
                                    id: n.dataset.userId || "",
                                    login: n.dataset.user_login || "",
                                    name: n.dataset.user_name || ""
                                }
                            }) : t.setState({
                                selectedUser: null
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        (e.isWaiting || e.isErrored || !e.hasInput) && this.setState({
                            selectedUser: null
                        })
                    }, t.prototype.render = function() {
                        var e;
                        return e = this.props.isWaiting ? a.createElement(S.Ma, {
                            fullHeight: !0
                        }, a.createElement(S.Oa, {
                            fillContent: !0
                        })) : this.props.hasInput ? this.props.isErrored ? this.getErrorMessage() : this.props.userResults && this.props.userResults.totalHits > 0 ? this.getUserResultContent() : this.getNoResultsMessage() : a.createElement(S.Ma, {
                            margin: 1
                        }, a.createElement(S.Q, {
                            color: S.K.Alt2
                        }, Object(c.d)("Start typing to see a list of suggestions here.", "GiftRecipientSearchResult"))), a.createElement("div", {
                            onKeyDown: this.props.onKeyDown
                        }, a.createElement(S.qb, {
                            className: "gift-recipient-search-result-view",
                            background: S.n.Alt,
                            position: S.Wa.Relative,
                            overflow: S.Pa.Hidden,
                            display: S.R.Block,
                            margin: {
                                bottom: 2
                            },
                            borderLeft: !0,
                            borderBottom: !0,
                            borderRight: !0
                        }, a.createElement(S.Fa, {
                            overflow: S.Pa.Hidden,
                            position: S.Wa.Relative
                        }, a.createElement(P.b, {
                            suppressScrollX: !0
                        }, a.createElement(S.Ma, null, e, a.createElement(P.a, {
                            enabled: !this.props.isWaiting && this.props.hasInput,
                            loadMore: this.props.loadMore
                        }))))), a.createElement(S.Ma, null, a.createElement(S.Ma, {
                            display: S.R.Flex,
                            alignItems: S.c.Center,
                            fullWidth: !0
                        }, this.getBuyGiftButton(), a.createElement(S.Fa, {
                            margin: {
                                x: 1
                            }
                        }, a.createElement(S.Q, {
                            "data-test-selector": "gift-recipient-display-name-selector"
                        }, Object(c.d)("for {displayName}", {
                            displayName: a.createElement(S.Q, {
                                bold: !0,
                                type: S.Gb.Span
                            }, this.getFormattedDisplayName())
                        }, "GiftRecipientCheckoutButton")))), a.createElement(A, {
                            subProductId: this.props.selectedProductId,
                            recipientLogin: this.state.selectedUser ? this.state.selectedUser.login : null,
                            isEsportChannel: this.props.isEsportChannel
                        })))
                    }, t.prototype.getBuyGiftButton = function() {
                        return a.createElement(U.a, {
                            subProductId: this.props.selectedProductId,
                            giftRecipient: this.state.selectedUser ? this.state.selectedUser.login : null,
                            checkoutURL: this.props.selectedProductURL,
                            onClick: this.reportGiftCheckoutAction,
                            isEsportChannel: this.props.isEsportChannel
                        })
                    }, t.prototype.getFormattedDisplayName = function() {
                        return this.state.selectedUser ? Object(x.a)(this.state.selectedUser.login, this.state.selectedUser.name) : ""
                    }, t.prototype.getErrorMessage = function() {
                        return a.createElement(S.Ma, {
                            fullWidth: !0,
                            textAlign: S.Cb.Center,
                            justifyContent: S.La.Center
                        }, a.createElement(S.Q, null, Object(c.d)("Something went wrong", "GiftRecipientSearchResult")))
                    }, t.prototype.getUserResultContent = function() {
                        var e = this;
                        return this.props.userResults ? this.props.userResults.results.map(function(t) {
                            var n = Object(x.a)(t.login || "", t.name || "");
                            return a.createElement(S.Ja, {
                                tabIndex: -1,
                                "data-ts_selectable": !0,
                                "data-tt_content": !0,
                                key: "git-recipient-result__" + t.id,
                                "data-user_id": t.id,
                                "data-user_login": t.login,
                                "data-user_name": t.name,
                                onClick: e.onUserClick,
                                "data-test-selector": "subscribe-button__gift_search_result"
                            }, a.createElement(S.Ma, {
                                padding: .5
                            }, a.createElement(S.C, {
                                row: !0
                            }, a.createElement(S.E, {
                                alt: t.thumbnailAltText,
                                src: t.thumbnail ? t.thumbnail : "",
                                size: S.F.Size4,
                                aspect: S.l.Aspect1x1
                            }), a.createElement(S.D, {
                                overflow: S.Pa.Hidden
                            }, a.createElement(S.Fa, {
                                padding: {
                                    x: 1
                                }
                            }, a.createElement(S.Q, {
                                type: S.Gb.H5,
                                ellipsis: !0
                            }, n))))))
                        }) : a.createElement(S.Va, null)
                    }, t.prototype.getNoResultsMessage = function() {
                        return a.createElement(S.Ma, {
                            margin: 1
                        }, a.createElement(S.Q, {
                            color: S.K.Alt2
                        }, Object(c.d)("No Results", "GiftRecipientSearchResult")))
                    }, t = r.c([Object(l.c)("GiftRecipientSearchResultPanel")], t)
                }(a.Component)),
                z = (n("DNc1"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleChange = function(e) {
                            t.props.onChange(e.target.value)
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        if (this.props.selectedSubProduct) {
                            var e = null;
                            if (this.props.selectedSubProduct && this.props.selectedSubProduct.giftPromotion) {
                                var t = this.props.selectedSubProduct && this.props.selectedSubProduct.giftPromotion ? this.props.selectedSubProduct.giftPromotion : null;
                                e = a.createElement(S.Q, {
                                    bold: !0,
                                    className: "subscription-gift-recipient-search__discount-message"
                                }, Object(c.d)("{price} (Save {percent})", {
                                    price: t ? t.newPrice : "",
                                    percent: Object(c.e)(t ? t.discountValue / 100 : 0, "percent")
                                }, "GiftRecipientSearch"))
                            }
                            var n = "gift-recipient-search-subheading-selector",
                                i = Object(c.d)("{subDisplayName}: {giftPrice} Gift Subscription (Single Month)", {
                                    subDisplayName: this.props.selectedSubProduct ? this.props.selectedSubProduct.displayName : "",
                                    giftPrice: this.props.selectedSubProduct ? this.props.selectedSubProduct.price : ""
                                }, "GiftRecipientSearch");
                            return this.props.isEsportChannel && (n = "gift-recipient-search-esports-subheading-selector", i = Object(c.d)("Overwatch League: {giftPrice} All-Access Pass for current season", {
                                giftPrice: this.props.selectedSubProduct ? this.props.selectedSubProduct.price : ""
                            }, "GiftRecipientSearch")), a.createElement(S.Ma, {
                                padding: 2,
                                className: "subscription-gift-recipient-search"
                            }, a.createElement(S.Ma, null, a.createElement(S.Ma, {
                                display: S.R.Flex,
                                justifyContent: S.La.Between,
                                alignItems: S.c.Center,
                                margin: {
                                    bottom: 1
                                }
                            }, a.createElement(S.Q, {
                                type: S.Gb.H4,
                                bold: !0
                            }, Object(c.d)("Choose a Gift Recipient", "GiftRecipientSearch")), a.createElement(S.v, {
                                type: S.B.Text,
                                "data-a-target": "subscribe-back-button",
                                icon: S.gb.AngleLeft,
                                onClick: this.props.onBack,
                                "data-test-selector": "gift-recipient-search-back-button"
                            }, a.createElement(S.Ma, {
                                alignItems: S.c.Center,
                                display: S.R.InlineFlex
                            }, a.createElement(S.Q, null, Object(c.d)("Back", "GiftRecipientSearch"))))), a.createElement(S.Ma, null, a.createElement(S.Q, {
                                "data-test-selector": n
                            }, i), e, a.createElement(S.Ma, {
                                display: S.R.Flex,
                                justifyContent: S.La.Center,
                                padding: {
                                    top: 1
                                },
                                fullWidth: !0
                            }, a.createElement(S.Fa, {
                                fullWidth: !0
                            }, a.createElement("div", null, a.createElement(S.ib, {
                                onChange: this.handleChange,
                                onKeyDown: this.props.onKeyDown,
                                id: "gift-recipient-search",
                                placeholder: Object(c.d)("Search for a Twitch ID", "GiftRecipientSearch"),
                                "data-test-selector": "gift-recipient-search-input-selector"
                            }), a.createElement(j, {
                                hasInput: this.props.hasInput,
                                userResults: this.props.userResults,
                                isErrored: this.props.isErrored,
                                isWaiting: this.props.isWaiting,
                                loadMore: this.props.loadMore,
                                onKeyDown: this.props.onKeyDown,
                                selectedProductId: this.props.selectedSubProduct.id,
                                selectedProductURL: this.props.selectedSubProduct.url,
                                selectedProductPrice: this.props.selectedSubProduct.price,
                                reportSubMenuAction: this.props.reportSubMenuAction,
                                isEsportChannel: this.props.isEsportChannel
                            })))))))
                        }
                        return a.createElement(S.Va, null)
                    }, t
                }(a.Component)),
                W = 50,
                V = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.onChange = function(e) {
                            n.inputTimer && (clearTimeout(n.inputTimer), n.inputTimer = 0), e ? (n.setState({
                                isWaiting: !0
                            }), n.inputTimer = setTimeout(function() {
                                return n.doSearch(e)
                            }, W)) : n.setState(n.getEmptyState())
                        }, n.loadMore = function() {
                            return r.b(n, void 0, void 0, function() {
                                var e, t, n;
                                return r.e(this, function(i) {
                                    switch (i.label) {
                                        case 0:
                                            if (this.state.queryID || !0 === this.state.exhaustedHits) return [2];
                                            e = this.state.currentPage + 1, i.label = 1;
                                        case 1:
                                            return i.trys.push([1, 3, , 4]), [4, this.searchClient.queryForType(O.a.Users, this.state.term, "", {
                                                page: e
                                            })];
                                        case 2:
                                            return t = i.sent(), [3, 4];
                                        case 3:
                                            return i.sent(), this.setState(r.a({}, this.getEmptyState(), {
                                                isErrored: !0,
                                                hasInput: !0
                                            })), [2];
                                        case 4:
                                            return t ? (n = Object(D.b)({
                                                searchResults: t,
                                                append: e > 0,
                                                currentUserResults: this.state.currentUserResults
                                            }), this.setState({
                                                currentUserResults: n.currentUserResults,
                                                term: this.state.term,
                                                hasInput: !0,
                                                isWaiting: !1,
                                                currentPage: e,
                                                exhaustedHits: n.exhaustedHits
                                            }), [2]) : (this.setState(r.a({}, this.getEmptyState(), {
                                                isErrored: !0,
                                                hasInput: !0
                                            })), [2])
                                    }
                                })
                            })
                        }, n.onKeyDown = function(e) {
                            n.state.term && (e.keyCode === _.a.Esc ? n.setState({
                                hasInput: !1
                            }) : e.keyCode === _.a.Up ? n.focusNext(-1) : e.keyCode === _.a.Down && n.focusNext(1))
                        }, n.state = n.getEmptyState(), n.searchClient = new I.a({
                            appId: c.a.algoliaApplicationID,
                            apiKey: c.a.algoliaAPIKey,
                            apolloClient: c.o.apollo.client,
                            logger: c.j,
                            config: c.a,
                            stats: c.o.stats
                        }), n
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(z, {
                            onChange: this.onChange,
                            loadMore: this.loadMore,
                            onKeyDown: this.onKeyDown,
                            userResults: this.state.currentUserResults,
                            hasInput: this.state.hasInput,
                            isErrored: this.state.isErrored,
                            isWaiting: this.state.isWaiting,
                            onBack: this.props.onBack,
                            selectedSubProduct: this.props.selectedSubProduct,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            isEsportChannel: this.props.isEsportChannel
                        })
                    }, t.prototype.getEmptyState = function() {
                        return {
                            currentUserResults: {
                                totalHits: 0,
                                results: []
                            },
                            term: "",
                            hasInput: !1,
                            isErrored: !1,
                            queryID: "",
                            isWaiting: !1,
                            currentPage: -1,
                            focusSelectable: !1,
                            exhaustedHits: !1
                        }
                    }, t.prototype.doSearch = function(e) {
                        return r.b(this, void 0, void 0, function() {
                            var t, n, i, a, o;
                            return r.e(this, function(s) {
                                switch (s.label) {
                                    case 0:
                                        this.inputTimer = 0, t = -1, n = R.a(), i = "INPUT" === document.activeElement.tagName, this.setState({
                                            queryID: n,
                                            focusSelectable: !i && !!this.state.currentFocus
                                        }), s.label = 1;
                                    case 1:
                                        return s.trys.push([1, 3, , 4]), t = 0, [4, this.searchClient.queryForType(O.a.Users, e, n)];
                                    case 2:
                                        return a = s.sent(), [3, 4];
                                    case 3:
                                        return s.sent(), this.setState(r.a({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            hasInput: !0,
                                            term: e
                                        })), [2];
                                    case 4:
                                        return a ? this.state.queryID !== a.id ? [2] : (o = Object(D.b)({
                                            searchResults: a,
                                            append: !1
                                        }), this.setState(function(n) {
                                            return r.a({}, n, o, {
                                                queryID: "",
                                                term: e,
                                                hasInput: !0,
                                                isWaiting: !1,
                                                currentPage: t
                                            })
                                        }), [2]) : (this.setState(r.a({}, this.getEmptyState(), {
                                            isErrored: !0,
                                            hasInput: !0,
                                            term: e
                                        })), [2])
                                }
                            })
                        })
                    }, t.prototype.focusNext = function(e) {
                        var t, n = document.querySelectorAll("[data-ts_selectable=true]"),
                            i = document.activeElement,
                            r = Array.prototype.indexOf.call(n, i);
                        if ((t = r < 0 ? e > 0 ? 0 : n.length - 1 : r + e) < 0 && (t = 0), !(t >= n.length)) {
                            var a = n.item(t);
                            a.focus(), a.tabIndex = 0, this.state.currentFocus && (this.state.currentFocus.tabIndex = -1), this.setState({
                                currentFocus: a
                            })
                        }
                    }, t = r.c([Object(l.c)("GiftRecipientSearch")], t)
                }(a.Component);
            ! function(e) {
                e[e.Top = 0] = "Top", e[e.SubOptions = 1] = "SubOptions", e[e.GiftOptions = 2] = "GiftOptions", e[e.RecipientSelect = 3] = "RecipientSelect"
            }(i || (i = {}));
            var H = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.goToPreviousPage = function() {
                            t.props.reportSubMenuAction({
                                action: B.a.ClickBack,
                                modalLevel: t.props.currentPage === i.SubOptions || t.props.currentPage === i.GiftOptions ? "top_page" : "second_page"
                            }), t.props.currentPage !== i.RecipientSelect || t.props.showTop()
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return this.props.currentPage === i.RecipientSelect ? this.getGiftRecipientSearchPage() : this.props.isSubscribed ? this.getSubbedTopPage() : this.getUnsubbedTopPage()
                    }, t.prototype.getSubbedTopPage = function() {
                        return a.createElement(T, {
                            showRecipientSelect: this.props.showRecipientSelect
                        })
                    }, t.prototype.getUnsubbedTopPage = function() {
                        return a.createElement(N, {
                            channelLogin: this.props.channelLogin,
                            handleTopPageSubButtonClick: this.props.handleTopPageSubButtonClick,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            subscriptionProducts: this.props.subscriptionProducts ? this.props.subscriptionProducts : [],
                            userHasPrime: this.props.userHasPrime,
                            showRecipientSelect: this.props.showRecipientSelect
                        })
                    }, t.prototype.getGiftRecipientSearchPage = function() {
                        return this.props.subscriptionProducts ? a.createElement(V, {
                            key: "gift-recipient-search-page",
                            onBack: this.goToPreviousPage,
                            selectedSubProduct: this.props.subscriptionProducts[0],
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            isEsportChannel: !0
                        }) : null
                    }, t
                }(a.Component),
                G = n("L+W6"),
                q = n("AXRb"),
                Q = function(e) {
                    var t = null,
                        n = null,
                        i = null,
                        r = e.subscriptionProducts[0].price;
                    if (Object(C.d)(e.subscriptionProducts) && (r = Object(C.a)(e.subscriptionProducts[0])), e.channelLogin && (e.inPrimeRegion || e.userHasPrime)) {
                        var o = e.userHasPrime ? Object(c.d)("Use your free channel subscription to directly support your favorite streamer. {upsellTextLink}", {
                            upsellTextLink: a.createElement("a", {
                                href: "https://help.twitch.tv/customer/en/portal/articles/2572060-twitch-prime-guide",
                                target: "_blank"
                            }, Object(c.d)("Learn more about your free sub", "NonSubbedTopPage"))
                        }, "NonSubbedTopPage") : Object(c.d)("{upsellTextBold}, plus get free game loot every month, ad-free viewing, and loads more with Twitch Prime.", {
                            upsellTextBold: a.createElement("strong", null, Object(c.d)("Support your favorite streamer", "NonSubbedTopPage"))
                        }, "NonSubbedTopPage");
                        i = a.createElement(S.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0
                        }, Object(c.d)("Free Channel Sub with Twitch Prime", "NonSubbedTopPage"))), a.createElement(S.Ma, null, a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            },
                            "data-test-selector": "prime-sub-upsell"
                        }, a.createElement(S.Q, null, o)), a.createElement(q.a, {
                            "data-a-target": "subscribe-with-prime-button",
                            reportSubMenuAction: e.reportSubMenuAction,
                            channelLogin: e.channelLogin
                        })))
                    }
                    if (!e.isNonStandardSub) {
                        var s = Object(c.d)("More Paid Subscription Options", "NonSubbedTopPage");
                        t = a.createElement(S.Ma, {
                            margin: {
                                right: 1
                            },
                            display: S.R.Inline
                        }, a.createElement(S.v, {
                            ariaLabel: s,
                            onClick: e.showSubOptions,
                            type: S.B.Hollow,
                            "data-test-selector": "subscribe-button__more-sub-options-button",
                            "data-a-target": "see-more-sub-options-button"
                        }, s));
                        var l = Object(c.d)("Gift a Subscription", "NonSubbedTopPage");
                        n = a.createElement(S.Ma, {
                            display: S.R.Inline
                        }, a.createElement(S.v, {
                            ariaLabel: l,
                            onClick: e.showGiftOptions,
                            type: S.B.Hollow,
                            "data-test-selector": "subscribe-button__gift"
                        }, l))
                    }
                    return a.createElement(S.Ma, {
                        padding: 2
                    }, i, a.createElement(S.Ma, null, a.createElement(S.Q, {
                        type: S.Gb.H4,
                        bold: !0
                    }, Object(c.d)("Paid Subscription", "NonSubbedTopPage")), a.createElement(G.a, {
                        subscriptionProduct: e.subscriptionProducts[0]
                    }), a.createElement(S.Ma, {
                        display: S.R.Flex
                    }, a.createElement(S.Ma, {
                        margin: {
                            right: 1,
                            top: 1
                        }
                    }, a.createElement(E.a, {
                        isSubbedToTier: !1,
                        tierPrice: r,
                        "data-a-target": "tier1-subscribe-button",
                        reportSubAction: e.handleTopPageSubButtonClick,
                        url: e.subscriptionProducts[0].url
                    })))), a.createElement(S.Ma, {
                        margin: {
                            right: 1,
                            top: 2
                        }
                    }, t, n))
                },
                K = n("DqL7"),
                Y = function(e) {
                    return a.createElement(S.Ma, {
                        padding: 2
                    }, a.createElement(S.Ma, null, a.createElement(S.Ma, {
                        display: S.R.Flex,
                        justifyContent: S.La.Between,
                        alignItems: S.c.Center,
                        fullWidth: !0
                    }, a.createElement(S.Q, {
                        type: S.Gb.H4,
                        bold: !0
                    }, e.header), a.createElement(S.v, {
                        type: S.B.Text,
                        "data-a-target": "subscribe-back-button",
                        "data-test-selector": "subscribe-button__back-button",
                        icon: S.gb.AngleLeft,
                        onClick: e.onBack
                    }, a.createElement(S.Ma, {
                        alignItems: S.c.Center,
                        display: S.R.InlineFlex
                    }, a.createElement(S.Q, null, Object(c.d)("Back", "PaidSubOptions"))))), a.createElement(K.a, {
                        canPrimeSubscribe: !1,
                        channelDisplayName: e.channelDisplayName,
                        isSubscribed: e.isSubscribed,
                        onSelectTierTab: e.onSelectTierTab,
                        isGift: e.isGift,
                        onGiftSelect: e.onGiftSelect,
                        giftRecipient: e.giftRecipient,
                        reportSubMenuAction: e.reportSubMenuAction,
                        subscriptionProducts: e.subscriptionProducts,
                        userHasPrime: !1
                    })))
                },
                X = n("4iu0"),
                $ = (n("BndF"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = "IOS" === this.props.subbedPlatform || "ANDROID" === this.props.subbedPlatform,
                            t = e || this.props.isGift ? null : this.getTopPageUpgradeSection(),
                            n = e ? this.getMobileSubbedSection() : null,
                            i = this.getGiftSection();
                        return a.createElement(S.Ma, {
                            className: "channel-header__subscription-modal-main",
                            padding: 2
                        }, i, n, t)
                    }, t.prototype.getTopPageUpgradeSection = function() {
                        var e = this.props.subbedTier !== f.a.Tier3 ? Object(c.d)("Change Your Subscription", "SubbedTopPage") : this.getSubbedHeader();
                        return a.createElement(S.Ma, null, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0
                        }, e), a.createElement(K.a, {
                            authToken: this.props.authToken,
                            subLogin: this.props.channelLogin,
                            userHasPrime: this.props.userHasPrime,
                            canPrimeSubscribe: this.props.canPrimeSubscribe,
                            channelDisplayName: this.props.channelDisplayName,
                            onSelectTierTab: this.props.onSelectTierTab,
                            subbedTier: this.props.subbedTier,
                            subscriptionProducts: this.props.subscriptionProducts,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            onGiftSelect: this.props.showRecipientSelect,
                            isSubscribed: !0
                        }))
                    }, t.prototype.getMobileSubbedSection = function() {
                        var e = this.getFormattedRenewalDate(),
                            t = this.getFormattedGiftEndDate(),
                            n = 0 === e.length ? Object(c.d)("Tier 1 Subscription, benefits end on {date}", {
                                date: t
                            }, "SubbedTopPage") : Object(c.d)("Tier 1 Subscription, benefits renew on {date}", {
                                date: e
                            }, "SubbedTopPage"),
                            i = Object(c.d)("Subscribed via {platform} Subscriptions", {
                                platform: "IOS" === this.props.subbedPlatform ? "Apple" : "Google"
                            }, "SubbedTopPage"),
                            r = "IOS" === this.props.subbedPlatform ? "https://help.twitch.tv/customer/portal/articles/2921095#ManageiOS" : "https://help.twitch.tv/customer/portal/articles/2935963-how-to-purchase-and-manage-subscriptions-on-android#Manage";
                        return a.createElement(S.Ma, {
                            "data-test-selector": "subscribed-view-mobile"
                        }, a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0
                        }, this.getSubbedHeader())), a.createElement(S.Ma, {
                            margin: {
                                bottom: 1
                            }
                        }, a.createElement(S.Ma, null, n), a.createElement(S.Ma, null, i), a.createElement(S.Ma, null, a.createElement(S.O, {
                            to: r
                        }, Object(c.d)("How do I manage this subscription?", "SubbedTopPage")))))
                    }, t.prototype.getGiftSection = function() {
                        return this.props.giftSender ? this.props.giftSender && !this.props.giftPaidUpgrade ? a.createElement(S.Ma, null, a.createElement(S.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, this.getGiftInfoSection()), this.getGiftExtendSection()) : a.createElement(S.Ma, null, a.createElement(S.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, this.getGiftInfoSection()), this.getTopPageGiftSection()) : a.createElement(S.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, this.getTopPageGiftSection())
                    }, t.prototype.getGiftInfoSection = function() {
                        var e, t, n = null;
                        return this.props.giftPaidUpgrade ? (e = this.getSubbedHeader(), t = Object(c.d)("{giftPrice} Gift Subscription from {giftSender}", {
                            giftPrice: this.getCurrentSubPrice(),
                            giftSender: a.createElement(S.Q, {
                                bold: !0,
                                type: S.Gb.Span
                            }, this.props.giftSender || "")
                        }, "SubbedTopPage"), n = Object(c.d)("Your new {upgradePrice} Paid Subscription will begin on {subStartDate}", {
                            upgradePrice: this.props.giftPaidUpgrade ? this.props.giftPaidUpgrade.price : "",
                            subStartDate: this.getFormattedGiftUpgradeStartDate()
                        }, "SubbedTopPage")) : (e = Object(c.d)("Your Gift Subscription", "SubbedTopPage"), t = Object(c.d)("{giftPrice} Subscription from {giftSender} - Benefits expire on {giftEndDate}", {
                            giftPrice: this.getCurrentSubPrice(),
                            giftSender: a.createElement(S.Q, {
                                bold: !0,
                                type: S.Gb.Span
                            }, this.props.giftSender || ""),
                            giftEndDate: this.getFormattedGiftEndDate()
                        }, "SubbedTopPage")), a.createElement(S.Ma, null, a.createElement(S.Q, {
                            bold: !0,
                            type: S.Gb.H4
                        }, e), a.createElement(S.Fa, {
                            margin: {
                                y: 1
                            }
                        }, a.createElement(S.Q, null, t)), a.createElement(S.Q, {
                            className: "balloon-subscribed-user__gift-upgrade-info",
                            bold: !0
                        }, n))
                    }, t.prototype.getGiftExtendSection = function() {
                        var e, t = null;
                        if (!this.props.isNonStandardSub) {
                            var n = Object(c.d)("More Paid Subscription Options", "SubbedTopPage");
                            t = a.createElement(S.Ma, {
                                margin: {
                                    right: 1
                                },
                                display: S.R.Inline
                            }, a.createElement(S.v, {
                                ariaLabel: n,
                                onClick: this.props.showSubOptions,
                                type: S.B.Hollow,
                                "data-a-target": "see-more-sub-options-button"
                            }, n))
                        }
                        var i = this.getGiftMessage();
                        return e = a.createElement(S.Ma, {
                            display: S.R.Inline
                        }, a.createElement(S.v, {
                            "data-test-selector": "subscribe-button__gift",
                            ariaLabel: i,
                            onClick: this.props.showGiftOptions,
                            type: S.B.Hollow
                        }, i)), a.createElement(S.Ma, null, a.createElement(S.Ma, {
                            margin: {
                                top: 1
                            }
                        }, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0
                        }, Object(c.d)("Extend Your Subscription", "SubbedTopPage")), a.createElement(S.Fa, {
                            margin: {
                                top: 1
                            }
                        }, a.createElement(S.Q, null, Object(c.d)("{price} / Month", {
                            price: this.props.subscriptionProducts[0].price
                        }, "SubbedTopPage"))), a.createElement(S.Ma, {
                            margin: {
                                right: 1,
                                top: 1
                            }
                        }, a.createElement(S.v, {
                            ariaLabel: this.props.subscriptionProducts[0].price,
                            "data-a-target": "tier1-subscribe-button",
                            linkTo: this.props.subscriptionProducts[0].url,
                            onClick: this.props.handleTopPageSubButtonClick,
                            purchase: this.props.subscriptionProducts[0].price,
                            targetBlank: !0
                        }, Object(c.d)("Subscribe Now", "SubbedTopPage")))), a.createElement(S.Ma, {
                            margin: {
                                right: 1,
                                top: 2
                            }
                        }, t, e))
                    }, t.prototype.getTopPageGiftSection = function() {
                        var e = this.props.subscriptionProducts[0].price;
                        Object(C.c)(this.props.subscriptionProducts) && (e = Object(C.a)(this.props.subscriptionProducts[0], !0));
                        var t = this.getGiftMessage(),
                            n = Object(c.d)("More Gift Options", "SubbedTopPage");
                        return a.createElement(S.Ma, null, a.createElement(S.Q, {
                            type: S.Gb.H4,
                            bold: !0
                        }, Object(c.d)("Help Grow {streamer}'s Community", {
                            streamer: this.props.channelDisplayName
                        }, "SubbedTopPage")), a.createElement(S.Ma, {
                            margin: {
                                top: 1,
                                bottom: 1
                            },
                            display: S.R.Flex
                        }, a.createElement(S.v, {
                            ariaLabel: t + " " + e,
                            onClick: this.props.onGiftSelect,
                            purchase: e
                        }, t), a.createElement(S.Ma, {
                            margin: {
                                left: 1
                            }
                        }, a.createElement(S.v, {
                            ariaLabel: n,
                            onClick: this.props.showGiftOptions,
                            type: S.B.Hollow
                        }, n))))
                    }, t.prototype.getFormattedGiftUpgradeStartDate = function() {
                        var e = "";
                        if (this.props.giftPaidUpgrade && this.props.giftPaidUpgrade.startsAt) try {
                            e = Object(c.c)(new Date(this.props.giftPaidUpgrade.startsAt), {
                                month: "long",
                                day: "numeric"
                            })
                        } catch (t) {
                            c.j.debug(t, "There was an error formatting gift upgrade start date."), e = ""
                        }
                        return e
                    }, t.prototype.getFormattedGiftEndDate = function() {
                        var e = "";
                        if (this.props.subEndDate) try {
                            e = Object(c.c)(new Date(this.props.subEndDate), {
                                month: "long",
                                day: "numeric"
                            })
                        } catch (t) {
                            c.j.debug(t, "There was an error formatting gift end date."), e = ""
                        }
                        return e
                    }, t.prototype.getFormattedRenewalDate = function() {
                        var e = "";
                        if (this.props.renewsAt) try {
                            e = Object(c.c)(new Date(this.props.renewsAt), {
                                month: "long",
                                day: "numeric"
                            })
                        } catch (t) {
                            c.j.debug(t, "There was an error formatting sub renewal date."), e = ""
                        }
                        return e
                    }, t.prototype.getCurrentSubPrice = function() {
                        switch (this.props.subbedTier) {
                            case f.a.Tier1:
                                return this.props.subscriptionProducts[0].price;
                            case f.a.Tier2:
                                return this.props.subscriptionProducts[1].price;
                            case f.a.Tier3:
                                return this.props.subscriptionProducts[2].price;
                            default:
                                return this.props.subscriptionProducts[0].price
                        }
                    }, t.prototype.getSubbedHeader = function() {
                        return Object(c.d)("Your Subscription", "SubbedTopPage")
                    }, t.prototype.getGiftMessage = function() {
                        return Object(c.d)("Gift A Subscription", "SubbedTopPage")
                    }, t
                }(a.Component));
            n("7deH");
            var J, Z = n("wEyv"),
                ee = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            currentPage: i.Top,
                            selectedSubProductIndex: 0,
                            giftShortcut: !1
                        }, t.showTop = function() {
                            t.setState(function() {
                                return {
                                    currentPage: i.Top
                                }
                            })
                        }, t.showRecipientSelect = function() {
                            t.setState(function() {
                                return {
                                    currentPage: i.RecipientSelect
                                }
                            })
                        }, t.showGiftOptions = function() {
                            t.props.reportSubMenuAction({
                                action: B.a.ClickGiftSubOptions,
                                modalLevel: "second_page"
                            }), t.setState(function() {
                                return {
                                    currentPage: i.GiftOptions
                                }
                            })
                        }, t.showSubOptions = function() {
                            t.props.reportSubMenuAction({
                                action: B.a.ClickMoreSubOptions,
                                modalLevel: "second_page"
                            }), t.setState(function() {
                                return {
                                    currentPage: i.SubOptions
                                }
                            })
                        }, t.goToPreviousPage = function() {
                            if (t.props.reportSubMenuAction({
                                    action: B.a.ClickBack,
                                    modalLevel: t.state.currentPage === i.SubOptions || t.state.currentPage === i.GiftOptions ? "top_page" : "second_page"
                                }), t.state.currentPage === i.GiftOptions || t.state.currentPage === i.SubOptions || t.state.giftShortcut) return t.showTop(), void t.setState({
                                giftShortcut: !1
                            });
                            t.state.currentPage !== i.RecipientSelect || t.showGiftOptions()
                        }, t.onGiftSelect = function() {
                            if (!t.props.data.user || !t.props.data.user.subscriptionProducts) return null;
                            t.state.currentPage === i.Top ? t.setState({
                                giftShortcut: !0,
                                selectedSubProductIndex: 0
                            }) : t.setState({
                                giftShortcut: !1
                            }), t.props.reportSubMenuAction({
                                action: B.a.GiftASub,
                                checkoutButtonTier: t.props.data.user.subscriptionProducts[t.state.selectedSubProductIndex].price
                            }), t.showRecipientSelect()
                        }, t.onSelectTierTab = function(e) {
                            if (!t.props.data.user || !t.props.data.user.subscriptionProducts) return null;
                            var n, i;
                            t.tabToSubProduct || (t.tabToSubProduct = (n = t.props.data.user.subscriptionProducts, (i = new Map).set(K.b.Prime, null), n.forEach(function(e, t) {
                                i.set(t + 1, e)
                            }), i));
                            var r = t.tabToSubProduct.get(e);
                            if (r) {
                                var a = t.props.data.user.subscriptionProducts.findIndex(function(e) {
                                    return e.price === r.price
                                });
                                a !== t.state.selectedSubProductIndex && t.setState({
                                    selectedSubProductIndex: a
                                }), t.props.onSelectTierTab(r.price)
                            } else t.props.onSelectTierTab(f.a.Prime)
                        }, t.handleTopPageSubButtonClick = function() {
                            if (!t.props.data.user || !t.props.data.user.subscriptionProducts) return null;
                            t.props.reportSubMenuAction({
                                action: B.a.ClickCheckout,
                                checkoutButtonTier: t.props.data.user.subscriptionProducts[0].price
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        e.channelLogin !== this.props.channelLogin && this.setState({
                            currentPage: i.Top,
                            selectedSubProductIndex: 0,
                            giftShortcut: !1
                        })
                    }, t.prototype.render = function() {
                        if (this.props.data.loading) return c.j.debug("NOT rendering sub balloon; sub data not yet ready", {
                            state: this.state
                        }), a.createElement(S.Ma, {
                            display: S.R.Flex,
                            alignItems: S.c.Center,
                            justifyContent: S.La.Center,
                            className: "channel-header__subscription-modal"
                        }, a.createElement(S.Oa, {
                            fillContent: !0
                        }));
                        if (!this.props.data.user || !this.props.data.user.subscriptionProducts) return c.j.debug("NOT rendering sub balloon; sub data not yet ready", {
                            state: this.state
                        }), null;
                        c.j.debug("rendering balloon", {
                            state: this.state
                        });
                        var e, t = a.createElement(S.Va, null),
                            n = !1,
                            r = this.props.data.user.subscriptionProducts,
                            o = !0;
                        if (this.props.isEsportChannel) return this.getEsportPage();
                        switch (this.state.currentPage) {
                            case i.Top:
                                if (!this.props.isSubscribed) {
                                    e = this.getUnsubbedTopPage();
                                    break
                                }
                                e = this.getSubbedTopPage(), n = !0;
                                break;
                            case i.SubOptions:
                                if (this.props.isSubscribed) {
                                    e = this.getPaidOptionsPage(!0), o = !1;
                                    break
                                }
                                e = this.getPaidOptionsPage(!1);
                                break;
                            case i.GiftOptions:
                                e = this.getGiftOptionsPage(), n = !0;
                                break;
                            case i.RecipientSelect:
                                e = this.getGiftRecipientSearchPage(), r = [r[this.state.selectedSubProductIndex]], n = !0;
                                break;
                            default:
                                if (!this.props.isSubscribed) {
                                    e = this.getUnsubbedTopPage();
                                    break
                                }
                                e = this.getSubbedTopPage(), n = !0
                        }
                        return o && (t = a.createElement(X.a, {
                            subscriptionProducts: r,
                            isGift: n
                        })), a.createElement(S.Ma, {
                            key: "subscribe-balloon"
                        }, t, e)
                    }, t.prototype.getGiftRecipientSearchPage = function() {
                        return this.props.data.user && this.props.data.user.subscriptionProducts ? a.createElement(V, {
                            key: "gift-recipient-search-page",
                            onBack: this.goToPreviousPage,
                            selectedSubProduct: this.props.data.user.subscriptionProducts[this.state.selectedSubProductIndex],
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            isEsportChannel: this.props.isEsportChannel
                        }) : null
                    }, t.prototype.getGiftOptionsPage = function() {
                        return this.props.data.user && this.props.data.user.subscriptionProducts ? a.createElement(Y, {
                            onBack: this.goToPreviousPage,
                            channelDisplayName: this.props.data.user.displayName,
                            onSelectTierTab: this.onSelectTierTab,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            subscriptionProducts: this.props.data.user.subscriptionProducts,
                            isGift: !0,
                            onGiftSelect: this.onGiftSelect,
                            isSubscribed: !1,
                            header: Object(c.d)("Choose A Gift Subscription", "SubscribeBalloon"),
                            channelLogin: this.props.channelLogin
                        }) : null
                    }, t.prototype.getPaidOptionsPage = function(e) {
                        return this.props.data.user && this.props.data.user.subscriptionProducts ? a.createElement(Y, {
                            onBack: this.goToPreviousPage,
                            channelDisplayName: this.props.data.user.displayName,
                            onSelectTierTab: this.onSelectTierTab,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            subscriptionProducts: this.props.data.user.subscriptionProducts,
                            isSubscribed: e,
                            header: Object(c.d)("All Paid Subscriptions", "SubscribeBalloon"),
                            channelLogin: this.props.channelLogin
                        }) : null
                    }, t.prototype.getSubbedTopPage = function() {
                        if (!this.props.data.user || !this.props.data.user.self || !this.props.data.user.self.subscriptionBenefit) return null;
                        var e = this.props.data.user.self.subscriptionBenefit.gift,
                            t = e && e.isGift ? e.gifter.displayName : null,
                            n = !(!e || !e.isGift);
                        return a.createElement($, {
                            authToken: this.props.authToken,
                            channelLogin: this.props.channelLogin,
                            channelDisplayName: this.props.data.user.displayName,
                            canPrimeSubscribe: !!this.props.data.user.self && this.props.data.user.self.canPrimeSubscribe,
                            isGift: n,
                            handleTopPageSubButtonClick: this.handleTopPageSubButtonClick,
                            isNonStandardSub: this.props.isNonStandardSub,
                            subEndDate: this.props.data.user.self.subscriptionBenefit.endsAt,
                            giftPaidUpgrade: this.props.data.user.self.subscriptionBenefit.paidUpgrade,
                            onGiftSelect: this.onGiftSelect,
                            onSelectTierTab: this.onSelectTierTab,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            showGiftOptions: this.showGiftOptions,
                            showSubOptions: this.showSubOptions,
                            subbedPlatform: this.props.data.user.self.subscriptionBenefit.platform,
                            renewsAt: this.props.data.user.self.subscriptionBenefit.renewsAt,
                            showRecipientSelect: this.showRecipientSelect,
                            subbedTier: this.props.subbedTier,
                            giftSender: t,
                            subscriptionProducts: this.props.data.user ? this.props.data.user.subscriptionProducts : [],
                            userHasPrime: !!this.props.data.currentUser && this.props.data.currentUser.hasPrime
                        })
                    }, t.prototype.getUnsubbedTopPage = function() {
                        return this.props.data.user ? a.createElement(Q, {
                            authToken: this.props.authToken,
                            channelLogin: this.props.channelLogin,
                            canPrimeSubscribe: !!this.props.data.user.self && this.props.data.user.self.canPrimeSubscribe,
                            handleTopPageSubButtonClick: this.handleTopPageSubButtonClick,
                            inPrimeRegion: this.props.inPrimeRegion,
                            isNonStandardSub: this.props.isNonStandardSub,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            showGiftOptions: this.showGiftOptions,
                            showSubOptions: this.showSubOptions,
                            subscriptionProducts: this.props.data.user ? this.props.data.user.subscriptionProducts : [],
                            userHasPrime: !!this.props.data.currentUser && this.props.data.currentUser.hasPrime
                        }) : null
                    }, t.prototype.getEsportPage = function() {
                        return this.props.data.user ? a.createElement(S.Ma, {
                            key: "subscribe-balloon"
                        }, a.createElement(H, {
                            channelLogin: this.props.channelLogin,
                            handleTopPageSubButtonClick: this.handleTopPageSubButtonClick,
                            reportSubMenuAction: this.props.reportSubMenuAction,
                            subscriptionProducts: this.props.data.user ? this.props.data.user.subscriptionProducts : [],
                            isSubscribed: this.props.isSubscribed,
                            userHasPrime: !!this.props.data.currentUser && this.props.data.currentUser.hasPrime,
                            currentPage: this.state.currentPage,
                            showTop: this.showTop,
                            showRecipientSelect: this.showRecipientSelect
                        })) : null
                    }, t = r.c([Object(m.a)(Z, {
                        options: function(e) {
                            return {
                                fetchPolicy: "network-only",
                                variables: {
                                    login: e.channelLogin
                                }
                            }
                        },
                        skip: function(e) {
                            return !e.channelLogin
                        }
                    }), Object(l.c)("SubscribeBalloon")], t)
                }(a.Component),
                te = n("z+dA");
            ! function(e) {
                e.SubButton = "subscribe-button__dropdown", e.BalloonLayerButton = "subscribe-button__balloon-layer-btn", e.DefaultButton = "subscribe-button__default-btn"
            }(J || (J = {}));
            var ne = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            activeTierPrice: null,
                            inPrimeRegion: !1
                        }, t.modalLevel = "top_page", t.renderBalloonContentForBalloonLayer = function() {
                            return a.createElement(u.a, {
                                onClickOut: t.handleBalloonClickOut
                            }, a.createElement(S.Ma, {
                                "data-a-target": "sub-balloon",
                                refDelegate: t.setBalloonContentRefDelegate
                            }, t.balloonWrapperContent))
                        }, t.handleButtonClick = function() {
                            t.balloonContentRef ? Object(d.b)({
                                force: !0
                            }) : Object(d.c)({
                                direction: t.getBalloonDirection(),
                                ref: t.containerRef,
                                content: t.renderBalloonContentForBalloonLayer(),
                                contentHeight: 0,
                                persistOnMouseExit: !0
                            })
                        }, t.handleBalloonClickOut = function() {
                            Object(d.b)({
                                force: !0
                            })
                        }, t.setBalloonWrapperContent = function(e) {
                            t.balloonWrapperContent = e
                        }, t.reportSubMenuAction = function(e) {
                            var n = !!(t.props.data.user && t.props.data.user.self && t.props.data.user.self.subscriptionBenefit),
                                i = t.props.data.requestInfo && Object(v.a)(t.props.data.requestInfo.countryCode);
                            Object(B.b)({
                                action: e.action || "",
                                channelLogin: t.props.channelLogin || "",
                                channelID: t.props.data && t.props.data.user.id,
                                checkoutButtonTier: e.checkoutButtonTier || (t.state.activeTierPrice || f.a.Prime).slice(),
                                hasSubCredit: !!t.props.data.user.self && t.props.data.user.self.canPrimeSubscribe,
                                hostChannelID: t.props.hostChannelID,
                                hostChannelLogin: t.props.hostChannelLogin,
                                isMenuOpen: !(e.action === B.a.OpenSubMenu),
                                sub_location: "channel_page",
                                modal: !n,
                                modalLevel: n ? "" : t.modalLevel.slice(),
                                showPrimeContent: i,
                                giftRecipient: e.giftRecipient || null
                            }), !e.modalLevel || e.action !== B.a.ClickMoreSubOptions && e.action !== B.a.ClickBack || (t.modalLevel = e.modalLevel, t.setState({
                                activeTierPrice: f.a.Prime
                            }))
                        }, t.handleMenuToggle = function(e) {
                            t.reportSubMenuAction({
                                action: e ? B.a.CloseSubMenu : B.a.OpenSubMenu
                            })
                        }, t.onSelectTierTab = function(e) {
                            t.state.activeTierPrice !== e && t.setState({
                                activeTierPrice: e
                            })
                        }, t.getBalloonDirection = function() {
                            var e = t.props.balloonDirection || S.r.BottomRight;
                            return t.props.hostChannelID && (e = S.r.TopLeft), e
                        }, t.setContainerRefDelegate = function(e) {
                            t.containerRef = e
                        }, t.setBalloonContentRefDelegate = function(e) {
                            t.balloonContentRef = e
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.reportInteractive && this.isUserDataReady(this.props) && this.props.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.channelLogin && !this.isUserDataReady(this.props) || !this.props.updateContainerWidth || this.props.updateContainerWidth(), this.props.reportInteractive && this.props.data && !this.props.data.loading && this.props.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.isUserDataReady(e) && e.pubsub.messages.subscriptionInfo !== this.props.pubsub.messages.subscriptionInfo && this.props.data.refetch()
                    }, t.prototype.render = function() {
                        if (!this.isUserDataReady(this.props) || !this.hasSubscriptionProducts(this.props)) return null;
                        if (this.props.hideEsportsSubscription && Object(g.a)(this.props.data.user.id, this.props.sessionUser)) return null;
                        var e = this.props.data.requestInfo && Object(v.a)(this.props.data.requestInfo.countryCode),
                            t = !!(this.props.data.user && this.props.data.user.self && this.props.data.user.self.subscriptionBenefit),
                            n = Object(g.a)(this.props.data.user.id, this.props.sessionUser),
                            i = 1 === this.props.data.user.subscriptionProducts.length,
                            r = null;
                        this.props.data.user.self && this.props.data.user.self.subscriptionBenefit && (r = this.props.data.user.self.subscriptionBenefit.purchasedWithPrime ? f.a.Prime : this.props.data.user.self.subscriptionBenefit.tier, this.modalLevel = ""), this.props.data.user.subscriptionProducts.some(this.isSubscriptionProductInvalid) && (i = !0);
                        var o, s = t ? Object(c.d)("All-Access Pass", "SubscribeButton") : Object(c.d)("Get the All-Access Pass", "SubscribeButton");
                        if (t) {
                            var l = i ? Object(c.d)("Subscribed", "SubscribeButton") : Object(c.d)("Gift A Sub", "SubscribeButton");
                            if (o = this.props.hostChannelID ? Object(c.d)("Subscribed to {username}", {
                                    username: this.props.data.user.displayName
                                }, "SubscribeButton") : l, i && !n) return a.createElement(S.v, {
                                disabled: !0,
                                ariaLabel: o,
                                icon: S.gb.Star
                            }, o);
                            n && (o = s)
                        } else o = n ? s : this.props.hostChannelID ? Object(c.d)("Subscribe to {username}", {
                            username: this.props.data.user.displayName
                        }, "SubscribeButton") : Object(c.d)("Subscribe", "SubscribeButton");
                        var d = t ? "subscribed-button" : "subscribe-button",
                            u = a.createElement(S.v, {
                                "data-a-target": d,
                                "data-test-selector": J.SubButton,
                                ariaLabel: o,
                                type: this.getButtonType(t),
                                dropdown: !this.props.hideDropdownArrow,
                                fullWidth: !0,
                                icon: this.getButtonIcon(t, r),
                                onClick: this.props.renderBalloonInBalloonLayer ? this.handleButtonClick : void 0
                            }, o);
                        return this.setBalloonWrapperContent(a.createElement(ee, {
                            authToken: this.props.authToken,
                            channelLogin: this.props.channelLogin || "",
                            inPrimeRegion: e,
                            isNonStandardSub: i,
                            onSelectTierTab: this.onSelectTierTab,
                            reportSubMenuAction: this.reportSubMenuAction,
                            subbedTier: r || f.a.Prime,
                            userHasPrime: !1,
                            isSubscribed: t,
                            isEsportChannel: n
                        })), this.props.renderBalloonInBalloonLayer ? a.createElement(S.Ma, {
                            "data-test-selector": J.BalloonLayerButton,
                            refDelegate: this.setContainerRefDelegate
                        }, u) : a.createElement(p.a, {
                            onToggle: this.handleMenuToggle,
                            "data-test-selector": J.DefaultButton
                        }, u, a.createElement(S.q, {
                            size: S.s.Large,
                            direction: this.getBalloonDirection(),
                            "data-a-target": "sub-balloon"
                        }, this.balloonWrapperContent))
                    }, t.prototype.getButtonType = function(e) {
                        var t = S.B.Default;
                        return this.props.buttonType ? t = this.props.buttonType : e && (t = S.B.Success), t
                    }, t.prototype.getButtonIcon = function(e, t) {
                        var n = this.props.buttonType && this.props.buttonType === S.B.Hollow ? S.gb.StarHollow : void 0;
                        return e && (n = t === f.a.Prime ? S.gb.Crown : S.gb.Star), n
                    }, t.prototype.hasSubscriptionProducts = function(e) {
                        return e.data.user.subscriptionProducts && e.data.user.subscriptionProducts.length > 0
                    }, t.prototype.isUserDataReady = function(e) {
                        return e.data && e.data.user && !e.data.loading && !e.data.error
                    }, t.prototype.isSubscriptionProductInvalid = function(e) {
                        return !e.emoteSetID
                    }, t = r.c([Object(m.a)(te, {
                        options: function(e) {
                            return {
                                variables: {
                                    login: e.channelLogin
                                }
                            }
                        },
                        skip: function(e) {
                            return !e.channelLogin
                        }
                    }), Object(h.a)([{
                        topic: function(e) {
                            return Object(b.y)(e.data.currentUser && e.data.currentUser.id || "")
                        },
                        mapMessageTypesToProps: {
                            "*": "subscriptionInfo"
                        },
                        skip: function(e) {
                            return !(e.data && !e.data.loading && !e.data.error && e.data.currentUser)
                        }
                    }])], t)
                }(a.Component),
                ie = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.reportInteractive = function() {
                            t.props.latencyTracking.reportInteractive()
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        return a.createElement(ne, {
                            authToken: this.props.authToken,
                            sessionUser: this.props.sessionUser,
                            hostChannelID: this.props.hostChannelID,
                            hostChannelLogin: this.props.hostChannelLogin,
                            channelLogin: this.props.channelLogin,
                            updateContainerWidth: this.props.updateContainerWidth,
                            hideEsportsSubscription: this.props.hideEsportsSubscription,
                            reportInteractive: this.reportInteractive,
                            hideDropdownArrow: this.props.hideDropdownArrow,
                            buttonType: this.props.buttonType,
                            balloonDirection: this.props.balloonDirection,
                            renderBalloonInBalloonLayer: this.props.renderBalloonInBalloonLayer
                        })
                    }, t = r.c([Object(l.c)("SubscribeButton")], t)
                }(a.Component);
            var re = Object(o.b)(function(e) {
                return {
                    authToken: Object(s.a)(e),
                    sessionUser: Object(s.d)(e)
                }
            })(ie);
            n.d(t, !1, function() {
                return ie
            }), n.d(t, "a", function() {
                return re
            }), n.d(t, !1, function() {
                return J
            }), n.d(t, !1, function() {
                return ne
            })
        },
        QzU5: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Archive = "ARCHIVE", e.Highlight = "HIGHLIGHT", e.Upload = "UPLOAD", e.PastPremiere = "PAST_PREMIERE", e.PremiereUpload = "PREMIERE_UPLOAD"
                }(i || (i = {}))
        },
        R6PH: function(e, t, n) {},
        RPqD: function(e, t, n) {},
        RQ6e: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                a = n("q1tI"),
                o = n("fvjX"),
                s = n("/7QA"),
                l = n("yR8l"),
                c = n("GnwI"),
                d = n("+PZR"),
                u = n("Ue10"),
                p = n("gIsd"),
                m = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleChange = function(e) {
                            t.props.onChange(e.target.value)
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading && !this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = null,
                            t = Object(s.d)("Select One...", "ReportUserModal");
                        this.props.data.loading ? e = [a.createElement("option", {
                            key: "Loading"
                        }, Object(s.d)("Loading...", "ReportReasonsSelect"))] : e = (this.props.data.reportReasons || Object(d.b)()).map(function(e) {
                            return a.createElement("option", {
                                key: e.id,
                                value: e.id
                            }, e.text)
                        });
                        return a.createElement(u.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, a.createElement(u.X, {
                            id: "reporting-modal__select",
                            label: Object(s.d)("Select Reason (required)", "ReportUserModal")
                        }, a.createElement(u.lb, {
                            id: "reporting-modal__select",
                            "data-test-selector": "reporting-modal.select",
                            disabled: this.props.data.loading || !!this.props.data.error,
                            onChange: this.handleChange,
                            defaultValue: t
                        }, a.createElement("option", {
                            disabled: !0,
                            key: "default"
                        }, t), e)))
                    }, t
                }(a.Component),
                h = Object(o.d)(Object(l.a)(p, {
                    options: function(e) {
                        return {
                            variables: {
                                content: e.reportContentType
                            }
                        }
                    }
                }), Object(c.c)("ReportReasonSelect"))(m),
                f = (n("HkFb"), n("GNna"));
            n.d(t, "a", function() {
                return v
            }), n.d(t, "b", function() {
                return g
            }), n.d(t, "c", function() {
                return y
            });
            var g, v = "community_rules_violation";
            ! function(e) {
                e[e.Unsubmitted = 0] = "Unsubmitted", e[e.Success = 1] = "Success", e[e.FormError = 2] = "FormError", e[e.MutationError = 3] = "MutationError", e[e.UserError = 4] = "UserError", e[e.CommunityError = 5] = "CommunityError"
            }(g || (g = {}));
            var b = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            community: null,
                            description: "",
                            reason: null,
                            isCommunityReason: !1,
                            selectedCommunityID: null,
                            selectedCommunityName: null
                        }, t.headerMessage = Object(s.d)("Tell us your concern about this content so that we can review it to determine whether there has been a violation of the {tosLink}. {br} (Abuse of this feature is a violation of the terms of service)", {
                            br: a.createElement("br", null),
                            tosLink: a.createElement("a", {
                                href: "https://www.twitch.tv/p/terms-of-service",
                                target: "_blank"
                            }, Object(s.d)("terms of service", "ReportUser"))
                        }, "ReportUser"), t.selectCommunity = function(e) {
                            t.setState({
                                selectedCommunityID: e.target.value,
                                selectedCommunityName: e.target.getAttribute("data-community-name")
                            })
                        }, t.handleSubmit = function(e) {
                            if (e.preventDefault(), t.state.reason && t.state.description.length > 0) {
                                if (t.state.reason === v && !t.state.selectedCommunityID) {
                                    if (t.props.data.user && !t.props.data.user.directories.nodes.length) return void t.props.onError(g.CommunityError);
                                    t.props.onError(g.FormError)
                                }
                                t.props.onSubmit(t.state.reason || "", t.state.description, t.state.selectedCommunityID, t.state.selectedCommunityName)
                            } else t.props.onError(g.FormError)
                        }, t.handleTextAreaChange = function(e) {
                            t.setState({
                                description: e.target.value
                            })
                        }, t.handleReasonChange = function(e) {
                            if (!t.props.data || t.props.data.loading || t.props.data.error || !t.props.data.user) return null;
                            var n = t.props.data.user.directories ? t.props.data.user.directories.nodes.filter(function(e) {
                                return "COMMUNITY" === e.directoryType
                            }) : [];
                            n.length && e === v ? t.setState({
                                reason: e,
                                selectedCommunityID: n[0].id,
                                selectedCommunityName: n[0].name,
                                isCommunityReason: !0
                            }) : t.setState({
                                reason: e,
                                isCommunityReason: !1
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return a.createElement(u.Ma, {
                            display: u.R.Flex,
                            flexDirection: u.T.Column,
                            alignItems: u.c.Center,
                            justifyContent: u.La.Center
                        }, this.renderStatusMessage(), this.renderBody())
                    }, t.prototype.renderBody = function() {
                        return this.props.submitStatus === g.Success ? a.createElement("div", null, a.createElement(u.v, {
                            onClick: this.props.onClose
                        }, a.createElement(u.Ma, {
                            padding: {
                                x: 2
                            }
                        }, Object(s.d)("Close", "ReportUser")))) : a.createElement("div", null, a.createElement(u.Ma, {
                            "data-test-selector": "reporting.title",
                            margin: {
                                bottom: 1
                            },
                            "data-a-target": "reporting-channel-name"
                        }, a.createElement(u.Q, {
                            type: u.Gb.H4
                        }, this.props.title), a.createElement(u.qb, {
                            color: u.K.Alt2,
                            margin: {
                                top: 1
                            }
                        }, this.headerMessage)), a.createElement("form", null, a.createElement(u.qb, {
                            borderTop: !0,
                            borderBottom: !0,
                            margin: {
                                y: 2
                            },
                            padding: {
                                y: 2
                            }
                        }, a.createElement(h, {
                            reportContentType: this.props.reportContentType,
                            onChange: this.handleReasonChange
                        }), this.renderCommunitiesSelector(), a.createElement(u.X, {
                            id: "reporting__text-area",
                            label: Object(s.d)("Description (required)", "ReportUser")
                        }, a.createElement(u.Db, {
                            defaultValue: this.props.defaultDescription,
                            onChange: this.handleTextAreaChange
                        }))), a.createElement(u.qb, {
                            display: u.R.Flex,
                            justifyContent: u.La.Center
                        }, a.createElement(u.v, {
                            onClick: this.handleSubmit
                        }, a.createElement(u.Ma, {
                            padding: {
                                x: 2
                            }
                        }, Object(s.d)("Send", "ReportUser"))))))
                    }, t.prototype.renderCommunitiesSelector = function() {
                        if (!this.props.data || this.props.data.loading || this.props.data.error || !this.props.data.user) return null;
                        if (this.state.isCommunityReason) {
                            var e = this.props.data.user.directories.nodes.filter(function(e) {
                                return "COMMUNITY" === e.directoryType
                            }).map(function(e) {
                                return a.createElement("option", {
                                    key: e.id,
                                    value: e.id,
                                    "data-community-name": e.name
                                }, e.displayName)
                            });
                            return a.createElement(u.Ma, {
                                margin: {
                                    bottom: 2
                                }
                            }, a.createElement(u.X, {
                                id: "reporting__select-community",
                                label: Object(s.d)("Community", "ReportUser")
                            }, a.createElement(u.lb, {
                                id: "reporting__select-community",
                                "data-test-selector": "reporting.select-community",
                                disabled: this.props.data.loading || !!this.props.data.error,
                                onChange: this.selectCommunity
                            }, e)))
                        }
                    }, t.prototype.renderStatusMessage = function() {
                        var e = null;
                        switch (this.props.submitStatus) {
                            case g.FormError:
                                e = Object(s.d)("Reason and Description are required.", "ReportUser");
                                break;
                            case g.MutationError:
                                e = Object(s.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "ReportUser");
                                break;
                            case g.Success:
                                e = Object(s.d)("Thank you for your report.", "ReportUser");
                                break;
                            case g.UserError:
                                e = Object(s.d)("This account could not be reported. It may have already been suspended, or the owner may have deleted it.", "ReportUser");
                                break;
                            case g.CommunityError:
                                e = Object(s.d)("A report of this type could not be sent because this user has not selected a Community.", "ReportUser");
                                break;
                            default:
                                return null
                        }
                        var t = r({
                            "reporting__error-container": this.props.submitStatus !== g.Success,
                            "reporting__success-container": this.props.submitStatus === g.Success
                        });
                        return a.createElement(u.qb, {
                            className: t,
                            fullWidth: this.props.submitStatus !== g.Success,
                            "data-test-selector": "reporting.error",
                            margin: {
                                bottom: 2
                            },
                            padding: 1
                        }, e)
                    }, t
                }(a.Component),
                y = Object(o.d)(Object(l.a)(f, {
                    options: function(e) {
                        return {
                            fetchPolicy: "network-only",
                            variables: {
                                userId: e.targetUserID
                            }
                        }
                    }
                }))(b)
        },
        RVih: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("GnwI"),
                s = n("Ue10"),
                l = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onLoginClick = function(e) {
                            e.preventDefault(), t.props.login()
                        }, t.onSignUpClick = function(e) {
                            e.preventDefault(), t.props.signup()
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return r.createElement(s.Ma, {
                            className: "anon-user",
                            flexWrap: s.U.NoWrap,
                            display: s.R.Flex,
                            margin: {
                                left: 1
                            },
                            "data-a-target": "user-card"
                        }, r.createElement(s.Ma, {
                            margin: {
                                right: 1
                            }
                        }, r.createElement(s.v, {
                            onClick: this.onLoginClick,
                            "data-a-target": "login-button"
                        }, Object(a.d)("Log in", "top-nav"))), r.createElement(s.Ma, {
                            margin: {
                                right: 1
                            }
                        }, r.createElement(s.v, {
                            onClick: this.onSignUpClick,
                            "data-a-target": "signup-button"
                        }, Object(a.d)("Sign up", "top-nav"))))
                    }, t = i.c([Object(o.c)("AnonUser")], t)
                }(r.Component);
            n.d(t, "a", function() {
                return l
            })
        },
        RcPG: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Text = 0] = "Text", e[e.CurrentUserHighlight = 1] = "CurrentUserHighlight", e[e.Mention = 2] = "Mention", e[e.Link = 3] = "Link", e[e.Emote = 4] = "Emote", e[e.ClipLink = 5] = "ClipLink", e[e.VideoLink = 6] = "VideoLink"
                }(i || (i = {}))
        },
        RfIv: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Game = "Game", e.InGameLoot = "InGameLoot", e.All = "All"
                }(i || (i = {}))
        },
        Rh8e: function(e, t, n) {},
        RiD7: function(e, t, n) {
            "use strict";
            n.d(t, "h", function() {
                return a
            }), n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "d", function() {
                return d
            }), n.d(t, "e", function() {
                return u
            }), n.d(t, "f", function() {
                return p
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "g", function() {
                return m
            }), n.d(t, "k", function() {
                return h
            }), n.d(t, "j", function() {
                return f
            }), n.d(t, "i", function() {
                return g
            });
            var i = n("/7QA"),
                r = n("2xye");

            function a(e) {
                var t = {
                    action_name: e.actionName,
                    action_type: "click",
                    client_time: (new Date).getTime(),
                    displayed_balance: e.displayedBalance,
                    emote_level: e.emoteLevel,
                    emote_type: e.emoteType,
                    bits_location: e.location || s.ChatTooltip
                };
                i.n.track(r.SpadeEventType.BitsCardInteraction, t)
            }
            var o, s = {
                    ChatTooltip: "card",
                    GetBitsButton: "get_bits_button",
                    GetBitsButtonTopNav: "topnav",
                    BitsLandingPage: "bits_landing_page"
                },
                l = {
                    BuyMain: "buy_main",
                    Buy100: "buy_100",
                    Buy500: "buy_500",
                    Buy1000: "buy_1000",
                    Buy1500: "buy_1500",
                    Buy5000: "buy_5000",
                    Buy10000: "buy_10000",
                    Buy25000: "buy_25000",
                    CloseCard: "menu_close",
                    OpenCard: "menu_open",
                    PreviewEmote: "emote_preview",
                    WatchAd: "watch_ad",
                    WatchAnotherAd: "watch_another_ad",
                    CheeringInRoom: "cheering_in_room"
                },
                c = {
                    100: l.Buy100,
                    500: l.Buy500,
                    1000: l.Buy1000,
                    1500: l.Buy1500,
                    5000: l.Buy5000,
                    10000: l.Buy10000,
                    25000: l.Buy25000
                };

            function d(e) {
                return e && c[e] ? c[e] : (i.j.error(new Error('Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), 'Buy Bits card contains improperly rendered offers, or offers unknown to Science. Tracking as "buy_100"'), l.Buy100)
            }

            function u(e) {
                var t = {
                    channel: e.channel,
                    channel_id: e.channelID,
                    available: e.available,
                    host: "twitch.tv"
                };
                i.n.track(r.SpadeEventType.BitsAdsAvailability, t)
            }

            function p(e) {
                var t = {
                    distinct_id: i.o.session.deviceID,
                    host: "twitch.tv",
                    request_id: e.requestID,
                    campaign_id: e.campaignID,
                    adblock: e.adblock
                };
                i.n.track(r.SpadeEventType.BitsAdsImpression, t)
            }

            function m(e) {
                var t = i.n.getLastPageview(),
                    n = {
                        location: t && t.location || "",
                        ad_returned: null,
                        campaign_id: e.campaignID,
                        distinct_id: i.o.session.deviceID,
                        host: "twitch.tv",
                        request_id: e.requestID,
                        request_method: e.requestMethod
                    };
                i.n.track(r.SpadeEventType.BitsAdsRequest, n)
            }

            function h(e) {
                var t = {
                    leaderboard_size: e.leaderboardSize,
                    leaderboard_mode: e.leaderboardMode,
                    user_present_in_leaderboard: e.userPresentInLeaderboard,
                    user_id: e.userID,
                    channel_id: e.channelID
                };
                i.n.track(r.SpadeEventType.LeaderboardExpandClick, t)
            }

            function f(e) {
                var t = {
                    user_id: e.userID,
                    opt_out: e.optOut
                };
                i.n.track(r.SpadeEventType.BitsCheerBombOptOut, t)
            }

            function g(e) {
                var t = {
                    user_id: e.userID,
                    channel_id: e.channelID
                };
                i.n.track(r.SpadeEventType.BitsCheerBombHideNotifications, t)
            }! function(e) {
                e.ShowAdButton = "show_ad_button"
            }(o || (o = {}))
        },
        Rjl4: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return o
            }), n.d(t, "a", function() {
                return s
            }), n.d(t, "c", function() {
                return u
            }), n.d(t, "d", function() {
                return p
            }), n.d(t, "e", function() {
                return m
            }), n.d(t, "n", function() {
                return h
            }), n.d(t, "o", function() {
                return f
            }), n.d(t, "i", function() {
                return g
            }), n.d(t, "f", function() {
                return v
            }), n.d(t, "j", function() {
                return b
            }), n.d(t, "h", function() {
                return y
            }), n.d(t, "g", function() {
                return k
            }), n.d(t, "m", function() {
                return S
            }), n.d(t, "k", function() {
                return C
            }), n.d(t, "l", function() {
                return N
            });
            var i, r, a, o, s, l = n("/7QA"),
                c = n("2xye"),
                d = n("O4UZ");

            function u(e) {
                l.n.track(c.SpadeEventType.CrownInteraction, {
                    has_prime: e.hasPrime,
                    client_time: Date.now(),
                    action: i.Hover,
                    user_agent: navigator.userAgent
                })
            }

            function p(e, t) {
                l.n.track(c.SpadeEventType.CrownInteraction, {
                    has_prime: t.hasPrime,
                    client_time: Date.now(),
                    number_of_offers: t.numberOfOffers,
                    action: e ? i.Open : i.Close,
                    user_agent: navigator.userAgent
                })
            }

            function m(e) {
                l.n.track(c.SpadeEventType.CrownInteraction, {
                    has_prime: e.hasPrime,
                    client_time: Date.now(),
                    number_of_offers: e.numberOfOffers,
                    action: i.OffersLoaded,
                    user_agent: navigator.userAgent
                })
            }

            function h(e) {
                E(e, r.Click, a.StartYourFreeTrial)
            }

            function f(e) {
                E(e, r.Hover, a.StartYourFreeTrial)
            }

            function g(e, t) {
                E(t, r.Click, e ? a.MoreInfo : a.CloseInfo)
            }

            function v(e, t) {
                w(e, r.Click, t)
            }

            function b(e) {
                E(e, r.Hover, a.MoreInfo)
            }

            function y(e) {
                E(e, r.Hover, a.CloseInfo)
            }

            function k(e, t) {
                w(e, r.Hover, t)
            }

            function S(e) {
                E(e, r.Impression, a.Offer)
            }

            function w(e, t, n) {
                var i;
                switch (n) {
                    case d.e.CLAIM_CODE:
                        i = a.GetCode;
                        break;
                    case d.e.EXTERNAL_OFFER:
                        i = a.LearnMore;
                        break;
                    case d.e.DIRECT_ENTITLEMENT:
                        i = a.ClaimOffer
                }
                i && E(e, t, i)
            }

            function E(e, t, n) {
                l.n.track(c.SpadeEventType.PrimeOfferInteraction, {
                    client_time: Date.now(),
                    offer_id: e.offerID,
                    external_url: e.externalURL,
                    index: e.index,
                    element: n,
                    action: t,
                    user_agent: navigator.userAgent,
                    has_prime: e.hasPrime,
                    display_width_type: e.displayWidthType
                })
            }

            function C(e) {
                l.n.track(c.SpadeEventType.PrimeLootPagePageview, {
                    client_time: Date.now(),
                    reftag: e.reftag,
                    user_agent: navigator.userAgent
                })
            }

            function N(e) {
                l.n.track(c.SpadeEventType.PrimeLootPageTryPrimeClick, {
                    client_time: Date.now(),
                    button_position: e.buttonPosition,
                    user_agent: navigator.userAgent
                })
            }! function(e) {
                e.Open = "click_open", e.Close = "click_close", e.Hover = "hover", e.OffersLoaded = "offers_loaded"
            }(i || (i = {})),
            function(e) {
                e.Hover = "hover", e.Click = "click", e.Impression = "impression"
            }(r || (r = {})),
            function(e) {
                e.StartYourFreeTrial = "start_your_free_trial", e.MoreInfo = "more_info", e.CloseInfo = "close_info", e.ClaimOffer = "claim_offer", e.LearnMore = "learn_more", e.GetCode = "get_code", e.Offer = "offer"
            }(a || (a = {})),
            function(e) {
                e.TopNav = "top-nav", e.CenterBanner = "center-banner", e.CenterFooter = "center-footer"
            }(o || (o = {})),
            function(e) {
                e.Wide = "wide", e.Narrow = "narrow"
            }(s || (s = {}))
        },
        RmgP: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "TopNav_User_UpdateVisibility"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdateVisibilityInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updateVisibility"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "availability"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 134
                }
            };
            n.loc.source = {
                body: "mutation TopNav_User_UpdateVisibility($input: UpdateVisibilityInput!) {\nupdateVisibility(input: $input) {\nuser {\nid\navailability\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Ru8C: function(e, t, n) {},
        RuiO: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Core_Services_Spade_SubEvent_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelID"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "withVideo"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "videoID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "video"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "videoID"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "withVideo"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "broadcastType"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 266
                }
            };
            n.loc.source = {
                body: "query Core_Services_Spade_SubEvent_User($channelID: ID! $withVideo: Boolean! $videoID: ID) {\nuser(id: $channelID) {\nid\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\ntier\npurchasedWithPrime\n}\n}\n}\nvideo(id: $videoID) @include(if: $withVideo) {\nid\nbroadcastType\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Rupy: function(e, t, n) {},
        S1Za: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = "video-player.VIDEO_PLAYER_INSTANCE_STARTED";

            function r(e) {
                return {
                    type: i,
                    playerRefID: e
                }
            }
        },
        S4w9: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "UserEmotes"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "emoteSets"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "token"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 76
                }
            };
            n.loc.source = {
                body: "query UserEmotes {\ncurrentUser {\nid\nemoteSets {\nid\nemotes {\nid\ntoken\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        SDEh: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = /\scurse\/\d/;

            function r(e) {
                return e || (e = navigator.userAgent), !!i.exec(e)
            }
        },
        SStD: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "claimPrimeOffer"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ClaimPrimeOfferInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "claimPrimeOffer"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "claimData"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "hasEntitlement"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "error"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "code"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 143
                }
            };
            n.loc.source = {
                body: "mutation claimPrimeOffer($input: ClaimPrimeOfferInput!) {\nclaimPrimeOffer(input: $input) {\nself {\nclaimData\nhasEntitlement\n}\nerror {\ncode\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        SXud: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Prime_PrimeOffers_PrimeOfferIds"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "dateOverride"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "Time"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "primeOffers"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "dateOverride"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "dateOverride"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "status"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 126
                }
            };
            n.loc.source = {
                body: "query Prime_PrimeOffers_PrimeOfferIds($dateOverride: Time) {\nprimeOffers(dateOverride: $dateOverride) {\nid\nself {\nstatus\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Scns: function(e, t, n) {},
        SpjR: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return d
            });
            var i = n("cr+I"),
                r = n("/7QA"),
                a = n("zB42"),
                o = n("y5D0"),
                s = n("MgK0"),
                l = n("dqQ1"),
                c = n("3yfl");

            function d() {
                var e = r.o.logger.withCategory("auth"),
                    t = Object(s.d)({
                        logger: e
                    });
                if ("/passport-callback" !== window.location.pathname) {
                    if (!t && Object(c.b)()) return e.debug("No legacy CSRF token found."), void r.o.store.dispatch(Object(o.a)());
                    var n = Object(s.f)({
                        config: r.a,
                        logger: e
                    });
                    if (n) n.version === s.b ? (e.debug("Using existing user cookie."), r.o.store.dispatch(Object(o.d)({
                        authToken: n.authToken,
                        displayName: n.displayName,
                        id: n.id,
                        legacyCSRFToken: t,
                        login: n.login,
                        roles: n.roles
                    }))) : (e.debug("User cookie version mismatch. Refreshing with auth token."), r.o.store.dispatch(Object(o.c)(n.authToken, t)));
                    else {
                        if (r.a.authSettings.primary && t && !t.startsWith(s.a)) return e.debug("Using legacy API token."), void r.o.store.dispatch(Object(o.b)(t));
                        e.debug("No user data found."), r.o.store.dispatch(Object(o.a)())
                    }
                } else ! function(e, t) {
                    t.debug("Handling passport callback.");
                    var n = function(e, t) {
                        var n = i.parse(e);
                        if (!n) return;
                        try {
                            var r = JSON.parse(n.state);
                            return {
                                next: r.next,
                                nonce: r.nonce,
                                token: n.access_token
                            }
                        } catch (e) {
                            t.error(e, "Failed to parse incoming state.")
                        }
                    }(window.location.hash, t);
                    if (!n) return t.debug("Got invalid data from passport, removing existing auth data and reloading."), Object(l.b)(null, {
                        config: r.a,
                        logger: t
                    }), r.o.store.dispatch(Object(o.a)()), void r.o.history.replace("/");
                    var c = document.createElement("a");
                    if (c.href = n.next, c.hostname !== window.location.hostname) return void(r.a.buildType !== a.a.Production || "twitch.tv" === c.hostname || c.hostname.endsWith(".twitch.tv") ? window.location.assign(c.protocol + "//" + c.host + window.location.pathname + window.location.search + window.location.hash) : (t.error(new Error("Attempted to redirect away from site."), "Attempted to redirect away from site."), r.o.store.dispatch(Object(o.a)()), r.o.history.replace("/")));
                    var d = Object(s.c)({
                        logger: t
                    });
                    if (!d) return t.debug("No passport state cookie found, aborting."), r.o.store.dispatch(Object(o.a)()), void r.o.history.replace("/");
                    Object(s.h)();
                    try {
                        if (d.nonce !== n.nonce) return t.error(new Error("Login nonce mismatch."), "Login nonce mismatch."), r.o.store.dispatch(Object(o.a)()), void r.o.history.replace("/")
                    } catch (e) {
                        return t.error(e, "Failed to parse session storage state."), r.o.store.dispatch(Object(o.a)()), void r.o.history.replace("/")
                    }
                    r.o.store.dispatch(Object(o.c)(n.token, e)), r.o.history.replace(c.pathname + c.search)
                }(t, e)
            }
        },
        Svt6: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = "https://api.twitch.tv",
                r = "https://gql.twitch.tv"
        },
        TDc0: function(e, t, n) {
            "use strict";
            n.d(t, "g", function() {
                return s
            }), n.d(t, "f", function() {
                return l
            }), n.d(t, "h", function() {
                return c
            }), n.d(t, "j", function() {
                return d
            }), n.d(t, "k", function() {
                return u
            }), n.d(t, "i", function() {
                return p
            }), n.d(t, "e", function() {
                return m
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return o
            }), n.d(t, "d", function() {
                return h
            }), n.d(t, "c", function() {
                return f
            }), n.d(t, "p", function() {
                return y
            }), n.d(t, "m", function() {
                return k
            }), n.d(t, "n", function() {
                return S
            }), n.d(t, "l", function() {
                return w
            }), n.d(t, "o", function() {
                return E
            }), n.d(t, "q", function() {
                return C
            });
            var i, r, a, o, s = "TWILIGHT_WEB_ONBOARDING_CATEGORIES",
                l = "TWILIGHT_WEB_ONBOARDING_CATEGORIES_ANON_FRONT_PAGE",
                c = "TWILIGHT_WEB_ONBOARDING_CHANNEL_RANKING",
                d = "TWILIGHT_WEB_ONBOARDING",
                u = "TWILIGHT_WEB_ONBOARDING_FOLLOW_CATEGORIES",
                p = "TWILIGHT_WEB_ONBOARDING_CHANNEL_SURFING",
                m = "TWILIGHT_DISCOVERY_FRONTPAGE_MVP";
            ! function(e) {
                e.NoSkip = "no_skip"
            }(i || (i = {})),
            function(e) {
                e.Yes = "yes"
            }(r || (r = {})),
            function(e) {
                e.Yes = "yes"
            }(a || (a = {})),
            function(e) {
                e.Games = "games", e.Streams = "streams"
            }(o || (o = {}));
            var h, f, g, v = new Set([o.Games.toString(), o.Streams.toString()]);
            ! function(e) {
                e.ENABLED = "enabled"
            }(h || (h = {})),
            function(e) {
                e.Chat = "chat", e.NoChat = "no_chat"
            }(f || (f = {})),
            function(e) {
                e.Off = "control", e.On = "variant"
            }(g || (g = {}));
            var b = new Set([f.Chat.toString(), f.NoChat.toString()]),
                y = function(e) {
                    return e === i.NoSkip
                },
                k = function(e, t) {
                    return y(e) && t === r.Yes
                },
                S = function(e, t) {
                    return y(e) && !!t && b.has(t)
                },
                w = function(e) {
                    return !!e && v.has(e)
                },
                E = function(e) {
                    return e === g.On
                },
                C = function(e) {
                    return e.getTime() >= N().getTime()
                },
                N = function() {
                    return new Date((new Date).getTime() - 12096e5)
                }
        },
        TOso: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("cMjZ"),
                o = n("geRD"),
                s = n("f00E"),
                l = n("U1yz"),
                c = n("xXlL"),
                d = n("a1OF");
            var u, p = n("3YIm"),
                m = n("NMMG"),
                h = n("Vl9+");

            function f(e) {
                var t = e.currentUserID,
                    n = e.emotes,
                    u = e.message,
                    f = e.recipientUserID;
                if ("" === t || "" === u || "" === f) return Promise.reject(new Error("Tried to send a whisper with nonsensical parameters."));
                var g = Object(s.b)(),
                    v = i.a({
                        mutation: p
                    }, Object(o.a)({
                        message: u,
                        nonce: g,
                        recipientUserID: f
                    })),
                    b = Object(m.a)(t, f),
                    y = Object(l.a)(r.o.apollo.client.cache, b, !0);
                if (y) {
                    var k = function(e, t) {
                        for (var n = [], i = /\S+/g, r = i.exec(e); r;) {
                            var a = r[0],
                                o = t[a];
                            if (o) {
                                var s = Object(d.c)(e.slice(0, r.index)),
                                    l = s ? s.length : r.index;
                                n.push({
                                    id: o.id,
                                    start: l,
                                    end: l + a.length - 1
                                })
                            }
                            r = i.exec(e)
                        }
                        return n
                    }(u, n).map(c.a);
                    v.optimisticResponse = {
                        sendWhisper: {
                            __typename: "SendWhisperPayload",
                            message: {
                                content: {
                                    content: u,
                                    emotes: k,
                                    __typename: "MessageBody"
                                },
                                from: {
                                    id: t,
                                    __typename: "User"
                                },
                                id: g,
                                nonce: g,
                                sentAt: (new Date).toISOString(),
                                deletedAt: null,
                                editedAt: null,
                                __typename: "WhisperMessage"
                            },
                            error: null
                        }
                    }, v.update = function(e, t) {
                        if (t.data) {
                            var n = t.data;
                            if (n.sendWhisper.message && !n.sendWhisper.error) {
                                var r = n.sendWhisper.message,
                                    o = Object(l.a)(e, b);
                                if (o) {
                                    var s = o.messages.edges.findIndex(function(e) {
                                        return e.node.id === g || e.node.nonce === g || e.node.id === r.id
                                    });
                                    if (s < 0) {
                                        var c = {
                                            cursor: (1 + y.messages.edges.reduce(function(e, t) {
                                                return Math.max(parseInt(t.cursor, 10), e)
                                            }, 0)).toString(),
                                            node: r,
                                            __typename: "WhisperMessageEdge"
                                        };
                                        o.messages.edges.unshift(c)
                                    } else o.messages.edges[s].node = r;
                                    o.userLastMessageRead && (o.userLastMessageRead.sentAt = r.sentAt), o.unreadMessagesCount = 0, e.writeFragment({
                                        id: Object(a.a)(o),
                                        fragment: h,
                                        data: i.a({}, o)
                                    })
                                }
                            }
                        }
                    }
                }
                return r.o.apollo.client.mutate(v)
            }
            n.d(t, "a", function() {
                    return u
                }), n.d(t, "b", function() {
                    return f
                }),
                function(e) {
                    e.TargetBanned = "TARGET_BANNED", e.BodyEmpty = "BODY_EMPTY", e.RestrictedRecipient = "TARGET_RESTRICTED", e.NotDelivered = "NOT_DELIVERED"
                }(u || (u = {}))
        },
        TT4a: function(e, t, n) {},
        TWyu: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportUserCommunity"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportUserInCommunityInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportUserInCommunity"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 138
                }
            };
            n.loc.source = {
                body: "mutation ReportUserModal_ReportUserCommunity($input: ReportUserInCommunityInput!) {\nreportUserInCommunity(input: $input) {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        TXTy: function(e, t, n) {},
        Td8r: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Amazon = "amazon", e.ComScore = "comscore", e.Google = "google", e.Nielsen = "nielsen", e.SalesforceDMP = "salesforce_dmp"
                }(i || (i = {}))
        },
        Tp30: function(e, t, n) {},
        TvOw: function(e, t, n) {
            "use strict";
            var i, r, a;
            n.d(t, "c", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }), n.d(t, "a", function() {
                    return a
                }),
                function(e) {
                    e.Spam = "Spam", e.Harassment = "Harassment"
                }(i || (i = {})),
                function(e) {
                    e.Spam = "spam", e.Harassment = "harassment", e.Other = "other"
                }(r || (r = {})),
                function(e) {
                    e.Whisper = "WHISPER", e.Chat = "CHAT"
                }(a || (a = {}))
        },
        U1yz: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("2Dht");

            function r(e, t, n) {
                try {
                    var r = e.readQuery({
                        query: i,
                        variables: {
                            id: t
                        }
                    }, n);
                    return r ? r.whisperThread : null
                } catch (e) {
                    return null
                }
            }
        },
        U6dP: function(e, t, n) {},
        UMvU: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                a = n("q1tI"),
                o = n("oJmH"),
                s = n("eO8H"),
                l = n("/7QA"),
                c = n("8/mp"),
                d = n("yR8l"),
                u = n("/0dD"),
                p = n("76Lv"),
                m = n("XhOd"),
                h = n("nxnD"),
                f = n("tuvy"),
                g = n("GnwI"),
                v = n("/MKj"),
                b = n("N0BP"),
                y = n("QVaV"),
                k = n("dIU+"),
                S = n("Ar2k"),
                w = n("Ue10"),
                E = (n("R6PH"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.setContainerRef = function(e) {
                            return t.containerRef = e
                        }, t.onMouseEnter = function() {
                            t.containerRef && (t.props.tooltipLabel ? t.props.tooltipLayer.show({
                                label: t.props.tooltipLabel,
                                from: t.containerRef,
                                align: w.Kb.Center,
                                direction: w.Lb.Right
                            }) : t.props.tooltipContent && t.props.tooltipLayer.showRich({
                                from: t.containerRef,
                                richContent: t.props.tooltipContent,
                                allowHover: t.props.offline,
                                delayOpenMS: 1e3,
                                forceDarkTheme: !Object(f.a)(),
                                balloonProps: {
                                    direction: t.props.offline ? w.r.Right : w.r.RightCenter,
                                    tailOffset: 16
                                }
                            }))
                        }, t.onMouseLeave = function() {
                            t.props.tooltipLayer.hide()
                        }, t.onMouseClick = function() {
                            t.props.tooltipLayer.hide()
                        }, t.addEventListeners = function() {
                            t.containerRef && (t.containerRef.addEventListener("mouseenter", t.onMouseEnter), t.containerRef.addEventListener("mouseleave", t.onMouseLeave), t.containerRef.addEventListener("click", t.onMouseClick))
                        }, t.removeEventListeners = function() {
                            t.containerRef && (t.containerRef.removeEventListener("mouseenter", t.onMouseEnter), t.containerRef.removeEventListener("mouseleave", t.onMouseLeave), t.containerRef.removeEventListener("click", t.onMouseClick))
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), this.addEventListeners()
                    }, t.prototype.componentWillUnmount = function() {
                        this.removeEventListeners()
                    }, t.prototype.render = function() {
                        return this.props.collapsed ? a.createElement("div", {
                            ref: this.setContainerRef,
                            "data-test-selector": "side-nav-card-collapsed"
                        }, a.createElement(w.Fa, {
                            padding: {
                                y: .5,
                                x: 1
                            },
                            display: w.R.Flex,
                            alignItems: w.c.Center,
                            flexWrap: w.U.NoWrap
                        }, a.createElement(s.a, {
                            to: this.props.linkTo,
                            className: "side-nav-card",
                            onClick: this.props.onClick
                        }, a.createElement(w.Ma, {
                            className: r("side-nav-card__avatar", {
                                "side-nav-card__avatar--offline": this.props.offline
                            }),
                            flexShrink: 0
                        }, a.createElement(w.m, {
                            src: this.props.avatarSrc,
                            alt: this.props.avatarAlt,
                            size: 30,
                            presenceIndicator: this.props.avatarPresence,
                            presenceStatus: this.props.presenceStatus
                        }))))) : a.createElement("div", {
                            ref: this.setContainerRef
                        }, a.createElement(w.Ma, {
                            className: "side-nav-card",
                            position: w.Wa.Relative,
                            display: w.R.Flex,
                            alignItems: w.c.Center
                        }, a.createElement(w.Fa, {
                            padding: {
                                y: .5,
                                x: 1
                            },
                            display: w.R.Flex,
                            alignItems: w.c.Center,
                            flexWrap: w.U.NoWrap,
                            fullWidth: !0
                        }, a.createElement(s.a, i.a({
                            to: this.props.linkTo,
                            className: "side-nav-card__link",
                            onClick: this.props.onClick
                        }, Object(w.Ub)(this.props)), a.createElement(w.Ma, {
                            className: r("side-nav-card__avatar", {
                                "side-nav-card__avatar--offline": this.props.offline
                            }),
                            flexShrink: 0,
                            alignItems: w.c.Center
                        }, a.createElement(w.m, {
                            src: this.props.avatarSrc,
                            alt: this.props.avatarAlt,
                            size: 30,
                            presenceIndicator: this.props.avatarPresence,
                            presenceStatus: this.props.presenceStatus
                        })), a.createElement(w.Ma, {
                            ellipsis: !0,
                            flexDirection: w.T.Column,
                            flexGrow: 1,
                            margin: {
                                left: 1
                            },
                            display: w.R.Flex,
                            "data-a-target": "side-nav-card-metadata"
                        }, a.createElement("div", {
                            className: "side-nav-card__title",
                            title: this.props.title,
                            "data-a-target": "side-nav-title"
                        }, a.createElement(w.Q, {
                            ellipsis: !0,
                            fontSize: w.V.Size5,
                            bold: Object(f.a)()
                        }, this.props.titleElement || this.props.title)), a.createElement(w.qb, {
                            className: "side-nav-card__metadata",
                            fontSize: w.V.Size6,
                            display: w.R.Flex,
                            justifyContent: w.La.Between,
                            flexWrap: w.U.NoWrap,
                            ellipsis: !0
                        }, a.createElement(w.Fa, {
                            flexGrow: 1,
                            "data-a-target": "side-nav-game-title"
                        }, a.createElement(w.Q, {
                            type: w.Gb.Span,
                            ellipsis: !0
                        }, this.props.metadataLeft)), a.createElement(w.Ma, {
                            flexShrink: 0,
                            margin: {
                                left: .5
                            },
                            "data-a-target": "side-nav-live-status"
                        }, this.props.metadataRight))))), this.getCardSlideInContent()))
                    }, t.prototype.getCardSlideInContent = function() {
                        return this.props.slideInContent ? a.createElement(w.Ma, {
                            className: "side-nav-card__hover-content",
                            position: w.Wa.Absolute,
                            display: w.R.Flex,
                            alignItems: w.c.Center,
                            attachRight: !0,
                            padding: {
                                right: 1
                            },
                            "data-a-target": "side-nav-card-hover"
                        }, this.props.slideInContent) : null
                    }, t = i.c([Object(g.c)("SideNavCard"), Object(S.c)()], t)
                }(a.Component)),
                C = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.renderGame = function() {
                            return n.props.gameName ? a.createElement(w.Fa, {
                                flexGrow: 1,
                                display: w.R.Flex,
                                flexDirection: w.T.Row
                            }, a.createElement("div", {
                                className: "recommended-channel__game",
                                title: n.props.gameName,
                                "data-a-target": "featured-channel-game-title"
                            }, a.createElement(w.Ma, {
                                ellipsis: !0,
                                flexGrow: 1
                            }, n.props.gameName))) : null
                        }, n.getSlideInContent = function() {
                            if (n.props.firstPageLoaded) return a.createElement(k.a, {
                                tabIndex: -1,
                                "data-a-target": "featured-channel-follow-button",
                                blurAfterClick: !0,
                                size: w.z.Small,
                                channelLogin: n.props.channelLogin,
                                followUIType: k.b.TextOnly,
                                unfollowUIType: k.b.IconOnly,
                                hideWhenFollowing: !0
                            })
                        }, n.state = {
                            hovered: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return a.createElement(E, i.a({
                            collapsed: this.props.collapsed,
                            title: this.props.displayName,
                            titleElement: Object(y.a)(this.props.channelLogin, this.props.displayName),
                            avatarAlt: this.props.displayName,
                            avatarSrc: this.props.profileImageURL,
                            linkTo: {
                                pathname: "/" + this.props.channelLogin,
                                state: {
                                    content: "featured_channels",
                                    medium: "twitch_socialcolumn"
                                }
                            },
                            metadataLeft: this.renderGame(),
                            slideInContent: this.getSlideInContent()
                        }, Object(b.a)(this.props)))
                    }, t = i.c([Object(g.c)("Featured Channel")], t)
                }(a.Component);
            var N, T, _ = Object(v.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                })(C),
                R = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.setRef = function(e) {
                            return t.ref = e
                        }, t.onMouseEnter = function() {
                            t.props.tooltipLayer.show({
                                from: t.ref,
                                label: t.props.title,
                                align: w.Kb.Center,
                                direction: w.Lb.Right
                            })
                        }, t.onMouseLeave = function() {
                            t.props.tooltipLayer.hide()
                        }, t.addEventListeners = function() {
                            t.ref && (t.ref.addEventListener("mouseenter", t.onMouseEnter), t.ref.addEventListener("mouseleave", t.onMouseLeave))
                        }, t.removeEventListeners = function() {
                            t.ref && (t.ref.removeEventListener("mouseenter", t.onMouseEnter), t.ref.removeEventListener("mouseleave", t.onMouseLeave))
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.addEventListeners()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.props.collapsed && !e.collapsed && this.removeEventListeners()
                    }, t.prototype.componentDidUpdate = function(e) {
                        this.props.collapsed && !e.collapsed && this.addEventListeners()
                    }, t.prototype.componentWillUnmount = function() {
                        this.removeEventListeners()
                    }, t.prototype.render = function() {
                        var e, t = {
                                "side-nav-header": !0
                            },
                            n = this.props,
                            i = n.collapsed,
                            o = n.collapsedIcon,
                            s = n.title;
                        return e = o ? a.createElement(w.fb, {
                            asset: o,
                            width: 20,
                            height: 20
                        }) : a.createElement(w.fb, {
                            asset: w.gb.FriendsSC,
                            width: 20,
                            height: 20
                        }), i ? a.createElement(w.qb, {
                            className: r(t),
                            color: w.K.Alt2,
                            display: w.R.Flex,
                            flexWrap: w.U.Wrap,
                            justifyContent: w.La.Center,
                            alignItems: w.c.Center,
                            margin: {
                                top: 1
                            },
                            padding: {
                                top: 1,
                                bottom: .5
                            },
                            "data-a-target": "side-nav-header-collapsed",
                            refDelegate: this.setRef
                        }, e, a.createElement(w.qb, {
                            borderTop: !0,
                            fullWidth: !0,
                            margin: {
                                top: 1
                            }
                        })) : a.createElement(w.Ma, {
                            className: r(t),
                            margin: {
                                top: 1,
                                x: 1
                            },
                            padding: {
                                top: 1,
                                bottom: .5
                            },
                            "data-a-target": "side-nav-header-expanded"
                        }, a.createElement(w.Q, {
                            type: w.Gb.H5,
                            color: w.K.Alt,
                            bold: Object(f.a)()
                        }, s), a.createElement(w.qb, {
                            borderTop: !0,
                            fullWidth: !0,
                            margin: {
                                top: 1
                            }
                        }))
                    }, t
                }(a.Component),
                O = Object(g.c)("Side Nav Header", {
                    autoReportInteractive: !0
                })(Object(S.c)()(R)),
                I = n("AKKo"),
                D = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.getFeaturedChannels = function() {
                            return !t.props.data.loading && !t.props.data.error && t.props.data.featuredStreams && t.props.data.featuredStreams.length - 1 ? t.props.data.featuredStreams.filter(function(e) {
                                return e.stream && e.stream.broadcaster && e.stream.broadcaster.displayName
                            }).slice(0, 5).map(function(e, n) {
                                return e.stream && e.stream.broadcaster && e.stream.broadcaster.displayName && e.stream.broadcaster.id ? a.createElement(_, {
                                    key: "featured-channels-" + e.stream.id,
                                    id: e.stream.id,
                                    displayName: e.stream.broadcaster.displayName,
                                    gameName: e.stream.game ? e.stream.game.name : "",
                                    profileImageURL: e.stream.broadcaster.profileImageURL,
                                    collapsed: t.props.collapsed,
                                    channelLogin: e.stream.broadcaster.login,
                                    "data-a-id": "featured-channel-" + n,
                                    "data-a-target": "featured-channel"
                                }) : null
                            }) : []
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading || this.props.data.error || !this.props.data.featuredStreams || this.props.latencyTracking.reportInteractive(Math.min(this.props.data.featuredStreams.length, 4))
                    }, t.prototype.render = function() {
                        var e = Object(l.d)("Featured Channels", "FeaturedChannels");
                        return this.props.collapsed ? a.createElement(w.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, a.createElement(O, {
                            title: e,
                            collapsed: this.props.collapsed,
                            collapsedIcon: w.gb.NavChannels
                        }), this.getFeaturedChannels()) : a.createElement(w.Ma, {
                            margin: {
                                bottom: 2
                            }
                        }, a.createElement(O, {
                            title: e
                        }), this.renderFeaturedChannelsOnboarding(), this.getFeaturedChannels())
                    }, t.prototype.renderFeaturedChannelsOnboarding = function() {
                        return Object(f.a)() || this.props.hideOnboarding ? null : a.createElement(a.Fragment, null, a.createElement(w.Fa, {
                            fullWidth: !0
                        }, a.createElement("figure", null, a.createElement("svg", {
                            width: "240",
                            height: "100",
                            viewBox: "0 0 240 108"
                        }, a.createElement("g", {
                            fill: "none",
                            fillRule: "evenodd"
                        }, a.createElement("path", {
                            fill: "#D7CCEB",
                            d: "M123 56v8h-20V44h20v8l8-8h4v20h-4"
                        }), a.createElement("path", {
                            fill: "#4B367C",
                            d: "M158 30v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zm-86 0v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zm0 46v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zm86 0v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zm17-23v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zM57 53v-2l1-1h2l1 1 1-1h2l1 1v2l-4 4-4-4zm37 27l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8v-4zm0-57v-4l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8zm34 0v-4l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8zm0 61v-4l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8zm19-31v-4l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8zm-72 0v-4l2-2h4l2 2 2-2h4l2 2v4l-8 8-8-8z"
                        }))))), a.createElement(w.Ma, {
                            padding: {
                                x: 1
                            },
                            margin: {
                                bottom: 2
                            },
                            textAlign: w.Cb.Center
                        }, a.createElement(w.Q, {
                            color: w.K.Alt2,
                            fontSize: w.V.Size6
                        }, Object(l.d)("Follow channels and easily access your favorites here. Here are a few you might like!", "FeaturedChannels"))))
                    }, t = i.c([Object(d.a)(I, {
                        options: function() {
                            return {
                                variables: {
                                    language: l.o.intl.getLanguageCode()
                                }
                            }
                        }
                    }), Object(g.c)("Featured Channels")], t)
                }(a.Component),
                P = Object(g.c)("No Online Friends", {
                    autoReportInteractive: !0
                })(function(e) {
                    var t = Object(l.d)("Online Friends", "NoOnlineFriends"),
                        n = Object(l.d)("Twitch is better together. Add some Friends to see who's online and chat!", "NoOnlineFriends"),
                        i = Object(l.d)("None of your Friends are online. Get out there and add more!", "NoOnlineFriends"),
                        r = e.hasOfflineFriends ? "online-friends-no-friends-online" : "online-friends-no-friends";
                    return a.createElement(w.Ma, {
                        margin: {
                            bottom: 2
                        }
                    }, a.createElement(O, {
                        title: t
                    }), a.createElement(w.Fa, {
                        margin: {
                            y: 1
                        },
                        fullWidth: !0
                    }, a.createElement("figure", null, a.createElement("svg", {
                        width: "240",
                        height: "100",
                        viewBox: "0 0 240 108"
                    }, a.createElement("defs", null, a.createElement("linearGradient", {
                        x1: "100%",
                        x2: "0%",
                        y1: "50%",
                        y2: "50%"
                    }, a.createElement("stop", {
                        stopColor: "#4B367C",
                        stopOpacity: "0",
                        offset: "0%"
                    }), a.createElement("stop", {
                        stopColor: "#4B367C",
                        stopOpacity: "0",
                        offset: "3.947%"
                    }), a.createElement("stop", {
                        stopColor: "#4B367C",
                        offset: "12.281%"
                    }), a.createElement("stop", {
                        stopColor: "#4B367C",
                        offset: "87.719%"
                    }), a.createElement("stop", {
                        stopColor: "#4B367C",
                        stopOpacity: "0",
                        offset: "96.053%"
                    }), a.createElement("stop", {
                        stopColor: "#4B367C",
                        stopOpacity: "0",
                        offset: "100%"
                    }))), a.createElement("g", {
                        fill: "none",
                        fillRule: "evenodd"
                    }, a.createElement("path", {
                        fill: "#4B367C",
                        d: "M174.606 56h-13.21l-11.154 26.932c-.212.51-.806 1.1-1.31 1.31L127 93.326V87l-4-4h-6l-4 4v6.326L99.9 87.9 97 85v-7l-4-4h-6l-.666.666L78.604 56h-13.21L57.75 74.452c-.21.507-.787 1.087-1.298 1.3L44 80.908V78l-4-4h-6l-4 4v3.737L15.548 75.75c-.507-.21-1.087-.787-1.3-1.298L6.16 54.918c-.21-.507-.21-1.326 0-1.836l8.09-19.534c.21-.507.79-1.087 1.3-1.3l19.534-8.09c.507-.21 1.326-.21 1.836 0L48 28.748V41h12.838l4.556 11h13.21l7.454-18H100v-6l-3-3v-3.7l22.074-9.142c.51-.212 1.348-.21 1.852 0L143 21.3V25l-3 3v6h13.942l7.455 18h13.21l7.642-18.452c.21-.507.784-1.087 1.295-1.3l10.59-4.385L194 34h20v-6l10.452 4.25c.507.21 1.087.787 1.3 1.298l8.09 19.534c.21.507.21 1.326 0 1.836l-8.09 19.534c-.21.507-.79 1.087-1.3 1.3l-19.534 8.09c-.507.21-1.326.21-1.836 0L193 79.666V67h-13.838l-4.556-11zM119.08 28.16l-16.702 6.917c-.498.206-1.09.793-1.3 1.3l-6.92 16.704c-.205.5-.21 1.335 0 1.84l6.92 16.705c.205.498.792 1.09 1.3 1.3l16.703 6.92c.5.205 1.335.21 1.84 0l16.705-6.92c.498-.205 1.09-.792 1.3-1.3l6.92-16.703c.205-.497.21-1.33 0-1.84l-6.92-16.7c-.205-.5-.792-1.09-1.3-1.3l-16.703-6.92c-.497-.206-1.33-.21-1.84 0zm-83.12 10l-9.53 3.948c-.528.22-1.106.804-1.32 1.32l-3.948 9.53c-.218.528-.213 1.352 0 1.867l3.948 9.532c.22.526.804 1.105 1.32 1.318l9.53 3.948c.528.22 1.352.214 1.867 0l9.532-3.948c.523-.218 1.102-.804 1.315-1.32l3.948-9.53c.22-.528.214-1.35 0-1.867l-3.948-9.53c-.218-.528-.804-1.106-1.32-1.32l-9.53-3.948c-.528-.218-1.35-.213-1.867 0zm167.107.106l-9.532 3.948c-.527.218-1.106.804-1.32 1.32l-3.947 9.53c-.22.528-.214 1.352 0 1.867l3.948 9.535c.218.527.804 1.106 1.32 1.32l9.53 3.947c.528.22 1.352.215 1.867 0l9.532-3.947c.527-.218 1.106-.804 1.32-1.32l3.947-9.53c.22-.528.214-1.352 0-1.867l-3.948-9.532c-.218-.527-.804-1.106-1.32-1.32l-9.53-3.947c-.528-.22-1.352-.215-1.867 0z"
                    }), a.createElement("path", {
                        fill: "#D7CCEB",
                        d: "M92 17l2 2v5l-3 2v1h4l2 2v2H83v-2l2-2h4v-1l-3-2v-5l2-2h4zm0 60l2 2v5l-3 2v1h4l2 2v2H83v-2l2-2h4v-1l-3-2v-5l2-2h4zm30 9l2 2v5l-3 2v1h4l2 2v2h-14v-2l2-2h4v-1l-3-2v-5l2-2h4zm30-69l2 2v5l-3 2v1h4l2 2v2h-14v-2l2-2h4v-1l-3-2v-5l2-2h4zm54 0l2 2v5l-3 2v1h4l2 2v2h-14v-2l2-2h4v-1l-3-2v-5l2-2h4zM39 77l2 2v5l-3 2v1h4l2 2v2H30v-2l2-2h4v-1l-3-2v-5l2-2h4zm137-7h14v10h-14V70zm5 2v6l5-3-5-3zM51 28h14v10H51V28zm5 2v6l5-3-5-3zm154 29l-4-4v4h-10V49h10v4l4-4h2v10h-2zM29 55l3-6h2l3 1 3-1h2l3 6v2l-2 2h-2l-2-2h-4l-2 2h-2l-2-2v-2zm10-2v1h1v-1h-1zm1 1v1h1v-1h-1zm1-1v1h1v-1h-1zm-1-1v1h1v-1h-1zm-7 1h-1v1h1v1h1v-1h1v-1h-1v-1h-1v1zm91-14l4 4v10l-6 4v2h8l4 4v4h-28v-4l4-4h8v-2l-6-4V43l4-4h8z"
                    }))))), a.createElement(w.Ma, {
                        padding: {
                            x: 1
                        },
                        textAlign: w.Cb.Center
                    }, a.createElement(w.Q, {
                        color: w.K.Alt2,
                        fontSize: w.V.Size6,
                        "data-a-target": r
                    }, e.hasOfflineFriends ? i : n)))
                }),
                x = n("fvjX"),
                L = n("Lmqf"),
                F = n.n(L),
                M = n("1/iK"),
                A = n("y5D0"),
                U = n("JVUd"),
                B = n("2xye");

            function j(e) {
                var t = i.a({
                    section: N.SideNav
                }, e);
                l.n.track(B.SpadeEventType.ItemDisplay, t)
            }! function(e) {
                e.SideNav = "sidenav"
            }(N || (N = {})),
            function(e) {
                e.Upsell = "upsell"
            }(T || (T = {}));
            var z = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.signup = function() {
                        var e, n;
                        n = i.a({
                            section: N.SideNav,
                            click_subsection: T.Upsell
                        }, e), l.n.track(B.SpadeEventType.ItemClick, n), t.props.signup()
                    }, t
                }
                return i.d(t, e), t.prototype.componentDidMount = function() {
                    this.props.impressionListener.registerImpressionCallback(j)
                }, t.prototype.render = function() {
                    return a.createElement(w.qb, {
                        background: w.n.AccentAlt2,
                        display: w.R.Flex,
                        flexDirection: w.T.Column,
                        padding: {
                            y: 2,
                            x: 1
                        }
                    }, a.createElement(w.N, {
                        alt: Object(l.d)("Upsell Center", "UpsellCenter"),
                        src: F.a
                    }), a.createElement(w.Ma, {
                        textAlign: w.Cb.Center
                    }, a.createElement(w.Ma, {
                        margin: {
                            y: 1
                        }
                    }, a.createElement(w.Q, {
                        color: w.K.Base,
                        fontSize: w.V.Size4
                    }, Object(l.d)("Join the Twitch community!", "UpsellCenter")), a.createElement(w.Q, {
                        color: w.K.Alt2,
                        fontSize: w.V.Size5
                    }, Object(l.d)("Discover the best live streams anywhere.", "UpsellCenter"))), a.createElement(w.v, {
                        onClick: this.signup,
                        size: w.z.Large
                    }, a.createElement(w.Ma, {
                        padding: {
                            x: 1
                        }
                    }, a.createElement(w.Q, {
                        color: w.K.Base
                    }, Object(l.d)("Sign up", "UpsellCenter"))))))
                }, t
            }(a.PureComponent);
            var W, V = Object(U.a)("UpsellCenter", {
                    percentage: 75
                })(z),
                H = Object(v.b)(null, function(e) {
                    return Object(x.b)({
                        signup: function() {
                            return Object(A.h)(M.a.SideNavUpsellCenter)
                        }
                    }, e)
                })(V),
                G = "TWILIGHT_WEB_SIDE_NAV_UPSELL_CENTER",
                q = "yes",
                Q = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            inUpsellCenterExperiment: l.o.experiments.getAssignment(G) === q
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return a.createElement(w.Ma, {
                            className: "anon-side-nav",
                            fullWidth: !0
                        }, this.renderContent())
                    }, t.prototype.renderContent = function() {
                        return this.props.collapsed ? a.createElement(D, {
                            collapsed: this.props.collapsed
                        }) : this.state.inUpsellCenterExperiment ? a.createElement(a.Fragment, null, a.createElement(w.Ma, {
                            padding: 1
                        }, a.createElement(H, null)), a.createElement(D, {
                            collapsed: this.props.collapsed,
                            hideOnboarding: !0
                        })) : a.createElement(a.Fragment, null, a.createElement(D, {
                            collapsed: this.props.collapsed
                        }), a.createElement(P, null))
                    }, t
                }(a.PureComponent),
                K = Object(g.c)("Anon Side Nav", {
                    autoReportInteractive: !0
                })(Q),
                Y = n("eDVu"),
                X = n("0Log"),
                $ = n("0GkP"),
                J = n("QzU5"),
                Z = n("/aPz");
            n("HWwS");
            ! function(e) {
                e[e.ShowMore = 0] = "ShowMore", e[e.ShowLess = 1] = "ShowLess"
            }(W || (W = {}));
            var ee = function(e) {
                    var t = w.La.Between;
                    return e.lessDisabled && (t = w.La.End), a.createElement(w.Ma, {
                        padding: 1,
                        display: w.R.Flex,
                        fullWidth: !0,
                        overflow: w.Pa.Hidden,
                        textAlign: w.Cb.Left,
                        justifyContent: t
                    }, !e.lessDisabled && a.createElement("button", {
                        className: "side-nav-show-more-toggle__button",
                        onClick: e.onClickLess,
                        "data-a-target": "side-nav-show-less-button",
                        "data-test-selector": W.ShowLess
                    }, Object(l.d)("Show less", "SideNavShowMoreToggleButton")), !e.moreDisabled && a.createElement("button", {
                        className: "side-nav-show-more-toggle__button",
                        onClick: e.onClickMore,
                        "data-a-target": "side-nav-show-more-button",
                        "data-test-selector": W.ShowMore
                    }, Object(l.d)("Show more", "SideNavShowMoreToggleButton")))
                },
                te = n("oB8h"),
                ne = (n("lTwP"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = [];
                        if (this.props.videos)
                            for (var t = 0; t < 3 && t < this.props.videos.length; t++) e.push(this.getVideoSummary(this.props.videos[t]));
                        return a.createElement(w.Ma, null, e, this.getAllRecentVideosLabel())
                    }, t.prototype.getAllRecentVideosLabel = function() {
                        return a.createElement(w.Ja, {
                            linkTo: "/" + this.props.creatorLogin + "/videos/all",
                            key: "recentVideoLabel",
                            type: w.Ka.Alpha,
                            blurAfterClick: !0
                        }, a.createElement(w.Ma, {
                            textAlign: w.Cb.Center,
                            padding: .5
                        }, a.createElement(w.Q, {
                            transform: w.Fb.Capitalize,
                            color: w.K.Base
                        }, Object(l.d)("See all recent videos", "OfflineSideNavChannelTooltip"))))
                    }, t.prototype.getVideoSummary = function(e) {
                        return a.createElement(w.Ja, {
                            linkTo: "/videos/" + e.id,
                            key: "videoSumm-" + e.id,
                            type: w.Ka.Alpha,
                            blurAfterClick: !0
                        }, a.createElement(w.Ma, {
                            padding: {
                                top: .5,
                                bottom: .5
                            }
                        }, a.createElement(w.C, {
                            row: !0
                        }, a.createElement(w.E, {
                            src: e.previewThumbnailURL,
                            alt: e.title,
                            size: w.F.Size8,
                            aspect: w.l.Aspect16x9
                        }), a.createElement(w.D, null, a.createElement(w.Ma, {
                            padding: {
                                left: 1,
                                right: 1
                            },
                            className: "offline-side-nav-channel-tooltip__video-body"
                        }, a.createElement(w.Q, {
                            color: w.K.Base,
                            title: e.title,
                            lines: 2
                        }, e.title), a.createElement(w.Q, {
                            color: w.K.Alt2,
                            "data-test-selector": "offline-followed-channel-tooltip-text"
                        }, Object(l.d)("{views, plural, one {{formattedViews} view} other {{formattedViews} views}}", {
                            views: e.viewCount,
                            formattedViews: Object(l.e)(e.viewCount)
                        }, "OfflineSideNavChannelTooltip")))))))
                    }, t
                }(a.Component)),
                ie = (n("DSFQ"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = null,
                            t = null;
                        switch (this.props.streamType) {
                            case te.a.Premiere:
                                e = a.createElement(w.fb, {
                                    asset: w.gb.VideoPremiere,
                                    type: w.hb.Live,
                                    width: 12,
                                    height: 12
                                }), t = Object(l.d)("Video Premiere", "OnlineSideNavChannelTooltip");
                                break;
                            case te.a.WatchParty:
                            case te.a.Rerun:
                                e = a.createElement(w.fb, {
                                    asset: w.gb.VideoRerun,
                                    type: w.hb.Alt2,
                                    width: 12,
                                    height: 12
                                }), t = Object(l.d)("Rerun", "OnlineSideNavChannelTooltip");
                                break;
                            default:
                                if (!this.props.collapsed) break;
                                e = a.createElement(w.G, {
                                    status: w.I.Live,
                                    size: w.H.Small
                                }), t = Object(l.d)("Live", "OnlineSideNavChannelTooltip")
                        }
                        return a.createElement(w.Ma, {
                            className: "online-side-nav-channel-tooltip__body"
                        }, this.props.collapsed && a.createElement(w.Q, {
                            color: w.K.Link,
                            ellipsis: !0
                        }, this.props.gameName ? this.props.channelDisplayName + " · " + this.props.gameName : this.props.channelDisplayName), a.createElement(w.Q, {
                            color: w.K.Base,
                            lines: 2
                        }, this.props.streamTitle), e && a.createElement(w.Ma, {
                            display: w.R.Flex,
                            alignItems: w.c.Center
                        }, e, a.createElement(w.Fa, {
                            padding: {
                                left: .5
                            }
                        }, a.createElement(w.Q, {
                            color: w.K.Alt2,
                            type: w.Gb.Span
                        }, t, this.props.collapsed && this.props.viewership ? " | " + Object(l.d)("{viewers} viewers", {
                            viewers: Object(l.e)(this.props.viewership)
                        }, "OnlineSideNavChannelTooltip") : null))))
                    }, t
                }(a.Component)),
                re = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.getMetadataLeft(),
                            t = Object(y.a)(this.props.user.login, this.props.user.displayName, !0);
                        return a.createElement(E, i.a({
                            avatarAlt: t,
                            avatarSrc: this.props.user.profileImageURL,
                            collapsed: this.props.collapsed,
                            linkTo: {
                                pathname: this.getChannelLink(),
                                state: i.a({}, this.props.context, {
                                    medium: B.PageviewMedium.SideNav
                                })
                            },
                            metadataLeft: e,
                            metadataRight: this.getMetadataRight(),
                            onClick: this.props.onChannelClick,
                            offline: this.isChannelOffline(),
                            title: t,
                            titleElement: Object(y.a)(this.props.user.login, this.props.user.displayName),
                            tooltipContent: this.getTooltipContent()
                        }, Object(w.Ub)(this.props)))
                    }, t.prototype.getMetadataLeft = function() {
                        return this.props.user.stream && this.props.user.stream.game ? this.props.user.stream.game.name : this.props.user.stream && this.props.user.stream.id && this.props.user.lastBroadcast && this.props.user.lastBroadcast.game && this.props.user.lastBroadcast.game.name ? this.props.user.lastBroadcast.game.name : this.props.recentChannelVideos && this.props.recentChannelVideos.length > 0 ? Object(l.d)("{numVideos, plural, one {{numVideos} new video} other {{numVideos} new videos}}", {
                            numVideos: this.props.recentChannelVideos.length
                        }, "SideNavChannel") : ""
                    }, t.prototype.getMetadataRight = function() {
                        return this.props.user.stream && this.props.user.stream.id ? a.createElement(w.Ma, {
                            display: w.R.Flex,
                            alignItems: w.c.Center
                        }, this.getChannelStatusIndicator(), a.createElement(w.Ma, {
                            margin: {
                                left: .5
                            }
                        }, Object(l.e)(this.props.user.stream.viewersCount || 0))) : a.createElement(w.Q, {
                            type: w.Gb.Span
                        }, Object(l.d)("Offline", "SideNavChannel"))
                    }, t.prototype.getChannelStatusIndicator = function() {
                        if (!this.props.user.stream || !this.props.user.stream.id) return null;
                        switch (this.props.user.stream.type) {
                            case te.a.Premiere:
                                return a.createElement(w.fb, {
                                    asset: w.gb.VideoPremiere,
                                    type: w.hb.Live,
                                    width: 12,
                                    height: 12
                                });
                            case te.a.WatchParty:
                            case te.a.Rerun:
                                return a.createElement(w.fb, {
                                    asset: w.gb.VideoRerun,
                                    type: w.hb.Alt2,
                                    width: 12,
                                    height: 12
                                });
                            default:
                                return a.createElement(w.G, {
                                    status: w.I.Live,
                                    size: w.H.Small
                                })
                        }
                    }, t.prototype.getTooltipContent = function() {
                        if (this.isChannelOffline()) {
                            if (!this.props.user.login) return;
                            return a.createElement(ne, {
                                creatorLogin: this.props.user.login,
                                videos: this.props.recentChannelVideos
                            })
                        }
                        return a.createElement(ie, {
                            streamType: this.props.user.stream && this.props.user.stream.type || te.a.Live,
                            streamTitle: this.props.user.stream && this.props.user.stream.title || "",
                            collapsed: this.props.collapsed,
                            channelDisplayName: this.props.user.displayName || "",
                            gameName: this.props.user.stream && this.props.user.stream.game && this.props.user.stream.game.name || void 0,
                            viewership: this.props.user.stream && this.props.user.stream.viewersCount || 0
                        })
                    }, t.prototype.isChannelOffline = function() {
                        return !(this.props.user.stream && this.props.user.stream.id.length > 0)
                    }, t.prototype.getChannelLink = function() {
                        return this.isChannelOffline() ? this.props.recentChannelVideos && this.props.recentChannelVideos.length > 0 ? "/videos/" + this.props.recentChannelVideos[0].id : "/" + this.props.user.login + "/videos/all" : "/" + this.props.user.login
                    }, t
                }(a.Component),
                ae = Object(x.d)(Object(g.c)("SideNavChannel"))(re),
                oe = 5,
                se = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            displayAmount: oe
                        }, t.initialDisplayAmount = -1, t.renderChannels = function() {
                            var e = Object(w.Ub)(t.props),
                                n = e["data-a-target"] || "side-nav-channel",
                                i = e["data-a-id"] || "side-nav-channel";
                            return t.props.channels.slice(0, t.state.displayAmount).map(function(e, r) {
                                if (!e.id) return null;
                                var o = t.onChannelClick.bind(t, r, e);
                                return a.createElement(ae, {
                                    key: "side-nav-channels-" + e.id,
                                    user: e,
                                    recentChannelVideos: t.props.videos[e.id],
                                    collapsed: t.props.collapsed,
                                    "data-a-id": i + "-" + r,
                                    "data-a-target": n,
                                    onChannelClick: o,
                                    context: t.props.context
                                })
                            })
                        }, t.renderShowMore = function() {
                            return t.props.collapsed || !t.props.channels || t.props.channels.length <= t.initialDisplayAmount ? null : a.createElement(ee, {
                                onClickMore: t.onClickShowMore,
                                onClickLess: t.onClickShowLess,
                                lessDisabled: t.state.displayAmount <= t.initialDisplayAmount,
                                moreDisabled: t.state.displayAmount >= t.props.channels.length
                            })
                        }, t.onClickShowMore = function() {
                            var e = Math.min(t.state.displayAmount + 10, t.props.channels.length);
                            t.setState({
                                displayAmount: e
                            }), t.props.onShowMore && t.props.onShowMore(e)
                        }, t.onClickShowLess = function() {
                            var e = t.props.showExtraChannels ? Math.max(t.state.displayAmount - 10, t.initialDisplayAmount) : 10 * (Math.floor((t.state.displayAmount + 4) / 10) - 1) + 5;
                            t.setState({
                                displayAmount: e
                            })
                        }, t.onChannelClick = function(e, n) {
                            t.props.onChannelClick && t.props.onChannelClick(e, n)
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.showExtraChannels || (this.initialDisplayAmount = oe)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (e.showExtraChannels && -1 === this.initialDisplayAmount) {
                            var t = function(e, t) {
                                void 0 === t && (t = 12), t = e.length < t ? e.length : t;
                                for (var n = 0, i = 0; i < t && (n++, !e[i] || !e[i].stream || e[i].stream.type) && (!e[i] || e[i].stream); i++);
                                return n
                            }(e.channels, 12);
                            this.setState({
                                displayAmount: t
                            }), this.initialDisplayAmount = t
                        }
                    }, t.prototype.render = function() {
                        return a.createElement(w.Ma, null, a.createElement(O, {
                            title: this.props.title,
                            collapsed: this.props.collapsed,
                            collapsedIcon: this.props.collapsedIcon
                        }), this.renderChannels(), this.renderShowMore())
                    }, t
                }(a.Component),
                le = Object(g.c)("SideNavChannelList", {
                    autoReportInteractive: !0
                })(se),
                ce = n("ua1/"),
                de = n("NSwr");

            function ue(e) {
                return e ? e.slice().filter(function(e) {
                    switch (e.availability) {
                        case de.a.Online:
                        case de.a.Idle:
                        case de.a.Busy:
                        case de.a.Away:
                            return !0;
                        case de.a.Offline:
                            return e.activity && e.activity.type === ce.a.Watching;
                        default:
                            return !1
                    }
                }).sort(function(e, t) {
                    if (!e.activity && !t.activity) return pe(e, t);
                    if (e.activity && !t.activity) return -1;
                    if (!e.activity && t.activity) return 1;
                    if (e.activity && t.activity) {
                        if (e.activity.type === ce.a.Watching && t.activity.type !== ce.a.Watching) return -1;
                        if (e.activity.type !== ce.a.Watching && t.activity.type === ce.a.Watching) return 1;
                        if (e.activity.type === ce.a.Watching && t.activity.type === ce.a.Watching) return pe(e, t);
                        if (e.activity.type === ce.a.Streaming && t.activity.type !== ce.a.Streaming) return -1;
                        if (e.activity.type !== ce.a.Streaming && t.activity.type === ce.a.Streaming) return 1;
                        if (e.activity.type === ce.a.Streaming && t.activity.type === ce.a.Streaming) return pe(e, t);
                        if (e.activity.type === ce.a.Playing && t.activity.type !== ce.a.Playing) return -1;
                        if (e.activity.type !== ce.a.Playing && t.activity.type === ce.a.Playing) return 1;
                        if (e.activity.type === ce.a.Playing && t.activity.type === ce.a.Playing) return pe(e, t)
                    }
                    return he(e, t)
                }) : []
            }

            function pe(e, t) {
                return e.availability || t.availability ? e.availability && !t.availability ? -1 : !e.availability && t.availability ? 1 : e.availability === de.a.Online && t.availability !== de.a.Online ? -1 : e.availability !== de.a.Online && t.availability === de.a.Online ? 1 : e.availability === de.a.Online && t.availability === de.a.Online ? he(e, t) : e.availability === de.a.Idle && t.availability !== de.a.Idle ? -1 : e.availability !== de.a.Idle && t.availability === de.a.Idle ? 1 : e.availability === de.a.Idle && t.availability === de.a.Idle ? he(e, t) : e.availability === de.a.Busy && t.availability !== de.a.Busy ? -1 : e.availability !== de.a.Busy && t.availability === de.a.Busy ? 1 : (e.availability === de.a.Busy && (t.availability, de.a.Busy), he(e, t)) : -1
            }

            function me(e, t, n, i) {
                var r = e.slice(),
                    a = new Set,
                    o = r.filter(function(e) {
                        return e.stream && e.stream.id
                    });
                o.forEach(function(e) {
                    a.add(e.id)
                });
                var s = function(e) {
                        var t = [],
                            n = [],
                            i = [];
                        return e.forEach(function(e) {
                            switch (e.stream && e.stream.type || te.a.Live) {
                                case te.a.Premiere:
                                    n.push(e);
                                    break;
                                case te.a.WatchParty:
                                case te.a.Rerun:
                                    i.push(e);
                                    break;
                                default:
                                    t.push(e)
                            }
                        }), t.concat(n, i)
                    }(i ? o : function(e) {
                        return e.sort(function(e, t) {
                            return e.stream && t.stream ? null !== e.stream.viewersCount && null === t.stream.viewersCount ? -1 : null !== t.stream.viewersCount && null === e.stream.viewersCount ? 1 : null === e.stream.viewersCount || null === t.stream.viewersCount ? 0 : e.stream.viewersCount > t.stream.viewersCount ? -1 : e.stream.viewersCount < t.stream.viewersCount ? 1 : function(e, t) {
                                var n = e.displayName || e.login || "",
                                    i = t.displayName || t.login || "";
                                return n.localeCompare(i)
                            }(e, t) : 0
                        })
                    }(o)),
                    l = t.filter(function(e) {
                        return !a.has(e.id)
                    });
                l.reverse();
                var c = function(e, t) {
                    if (!t) return e;
                    var n = e.filter(function(e) {
                            return null !== e.id && !!t[e.id]
                        }),
                        i = e.filter(function(e) {
                            return null !== e.id && !t[e.id]
                        });
                    return n.sort(function(e, n) {
                        var i = null !== e.id && t[e.id],
                            r = null !== n.id && t[n.id],
                            a = i && i.length || 0;
                        return (r && r.length || 0) - a
                    }), n.concat(i)
                }(l, n);
                return s.concat(c)
            }

            function he(e, t) {
                if (!e.node && !t.node) return 0;
                if (e.node && !t.node) return -1;
                if (t.node && !e.node) return 1;
                var n = e.node.displayName || e.node.login || "",
                    i = t.node.displayName || t.node.login || "";
                return n.localeCompare(i)
            }
            var fe, ge = "live",
                ve = "rerun",
                be = "offline";

            function ye(e, t) {
                l.o.tracking.track(B.SpadeEventType.SideNavLoadMore, {
                    displayed_channel_count: e,
                    content: t
                })
            }

            function ke(e) {
                ye(e, fe.Subscriptions)
            }

            function Se(e) {
                ye(e, fe.Following)
            }

            function we(e, t) {
                var n = null;
                t.stream && (n = t.stream.type), l.o.tracking.track(B.SpadeEventType.SideNavChannelClick, {
                    click_target_state: Ce(n),
                    click_target_index: e
                })
            }

            function Ee(e, t) {
                var n = null;
                t.stream && (n = t.stream.type), l.o.tracking.track(B.SpadeEventType.SubscribedSideNavChannelClick, {
                    click_target_state: Ce(n),
                    click_target_index: e,
                    channel_id: t.id,
                    channel: t.login
                })
            }

            function Ce(e) {
                return e ? "watch_party" === e ? ve : ge : be
            }! function(e) {
                e.Subscriptions = "subscriptions", e.Following = "following"
            }(fe || (fe = {}));
            var Ne = n("QM53"),
                Te = n("JSR2"),
                _e = n("KyRl"),
                Re = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            sortedAndFilteredFollows: [],
                            subscribedChannels: []
                        }, t.hasRequestedTracking = !1, t.followedVideoDict = {}, t.sortAndFilterFollowedChannels = function(e) {
                            if (!e.data.loading && !e.data.error && e.data.currentUser && e.data.currentUser.followedLiveUsers && e.data.currentUser.follows) {
                                var n = t.subscribedDataToSideNavData(e),
                                    i = e.data.currentUser.followedLiveUsers.nodes.slice(),
                                    r = (e.data.currentUser.follows.edges || []).map(function(e) {
                                        return e.node
                                    }).filter(function(e) {
                                        return !!e
                                    }),
                                    a = (e.videoData && e.videoData.currentUser && e.videoData.currentUser.followedVideos && e.videoData.currentUser.followedVideos.edges || []).map(function(e) {
                                        return e.node
                                    });
                                t.followedVideoDict = function(e) {
                                    var t = {},
                                        n = {};
                                    if (!e.length) return t;
                                    var i = Date.now() - 6048e5;
                                    return e.forEach(function(e) {
                                        var r = e.owner && e.owner.id;
                                        if (r && !n[e.owner && e.owner.id || ""])
                                            if (e.self && e.self.viewingHistory && e.self.viewingHistory.position) n[e.owner && e.owner.id || ""] = !0;
                                            else {
                                                var a = new Date(e.publishedAt).getTime();
                                                if (a && !(a < i)) {
                                                    var o = t[r] || [];
                                                    o.push(e), t[r] = o
                                                }
                                            }
                                    }), t
                                }(a);
                                var o = me(i, r, t.followedVideoDict, e.sortByRelevance).filter(function(e) {
                                    return !e || !n.find(function(t) {
                                        return t.id === e.id
                                    })
                                });
                                t.setState({
                                    sortedAndFilteredFollows: o,
                                    subscribedChannels: n
                                })
                            }
                        }, t.isRenderReady = function() {
                            return !!t.props.data.error || !(t.props.data.loading || !t.props.data.currentUser) && (!t.props.data.currentUser.follows || !t.props.data.currentUser.follows.edges || 0 === t.props.data.currentUser.follows.edges.length || t.props.data.currentUser.follows.edges.length > 0 && t.state.sortedAndFilteredFollows.length > 0)
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.isRenderReady() && this.props.latencyTracking.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        this.sortAndFilterFollowedChannels(e)
                    }, t.prototype.render = function() {
                        var e = this.hasNoFollows;
                        return this.props.data.loading || this.props.data.error || !this.props.data.currentUser || this.hasRequestedTracking || (this.hasRequestedTracking = !0, function(e, t, n) {
                            var i = l.b.get("sidenav_follow_data_sample_rate", 1e4);
                            if (!Math.floor(Math.random() * i)) {
                                var r = {
                                    is_collapsed: n,
                                    followed_channels_total: 0
                                };
                                if (!t && (r.followed_channels_total = e.follows && e.follows.edges ? e.follows.edges.length : 0, e.followedLiveUsers && e.followedLiveUsers.nodes)) {
                                    var a = e.followedLiveUsers.nodes.reduce(function(e, t) {
                                        return Ce(t.stream ? t.stream.type : null) === ve ? e + 1 : e
                                    }, 0);
                                    r.followed_channels_live_stream = e.followedLiveUsers.nodes.length - a, r.followed_channels_rerun = a
                                }
                                l.o.tracking.track(B.SpadeEventType.SideNavDetails, r)
                            }
                        }(this.props.data.currentUser, e || !1, this.props.collapsed)), a.createElement(a.Fragment, null, this.props.showSubscribedChannels && !this.hasNoLiveSubscribed && a.createElement(le, {
                            collapsed: this.props.collapsed,
                            title: Object(l.d)("Subscribed Channels", "FollowedAndSubscribedChannels"),
                            collapsedIcon: w.gb.Star,
                            context: {
                                content: B.PageviewContent.SubscribedChannels
                            },
                            showExtraChannels: !1,
                            channels: this.state.subscribedChannels,
                            videos: {},
                            onChannelClick: Ee,
                            onShowMore: ke
                        }), e && a.createElement(D, {
                            collapsed: this.props.collapsed
                        }), !e && a.createElement(le, {
                            collapsed: this.props.collapsed,
                            title: Object(l.d)("Followed Channels", "FollowedAndSubscribedChannels"),
                            collapsedIcon: w.gb.Heart,
                            context: {
                                content: B.PageviewContent.FollowedChannels
                            },
                            showExtraChannels: this.props.showExtraChannels,
                            channels: this.state.sortedAndFilteredFollows,
                            videos: this.followedVideoDict,
                            onChannelClick: we,
                            onShowMore: Se,
                            "data-a-id": "followed-channel",
                            "data-a-target": "followed-channel"
                        }))
                    }, t.prototype.subscribedDataToSideNavData = function(e) {
                        if (e.subscribedData && !e.subscribedData.loading && !e.subscribedData.error && e.subscribedData.currentUser && e.subscribedData.currentUser.subscribedChannels && e.subscribedData.currentUser.subscribedChannels.edges) {
                            var t = [];
                            return e.subscribedData.currentUser.subscribedChannels.edges.forEach(function(e) {
                                var n = e.node;
                                n && t.push({
                                    id: n.id,
                                    profileImageURL: n.profileImageURL,
                                    displayName: n.displayName,
                                    login: n.login,
                                    stream: n.stream ? i.a({}, n.stream, {
                                        type: n.stream.type
                                    }) : null,
                                    lastBroadcast: null
                                })
                            }), t
                        }
                        return this.state.subscribedChannels
                    }, Object.defineProperty(t.prototype, "hasNoFollows", {
                        get: function() {
                            return !this.props.data.loading && !this.props.data.error && this.props.data.currentUser && this.props.data.currentUser.follows && (!this.props.data.currentUser.follows.edges || 0 === this.props.data.currentUser.follows.edges.length)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "hasNoLiveSubscribed", {
                        get: function() {
                            return this.props.subscribedData && !this.props.subscribedData.loading && !this.props.subscribedData.error && this.props.subscribedData.currentUser && this.props.subscribedData.currentUser.subscribedChannels && (!this.props.subscribedData.currentUser.subscribedChannels.edges || 0 === this.props.subscribedData.currentUser.subscribedChannels.edges.length)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(a.Component),
                Oe = Object(o.compose)(Object(d.a)(Te, {
                    options: function(e) {
                        return {
                            pollInterval: 6e5,
                            variables: {
                                limit: 100,
                                cursor: "",
                                sort: e.sortByRelevance ? $.a.Relevance : $.a.ViewerCount
                            }
                        }
                    }
                }), Object(d.a)(Ne, {
                    options: {
                        variables: {
                            videoTypes: [J.a.Archive, J.a.Highlight, J.a.Upload, J.a.PastPremiere]
                        }
                    },
                    name: "videoData",
                    skip: function(e) {
                        return !e.showVideoDetails
                    }
                }), Object(d.a)(_e, {
                    options: {
                        pollInterval: 6e5,
                        variables: {
                            limit: 50,
                            cursor: null,
                            isLive: !0
                        }
                    },
                    name: "subscribedData",
                    skip: function(e) {
                        return !e.showSubscribedChannels
                    }
                }), Object(Y.a)(function(e) {
                    return {
                        query: Te,
                        variables: i.a({}, e.data.variables),
                        topic: e.data.currentUser && e.data.currentUser.id ? Object(Z.p)(e.data.currentUser.id) : "",
                        type: X.PubsubMessageType.StreamDown,
                        skip: !e.data.currentUser || !e.data.currentUser.id,
                        mutator: function(e, t) {
                            return t.currentUser && t.currentUser.followedLiveUsers && (t.currentUser.followedLiveUsers.nodes = t.currentUser.followedLiveUsers.nodes.filter(function(t) {
                                return t.id !== e.channel_id
                            })), t
                        }
                    }
                }), Object(g.c)("FollowedAndSubscribedChannels"))(Re),
                Ie = n("JbHs"),
                De = n("CzFK"),
                Pe = n("l1Uh"),
                xe = n("EvYO"),
                Le = n("jytb"),
                Fe = n("y9X1"),
                Me = n("m98o"),
                Ae = n("as+V"),
                Ue = n("NMMG"),
                Be = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.renderJoinButton = function() {
                            var e = null,
                                n = Object(Me.c)(t.props.user.login, t.props.activity);
                            return n && (e = {
                                pathname: n,
                                state: {
                                    content: B.PageviewContent.Presence,
                                    medium: B.PageviewMedium.SideNav
                                }
                            }), a.createElement(Ae.a, {
                                availability: t.props.availability,
                                link: e,
                                onClick: t.handleJoinClick,
                                "data-a-target": "friend-join-button"
                            })
                        }, t.handleClick = function(e) {
                            e.preventDefault();
                            var n = Object(Ue.a)(t.props.user.id, t.props.currentUserID);
                            t.props.openThread(n), Object(Fe.a)({
                                force: !0,
                                timeout: 0
                            })
                        }, t.handleJoinClick = function() {
                            Object(xe.b)({
                                context: xe.a.FriendsListButton,
                                friendActivity: t.props.activity,
                                friendLogin: t.props.user.login
                            })
                        }, t.getPresenceStatus = function() {
                            switch (t.props.availability) {
                                case de.a.Online:
                                    return w.Ya.Online;
                                case de.a.Idle:
                                case de.a.Away:
                                    return w.Ya.Away;
                                case de.a.Busy:
                                    return w.Ya.Busy;
                                default:
                                    return
                            }
                        }, t.onMouseEnter = function() {
                            Object(Fe.b)(t.props.user.id, t.ref, Le.c.Presence)
                        }, t.onMouseLeave = function() {
                            return Object(Fe.a)()
                        }, t.setRefDelegate = function(e) {
                            t.ref = e
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return a.createElement("div", {
                            ref: this.setRefDelegate,
                            onMouseEnter: this.onMouseEnter,
                            onMouseLeave: this.onMouseLeave
                        }, a.createElement(E, i.a({
                            title: this.props.user.displayName,
                            titleElement: Object(y.a)(this.props.user.login, this.props.user.displayName),
                            avatarAlt: this.props.user.displayName,
                            avatarSrc: this.props.user.profileImageURL,
                            avatarPresence: !0,
                            presenceStatus: this.getPresenceStatus(),
                            onClick: this.handleClick,
                            linkTo: "#",
                            metadataLeft: a.createElement(Me.a, {
                                availability: this.props.availability,
                                activity: this.props.activity,
                                condensed: !0
                            }),
                            slideInContent: this.renderJoinButton(),
                            collapsed: this.props.collapsed
                        }, Object(w.Ub)(this.props))))
                    }, t = i.c([Object(g.c)("OnlineFriend")], t)
                }(a.Component);
            var je = Object(v.b)(function(e) {
                    return {
                        currentUserID: e.session.user && "" + e.session.user.id || ""
                    }
                }, function(e) {
                    return Object(x.b)({
                        openThread: function(e) {
                            return Object(De.l)({
                                collapsed: !1,
                                threadID: e,
                                ignoreCollapseIfOpen: !0
                            }, Object(Pe.a)())
                        }
                    }, e)
                })(Be),
                ze = n("GRNm"),
                We = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.defaultInitialRenderCount = 15, n.sortTimeout = 0, n.onMouseEnter = function() {
                            n.state.hasInteracted || n.setState({
                                hasInteracted: !0
                            })
                        }, n.renderOnlineFriends = function() {
                            return n.state.sortedFriends.length ? (n.state.hasInteracted ? n.state.sortedFriends : n.state.sortedFriends.slice(0, n.getDisplayCount())).map(function(e, t) {
                                return e.node && e.node.id ? a.createElement(je, {
                                    activity: e.activity,
                                    availability: e.availability,
                                    key: "online-friends-" + e.node.id,
                                    collapsed: n.props.collapsed,
                                    user: e.node,
                                    "data-a-id": "online-friend-" + t,
                                    "data-a-target": "online-friend",
                                    "data-a-name": "online-friend-" + e.node.login
                                }) : null
                            }) : []
                        }, n.getDisplayCount = function() {
                            return n.state.hasInteracted ? n.state.sortedFriends.length : Math.min(n.defaultInitialRenderCount, n.state.sortedFriends.length)
                        }, n.state = {
                            sortedFriends: [],
                            hasSorted: !1,
                            initialRenderCount: n.defaultInitialRenderCount,
                            hasInteracted: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        var t = this;
                        this.sortTimeout && (clearTimeout(this.sortTimeout), this.sortTimeout = 0), this.sortTimeout = setTimeout(function() {
                            var n = !!e.friends && e.friends.length > 0;
                            t.setState({
                                sortedFriends: ue(e.friends),
                                hasSorted: n
                            }), t.props.latencyTracking.reportInteractive(t.getDisplayCount())
                        }, 100)
                    }, t.prototype.componentDidMount = function() {
                        this.props.loading || this.props.errored || !this.props.friends || this.setState({
                            sortedFriends: ue(this.props.friends),
                            hasSorted: !0
                        })
                    }, t.prototype.render = function() {
                        return this.props.friends && 0 !== this.props.friends.length || this.props.errored || this.props.loading || this.props.collapsed ? !this.props.errored && !this.props.loading && this.props.friends && this.state.hasSorted && this.props.friends.length > 0 && 0 === this.state.sortedFriends.length && !this.props.collapsed ? a.createElement(P, {
                            hasOfflineFriends: !0
                        }) : a.createElement("div", {
                            className: "online-friends",
                            onMouseEnter: this.onMouseEnter,
                            "data-a-target": "online-friends-list"
                        }, a.createElement(O, {
                            title: Object(l.d)("Online Friends", "OnlineFriends"),
                            collapsed: this.props.collapsed,
                            collapsedIcon: w.gb.FriendsSC
                        }), this.renderOnlineFriends()) : a.createElement(P, null)
                    }, t = i.c([Object(Y.a)(function(e) {
                        return {
                            query: ze,
                            skip: !e.friends || 0 === e.friends.length,
                            topic: Object(Z.n)(e.selfID || ""),
                            type: X.PubsubMessageType.Presence,
                            mutator: function(t, n) {
                                if (!n.currentUser || !n.currentUser.friends) return n;
                                for (var i = -1, r = 0; r < n.currentUser.friends.edges.length; r++) {
                                    var a = n.currentUser.friends.edges[r];
                                    if (a.node && +a.node.id === t.data.user_id) {
                                        i = r;
                                        break
                                    }
                                }
                                if (i >= 0) {
                                    var o = n.currentUser.friends.edges[i];
                                    o.availability = t.data.availability.toUpperCase();
                                    var s = "$User:" + e.selfID + ".friends.edges." + i + ".activity";
                                    o.activity = Object(Ie.a)(t.data.activity, s)
                                }
                                return n
                            }
                        }
                    }), Object(Y.a)(function(e) {
                        return {
                            query: ze,
                            skip: !e.friends || 0 === e.friends.length,
                            topic: Object(Z.h)(e.selfID || ""),
                            mutator: function(t, n) {
                                if (!n.currentUser || !n.currentUser.friends) return n;
                                var i = t.change === X.FrienshipChangeType.Removed || t.change === X.FrienshipChangeType.SelfRemoved;
                                if ((t.change === X.FrienshipChangeType.Accepted || t.change === X.FrienshipChangeType.SelfAccepted) && setTimeout(function() {
                                        e && e.refetch && e.refetch()
                                    }), !i) return n;
                                for (var r = -1, a = t.change === X.FrienshipChangeType.SelfRemoved, o = 0; o < n.currentUser.friends.edges.length; o++) {
                                    var s = n.currentUser.friends.edges[o];
                                    if (s.node && s.node.id === (a ? t.target_user_id : t.user_id)) {
                                        r = o;
                                        break
                                    }
                                }
                                return r >= 0 && n.currentUser.friends.edges.splice(r, 1), n
                            }
                        }
                    }), Object(g.c)("OnlineFriends")], t)
                }(a.Component),
                Ve = n("/IfK"),
                He = n("f00E"),
                Ge = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.getSlideInContent = function() {
                            if (t.props.firstPageLoaded) return a.createElement(k.a, {
                                tabIndex: -1,
                                "data-a-target": "recommended-channel-follow-button",
                                size: w.z.Small,
                                channelLogin: t.props.login,
                                followUIType: k.b.TextOnly,
                                unfollowUIType: k.b.IconOnly,
                                hideDropdownWhenFollowing: !0
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = Object(y.a)(this.props.login, this.props.displayName, !0),
                            t = this.props.gameName.length > 0 ? e + " - " + this.props.gameName : e;
                        return a.createElement(E, i.a({
                            title: e,
                            titleElement: Object(y.a)(this.props.login, this.props.displayName),
                            avatarAlt: e,
                            avatarSrc: this.props.profileImageURL,
                            linkTo: {
                                pathname: "/" + this.props.login,
                                state: {
                                    content: B.PageviewContent.RecommendedChannels,
                                    medium: B.PageviewMedium.SideNav,
                                    content_index: this.props.contentIndex
                                }
                            },
                            metadataLeft: this.props.gameName,
                            slideInContent: this.getSlideInContent(),
                            collapsed: this.props.collapsed,
                            tooltipLabel: t
                        }, Object(w.Ub)(this.props)))
                    }, t = i.c([Object(g.c)("RecommendedChannel")], t)
                }(a.Component);
            var qe = Object(v.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                })(Ge),
                Qe = n("PkHO"),
                Ke = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasLoadedMore: !1
                        }, t.getRecommendedChannels = function() {
                            var e = t.dataToDisplay();
                            return e ? e.slice(0, t.getNodesToDisplayCount()).map(function(e, n) {
                                return e.broadcaster && e.broadcaster.id && e.broadcaster.login ? a.createElement(qe, {
                                    id: e.broadcaster.id,
                                    key: "recommended-channels-" + e.id,
                                    collapsed: t.props.collapsed,
                                    "data-a-id": "recommended-channel-" + n,
                                    "data-a-target": "recommended-channel",
                                    displayName: e.broadcaster.displayName,
                                    contentIndex: n,
                                    gameName: e.game && e.game.name || "",
                                    login: e.broadcaster.login,
                                    profileImageURL: e.broadcaster.profileImageURL
                                }) : null
                            }) : []
                        }, t.onClickShowMore = function() {
                            t.setState({
                                hasLoadedMore: !0
                            })
                        }, t.onClickShowLess = function() {
                            t.setState({
                                hasLoadedMore: !1
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this.dataToDisplay();
                        if (!e) return null;
                        var t = null;
                        return !this.props.collapsed && e.length > 3 && (t = a.createElement(ee, {
                            onClickMore: this.onClickShowMore,
                            onClickLess: this.onClickShowLess,
                            lessDisabled: !this.state.hasLoadedMore,
                            moreDisabled: this.state.hasLoadedMore
                        })), a.createElement("div", {
                            className: "recommended-channels"
                        }, a.createElement(O, {
                            title: Object(l.d)("Recommended Channels", "RecommendedChannels"),
                            collapsed: this.props.collapsed,
                            collapsedIcon: w.gb.NavChannels
                        }), this.getRecommendedChannels(), t)
                    }, t.prototype.dataToDisplay = function() {
                        return !this.props.data.loading && !this.props.data.error && this.props.data.currentUser && this.props.data.currentUser.recommendations && this.props.data.currentUser.recommendations.liveRecommendations && 0 !== this.props.data.currentUser.recommendations.liveRecommendations.nodes.length ? this.props.data.currentUser.recommendations.liveRecommendations.nodes : null
                    }, t.prototype.getNodesToDisplayCount = function() {
                        var e = this.dataToDisplay();
                        return e ? this.state.hasLoadedMore ? e.length : Math.min(e.length, 3) : 0
                    }, t = i.c([Object(d.a)(Qe, {
                        options: function() {
                            return {
                                variables: {
                                    first: 10,
                                    recID: Object(He.a)(),
                                    language: ""
                                }
                            }
                        }
                    }), Object(g.c)("RecommendedChannels")], t)
                }(a.Component),
                Ye = n("geRD"),
                Xe = n("FAZm"),
                $e = n("kXha"),
                Je = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.getSlideInContent = function() {
                            if (!n.state.working) {
                                var e = Object(l.d)("Add Friend", "RecommendedFriend");
                                return a.createElement(w.w, {
                                    tabIndex: -1,
                                    ariaLabel: e,
                                    type: w.y.Primary,
                                    icon: w.gb.AddFriend,
                                    size: w.x.Small,
                                    onClick: n.onClickAddFriend,
                                    "data-a-target": "recommended-friend-add-button"
                                })
                            }
                        }, n.handleClick = function(e) {
                            e.preventDefault();
                            var t = Object(Ue.a)(n.props.user.id, n.props.currentUserID);
                            n.props.openThread(t), Object(Fe.a)({
                                force: !0,
                                timeout: 0
                            })
                        }, n.onClickAddFriend = function() {
                            n.setState({
                                working: !0
                            }, function() {
                                var e = Object(Ye.a)({
                                    targetID: n.props.user.id
                                });
                                n.props.createFriendRequest(e).then(n.props.onRecommendationChanged).catch(function() {
                                    return n.setState({
                                        working: !1
                                    })
                                })
                            })
                        }, n.onMouseEnter = function() {
                            Object(Fe.b)(n.props.user.id, n.ref)
                        }, n.onMouseLeave = function() {
                            return Object(Fe.a)()
                        }, n.setRefDelegate = function(e) {
                            n.ref = e
                        }, n.state = {
                            working: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return a.createElement("div", {
                            ref: this.setRefDelegate,
                            onMouseEnter: this.onMouseEnter,
                            onMouseLeave: this.onMouseLeave
                        }, a.createElement(E, i.a({
                            title: this.props.user.displayName,
                            titleElement: Object(y.a)(this.props.user.login, this.props.user.displayName),
                            avatarAlt: this.props.user.displayName,
                            avatarSrc: this.props.user.profileImageURL,
                            onClick: this.handleClick,
                            linkTo: "#",
                            metadataLeft: "",
                            collapsed: this.props.collapsed,
                            slideInContent: this.getSlideInContent()
                        }, Object(w.Ub)(this.props))))
                    }, t = i.c([Object(d.a)(Xe, {
                        name: "createFriendRequest"
                    }), Object(d.a)($e, {
                        name: "dismissFriendRecommendation"
                    }), Object(g.c)("RecommendedFriend")], t)
                }(a.Component);
            var Ze = Object(v.b)(function(e) {
                    return {
                        currentUserID: e.session.user && "" + e.session.user.id || ""
                    }
                }, function(e) {
                    return Object(x.b)({
                        openThread: function(e) {
                            return Object(De.l)({
                                collapsed: !1,
                                threadID: e,
                                ignoreCollapseIfOpen: !0
                            }, Object(Pe.a)())
                        }
                    }, e)
                })(Je),
                et = n("IW1U"),
                tt = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onRecommendationDataChanged = function() {
                            t.props.data.refetch()
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.props.data.loading || this.props.data.error || this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = this,
                            t = this.getDisplayData();
                        return t ? a.createElement("div", {
                            className: "recommended-friends"
                        }, a.createElement(O, {
                            title: Object(l.d)("Recommended Friends", "RecommendedFriends")
                        }), t.map(function(t, n) {
                            return a.createElement(Ze, {
                                key: "recommended-friends-" + t.id,
                                user: t,
                                collapsed: e.props.collapsed,
                                onRecommendationChanged: e.onRecommendationDataChanged,
                                "data-a-id": "recommended-friend-" + n,
                                "data-a-target": "recommended-friend"
                            })
                        })) : null
                    }, t.prototype.getDisplayData = function() {
                        if (this.props.collapsed || this.props.data.loading || this.props.data.error || !this.props.data.currentUser || !this.props.data.currentUser.recommendations) return null;
                        var e = Math.min(5, this.props.data.currentUser.recommendations.friends.length),
                            t = [];
                        return this.props.data.currentUser.recommendations.friends.forEach(function(e) {
                            e.user && e.user.id && t.push(e.user)
                        }), 0 === t.length ? null : t.slice(0, e)
                    }, t = i.c([Object(d.a)(et), Object(g.c)("RecommendedFriends")], t)
                }(a.Component),
                nt = n("yLwq"),
                it = n("H/lO"),
                rt = n("NZDK"),
                at = n("8/nF"),
                ot = n("eeaQ"),
                st = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.handleClick = function(e) {
                            if (e.preventDefault(), n.props.id !== n.props.currentUserID) {
                                var t = Object(Ue.a)(n.props.id, n.props.currentUserID);
                                n.props.openThread(t)
                            }
                        }, n.getSlideInContent = function() {
                            if (!n.state.working) {
                                if (n.state.requested) {
                                    var e = Object(l.d)("Cancel Request", "SearchFriendResult");
                                    return a.createElement(w.w, {
                                        ariaLabel: e,
                                        type: w.y.Primary,
                                        icon: w.gb.Close,
                                        size: w.x.Small,
                                        onClick: n.onClickCancelRequest,
                                        "data-a-target": "search-result-cancel-button"
                                    })
                                }
                                var t = Object(l.d)("Add Friend", "SearchFriendResult");
                                return a.createElement(w.w, {
                                    ariaLabel: t,
                                    type: w.y.Primary,
                                    icon: w.gb.AddFriend,
                                    size: w.x.Small,
                                    onClick: n.onClickAddFriend,
                                    "data-a-target": "search-result-add-button"
                                })
                            }
                        }, n.onClickAddFriend = function() {
                            n.setState({
                                working: !0
                            }, function() {
                                n.props.createFriendRequest(Object(Ye.a)({
                                    targetID: n.props.id
                                })).then(function() {
                                    n.setState({
                                        working: !1,
                                        requested: !0
                                    })
                                }).catch(function() {
                                    n.setState({
                                        working: !1
                                    })
                                })
                            })
                        }, n.onClickCancelRequest = function() {
                            n.setState({
                                working: !0
                            }, function() {
                                n.props.cancelFriendRequest(Object(Ye.a)({
                                    targetID: n.props.id
                                })).then(function() {
                                    n.setState({
                                        working: !1,
                                        requested: !1
                                    })
                                }).catch(function() {
                                    n.setState({
                                        working: !1
                                    })
                                })
                            })
                        }, n.state = {
                            working: !1,
                            requested: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return a.createElement(E, i.a({
                            title: this.props.displayName,
                            titleElement: Object(y.a)(this.props.login, this.props.displayName),
                            avatarAlt: this.props.displayName,
                            avatarSrc: this.props.profileImageURL,
                            linkTo: "#",
                            onClick: this.handleClick,
                            slideInContent: this.getSlideInContent(),
                            collapsed: this.props.collapsed
                        }, Object(b.a)(this.props)))
                    }, t = i.c([Object(d.a)(ot, {
                        name: "createFriendRequest"
                    }), Object(d.a)(at, {
                        name: "cancelFriendRequest"
                    }), Object(g.c)("Search Friend Result")], t)
                }(a.Component);
            var lt = Object(v.b)(function(e) {
                    return {
                        currentUserID: e.session.user && "" + e.session.user.id || ""
                    }
                }, function(e) {
                    return Object(x.b)({
                        openThread: function(e) {
                            return Object(De.l)({
                                collapsed: !1,
                                threadID: e,
                                ignoreCollapseIfOpen: !0
                            }, Object(Pe.a)())
                        }
                    }, e)
                })(st),
                ct = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.inputTimeout = 0, n.renderFilteredFriends = function() {
                            return n.state.filteredFriends && 0 !== n.state.filteredFriends.length ? n.state.filteredFriends.filter(function(e) {
                                return e.node && null !== e.node.id
                            }).map(function(e, t) {
                                return a.createElement(je, {
                                    activity: e.activity,
                                    availability: e.availability,
                                    key: "friend-search-results-" + e.node.id,
                                    collapsed: n.props.collapsed,
                                    user: e.node,
                                    "data-a-id": "friend-search-result-" + t,
                                    "data-a-target": "friend-search-result"
                                })
                            }) : []
                        }, n.renderSearchResults = function() {
                            var e = n.state.searchResults;
                            return e && e.users && 0 !== e.users.totalHits ? e.users.hits.map(function(e, t) {
                                var i = e.profile_image || Object(nt.c)(e.objectID, 30);
                                return a.createElement(lt, {
                                    id: e.objectID,
                                    displayName: e.name,
                                    login: e.login,
                                    profileImageURL: i,
                                    key: "search-results-" + e.objectID,
                                    collapsed: n.props.collapsed,
                                    "data-a-id": "search-result-" + t,
                                    "data-a-target": "search-result"
                                })
                            }) : []
                        }, n.renderNoResults = function() {
                            return a.createElement(w.Ma, {
                                padding: {
                                    x: 1,
                                    y: .5
                                }
                            }, a.createElement(w.Q, {
                                color: w.K.Alt2
                            }, Object(l.d)('Sorry, we couldn\'t find anyone named "{user}"', {
                                user: n.props.searchInput
                            }, "SearchFriendResult")))
                        }, n.trySearchAndFilter = function(e) {
                            if (e.searchInput && 0 === e.searchInput.length) return clearTimeout(n.inputTimeout), void(n.inputTimeout = 0);
                            clearTimeout(n.inputTimeout), n.inputTimeout = setTimeout(function() {
                                if (n.search(e.searchInput), e.friends && e.searchInput) {
                                    var t = e.searchInput || "",
                                        i = {},
                                        r = e.friends.filter(function(e) {
                                            var n = e.node;
                                            if (!n) return !1;
                                            var r = (n.displayName || n.login || "").toLowerCase().includes(t.toLowerCase());
                                            return r && (i[n.login] = !0), r
                                        });
                                    n.setState({
                                        filteredFriends: r,
                                        filterFriendsByLogin: i
                                    })
                                }
                            }, 200)
                        }, n.state = {
                            searching: !0
                        }, n.searchClient = new rt.a({
                            appId: l.a.algoliaApplicationID,
                            apiKey: l.a.algoliaAPIKey,
                            apolloClient: l.o.apollo.client,
                            logger: l.j,
                            config: l.a,
                            stats: l.o.stats
                        }), n
                    }
                    return i.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        this.props.searchInput !== e.searchInput && this.trySearchAndFilter(e)
                    }, t.prototype.componentDidMount = function() {
                        this.trySearchAndFilter(this.props)
                    }, t.prototype.componentWillUnmount = function() {
                        clearTimeout(this.inputTimeout), this.inputTimeout = 0
                    }, t.prototype.render = function() {
                        var e = null,
                            t = !this.state.filteredFriends || 0 === this.state.filteredFriends.length,
                            n = !this.state.searchResults || !this.state.searchResults.users || 0 === this.state.searchResults.users.hits.length;
                        return e = !this.state.searching && t && n ? this.renderNoResults() : [this.renderFilteredFriends(), this.renderSearchResults()], a.createElement("div", {
                            className: "recommended-friends"
                        }, a.createElement(O, {
                            title: Object(l.d)("Results", "SearchFriendResults")
                        }), e)
                    }, t.prototype.search = function(e) {
                        return i.b(this, void 0, void 0, function() {
                            var t, n = this;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return e ? (this.setState({
                                            searching: !0
                                        }), [4, this.searchClient.queryForType(it.a.Users, e, Object(He.a)(), {
                                            hitsPerPage: 10
                                        })]) : [2];
                                    case 1:
                                        return t = i.sent(), this.inputTimeout && e === this.props.searchInput && (t && t.users && (t.users.hits = t.users.hits.filter(function(e) {
                                            return n.state.filterFriendsByLogin && !n.state.filterFriendsByLogin[e.login]
                                        })), this.setState({
                                            searchResults: t,
                                            searching: !1
                                        })), [2]
                                }
                            })
                        })
                    }, t = i.c([Object(g.c)("Search Friend Results")], t)
                }(a.Component),
                dt = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleInputChange = function(e) {
                            t.props.onInputChange(e.target.value)
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return this.props.collapsed ? null : a.createElement(w.qb, {
                            borderTop: !0,
                            padding: 1
                        }, a.createElement(w.ib, {
                            id: "side-nav.find-friends",
                            placeholder: Object(l.d)("Search to Add Friends", "SearchFriendsInput"),
                            onChange: this.handleInputChange,
                            "data-a-target": "side-nav-search-input"
                        }))
                    }, t
                }(a.Component),
                ut = n("p5Wp");
            n("Ue8y");
            n.d(t, "b", function() {
                return pt
            }), n.d(t, "a", function() {
                return kt
            });
            var pt = 1200,
                mt = "treatment",
                ht = "control",
                ft = "TWILIGHT_SUBSCRIBED_CHANNELS_SIDENAV",
                gt = "left_nav_order_exp",
                vt = "variant_a",
                bt = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.logger = l.o.logger.withCategory("side-nav"), n.handleToggleVisibility = function() {
                            var e = n.getLayoutCache();
                            n.props.collapsed ? (n.props.expandSideNav(), e.resource.isSocialColumnClosedByUserAction = !1) : (n.props.collapseSideNav(), e.resource.isSocialColumnClosedByUserAction = !0), l.l.set(l.o.config.layoutCacheKey, e), Object(m.c)({
                                element: m.a.SocialColumn,
                                action: n.props.collapsed ? m.b.Open : m.b.Close
                            })
                        }, n.collapseOnBreakpoint = function() {
                            var e = window.innerWidth;
                            e < pt && !n.state.forceCollapsed ? n.setState({
                                forceCollapsed: !0
                            }) : e >= pt && n.state.forceCollapsed && n.setState({
                                forceCollapsed: !1
                            }), n.resetAnimationState()
                        }, n.handleWindowResize = function() {
                            n.resizeAnimationFrame || (n.resizeAnimationFrame = requestAnimationFrame(n.collapseOnBreakpoint))
                        }, n.resetAnimationState = function() {
                            n.resizeAnimationFrame = null
                        }, n.onHistoryChange = function(e) {
                            var t = n.props.isLoggedIn,
                                i = Object(ut.a)({
                                    isLoggedIn: t,
                                    location: e
                                });
                            i !== n.state.hideSideNav && n.setState({
                                hideSideNav: i
                            })
                        }, n.onSearchInputChange = function(e) {
                            n.setState({
                                searchInput: e
                            })
                        }, n.reportInteractive = function() {
                            n.props.isLoggedIn && (n.props.data.loading || n.props.data.error) || n.props.latencyTracking.reportInteractive()
                        }, n.getRelevanceSortingAssignment = function(e) {
                            switch (e) {
                                case mt:
                                    return !0;
                                case ht:
                                default:
                                    return !1
                            }
                        };
                        var i = t.isLoggedIn,
                            r = t.location,
                            a = l.o.experiments.getAssignment("TWILIGHT_AML_RANKING_FOLLOWS"),
                            o = l.o.experiments.getAssignment(ft);
                        return n.state = {
                            isError: !1,
                            isLeftNavOrderExperiment: o === gt,
                            isSubscribedExperiment: o === vt,
                            hideSideNav: Object(ut.a)({
                                isLoggedIn: i,
                                location: r
                            }),
                            forceCollapsed: !1,
                            showSubscribedChannels: o === vt,
                            sortByRelevance: n.getRelevanceSortingAssignment(a)
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("SideNav"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentWillMount = function() {
                        Object(f.a)() && this.props.collapsed && this.props.expandSideNav()
                    }, t.prototype.componentDidMount = function() {
                        this.reportInteractive(), this.historyUnlisten = l.o.history.listen(this.onHistoryChange), Object(f.a)() || (window.addEventListener("resize", this.handleWindowResize), this.collapseOnBreakpoint())
                    }, t.prototype.componentDidUpdate = function() {
                        this.reportInteractive()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        Object(f.a)() && e.collapsed && (e.expandSideNav(), this.logger.warn("Side Nav cannot be collapsed while Channel Page Redesign experiment is enabled")), !this.props.collapsed && e.collapsed && this.state.searchInput && this.state.searchInput.length > 0 && this.setState({
                            searchInput: ""
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        this.historyUnlisten(), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame), Object(f.a)() || window.removeEventListener("resize", this.handleWindowResize)
                    }, t.prototype.render = function() {
                        if (this.state.isError) return null;
                        var e = this.props.collapsed || this.state.forceCollapsed,
                            t = r("side-nav", {
                                "side-nav--collapsed": e
                            }),
                            n = e ? "side-nav-bar-collapsed" : "side-nav-bar",
                            i = Object(f.a)(),
                            o = i ? "" : Object(p.c)(u.a.Dark),
                            s = {
                                "side-nav__toggle-visibility": !0,
                                "side-nav__toggle-visibility--open": e
                            },
                            l = a.createElement(w.Fa, {
                                position: w.Wa.Absolute,
                                flexGrow: 0,
                                flexShrink: 0,
                                display: this.state.forceCollapsed ? w.R.Hide : w.R.Block,
                                className: r(s),
                                "data-a-target": "side-nav-arrow"
                            }, a.createElement("button", {
                                onClick: this.handleToggleVisibility,
                                "data-test-selector": "side-nav__visibility-toggle"
                            }, a.createElement(w.fb, {
                                asset: e ? w.gb.GlyphArrRight : w.gb.GlyphArrLeft
                            })));
                        if (!this.props.isLoggedIn) return this.state.hideSideNav ? null : a.createElement(w.Ma, {
                            className: t,
                            flexShrink: 0,
                            flexGrow: 0,
                            fullHeight: !0,
                            position: w.Wa.Relative,
                            "data-a-target": n
                        }, a.createElement(w.Ma, {
                            className: o,
                            flexShrink: 0,
                            fullWidth: !0,
                            fullHeight: !0
                        }, a.createElement(w.qb, {
                            borderRight: !0,
                            className: "side-nav__theme-wrapper",
                            flexShrink: 0,
                            flexGrow: 1,
                            flexDirection: w.T.Column,
                            flexWrap: w.U.NoWrap,
                            fullWidth: !0,
                            fullHeight: !0,
                            display: w.R.Flex,
                            position: w.Wa.Relative
                        }, a.createElement(w.Ma, {
                            flexWrap: w.U.NoWrap,
                            fullHeight: !0,
                            display: w.R.Flex,
                            position: w.Wa.Relative,
                            fullWidth: !0
                        }, a.createElement(w.Fa, {
                            flexGrow: 1,
                            fullWidth: !0
                        }, a.createElement(c.b, {
                            suppressScrollX: !0
                        }, a.createElement(w.Ma, null, a.createElement(Ve.a, null), a.createElement(K, {
                            collapsed: e
                        }))))))), !i && l);
                        var d = this.state.searchInput && this.state.searchInput.length > 0 && !e,
                            m = null,
                            h = this.props.data && !this.props.data.error && !this.props.data.loading && this.props.data.currentUser,
                            g = h && h.friends ? h.friends.edges : [];
                        d && (m = a.createElement(w.Fa, {
                            position: w.Wa.Absolute,
                            attachLeft: !0,
                            attachRight: !0,
                            attachTop: !0
                        }, a.createElement(c.b, {
                            className: "side-nav__overlay-wrapper",
                            suppressScrollX: !0
                        }, a.createElement(ct, {
                            searchInput: this.state.searchInput,
                            friends: g,
                            key: "search-friend-results",
                            collapsed: e
                        }))));
                        var v = h ? h.id : "",
                            b = this.state.isLeftNavOrderExperiment ? a.createElement(w.Ma, {
                                flexGrow: 1,
                                fullWidth: !0
                            }, a.createElement(Oe, {
                                collapsed: e,
                                showVideoDetails: this.props.firstPageLoaded,
                                sortByRelevance: this.state.sortByRelevance,
                                showExtraChannels: this.state.isLeftNavOrderExperiment,
                                showSubscribedChannels: this.state.isSubscribedExperiment
                            }), a.createElement(Ke, {
                                collapsed: e
                            }), this.props.firstPageLoaded && a.createElement(We, {
                                collapsed: e,
                                friends: g,
                                selfID: v,
                                loading: this.props.data.loading,
                                errored: !!this.props.data.error,
                                refetch: this.props.data.refetch
                            }), this.props.firstPageLoaded && a.createElement(tt, {
                                collapsed: e
                            })) : a.createElement(w.Ma, {
                                flexGrow: 1,
                                fullWidth: !0
                            }, a.createElement(Oe, {
                                collapsed: e,
                                showVideoDetails: this.props.firstPageLoaded,
                                sortByRelevance: this.state.sortByRelevance,
                                showExtraChannels: this.state.isLeftNavOrderExperiment,
                                showSubscribedChannels: this.state.isSubscribedExperiment
                            }), a.createElement(We, {
                                collapsed: e,
                                friends: g,
                                selfID: v,
                                loading: this.props.data.loading,
                                errored: !!this.props.data.error,
                                refetch: this.props.data.refetch
                            }), this.props.firstPageLoaded && a.createElement(Ke, {
                                collapsed: e
                            }), this.props.firstPageLoaded && a.createElement(tt, {
                                collapsed: e
                            }));
                        return a.createElement(w.Ma, {
                            className: t,
                            flexShrink: 0,
                            fullHeight: !0,
                            position: w.Wa.Relative
                        }, a.createElement(w.Ma, {
                            className: o,
                            flexShrink: 0,
                            fullWidth: !0,
                            fullHeight: !0
                        }, a.createElement(w.qb, {
                            className: "side-nav__theme-wrapper",
                            borderRight: !0,
                            flexShrink: 0,
                            flexGrow: 1,
                            flexDirection: w.T.Column,
                            flexWrap: w.U.NoWrap,
                            fullWidth: !0,
                            fullHeight: !0,
                            display: w.R.Flex,
                            position: w.Wa.Relative
                        }, a.createElement(w.Ma, {
                            className: "side-nav__overlay-wrapper",
                            flexWrap: w.U.NoWrap,
                            fullHeight: !0,
                            display: w.R.Flex,
                            position: w.Wa.Relative,
                            overflow: w.Pa.Hidden,
                            fullWidth: !0
                        }, a.createElement(w.Fa, {
                            flexGrow: 1,
                            fullWidth: !0,
                            overflow: w.Pa.Hidden
                        }, a.createElement(c.b, {
                            suppressScrollX: !0
                        }, a.createElement(w.Ma, null, a.createElement(Ve.a, null), b))), m), a.createElement(dt, {
                            collapsed: e,
                            onInputChange: this.onSearchInputChange
                        }))), !i && l)
                    }, t.prototype.getLayoutCache = function() {
                        return l.l.get(l.o.config.layoutCacheKey, h.a)
                    }, t
                }(a.Component),
                yt = Object(o.compose)(Object(g.c)("SideNav"), Object(d.a)(ze, {
                    skip: function(e) {
                        return !e.isLoggedIn
                    }
                }))(bt),
                kt = Object(s.f)(yt)
        },
        "UY/B": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "CoreUtilsSetLanguagePreference"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "SetPreferredLanguageTagInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "setPreferredLanguageTag"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "settings"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "preferredLanguageTag"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 171
                }
            };
            n.loc.source = {
                body: "mutation CoreUtilsSetLanguagePreference($input: SetPreferredLanguageTagInput!) {\nsetPreferredLanguageTag(input: $input) {\nuser {\nid\nsettings {\npreferredLanguageTag\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Ue10: function(e, t, n) {
            "use strict";
            var i, r, a, o, s, l, c = n("mrSG"),
                d = n("q1tI");
            ! function(e) {
                e.False = "false", e.True = "true", e.Page = "page", e.Step = "step", e.Location = "location", e.Date = "date", e.Time = "time"
            }(i || (i = {})),
            function(e) {
                e.False = "false", e.True = "true", e.Menu = "menu", e.ListBox = "listbox", e.Tree = "tree", e.Grid = "grid", e.Dialog = "dialog"
            }(r || (r = {})),
            function(e) {
                e.False = "false", e.True = "true", e.Spelling = "spelling", e.Grammar = "grammar"
            }(a || (a = {})),
            function(e) {
                e.Off = "off", e.Assertive = "assertive", e.Polite = "polite"
            }(o || (o = {})),
            function(e) {
                e.All = "all", e.Additions = "additions", e.AdditionsText = "additions text", e.Removals = "removals", e.Text = "text"
            }(s || (s = {})),
            function(e) {
                e.Alert = "alert", e.AlertDialog = "alertdialog", e.Application = "application", e.Article = "article", e.Banner = "banner", e.Button = "button", e.Cell = "cell", e.CheckBox = "checkbox", e.ColumnHeader = "columnheader", e.ComboBox = "combobox", e.Complementary = "complementary", e.Contentinfo = "contentinfo", e.Definition = "definition", e.Dialog = "dialog", e.Directory = "directory", e.Document = "document", e.Feed = "feed", e.Figure = "figure", e.Form = "form", e.Grid = "grid", e.GridCell = "gridcell", e.Group = "group", e.Heading = "heading", e.Img = "img", e.Link = "link", e.List = "list", e.ListBox = "listbox", e.ListItem = "listitem", e.Log = "log", e.Main = "main", e.Marquee = "marquee", e.Math = "math", e.Menu = "menu", e.Menubar = "menubar", e.MenuItem = "menuitem", e.MenuItemCheckBox = "menuitemcheckbox", e.MenuItemRadio = "menuitemradio", e.Navigation = "navigation", e.None = "none", e.Note = "note", e.Option = "option", e.Presentation = "presentation", e.ProgressBar = "progressbar", e.Radio = "radio", e.RadioGroup = "radiogroup", e.Region = "region", e.Row = "row", e.RowGroup = "rowgroup", e.RowHeader = "rowheader", e.ScrollBar = "scrollbar", e.Search = "search", e.SearchBox = "searchbox", e.Separator = "separator", e.Slider = "slider", e.SpinButton = "spinbutton", e.Status = "status", e.Switch = "switch", e.Tab = "tab", e.Table = "table", e.TabList = "tablist", e.TabPanel = "tabpanel", e.Term = "term", e.TextBox = "textbox", e.Timer = "timer", e.ToolBar = "toolbar", e.Tooltip = "tooltip", e.Tree = "tree", e.TreeGrid = "treegrid", e.TreeItem = "treeitem"
            }(l || (l = {}));
            var u = n("TSYQ");

            function p() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                return u.apply(void 0, e).split(" ").sort().join(" ").trim()
            }

            function m(e) {
                for (var t = {}, n = 0, i = Object.keys(e).filter(function(e) {
                        return e.startsWith("data-")
                    }); n < i.length; n++) {
                    var r = i[n];
                    t[r] = e[r]
                }
                return t
            }
            var h = n("eO8H");

            function f(e) {
                var t;
                return "string" == typeof e ? t = e : e.pathname && (t = e.pathname), !(!t || !/^\w+:\/\//.test(t) && !t.startsWith("//"))
            }

            function g(e) {
                for (var t = {}, n = 0, i = Object.keys(e).filter(function(e) {
                        return e.startsWith("aria") && "-" !== e.charAt(4) || "role" === e
                    }); n < i.length; n++) {
                    var r = i[n];
                    t["role" !== r ? "aria-" + r.split("aria")[1].toLowerCase() : r] = e[r]
                }
                return t
            }
            var v, b, y, k, S, w, E, C, N, T, _, R, O, I;
            n("hED0");
            ! function(e) {
                e.Start = "align-content-start", e.End = "align-content-end", e.Center = "align-content-center", e.Baseline = "align-content-baseline", e.Stretch = "align-content-stretch"
            }(v || (v = {})),
            function(e) {
                e.Start = "align-items-start", e.End = "align-items-end", e.Center = "align-items-center", e.Baseline = "align-items-baseline", e.Stretch = "align-items-stretch"
            }(b || (b = {})),
            function(e) {
                e.Start = "align-self-start", e.End = "align-self-end", e.Center = "align-self-center", e.Baseline = "align-self-baseline", e.Stretch = "align-self-stretch"
            }(y || (y = {})),
            function(e) {
                e.Block = "block", e.Flex = "flex", e.Inline = "inline", e.InlineBlock = "inline-block", e.InlineFlex = "inline-flex", e.Hide = "hide", e.HideAccessible = "hide-accessible"
            }(k || (k = {})),
            function(e) {
                e.Column = "flex-column", e.ColumnReverse = "flex-column-reverse", e.Row = "flex-row", e.RowReverse = "flex-row-reverse"
            }(S || (S = {})),
            function(e) {
                e.Wrap = "flex-wrap", e.NoWrap = "flex-nowrap", e.WrapReverse = "flex-wrap-reverse"
            }(w || (w = {})),
            function(e) {
                e.Start = "justify-content-start", e.End = "justify-content-end", e.Center = "justify-content-center", e.Between = "justify-content-between", e.Around = "justify-content-around"
            }(E || (E = {})),
            function(e) {
                e.Auto = "tw-overflow-auto", e.Scroll = "tw-overflow-scroll", e.Visible = "tw-overflow-visible", e.Hidden = "tw-overflow-hidden"
            }(C || (C = {})),
            function(e) {
                e.Relative = "relative", e.Absolute = "absolute", e.Fixed = "fixed"
            }(N || (N = {})),
            function(e) {
                e.None = "tw-resize-none", e.X = "tw-resize-x", e.Y = "tw-resize-y"
            }(T || (T = {})),
            function(e) {
                e.Left = "align-left", e.Center = "align-center", e.Right = "align-right"
            }(_ || (_ = {})),
            function(e) {
                e.Top = "tw-align-top", e.Middle = "tw-align-middle", e.Baseline = "tw-align-baseline", e.Bottom = "tw-align-bottom", e.TextTop = "tw-align-text-top", e.TextBottom = "tw-align-text-bottom"
            }(R || (R = {})),
            function(e) {
                e.Visible = "visible", e.Hidden = "hidden"
            }(O || (O = {})),
            function(e) {
                e.Default = "tw-z-default", e.Above = "tw-z-above", e.Below = "tw-z-below"
            }(I || (I = {}));
            var D, P = new Set([0, .5, 1, 2, 3, 4, 5, "auto"]),
                x = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = ((t = {})["" + this.props.className] = !!this.props.className, t["tw-top-0"] = this.props.attachTop, t["tw-right-0"] = this.props.attachRight, t["tw-bottom-0"] = this.props.attachBottom, t["tw-left-0"] = this.props.attachLeft, t["tw-ellipsis"] = this.props.ellipsis, t["tw-full-width"] = this.props.fullWidth, t["tw-full-height"] = this.props.fullHeight, t);
                        this.props.overflow && (e[this.props.overflow] = !0), this.props.resize && (e[T.X] = !0), this.props.verticalAlign && (e[this.props.verticalAlign] = !0), this.props.zIndex && (e[this.props.zIndex] = !0);
                        var t, n = this.getBreakpointClasses(this.props),
                            i = this.getBreakpointClasses(this.props.breakpointExtraSmall, "xs"),
                            r = this.getBreakpointClasses(this.props.breakpointSmall, "sm"),
                            a = this.getBreakpointClasses(this.props.breakpointMedium, "md"),
                            o = this.getBreakpointClasses(this.props.breakpointLarge, "lg"),
                            s = this.getBreakpointClasses(this.props.breakpointExtraLarge, "xl"),
                            l = this.getBreakpointClasses(this.props.breakpointExtraExtraLarge, "xxl"),
                            u = d.Children.only(this.props.children);
                        return d.cloneElement(u, c.a({}, u.props, m(this.props), g(this.props), {
                            className: p(u.props.className, e, n, i, r, a, o, s, l)
                        }))
                    }, t.prototype.getBreakpointClasses = function(e, t) {
                        if (!e) return "";
                        var n, i = [];
                        (t = t ? "tw-" + t + "-" : "tw-", e.alignContent && i.push(t + e.alignContent), e.alignItems && i.push(t + e.alignItems), e.alignSelf && i.push(t + e.alignSelf), e.display && i.push(t + e.display), e.flexDirection && i.push(t + e.flexDirection), void 0 !== e.flexGrow && i.push(t + "flex-grow-" + e.flexGrow), void 0 !== e.flexOrder && i.push(t + "item-order-" + e.flexOrder), void 0 !== e.flexShrink && i.push(t + "flex-shrink-" + e.flexShrink), e.flexWrap && i.push(t + e.flexWrap), e.justifyContent && i.push(t + e.justifyContent), e.position && i.push(t + e.position), e.textAlign && i.push(t + e.textAlign), e.visibility && i.push(t + e.visibility), void 0 !== e.margin) && ("string" == typeof(n = this.getSpacingClasses("mg", e.margin)) ? i.push(t + n) : n.forEach(function(e) {
                            i.push(t + e)
                        }));
                        void 0 !== e.padding && ("string" == typeof(n = this.getSpacingClasses("pd", e.padding)) ? i.push(t + n) : n.forEach(function(e) {
                            i.push(t + e)
                        }));
                        return i
                    }, t.prototype.getSpacingClasses = function(e, t) {
                        if (void 0 === t || null === t) return "";
                        if ("object" == typeof t) {
                            if (t.x && (t.left || t.right)) throw new Error("Cannot use `x` and `left` or `right` at the same time.");
                            if (t.y && (t.top || t.bottom)) throw new Error("Cannot use `y` and `top` or `bottom` at the same time.");
                            var n = [];
                            return void 0 !== t.top && (.5 === t.top ? n.push(e + "-t-05") : n.push(e + "-t-" + t.top)), void 0 !== t.right && (.5 === t.right ? n.push(e + "-r-05") : n.push(e + "-r-" + t.right)), void 0 !== t.bottom && (.5 === t.bottom ? n.push(e + "-b-05") : n.push(e + "-b-" + t.bottom)), void 0 !== t.left && (.5 === t.left ? n.push(e + "-l-05") : n.push(e + "-l-" + t.left)), void 0 !== t.x && (.5 === t.x ? n.push(e + "-x-05") : n.push(e + "-x-" + t.x)), void 0 !== t.y && (.5 === t.y ? n.push(e + "-y-05") : n.push(e + "-y-" + t.y)), n
                        }
                        if (!P.has(t) || "tw-pd" === e && "auto" === t) throw new Error(t + " is not a valid property of either margin or padding");
                        return .5 === t ? e + "-05" : "auto" === t ? e + "-auto" : e + "-" + t
                    }, t
                }(d.Component),
                L = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(x, c.a({}, this.props), d.createElement("div", {
                            ref: this.props.refDelegate
                        }, this.props.children))
                    }, t
                }(x);
            n("miPW");
            ! function(e) {
                e.Default = "", e.Small = "tw-loading-spinner--small", e.Large = "tw-loading-spinner--large"
            }(D || (D = {}));
            var F, M, A = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        showSpinner: 0 === t.props.delay
                    }, t
                }
                return c.d(t, e), t.prototype.componentDidMount = function() {
                    var e = this,
                        t = void 0 !== this.props.delay ? this.props.delay : 300;
                    t > 0 && (this.delayTimeout = window.setTimeout(function() {
                        e.setState({
                            showSpinner: !0
                        })
                    }, t))
                }, t.prototype.componentWillUnmount = function() {
                    this.delayTimeout && clearTimeout(this.delayTimeout)
                }, t.prototype.render = function() {
                    if (!this.state.showSpinner) return null;
                    var e, t = {
                        "tw-loading-spinner": !0,
                        "tw-loading-spinner--inherit-color": this.props.inheritColor
                    };
                    return this.props.size && (t[this.props.size] = !0), e = d.createElement("div", c.a({
                        className: p(t)
                    }, m(this.props))), this.props.fillContent && (e = d.createElement(L, {
                        display: k.Flex,
                        justifyContent: E.Center,
                        alignItems: b.Center,
                        fullWidth: !0,
                        fullHeight: !0
                    }, e)), e
                }, t
            }(d.Component);
            n("tYEZ");
            ! function(e) {
                e.Inherit = "tw-svg__asset--inherit", e.Alt = "tw-svg__asset--alt", e.Alt2 = "tw-svg__asset--alt-2", e.Brand = "tw-svg__asset--brand", e.Live = "tw-svg__asset--live", e.Warn = "tw-svg__asset--warn", e.Alert = "tw-svg__asset--alert", e.Success = "tw-svg__asset--success", e.Prime = "tw-svg__asset--prime", e.Placeholder = "tw-svg__asset--placeholder", e.OverlayPlaceholder = "tw-svg__asset--overlay-placeholder"
            }(F || (F = {})),
            function(e) {
                e.AddFriend = "AddFriend", e.AddUser = "AddUser", e.AddReaction = "AddReaction", e.Android = "Android", e.AngleDown = "AngleDown", e.AngleLeft = "AngleLeft", e.AngleRight = "AngleRight", e.AngleUp = "AngleUp", e.ArrowDown = "ArrowDown", e.ArrowLeft = "ArrowLeft", e.ArrowRight = "ArrowRight", e.ArrowUp = "ArrowUp", e.Automod = "Automod", e.Ban = "Ban", e.Bits = "Bits", e.CC = "CC", e.CCOff = "CCOff", e.Carat = "Carat", e.Camera = "Camera", e.ChatRiskFlag = "ChatRiskFlag", e.ChatSettingsBack = "ChatSettingsBack", e.Check = "Check", e.Clip = "Clip", e.Close = "Close", e.Collections = "Collections", e.Comments = "Comments", e.Communities = "Communities", e.Conversations = "Conversations", e.Copy = "Copy", e.Crate = "Crate", e.Crown = "Crown", e.DeadGlitch = "DeadGlitch", e.Document = "Document", e.Download = "Download", e.DragHandle = "DragHandle", e.Drops = "Drops", e.Edit = "Edit", e.Emoticons = "Emoticons", e.Events = "Events", e.EventsReminderAdd = "EventsReminderAdd", e.EventsReminderAdded = "EventsReminderAdded", e.EventsReminderRemove = "EventsReminderRemove", e.Experiment = "Experiment", e.Extensions = "Extensions", e.Facebook = "Facebook", e.Featured = "Featured", e.Filter = "Filter", e.FollowCheck = "FollowCheck", e.FollowHollow = "FollowHollow", e.FollowX = "FollowX", e.Friends = "Friends", e.FriendsSC = "FriendsSC", e.Fullscreen = "Fullscreen", e.FullscreenExit = "FullscreenExit", e.Gear = "Gear", e.Gift = "Gift", e.Github = "Github", e.Global = "Global", e.GlyphArrDown = "GlyphArrDown", e.GlyphArrLeft = "GlyphArrLeft", e.GlyphArrRight = "GlyphArrRight", e.GlyphArrUp = "GlyphArrUp", e.GlyphArrUpDown = "GlyphArrUpDown", e.GlyphFollowers = "GlyphFollowers", e.GlyphLength = "GlyphLength", e.GlyphLive = "GlyphLive", e.GlyphLiveSmall = "GlyphLiveSmall", e.GlyphViews = "GlyphViews", e.GridLayout = "GridLayout", e.Halt = "Halt", e.Hash = "Hash", e.Heart = "Heart", e.HGCNexus = "HGCNexus", e.Hide = "Hide", e.HourGlass = "HourGlass", e.HTCVibe = "HTCVibe", e.Ignore = "Ignore", e.IOS = "IOS", e.Like = "Like", e.Liked = "Liked", e.Link = "Link", e.Lock = "Lock", e.LogoGlitch = "LogoGlitch", e.LogoTwitch = "LogoTwitch", e.LogoTwitchDevelopers = "LogoTwitchDevelopers", e.LogoTwitchPrime = "LogoTwitchPrime", e.LogoTwitchPrimeHorizontal = "LogoTwitchPrimeHorizontal", e.MacOs = "MacOs", e.Maximize = "Maximize", e.MessagesSC = "MessagesSC", e.Minimize = "Minimize", e.MiniPlayerExpand = "MiniPlayerExpand", e.MiniPlayerPause = "MiniPlayerPause", e.MiniPlayerPlay = "MiniPlayerPlay", e.More = "More", e.Muted = "Muted", e.NavBackpack = "NavBackpack", e.NavBug = "NavBug", e.NavChannels = "NavChannels", e.NavCreative = "NavCreative", e.NavDashboard = "NavDashboard", e.NavDiscover = "NavDiscover", e.NavFollowing = "NavFollowing", e.NavGames = "NavGames", e.NavLogout = "NavLogout", e.NavManager = "NavManager", e.NavMessages = "NavMessages", e.NavMore = "NavMore", e.NavMyChannel = "NavMyChannel", e.NavProfile = "NavProfile", e.NavSearch = "NavSearch", e.NavSettings = "NavSettings", e.NavVideos = "NavVideos", e.Neck = "Neck", e.NintendoSwitch = "NintendoSwitch", e.NotificationBell = "NotificationBell", e.NotificationError = "NotificationError", e.NotificationInfo = "NotificationInfo", e.NotificationSuccess = "NotificationSuccess", e.NotificationWarning = "NotificationWarning", e.OculusVR = "OculusVR", e.OP = "OP", e.PermissionsAdd = "PermissionsAdd", e.PermissionsAdded = "PermissionsAdded", e.PermissionsRemove = "PermissionsRemove", e.Pin = "Pin", e.Pinned = "Pinned", e.Play = "Play", e.Playlist = "Playlist", e.PlayStation = "PlayStation", e.Plus = "Plus", e.Popout = "Popout", e.QuestionMark = "QuestionMark", e.Reddit = "Reddit", e.Refresh = "Refresh", e.RemoveTag = "RemoveTag", e.RequestsSC = "RequestsSC", e.Reshare = "Reshare", e.Roman1 = "Roman1", e.Roman2 = "Roman2", e.Roman3 = "Roman3", e.Roman4 = "Roman4", e.Roman5 = "Roman5", e.RoomList = "RoomList", e.RoomListOpen = "RoomListOpen", e.Scissors = "Scissors", e.SearchNoResults = "SearchNoResults", e.Share = "Share", e.Shirt = "Shirt", e.Star = "Star", e.StarHollow = "StarHollow", e.Steam = "Steam", e.Streaming = "Streaming", e.Sword = "Sword", e.Team = "Team", e.Theater = "Theater", e.TheaterExit = "TheaterExit", e.Timeout = "Timeout", e.Timer = "Timer", e.ToBottom = "ToBottom", e.ToTop = "ToTop", e.Trash = "Trash", e.Trophy = "Trophy", e.Twitter = "Twitter", e.Unheart = "Unheart", e.Unignore = "Unignore", e.Unlock = "Unlock", e.Upload = "Upload", e.VKontakte = "VKontakte", e.Verified = "Verified", e.VideoPremiere = "VideoPremiere", e.VideoRerun = "VideoRerun", e.ViewerList = "ViewerList", e.VisibilityShown = "VisibilityShown", e.VisibilityHidden = "VisibilityHidden", e.VolumeMax = "VolumeMax", e.VolumeMid = "VolumeMid", e.VolumeMuted = "VolumeMuted", e.Warning = "Warning", e.Whisper = "Whisper", e.WhisperMuted = "WhisperMuted", e.Windows = "Windows", e.XboxOne = "XboxOne"
            }(M || (M = {}));
            var U, B = ((U = {})[M.AddFriend] = {
                    path: d.createElement("path", {
                        d: "M18 8a1 1 0 1 1 0 2h-1v1a1 1 0 1 1-2 0v-1h-1a1 1 0 1 1 0-2h1V7a1 1 0 1 1 2 0v1h1zM7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AddReaction] = {
                    path: d.createElement("path", {
                        d: "M13 11h-2v2c0 .55-.45 1-1 1s-1-.45-1-1v-2H7c-.55 0-1-.45-1-1s.45-1 1-1h2V7c0-.55.45-1 1-1s1 .45 1 1v2h2c.55 0 1 .45 1 1s-.45 1-1 1m-3-9a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AddUser] = {
                    path: d.createElement("path", {
                        d: "M18 8a1 1 0 1 1 0 2h-1v1a1 1 0 1 1-2 0v-1h-1a1 1 0 1 1 0-2h1V7a1 1 0 1 1 2 0v1h1zM7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Android] = {
                    path: d.createElement("path", {
                        d: "M6 14a.67.67 0 0 0 .67.67h.67V17a1 1 0 1 0 2 0V14.67h1.33V17a1 1 0 0 0 2 0V14.67h.67A.67.67 0 0 0 14 14V7.33H6ZM4.33 7.33a1 1 0 0 0-1 1V13a1 1 0 0 0 2 0V8.33A1 1 0 0 0 4.33 7.33Zm11.33 0a1 1 0 0 0-1 1V13a1 1 0 0 0 2 0V8.33A1 1 0 0 0 15.67 7.33ZM12.35 3.44l.87-.87a.33.33 0 1 0-.47-.47l-1 1A3.89 3.89 0 0 0 10 2.67a4 4 0 0 0-1.77.42l-1-1a.33.33 0 0 0-.47.47l.87.87A4 4 0 0 0 6 6.67h8A4 4 0 0 0 12.35 3.44ZM8.67 5.33H8V4.67h.67Zm3.33 0h-.67V4.67H12Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AngleDown] = {
                    path: d.createElement("path", {
                        d: "M16.707 6.293a1.005 1.005 0 0 0-1.42 0l-5.286 5.285-5.287-5.285a1.007 1.007 0 0 0-1.42 0 .996.996 0 0 0-.294.71c0 .268.105.52.295.71l5.996 5.993a1.003 1.003 0 0 0 1.42 0l5.996-5.994a1.003 1.003 0 0 0 0-1.419",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AngleLeft] = {
                    path: d.createElement("path", {
                        d: "M13.707 16.707a1.005 1.005 0 0 0 0-1.42l-5.285-5.286 5.285-5.287a1.007 1.007 0 0 0 0-1.42.996.996 0 0 0-.71-.294.994.994 0 0 0-.71.295L6.295 9.29a1.003 1.003 0 0 0 0 1.42l5.994 5.996a1.003 1.003 0 0 0 1.419 0",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AngleRight] = {
                    path: d.createElement("path", {
                        d: "M6.293 3.294a1.006 1.006 0 0 0 0 1.42L11.578 10l-5.285 5.287a1.007 1.007 0 0 0 0 1.42c.19.19.442.294.71.294a.99.99 0 0 0 .708-.295l5.995-5.996a1.003 1.003 0 0 0 0-1.42L7.711 3.294a1.002 1.002 0 0 0-1.418 0",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.AngleUp] = {
                    path: d.createElement("path", {
                        d: "M3.293 13.706a1.005 1.005 0 0 0 1.42 0L10 8.421l5.287 5.285a1.006 1.006 0 0 0 1.42 0 .996.996 0 0 0 .294-.71.994.994 0 0 0-.295-.71L10.71 6.294a1.003 1.003 0 0 0-1.42 0l-5.996 5.994a1.003 1.003 0 0 0 0 1.42",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ArrowDown] = {
                    path: d.createElement("path", {
                        d: "M14.924 11.62a.995.995 0 0 0-.919-.617h-2.008V3.998A.997.997 0 0 0 11.002 3H8.998a.996.996 0 0 0-.995.998v7.005H5.995a.996.996 0 0 0-.92.616c-.153.374-.068.803.216 1.088l4.005 4a.992.992 0 0 0 1.407 0l4.005-4a1 1 0 0 0 .216-1.088",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ArrowLeft] = {
                    path: d.createElement("path", {
                        d: "M8.38 14.924a.995.995 0 0 0 .617-.919v-2.008h7.005a.997.997 0 0 0 .998-.995V8.998a.996.996 0 0 0-.998-.995H8.997V5.995a.996.996 0 0 0-.616-.92 1.003 1.003 0 0 0-1.088.216l-4 4.005a.992.992 0 0 0 0 1.407l4 4.005a1 1 0 0 0 1.088.216",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ArrowRight] = {
                    path: d.createElement("path", {
                        d: "M11.62 5.076a.994.994 0 0 0-.617.919v2.008H3.997A.998.998 0 0 0 3 8.998v2.004c0 .55.448.995 1 .995h7.003v2.009c0 .402.243.765.617.919.373.153.803.068 1.088-.216l4-4.005a.995.995 0 0 0 0-1.407l-4-4.005a1 1 0 0 0-1.088-.216",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ArrowUp] = {
                    path: d.createElement("path", {
                        d: "M5.076 8.38a.994.994 0 0 0 .919.617h2.008v7.005c0 .55.446.998.995.998h2.004c.55 0 .995-.448.995-.998V8.998h2.008a.995.995 0 0 0 .92-.617 1.004 1.004 0 0 0-.216-1.088l-4.005-4a.995.995 0 0 0-1.407 0l-4.005 4a1 1 0 0 0-.216 1.087",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Automod] = {
                    path: d.createElement("path", {
                        d: "M16.471 4.292L10.23 2.036a.707.707 0 0 0-.444 0L3.52 4.291c-.316.106-.527.423-.52.777.165 9.392 3.756 11.326 6.677 12.835.04.02.182.096.322.096.146 0 .29-.076.33-.096 2.922-1.51 6.498-3.444 6.662-12.835.008-.354-.206-.671-.52-.777",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Ban] = {
                    path: d.createElement("path", {
                        d: "M10 16a5.961 5.961 0 0 1-3.574-1.189c.052-.036.11-.058.156-.104l8.25-8.25.001-.002A5.967 5.967 0 0 1 16 10a6 6 0 0 1-6 6m-6-6a6 6 0 0 1 6-6c1.264 0 2.435.393 3.401 1.06l-8.233 8.233c-.04.04-.058.09-.089.134A5.962 5.962 0 0 1 4 10m6-8c-4.411 0-8 3.589-8 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Bits] = {
                    path: d.createElement("path", {
                        d: "M9.592 9.081L3 11.802l6.122-9.336A1.05 1.05 0 0 1 10 2c.357 0 .688.176.878.466L17 11.802l-6.592-2.72a1.077 1.077 0 0 0-.816 0zM10 11l6 2.638-5.407 4.16a.973.973 0 0 1-1.186 0L4 13.638 10 11z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.CC] = {
                    path: d.createElement("path", {
                        d: "M13.613 11.5c.645 0 .869-.276.981-.484a.691.691 0 0 1 .97-.282.772.772 0 0 1 .268 1.023c-.305.567-.939 1.243-2.219 1.243C12.172 13 11 11.654 11 10s1.172-3 2.613-3c1.024 0 1.891.573 2.319 1.533.166.375.015.821-.341.997a.698.698 0 0 1-.948-.359 1.072 1.072 0 0 0-1.03-.671c-.655 0-1.189.673-1.189 1.5s.534 1.5 1.189 1.5m-7 0c.645 0 .869-.276.981-.484a.691.691 0 0 1 .97-.282.772.772 0 0 1 .268 1.023C8.527 12.324 7.893 13 6.613 13 5.172 13 4 11.654 4 10s1.172-3 2.613-3c1.024 0 1.891.573 2.319 1.533.166.375.015.821-.341.997a.698.698 0 0 1-.948-.359 1.072 1.072 0 0 0-1.03-.671c-.656 0-1.189.673-1.189 1.5s.533 1.5 1.189 1.5M18 2H2C.897 2 0 2.897 0 4v12c0 1.103.897 2 2 2h16c1.102 0 2-.897 2-2V4c0-1.103-.898-2-2-2",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.CCOff] = {
                    path: d.createElement("path", {
                        d: "M2 16h16V4H2v12zM18 2c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H2c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h16zm-4.387 11c1.28 0 1.914-.676 2.218-1.243a.772.772 0 0 0-.266-1.023.692.692 0 0 0-.97.282c-.112.208-.337.484-.982.484-.655 0-1.189-.673-1.189-1.5 0-.828.534-1.5 1.19-1.5.471 0 .836.237 1.03.67.168.375.591.536.947.36.355-.176.508-.623.341-.998C15.504 7.572 14.637 7 13.613 7 12.171 7 11 8.345 11 10c0 1.654 1.171 3 2.613 3zm-7 0c1.28 0 1.914-.676 2.22-1.243a.772.772 0 0 0-.268-1.023.692.692 0 0 0-.97.282c-.113.208-.337.484-.982.484-.656 0-1.189-.673-1.189-1.5 0-.828.533-1.5 1.19-1.5.471 0 .837.237 1.03.67.168.375.591.536.947.36.355-.176.508-.623.341-.998C8.504 7.572 7.637 7 6.613 7 5.173 7 4 8.345 4 10c0 1.654 1.172 3 2.613 3z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Carat] = {
                    path: d.createElement("path", {
                        d: "M16.923 6.618A.999.999 0 0 0 16 6H4a1.001 1.001 0 0 0-.707 1.707l6 6a.997.997 0 0 0 1.414 0l6-6a1 1 0 0 0 .217-1.09",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Camera] = {
                    path: d.createElement("path", {
                        d: "M14 11.005c0 2.21-1.789 4-4 4-2.211 0-4-1.79-4-4 0-2.212 1.789-4 4-4 2.211 0 4 1.788 4 4m3.92-5.997H14.5c-.18 0-.324-.107-.36-.178-.126-.236-.576-1.453-.9-2.1-.45-.865-1.08-.721-1.08-.721H7.84s-.63-.144-1.08.72c-.324.648-.774 1.865-.9 2.1-.036.072-.18.18-.36.18H2.08c-.594 0-1.08.486-1.08 1.08V17.1c0 .431.18.9.72.9h16.56c.54 0 .72-.468.72-.9V6.09c0-.594-.486-1.08-1.08-1.08",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ChatRiskFlag] = {
                    path: d.createElement("path", {
                        d: "M16.673 9.08l-1.667-1.535 1.664-1.624a1.13 1.13 0 0 0 .246-1.222 1.137 1.137 0 0 0-1.04-.695H7V3a1 1 0 1 0-2 0v13H4a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H7v-5.002h8.879c.454 0 .87-.282 1.04-.695.17-.433.075-.903-.246-1.223",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ChatSettingsBack] = {
                    path: d.createElement("path", {
                        d: "M13.383 16.924A.999.999 0 0 0 14 16V4a1.001 1.001 0 0 0-1.707-.707l-6 6a.997.997 0 0 0 0 1.414l6 6a1 1 0 0 0 1.09.217",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Check] = {
                    path: d.createElement("path", {
                        d: "M7.429 15c-.245 0-.49-.09-.683-.269l-3.428-3.2a1 1 0 0 1 1.364-1.463l2.747 2.564 7.889-7.363a1 1 0 0 1 1.365 1.462l-8.571 8a1.002 1.002 0 0 1-.683.27",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Clip] = {
                    path: d.createElement("path", {
                        d: "M17.843 3.84l-.28-1.98a1.002 1.002 0 0 0-1.131-.85l-2.475.35 1.906 2.76 1.98-.28zm-4.951.7l-1.905-2.76-2.971.42L9.92 4.963l2.97-.421zm-5.941.842L5.045 2.62l-2.474.35a1 1 0 0 0-.851 1.13L2 6.082l4.95-.7zM18 8.082v9c0 .552-.447.918-1 .918H3c-.552 0-1-.366-1-.918v-9h5l-2 3h3l2-3h3l-2 3h3l2-3h2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Close] = {
                    path: d.createElement("path", {
                        d: "M11.414 10l5.293-5.293a.999.999 0 1 0-1.414-1.414L10 8.586 4.707 3.293a.999.999 0 1 0-1.414 1.414L8.586 10l-5.293 5.293a.999.999 0 1 0 1.414 1.414L10 11.414l5.293 5.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Collections] = {
                    path: d.createElement("path", {
                        d: "M13.999 3H6.001a1 1 0 1 1 0-2h7.998a1 1 0 1 1 0 2zM16 7H4a1 1 0 0 1 0-2h12a1 1 0 1 1 0 2zM2 9h16a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1zm10.668 5.521a.6.6 0 0 0 0-1.073l-4.8-2.4a.592.592 0 0 0-.584.027.596.596 0 0 0-.284.51v4.8a.6.6 0 0 0 .868.537l4.8-2.4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Comments] = {
                    path: d.createElement("path", {
                        d: "M14.5 10a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 14.5 10M10 10a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 10 10m-4.5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3M16 2H4c-1.103 0-2 .897-2 2v9c0 1.103.897 2 2 2h2.144l3.204 2.758a.999.999 0 0 0 1.304 0L13.856 15H16c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Communities] = {
                    path: d.createElement("path", {
                        d: "M10 3c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm0 8c3.59 0 4.45.91 4.526.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H5.857A.857.857 0 0 1 5 16.142v-3.428c0-.325.183-.62.473-.767C5.551 11.91 6.41 11 10 11zm-7 2.054V16H1.429A.428.428 0 0 1 1 15.572v-1.714a.43.43 0 0 1 .237-.384c.031-.015.629-.3 1.763-.42zm15.763.42a.428.428 0 0 1 .237.384v1.714a.427.427 0 0 1-.428.428H17v-2.946c1.135.12 1.733.405 1.763.42zM4 6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zm12 0c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Conversations] = {
                    path: d.createElement("path", {
                        d: "M2.015 3.828A1 1 0 0 1 3 3h14a1 1 0 0 1 .986.828L18 3.815V12a1 1 0 0 1-1 1H6.707l-3.853 3.853A.5.5 0 0 1 2 16.5V3.815l.015.013z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Copy] = {
                    path: d.createElement("path", {
                        d: "M8.948 11.027h7.054V3.973H8.948v7.054zM7.986 13A.99.99 0 0 1 7 12.014V2.986A.99.99 0 0 1 7.986 2h9.028a.99.99 0 0 1 .986.986v9.028a.99.99 0 0 1-.986.986H7.986zM13 17.014a.99.99 0 0 1-.986.986H2.986A.99.99 0 0 1 2 17.014V7.987A.99.99 0 0 1 2.986 7H5v1.973H3.973v7.055h7.054V15H13v2.013z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Crate] = {
                    path: d.createElement("path", {
                        d: "M17 7H3l1.724-3.447A1 1 0 0 1 5.618 3h8.764a1 1 0 0 1 .894.553L17 7zm0 2v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9h5v1a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V9h5z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Crown] = {
                    path: d.createElement("path", {
                        d: "M15 10l-5-5-5 5-4-3.711V15a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V6.289L15 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Document] = {
                    path: d.createElement("path", {
                        d: "M11.333 12.097c-.736.707 1.286 3.83-1.343 3.903H5V4h10v4.997c0 .006.003.01.003.017v2.005c0 2.097-2.933.499-3.67 1.078zM17 3v5.997c0 .006-.003.01-.003.017v2.577c0 1.594-4.433 6.409-6.541 6.409H4a.987.987 0 0 1-.6-.22c-.034-.027-.076-.042-.107-.074-.011-.01-.016-.027-.026-.04A.985.985 0 0 1 3 17v-.001V3.003v-.001V3c0-.227.089-.425.217-.593.028-.037.044-.081.076-.114.008-.007.019-.01.027-.017A.99.99 0 0 1 4 2h12c.25 0 .472.1.647.253.019.016.042.024.06.04.023.024.034.057.056.083A.983.983 0 0 1 17 3zM8 8h4a1 1 0 1 0 0-2H8a1 1 0 1 0 0 2zm0 3h4a1 1 0 1 0 0-2H8a1 1 0 1 0 0 2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Download] = {
                    path: d.createElement("path", {
                        d: "M16 18H4a1 1 0 1 1 0-2h12a1 1 0 1 1 0 2zM14.037 7.973a1 1 0 0 1 .707 1.707l-4.025 4.046a1.003 1.003 0 0 1-1.414 0L5.279 9.68a1 1 0 0 1 .707-1.707h2.019V3a1 1 0 0 1 1-1h1.994a1 1 0 0 1 1 1v4.973h2.038z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.DragHandle] = {
                    path: d.createElement("path", {
                        d: "M9 2.5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm5-15a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0zm0 5a1.5 1.5 0 1 1-3.001-.001 1.5 1.5 0 0 1 3 0z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Drops] = {
                    path: d.createElement("path", {
                        d: "M15.015 18.472c-1.166.128-2.42.26-3.587.389-.428.047-.857.087-1.28.129h-.18a9.617 9.617 0 0 1-.675-.044c-.818-.09-1.736-.184-2.553-.277-.64-.072-1.28-.14-1.91-.22a.987.987 0 0 1-.83-.958v-3.485h2.947c.585.017 1.226-.307 1.485-.832.51-.943 1.003-1.824 1.504-2.771a2.58 2.58 0 0 1 .073-.126c.033.073.05.103.068.133.51.95 1.012 1.82 1.528 2.765a1.52 1.52 0 0 0 1.404.829c.932.008 1.901 0 2.833 0h.148v.153l-.002 3.272c0 .579-.377.979-.973 1.043zm.55-6.472h-2.09a.81.81 0 0 1-.76-.458c-.553-1.05-1.104-2.102-1.655-3.153l-.014-.026a.254.254 0 0 1-.019-.27.252.252 0 0 1 .27-.082l2.088.257 2.141.266c.326.033.618.213.786.486.54.852 1.072 1.709 1.607 2.564.021.032.04.067.054.104a.206.206 0 0 1-.094.282.217.217 0 0 1-.079.022.742.742 0 0 1-.149 0h-2.09l.004.008zm-11.129-.008H2.347a.752.752 0 0 1-.15 0 .212.212 0 0 1-.078-.022.207.207 0 0 1-.095-.283.64.64 0 0 1 .056-.103c.534-.856 1.066-1.712 1.606-2.565.168-.272.459-.452.786-.485l2.14-.267 2.089-.256c.1-.03.206.003.27.083a.252.252 0 0 1-.02.27l-.014.024a945.796 945.796 0 0 1-1.655 3.154.81.81 0 0 1-.76.458H4.433l.003-.008zm6.477-9.141a.165.165 0 0 1 .087.146.165.165 0 0 1-.087.146l-1.142.626-.622 1.144a.167.167 0 0 1-.293.001L8.23 3.772l-1.142-.623A.165.165 0 0 1 7 3.003c0-.061.033-.117.087-.146l1.14-.628.624-1.142A.165.165 0 0 1 8.997 1c.062 0 .117.033.146.086l.626 1.141 1.144.624zm5.022 1.537a.125.125 0 0 1 .001.219l-.856.47-.467.857a.129.129 0 0 1-.11.066.125.125 0 0 1-.11-.065l-.47-.857-.857-.466a.125.125 0 1 1-.001-.22l.856-.47.468-.857a.125.125 0 0 1 .22 0l.47.855.856.468zm-10.001 1a.125.125 0 0 1 0 .219l-.856.47-.467.857a.126.126 0 0 1-.11.066.123.123 0 0 1-.109-.065l-.471-.857-.857-.466a.125.125 0 0 1 0-.22l.856-.47.468-.857A.123.123 0 0 1 4.497 4c.046 0 .088.025.11.065l.469.855.858.468z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Edit] = {
                    path: d.createElement("path", {
                        d: "M10.614 6.113l3.269 3.27a.5.5 0 0 1 0 .707l-6.76 6.763a.5.5 0 0 1-.354.147H3.5a.5.5 0 0 1-.5-.5v-3.271c0-.134.052-.26.146-.354l6.761-6.762a.5.5 0 0 1 .707 0zm6.24.299a.5.5 0 0 1 0 .707l-1.125 1.123a.499.499 0 0 1-.707 0l-3.269-3.27a.5.5 0 0 1 0-.707l1.123-1.125a.515.515 0 0 1 .707 0l3.27 3.272z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Emoticons] = {
                    path: d.createElement("path", {
                        d: "M10 1a9 9 0 0 0-9 9 9 9 0 0 0 9 9 9 9 0 0 0 9-9 9 9 0 0 0-9-9m0 2c3.859 0 7 3.141 7 7s-3.141 7-7 7-7-3.141-7-7 3.141-7 7-7zm4 6a1 1 0 1 0-2 0 1 1 0 1 0 2 0zM8 9a1 1 0 1 0-2 0 1 1 0 1 0 2 0zm4.571 3H7.428c-.237 0-.428.168-.428.375C7 13.822 8.345 15 10 15c1.654 0 3-1.178 3-2.625 0-.207-.192-.375-.429-.375z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Events] = {
                    path: d.createElement("path", {
                        d: "M14 2h2c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h2a1 1 0 1 1 2 0h4a1 1 0 0 1 2 0zM4 4v2h12V4H4zm10 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-4-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-4-4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.EventsReminderAdd] = {
                    path: d.createElement("path", {
                        d: "M14 2h2c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h2a1 1 0 1 1 2 0h4a1 1 0 0 1 2 0zM4 16h12.001L16 8H4v8zM4 4v2h12V4H4zm7 7h1a1 1 0 0 1 0 2h-1v1a1 1 0 0 1-2 0v-1H8a1 1 0 0 1 0-2h1v-1a1 1 0 1 1 2 0v1z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.EventsReminderAdded] = {
                    path: d.createElement("path", {
                        d: "M14 2h2c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h2a1 1 0 1 1 2 0h4a1 1 0 0 1 2 0zM4 4v2h12V4H4zm8.293 5.293L9 12.586l-1.293-1.293a1 1 0 1 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 1 0-1.414-1.414z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.EventsReminderRemove] = {
                    path: d.createElement("path", {
                        d: "M14 2h2c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h2a1 1 0 1 1 2 0h4a1 1 0 0 1 2 0zm-4 8.586L8.707 9.293a1 1 0 1 0-1.414 1.414L8.586 12l-1.293 1.293a1 1 0 0 0 1.414 1.414L10 13.414l1.293 1.293a1 1 0 0 0 1.414-1.414L11.414 12l1.293-1.293a1 1 0 1 0-1.414-1.414L10 10.586zM4 4v2h12V4H4z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Experiment] = {
                    path: d.createElement("path", {
                        d: "M12.008 14a1 1 0 1 1 0-2 1 1 0 1 1 0 2m-4.5 2a1.5 1.5 0 1 1 .001-3.001 1.5 1.5 0 0 1 0 3.001m9.292-.882h.007l-3.804-8.014V4h1a1.001 1.001 0 1 0 0-2h-2.267a.728.728 0 0 0-.728.727v4.545c0 .112.025.221.075.321l1.103 2.409h-4.36L8.93 7.593a.727.727 0 0 0 .074-.321V2.727A.727.727 0 0 0 8.278 2H6.007a1 1 0 1 0 0 2H7.01v3.104l-3.805 8.014A2 2 0 0 0 5 18h10.006a2 2 0 0 0 1.795-2.882",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Extensions] = {
                    path: d.createElement("path", {
                        d: "M16 9h-1V7a2 2 0 0 0-2-2h-2V4a2 2 0 0 0-4 0v1H4a2 2 0 0 0-2 2v2h1a2 2 0 0 1 0 4H2v3a2 2 0 0 0 2 2h3v-1.063a2 2 0 0 1 4 0V18h2a2 2 0 0 0 2-2v-3h1a2 2 0 0 0 0-4",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Facebook] = {
                    path: d.createElement("path", {
                        d: "M15.341 4H4.663A.663.663 0 0 0 4 4.663v10.674c0 .366.297.663.663.663h5.75v-4.631H8.845V9.543h1.56V8.21c0-1.552.946-2.396 2.329-2.396.47.001.94.028 1.407.08v1.619h-.958c-.751 0-.896.355-.896.88v1.158h1.8l-.234 1.817h-1.566V16h3.054a.663.663 0 0 0 .663-.663V4.663A.663.663 0 0 0 15.34 4z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Featured] = {
                    path: d.createElement("path", {
                        d: "M15 8h-1v1a1 1 0 1 1-2 0V8h-1a1 1 0 1 1 0-2h1V5a1 1 0 1 1 2 0v1h1a1 1 0 1 1 0 2m1.728-6H2l16 16V3.22A1.268 1.268 0 0 0 16.728 2",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Filter] = {
                    path: d.createElement("path", {
                        d: "M12.268 3a2 2 0 0 1 3.464 0h1.265a1 1 0 1 1 0 2h-1.265a2 2 0 0 1-3.464 0H3.003a1.001 1.001 0 1 1 0-2h9.265zm-8 6a2 2 0 0 1 3.464 0h9.265a1 1 0 1 1 0 2H7.732a2 2 0 0 1-3.464 0H3.003a1.001 1.001 0 1 1 0-2h1.265zm8 6a2 2 0 0 1 3.464 0h1.265a1 1 0 1 1 0 2h-1.265a2 2 0 0 1-3.464 0H3.003a1.001 1.001 0 1 1 0-2h9.265z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.FollowCheck] = {
                    path: d.createElement("path", {
                        d: "M7.429 15c-.245 0-.49-.09-.683-.269l-3.428-3.2a1 1 0 0 1 1.364-1.463l2.747 2.564 7.889-7.363a1 1 0 0 1 1.365 1.462l-8.571 8a1.002 1.002 0 0 1-.683.27",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.FollowHollow] = {
                    path: d.createElement("path", {
                        d: "M9.979 14.992h.049c2.887-2.066 5.971-5.076 5.971-7.327C16 6.675 15.48 5 13.537 5c-1.163 0-2.348 1.583-2.67 2.137a1.004 1.004 0 0 1-.865.498h-.002a1 1 0 0 1-.866-.5C8.813 6.583 7.628 5 6.465 5 4.519 5 3.998 6.675 3.998 7.665c0 2.251 3.086 5.261 5.974 7.327h.005zm.02 2.01c-.417 0-.834-.128-1.19-.383-2.047-1.466-6.81-5.272-6.81-8.954C2 5.346 3.534 3 6.466 3c1.537 0 2.768 1.046 3.534 1.936C10.768 4.046 12 3 13.537 3 16.466 3 18 5.346 18 7.665c0 3.682-4.76 7.488-6.809 8.954a2.047 2.047 0 0 1-1.192.383z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.FollowX] = {
                    path: d.createElement("path", {
                        d: "M11.414 10l5.293-5.293a.999.999 0 1 0-1.414-1.414L10 8.586 4.707 3.293a.999.999 0 1 0-1.414 1.414L8.586 10l-5.293 5.293a.999.999 0 1 0 1.414 1.414L10 11.414l5.293 5.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Friends] = {
                    path: d.createElement("path", {
                        d: "M5 5c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm8-2c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zM8.685 13.632a.572.572 0 0 1 .315.51v2.287a.57.57 0 0 1-.571.57H1.572A.572.572 0 0 1 1 16.43v-2.286c0-.216.123-.414.316-.511C1.368 13.607 2.606 13 5 13s3.633.607 3.685.632zm9.841-1.685a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H10.93c.042-.185.07-.374.07-.572v-2.286c0-.98-.545-1.86-1.422-2.299a5.904 5.904 0 0 0-.85-.33C9.647 11.263 11.062 11 13 11c3.59 0 5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.FriendsSC] = {
                    path: d.createElement("path", {
                        d: "M5 5c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm8-2c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zM8.685 13.632a.572.572 0 0 1 .315.51v2.287a.57.57 0 0 1-.571.57H1.572A.572.572 0 0 1 1 16.43v-2.286c0-.216.123-.414.316-.511C1.368 13.607 2.606 13 5 13s3.633.607 3.685.632zm9.841-1.685a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H10.93c.042-.185.07-.374.07-.572v-2.286c0-.98-.545-1.86-1.422-2.299a5.904 5.904 0 0 0-.85-.33C9.647 11.263 11.062 11 13 11c3.59 0 5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Fullscreen] = {
                    path: d.createElement("path", {
                        d: "M7.414 5l1.293-1.293A1 1 0 0 0 8 2H3a1 1 0 0 0-1 1v5a1.002 1.002 0 0 0 1.707.707L5 7.414l2.293 2.293a.997.997 0 0 0 1.414 0l1-1a.999.999 0 0 0 0-1.414L7.414 5zM18 12v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-.707-1.707L12.586 15l-2.293-2.293a.999.999 0 0 1 0-1.414l1-1a.997.997 0 0 1 1.414 0L15 12.586l1.293-1.293A1 1 0 0 1 18 12z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.FullscreenExit] = {
                    path: d.createElement("path", {
                        d: "M15.414 13l1.293-1.293A1 1 0 0 0 16 10h-5a1 1 0 0 0-1 1v5a1.002 1.002 0 0 0 1.707.707L13 15.414l2.293 2.293a.997.997 0 0 0 1.414 0l1-1a.999.999 0 0 0 0-1.414L15.414 13zM10 4v5a1 1 0 0 1-1 1H4a1 1 0 0 1-.707-1.707L4.586 7 2.293 4.707a.999.999 0 0 1 0-1.414l1-1a.997.997 0 0 1 1.414 0L7 4.586l1.293-1.293A1 1 0 0 1 10 4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Gear] = {
                    path: d.createElement("path", {
                        d: "M9.97 13.395a3.37 3.37 0 1 1 .001-6.741 3.37 3.37 0 0 1 0 6.74m7.3-4.915a48.16 48.16 0 0 0-.926-.127c-.037-.005-.071-.03-.081-.065a6.553 6.553 0 0 0-.615-1.48.09.09 0 0 1 .007-.1c.19-.247.377-.497.558-.74a.844.844 0 0 0-.083-1.091L15.12 3.863a.842.842 0 0 0-1.09-.081c-.245.18-.494.368-.741.557a.092.092 0 0 1-.1.01 6.415 6.415 0 0 0-1.481-.614.09.09 0 0 1-.064-.078c-.04-.308-.084-.63-.13-.93a.856.856 0 0 0-.828-.729h-1.43a.856.856 0 0 0-.83.728c-.044.3-.088.615-.128.925-.005.036-.03.07-.064.08a6.53 6.53 0 0 0-1.481.615.091.091 0 0 1-.1-.008 53.22 53.22 0 0 0-.74-.558.843.843 0 0 0-1.091.083L3.81 4.875a.843.843 0 0 0-.082 1.091c.18.244.369.494.558.74.023.03.026.07.009.1a6.504 6.504 0 0 0-.614 1.481.09.09 0 0 1-.077.064c-.308.04-.604.083-.905.128a.833.833 0 0 0-.7.83v1.43c0 .412.294.768.7.83.3.044.604.088.912.128.037.006.064.03.073.065.142.515.348 1.013.612 1.48a.09.09 0 0 1-.01.1c-.19.246-.377.495-.558.74a.843.843 0 0 0 .082 1.09l1.01 1.012a.844.844 0 0 0 1.092.082c.245-.18.493-.367.74-.558a.09.09 0 0 1 .1-.008c.466.264.964.47 1.48.614a.09.09 0 0 1 .065.076c.04.31.084.607.129.907a.833.833 0 0 0 .829.703h1.43a.833.833 0 0 0 .829-.703c.045-.3.089-.604.129-.913a.088.088 0 0 1 .064-.073 6.544 6.544 0 0 0 1.48-.613.09.09 0 0 1 .1.01c.248.19.497.377.742.559a.84.84 0 0 0 1.089-.084l1.012-1.01a.844.844 0 0 0 .082-1.091c-.18-.245-.37-.494-.558-.74a.088.088 0 0 1-.008-.1c.264-.467.47-.965.613-1.48a.09.09 0 0 1 .077-.065c.308-.04.633-.083.934-.128a.858.858 0 0 0 .729-.83V9.31a.859.859 0 0 0-.73-.83",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Gift] = {
                    path: d.createElement("path", {
                        d: "M13.438 5.419c-.413.238-1.578.584-2.466.584-.332 0-.513-.05-.588-.084.008-.496 1.185-1.941 1.963-2.39a1.094 1.094 0 0 1 1.491.399c.3.52.121 1.19-.4 1.49m-4.437.585c-.886 0-2.051-.346-2.464-.584a1.093 1.093 0 0 1 .548-2.037c.189 0 .377.05.543.147.777.449 1.956 1.894 1.963 2.39-.074.034-.256.084-.59.084m6.322-.385c.805 0 1.662.656 1.662 1.462v2.183c0 .268-.142.52-.335.738H3.335C3.14 9.784 3 9.53 3 9.263V7.08c0-.806.855-1.462 1.66-1.462h.329a2.54 2.54 0 0 1 .101-2.361c.676-1.171 2.101-1.617 3.288-.935.44.254 1.075.81 1.614 1.453.54-.642 1.175-1.2 1.612-1.452 1.188-.684 2.612-.238 3.288.935a2.531 2.531 0 0 1 .102 2.36h.329zM8.993 12v6H5.458a1.464 1.464 0 0 1-1.462-1.462V12h4.995zm2 0h4.994v4.538c0 .806-.656 1.462-1.462 1.462h-3.533v-6z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Github] = {
                    path: d.createElement("path", {
                        d: "M10 1a9 9 0 0 0-2.845 17.54c.45.083.614-.195.614-.434 0-.213-.007-.78-.012-1.53-2.503.543-3.031-1.207-3.031-1.207-.41-1.04-1-1.317-1-1.317-.817-.558.062-.547.062-.547.903.064 1.378.928 1.378.928.803 1.375 2.107.978 2.62.748.082-.582.314-.978.571-1.203-1.998-.227-4.1-1-4.1-4.448 0-.983.351-1.787.927-2.415-.093-.228-.402-1.144.089-2.382 0 0 .755-.242 2.474.922A8.62 8.62 0 0 1 10 5.352a8.63 8.63 0 0 1 2.253.303c1.719-1.164 2.473-.922 2.473-.922.491 1.238.182 2.154.09 2.382.577.628.925 1.432.925 2.415 0 3.457-2.105 4.218-4.11 4.44.323.278.611.828.611 1.667 0 1.203-.01 2.174-.01 2.469 0 .24.162.521.618.433A9 9 0 0 0 10 1",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Global] = {
                    path: d.createElement("path", {
                        d: "M13.156 15.097A10.703 10.703 0 0 0 14.36 11h1.557a6.004 6.004 0 0 1-2.76 4.097M4.096 11h1.557a10.725 10.725 0 0 0 1.206 4.1A6.007 6.007 0 0 1 4.097 11m2.76-6.097A10.702 10.702 0 0 0 5.654 9H4.097a6.006 6.006 0 0 1 2.76-4.097M12.403 9H7.61c.198-1.854.948-3.43 2.168-4.988.077-.003.152-.012.23-.012.075 0 .147.009.222.012C11.451 5.57 12.204 7.146 12.403 9m-2.167 6.989c-.077.003-.152.01-.229.01-.076 0-.148-.007-.223-.01-1.222-1.558-1.975-3.135-2.174-4.99h4.794c-.198 1.855-.948 3.432-2.168 4.99m5.681-6.99H14.36a10.704 10.704 0 0 0-1.207-4.098A6.003 6.003 0 0 1 15.917 9m2.096 1.014c0-.04-.009-.072-.01-.11C17.948 5.53 14.392 2 10.006 2 5.63 2 2.077 5.518 2.012 9.88 2.01 9.918 2 9.95 2 9.987c0 .039.01.072.011.11A7.998 7.998 0 0 0 10.007 18c4.378 0 7.93-3.518 7.994-7.882.002-.036.012-.067.012-.104",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphArrDown] = {
                    path: d.createElement("path", {
                        d: "M5.054 7.463A.714.714 0 0 1 5.714 7h8.572c.289 0 .55.183.66.463.11.28.05.603-.155.817l-4.286 4.5A.696.696 0 0 1 10 13a.696.696 0 0 1-.505-.22L5.21 8.28a.777.777 0 0 1-.155-.817"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphArrLeft] = {
                    path: d.createElement("path", {
                        d: "M12.537 14.946a.714.714 0 0 0 .463-.66V5.714a.715.715 0 0 0-.463-.66.777.777 0 0 0-.817.155l-4.5 4.286A.696.696 0 0 0 7 10a.7.7 0 0 0 .22.505l4.5 4.286a.777.777 0 0 0 .817.155"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphArrRight] = {
                    path: d.createElement("path", {
                        d: "M7.463 5.054a.714.714 0 0 0-.463.66v8.572c0 .289.183.55.463.66.28.11.603.05.817-.155l4.5-4.286A.696.696 0 0 0 13 10a.7.7 0 0 0-.22-.505L8.28 5.21a.777.777 0 0 0-.817-.155"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphArrUp] = {
                    path: d.createElement("path", {
                        d: "M5.054 12.537c.11.28.372.463.66.463h8.572c.289 0 .55-.183.66-.463a.777.777 0 0 0-.155-.817l-4.286-4.5A.696.696 0 0 0 10 7a.7.7 0 0 0-.505.22l-4.286 4.5a.777.777 0 0 0-.155.817"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphArrUpDown] = {
                    path: d.createElement("path", {
                        d: "M5.056 8.148a.733.733 0 0 0 .678.452h8.8a.733.733 0 0 0 .519-1.252l-4.4-4.4a.731.731 0 0 0-1.037 0l-4.4 4.4a.733.733 0 0 0-.16.8m0 4.304A.733.733 0 0 1 5.734 12h8.8a.733.733 0 0 1 .519 1.252l-4.4 4.4a.731.731 0 0 1-1.037 0l-4.4-4.4a.733.733 0 0 1-.16-.8"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphFollowers] = {
                    path: d.createElement("path", {
                        d: "M13.535 3C11.998 3 10.767 4.046 10 4.937 9.232 4.046 8.002 3 6.465 3 3.535 3 2 5.347 2 7.665c0 3.683 4.762 7.488 6.808 8.954a2.047 2.047 0 0 0 2.383 0c2.048-1.466 6.81-5.271 6.81-8.954C18 5.347 16.466 3 13.534 3",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphLength] = {
                    path: d.createElement("path", {
                        d: "M10 16c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6m0-14a8 8 0 1 1 0 16 8 8 0 0 1 0-16zm1 7.628V7c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .009.005.016.005.024a.992.992 0 0 0 .287.733l2.011 1.95a1.003 1.003 0 0 0 1.414 0 1.003 1.003 0 0 0 0-1.413L11 9.628z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphLive] = {
                    path: d.createElement("path", {
                        d: "M10 2c1.93 0 3.5 1.57 3.5 3.5S11.93 9 10 9 6.5 7.43 6.5 5.5 8.07 2 10 2zm6.447 10.105c.34.17.553.516.553.896v4a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-4c0-.38.214-.726.552-.896.091-.045 2.26-1.104 6.448-1.104 4.187 0 6.357 1.06 6.447 1.104z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphLiveSmall] = {
                    path: d.createElement("path", {
                        d: "M10 3c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm5.526 8.948a.855.855 0 0 1 .474.767v3.428a.857.857 0 0 1-.857.857H4.857A.857.857 0 0 1 4 16.143v-3.428c0-.326.183-.622.473-.767C4.551 11.909 6.41 11 10 11s5.448.909 5.526.948z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GlyphViews] = {
                    path: d.createElement("path", {
                        d: "M10 15c-4.044 0-7-3.288-7-5 0-1.712 2.956-5 7-5 4.044 0 7 3.288 7 5 0 1.712-2.956 5-7 5m0-12c4.763 0 9 3.914 9 7s-4.237 7-9 7-9-3.914-9-7 4.237-7 9-7zm3 7a3 3 0 1 0-6 0 3 3 0 0 0 6 0z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.GridLayout] = {
                    path: d.createElement("path", {
                        d: "M3 10a1 1 0 1 1 0-2h8a1 1 0 1 1 0 2H3zm14-2a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2zm0 4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h14zm0-10a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Halt] = {
                    path: d.createElement("path", {
                        d: "M10 17a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm0 2a9 9 0 1 1 0-18 9 9 0 0 1 0 18zm-5-9c0 .556.446 1 .995 1h8.01c.54 0 .995-.448.995-1 0-.556-.446-1-.995-1h-8.01C5.455 9 5 9.448 5 10z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Hash] = {
                    path: d.createElement("path", {
                        d: "M7.714 12l.572-4h4l-.572 4h-4zM17 12h-3.286l.572-4H17a1 1 0 1 0 0-2h-2.429L15 3a1 1 0 1 0-2 0l-.429 3h-4L9 3a1 1 0 1 0-2 0l-.429 3H3a1 1 0 1 0 0 2h3.286l-.572 4H3a1 1 0 1 0 0 2h2.429L5 17a1 1 0 1 0 2 0l.429-3h4L11 17a1 1 0 1 0 2 0l.429-3H17a1 1 0 1 0 0-2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.HGCNexus] = {
                    path: d.createElement("path", {
                        d: "M10.927 0c4.848.499 8.65 4.79 8.555 9.98 0 1.198-.19 2.395-.57 3.493v-.2c-1.901-10.279-9.22-8.882-9.22-8.882L10.927 0zM2.848 16.467c9.505 3.394 11.976-3.892 11.976-3.992l2.947 3.294c-2.852 4.191-8.27 5.489-12.547 2.894-.95-.599-1.806-1.297-2.566-2.295.095.1.095.1.19.1zM8.266.2C.757 7.086 5.51 13.074 5.51 13.074l-4.183 1.098C-.669 9.482.947 3.892 5.224 1.297 6.27.7 7.315.3 8.456.1c-.095 0-.095.1-.19.1z",
                        fillRule: "nonzero"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Heart] = {
                    path: d.createElement("path", {
                        d: "M13.535 3C11.998 3 10.767 4.046 10 4.937 9.232 4.046 8.002 3 6.465 3 3.535 3 2 5.347 2 7.665c0 3.683 4.762 7.488 6.808 8.954a2.047 2.047 0 0 0 2.383 0c2.048-1.466 6.81-5.271 6.81-8.954C18 5.347 16.466 3 13.534 3",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Hide] = {
                    path: d.createElement("path", {
                        d: "M11.414 10l3.293-3.293a.999.999 0 1 0-1.414-1.414L10 8.586 6.707 5.293a.999.999 0 1 0-1.414 1.414L8.586 10l-3.293 3.293a.999.999 0 1 0 1.414 1.414L10 11.414l3.293 3.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.HourGlass] = {
                    path: d.createElement("path", {
                        d: "M4 3a1 1 0 1 1 0-2h12a1 1 0 1 1 0 2H4zm12 14a1 1 0 1 1 0 2H4a1 1 0 1 1 0-2h12zm.317-12A7.002 7.002 0 0 1 11 8.927v2.146A7.002 7.002 0 0 1 16.317 15H3.682A7.004 7.004 0 0 1 9 11.073V8.927A7.004 7.004 0 0 1 3.682 5h12.635z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.HTCVibe] = {
                    path: d.createElement("path", {
                        d: "M17.86 13.72 11.93 3.46a1 1 0 0 0-.9-.52H9a1 1 0 0 0-.9.52L2.14 13.72a1 1 0 0 0 0 1l1 1.78a1 1 0 0 0 .9.52H15.93a1 1 0 0 0 .9-.52l1-1.78a1 1 0 0 0 0-1m-5 1a9.44 9.44 0 0 1-5.65 0 2.13 2.13 0 0 1-1.46-2.46 9.38 9.38 0 0 1 2.83-5 2.15 2.15 0 0 1 2.91 0 9.38 9.38 0 0 1 2.84 5 2.13 2.13 0 0 1-1.46 2.46",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.IOS] = {
                    path: d.createElement("path", {
                        d: "M16.46 14.47A8.7 8.7 0 0 1 15.6 16a7.86 7.86 0 0 1-1.11 1.34 2.15 2.15 0 0 1-1.42.63 3.57 3.57 0 0 1-1.32-.31 3.77 3.77 0 0 0-1.42-.31 3.9 3.9 0 0 0-1.46.31A3.92 3.92 0 0 1 7.62 18a2 2 0 0 1-1.46-.64A8.25 8.25 0 0 1 5 16a9.59 9.59 0 0 1-1.23-2.43 8.91 8.91 0 0 1-.51-2.9A5.3 5.3 0 0 1 4 7.86 4.08 4.08 0 0 1 5.41 6.39a3.92 3.92 0 0 1 2-.56 4.64 4.64 0 0 1 1.52.35 4.9 4.9 0 0 0 1.21.36 7.23 7.23 0 0 0 1.34-.42 4.43 4.43 0 0 1 1.82-.32 3.87 3.87 0 0 1 3 1.6 3.37 3.37 0 0 0-1.79 3.06A3.38 3.38 0 0 0 15.63 13a3.64 3.64 0 0 0 1.11.73q-.13.39-.28.74ZM13.37 2.32a3.41 3.41 0 0 1-.88 2.24A3 3 0 0 1 10 5.78a2.49 2.49 0 0 1 0-.3 3.51 3.51 0 0 1 .93-2.26 3.57 3.57 0 0 1 1.13-.85A3.37 3.37 0 0 1 13.35 2a2.91 2.91 0 0 1 0 .32Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Ignore] = {
                    path: d.createElement("path", {
                        d: "M14 9H6a1 1 0 1 1 0-2h8a1 1 0 1 1 0 2zm3.985-5.172A1 1 0 0 0 17 3H3a.999.999 0 0 0-.985.828L2 3.816V12a1 1 0 0 0 1 1h10.293l3.853 3.854a.504.504 0 0 0 .545.108A.5.5 0 0 0 18 16.5V3.816l-.015.012z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Like] = {
                    path: d.createElement("path", {
                        d: "M15 16H9V8.798l3.006-2.93v2.124a1 1 0 0 0 1 1H16L15 16zm2-8.998a1 1 0 0 1 1 1L17 17a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1V8.449a1 1 0 0 1 .217-.622l4.996-5.45A1.002 1.002 0 0 1 13.996 3v4.002H17zM4 9a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1h1z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Liked] = {
                    path: d.createElement("path", {
                        d: "M4 9a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1h1zm13-1.998a1 1 0 0 1 1 1L17 17a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1V8.45a1 1 0 0 1 .217-.623l4.996-5.449A1.002 1.002 0 0 1 13.996 3v4.002H17z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Link] = {
                    path: d.createElement("path", {
                        d: "M6.329 17.996a4.322 4.322 0 0 1-3.063-1.267 4.338 4.338 0 0 1 0-6.126 1 1 0 0 1 1.415 1.414 2.335 2.335 0 0 0 0 3.298c.909.91 2.387.908 3.297 0l3.166-3.167c.91-.91.91-2.387 0-3.297a1 1 0 0 1 1.414-1.414 4.335 4.335 0 0 1 0 6.125l-3.166 3.167a4.32 4.32 0 0 1-3.063 1.267zm1.815-5.145a.997.997 0 0 1-.707-.293 4.335 4.335 0 0 1 0-6.125l3.166-3.167a4.338 4.338 0 0 1 6.126 0 4.338 4.338 0 0 1 0 6.126.999.999 0 1 1-1.414-1.414 2.337 2.337 0 0 0 0-3.298 2.335 2.335 0 0 0-3.298.001L8.851 7.847a2.334 2.334 0 0 0 0 3.297.999.999 0 0 1-.707 1.707z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Lock] = {
                    path: d.createElement("path", {
                        d: "M7.987 6.599C7.987 5.166 8.685 4 9.997 4c1.311 0 2.009 1.166 2.009 2.599v2.412H7.987V6.599zm7.256 2.412h-1.248V6.599C13.995 4.063 12.411 2 9.997 2S5.998 4.063 5.998 6.599v2.412H4.751c-.415 0-.751.359-.751.8v7.397c0 .442.336.8.751.8h10.492c.414 0 .751-.358.751-.8V9.811c0-.441-.337-.8-.751-.8z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.MacOs] = {
                    path: d.createElement("path", {
                        d: "M13.5 6.3a.35.35 0 0 0-.32.32v1a.32.32 0 1 0 .64 0v-1A.35.35 0 0 0 13.5 6.3Z M6.42 8a.35.35 0 0 0 .32-.32v-1a.32.32 0 0 0-.64 0v1A.29.29 0 0 0 6.42 8Z M12 17.6a25.81 25.81 0 0 1-.55-3.32V14.2a5 5 0 0 0 3.45-1.87.2.2 0 0 0-.08-.32c-.08 0-.08-.08-.16-.08s-.16.08-.24.08a3.17 3.17 0 0 1-1 .88 6.27 6.27 0 0 1-2 .72 19.59 19.59 0 0 1-.08-2.17.59.59 0 0 0-.64-.64H8.83v-.24a33 33 0 0 1 .4-3.94 16.78 16.78 0 0 1 1.13-3.86H9.8A15 15 0 0 0 8.67 6.54a33.64 33.64 0 0 0-.4 4v.16a.68.68 0 0 0 .16.48c.08.16.24.16.48.16H10.6c.08 0 .16 0 .16.16a21.07 21.07 0 0 0 .08 2.25 7.25 7.25 0 0 1-1 .08A6.44 6.44 0 0 1 6.42 13a2.39 2.39 0 0 1-1-.88A.3.3 0 0 0 5.22 12H5.06C5 12 5 12.09 5 12.17v.16c.08.08 1.37 2 4.82 2a4.83 4.83 0 0 0 1.08-.06h0a31.27 31.27 0 0 0 .55 3.3 M17.19 17.6H2.81A.81.81 0 0 1 2 16.79V3.36a.81.81 0 0 1 .81-.81H17.19a.81.81 0 0 1 .81.81V16.79A.81.81 0 0 1 17.19 17.6Zm.26-1.1V3.66a.58.58 0 0 0-.58-.58H3.12a.58.58 0 0 0-.58.58V16.5a.58.58 0 0 0 .58.58H16.88A.58.58 0 0 0 17.45 16.5Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Maximize] = {
                    path: d.createElement("path", {
                        d: "M4 18c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h12c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4zM4 4v12h11.997L16 4H4zm3 4a1 1 0 1 1 0-2h6a1 1 0 1 1 0 2H7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.MessagesSC] = {
                    path: d.createElement("path", {
                        d: "M2.015 3.828A1 1 0 0 1 3 3h14a1 1 0 0 1 .986.828L18 3.815V12a1 1 0 0 1-1 1H6.707l-3.853 3.853A.5.5 0 0 1 2 16.5V3.815l.015.013z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.MiniPlayerExpand] = {
                    path: d.createElement("path", {
                        d: "M13.146 9.354l-.646-.646-1.146 1.146a.5.5 0 0 1-.707 0l-.5-.5a.5.5 0 0 1 0-.707L11.293 7.5l-.646-.646A.499.499 0 0 1 11 6h2.5a.5.5 0 0 1 .5.5V9a.5.5 0 0 1-.854.354zM18 3v11a.985.985 0 0 1-.235.621c-.022.027-.034.062-.058.086-.017.016-.04.023-.057.038A.987.987 0 0 1 17 15H13.003a1.001 1.001 0 1 1 0-2H16V4H6v4.997a1.001 1.001 0 1 1-2 0V3.003v-.002V3c0-.235.094-.442.229-.612.024-.03.038-.068.064-.095.015-.014.036-.021.051-.034A.989.989 0 0 1 5 2h12c.229 0 .43.09.598.22.035.027.078.043.109.073.011.012.016.028.027.04A.986.986 0 0 1 18 3zm-9.111 9c.614 0 1.11.498 1.11 1.111v3.778C10 17.502 9.504 18 8.89 18H3.112A1.112 1.112 0 0 1 2 16.889v-3.778C2 12.498 2.498 12 3.112 12h5.777z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.MiniPlayerPause] = {
                    path: d.createElement("path", {
                        d: "M8 2a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3zm7 0a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.MiniPlayerPlay] = {
                    path: d.createElement("path", {
                        d: "M4.447 2.105a1.008 1.008 0 0 0-.973.044A1 1 0 0 0 3 3v14a.999.999 0 0 0 1.447.894l12-7a1 1 0 0 0 0-1.789l-12-7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Minimize] = {
                    path: d.createElement("path", {
                        d: "M4 18c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h12c1.103 0 2 .897 2 2v12c0 1.103-.897 2-2 2H4zM4 4v12h11.997L16 4H4zm3 10a1 1 0 1 1 0-2h6a1 1 0 1 1 0 2H7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.More] = {
                    path: d.createElement("path", {
                        d: "M12 4a2 2 0 1 1-4.002-.002A2 2 0 0 1 12 4zm0 6a2 2 0 1 1-4.002-.002A2 2 0 0 1 12 10zm0 6a2 2 0 1 1-4.002-.002A2 2 0 0 1 12 16z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Muted] = {
                    path: d.createElement("path", {
                        d: "M11 17a1.002 1.002 0 0 1-1.641.768L3.638 14H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.638l5.721-3.768a1.003 1.003 0 0 1 1.065-.138c.351.165.576.518.576.906v14zm6.414-7l1.293 1.293a.999.999 0 1 1-1.414 1.414L16 11.414l-1.293 1.293a.997.997 0 0 1-1.414 0 .999.999 0 0 1 0-1.414L14.586 10l-1.293-1.293a.999.999 0 1 1 1.414-1.414L16 8.586l1.293-1.293a.999.999 0 1 1 1.414 1.414L17.414 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavBug] = {
                    path: d.createElement("path", {
                        d: "M16.997 12.061a1 1 0 1 0 0-2h-2.054a9.06 9.06 0 0 0-.456-2.073l2.22-2.22a.999.999 0 1 0-1.414-1.414l-1.758 1.758a5.568 5.568 0 0 0-1.084-1.149l1.256-1.256a.999.999 0 1 0-1.414-1.414L10.49 4.096a3.611 3.611 0 0 0-.49-.035c-.166 0-.329.013-.49.035L7.707 2.293a.999.999 0 1 0-1.414 1.414L7.55 4.963a5.568 5.568 0 0 0-1.084 1.15L4.707 4.353a.999.999 0 1 0-1.414 1.414l2.22 2.22a9.06 9.06 0 0 0-.456 2.073H3.003a1.001 1.001 0 1 0 0 2h2.054c.077.751.238 1.463.471 2.116L3.294 16.41a1.005 1.005 0 0 0 0 1.42c.391.39 1.03.39 1.42 0l1.78-1.78c.677.93 1.541 1.595 2.506 1.87V9.064a1.001 1.001 0 1 1 2 0v8.856c.966-.275 1.83-.94 2.506-1.872l1.782 1.781c.391.39 1.027.39 1.42 0a1 1 0 0 0-.002-1.419l-2.233-2.234a9.095 9.095 0 0 0 .47-2.115h2.054z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavBackpack] = {
                    path: d.createElement("path", {
                        d: "M2 9.004h15.995V15c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1V9.004zm15.995-2.01H2V5c0-.55.45-1 1-1h13.995c.55 0 1 .45 1 1v1.994z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavChannels] = {
                    path: d.createElement("path", {
                        d: "M11.205 5c.433 0 .78.34.795.763v8.474a.793.793 0 0 1-.795.763H2.801a.795.795 0 0 1-.8-.79V5.79c0-.436.357-.79.8-.79h8.404zm6.453 1.11c.213.13.342.356.342.601v6.578a.705.705 0 0 1-.342.601.745.745 0 0 1-.705.04L14 12.834v-5.68l2.953-1.085a.747.747 0 0 1 .705.04z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavCreative] = {
                    path: d.createElement("path", {
                        d: "M14.718 11.016a.543.543 0 0 1 0 .95l-3.71 2.035-2.022 3.717A.544.544 0 0 1 8.51 18H8.51a.546.546 0 0 1-.476-.28l-2.038-3.711-3.713-2.023a.544.544 0 0 1-.002-.951l3.709-2.04 2.027-3.712A.539.539 0 0 1 8.49 5c.2 0 .38.108.477.282L11 8.99l3.717 2.026zm3.152-6.24a.25.25 0 0 1 0 .44l-1.712.938-.934 1.715a.249.249 0 0 1-.439.001l-.94-1.713-1.714-.933a.25.25 0 0 1 0-.439l1.711-.94.935-1.715a.248.248 0 0 1 .22-.13c.091 0 .175.05.22.13l.937 1.711 1.716.935zm.043 11.075a.166.166 0 0 1 0 .293l-1.142.626-.622 1.144a.166.166 0 0 1-.146.086.169.169 0 0 1-.147-.086l-.627-1.142-1.142-.622a.166.166 0 1 1 0-.293l1.14-.627.624-1.143a.166.166 0 1 1 .292 0l.626 1.14 1.144.624z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavDashboard] = {
                    path: d.createElement("path", {
                        d: "M16 12.997a1 1 0 1 1-2 0V5.988a1 1 0 1 1 2 0v7.01zm-5 0a1 1 0 1 1-2 0v-1.993a1 1 0 1 1 2 0v1.993zm-5 0a1 1 0 1 1-2 0V9.002a1 1 0 1 1 2 0v3.995zM17.6 3H2.4C1.63 3 1 3.63 1 4.4v11.2A1.4 1.4 0 0 0 2.4 17h15.2c.77 0 1.4-.63 1.4-1.4V4.4A1.4 1.4 0 0 0 17.6 3z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavDiscover] = {
                    path: d.createElement("path", {
                        d: "M12.285 6.011c-.706.084-1.281.734-1.273 1.447-.034.797.674 1.535 1.472 1.536a1.48 1.48 0 0 0 1.395-.862 1.522 1.522 0 1 0-1.594-2.121m1.77-2.809c.928-.163 1.902-.316 2.835-.082.235.917.088 1.876-.072 2.79-.438 2.212-2.093 4.435-3.804 5.927.05.524.361 1.29.401 1.814.038.773-.347 1.207-.978 1.642-.809.538-1.475 1.082-2.292 1.611-.425.265-1.057-.05-1.115-.55-.081-.843.002-1.542-.02-2.34-.682-.019-1.658-.35-2.172-.812-.601-.522-.838-1.409-.869-2.19-.582-.082-1.069.02-1.661-.037-.281-.032-.574.001-.845-.1-.408-.166-.597-.687-.357-1.057.509-.805 1.01-1.425 1.524-2.227.44-.673.993-1.072 1.801-1.01.459.042 1.186.361 1.645.413.108.036.158-.087.226-.145 1.467-1.62 3.622-3.21 5.753-3.647zM4.134 12.63c.18-.192.565-.062.64.21a4.128 4.128 0 0 0 2.389 2.388c.262.076.4.438.227.626-.393.396-.746.651-1.144 1.044-.19.196-.595.036-.641-.25-.026-.229-.028-.356-.044-.583-.531.144-1.496.746-2.027.888-.254.067-.547-.223-.483-.477.142-.533.746-1.499.887-2.034-.227-.013-.354-.015-.58-.04-.287-.046-.445-.455-.251-.643.386-.394.637-.74 1.027-1.129z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavFollowing] = {
                    path: d.createElement("path", {
                        d: "M13.535 3C11.998 3 10.767 4.046 10 4.937 9.232 4.046 8.002 3 6.465 3 3.535 3 2 5.347 2 7.665c0 3.683 4.762 7.488 6.808 8.954a2.047 2.047 0 0 0 2.383 0c2.048-1.466 6.81-5.271 6.81-8.954C18 5.347 16.466 3 13.534 3",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavGames] = {
                    path: d.createElement("path", {
                        d: "M14.41 7.005h2.715c.483 0 .875.392.875.875v4.24a.875.875 0 0 1-.875.875h-2.717L11.415 10l2.995-2.995zm-8.82 5.99H2.876A.875.875 0 0 1 2 12.12V7.88c0-.484.391-.875.875-.875H5.59L8.586 10 5.59 12.995zm1.415 1.414L10 11.414l2.995 2.995v2.716a.875.875 0 0 1-.875.875H7.88a.875.875 0 0 1-.875-.875v-2.716zm5.99-8.818L10 8.586 7.004 5.59V2.875c0-.484.392-.875.875-.875h4.24c.484 0 .875.391.875.875v2.716z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavLogout] = {
                    path: d.createElement("path", {
                        d: "M2.906 11.003c-.597 0-.995.469-.867 1.045 0 0-.089-.314.011.038C3.002 15.462 6.145 18 9.877 18 14.363 18 18 14.418 18 10s-3.637-8-8.123-8C6.138 2 2.99 4.546 2.044 7.932c-.096.346-.005.02-.005.02-.118.577.271 1.045.867 1.045h6.97c.15 0 .185-.084.08-.188 0 0-.879-.662-1.198-.972-1.032-1.012.5-2.515 1.521-1.513l3.401 2.995a.937.937 0 0 1 .004 1.328l-3.405 3.029c-1.02 1.003-2.553-.501-1.532-1.503.33-.318 1.207-.981 1.207-.981.106-.104.071-.19-.078-.19h-6.97z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavManager] = {
                    path: d.createElement("path", {
                        d: "M5 6.405c0-.154.097-.295.25-.364a.498.498 0 0 1 .407.005l3.194 2.15a.392.392 0 0 1-.019.63l-.94.633-2.182 1.467a.499.499 0 0 1-.46.032.407.407 0 0 1-.25-.365V6.405zm2.574 6.645a3.37 3.37 0 0 0-.731.95H2.402C1.631 14 1 13.36 1 12.576V4.424C1 3.64 1.631 3 2.402 3h13.196C16.372 3 17 3.637 17 4.424v.7c-.139-.013-.276-.036-.415-.036h-.001a4.394 4.394 0 0 0-4.348 3.76l-.005.03-4.657 4.172zM18.982 9.44a2.384 2.384 0 0 1-2.153 2.43 2.328 2.328 0 0 1-.692-.03l-5.353 4.795a1.408 1.408 0 0 1-2.342-1.124c.021-.375.187-.72.466-.971l5.301-4.747a2.392 2.392 0 0 1 2.793-2.668c.361.064.409.403.136.647l-.989.883a.546.546 0 0 0-.041.769l.554.618a.543.543 0 0 0 .766.042l.955-.855c.273-.244.593-.156.599.21zm-8.692 6.734a.733.733 0 1 0-.98-1.09.733.733 0 0 0 .98 1.09z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavMessages] = {
                    path: d.createElement("path", {
                        d: "M2.015 3.828A1 1 0 0 1 3 3h14a1 1 0 0 1 .986.828L18 3.815V12a1 1 0 0 1-1 1H6.707l-3.853 3.853A.5.5 0 0 1 2 16.5V3.815l.015.013z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavMore] = {
                    path: d.createElement("path", {
                        d: "M4 8a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm6 0a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm6 0a2 2 0 1 1 0 4 2 2 0 0 1 0-4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavMyChannel] = {
                    path: d.createElement("path", {
                        d: "M7 3c1.654 0 3 1.346 3 3S8.654 9 7 9 4 7.654 4 6s1.346-3 3-3zm2.796 12H13v1.143a.857.857 0 0 1-.857.857H1.857A.857.857 0 0 1 1 16.143v-3.429c0-.325.183-.62.473-.767C1.551 11.908 3.41 11 7 11c.748 0 1.402.045 2 .107v3.096c0 .44.358.797.796.797zM16 8.457v4.085a.463.463 0 0 1-.452.458h-4.106a.443.443 0 0 1-.442-.442V8.45c0-.248.203-.45.451-.45h4.097c.246 0 .443.203.452.457zm2.808-.391A.438.438 0 0 1 19 8.43v4.138a.438.438 0 0 1-.192.365.393.393 0 0 1-.396.024L17 12.22V8.779l1.412-.736a.396.396 0 0 1 .396.023z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavProfile] = {
                    path: d.createElement("path", {
                        d: "M10 2c1.93 0 3.5 1.57 3.5 3.5S11.93 9 10 9 6.5 7.43 6.5 5.5 8.07 2 10 2zm6.447 10.105c.34.17.553.516.553.896v4a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-4c0-.38.214-.726.552-.896.091-.045 2.26-1.104 6.448-1.104 4.187 0 6.357 1.06 6.447 1.104z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavSearch] = {
                    path: d.createElement("path", {
                        d: "M4.16 8.552a4.397 4.397 0 0 1 4.392-4.393 4.397 4.397 0 0 1 4.391 4.393 4.396 4.396 0 0 1-4.39 4.392 4.397 4.397 0 0 1-4.394-4.392m13.546 7.732l-3.872-3.873a6.51 6.51 0 0 0 1.27-3.86A6.558 6.558 0 0 0 8.552 2 6.56 6.56 0 0 0 2 8.552a6.559 6.559 0 0 0 6.552 6.55 6.51 6.51 0 0 0 3.86-1.27l3.872 3.873a.994.994 0 0 0 .711.295 1.006 1.006 0 0 0 .71-1.716",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavSettings] = {
                    path: d.createElement("path", {
                        d: "M9.97 13.395a3.37 3.37 0 1 1 .001-6.741 3.37 3.37 0 0 1 0 6.74m7.3-4.915a48.16 48.16 0 0 0-.926-.127c-.037-.005-.071-.03-.081-.065a6.553 6.553 0 0 0-.615-1.48.09.09 0 0 1 .007-.1c.19-.247.377-.497.558-.74a.844.844 0 0 0-.083-1.091L15.12 3.863a.842.842 0 0 0-1.09-.081c-.245.18-.494.368-.741.557a.092.092 0 0 1-.1.01 6.415 6.415 0 0 0-1.481-.614.09.09 0 0 1-.064-.078c-.04-.308-.084-.63-.13-.93a.856.856 0 0 0-.828-.729h-1.43a.856.856 0 0 0-.83.728c-.044.3-.088.615-.128.925-.005.036-.03.07-.064.08a6.53 6.53 0 0 0-1.481.615.091.091 0 0 1-.1-.008 53.22 53.22 0 0 0-.74-.558.843.843 0 0 0-1.091.083L3.81 4.875a.843.843 0 0 0-.082 1.091c.18.244.369.494.558.74.023.03.026.07.009.1a6.504 6.504 0 0 0-.614 1.481.09.09 0 0 1-.077.064c-.308.04-.604.083-.905.128a.833.833 0 0 0-.7.83v1.43c0 .412.294.768.7.83.3.044.604.088.912.128.037.006.064.03.073.065.142.515.348 1.013.612 1.48a.09.09 0 0 1-.01.1c-.19.246-.377.495-.558.74a.843.843 0 0 0 .082 1.09l1.01 1.012a.844.844 0 0 0 1.092.082c.245-.18.493-.367.74-.558a.09.09 0 0 1 .1-.008c.466.264.964.47 1.48.614a.09.09 0 0 1 .065.076c.04.31.084.607.129.907a.833.833 0 0 0 .829.703h1.43a.833.833 0 0 0 .829-.703c.045-.3.089-.604.129-.913a.088.088 0 0 1 .064-.073 6.544 6.544 0 0 0 1.48-.613.09.09 0 0 1 .1.01c.248.19.497.377.742.559a.84.84 0 0 0 1.089-.084l1.012-1.01a.844.844 0 0 0 .082-1.091c-.18-.245-.37-.494-.558-.74a.088.088 0 0 1-.008-.1c.264-.467.47-.965.613-1.48a.09.09 0 0 1 .077-.065c.308-.04.633-.083.934-.128a.858.858 0 0 0 .729-.83V9.31a.859.859 0 0 0-.73-.83",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NavVideos] = {
                    path: d.createElement("path", {
                        d: "M12.668 10.521l-4.8 2.4A.599.599 0 0 1 7 12.384v-4.8a.596.596 0 0 1 .6-.598c.091 0 .183.02.268.063l4.8 2.4a.6.6 0 0 1 0 1.072M18 3.002H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Neck] = {
                    path: d.createElement("path", {
                        d: "M7 3c-.553 0-.87.459-1 1L4 16a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1L14 4c-.129-.541-.447-1-1-1H7z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NintendoSwitch] = {
                    path: d.createElement("path", {
                        d: "M5.43 2A4.14 4.14 0 0 0 2.15 5C2 5.56 2 5.89 2 10.23a31.67 31.67 0 0 0 .08 4.39 4.15 4.15 0 0 0 3.22 3.23 14.71 14.71 0 0 0 2.29.07 8.86 8.86 0 0 0 2.1 0s.05-.69.05-7.94c0-5.37 0-7.91 0-8s-.09-.06-2-.06A21.41 21.41 0 0 0 5.43 2Zm3 8v6.71l-1.35 0a7 7 0 0 1-1.62-.08 2.81 2.81 0 0 1-2.08-2.17C3.3 14 3.3 5.8 3.37 5.48A2.85 2.85 0 0 1 5.09 3.42a4.77 4.77 0 0 1 2.06-.2H8.43Z M5.71 5.25a1.77 1.77 0 0 0-.7.35 1.47 1.47 0 0 0-.49 1.23 1 1 0 0 0 .14.54 1.51 1.51 0 0 0 .71.72 1 1 0 0 0 .57.13 1.21 1.21 0 0 0 .53-.06 1.5 1.5 0 0 0 1-1.66A1.52 1.52 0 0 0 5.71 5.25Z M11.36 2s0 3.6 0 8c0 7.23 0 8 .05 8s2.66 0 3 0a4.14 4.14 0 0 0 3.18-2.19 4.92 4.92 0 0 0 .25-.58c.21-.62.2-.46.2-5.22 0-3.8 0-4.37-.05-4.61A4.11 4.11 0 0 0 14.58 2a13 13 0 0 0-1.74 0C12 1.93 11.37 1.94 11.36 2ZM14.9 9.17a1.62 1.62 0 0 1 1.11 1 1.73 1.73 0 0 1 0 1.05A1.61 1.61 0 0 1 13 11.18a1.9 1.9 0 0 1 0-.93A1.61 1.61 0 0 1 14.9 9.17Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NotificationError] = {
                    path: d.createElement("path", {
                        d: "M13.707 12.293a.999.999 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a.997.997 0 0 1-1.414 0 .999.999 0 0 1 0-1.414L8.586 10 6.293 7.707a.999.999 0 1 1 1.414-1.414L10 8.586l2.293-2.293a.999.999 0 1 1 1.414 1.414L11.414 10l2.293 2.293zM10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NotificationInfo] = {
                    path: d.createElement("path", {
                        d: "M9 9.951a1 1 0 1 1 2 0v4.098a1 1 0 1 1-2 0V9.951zm1-4.95c.549 0 1 .45 1 1 0 .548-.451 1-1 1-.548 0-1-.45-1-1s.451-1 1-1zm0 13c4.411 0 8-3.59 8-8 0-4.412-3.589-8-8-8s-8 3.588-8 8c0 4.41 3.589 8 8 8z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NotificationSuccess] = {
                    path: d.createElement("path", {
                        d: "M13.74 8.464l-4.445 4.285a.906.906 0 0 1-.629.25.906.906 0 0 1-.629-.25L6.26 11.035a.837.837 0 0 1 0-1.213.914.914 0 0 1 1.257 0l1.15 1.109 3.815-3.68a.915.915 0 0 1 1.258 0 .837.837 0 0 1 0 1.213M10 2a8 8 0 0 0-8 8 8 8 0 1 0 16 0 8 8 0 0 0-8-8",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NotificationWarning] = {
                    path: d.createElement("path", {
                        d: "M10.87 2.504l8 14A1 1 0 0 1 18 18h-16a1 1 0 0 1-.868-1.496l8-14a1 1 0 0 1 1.737 0zM11 11.049V6.95a1 1 0 1 0-2 0v4.098a1 1 0 1 0 2 0zm-1 4.95c.55 0 1-.45 1-1s-.452-1-1-1c-.549 0-1 .452-1 1 0 .55.451 1 1 1z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.NotificationBell] = {
                    path: d.createElement("path", {
                        d: "M15.959 10c.574 0 1.041.467 1.041 1.041v1.918c0 .574-.467 1.041-1.041 1.041H4.041A1.042 1.042 0 0 1 3 12.959v-1.918C3 10.467 3.467 10 4.041 10H5V7a5.006 5.006 0 0 1 5.444-4.98C12.999 2.241 15 4.52 15 7.207V10h.959zM12 16a2 2 0 0 1-4 0h4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.OculusVR] = {
                    path: d.createElement("path", {
                        d: "M13.15 14.85H6.85A4.86 4.86 0 0 1 2 10H2A4.86 4.86 0 0 1 6.85 5.15h6.3A4.86 4.86 0 0 1 18 10h0A4.86 4.86 0 0 1 13.15 14.85ZM14.76 10h0a1.64 1.64 0 0 0-1.63-1.63H6.84A1.64 1.64 0 0 0 5.2 10h0a1.64 1.64 0 0 0 1.63 1.63h6.29A1.64 1.64 0 0 0 14.76 10Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.OP] = {
                    path: d.createElement("path", {
                        d: "M14.971 9.51a.814.814 0 0 0-.754-.506h-2.22l2.965-5.884a.821.821 0 0 0-1.337-.885L5.243 9.61a.81.81 0 0 0 .573 1.387h2.221l-2.966 5.88a.813.813 0 0 0 .297.977.824.824 0 0 0 1.04-.09l8.383-7.356a.82.82 0 0 0 .18-.898",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.PermissionsAdd] = {
                    path: d.createElement("path", {
                        d: "M7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947zm3.784-6.909a.5.5 0 0 1 .544.107l2 2.503a.495.495 0 0 1 0 .703l-2 2.503a.5.5 0 0 1-.853-.35V8.997h-3.502a.499.499 0 0 1-.5-.497V7.51c0-.275.225-.497.5-.497H16V5.497c0-.2.122-.382.309-.459z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.PermissionsAdded] = {
                    path: d.createElement("path", {
                        d: "M7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947zM15.13 11a.95.95 0 0 1-.684-.293l-1.162-1.2a1.023 1.023 0 0 1 0-1.414.946.946 0 0 1 1.369 0l.477.493 2.219-2.293a.945.945 0 0 1 1.369 0 1.023 1.023 0 0 1 0 1.414l-2.903 3a.953.953 0 0 1-.685.293z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.PermissionsRemove] = {
                    path: d.createElement("path", {
                        d: "M17.232 6.304a1.034 1.034 0 0 1 1.464 0c.405.404.405 1.06 0 1.464l-.733.732.733.733a1.034 1.034 0 0 1 0 1.464 1.034 1.034 0 0 1-1.464 0l-.732-.733-.733.733a1.034 1.034 0 0 1-1.464 0 1.034 1.034 0 0 1 0-1.464l.733-.733-.733-.732a1.035 1.035 0 1 1 1.464-1.464l.733.732.732-.732zM7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Pin] = {
                    path: d.createElement("path", {
                        d: "M11.998 3.998v4.878c0 .16.026.317.104.474l.713 1.655H7.18l.713-1.655c.078-.157.104-.314.104-.473V3.998h4.002zm-7.08 7.003A1.007 1.007 0 0 0 4 12.005c0 .576.473.99 1.05.99H9v3.957c0 .576.421 1.047.998 1.047s1-.47 1-1.047v-3.958h3.948c.577 0 1.05-.412 1.05-.99 0-.524-.394-.95-.919-1.002l-1.08-2.36V3.999h.944c.578 0 1.05-.403 1.05-.98 0-.578-.472-1.02-1.05-1.02H5.053c-.576 0-1.049.442-1.049 1.02 0 .577.473.98 1.05.98h.944v4.643l-1.08 2.36z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Pinned] = {
                    path: d.createElement("path", {
                        d: "M15.076 11.002l-1.08-2.36V3.999h.944c.578 0 1.05-.403 1.05-.98S15.518 2 14.94 2H5.056c-.579 0-1.05.442-1.05 1.019s.471.98 1.05.98h.944v4.643l-1.08 2.36a1.007 1.007 0 0 0-.92 1.003c0 .577.474.989 1.05.989H9v3.957c0 .576.421 1.049.998 1.049.578 0 1-.473 1-1.049v-3.957h3.948c.578 0 1.05-.412 1.05-.989 0-.524-.394-.95-.918-1.003",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Play] = {
                    path: d.createElement("path", {
                        d: "M4.447 2.105a1.008 1.008 0 0 0-.973.044A1 1 0 0 0 3 3v14a.999.999 0 0 0 1.447.894l12-7a1 1 0 0 0 0-1.789l-12-7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Playlist] = {
                    path: d.createElement("path", {
                        d: "M4.447 2.105a1.008 1.008 0 0 0-.973.044A1 1 0 0 0 3 3v14a.999.999 0 0 0 1.447.894l12-7a1 1 0 0 0 0-1.789l-12-7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.PlayStation] = {
                    path: d.createElement("path", {
                        d: "M17.86 13.1a3 3 0 0 1-1.08.68l-5.7 2V14.31l4.2-1.5c.48-.17.55-.41.16-.54a2.81 2.81 0 0 0-1.56.08l-2.8 1V11.77l.16-.06a9.87 9.87 0 0 1 1.94-.41 8.36 8.36 0 0 1 3.61.43C18 12.13 18.17 12.7 17.86 13.1Zm-6.23-2.57V6.66c0-.45-.08-.87-.51-1s-.53.2-.53.65V16L8 15.17V3.64a30.76 30.76 0 0 1 3.59 1c2.21.76 3 1.7 3 3.82S13.25 11.31 11.62 10.53ZM3.2 14.15c-1.26-.36-1.47-1.1-.9-1.52a6 6 0 0 1 1.44-.69l3.73-1.33v1.51l-2.69 1c-.48.17-.55.41-.16.54a2.81 2.81 0 0 0 1.56-.08l1.29-.47v1.36l-.26 0a8.58 8.58 0 0 1-4-.33Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Plus] = {
                    path: d.createElement("path", {
                        d: "M17 8h-5V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v5H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h5v5a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-5h5a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Popout] = {
                    path: d.createElement("path", {
                        d: "M15 9.997a1 1 0 0 1 1 1v5.994a1 1 0 0 1-1.003 1.005H3.003A1 1 0 0 1 2 16.99V4.997a.999.999 0 0 1 1.003-1.001h5.994a1 1 0 1 1 0 2H4v10h10v-5a1 1 0 0 1 1-1zm2.704-7.704c.187.187.293.442.293.707v5.001a.999.999 0 0 1-1.707.707l-1.293-1.293-2.293 2.293a1 1 0 0 1-1.414 0l-1-1a1 1 0 0 1 0-1.415L12.583 5 11.29 3.708A1.002 1.002 0 0 1 11.997 2h5a1 1 0 0 1 .707.293z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.QuestionMark] = {
                    path: d.createElement("path", {
                        d: "M9.5 14c.822 0 1.5.676 1.5 1.5S10.323 17 9.5 17 8 16.325 8 15.5c0-.824.677-1.5 1.5-1.5m5.116-7.217c0 2.46-3.018 3.405-3.624 4.295-.455.661-.303 1.59-1.552 1.59-.813 0-1.211-.661-1.211-1.267 0-2.253 3.51-2.762 3.51-4.618 0-1.021-.678-1.626-1.814-1.626-2.422 0-1.477 2.496-3.311 2.496-.662 0-1.23-.397-1.23-1.153C5.383 4.645 7.502 3 9.811 3c2.421 0 4.805 1.115 4.805 3.783z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Refresh] = {
                    path: d.createElement("path", {
                        d: "M4.016 10.119c-.248-3.33 2.317-6.238 5.718-6.483a6.202 6.202 0 0 1 2.229.26l.474.144.543-1.55a.746.746 0 0 1 .656-.49.747.747 0 0 1 .715.408l1.572 3.14a.713.713 0 0 1-.176.867.762.762 0 0 1-.165.109l-3.21 1.538a.748.748 0 0 1-.819-.108.718.718 0 0 1-.212-.782l.426-1.216-.517-.145a4.029 4.029 0 0 0-1.366-.143C7.63 5.83 5.928 7.758 6.091 9.97a.98.98 0 0 1-.24.727c-.2.217-.443.338-.722.359l-.078.003c-.54 0-.994-.413-1.035-.941zm1.162 7.384l-1.14-3.317a.72.72 0 0 1 .468-.92l3.39-1.116a.789.789 0 0 1 .239-.037.75.75 0 0 1 .562.248c.198.224.24.54.106.804l-.665 1.306.586.167c.455.131.927.177 1.386.147a4.126 4.126 0 0 0 2.81-1.385 3.93 3.93 0 0 0 .987-2.917c-.02-.27.069-.534.25-.74.183-.206.434-.33.712-.348.28-.022.539.067.753.247.213.18.34.425.362.694a5.934 5.934 0 0 1-1.491 4.396 6.197 6.197 0 0 1-4.231 2.084 6.097 6.097 0 0 1-2.604-.386l-.432-.163-.676 1.328a.724.724 0 0 1-.172.22.756.756 0 0 1-.545.182.739.739 0 0 1-.655-.494z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Reddit] = {
                    path: d.createElement("path", {
                        d: "M16.1 2.693c.548 0 .994.448.994.995 0 .548-.443.994-.994.997-.265 0-.518-.106-.705-.293-.186-.186-.29-.44-.29-.703 0-.55.445-1 .994-1h-.01zm-.504 5.167c.37-.335.854-.52 1.358-.52.923.007 1.73.625 1.973 1.51.243.888-.135 1.827-.926 2.3.03.19.05.386.05.582 0 1.466-.85 2.833-2.41 3.85-.49.324-.36.22-1.63.822-1.27.603-5.48.966-8 0-.57-.215-1.12-.49-1.63-.823-1.55-1.01-2.41-2.38-2.41-3.85 0-.19.02-.39.05-.58-.62-.37-1-1.04-1-1.76-.01-1.12.91-2.04 2.04-2.05.5 0 .986.19 1.358.52 1.45-.93 3.345-1.46 5.365-1.5l1.215-3.85c.052-.17.23-.27.407-.23l3.16.75c.26-.6.857-1.02 1.55-1.02.93.005 1.685.76 1.68 1.687 0 .93-.75 1.684-1.685 1.69-.93-.006-1.68-.754-1.685-1.68l-2.87-.675L10.5 6.37c1.92.077 3.713.6 5.103 1.5zm-5.598 7.337c1.342 0 2.3-.295 2.907-.902.135-.136.135-.355 0-.49-.065-.065-.153-.102-.245-.102s-.18.037-.245.102c-.473.47-1.268.7-2.416.7-1.15 0-1.95-.232-2.42-.7-.07-.066-.16-.102-.25-.102s-.18.036-.25.102c-.14.135-.14.355 0 .49.6.607 1.56.902 2.9.902zM12.71 9.5c-.69.004-1.247.563-1.245 1.25 0 .687.56 1.248 1.246 1.248.7-.003 1.25-.56 1.25-1.25 0-.687-.56-1.246-1.25-1.246zm-5.425 0c-.687 0-1.245.56-1.245 1.25 0 .687.558 1.247 1.246 1.247.687 0 1.245-.56 1.245-1.247 0-.69-.55-1.248-1.24-1.248z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.RemoveTag] = {
                    path: d.createElement("path", {
                        d: "M16.364 13.536L12.828 10l3.536-3.536a1 1 0 0 0 0-1.414L14.95 3.636a1 1 0 0 0-1.414 0L10 7.172 6.464 3.636a1 1 0 0 0-1.414 0L3.636 5.05a1 1 0 0 0 0 1.414L7.172 10l-3.536 3.536a1 1 0 0 0 0 1.414l1.414 1.414a1 1 0 0 0 1.414 0L10 12.828l3.536 3.536a1 1 0 0 0 1.414 0l1.414-1.414a1 1 0 0 0 0-1.414",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.RequestsSC] = {
                    path: d.createElement("path", {
                        d: "M18 8a1 1 0 1 1 0 2h-1v1a1 1 0 1 1-2 0v-1h-1a1 1 0 1 1 0-2h1V7a1 1 0 1 1 2 0v1h1zM7 9C5.346 9 4 7.654 4 6s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm5.526 2.947a.86.86 0 0 1 .474.767v3.428a.858.858 0 0 1-.858.858H1.857A.857.857 0 0 1 1 16.142v-3.428c0-.325.183-.62.473-.767C1.551 11.91 3.41 11 7 11s5.45.91 5.526.947z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Reshare] = {
                    path: d.createElement("path", {
                        d: "M13.707 9.292a.999.999 0 0 1 0 1.414l-7 7A1 1 0 0 1 5 17v-3H2a1 1 0 0 1-1-1V7c0-.267.106-.52.295-.709.188-.188.422-.316.711-.29L5 6.016V3a1.002 1.002 0 0 1 1.707-.707l7 7zm5.052.057a1 1 0 0 1 0 1.3l-6 7a.995.995 0 0 1-1.41.109.998.998 0 0 1-.108-1.41l5.442-6.35L11.24 3.65a.999.999 0 1 1 1.518-1.301l6 7z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Roman1] = {
                    path: d.createElement("path", {
                        d: "M11 2H9a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Roman2] = {
                    path: d.createElement("path", {
                        d: "M8 2H6a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1m6 0h-2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Roman3] = {
                    path: d.createElement("path", {
                        d: "M5 2H3a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1m6 0H9a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1m6 0h-2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Roman4] = {
                    path: d.createElement("path", {
                        d: "M5 2H3a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1m12 0h-2c-.553 0-.877.436-1 1l-1 9-1-9c-.123-.564-.447-1-1-1H9a1 1 0 0 0-1 1l2.3 14c.144.579.447 1 1 1h3.4c.553 0 .856-.421 1-1L18 3a1 1 0 0 0-1-1"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Roman5] = {
                    path: d.createElement("path", {
                        d: "M15 2h-2c-.553 0-.876.436-1 1l-2 9-2-9c-.124-.564-.447-1-1-1H5a1 1 0 0 0-1 1l3.4 14c.144.579.447 1 1 1h3.2c.553 0 .856-.421 1-1L16 3a1 1 0 0 0-1-1"
                    }),
                    width: 20,
                    height: 20
                }, U[M.RoomList] = {
                    path: d.createElement("path", {
                        d: "M9.2 4.528a.933.933 0 0 1-.2-.573C9 3.427 9.448 3 10 3h8c.217 0 .427.066.6.19a.926.926 0 0 1 .2 1.337l-4 5.09a1.03 1.03 0 0 1-1.6 0l-4-5.09zM2 15h11a1 1 0 1 1 0 2H2a1.001 1.001 0 0 1 0-2zm0-5h7a1 1 0 1 1 0 2H2a1.001 1.001 0 0 1 0-2zm0-5h3a1 1 0 1 1 0 2H2a1.001 1.001 0 0 1 0-2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.RoomListOpen] = {
                    path: d.createElement("path", {
                        d: "M13.2 10.382a1.03 1.03 0 0 1 1.6 0l4 5.09a.927.927 0 0 1-.2 1.338 1.03 1.03 0 0 1-.6.19h-8c-.553 0-1-.428-1-.954 0-.207.07-.408.2-.573l4-5.091zM2 5a1 1 0 0 1 0-2h11a1 1 0 0 1 0 2H2zm0 5a1 1 0 1 1 0-2h7a1 1 0 1 1 0 2H2zm0 5a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2H2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Scissors] = {
                    path: d.createElement("path", {
                        d: "M5.499 16a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0-9a1.5 1.5 0 1 1-.002-2.999A1.5 1.5 0 0 1 5.5 7zm7.523 3l4.55-3.186a1 1 0 1 0-1.146-1.638l-5.148 3.603-2.605-1.824c.204-.444.326-.934.326-1.455 0-1.93-1.57-3.5-3.5-3.5s-3.5 1.57-3.5 3.5c0 1.931 1.57 3.5 3.5 3.5.678 0 1.306-.201 1.842-.536L9.535 10 7.34 11.537A3.463 3.463 0 0 0 5.499 11c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5c0-.521-.122-1.01-.326-1.454l2.605-1.825 5.148 3.603a1 1 0 1 0 1.146-1.637L13.022 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Share] = {
                    path: d.createElement("path", {
                        d: "M18 10v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7a1 1 0 1 1 2 0v6h12v-6a1 1 0 1 1 2 0zm-3.963-1.954h-2.038v4.973a1 1 0 0 1-1 1H9.005a1 1 0 0 1-1-1V8.046h-2.02a1 1 0 0 1-.706-1.707l4.026-4.046a1 1 0 0 1 1.414 0l4.025 4.046a1 1 0 0 1-.707 1.707z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Shirt] = {
                    path: d.createElement("path", {
                        d: "M17.713 5.312L12.855 2.06A.516.516 0 0 0 12.62 2a.443.443 0 0 0-.4.242c-.13.237-.328.435-.601.594-.457.279-1.036.43-1.633.43-.598 0-1.177-.151-1.63-.427a1.992 1.992 0 0 1-.615-.615.435.435 0 0 0-.39-.224.498.498 0 0 0-.22.052L2.228 5.328c-.22.163-.283.425-.177.639l1.818 2.807c.115.155.26.23.418.23a.504.504 0 0 0 .222-.053l1.495-.933v9.525c0 .255.2.457.457.457h7.076a.452.452 0 0 0 .457-.457V8.02l1.48.923a.608.608 0 0 0 .255.062c.179 0 .332-.09.407-.243L17.94 5.98a.504.504 0 0 0 .026-.408.447.447 0 0 0-.254-.259z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Star] = {
                    path: d.createElement("path", {
                        d: "M16.9 8.157a1.745 1.745 0 0 0-1.378-1.146l-2.619-.416-1.336-2.663C11.28 3.357 10.68 3 10.003 3s-1.276.357-1.564.932L7.103 6.595l-2.625.416A1.747 1.747 0 0 0 3.1 8.158a1.758 1.758 0 0 0 .353 1.76l1.865 2.061-.516 2.967a1.74 1.74 0 0 0 .681 1.71 1.77 1.77 0 0 0 1.846.148l2.675-1.383 2.678 1.384a1.731 1.731 0 0 0 1.838-.146 1.746 1.746 0 0 0 .688-1.712l-.519-2.969 1.861-2.064a1.75 1.75 0 0 0 .35-1.757",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.StarHollow] = {
                    path: d.createElement("path", {
                        d: "M15.21 8.985h.01-.01zm-9.968-.071L7.129 11a1 1 0 0 1 .243.842l-.515 2.954 2.688-1.39a.999.999 0 0 1 .918 0l2.687 1.39-.515-2.954a1.001 1.001 0 0 1 .242-.841l1.882-2.087-2.675-.424a.998.998 0 0 1-.737-.539l-1.344-2.676L8.66 7.95a.998.998 0 0 1-.737.539l-2.681.425zm8.244 8.088c-.273 0-.548-.066-.804-.197l-2.678-1.384-2.676 1.383a1.768 1.768 0 0 1-1.845-.149 1.737 1.737 0 0 1-.681-1.709l.516-2.967-1.865-2.062A1.758 1.758 0 0 1 3.1 8.158 1.747 1.747 0 0 1 4.479 7.01l2.625-.416 1.335-2.662C8.728 3.357 9.327 3 10.004 3c.676 0 1.275.357 1.563.933l1.336 2.662 2.619.415c.635.1 1.164.539 1.377 1.147a1.75 1.75 0 0 1-.35 1.757l-1.86 2.064.518 2.969a1.745 1.745 0 0 1-.687 1.712 1.739 1.739 0 0 1-1.034.343z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Steam] = {
                    path: d.createElement("path", {
                        d: "M10 1C5.23 1 1.36 4.69 1 9.28l4.86 1.98c.45-.27.9-.45 1.44-.45h.18l2.16-3.15c0-1.89 1.53-3.42 3.42-3.42s3.42 1.53 3.42 3.42-1.53 3.42-3.42 3.42h-.09l-3.06 2.16v.09c0 1.44-1.17 2.52-2.52 2.52-1.26 0-2.25-.9-2.52-2.07l-3.42-1.44C2.35 16.3 5.86 19 10 19c4.95 0 9-4.05 9-9s-4.05-9-9-9zm5.22 6.66c0-1.26-.99-2.25-2.25-2.25s-2.25.99-2.25 2.25.99 2.25 2.25 2.25 2.25-.99 2.25-2.25zm-3.96 0c0-.9.72-1.71 1.71-1.71.9 0 1.71.72 1.71 1.71 0 .9-.72 1.71-1.71 1.71s-1.71-.72-1.71-1.71zm-4.59 7.02l-1.08-.45c.18.45.54.72.99.9.99.45 2.07-.09 2.52-.99.18-.45.18-.99 0-1.44-.18-.45-.54-.81-1.08-1.08-.45-.18-.99-.18-1.44 0l1.17.45c.72.27 1.08 1.08.72 1.89-.27.72-1.08.99-1.8.72z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Streaming] = {
                    path: d.createElement("path", {
                        d: "M11.704 7.057l-3.083 3.092C7.597 9.032 6.801 7.875 6.38 6.838c-.403-.989-.378-1.638-.174-1.842.165-.165.447-.251.818-.251 1.07 0 2.87.718 4.681 2.312m3.274 4.57c.334.988.336 1.839.005 2.17-.02.021-.056.043-.082.065-.418.327-2.46-.182-5.02-2.471l3.066-3.076c.945 1.077 1.665 2.228 2.031 3.312m1.673-.567c-.45-1.33-1.32-2.721-2.456-3.996l.521-.522a1.4 1.4 0 0 0 1.115-.397 1.433 1.433 0 0 0 0-2.023 1.424 1.424 0 0 0-2.017 0c-.327.329-.438.774-.38 1.201l-.477.478c-2.992-2.662-6.463-3.598-8-2.057a1.985 1.985 0 0 0-.22.268c-.718.952-1.383 2.947-1.632 4.983-.204 1.662-.285 4.71 1.46 6.46C5.684 16.578 7.495 17 9.374 17c2.52 0 5.16-.758 6.418-1.6.14-.083.27-.18.39-.299.004-.007.006-.015.012-.021.01-.01.028-.02.037-.03.852-.854 1-2.271.42-3.99",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Sword] = {
                    path: d.createElement("path", {
                        d: "M16.473 3c-1.14-.02-2.537.473-2.866.668a.544.544 0 0 0-.112.09l-6.133 6.634-.01-.01a1.16 1.16 0 0 0-1.637 1.639l.34.34-1.608 1.414a1.365 1.365 0 0 0-1.034.412 1.418 1.418 0 0 0 0 2l.398.399a1.414 1.414 0 0 0 2.413-1.034l1.414-1.608.34.339a1.156 1.156 0 0 0 1.975-.818c0-.31-.12-.6-.338-.82l-.047-.046 6.575-6.076.075-.075a.511.511 0 0 0 .073-.095c.196-.328.698-1.705.67-2.864A.5.5 0 0 0 16.472 3",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Team] = {
                    path: d.createElement("path", {
                        d: "M12 10.175c0 .177-.114.44-.229.645l-1.847 3.039c-.057.1-.164.142-.314.142-.349 0-.605-.23-.605-.536 0-.061.014-.115.05-.176l1.813-2.89v-.395H9.002v.664c0 .184-.211.326-.503.326-.3 0-.499-.142-.499-.326V9.326C8 9.164 8.242 9 8.484 9h3.032c.213 0 .484.163.484.325v.849zm2.636-4.388c-.413-.527-.642-.786-.642-1.455V2.289a.29.29 0 0 0-.289-.29h-1.404a.29.29 0 0 0-.289.29v.622c0 .299-.08 1.114-.231 1.37-.302.519-1.182.74-1.781.74s-1.479-.221-1.781-.74c-.151-.256-.231-1.071-.231-1.37v-.622a.29.29 0 0 0-.289-.29H6.295a.29.29 0 0 0-.289.29v2.043c0 .669-.228.928-.642 1.455-.303.388-.742.698-1.192.896A.29.29 0 0 0 4 6.947V17.71a.29.29 0 0 0 .289.289h11.422a.29.29 0 0 0 .289-.29V6.948a.29.29 0 0 0-.172-.264c-.45-.198-.889-.508-1.192-.896z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Theater] = {
                    path: d.createElement("path", {
                        d: "M18 3h-3a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1m-6 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.TheaterExit] = {
                    path: d.createElement("path", {
                        d: "M14 15h3V5h-3v10zM3 15h9V5H3v10zM18 3H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Timeout] = {
                    path: d.createElement("path", {
                        d: "M10 16c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6m0-14a8 8 0 1 1 0 16 8 8 0 0 1 0-16zm1 7.628V7c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .009.005.016.005.024a.992.992 0 0 0 .287.733l2.011 1.95a1.003 1.003 0 0 0 1.414 0 1.003 1.003 0 0 0 0-1.413L11 9.628z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Timer] = {
                    path: d.createElement("path", {
                        d: "M10 17c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5m1-11.92c3.391.486 6 3.395 6 6.92a7 7 0 1 1-14 0c0-3.525 2.609-6.434 6-6.92V3H8a1 1 0 1 1 0-2h4a1 1 0 1 1 0 2h-1v2.08zM10 9a1 1 0 0 0-1 1v2a1 1 0 1 0 2 0v-2a1 1 0 0 0-1-1z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ToBottom] = {
                    path: d.createElement("path", {
                        d: "M16 18H4a1 1 0 1 1 0-2h12a1 1 0 1 1 0 2zM14.037 7.973a1 1 0 0 1 .707 1.707l-4.025 4.046a1.003 1.003 0 0 1-1.414 0L5.279 9.68a1 1 0 0 1 .707-1.707h2.019V3a1 1 0 0 1 1-1h1.994a1 1 0 0 1 1 1v4.973h2.038z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ToTop] = {
                    path: d.createElement("path", {
                        d: "M16 4H4a1 1 0 1 1 0-2h12a1 1 0 1 1 0 2zm-1.963 8.046h-2.038v4.973a1 1 0 0 1-1 1H9.005a1 1 0 0 1-1-1v-4.973h-2.02a1 1 0 0 1-.706-1.707l4.026-4.046a1 1 0 0 1 1.414 0l4.025 4.046a1 1 0 0 1-.707 1.707z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Trash] = {
                    path: d.createElement("path", {
                        d: "M7.992 6.01h4.002V4H7.992v2.01zm5.001 8.244c0 .415-.448.75-1 .75s-1-.335-1-.75v-4.5c0-.415.448-.75 1-.75s1 .335 1 .75v4.5zm-4 0c0 .415-.448.75-1 .75s-1-.335-1-.75v-4.5c0-.415.448-.75 1-.75s1 .335 1 .75v4.5zm7.192-8.243h-2.2V3.6c0-.884-.708-1.6-1.591-1.6H7.592c-.883 0-1.591.716-1.591 1.6v2.41h-2.2a.8.8 0 1 0 0 1.6h.059l.531 8.784c0 .884.718 1.602 1.6 1.602h8.003c.883 0 1.601-.718 1.599-1.54l.533-8.846h.059a.8.8 0 1 0 0-1.6z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Trophy] = {
                    path: d.createElement("path", {
                        d: "M15.998 8.822c0 .533-.393 1.175-.924 1.175h-.626a7.023 7.023 0 0 0 .544-2.74v-1.29h1.006v2.856zm-12.007 0V5.968h1.012v1.288c0 .992.194 1.926.54 2.752h-.617c-.532 0-.935-.652-.935-1.185zm13.028-4.814h-2.027V3.51c0-.286-.204-.518-.454-.518H5.457c-.25 0-.454.232-.454.518v.497H2.981a.98.98 0 0 0-.98.98v3.834c0 1.614 1.312 3.147 2.925 3.147h1.958c.596.558 1.31.958 2.111 1.136v1.883h-.994a1 1 0 1 0 0 2h1.902c.033.003.06.018.092.018s.06-.015.092-.018h1.908a1 1 0 1 0 0-2h-1V13.1a4.596 4.596 0 0 0 2.104-1.143h1.975c1.612 0 2.925-1.523 2.925-3.135V4.989a.98.98 0 0 0-.98-.98z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Twitter] = {
                    path: d.createElement("path", {
                        d: "M19 3.844c-.66.312-1.374.524-2.12.62.783-.51 1.36-1.28 1.623-2.178-.72.457-1.515.782-2.345.955-.677-.78-1.66-1.23-2.694-1.24-2.04 0-3.694 1.76-3.694 3.94 0 .31.037.61.1.9C6.8 6.668 4.078 5.1 2.253 2.72c-.33.606-.5 1.286-.498 1.977 0 1.363.653 2.567 1.643 3.273-.59-.02-1.165-.19-1.672-.493v.05c0 1.906 1.272 3.496 2.963 3.857-.55.156-1.12.18-1.67.067.47 1.57 1.83 2.7 3.45 2.73-1.52 1.29-3.5 1.88-5.47 1.63 1.66 1.15 3.64 1.77 5.66 1.77 6.79 0 10.51-5.99 10.51-11.19 0-.17-.01-.34-.01-.51.73-.56 1.35-1.25 1.84-2.03"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Unheart] = {
                    path: d.createElement("path", {
                        d: "M17.997 9.001a1 1 0 1 1 0 2H2.003a1.001 1.001 0 1 1 0-2h15.994zM8.81 16.619c-1.018-.729-2.705-2.036-4.146-3.618h10.675c-1.441 1.582-3.13 2.89-4.146 3.618a2.047 2.047 0 0 1-2.383 0zM13.535 3c2.65 0 4.146 1.919 4.41 4.001H2.055C2.32 4.919 3.815 3 6.465 3 8.002 3 9.232 4.046 10 4.936 10.767 4.046 11.998 3 13.535 3z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Unignore] = {
                    path: d.createElement("path", {
                        d: "M17.985 3.828A1 1 0 0 0 17 3H3a1 1 0 0 0-.986.828L2 3.816V12a1 1 0 0 0 1 1h10.293l3.853 3.853A.5.5 0 0 0 18 16.5V3.816l-.015.012z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Unlock] = {
                    path: d.createElement("path", {
                        d: "M12.005 9.011H7.987V6.599C7.987 5.165 8.684 4 9.996 4c1.123 0 1.785.857 1.954 2.002 0 .554.493 1.003 1.046 1.003s.952-.449.952-1.003C13.718 3.75 12.215 2 9.996 2 7.582 2 5.997 4.063 5.997 6.599v2.412H4.75c-.414 0-.75.357-.75.8v7.387c0 .442.336.799.75.799h10.492c.415 0 .751-.357.751-.799V9.811c0-.443-.336-.8-.751-.8h-3.237z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Upload] = {
                    path: d.createElement("path", {
                        d: "M16 18H4a1 1 0 1 1 0-2h12a1 1 0 1 1 0 2zm-1.963-9.954h-2.038v4.973a1 1 0 0 1-1 1H9.005a1 1 0 0 1-1-1V8.046h-2.02a1 1 0 0 1-.706-1.707l4.026-4.046a1 1 0 0 1 1.414 0l4.025 4.046a1 1 0 0 1-.707 1.707z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VKontakte] = {
                    path: d.createElement("path", {
                        d: "M10.882 15.226s.326-.036.49-.214c.154-.165.15-.473.15-.473s-.02-1.45.65-1.66c.66-.21 1.508 1.39 2.407 2.01.67.47 1.19.36 1.19.36l2.4-.036s1.255-.077.66-1.066c-.05-.08-.35-.73-1.788-2.067-1.51-1.4-1.306-1.172.51-3.592 1.104-1.472 1.547-2.37 1.41-2.756-.134-.368-.947-.27-.947-.27l-2.707.015s-.2-.03-.35.06c-.146.087-.24.29-.24.29s-.43 1.14-1 2.11c-1.2 2.05-1.683 2.16-1.88 2.03-.46-.294-.343-1.19-.343-1.822 0-1.984.3-2.81-.584-3.025-.296-.072-.513-.117-1.265-.126-.965-.01-1.782.004-2.245.23-.31.15-.546.486-.4.506.18.024.583.11.797.4.28.38.267 1.225.267 1.225s.16 2.333-.373 2.62c-.363.2-.863-.205-1.94-2.06-.55-.95-.964-2-.964-2s-.08-.2-.225-.305c-.172-.125-.414-.166-.414-.166l-2.57.02s-.385.01-.53.18c-.123.15-.01.46-.01.46s2.016 4.71 4.296 7.082c2.09 2.18 4.463 2.04 4.463 2.04h1.074z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Verified] = {
                    path: d.createElement("path", {
                        d: "M13.683 8.731l-4.286 4a1.002 1.002 0 0 1-1.365 0l-1.714-1.602a1 1 0 0 1 1.365-1.461l1.03.963 3.605-3.363a1.001 1.001 0 0 1 1.365 1.463m4.279 1.077l-2.196-5.303a.5.5 0 0 0-.271-.27l-5.303-2.197a.499.499 0 0 0-.383 0L4.506 4.234a.5.5 0 0 0-.271.271L2.038 9.808a.508.508 0 0 0 0 .383l2.194 5.304a.501.501 0 0 0 .27.27l5.307 2.196a.487.487 0 0 0 .383 0l5.303-2.196a.501.501 0 0 0 .27-.27l2.197-5.304a.499.499 0 0 0 0-.383",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VideoPremiere] = {
                    path: d.createElement("path", {
                        d: "M10 2.8c-3.9 0-7.2 3.3-7.2 7.2 0 3.9 3.3 7.2 7.2 7.2 3.9 0 7.2-3.3 7.2-7.2 0-3.9-3.3-7.2-7.2-7.2M10 1c4.9 0 9 4.1 9 9s-4 9-9 9-9-4-9-9 4-9 9-9zm3.668 9.537a.6.6 0 0 0 0-1.073l-4.8-3.401a.603.603 0 0 0-.584.027A.598.598 0 0 0 8 6.6v6.8a.6.6 0 0 0 .868.536l4.8-3.4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VideoRerun] = {
                    path: d.createElement("path", {
                        d: "M17.953 4.797a1 1 0 0 0-1.712-.69l-1.499 1.526a7.076 7.076 0 0 0-2.796-2.167 7.082 7.082 0 0 0-5.448-.084 7.076 7.076 0 0 0-3.91 3.795 7.073 7.073 0 0 0-.084 5.446 7.076 7.076 0 0 0 3.794 3.91 7.069 7.069 0 0 0 5.448.084 1.094 1.094 0 1 0-.808-2.035 4.897 4.897 0 0 1-3.771-.058 4.9 4.9 0 0 1-2.628-2.707 4.9 4.9 0 0 1 .06-3.772 4.895 4.895 0 0 1 2.706-2.626 4.895 4.895 0 0 1 3.772.058 4.893 4.893 0 0 1 2.105 1.746l-1.889 1.926a.999.999 0 0 0 .713 1.699h.01l4.995-.047A1 1 0 0 0 18 9.79l-.047-4.994z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.ViewerList] = {
                    path: d.createElement("path", {
                        d: "M2 11V9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1zm0-6V3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1zm0 12v-2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1zm15 0H8a1 1 0 1 1 0-2h9a1 1 0 1 1 0 2zm0-6H8a1 1 0 1 1 0-2h9a1 1 0 1 1 0 2zm0-6H8a1 1 0 1 1 0-2h9a1 1 0 1 1 0 2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VisibilityShown] = {
                    path: d.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 15c-4.044 0-7-3.288-7-5 0-1.712 2.956-5 7-5 4.044 0 7 3.288 7 5 0 1.712-2.956 5-7 5m0-12c4.763 0 9 3.914 9 7s-4.237 7-9 7-9-3.914-9-7 4.237-7 9-7zm3 7a3 3 0 1 0-6 0 3 3 0 0 0 6 0z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VisibilityHidden] = {
                    path: d.createElement("path", {
                        d: "M12.866 3.47L14 1.506a1 1 0 1 1 1.732 1l-9 15.589a1 1 0 1 1-1.732-1l.668-1.157C2.938 14.56 1 12.094 1 10.006c0-3.086 4.237-7 9-7a9.3 9.3 0 0 1 2.866.464zm-6.21 10.756l1.216-2.106a3 3 0 0 1 2.896-5.014l1.078-1.867A7.494 7.494 0 0 0 10 5.006c-4.044 0-7 3.288-7 5 0 1.19 1.428 3.14 3.656 4.22zm9.667-8.847C17.957 6.739 19 8.476 19 10.006c0 3.086-4.237 7-9 7-.129 0-.257-.003-.385-.008l1.174-2.034c3.634-.387 6.211-3.36 6.211-4.958 0-.785-.622-1.902-1.685-2.88l1.008-1.747z"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VolumeMax] = {
                    path: d.createElement("path", {
                        d: "M13 6.024v7.952c1.208-.913 2-2.348 2-3.976 0-1.628-.792-3.062-2-3.976M13 2v2.04c2.363 1.06 4 3.325 4 5.96 0 2.634-1.637 4.9-4 5.96V18c3.49-1.17 6-4.309 6-8s-2.51-6.83-6-8m-2 15a1.002 1.002 0 0 1-1.641.768L3.638 14H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.638l5.721-3.768a1.003 1.003 0 0 1 1.065-.138c.351.165.576.518.576.906v14z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VolumeMid] = {
                    path: d.createElement("path", {
                        d: "M13 6.024v7.952c1.208-.913 2-2.348 2-3.976 0-1.628-.792-3.062-2-3.976M11 17a1.002 1.002 0 0 1-1.641.768L3.638 14H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.638l5.721-3.768a1.003 1.003 0 0 1 1.065-.138c.351.165.576.518.576.906v14z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.VolumeMuted] = {
                    path: d.createElement("path", {
                        d: "M11 17a1.002 1.002 0 0 1-1.641.768L3.638 14H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.638l5.721-3.768a1.003 1.003 0 0 1 1.065-.138c.351.165.576.518.576.906v14zm6.414-7l1.293 1.293a.999.999 0 1 1-1.414 1.414L16 11.414l-1.293 1.293a.997.997 0 0 1-1.414 0 .999.999 0 0 1 0-1.414L14.586 10l-1.293-1.293a.999.999 0 1 1 1.414-1.414L16 8.586l1.293-1.293a.999.999 0 1 1 1.414 1.414L17.414 10z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Warning] = {
                    path: d.createElement("path", {
                        d: "M10.87 2.504l8 14A1 1 0 0 1 18 18h-16a1 1 0 0 1-.868-1.496l8-14a1 1 0 0 1 1.737 0zM11 11.049V6.95a1 1 0 1 0-2 0v4.098a1 1 0 1 0 2 0zm-1 4.95c.55 0 1-.45 1-1s-.452-1-1-1c-.549 0-1 .452-1 1 0 .55.451 1 1 1z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Whisper] = {
                    path: d.createElement("path", {
                        d: "M2.015 3.828A1 1 0 0 1 3 3h14a1 1 0 0 1 .986.828L18 3.815V12a1 1 0 0 1-1 1H6.707l-3.853 3.853A.5.5 0 0 1 2 16.5V3.815l.015.013z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.WhisperMuted] = {
                    path: d.createElement("path", {
                        d: "M18 5H2V3.815l.015.013A1 1 0 0 1 3 3h14a1 1 0 0 1 .986.828L18 3.815V5zm0 6v1a1 1 0 0 1-1 1H6.707l-3.853 3.853A.5.5 0 0 1 2 16.5V11h16zm-.003-2H2.003a1.001 1.001 0 1 1 0-2h15.994a1 1 0 1 1 0 2z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.Windows] = {
                    path: d.createElement("path", {
                        d: "M2 5.21l6.13-.84v5.91L2 10.33ZM8.09 11v5.93L2 16V10.93Zm.74-6.7L17 3.08v7.13l-8.13.07ZM17 11v7.1L8.82 17l0-6Z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.XboxOne] = {
                    path: d.createElement("path", {
                        d: "M9.2 18c-1.2-0.1-2.5-0.6-3.6-1.3c-0.9-0.6-1.1-0.8-1.1-1.3c0-1 1.1-2.7 2.9-4.6c1-1.1 2.5-2.4 2.6-2.3 c0.3 0.1 2.7 2.4 3.6 3.5c1.4 1.8 2.1 3.2 1.8 3.8c-0.3 0.5-1.8 1.4-3 1.8C11.5 18 10.2 18.1 9.2 18z M3.3 14.5 c-0.7-1.1-1.1-2.3-1.3-3.9C2 10 2 9.7 2.2 8.6c0.2-1.4 1-3 1.9-3.9C4.5 4.3 4.5 4.2 5 4.4c0.6 0.2 1.2 0.6 2.2 1.5l0.6 0.5L7.5 6.8 c-1.5 1.8-3 4.3-3.6 5.9c-0.3 0.9-0.4 1.7-0.3 2.1C3.7 15 3.6 14.9 3.3 14.5L3.3 14.5z M16.4 14.7c0.1-0.4 0-1-0.2-1.7 c-0.5-1.4-2.1-4.1-3.5-6l-0.5-0.6L12.7 6c0.6-0.6 1.1-0.9 1.6-1.3c0.4-0.2 0.9-0.4 1.2-0.4c0.1 0 0.7 0.5 1.1 1.1 c0.6 0.9 1.1 2 1.3 3.1c0.2 0.7 0.2 2.3 0 3c-0.1 0.6-0.4 1.4-0.6 1.9c-0.2 0.4-0.6 1.2-0.8 1.4C16.4 15 16.4 15 16.4 14.7 L16.4 14.7z M9.3 4C8.7 3.7 7.6 3.3 7.1 3.2c-0.2 0-0.5-0.1-0.8 0c-0.5 0-0.5 0 0.3-0.4c0.6-0.3 1.2-0.5 1.9-0.6 c0.8-0.2 2.3-0.2 3.1 0c0.9 0.2 1.9 0.6 2.4 0.9l0.2 0.1l-0.4 0c-0.8 0-1.9 0.3-3.1 0.9C10.3 4.2 10 4.4 10 4.3 C10 4.3 9.7 4.2 9.3 4L9.3 4z",
                        fillRule: "evenodd"
                    }),
                    width: 20,
                    height: 20
                }, U[M.DeadGlitch] = {
                    path: d.createElement("g", null, d.createElement("path", {
                        d: "M26,17.4589613 L26,3 L4,3 L4,22.0601057 L10.0032868,22.0601057 L10.0032868,26 L14.0004537,22.0601057 L21.3322933,22.0601057 L26,17.4589613 L26,17.4589613 Z M21.0896458,26.0850335 L15.1583403,26.0850335 L11.2051771,30 L7.24798611,30 L7.24798611,26.0850335 L0,26.0850335 L0,5.21746493 L1.97773958,0 L29,0 L29,18.2620736 L21.0896458,26.0850335 L21.0896458,26.0850335 Z"
                    }), d.createElement("path", {
                        d: "M20.8587626,12.1710126 L22.4052753,13.7175252 L23.7175252,12.4052753 L22.1710126,10.8587626 L23.7175252,9.31224999 L22.4052753,8 L20.8587626,9.54651264 L19.31225,8 L18,9.31224999 L19.5465126,10.8587626 L18,12.4052753 L19.31225,13.7175252 L20.8587626,12.1710126 Z M11.8587626,12.1710126 L13.4052753,13.7175252 L14.7175252,12.4052753 L13.1710126,10.8587626 L14.7175252,9.31224999 L13.4052753,8 L11.8587626,9.54651264 L10.31225,8 L9,9.31224999 L10.5465126,10.8587626 L9,12.4052753 L10.31225,13.7175252 L11.8587626,12.1710126 Z"
                    })),
                    width: 30,
                    height: 30
                }, U[M.LogoGlitch] = {
                    path: d.createElement("path", {
                        clipRule: "evenodd",
                        d: "M21,9h-2v6h2V9z M5.568,3L4,7v17h5v3h3.886L16,24h5l6-6V3H5.568z M25,16l-4,4h-6l-3,3v-3H8V5h17V16z M16,9h-2v6h2V9z",
                        fillRule: "evenodd"
                    }),
                    width: 30,
                    height: 30
                }, U[M.LogoTwitch] = {
                    path: d.createElement("path", {
                        clipRule: "evenodd",
                        d: "M88,5h-6V0h-9l-6,5h-5.5L59,7.5V5h-5V0H36v5H16l-5-5H0v22l5,5.25L14,32h6v-1.5l3,1.5h12l2-3l1,3h7v-3l3,3h8l0.5-3l2.5,3h10l3-3v3h4l3-3v3h7l7-6V10L88,5z M13,13H8v6h5v6H6l-4-4V2h6v5h5V13z M36,21.5L32.5,25H15V7h6v12h2V7h6v12h2V7h5V21.5z M44,25h-6V7h6V25z M44,5h-6V2h6V5z M57,13h-5v6h5v6h-7l-4-4V2h6v5h5V13z M72,13h-7v6h7v6h-9l-4-4V11l4-4h9V13z M91,25h-6V13h-5v12h-6V2h6v5h7l4,4V25z",
                        fillRule: "evenodd"
                    }),
                    width: 94,
                    height: 32
                }, U[M.LogoTwitchDevelopers] = {
                    path: d.createElement("path", {
                        d: "M59.524 29.887c0 1.266-.872 1.99-2.521 1.99-1.636 0-2.63-.93-2.63-2.449H55.5c0 .965.594 1.484 1.503 1.484.788 0 1.382-.399 1.382-1.038 0-1.483-3.818-.627-3.818-3.148 0-1.207.884-1.918 2.388-1.918 1.649 0 2.497.808 2.497 2.364h-1.067c0-1.037-.497-1.4-1.43-1.4-.849 0-1.273.351-1.273.93 0 1.64 3.842.711 3.842 3.185zm-5.818-5.03h.207v1.122h-.134c-1.115 0-1.782.615-1.782 1.82v3.921H50.87v-6.78h1.067v1.231c.145-.578.775-1.315 1.769-1.315zm-6.727-.013c-1.624 0-2.57 1.038-2.57 2.69v1.64c0 1.63.946 2.666 2.57 2.666 1.613 0 2.557-1.025 2.557-2.266v-.05H48.41v.109c0 .748-.582 1.267-1.43 1.267-.812 0-1.443-.532-1.443-1.496v-.76h4v-1.17c0-1.665-.944-2.63-2.557-2.63zm-6.06.012c-1.032 0-1.661.603-1.855 1.05v-.965h-1.067V34h1.127v-3.174c.194.448.763.978 1.795.978 1.369 0 2.218-.94 2.218-2.642v-1.265c0-2.027-.764-3.04-2.218-3.04zm-6.873.013c-1.637 0-2.57 1.049-2.57 2.665v1.604c0 1.665.933 2.702 2.57 2.702 1.6 0 2.558-1.037 2.558-2.702v-1.604c0-1.616-.958-2.665-2.558-2.665zm-5.103 6.851h1.139V22.65h-1.14v9.071zm-3.891-6.876c-1.625 0-2.57 1.038-2.57 2.69v1.64c0 1.63.945 2.666 2.57 2.666 1.612 0 2.558-1.025 2.558-2.266v-.05h-1.128v.109c0 .748-.581 1.267-1.43 1.267-.812 0-1.443-.532-1.443-1.496v-.76h4v-1.17c0-1.665-.945-2.63-2.557-2.63zm-4.279.097h1.26l-2.291 6.78h-1.175l-2.303-6.78h1.26l1.636 5.258 1.613-5.258zm-7.576-.097c-1.624 0-2.57 1.038-2.57 2.69v1.64c0 1.63.946 2.666 2.57 2.666 1.612 0 2.558-1.025 2.558-2.266v-.05h-1.127v.109c0 .748-.582 1.267-1.43 1.267-.813 0-1.443-.532-1.443-1.496v-.76h4v-1.17c0-1.665-.946-2.63-2.558-2.63zm-6.704-1.627H3.754v8.503h2.74c1.685 0 2.86-1.098 2.86-3.16v-2.196c0-2.074-1.175-3.147-2.86-3.147zm1.673 3.413v1.652c0 1.773-.775 2.304-1.805 2.304H4.943v-6.224H6.36c1.042 0 1.805.519 1.805 2.268zm40.243.771v.422h-2.873v-.518c0-.99.57-1.508 1.443-1.508.885 0 1.43.483 1.43 1.604zm-21.927 0v.422H23.61v-.518c0-.99.57-1.508 1.443-1.508.885 0 1.43.483 1.43 1.604zm8.994 0v1.882c0 1-.594 1.532-1.43 1.532-.873 0-1.442-.531-1.442-1.532V27.4c0-.977.57-1.507 1.442-1.507.848 0 1.43.53 1.43 1.507zm6.52.266v1.351c0 1.207-.496 1.845-1.442 1.845-.92 0-1.43-.638-1.43-1.845v-1.4c0-1.194.534-1.82 1.43-1.82.946 0 1.443.662 1.443 1.869zM14.629 27.4v.422h-2.873v-.518c0-.99.569-1.508 1.442-1.508.885 0 1.43.483 1.43 1.604zm45.396-11.996H56.21v-7.21h-3.05v7.21h-3.813V1.366h3.812v3.111h4.47l2.394 2.342v8.586zm-12.05-7.21h-4.498v3.491h4.499v3.72h-5.877L39.663 13V6.819l2.435-2.342h5.877v3.718zm-9.683 0h-3.128v3.491h3.128v3.72h-4.475L31.351 13V1.366h3.812v3.111h3.128v3.718zm-12.05-5.16h3.737V1.366H26.24v1.669zm0 12.37h3.737V4.477H26.24v10.928zm-1.448-2.404l-2.366 2.404H10.685V4.477h3.812v7.209h1.373V4.477h3.813v7.209h1.373V4.477h3.737v8.524zM9.312 8.195H6.185v3.491h3.127v3.72H4.825L2.373 13V1.366h3.812v3.111h3.127v3.718zm49.008-5.16h-3.787V0h-6.567l-3.107 3.035h-3.451l-1.745 1.723V3.035h-3.127V0H24.793v3.035H10.692L7.587 0H1v13.688l3.121 3.096 5.19 3.098h4.5v-.7l1.713.7h8.363l1.483-1.718.194 1.718h5.476l.11-1.718 1.975 1.718h4.833l.344-1.718 1.726 1.718h5.521l1.74-1.73v1.73h3.093l2.397-1.73v1.73h3.47l5.148-3.447V6.131L58.32 3.035z",
                        fillRule: "evenodd"
                    }),
                    width: 62,
                    height: 34
                }, U[M.LogoTwitchPrime] = {
                    path: d.createElement("g", null, d.createElement("path", {
                        d: "M289.2 110.3c.8-.5 1.2-1.5 1.2-2.4 0-2.1-1.3-3.2-3.8-3.2-3.3 0-5.2 2-5.7 6 1.5.3 3 .4 4.5.4 1.3.1 2.6-.2 3.8-.8z"
                    }), d.createElement("path", {
                        d: "M287.9 15H269V0h-33.1l-15.6 15H203l-8 9.3V15h-16V0h-59v15H48.5L32.9 0H0v69.4L15.6 85l26 15h22.5v-2.9l8.7 2.9h42l7.4-8.1 1 8.1h27.5l.6-8.1 6.7 5.4v48c-.1.9.6 1.7 1.5 1.7h15.2c.9-.1 1.7-.8 1.8-1.8l1.6-8.2h1.6c3.8 0 7.4-1.9 9.6-5 0 0-.8 2.699976-1.1 3.599976-.2.5 0 .700024.5.900024.133333.333333 5.266667.5 15.4.5 1 .2 1.9-.500024 2.1-1.400024L207.5 132s.7 2.699976.9 3.599976c.1.9.9 1.500024 1.8 1.400024H266c2.5 0 2.7-.799976 3.5-1.599976 2.7.8 5.2 1.399976 7.8 1.599976 16.9.9 23.7-6.6 24-9.9.1-.8 2.2-13.2.8-21.1-1-5.8-6.6-11.4-15.9-11.4L304 83.2v-52L287.9 15zM26 41v18h16v19H19.1L6.9 65.9v-59H26V22h16v19H26zm81.5 37H49V22h19v37h7V22h19v37h7V22h19v44l-12.5 12zm19.5 0V22h19v56h-19zm19-62h-19V6.9h19V16zm7 49.9v-59h19V22h16v19h-16v18h16v19h-23.2L153 65.9zm32.1 59.4c-1.6 1.1-3.6 1.7-5.6 1.7-1.4 0-2.7-.2-4-.7-1.2-.4-2.3-1-3.2-1.8v11.2c.1.6-.2 1.1-.8 1.3h-5.4c-.4 0-.7-.1-1-.3-.2-.3-.3-.6-.3-1v-34.1c0-.4.1-.7.3-1 .3-.2.6-.3 1-.3h3.7c.7-.1 1.3.4 1.4 1.1l.4 1.3c1.1-1 2.3-1.8 3.7-2.4 1.4-.6 2.9-.9 4.4-.9 3-.1 6 1.2 7.8 3.6 1.9 2.4 2.9 5.7 2.9 9.8 0 2.7-.4 5.2-1.4 7.6-.8 1.9-2.2 3.6-3.9 4.9zM206.3 22H236v19h-22v18h22v19h-29.7L195 65.9V34.7L206.3 22zm5.6 84.6c-.3.2-.6.4-1 .3h-2.3c-1 0-1.9.1-2.9.3-1 .2-1.9.5-2.9.8v17.1c0 .4-.1.7-.3 1-.3.2-.6.3-1 .3h-4.9c-.6.1-1.2-.3-1.3-.9v-24c0-.4.1-.7.3-1 .3-.2.6-.3 1-.3h3.7c.7-.1 1.3.4 1.4 1.1l.7 2.8c1.1-1.3 2.4-2.4 3.8-3.2 1.2-.6 2.5-.9 3.8-.9h.7c.4 0 .7.1 1 .3.2.3.4.6.3 1l.2 4.3c0 .4-.1.7-.3 1zm11 19.5c-.3.2-.6.4-1 .3H217c-.6.1-1.2-.3-1.3-.9v-24c0-.4.1-.7.3-1 .3-.2.6-.3 1-.3h4.9c.6-.1 1.1.2 1.3.8v24.1c0 .4-.1.7-.3 1zm-6.5-30.9c-1.6-1.6-1.6-4.2 0-5.8 1.8-1.4 4.4-1.4 6.2 0 1.6 1.6 1.6 4.1 0 5.8-1.8 1.4-4.4 1.4-6.2 0zm52.9 29.9c0 .4-.1.7-.3 1-.3.2-.6.3-1 .3h-4.9c-.6.1-1.2-.3-1.3-.9V108.7c0-2.3-1-3.5-3.1-3.5-1.9 0-3.8.5-5.6 1.3V125c0 .4-.1.7-.3 1-.3.2-.6.4-1 .3H247c-.6.1-1.2-.3-1.3-.9V108.6c0-2.3-1-3.5-3.1-3.5-2 0-3.9.5-5.6 1.4V125c0 .4-.1.7-.3 1-.3.2-.6.3-1 .3h-4.9c-.6.1-1.2-.3-1.3-.9v-24c0-.4.1-.7.3-1 .3-.2.6-.3 1-.3h3.7c.7-.1 1.3.4 1.4 1.1l.4 1.4c1.5-1 3.2-1.9 4.9-2.5 1.4-.5 2.9-.7 4.5-.7 3.1 0 5.2 1.1 6.5 3.3 1.5-1 3.2-1.9 4.9-2.5 1.5-.5 3.1-.8 4.8-.8 2-.1 4 .6 5.5 2 1.4 1.5 2.1 3.5 2 5.6v18l-.1.1zm17.8-25.6c3.2 0 5.6.8 7.4 2.3 1.8 1.5 2.8 3.8 2.7 6.1.1 2.3-1 4.5-2.9 5.8-1.9 1.3-4.8 2-8.5 2-1.7 0-3.4-.2-5.1-.6.2 2.3.9 3.9 2.1 4.9 1.6 1.1 3.4 1.6 5.3 1.5.9 0 1.9-.1 2.8-.2 1.3-.2 2.5-.5 3.8-.8l.3-.1h.3c.6 0 .9.4.9 1.2v2.4c0 .4 0 .8-.2 1.1-.2.3-.5.5-.9.6-2.5 1-5.2 1.4-7.9 1.4-4.2 0-7.5-1.2-9.7-3.5-2.3-2.3-3.4-5.6-3.4-10s1.2-7.9 3.5-10.4c2.2-2.4 5.4-3.7 9.5-3.7zM278 78V41h-16v37h-19V6.9h19V22h22.3L297 34.7V78h-19z"
                    }), d.createElement("path", {
                        d: "M177.3 105.1c-1.8 0-3.5.5-5 1.4v13.4c1.5.9 3.2 1.4 5 1.4 1.6.1 3.2-.6 4.2-1.9.9-1.3 1.3-3.3 1.3-6.1s-.4-4.9-1.3-6.2c-.9-1.4-2.5-2.1-4.2-2z"
                    })),
                    width: 304,
                    height: 147
                }, U[M.LogoTwitchPrimeHorizontal] = {
                    path: d.createElement("g", null, d.createElement("path", {
                        d: "M537 38c-2.5-4-7.3-8.5-16.6-8.5-9.4 0-23 8.3-24 9a1 1 0 0 1-.8.3 1 1 0 0 1-.7-.6 12.4 12.4 0 0 0-2.6-3.5c-3-3-6.4-4.2-11.3-4.2-3.2 0-9.2 2.4-9.8 2.8a1.3 1.3 0 0 1-1.2 0c-2.5-1.8-9.8-2.8-13.8-2.8a25.3 25.3 0 0 0-9.8 2h-.2a1 1 0 0 1-1 0 6.5 6.5 0 0 0-4.3-1.7 17 17 0 0 0-5 .8 24.6 24.6 0 0 1-3.2.7l-4.4.4a1 1 0 0 1-1-.4 1 1 0 0 1 0-1 14.6 14.6 0 0 0 .6-2 11 11 0 0 0-2-11 12 12 0 0 0-9.3-4 17 17 0 0 0-9.5 3c-.8.4-2.3 1.4-4.2 2.8-5.4 3.8-13.5 9.4-17.5 11.3-1.3.6-1.7-.8-3.7-1s-5 1-7.4 1.4l-3.8.5a1 1 0 0 1-1.2-.8 17 17 0 0 0-2.8-6c-4.8-7-12.8-8.6-18.6-8.8l-12.8-.2c-8 0-19.2.5-19.2.5l-16 14-15.4-15.4h-18.8V0h-32.6l-15.4 15.4h-17L192 24v-8.6h-15.3V0h-58.2v15.4H48L32.6 0H0v68.5L15.4 84 41 99.2h22.4V96l8.6 3.3h41.5l7.4-8.6 1 8.6h27l.6-8.6 9.8 8.6h24l1.7-8.6 8.7 8.6H221l8.7-8.6v8.6H245l12-8.6v8.6h51.2c5-3 10.4-6.3 13.2-8.3a1 1 0 0 1 1.5.3 1 1 0 0 1 0 .8c-.5 3-2 7.3-2 7.3h25.7l5.8-4a1.2 1.2 0 0 1 1.5 0 .4.4 0 0 1 0 .4l1.5 3.6h89.2l6-4.2a2.5 2.5 0 0 1 .8-.3 2 2 0 0 1 .8.2 28.3 28.3 0 0 0 8.6 4.4h.2a27.3 27.3 0 0 0 7.5.8c4.5 0 30.4-9 39-12.4l6.7-2.6a107.5 107.5 0 0 0 16-8 4 4 0 0 0 2-4c0-1-.7-3-1.4-6.6v-.4a1 1 0 0 1 .6-1c2.2-1 5.2-3.2 7-8.3 2.3-7 1.8-13.5-1.6-19zM41.2 41H25.7v17.2H41V77H19L7 65V7h18.7v15.3H41l.2 18.8zm77 24l-12 12H48V22.4h18.8v36h7v-36h18.7v36h7v-36H118V65zM144 77h-19V22.4h18.8V77zm0-61.5h-19V7h18.8v8.5zm41 25.7h-15.4v17H185v19h-22.3l-12-12V6.8h18.8v15.3H185v19zm48 0h-22.3v17H233v19h-29l-12-12V34l12-12h29v19zm60 36h-19v-36h-15.3v36h-19V7h19v15.3H281l12 12v43zm113.5-49.5a9.7 9.7 0 0 1 4-5 10.8 10.8 0 0 1 6-1.8 5.8 5.8 0 0 1 4.6 1.6 4.3 4.3 0 0 1 .7 4.6c-1.5 4.6-4.8 6.8-10 6.8-2.2 0-3.7-.5-4.7-1.6s-1.2-2.7-.5-4.7zm-55.3 33a26.6 26.6 0 0 1-17.7 6.5c-1 0-2.8 0-5-.2s-4 0-5 0a3 3 0 0 0-3 2 53.3 53.3 0 0 0-1.6 5.7l-.7 2.6h-15.8l4-11c2-6.5 3.8-11 4.8-14 3-9 5.7-18.2 8.2-28l.2-.5a1 1 0 0 1 1-.4c2.2-.3 7-.4 14.5-.4 4 0 8 0 12.5.2 6.3.2 10.8 2.2 13.4 6s3 9 1 15.5a38.7 38.7 0 0 1-10.8 16zm36.5-8h-2.3A10.6 10.6 0 0 0 380 54q-2 1-3 4.7-.7 1.6-1.6 4.8l-.2.7-1.8 5.5a34.5 34.5 0 0 0-1 3.6l-1 3.5a1 1 0 0 1-.7.6h-13-.4V77l3.4-10 1.6-4.8L364 57c2.3-6.7 3.5-12.2 3.7-16.5a1 1 0 0 1 0-.5.8.8 0 0 1 .5-.4l7-1c4.2-.8 6.3-1 7-1.3a5.7 5.7 0 0 1-.3 1.8c-.5 1.8-.8 3.3.2 3.6a.8.8 0 0 0 .8-.2 35 35 0 0 1 4-2 19.2 19.2 0 0 1 8-2 3 3 0 0 1 1.4.2A35.4 35.4 0 0 1 395 42l-1.5 3.4-1 3.3-.4 1.4-.5 2a1.5 1.5 0 0 1-1.7 1 4 4 0 0 0-2-.2zm22.4 5.8l-2.8 9.2c-1.5 4.7-2.3 7.3-3 9a.6.6 0 0 1-.5.6h-13.4l.2-.8 3-8.8c1.4-3.6 2.6-6.8 3.2-8.8a188.2 188.2 0 0 0 5.5-19.2l.2-.8s0-.4.7-.4c1.2 0 2.4 0 3.5.2a21.7 21.7 0 0 0 3.6.2c1 0 2.2 0 4-.2l3.5-.2s0 .3-.3.6c-2.3 5.5-4.7 11.8-7 19.3zM489.8 47l-2.4 6.7c-1 3-2 5.2-2.4 6.7-.7 1.7-1.5 4.4-2.6 8l-2.5 8a1.6 1.6 0 0 1-1 1h-13a2 2 0 0 1 0-1 49.6 49.6 0 0 1 1.7-4.8l.4-1c1-2.6 1.8-4.6 2.2-6q2.5-7.4 3.3-10.4c.5-2 .5-3.5-.3-4.5a4.2 4.2 0 0 0-3.5-1.4A8.3 8.3 0 0 0 465 50a9 9 0 0 0-3.8 4l-3.6 10.5-1.8 6-1.8 6a1 1 0 0 1-1 1h-13a1.2 1.2 0 0 1 .2-1l2-5.8c1-2.2 1.8-4.5 2.3-6l1.3-4 .2-.8 1.5-4.8c1-2.6 1-4.4 0-5.6a3.4 3.4 0 0 0-3.2-1.3 10.4 10.4 0 0 0-4.8 1.5 8.3 8.3 0 0 0-3.8 3.6l-3.2 9.7-1.8 5.5c-1 3.3-2 5.8-2.5 7.7a3 3 0 0 1-.5 1 .8.8 0 0 1-.5 0H414a4 4 0 0 1 .3-.6l.3-.8 3.2-9.2.5-1.4 3-8.7a138 138 0 0 0 4.2-15.6v-.3a4.3 4.3 0 0 1 0-.5 1.2 1.2 0 0 1 .6-.5 19.7 19.7 0 0 1 3.6-.6c2.3 0 3.5-.2 4-.3l3.6-1a16 16 0 0 1 3-.5 11.8 11.8 0 0 1-.4 2c-1 2.7-.8 3-.6 3.5a.7.7 0 0 0 .6.3h.2a5.4 5.4 0 0 0 1.3-.7 63 63 0 0 1 7.2-4 18 18 0 0 1 7.2-1.5 10.3 10.3 0 0 1 6 1.6 5.2 5.2 0 0 1 2.2 4.8l-.2 1.8 1.3-1.2a25.7 25.7 0 0 1 7.7-5 20 20 0 0 1 8-2c3.5 0 6 .8 7.7 2.4 2 2 2.3 4.4 1.3 7.8zm42.7 8c-1 2.6-2 4-3.8 4.4l-9 1-15.2 1h-.6v.7a5 5 0 0 0 2.4 5 10.6 10.6 0 0 0 5.5 1.4 22 22 0 0 0 8.5-2l1-.5 2.4-1.3a14 14 0 0 1 1 3.5c.6 3 .6 4.2.5 4.5a4.6 4.6 0 0 1-.6.7C520 77 514 78.7 507 78.7c-6.4 0-11-2-13.6-5.5s-3-8.8-1-15.2a33 33 0 0 1 10.8-15.5 26.6 26.6 0 0 1 17-6.2c5.2 0 9 2 11.2 5.5s2.6 8 1 13.2z"
                    }), d.createElement("path", {
                        fill: "#FFF",
                        d: "M515 45.3a8 8 0 0 0-5.4 2.4 11.8 11.8 0 0 0-3.4 5 1.6 1.6 0 0 0 .6 2 1 1 0 0 0 .8 0c3.3 0 6.7-.3 10-.7 1 0 2-.4 2.2-1a6 6 0 0 0-.3-5.3 5 5 0 0 0-4.4-2.4zM339.2 34.8c-7 0-7.6.7-8 1s-.5.6-3.6 10l-1.2 4-1.2 3.7a1 1 0 0 0 0 .8c.5.5 1.3 1 8 1 6.4 0 10.8-3.3 13-9.7 1.2-3.6 1.2-6.4 0-8.2s-3.6-2.6-7-2.6z"
                    })),
                    width: 539.99,
                    height: 100.22
                }, U[M.SearchNoResults] = {
                    path: d.createElement("path", {
                        d: "M6.209 19.837c0-6.966 5.663-12.63 12.63-12.63 6.96 0 12.624 5.664 12.624 12.63 0 6.963-5.664 12.627-12.625 12.627-6.966 0-12.63-5.664-12.63-12.627m38.945 22.23L34.021 30.931c2.283-3.117 3.649-6.946 3.649-11.095C37.67 9.45 29.223 1 18.838 1 8.451 1 .001 9.45.001 19.837c0 10.384 8.45 18.834 18.837 18.834 4.15 0 7.979-1.368 11.095-3.651l11.135 11.132c.563.57 1.302.848 2.044.848.739 0 1.478-.279 2.041-.848a2.89 2.89 0 0 0 0-4.086",
                        fillRule: "evenodd"
                    }),
                    width: 46,
                    height: 48
                }, U),
                j = function(e) {
                    var t = {};
                    return e.type ? t[e.type] = !0 : t[F.Inherit] = !0, d.createElement("figure", c.a({
                        className: "tw-svg"
                    }, m(e)), d.createElement("svg", {
                        className: u("tw-svg__asset", "tw-svg__asset--" + M[e.asset].toLowerCase(), t),
                        width: e.fill ? "100%" : (e.width || 20) + "px",
                        height: e.fill ? "100%" : (e.height || 20) + "px",
                        version: "1.1",
                        viewBox: "0 0 " + B[e.asset].width + " " + B[e.asset].height,
                        x: "0px",
                        y: "0px"
                    }, B[e.asset].path))
                };
            j.displayName = "SVG";
            var z, W, V;
            n("BSQc");
            ! function(e) {
                e.Default = "", e.Hollow = "tw-button--hollow", e.Text = "tw-button--text", e.Alert = "tw-button--alert", e.Success = "tw-button--success"
            }(z || (z = {})),
            function(e) {
                e.Default = "", e.Small = "tw-button--small", e.Large = "tw-button--large"
            }(W || (W = {})),
            function(e) {
                e.Default = "", e.Loading = "tw-button--state-loading", e.Success = "tw-button--state-success"
            }(V || (V = {}));
            var H, G, q, Q = ((H = {})[W.Small] = {
                    width: 16,
                    height: 16
                }, H[W.Large] = {
                    width: 24,
                    height: 24
                }, H),
                K = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buttonElement = null, t.refHandler = function(e) {
                            t.buttonElement = e
                        }, t.onClick = function(e) {
                            t.props.onClick && t.props.onClick(e), t.props.blurAfterClick && t.buttonElement && t.buttonElement.blur()
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e, t, n, i, r, a, o;
                        (this.props.disabled || this.props.state === V.Loading || this.props.state === V.Success) && (o = !0);
                        var s, l = {
                            "tw-button": !0,
                            "tw-button--dropmenu": this.props.dropdown,
                            "tw-button--overlay": this.props.overlay,
                            "tw-button--purchase": !!this.props.purchase,
                            "tw-button--status": !!this.props.statusAlertText || !!this.props.statusAlertIcon,
                            "tw-button--disabled": this.props.disabled,
                            "tw-button--full-width": this.props.fullWidth
                        };
                        if (this.props.statusAlertText || this.props.statusAlertIcon || this.props.state === V.Success ? l[z.Success] = !0 : this.props.type && (l[this.props.type] = !0), this.props.size && (l[this.props.size] = !0), this.props.state && (l[this.props.state] = !0), this.props.purchase && (t = d.createElement("span", {
                                className: "tw-button__num-block",
                                key: "tw-button-purchase"
                            }, this.props.purchase)), this.props.dropdown && (e = d.createElement("span", {
                                className: "tw-button__icon tw-button__icon--right",
                                key: "tw-button-dropdown"
                            }, d.createElement(j, {
                                asset: M.GlyphArrDown,
                                type: F.Inherit
                            }))), this.props.state === V.Loading && (r = d.createElement(L, {
                                className: "tw-button__loading-spinner",
                                position: N.Absolute,
                                key: "tw-button-loading-spinner"
                            }, d.createElement(A, {
                                delay: 0,
                                size: this.getSpinnerSize(this.props.size),
                                inheritColor: !0
                            }))), this.props.state === V.Success && (a = d.createElement(L, {
                                className: "tw-button__success-icon",
                                position: N.Absolute,
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center,
                                key: "tw-button-success-icon"
                            }, d.createElement(j, {
                                asset: M.Check,
                                width: this.successIconSize(this.props.size),
                                height: this.successIconSize(this.props.size)
                            }))), this.props.icon) {
                            var u = {
                                width: 20,
                                height: 20
                            };
                            this.props.size && (u = Q[this.props.size]), n = this.props.statusAlertIcon ? d.createElement(L, {
                                className: "tw-button__icon tw-button__icon--status " + (this.props.children ? "tw-button__icon--left" : ""),
                                display: k.Flex,
                                key: "tw-button-icon"
                            }, d.createElement(L, {
                                className: "tw-button__primary-icon",
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center
                            }, d.createElement(j, {
                                width: u.width,
                                height: u.height,
                                type: F.Inherit,
                                asset: this.props.icon
                            })), d.createElement(L, {
                                className: "tw-button__alert-icon",
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center
                            }, d.createElement(j, {
                                width: u.width,
                                height: u.height,
                                type: F.Inherit,
                                asset: this.props.statusAlertIcon
                            }))) : d.createElement("span", {
                                className: "tw-button__icon " + (this.props.children ? "tw-button__icon--left" : ""),
                                key: "tw-button-icon"
                            }, d.createElement(j, {
                                width: u.width,
                                height: u.height,
                                type: F.Inherit,
                                asset: this.props.icon
                            }))
                        }
                        this.props.children && (i = this.props.statusAlertText ? d.createElement("span", {
                            className: "tw-button__text",
                            key: "tw-button-text"
                        }, d.createElement("span", {
                            className: "tw-button__primary-text",
                            "data-a-target": "tw-button-text"
                        }, this.props.children), d.createElement("span", {
                            className: "tw-button__alert-text"
                        }, this.props.statusAlertText)) : d.createElement("span", {
                            className: "tw-button__text",
                            "data-a-target": "tw-button-text",
                            key: "tw-button-text"
                        }, this.props.children)), this.props.targetBlank && (s = "_blank");
                        var g = [n, i, r, a, e, t],
                            v = c.a({
                                tabIndex: this.props.tabIndex,
                                onClick: this.onClick,
                                "aria-label": this.props.ariaLabel,
                                className: p(l)
                            }, m(this.props));
                        if (this.props.linkTo && !o) {
                            if (f(this.props.linkTo)) {
                                if ("string" == typeof this.props.linkTo) return d.createElement("a", c.a({
                                    href: this.props.linkTo,
                                    target: s,
                                    ref: this.refHandler,
                                    download: this.props.download
                                }, v), g);
                                throw new Error("External links with Location descriptors are not implemented in core-ui.button! Pass a string as linkTo instead.")
                            }
                            return d.createElement(h.a, c.a({
                                to: this.props.linkTo,
                                target: s,
                                download: this.props.download
                            }, v), g)
                        }
                        return d.createElement("button", c.a({
                            disabled: o,
                            ref: this.refHandler
                        }, v), g)
                    }, t.prototype.getSpinnerSize = function(e) {
                        switch (e) {
                            case W.Small:
                                return D.Small;
                            case W.Large:
                                return D.Large;
                            case W.Default:
                            default:
                                return D.Default
                        }
                    }, t.prototype.successIconSize = function(e) {
                        switch (e) {
                            case W.Small:
                                return 16;
                            case W.Large:
                                return 24;
                            case W.Default:
                            default:
                                return 20
                        }
                    }, t
                }(d.Component);
            n("AEoH");
            ! function(e) {
                e.Default = "", e.Hollow = "tw-button-icon--hollow", e.Primary = "tw-button-icon--primary", e.Alert = "tw-button-icon--alert", e.Secondary = "tw-button-icon--secondary", e.Success = "tw-button-icon--success"
            }(G || (G = {})),
            function(e) {
                e.Default = "", e.Small = "tw-button-icon--small", e.Large = "tw-button-icon--large"
            }(q || (q = {}));
            var Y, X, $ = ((Y = {})[q.Small] = {
                    width: 16,
                    height: 16
                }, Y[q.Large] = {
                    width: 24,
                    height: 24
                }, Y),
                J = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buttonElement = null, t.refHandler = function(e) {
                            t.buttonElement = e
                        }, t.onClick = function(e) {
                            t.props.onClick && t.props.onClick(e), t.props.blurAfterClick && t.buttonElement && t.buttonElement.blur()
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e, t, n, i = {
                            "tw-button-icon": !0,
                            "tw-button-icon--dropmenu": this.props.dropdown,
                            "tw-button-icon--disabled": this.props.disabled,
                            "tw-button-icon--overlay": this.props.overlay,
                            "tw-button-icon--status": !!this.props.statusAlertIcon
                        };
                        if (this.props.statusAlertIcon ? i[G.Success] = !0 : this.props.type && (i[this.props.type] = !0), this.props.size && (i[this.props.size] = !0), this.props.dropdown && (e = d.createElement("span", {
                                className: "tw-button-icon__icon tw-button-icon__icon--right",
                                key: "tw-button-dropdown"
                            }, d.createElement(j, {
                                asset: M.GlyphArrDown,
                                type: F.Inherit
                            }))), this.props.icon) {
                            var r = {
                                width: 20,
                                height: 20
                            };
                            this.props.size && (r = $[this.props.size]), t = d.createElement("span", {
                                className: "tw-button-icon__icon"
                            }, d.createElement(j, {
                                width: r.width,
                                height: r.height,
                                type: F.Inherit,
                                asset: this.props.icon
                            })), t = this.props.statusAlertIcon ? d.createElement(L, {
                                className: "tw-button-icon__icon tw-button-icon__icon--status",
                                display: k.Flex,
                                key: "tw-button-icon"
                            }, d.createElement(L, {
                                className: "tw-button-icon__primary-icon",
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center
                            }, d.createElement(j, {
                                width: r.width,
                                height: r.height,
                                type: F.Inherit,
                                asset: this.props.icon
                            })), d.createElement(L, {
                                className: "tw-button-icon__alert-icon",
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center
                            }, d.createElement(j, {
                                width: r.width,
                                height: r.height,
                                type: F.Inherit,
                                asset: this.props.statusAlertIcon
                            }))) : d.createElement("span", {
                                className: "tw-button-icon__icon",
                                key: "tw-button-icon"
                            }, d.createElement(j, {
                                width: r.width,
                                height: r.height,
                                type: F.Inherit,
                                asset: this.props.icon
                            }))
                        }
                        this.props.targetBlank && (n = "_blank");
                        var a = c.a({
                                tabIndex: this.props.tabIndex,
                                onClick: this.onClick,
                                "aria-label": this.props.ariaLabel,
                                className: p(i)
                            }, m(this.props)),
                            o = [t, e];
                        if (this.props.linkTo && !this.props.disabled) {
                            if (f(this.props.linkTo)) {
                                if ("string" == typeof this.props.linkTo) return d.createElement("a", c.a({
                                    href: this.props.linkTo,
                                    target: n,
                                    download: this.props.download,
                                    ref: this.refHandler
                                }, a), o);
                                throw new Error("External links with Location descriptors are not implemented in core-ui.button! Pass a string as linkTo instead.")
                            }
                            return d.createElement(h.a, c.a({
                                to: this.props.linkTo,
                                target: n,
                                download: this.props.download
                            }, a), o)
                        }
                        return d.createElement("button", c.a({
                            disabled: this.props.disabled,
                            ref: this.refHandler
                        }, a), o)
                    }, t
                }(d.Component);
            n("r0//");
            ! function(e) {
                e.Default = "", e.Inherit = "tw-link--inherit", e.Overlay = "tw-link--overlay"
            }(X || (X = {}));
            var Z, ee, te, ne, ie, re, ae, oe = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.buttonElement = null, t.refHandler = function(e) {
                        t.buttonElement = e
                    }, t.onClick = function(e) {
                        t.props.onClick && t.props.onClick(e), t.buttonElement && t.buttonElement.blur()
                    }, t
                }
                return c.d(t, e), t.prototype.render = function() {
                    var e = {
                        "tw-link": !0,
                        "tw-link--underline": this.props.underline,
                        "tw-link--hover-underline-none": this.props.hoverUnderlineNone,
                        "tw-link--hover-color-inherit": this.props.hoverColorInherit,
                        "tw-link--button": !this.props.to
                    };
                    if (this.props.type && (e[this.props.type] = !0), this.props.to) {
                        if (f(this.props.to)) {
                            if ("string" == typeof this.props.to) return d.createElement("a", c.a({
                                href: this.props.to,
                                className: p(this.props.className, e),
                                onClick: this.props.onClick,
                                target: this.props.targetBlank ? "_blank" : void 0
                            }, m(this.props)), this.props.children);
                            throw new Error('External links with Location descriptors are not implemented in core-ui.link! Pass a string as "to" instead.')
                        }
                        return d.createElement(h.a, c.a({
                            className: p(this.props.className, e),
                            onClick: this.props.onClick,
                            to: this.props.to,
                            target: this.props.targetBlank ? "_blank" : void 0
                        }, m(this.props)), this.props.children)
                    }
                    return d.createElement("button", c.a({
                        className: p(this.props.className, e)
                    }, m(this.props), {
                        onClick: this.onClick,
                        ref: this.refHandler
                    }), this.props.children)
                }, t
            }(d.Component);
            n("5DzM");
            ! function(e) {
                e.Base = "tw-c-text", e.Alt = "tw-c-text-alt", e.Alt2 = "tw-c-text-alt-2", e.Link = "tw-c-text-link", e.Live = "tw-c-text-live", e.Error = "tw-c-text-error", e.Overlay = "tw-c-text-overlay", e.OverlayAlt = "tw-c-text-overlay-alt", e.Inherit = "tw-c-text-inherit"
            }(Z || (Z = {})),
            function(e) {
                e.Size1 = "font-size-1", e.Size2 = "font-size-2", e.Size3 = "font-size-3", e.Size4 = "font-size-4", e.Size5 = "font-size-5", e.Size6 = "font-size-6", e.Size7 = "font-size-7", e.Size8 = "font-size-8"
            }(ee || (ee = {})),
            function(e) {
                e.Body = "tw-line-height-body", e.Heading = "tw-line-height-heading"
            }(te || (te = {})),
            function(e) {
                e.Underline = "tw-underline", e.Strikethrough = "tw-strikethrough"
            }(ne || (ne = {})),
            function(e) {
                e.Capitalize = "tw-capcase", e.Uppercase = "tw-upcase"
            }(ie || (ie = {})),
            function(e) {
                e.P = "p", e.Span = "span", e.H1 = "h1", e.H2 = "h2", e.H3 = "h3", e.H4 = "h4", e.H5 = "h5", e.H6 = "h6", e.Strong = "strong", e.Em = "em"
            }(re || (re = {})),
            function(e) {
                e.Normal = "tw-word-break-normal", e.BreakAll = "tw-word-break-all", e.KeepAll = "tw-word-break-keep-all", e.BreakWord = "tw-word-break-word"
            }(ae || (ae = {}));
            var se, le, ce = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return c.d(t, e), t.prototype.render = function() {
                    var e = ((u = {
                        "tw-ellipsis": this.props.ellipsis || this.props.lines && this.props.lines > 0,
                        "tw-italic": this.props.italic,
                        "tw-nowrap": this.props.noWrap,
                        "tw-strong": this.props.bold
                    })["tw-line-clamp-2"] = 2 === this.props.lines, u);
                    this.props.color && (e[this.props.color] = !0), this.props.lineHeight && (e[this.props.lineHeight] = !0), this.props.transform && (e[this.props.transform] = !0), this.props.decoration && (e[this.props.decoration] = !0), this.props.wordBreak && (e[this.props.wordBreak] = !0);
                    var t, n = this.getBreakpointClasses(this.props),
                        i = this.getBreakpointClasses(this.props.breakpointExtraSmall, "xs"),
                        r = this.getBreakpointClasses(this.props.breakpointSmall, "sm"),
                        a = this.getBreakpointClasses(this.props.breakpointMedium, "md"),
                        o = this.getBreakpointClasses(this.props.breakpointLarge, "lg"),
                        s = this.getBreakpointClasses(this.props.breakpointExtraLarge, "xl"),
                        l = this.getBreakpointClasses(this.props.breakpointExtraExtraLarge, "xxl");
                    this.props.title ? t = this.props.title : this.props.ellipsis && "string" == typeof this.props.children && (t = this.props.children);
                    var u, h = d.createElement(this.props.type || "p", c.a({
                        className: p(this.props.className, e, n, i, r, a, o, s, l)
                    }, m(this.props), g(this.props), {
                        title: t
                    }), this.props.children);
                    return d.createElement(x, {
                        verticalAlign: this.props.align
                    }, h)
                }, t.prototype.getBreakpointClasses = function(e, t) {
                    if (!e) return "";
                    var n = [];
                    return t = t ? "tw-" + t + "-" : "tw-", e.fontSize && n.push(t + e.fontSize), n
                }, t
            }(d.Component);
            n("5KRU");
            ! function(e) {
                e.Base = "tw-c-background", e.Alt = "tw-c-background-alt", e.Alt2 = "tw-c-background-alt-2", e.Overlay = "tw-c-background-overlay", e.Accent = "tw-c-background-accent", e.AccentAlt = "tw-c-background-accent-alt", e.AccentAlt2 = "tw-c-background-accent-alt-2"
            }(se || (se = {})),
            function(e) {
                e.None = "tw-border-radius-none", e.Small = "tw-border-radius-small", e.Medium = "tw-border-radius-medium", e.Large = "tw-border-radius-large", e.Rounded = "tw-border-radius-rounded"
            }(le || (le = {}));
            var de, ue = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = ((t = {
                            "tw-border-t": this.props.border || this.props.borderMarked || this.props.borderTop,
                            "tw-border-r": this.props.border || this.props.borderMarked || this.props.borderRight,
                            "tw-border-b": this.props.border || this.props.borderMarked || this.props.borderBottom,
                            "tw-border-l": this.props.border || this.props.borderLeft && !this.props.borderMarked,
                            "tw-border--marked": this.props.borderMarked
                        })["tw-elevation-" + this.props.elevation] = void 0 !== this.props.elevation && this.props.elevation > 0, t);
                        this.props.borderRadius && ("string" == typeof this.props.borderRadius ? e[this.props.borderRadius] = !0 : this.getBorderRadiusClasses(this.props.borderRadius).forEach(function(t) {
                            e[t] = !0
                        }));
                        var t, n = this.getColorClass(),
                            i = this.getBackgroundClass(),
                            r = this.getBreakpointClasses(this.props),
                            a = this.getBreakpointClasses(this.props.breakpointExtraSmall, "xs"),
                            o = this.getBreakpointClasses(this.props.breakpointSmall, "sm"),
                            s = this.getBreakpointClasses(this.props.breakpointMedium, "md"),
                            l = this.getBreakpointClasses(this.props.breakpointLarge, "lg"),
                            u = this.getBreakpointClasses(this.props.breakpointExtraLarge, "xl"),
                            h = this.getBreakpointClasses(this.props.breakpointExtraExtraLarge, "xxl"),
                            f = c.a({}, this.props, m(this.props), g(this.props), {
                                className: p(this.props.className, e, i, n, r, a, o, s, l, u, h)
                            });
                        return d.createElement(x, c.a({}, f))
                    }, t.prototype.getBorderRadiusClasses = function(e) {
                        var t = [];
                        return Object.keys(e).map(function(n) {
                            var i;
                            switch (n) {
                                case "topLeft":
                                    i = e.topLeft;
                                    break;
                                case "topRight":
                                    i = e.topRight;
                                    break;
                                case "bottomRight":
                                    i = e.bottomRight;
                                    break;
                                case "bottomLeft":
                                    i = e.bottomLeft;
                                    break;
                                default:
                                    return
                            }
                            if (i) {
                                var r = n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
                                t.push(i.replace(/border-radius/, "border-" + r + "-radius"))
                            }
                        }), t
                    }, t.prototype.getBreakpointClasses = function(e, t) {
                        if (!e) return "";
                        var n = [];
                        return t = t ? "tw-" + t + "-" : "tw-", e.fontSize && n.push(t + e.fontSize), n
                    }, t.prototype.getColorClass = function() {
                        return this.props.background !== se.Overlay || this.props.color ? this.props.color ? this.props.color : "" : Z.Overlay
                    }, t.prototype.getBackgroundClass = function() {
                        return this.props.background ? this.props.background : ""
                    }, t
                }(d.Component),
                pe = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(ue, c.a({}, this.props), d.createElement("div", {
                            ref: this.props.refDelegate
                        }, this.props.children))
                    }, t
                }(ue);
            n("DBPb");
            ! function(e) {
                e.Error = "tw-alert-banner--error", e.Info = "tw-alert-banner--info", e.Success = "tw-alert-banner--success", e.Warning = "tw-alert-banner--warning"
            }(de || (de = {}));
            var me, he = ((me = {})[de.Error] = M.NotificationError, me[de.Info] = M.NotificationInfo, me[de.Success] = M.NotificationSuccess, me[de.Warning] = M.NotificationWarning, me),
                fe = function(e) {
                    var t, n, i = ((n = {
                            "tw-alert-banner": !0
                        })[e.type] = !0, n),
                        r = [];
                    return e.link && (t = d.createElement(L, {
                        display: k.InlineFlex,
                        margin: {
                            left: 1
                        }
                    }, d.createElement(oe, {
                        className: "tw-alert-banner__link",
                        to: e.link.to,
                        type: X.Inherit,
                        underline: !0,
                        hoverColorInherit: !0
                    }, e.link.children))), e.actions && e.actions.forEach(function(e, t) {
                        r.push(d.createElement(L, {
                            margin: {
                                left: 1
                            }
                        }, d.createElement(K, c.a({}, e, {
                            size: W.Small,
                            overlay: !0,
                            type: 0 === t ? z.Hollow : z.Text
                        }))))
                    }), d.createElement(pe, c.a({}, m(e), {
                        role: l.Alert,
                        className: p("tw-alert-banner", i),
                        fontSize: ee.Size6,
                        color: Z.Overlay,
                        alignItems: b.Center,
                        position: N.Relative,
                        padding: {
                            left: 1
                        },
                        breakpointLarge: {
                            padding: {
                                x: 4
                            }
                        }
                    }), d.createElement(L, {
                        display: k.Flex,
                        alignItems: b.Center,
                        position: N.Relative
                    }, d.createElement(j, {
                        asset: he[e.type],
                        width: 20,
                        height: 20
                    }), d.createElement(L, {
                        display: k.Flex,
                        alignItems: b.Center,
                        flexGrow: 1
                    }, e.status && d.createElement(x, {
                        margin: {
                            left: 1
                        }
                    }, d.createElement(ce, {
                        type: re.H2,
                        fontSize: ee.Size6
                    }, e.status)), (e.message || t) && d.createElement(L, {
                        margin: {
                            left: 1
                        }
                    }, d.createElement(ce, {
                        type: re.P,
                        fontSize: ee.Size6
                    }, e.message, t))), r && d.createElement(L, {
                        display: k.Flex,
                        flexDirection: S.RowReverse,
                        justifyContent: E.End
                    }, r), d.createElement(L, {
                        padding: {
                            x: 1
                        }
                    }, d.createElement(J, {
                        overlay: !0,
                        icon: M.Close,
                        ariaLabel: e.closeButtonAriaLabel
                    }))))
                };
            fe.displayName = "AlertBanner";
            var ge = function(e) {
                return d.createElement(pe, {
                    padding: 2,
                    background: se.Alt,
                    elevation: 1,
                    display: e.isOpen ? k.Block : k.HideAccessible
                }, e.children)
            };
            ge.displayName = "AccordionBody";
            var ve = function(e) {
                var t, n = d.createElement(K, c.a({}, e.primaryButtonProps, {
                    type: z.Default
                }));
                return e.secondaryButtonProps && (t = d.createElement(K, c.a({}, e.secondaryButtonProps, {
                    type: z.Text
                }))), d.createElement(L, {
                    display: k.Flex,
                    justifyContent: E.End,
                    margin: {
                        top: 2
                    }
                }, t && d.createElement(L, {
                    margin: {
                        left: 1
                    }
                }, t), d.createElement(L, {
                    margin: {
                        left: 1
                    }
                }, n))
            };
            ve.displayName = "AccordionFooter";
            var be, ye;
            n("dPg0");
            ! function(e) {
                e.Aspect21x9 = "tw-aspect--21x9", e.Aspect16x9 = "tw-aspect--16x9", e.Aspect4x3 = "tw-aspect--4x3", e.Aspect1x1 = "tw-aspect--1x1", e.Aspect3x4 = "tw-aspect--3x4", e.Aspect3x2 = "tw-aspect--3x2", e.BoxArt = "tw-aspect--3x4"
            }(be || (be = {})),
            function(e) {
                e.Top = "tw-aspect--align-top", e.Center = "tw-aspect--align-center", e.Bottom = "tw-aspect--align-bottom"
            }(ye || (ye = {}));
            var ke = function(e) {
                var t = {
                    "tw-aspect": !0,
                    "tw-aspect--overflow": e.overflow
                };
                return e.ratio ? t[e.ratio] = !0 : t[be.Aspect16x9] = !0, e.align ? t[e.align] = !0 : t[ye.Top] = !0, d.createElement("figure", c.a({
                    className: p(t)
                }, m(e)), e.children)
            };
            ke.displayName = "Aspect";
            var Se = function(e) {
                    return new RegExp(/^(\d+\.?\d*)(w|x)$/).test(e)
                },
                we = function(e) {
                    var t;
                    e.sizes && (t = e.sizes.map(function(e) {
                        return e.mediaCondition ? e.mediaCondition + " " + e.size : "" + e.size
                    }).join(",") || void 0);
                    var n = Object.keys(e.srcSet || {}).filter(Se).map(function(t) {
                        return e.srcSet ? e.srcSet[t] + " " + t : ""
                    }).join(",") || void 0;
                    return d.createElement("img", c.a({
                        className: p(e.className, {
                            "tw-image": !0
                        })
                    }, m(e), {
                        src: e.src,
                        alt: e.alt,
                        srcSet: n,
                        sizes: t,
                        onError: e.onError,
                        onLoad: e.onLoad,
                        ref: e.refHandler
                    }))
                };
            we.displayName = "CoreImage";
            var Ee;
            n("F3u3");
            ! function(e) {
                e.Inverted = "tw-interactable--inverted", e.Alpha = "tw-interactable--alpha", e.Alert = "tw-interactable--alert", e.Base = "tw-interactable--base", e.Alt = "tw-interactable--alt", e.Overlay = "tw-interactable--overlay"
            }(Ee || (Ee = {}));
            var Ce, Ne, Te, _e, Re, Oe = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buttonElement = null, t.refHandler = function(e) {
                            t.buttonElement = e
                        }, t.onClick = function(e) {
                            t.props.onClick && t.props.onClick(e), t.props.blurAfterClick && t.buttonElement && t.buttonElement.blur()
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e, t = {
                            "tw-interactable": !0,
                            "tw-interactable--selected": this.props.selected,
                            "tw-interactable--hover": this.props.hover,
                            "tw-interactable--disabled": this.props.disabled,
                            "tw-interactable--border": this.props.border
                        };
                        this.props.targetBlank && (e = "_blank"), this.props.type ? t[this.props.type] = !0 : t[Ee.Inverted] = !0;
                        var n, i = c.a({
                            tabIndex: this.props.tabIndex,
                            onClick: this.onClick,
                            "aria-label": this.props.ariaLabel,
                            className: p(t)
                        }, m(this.props));
                        if (this.props.linkTo)
                            if (f(this.props.linkTo)) {
                                if ("string" != typeof this.props.linkTo) throw new Error("External links with Location descriptors are not implemented in core-ui.interactable! Pass a string as linkTo instead.");
                                n = d.createElement("a", c.a({
                                    href: this.props.linkTo,
                                    target: e,
                                    ref: this.refHandler
                                }, i), this.props.children)
                            } else n = d.createElement(h.a, c.a({
                                to: this.props.linkTo,
                                target: e
                            }, i), this.props.children);
                        else n = d.createElement("button", c.a({
                            disabled: this.props.disabled,
                            ref: this.refHandler
                        }, i), this.props.children);
                        return d.createElement(ue, {
                            display: k.Block,
                            borderRadius: this.props.borderRadius,
                            fullWidth: !0
                        }, n)
                    }, t
                }(d.Component),
                Ie = (n("U6dP"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.getYPadding = function() {
                            return t.props.description ? 2 : 3
                        }, t.renderTitles = function() {
                            return d.createElement(L, {
                                flexGrow: 1,
                                flexShrink: 1,
                                display: k.Flex,
                                flexDirection: S.Column,
                                alignItems: b.Start,
                                justifyContent: E.Center,
                                overflow: C.Hidden,
                                padding: {
                                    y: t.getYPadding(),
                                    right: 2
                                }
                            }, d.createElement(L, {
                                fullWidth: !0
                            }, d.createElement(ce, {
                                type: re.H3,
                                fontSize: ee.Size4,
                                bold: !0,
                                ellipsis: !0
                            }, t.props.title), t.props.description && d.createElement(ce, {
                                color: Z.Alt2,
                                ellipsis: !0
                            }, t.props.description)))
                        }, t.renderBackgroundImage = function() {
                            if (t.props.backgroundImageProps) return d.createElement(x, {
                                className: "accordion-header__background-image",
                                position: N.Absolute,
                                attachTop: !0,
                                attachLeft: !0,
                                fullWidth: !0,
                                fullHeight: !0
                            }, d.createElement(we, c.a({}, t.props.backgroundImageProps)))
                        }, t.renderLabel = function() {
                            if (t.props.label) return d.createElement(L, {
                                padding: {
                                    right: 2
                                },
                                flexGrow: 1,
                                flexShrink: 0,
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.End
                            }, d.createElement(ce, null, t.props.label))
                        }, t.renderImageAndLabel = function() {
                            if (t.props.imageProps || t.props.imageLabelOverlay) return d.createElement(pe, {
                                className: "accordion-header__image-container",
                                flexGrow: 0,
                                flexShrink: 0,
                                background: se.Alt2,
                                position: N.Relative
                            }, t.props.imageLabelOverlay && d.createElement(pe, {
                                position: N.Relative,
                                fullHeight: !0,
                                zIndex: I.Above,
                                display: k.Flex,
                                alignItems: b.Center,
                                justifyContent: E.Center,
                                padding: 1,
                                color: t.props.imageProps ? Z.Overlay : Z.Inherit,
                                background: t.props.imageProps ? se.Overlay : void 0
                            }, d.createElement(ce, {
                                fontSize: ee.Size3,
                                bold: !0
                            }, t.props.imageLabelOverlay)), t.props.imageProps && d.createElement(L, {
                                position: N.Absolute,
                                fullWidth: !0,
                                fullHeight: !0,
                                attachTop: !0,
                                attachLeft: !0
                            }, d.createElement(ke, {
                                ratio: be.Aspect1x1,
                                align: ye.Center
                            }, d.createElement(we, c.a({}, t.props.imageProps)))))
                        }, t.onClick = function(e) {
                            void 0 !== t.props.onClick && t.props.onClick(e, t.props.index)
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return d.createElement(pe, {
                            className: "accordion-header",
                            background: se.Base,
                            elevation: 1,
                            position: N.Relative,
                            overflow: C.Hidden
                        }, this.renderBackgroundImage(), d.createElement(Oe, {
                            onClick: this.onClick,
                            type: Ee.Base,
                            blurAfterClick: !0,
                            "aria-expanded": this.props.isOpen
                        }, d.createElement(L, {
                            display: k.Flex,
                            position: N.Relative,
                            zIndex: I.Above
                        }, d.createElement(L, {
                            flexGrow: 0,
                            flexShrink: 0,
                            display: k.Flex,
                            padding: {
                                y: this.getYPadding(),
                                left: 2,
                                right: 1
                            }
                        }, d.createElement(j, {
                            asset: this.props.isOpen ? M.AngleDown : M.AngleUp
                        })), this.renderTitles(), this.renderLabel(), this.renderImageAndLabel())))
                    }, t
                }(d.Component)),
                De = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            currentOpenIndex: 0
                        }, t.onHeaderClick = function(e, n) {
                            "number" == typeof n && t.setState({
                                currentOpenIndex: n
                            })
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = this;
                        return d.createElement(pe, null, this.props.items.map(function(t, n) {
                            return d.createElement(pe, {
                                borderBottom: n !== e.state.currentOpenIndex,
                                key: n
                            }, d.createElement(Ie, c.a({}, t.header, {
                                isOpen: n === e.state.currentOpenIndex,
                                onClick: e.onHeaderClick,
                                index: n
                            })), d.createElement(ge, c.a({}, t.body, {
                                isOpen: n === e.state.currentOpenIndex
                            }), t.body.children, t.footer && d.createElement(ve, c.a({}, t.footer))))
                        }))
                    }, t
                }(d.Component);
            n("ssbj");
            ! function(e) {
                e.Short = "tw-animation--delay-short", e.Medium = "tw-animation--delay-medium", e.Long = "tw-animation--delay-long", e.ExtraLong = "tw-animation--delay-extra-long"
            }(Ce || (Ce = {})),
            function(e) {
                e.Short = "tw-animation--duration-short", e.Medium = "tw-animation--duration-medium", e.Long = "tw-animation--duration-long", e.ExtraLong = "tw-animation--duration-extra-long"
            }(Ne || (Ne = {})),
            function(e) {
                e.Both = "tw-animation--fill-mode-both", e.None = "tw-animation--fill-mode-none", e.Forwards = "tw-animation--fill-mode-forwards", e.Backwards = "tw-animation--fill-mode-backwards"
            }(Te || (Te = {})),
            function(e) {
                e.Ease = "tw-animation--timing-ease", e.Linear = "tw-animation--timing-linear", e.EaseIn = "tw-animation--timing-ease-in", e.EaseOut = "tw-animation--timing-ease-out", e.EaseInOut = "tw-animation--timing-ease-in-out"
            }(_e || (_e = {})),
            function(e) {
                e.Bounce = "tw-animation--bounce", e.BounceIn = "tw-animation--bounce-in", e.BounceOut = "tw-animation--bounce-out", e.FadeIn = "tw-animation--fade-in", e.FadeOut = "tw-animation--fade-out", e.SlideInTop = "tw-animation--slide-in-top", e.SlideInRight = "tw-animation--slide-in-right", e.SlideInBottom = "tw-animation--slide-in-bottom", e.SlideInLeft = "tw-animation--slide-in-left", e.SlideOutTop = "tw-animation--slide-out-top", e.SlideOutRight = "tw-animation--slide-out-right", e.SlideOutBottom = "tw-animation--slide-out-bottom", e.SlideOutLeft = "tw-animation--slide-out-left"
            }(Re || (Re = {}));
            var Pe = function(e) {
                var t = {
                    "tw-animation": !0,
                    "tw-animation--animate": e.enabled,
                    "tw-animation--loop": e.loop
                };
                return e.delay && (t[e.delay] = !0), e.duration ? t[e.duration] = !0 : t[Ne.Short] = !0, e.fillMode ? t[e.fillMode] = !0 : t[Te.Both] = !0, e.timing ? t[e.timing] = !0 : t[_e.Ease] = !0, e.type && (t[e.type] = !0), d.createElement(x, c.a({
                    className: p(t)
                }, m(e)), d.createElement("div", {
                    onAnimationStart: e.onAnimationStart,
                    onAnimationEnd: e.onAnimationEnd,
                    "data-a-target": "tw-animation-target"
                }, e.children))
            };
            Pe.displayName = "Animation";
            var xe;
            n("rUlE");
            ! function(e) {
                e.Offline = "tw-presence__indicator--offline", e.Invisible = "tw-presence__indicator--invisible", e.Online = "tw-presence__indicator--online", e.Busy = "tw-presence__indicator--busy", e.Away = "tw-presence__indicator--away"
            }(xe || (xe = {}));
            var Le = function(e) {
                var t = {
                        "tw-presence": !0,
                        "tw-presence--border": e.border
                    },
                    n = {};
                return e.status ? n[e.status] = !0 : n[xe.Offline] = !0, d.createElement(L, c.a({
                    className: p(t),
                    display: k.InlineFlex,
                    position: N.Relative
                }, m(e)), d.createElement(pe, {
                    className: "tw-presence__border",
                    borderRadius: le.Small,
                    position: N.Absolute
                }), d.createElement(pe, {
                    className: "tw-presence__indicator " + p(n),
                    position: N.Absolute,
                    attachTop: !0,
                    attachLeft: !0
                }))
            };
            Le.displayName = "Presence";
            n("GkXq");
            var Fe = function(e) {
                var t, n, i, r = ((i = {
                    "tw-avatar": !0
                })["tw-avatar--size-" + e.size] = !!e.size, i);
                return t = 300 === e.size ? "https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_300x300.png" : 96 === e.size || 80 === e.size ? "https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_150x150.png" : "https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_70x70.png", e.presenceIndicator && (n = d.createElement(L, {
                    className: "tw-avatar__presence",
                    display: k.Flex,
                    justifyContent: E.Center,
                    alignItems: b.Center,
                    position: N.Absolute
                }, d.createElement(Le, {
                    border: !0,
                    status: e.presenceStatus
                }))), d.createElement("figure", c.a({
                    className: p(r)
                }, m(e)), d.createElement(pe, {
                    borderRadius: e.borderRadius || le.Medium,
                    overflow: C.Hidden
                }, d.createElement(we, {
                    src: e.src || t,
                    alt: e.alt,
                    srcSet: e.srcSet,
                    sizes: e.sizes,
                    onLoad: e.onLoad,
                    onError: e.onError
                })), n)
            };
            Fe.displayName = "Avatar";
            var Me;
            n("uA40");
            ! function(e) {
                e.Notification = "tw-badge--notification", e.Alt = "tw-badge--alt", e.Alt2 = "tw-badge--alt-2", e.Brand = "tw-badge--brand", e.Live = "tw-badge--live", e.Alert = "tw-badge--alert", e.Success = "tw-badge--success", e.Prime = "tw-badge--prime", e.Dashboard = "tw-badge--dashboard"
            }(Me || (Me = {}));
            var Ae = function(e) {
                var t = {
                    "tw-badge": !0
                };
                e.type && (t[e.type] = !0);
                var n = {
                        width: e.size,
                        height: e.size
                    },
                    i = d.createElement(ue, c.a({
                        display: k.InlineFlex,
                        justifyContent: E.Center,
                        alignItems: b.Center,
                        borderRadius: le.Rounded,
                        className: p(t)
                    }, m(e)), d.createElement("div", {
                        style: n
                    }, d.createElement(L, {
                        className: "tw-badge__icon",
                        display: k.Flex,
                        justifyContent: E.Center,
                        alignItems: b.Center
                    }, d.createElement(j, {
                        asset: e.icon,
                        fill: !0
                    }))));
                return e.border ? d.createElement(pe, {
                    className: "tw-badge__container",
                    borderRadius: le.Rounded,
                    display: k.InlineFlex,
                    position: N.Relative
                }, i) : i
            };
            Ae.displayName = "Badge";
            var Ue = new Set(["alt", "src", "srcSet", "sizes", "onError", "onLoad", "refHandler"]);

            function Be(e) {
                for (var t = {}, n = 0, i = Object.keys(e); n < i.length; n++) {
                    var r = i[n];
                    Ue.has(r) && (t[r] = e[r])
                }
                return t
            }
            var je = function(e) {
                var t, n, i;
                return e.row && (t = b.Center), e.elevation && (n = e.elevation), e.background === se.Overlay && (i = Z.Overlay), d.createElement(L, c.a({
                    className: "tw-card",
                    position: N.Relative
                }, m(e)), d.createElement(pe, {
                    display: k.Flex,
                    flexDirection: e.row ? S.Row : S.Column,
                    alignItems: t,
                    elevation: n,
                    background: e.background,
                    borderRadius: e.borderRadius,
                    color: i,
                    border: e.border,
                    flexWrap: w.NoWrap
                }, e.children))
            };
            je.displayName = "Card";
            var ze = function(e) {
                return d.createElement(L, c.a({
                    className: "tw-card-body",
                    overflow: e.overflow,
                    position: N.Relative
                }, m(e)), e.children)
            };
            ze.displayName = "CardBody";
            var We;
            n("hhUW");
            ! function(e) {
                e.Default = "tw-card-img--size-default", e.Size2 = "tw-card-img--size-2", e.Size3 = "tw-card-img--size-3", e.Size4 = "tw-card-img--size-4", e.Size6 = "tw-card-img--size-6", e.Size8 = "tw-card-img--size-8", e.Size16 = "tw-card-img--size-16", e.Size24 = "tw-card-img--size-24", e.Size32 = "tw-card-img--size-32"
            }(We || (We = {}));
            var Ve = function(e) {
                var t = {
                    "tw-card-img": !0
                };
                return e.size && e.size !== We.Default && (t[e.size] = !0), d.createElement(pe, c.a({
                    className: p(t),
                    flexShrink: 0,
                    borderRadius: e.borderRadius,
                    overflow: C.Hidden
                }, m(e)), d.createElement(ke, {
                    ratio: e.aspect ? e.aspect : be.Aspect16x9,
                    overflow: e.overflow
                }, d.createElement(we, c.a({}, Be(e)))), e.children)
            };
            Ve.displayName = "CardImage";
            n("GAhM");
            var He = function(e) {
                for (var t = {
                        "tw-placeholder": !0,
                        "tw-placeholder--overlay": e.overlay,
                        "tw-placeholder--fill": !e.lineCount,
                        "tw-placeholder--custom-height": !!e.height
                    }, n = {
                        width: e.width ? e.width / 10 + "rem" : "",
                        height: e.height ? e.height / 10 + "rem" : ""
                    }, i = [], r = 0; r < (e.lineCount || 1); r++) i.push(d.createElement("span", {
                    className: p(t),
                    key: r,
                    style: n
                }));
                return d.createElement("span", c.a({
                    className: "tw-placeholder-wrapper"
                }, m(e)), i)
            };
            He.displayName = "Placeholder";
            n("gz4g");
            var Ge = function(e) {
                var t;
                return t = d.createElement(je, {
                    key: e.title
                }, d.createElement(Ve, c.a({
                    aspect: be.BoxArt,
                    borderRadius: le.Medium
                }, Be(e))), d.createElement(ze, null, d.createElement(L, {
                    margin: {
                        top: .5
                    }
                }, d.createElement(ce, {
                    className: "tw-box-art-card__title",
                    type: re.H3,
                    fontSize: ee.Size5,
                    lineHeight: te.Body,
                    ellipsis: !0
                }, e.title), d.createElement(ce, {
                    color: Z.Alt2,
                    ellipsis: !0
                }, e.info)))), e.placeholder ? d.createElement(L, null, d.createElement(L, {
                    margin: {
                        bottom: .5
                    }
                }, d.createElement(ke, {
                    ratio: be.Aspect3x4
                }, d.createElement(He, null))), d.createElement(ce, null, d.createElement(He, {
                    width: 150
                })), d.createElement(ce, {
                    fontSize: ee.Size7
                }, d.createElement(He, {
                    width: 100
                }))) : e.linkTo ? d.createElement("div", c.a({
                    className: "tw-box-art-card"
                }, m(e)), d.createElement(h.a, {
                    to: e.linkTo,
                    title: e.title,
                    "data-a-target": "tw-box-art-card-link"
                }, t)) : d.createElement("div", c.a({
                    className: "tw-box-art-card"
                }, m(e)), t)
            };
            Ge.displayName = "BoxArtCard";
            var qe, Qe;
            n("hmea");
            ! function(e) {
                e.ExtraSmall = "tw-balloon--xs", e.Small = "tw-balloon--sm", e.Medium = "tw-balloon--md", e.Large = "tw-balloon--lg", e.ExtraLarge = "tw-balloon--xl"
            }(qe || (qe = {})),
            function(e) {
                e.Top = "tw-balloon--up", e.Bottom = "tw-balloon--down", e.Left = "tw-balloon--left", e.Right = "tw-balloon--right", e.TopLeft = "tw-balloon--up tw-balloon--left", e.TopRight = "tw-balloon--up tw-balloon--right", e.BottomRight = "tw-balloon--down tw-balloon--right", e.BottomLeft = "tw-balloon--down", e.TopCenter = "tw-balloon--up tw-balloon--center", e.BottomCenter = "tw-balloon--down tw-balloon--center", e.LeftCenter = "tw-balloon--left tw-balloon--center", e.RightCenter = "tw-balloon--right tw-balloon--center"
            }(Qe || (Qe = {}));
            var Ke, Ye = function(e) {
                var t, n, i, r, a = {
                    "tw-balloon": !0
                };
                e.size && (a[e.size] = !0), e.direction ? a[e.direction] = !0 : a[Qe.Bottom] = !0, e.offsetX && (e.direction === Qe.Left || e.direction === Qe.TopLeft || e.direction === Qe.BottomLeft || e.direction === Qe.LeftCenter || e.direction === Qe.BottomRight || e.direction === Qe.TopRight ? n = e.offsetX : t = e.offsetX), e.offsetY && (e.direction === Qe.Top || e.direction === Qe.TopLeft || e.direction === Qe.TopRight || e.direction === Qe.TopCenter ? r = e.offsetY : i = e.offsetY);
                var o, s, l, u = {
                    marginLeft: t,
                    marginRight: n,
                    marginTop: i,
                    marginBottom: r
                };
                e.tailOffset && (e.direction === Qe.Left || e.direction === Qe.Right || e.direction === Qe.LeftCenter || e.direction === Qe.RightCenter ? o = e.tailOffset + "px" : e.direction === Qe.TopRight || e.direction === Qe.BottomRight ? (s = e.tailOffset + "px", l = "auto") : (s = "auto", l = e.tailOffset + "px"));
                var h, f = {
                    top: o,
                    left: l,
                    right: s
                };
                return e.noTail || (h = d.createElement(x, {
                    className: "tw-balloon__tail",
                    position: N.Absolute,
                    overflow: C.Hidden
                }, d.createElement("div", {
                    style: f
                }, d.createElement(pe, {
                    className: "tw-balloon__tail-symbol",
                    position: N.Absolute,
                    background: e.tailBackground || se.Base,
                    border: !0
                })))), d.createElement(x, {
                    display: e.show ? k.Block : k.Hide,
                    position: N.Absolute
                }, d.createElement("div", c.a({
                    style: u,
                    className: p(a)
                }, m(e)), h, d.createElement(pe, {
                    border: !0,
                    borderRadius: le.Medium,
                    background: se.Base,
                    elevation: e.elevation ? e.elevation : 1
                }, e.children)))
            };
            Ye.displayName = "Balloon",
                function(e) {
                    e[e.Default = 1] = "Default", e[e.Large = 2] = "Large"
                }(Ke || (Ke = {}));
            var Xe, $e = ((Xe = {})[Ke.Default] = ee.Size6, Xe[Ke.Large] = ee.Size4, Xe);

            function Je() {
                return "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g, function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" === e ? t : 3 & t | 8).toString(16)
                })
            }
            n("7PB7");
            var Ze = function(e) {
                var t, n = Je(),
                    i = {
                        "tw-checkbox": !0,
                        "tw-checkbox--error": e.error
                    };
                e.tabIndex && (t = e.tabIndex);
                var r = Ke.Default;
                return e.size && (r = e.size), d.createElement(pe, c.a({
                    className: p(i),
                    fontSize: $e[r]
                }, m(e)), d.createElement("input", {
                    className: "tw-checkbox__input",
                    type: "checkbox",
                    "data-a-target": "tw-checkbox",
                    checked: e.checked,
                    defaultChecked: e.defaultChecked,
                    disabled: e.disabled,
                    id: e.id ? e.id : n,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    ref: e.refDelegate,
                    readOnly: e.readOnly,
                    required: e.required,
                    tabIndex: t,
                    value: e.value
                }), d.createElement("label", {
                    className: "tw-checkbox__label",
                    htmlFor: e.id ? e.id : n
                }, e.label))
            };
            Ze.displayName = "CheckBox";
            n("lWrh");
            var et = function(e) {
                var t = {
                    "tw-drop-zone": !0,
                    "tw-drop-zone--over": e.dragOver,
                    "tw-drop-zone--error": e.error,
                    "tw-drop-zone--disabled": e.disabled
                };
                return d.createElement(L, c.a({
                    className: p(t)
                }, m(e), {
                    alignItems: b.Center,
                    display: k.Flex,
                    fullHeight: !0,
                    fullWidth: !0,
                    justifyContent: E.Center,
                    position: N.Absolute,
                    attachTop: !0,
                    attachLeft: !0
                }), d.createElement("div", {
                    className: "tw-drop-zone__content"
                }, e.children))
            };
            et.displayName = "DropZone";
            var tt;
            n("TT4a");
            ! function(e) {
                e.Default = "", e.Small = "tw-grid--gutter-sm", e.Medium = "tw-grid--gutter-md", e.Large = "tw-grid--gutter-lg", e.None = "tw-grid--gutter-none"
            }(tt || (tt = {}));
            var nt = function(e) {
                var t = {
                    "tw-grid": !0
                };
                return e.gutterSize && (t[e.gutterSize] = !0), d.createElement(L, c.a({
                    alignItems: e.alignItems,
                    fullHeight: e.fullHeight,
                    justifyContent: e.justifyContent,
                    breakpointExtraSmall: e.breakpointExtraSmall,
                    breakpointSmall: e.breakpointSmall,
                    breakpointMedium: e.breakpointMedium,
                    breakpointLarge: e.breakpointLarge,
                    breakpointExtraLarge: e.breakpointExtraLarge,
                    breakpointExtraExtraLarge: e.breakpointExtraExtraLarge,
                    className: p(t)
                }, m(e)), e.children)
            };
            nt.displayName = "Grid";
            var it;
            n("Oidp");
            ! function(e) {
                e.First = "col-order--first", e.Last = "col-order--last"
            }(it || (it = {}));
            var rt, at = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return c.d(t, e), t.prototype.render = function() {
                    var e = this.getColumnSizeClasses(this.props.cols),
                        t = this.props.offset ? this.getColumnOffsetClasses(this.props.offset) : "",
                        n = this.props.order ? this.getColumnOrderClasses(this.props.order) : "";
                    return d.createElement("div", c.a({
                        className: p([e, t, n])
                    }, m(this.props)), this.props.children)
                }, t.prototype.getColumnSizeClasses = function(e) {
                    if ("number" == typeof e) return "tw-col-" + e;
                    var t = ["tw-col-" + e.default];
                    return "number" == typeof e.xs && t.push("tw-xs-col-" + e.xs), "number" == typeof e.sm && t.push("tw-sm-col-" + e.sm), "number" == typeof e.md && t.push("tw-md-col-" + e.md), "number" == typeof e.lg && t.push("tw-lg-col-" + e.lg), "number" == typeof e.xl && t.push("tw-xl-col-" + e.xl), "number" == typeof e.xxl && t.push("tw-xxl-col-" + e.xxl), t
                }, t.prototype.getColumnOffsetClasses = function(e) {
                    if ("number" == typeof e) return "tw-col-offset-" + e;
                    var t = ["tw-col-offset-" + e.default];
                    return "number" == typeof e.xs && t.push("tw-xs-col-offset-" + e.xs), "number" == typeof e.sm && t.push("tw-sm-col-offset-" + e.sm), "number" == typeof e.md && t.push("tw-md-col-offset-" + e.md), "number" == typeof e.lg && t.push("tw-lg-col-offset-" + e.lg), "number" == typeof e.xl && t.push("tw-xl-col-offset-" + e.xl), "number" == typeof e.xxl && t.push("tw-xxl-col-offset-" + e.xxl), t
                }, t.prototype.getColumnOrderClasses = function(e) {
                    if ("string" == typeof e) return "tw-" + e;
                    if ("object" == typeof e) {
                        var t = [];
                        return "string" == typeof e.default && t.push("tw-" + e.default), "string" == typeof e.xs && t.push("tw-xs-" + e.xs), "string" == typeof e.sm && t.push("tw-sm-" + e.sm), "string" == typeof e.md && t.push("tw-md-" + e.md), "string" == typeof e.lg && t.push("tw-lg-" + e.lg), "string" == typeof e.xl && t.push("tw-xl-" + e.xl), "string" == typeof e.xxl && t.push("tw-xxl-" + e.xxl), t
                    }
                    return !1
                }, t
            }(d.Component);
            n("tTVk");
            ! function(e) {
                e.Error = "tw-in-feature-notification--error", e.Info = "tw-in-feature-notification--info", e.Neutral = "tw-in-feature-notification--neutral", e.Success = "tw-in-feature-notification--success", e.Warning = "tw-in-feature-notification--warning"
            }(rt || (rt = {}));
            var ot, st = ((ot = {})[rt.Error] = M.NotificationError, ot[rt.Info] = M.NotificationInfo, ot[rt.Success] = M.NotificationSuccess, ot[rt.Warning] = M.NotificationWarning, ot),
                lt = function(e) {
                    var t = ((o = {
                            "tw-in-feature-notification": !0
                        })[e.type] = !0, o),
                        n = null,
                        i = null,
                        r = e.link ? d.createElement(oe, c.a({}, e.link)) : null,
                        a = d.createElement(L, {
                            attachRight: !0,
                            attachTop: !0,
                            margin: {
                                right: .5,
                                top: .5
                            },
                            position: N.Absolute
                        }, d.createElement(J, {
                            ariaLabel: e.closeButtonAriaLabel,
                            icon: M.Close,
                            onClick: e.closeButtonOnClick,
                            size: q.Small,
                            type: G.Secondary
                        }));
                    e.avatar && !e.narrow ? i = d.createElement(L, {
                        alignItems: b.Start,
                        display: k.Flex,
                        margin: {
                            right: 1
                        }
                    }, d.createElement(Fe, c.a({}, e.avatar, {
                        size: 30
                    }))) : e.type !== rt.Neutral && (i = d.createElement(L, {
                        className: "tw-in-feature-notification__icon",
                        alignItems: b.Center,
                        display: k.Flex,
                        margin: {
                            right: 1
                        }
                    }, d.createElement(j, {
                        asset: st[e.type]
                    }))), e.actions && !e.narrow && (n = d.createElement(L, {
                        display: k.Flex,
                        flexDirection: S.RowReverse,
                        fullWidth: !0,
                        margin: {
                            top: 1
                        }
                    }, e.actions.map(function(e, t) {
                        return d.createElement(L, {
                            key: "in-feature-notification-" + t,
                            margin: {
                                left: 1
                            }
                        }, d.createElement(K, c.a({}, e, {
                            size: W.Small,
                            type: 0 === t ? z.Default : z.Hollow
                        })))
                    })));
                    var o, s = e.narrow ? d.createElement(ce, {
                        fontSize: ee.Size6
                    }, d.createElement(ce, {
                        bold: !0,
                        type: re.Span
                    }, e.title), " ", e.description, " ", r) : d.createElement(d.Fragment, null, d.createElement(ce, {
                        bold: !0,
                        fontSize: ee.Size6
                    }, e.title), d.createElement(ce, {
                        fontSize: ee.Size6
                    }, e.description), r);
                    return d.createElement(pe, c.a({}, m(e), {
                        className: p(t),
                        background: se.Alt2,
                        borderRadius: le.Medium,
                        padding: 1,
                        position: N.Relative
                    }), a, d.createElement(L, {
                        display: k.Flex,
                        fullWidth: !0
                    }, i, d.createElement(L, {
                        fullWidth: !0,
                        padding: {
                            right: 2
                        }
                    }, s)), n)
                };
            lt.displayName = "InFeatureNotification";
            var ct;
            n("Z9Pd");
            ! function(e) {
                e[e.Text = 0] = "Text", e[e.Number = 1] = "Number", e[e.Email = 2] = "Email", e[e.Password = 3] = "Password", e[e.Search = 4] = "Search"
            }(ct || (ct = {}));
            var dt = function(e) {
                var t, n;
                e.tabIndex && (n = e.tabIndex);
                var i = Ke.Default;
                e.size && (i = e.size);
                var r = {
                    "tw-input": !0,
                    "tw-input--error": e.error
                };
                return e.icon && (t = d.createElement(pe, {
                    className: "tw-input__icon",
                    position: N.Absolute,
                    attachLeft: e.icon && !e.iconRight,
                    attachRight: e.iconRight,
                    attachTop: !0,
                    zIndex: I.Default,
                    color: Z.Alt2,
                    display: k.Flex,
                    alignItems: b.Center,
                    justifyContent: E.Center,
                    fullHeight: !0
                }, d.createElement(j, {
                    asset: e.icon,
                    type: F.Inherit
                }))), d.createElement(L, c.a({
                    position: N.Relative
                }, m(e)), t, d.createElement(ue, {
                    display: k.Block,
                    borderRadius: le.Medium,
                    padding: {
                        left: e.icon && !e.iconRight ? 3 : 1,
                        right: e.iconRight ? 3 : 1,
                        y: .5
                    },
                    fontSize: $e[i],
                    fullWidth: !0
                }, d.createElement("input", {
                    type: ct[e.type].toLowerCase(),
                    className: p(r),
                    placeholder: e.placeholder,
                    "aria-label": e.ariaLabel,
                    autoCapitalize: e.autoCapitalize ? "on" : "off",
                    autoCorrect: e.autoCorrect ? "on" : "off",
                    autoComplete: e.autoComplete,
                    autoFocus: e.autoFocus,
                    "data-a-target": "tw-input",
                    defaultValue: e.defaultValue,
                    disabled: e.disabled,
                    id: e.id,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onClick: e.onClick,
                    onFocus: e.onFocus,
                    onKeyDown: e.onKeyDown,
                    max: e.max,
                    maxLength: e.maxLength,
                    min: e.min,
                    readOnly: e.readOnly,
                    ref: e.refDelegate,
                    required: e.required,
                    spellCheck: e.spellCheck,
                    step: e.step,
                    tabIndex: n,
                    value: e.value
                })))
            };
            dt.displayName = "Input";
            var ut = function(e) {
                return d.createElement(ce, {
                    type: re.P,
                    fontSize: ee.Size7,
                    color: Z.Error
                }, "*", e.errorMessage)
            };
            ut.displayName = "FormError";
            var pt = function(e) {
                return d.createElement(ce, {
                    type: re.P,
                    fontSize: ee.Size7,
                    color: Z.Alt2
                }, e.hint)
            };
            pt.displayName = "FormHint";
            n("I7Ho");
            var mt = function() {
                return d.createElement("span", {
                    className: "tw-form-required"
                }, "*")
            };
            mt.displayName = "FormRequired";
            n("Zsw8");
            var ht = function(e) {
                var t;
                e.required && (t = d.createElement(mt, null));
                return d.createElement("label", {
                    className: p({
                        "tw-form-label": !0
                    }),
                    htmlFor: e.id
                }, t, e.label)
            };
            ht.displayName = "FormLabel";
            n("wdkx");
            var ft = function(e) {
                var t;
                e.required && (t = d.createElement(mt, null));
                return d.createElement("legend", {
                    className: p({
                        "tw-form-legend": !0
                    })
                }, t, e.label)
            };
            ft.displayName = "FormLegend";
            var gt, vt;
            n("TXTy");
            ! function(e) {
                e[e.Vertical = 1] = "Vertical", e[e.Horizontal = 2] = "Horizontal"
            }(gt || (gt = {})),
            function(e) {
                e[e.Single = 1] = "Single", e[e.Multiple = 2] = "Multiple"
            }(vt || (vt = {}));
            var bt = function(e) {
                var t, n, i, r, a, o = Je(),
                    s = {
                        "tw-form-group": !0,
                        "tw-form-group--error": e.error
                    };
                return e.labelOptional && (n = d.createElement("span", {
                    className: "tw-form-group__optional"
                }, "(", e.labelOptional, ")")), e.hint && !e.error ? i = d.createElement(pt, {
                    hint: e.hint
                }) : e.errorMessage && e.error && (i = d.createElement(ut, {
                    errorMessage: e.errorMessage
                })), i && (i = d.createElement(L, {
                    margin: {
                        top: .5
                    }
                }, i)), e.controls === vt.Multiple ? (t = d.createElement(ft, {
                    label: e.label
                }), a = "fieldset") : (t = d.createElement(ht, {
                    id: e.id ? e.id : o,
                    required: e.required,
                    label: e.label
                }), a = "div"), t = d.createElement(L, {
                    margin: {
                        bottom: .5
                    }
                }, t, n), r = e.orientation === gt.Horizontal ? d.createElement(a, null, d.createElement(L, {
                    display: k.Flex,
                    flexWrap: w.NoWrap
                }, d.createElement(L, {
                    className: "tw-form-group__label-container",
                    flexShrink: 0,
                    padding: {
                        right: 2
                    }
                }, t), d.createElement(L, {
                    flexGrow: 1
                }, e.children, i))) : d.createElement(a, null, d.createElement("div", null, t, e.children, i)), d.createElement(ue, c.a({
                    className: p(s)
                }, m(e), {
                    position: N.Relative,
                    flexGrow: 1,
                    fontSize: ee.Size6
                }), r)
            };
            bt.displayName = "FormGroup";
            n("2yyz");
            var yt = function(e) {
                var t, n = {
                        "tw-form-tag": !0,
                        "tw-form-tag--selected": e.selected
                    },
                    i = Ke.Default;
                return e.size && (i = e.size), e.tabIndex && (t = e.tabIndex), d.createElement(pe, {
                    display: k.InlineFlex,
                    alignItems: b.Center,
                    borderRadius: le.Medium,
                    fontSize: $e[i],
                    className: p(n)
                }, d.createElement(Oe, {
                    type: Ee.Alt,
                    borderRadius: le.Medium,
                    onClick: e.onClick,
                    disabled: e.disabled,
                    tabIndex: t
                }, d.createElement(L, {
                    display: k.Flex,
                    alignItems: b.Center,
                    padding: {
                        left: 1,
                        y: .5,
                        right: .5
                    }
                }, e.label, d.createElement(pe, {
                    display: k.Flex,
                    alignItems: b.Center,
                    justifyContent: E.Center,
                    borderRadius: le.Rounded,
                    padding: {
                        left: .5
                    }
                }, d.createElement(j, {
                    asset: e.selected ? M.RemoveTag : M.Plus,
                    height: 10
                })))))
            };
            yt.displayName = "FormTag";
            var kt, St;
            n("u3+/");
            ! function(e) {
                e.Small = "tw-channel-status-indicator--small", e.Medium = "tw-channel-status-indicator--medium", e.Large = "tw-channel-status-indicator--large"
            }(kt || (kt = {})),
            function(e) {
                e.Offline = "tw-channel-status-indicator--offline", e.Hosting = "tw-channel-status-indicator--hosting", e.Live = "tw-channel-status-indicator--live"
            }(St || (St = {}));
            var wt = function(e) {
                var t = {
                    "tw-channel-status-indicator": !0,
                    "tw-channel-status-indicator--pulse": e.pulse
                };
                return e.size ? t[e.size] = !0 : t[kt.Small] = !0, e.status ? t[e.status] = !0 : t[St.Offline] = !0, d.createElement(L, c.a({
                    display: k.InlineBlock,
                    position: N.Relative,
                    className: p(t)
                }, m(e)))
            };
            wt.displayName = "ChannelStatusIndicator";
            var Et, Ct;
            n("0Hzr");
            ! function(e) {
                e.Top = "tw-tooltip--up", e.Bottom = "tw-tooltip--down", e.Left = "tw-tooltip--left", e.Right = "tw-tooltip--right"
            }(Et || (Et = {})),
            function(e) {
                e.Left = "tw-tooltip--align-left", e.Center = "tw-tooltip--align-center", e.Right = "tw-tooltip--align-right"
            }(Ct || (Ct = {}));
            var Nt = function(e) {
                var t, n, i, r, a = Je(),
                    o = {
                        "tw-tooltip": !0,
                        "tw-tooltip--wrap": !!e.width
                    },
                    s = {
                        "tw-tooltip-wrapper": !0,
                        "tw-tooltip-wrapper--show": e.show
                    };
                e.direction ? o[e.direction] = !0 : o[Et.Top] = !0, e.align && e.align !== Ct.Center && e.direction !== Et.Left && e.direction !== Et.Right ? o[e.align] = !0 : o[Ct.Center] = !0, e.offsetX && (e.align === Ct.Right ? n = e.offsetX : t = e.offsetX), e.offsetY && (e.direction && e.direction !== Et.Top ? i = e.offsetY : r = e.offsetY);
                var l = {
                    marginLeft: t,
                    marginRight: n,
                    marginTop: i,
                    marginBottom: r,
                    width: e.width
                };
                return d.createElement(x, c.a({
                    display: e.display ? e.display : k.InlineFlex
                }, m(e)), d.createElement("div", {
                    className: p(s),
                    "aria-describedby": e.id || a,
                    title: e.title
                }, e.children, d.createElement("div", {
                    className: p(o),
                    style: l,
                    "data-a-target": "tw-tooltip-label",
                    role: "tooltip",
                    id: e.id || a
                }, e.label)))
            };
            Nt.displayName = "Tooltip";
            n("sAKk");
            var Tt = function(e) {
                var t;
                e.icon && (t = d.createElement(j, {
                    type: F.Inherit,
                    asset: e.icon
                }));
                var n = d.createElement("div", c.a({
                    className: p({
                        "tw-stat": !0
                    })
                }, m(e)), d.createElement("span", {
                    className: "tw-stat__icon"
                }, t), d.createElement("span", {
                    className: "tw-stat__value",
                    "data-a-target": "tw-stat-value"
                }, e.value));
                return e.label ? d.createElement(Nt, {
                    direction: e.tooltipDirection ? e.tooltipDirection : Et.Bottom,
                    align: e.tooltipAlign ? e.tooltipAlign : Ct.Center,
                    label: e.label
                }, n) : n
            };
            Tt.displayName = "Stat";
            var _t, Rt;
            n("EYHg");
            ! function(e) {
                e.Default = "", e.Accent = "tw-tag--accent"
            }(_t || (_t = {})),
            function(e) {
                e[e.Remove = 1] = "Remove", e[e.Add = 2] = "Add"
            }(Rt || (Rt = {}));
            var Ot = function(e) {
                var t, n, i = {
                    "tw-tag": !0,
                    "tw-tag--default": !e.type
                };
                return e.tabIndex && (t = e.tabIndex), n = e.icon ? d.createElement(j, {
                    asset: e.icon
                }) : d.createElement("div", null, e.label), d.createElement(pe, {
                    className: p(i),
                    display: k.InlineBlock,
                    background: e.type ? se.Accent : void 0,
                    color: e.type ? Z.Overlay : void 0,
                    borderRadius: le.Medium
                }, d.createElement(Oe, c.a({
                    type: e.type ? Ee.Overlay : Ee.Alt,
                    tabIndex: t,
                    borderRadius: le.Medium,
                    linkTo: e.linkTo,
                    onClick: e.onClick,
                    disabled: e.disabled
                }, m(e)), d.createElement(L, {
                    className: "tw-tag__content",
                    display: k.Flex,
                    alignItems: b.Center
                }, n, e.action && d.createElement(L, {
                    display: k.Flex,
                    alignItems: b.Center,
                    margin: {
                        left: .5
                    }
                }, d.createElement(j, {
                    width: 10,
                    height: 10,
                    asset: e.action === Rt.Add ? M.Plus : M.RemoveTag
                })))))
            };
            Ot.displayName = "Tag";
            var It;
            n("M/Go");
            ! function(e) {
                e.Notification = "tw-pill--notification", e.Brand = "tw-pill--brand", e.Live = "tw-pill--live", e.Alert = "tw-pill--alert", e.Success = "tw-pill--success", e.Prime = "tw-pill--prime", e.Overlay = "tw-pill--overlay", e.Warn = "tw-pill--warn"
            }(It || (It = {}));
            var Dt = function(e) {
                var t = {
                    "tw-pill": !0
                };
                return e.type && (t[e.type] = !0), d.createElement("span", c.a({
                    className: p(t)
                }, m(e)), e.label)
            };
            Dt.displayName = "Pill";
            var Pt, xt, Lt;
            n("rBQp");
            ! function(e) {
                e.Default = "", e.Small = "tw-progress-bar--sm", e.ExtraSmall = "tw-progress-bar--xs"
            }(Pt || (Pt = {})),
            function(e) {
                e.Default = "", e.Caution = "tw-progress-bar--caution", e.Error = "tw-progress-bar--error", e.Success = "tw-progress-bar--success"
            }(xt || (xt = {})),
            function(e) {
                e.Up = "up", e.Down = "down"
            }(Lt || (Lt = {}));
            var Ft = function(e) {
                var t = {
                    "tw-progress-bar": !0,
                    "tw-progress-bar--countdown": e.animationDirection === Lt.Down,
                    "tw-progress-bar--countup": e.animationDirection === Lt.Up,
                    "tw-progress-bar--inherit": e.inherit,
                    "tw-progress-bar--mask": e.mask
                };
                return e.size && (t[e.size] = !0), e.status && (t[e.status] = !0), d.createElement("div", c.a({
                    className: p(t)
                }, m(e), {
                    role: "progressbar",
                    "aria-valuenow": e.value,
                    "aria-valuemin": 0,
                    "aria-valuemax": 100
                }), d.createElement(ue, {
                    borderRadius: le.Large,
                    display: k.Block
                }, d.createElement("div", {
                    onAnimationEnd: e.onAnimationEnd,
                    className: "tw-progress-bar__fill",
                    style: {
                        width: e.value + "%",
                        animationDuration: e.animationDuration ? e.animationDuration + "s" : ""
                    },
                    "data-a-target": "tw-progress-bar-animation"
                })))
            };
            Ft.displayName = "ProgressBar";
            n("Rupy");
            var Mt = function(e) {
                var t, n = "tw-" + Je(),
                    i = {
                        "tw-radio": !0,
                        "tw-radio--error": e.error
                    };
                e.tabIndex && (t = e.tabIndex);
                var r = Ke.Default;
                return e.size && (r = e.size), d.createElement(pe, c.a({
                    className: p(i),
                    fontSize: $e[r]
                }, m(e)), d.createElement("input", {
                    type: "radio",
                    className: "tw-radio__input",
                    "data-a-target": "tw-radio",
                    autoFocus: e.autoFocus,
                    checked: e.checked,
                    defaultChecked: e.defaultChecked,
                    disabled: e.disabled,
                    id: e.id ? e.id : n,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    readOnly: e.readOnly,
                    required: e.required,
                    ref: e.refDelegate,
                    tabIndex: t,
                    value: e.value
                }), d.createElement("label", {
                    className: "tw-radio__label",
                    htmlFor: e.id ? e.id : n
                }, e.label))
            };
            Mt.displayName = "Radio";
            var At;
            n("c5fr");
            ! function(e) {
                e.Checkbox = "checkbox", e.Radio = "radio"
            }(At || (At = {}));
            var Ut = function(e) {
                var t, n = Je(),
                    i = {
                        "tw-image-selector": !0,
                        "tw-image-selector--error": e.error
                    };
                return e.tabIndex && (t = e.tabIndex), d.createElement("div", c.a({
                    className: p(i)
                }, m(e)), d.createElement("input", {
                    className: "tw-image-selector__input",
                    type: e.type,
                    "data-a-target": "tw-image-selector",
                    checked: e.checked,
                    defaultChecked: e.defaultChecked,
                    disabled: e.disabled,
                    id: e.id ? e.id : n,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    ref: e.refDelegate,
                    required: e.required,
                    tabIndex: t,
                    value: e.value
                }), d.createElement(x, {
                    padding: .5,
                    display: k.Block
                }, d.createElement("label", {
                    className: "tw-image-selector__label",
                    htmlFor: e.id ? e.id : n
                }, d.createElement(we, c.a({}, Be(e))))))
            };
            Ut.displayName = "ImageSelector";
            n("aP6e");
            var Bt = function(e) {
                var t, n = Je(),
                    i = {
                        "tw-toggle": !0,
                        "tw-toggle--error": e.error
                    };
                return e.tabIndex && (t = e.tabIndex), d.createElement("div", c.a({
                    className: p(i)
                }, m(e)), d.createElement("input", {
                    className: "tw-toggle__input",
                    autoFocus: e.autoFocus,
                    checked: e.checked,
                    defaultValue: e.defaultValue,
                    disabled: e.disabled,
                    id: e.id ? e.id : n,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    tabIndex: t,
                    type: "checkbox",
                    ref: e.refDelegate,
                    value: e.value,
                    "data-a-target": "tw-toggle"
                }), d.createElement(ue, {
                    borderRadius: le.Medium
                }, d.createElement("label", {
                    htmlFor: e.id ? e.id : n,
                    className: "tw-toggle__button"
                })))
            };
            Bt.displayName = "Toggle";
            n("BS0g");
            var jt = function(e) {
                var t, n = {
                    "tw-range": !0,
                    "tw-range--error": e.error
                };
                return e.tabIndex && (t = e.tabIndex), d.createElement("input", c.a({
                    className: p(n),
                    id: e.id,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    tabIndex: t,
                    defaultValue: e.defaultValue,
                    disabled: e.disabled,
                    type: "range",
                    min: e.min,
                    max: e.max,
                    name: e.name,
                    ref: e.refDelegate,
                    step: e.step,
                    value: e.value
                }, m(e)))
            };
            jt.displayName = "Range";
            n("Jyij");
            var zt = function(e) {
                var t, n = "tw-" + Je();
                return e.tabIndex && (t = e.tabIndex), d.createElement("div", c.a({
                    className: p("tw-search-input")
                }, m(e)), d.createElement(x, {
                    display: k.HideAccessible
                }, d.createElement("label", {
                    htmlFor: e.id ? e.id : n
                }, "Search")), d.createElement(dt, {
                    autoCapitalize: e.autoCapitalize,
                    autoFocus: e.autoFocus,
                    autoComplete: "off",
                    disabled: e.disabled,
                    error: e.error,
                    icon: M.NavSearch,
                    id: e.id ? e.id : n,
                    maxLength: e.maxLength,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    onKeyDown: e.onKeyDown,
                    placeholder: e.placeholder,
                    refDelegate: e.refDelegate,
                    spellCheck: e.spellCheck,
                    tabIndex: t,
                    size: e.size,
                    type: ct.Search,
                    value: e.value
                }))
            };
            zt.displayName = "SearchInput";
            n("14MF");
            var Wt = function(e) {
                return d.createElement("div", c.a({
                    className: p("tw-segmented-button")
                }, m(e)), e.children)
            };
            Wt.displayName = "SegmentedButton";
            var Vt;
            n("GzrM");
            ! function(e) {
                e.Radio = "radio", e.Checkbox = "checkbox"
            }(Vt || (Vt = {}));
            var Ht = function(e) {
                var t;
                return e.tabIndex && (t = e.tabIndex), d.createElement("label", c.a({
                    className: p({
                        "tw-segmented-button-option": !0
                    }),
                    htmlFor: e.id
                }, m(e)), d.createElement("input", {
                    type: e.type || "radio",
                    className: "tw-segmented-button-option__input",
                    checked: e.checked,
                    defaultChecked: e.defaultChecked,
                    defaultValue: e.defaultValue,
                    disabled: e.disabled,
                    id: e.id,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    tabIndex: t,
                    ref: e.refDelegate,
                    value: e.value,
                    "data-a-target": "tw-segmented-button-option"
                }), d.createElement("span", {
                    className: "tw-segmented-button-option__label"
                }, e.label))
            };
            Ht.displayName = "SegmentedButtonOption";
            var Gt;
            n("E7z1");
            ! function(e) {
                e.Default = "", e.Hollow = "tw-select--hollow"
            }(Gt || (Gt = {}));
            var qt = function(e) {
                var t, n = {
                    "tw-select": !0,
                    "tw-select--disabled": e.disabled,
                    "tw-select--error": e.error
                };
                e.type && (n[e.type] = !0), e.tabIndex && (t = e.tabIndex);
                var i = Ke.Default;
                return e.size && (i = e.size), d.createElement(ue, {
                    display: k.Block,
                    borderRadius: le.Medium,
                    fontSize: $e[i],
                    padding: {
                        left: 1,
                        y: .5,
                        right: 3
                    },
                    fullWidth: !0
                }, d.createElement("select", c.a({
                    className: p(n),
                    defaultValue: e.defaultValue,
                    disabled: e.disabled,
                    id: e.id,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    required: e.required,
                    tabIndex: t,
                    value: e.value,
                    ref: e.refDelegate
                }, m(e)), e.children))
            };
            qt.displayName = "Select";
            n("2oG4");
            var Qt = function(e) {
                var t, n, i, r = {
                    "tw-tab-nav__item": !0,
                    "mg-l-auto": e.pullRight,
                    "tw-tab-nav__item--disabled": e.disabled
                };
                if (e.targetBlank && (n = "_blank"), e.active && (i = "active"), e.linkTo && !e.disabled)
                    if (f(e.linkTo)) {
                        if ("string" != typeof e.linkTo) throw new Error("External links with Location descriptors are not implemented in core-ui.button! Pass a string as linkTo instead.");
                        t = d.createElement("a", {
                            target: n,
                            className: i,
                            onClick: e.onClick,
                            href: e.linkTo,
                            role: "tab",
                            "data-a-target": "tw-tab-link"
                        }, e.children)
                    } else t = d.createElement(h.a, {
                        target: n,
                        className: i,
                        onClick: e.onClick,
                        to: e.linkTo,
                        role: "tab",
                        "data-a-target": "tw-tab-link"
                    }, e.children);
                else t = d.createElement("button", {
                    disabled: e.disabled,
                    className: i,
                    onClick: e.onClick,
                    role: "tab",
                    "data-a-target": "tw-tab-link"
                }, e.children);
                return d.createElement("li", c.a({
                    className: p(r),
                    role: "presentation"
                }, m(e)), t)
            };
            Qt.displayName = "TabWrapper";
            n("jeqg");
            var Kt = function(e) {
                return d.createElement("div", c.a({
                    className: e.alignRight ? "flex" : ""
                }, m(e)), d.createElement("ul", {
                    className: "tw-tab-nav " + (e.alignRight ? "mg-l-auto" : ""),
                    role: "tablist"
                }, e.children))
            };
            Kt.displayName = "TabWrapper";
            n("q7Ot");
            var Yt = function(e) {
                var t, n = {
                    "tw-textarea": !0,
                    "tw-textarea--no-resize": e.noResize,
                    "tw-textarea--error": e.error
                };
                e.tabIndex && (t = e.tabIndex);
                var i = Ke.Default;
                e.size && (i = e.size);
                var r = {
                    paddingRight: e.paddingRight ? e.paddingRight / 10 + "rem" : void 0
                };
                return d.createElement(ue, {
                    display: k.Block,
                    borderRadius: le.Medium,
                    overflow: e.overflow,
                    fontSize: $e[i],
                    fullWidth: !0
                }, d.createElement("textarea", c.a({
                    className: p(n),
                    autoFocus: e.autoFocus,
                    cols: e.cols,
                    disabled: e.disabled,
                    id: e.id,
                    maxLength: e.maxLength,
                    name: e.name,
                    onBlur: e.onBlur,
                    onChange: e.onChange,
                    onFocus: e.onFocus,
                    onKeyDown: e.onKeyDown,
                    style: r,
                    placeholder: e.placeholder,
                    rows: e.rows,
                    tabIndex: t,
                    value: e.value,
                    defaultValue: e.defaultValue,
                    ref: e.refDelegate,
                    readOnly: e.readOnly
                }, m(e))))
            };
            Yt.displayName = "TextArea";
            n("QNoE");
            var Xt = function(e) {
                var t;
                return t = d.createElement(je, {
                    key: e.title
                }, d.createElement(Ve, c.a({
                    aspect: be.Aspect16x9,
                    borderRadius: le.Medium
                }, Be(e))), d.createElement(ze, null, d.createElement(L, {
                    margin: {
                        top: .5
                    }
                }, d.createElement(ce, {
                    className: "tw-thumbnail-card__title",
                    type: re.H3,
                    fontSize: ee.Size5,
                    lineHeight: te.Body,
                    ellipsis: !0
                }, e.title)), d.createElement(ce, {
                    color: Z.Alt2,
                    ellipsis: !0
                }, e.info))), e.placeholder ? d.createElement(L, null, d.createElement(L, {
                    margin: {
                        bottom: .5
                    }
                }, d.createElement(ke, {
                    ratio: be.Aspect16x9
                }, d.createElement(He, null))), d.createElement(ce, null, d.createElement(He, {
                    width: 150
                })), d.createElement(ce, {
                    fontSize: ee.Size7
                }, d.createElement(He, {
                    width: 100
                }))) : e.linkTo ? d.createElement("div", c.a({
                    className: "tw-thumbnail-card"
                }, m(e)), d.createElement(h.a, {
                    to: e.linkTo,
                    title: e.title,
                    "data-a-target": "tw-thumbnail-card-link"
                }, t)) : d.createElement("div", c.a({
                    className: "tw-thumbnail-card"
                }, m(e)), t)
            };
            Xt.displayName = "ThumbnailCard";
            n("xytL");
            var $t = function(e) {
                return d.createElement(L, {
                    fullWidth: !0
                }, d.createElement(pe, {
                    display: k.Flex,
                    flexWrap: w.NoWrap,
                    className: p({
                        "tw-toast": !0
                    }),
                    elevation: 3,
                    background: se.Base,
                    border: !0
                }, d.createElement(L, {
                    flexGrow: 1
                }, e.children), d.createElement(pe, {
                    display: k.Flex,
                    flexShrink: 0,
                    borderLeft: !0
                }, d.createElement(Oe, {
                    onClick: e.onClose,
                    ariaLabel: "Dismiss This",
                    tabIndex: e.tabIndex,
                    type: Ee.Alpha,
                    "data-a-target": "tw-toast-close"
                }, d.createElement(L, {
                    padding: 1,
                    display: k.Flex,
                    alignItems: b.Center,
                    justifyContent: E.Center,
                    className: "tw-toast__dismiss-target"
                }, d.createElement(j, {
                    asset: M.Close
                }))))))
            };
            $t.displayName = "Toast";
            n("gXgt");
            var Jt = function(e) {
                var t = {};
                return e.alternateRows && (t["tw-table--alternate-rows"] = !0), d.createElement("div", {
                    className: p("tw-table", t)
                }, e.children)
            };
            Jt.displayName = "Table";
            n("RPqD");
            var Zt = function(e) {
                return d.createElement("div", {
                    className: p("tw-table-body", {})
                }, e.children)
            };
            Zt.displayName = "TableBody";
            n("yXTL");
            var en = function(e) {
                return d.createElement(L, {
                    padding: 1,
                    className: p({
                        "tw-table-cell": !0
                    }),
                    textAlign: e.textAlign,
                    verticalAlign: e.verticalAlign
                }, e.children)
            };
            en.displayName = "TableCell";
            n("DiOp");
            var tn = function(e) {
                return d.createElement(pe, {
                    background: se.Alt,
                    className: p("tw-table-header", {})
                }, e.children)
            };
            tn.displayName = "TableHeader";
            var nn;
            n("cT/0");
            ! function(e) {
                e[e.Default = 0] = "Default", e[e.Ascending = 1] = "Ascending", e[e.Descending = 2] = "Descending"
            }(nn || (nn = {}));
            var rn = function(e) {
                var t, n;
                if (void 0 !== e.sorting) {
                    switch (nn[e.sorting]) {
                        case "Ascending":
                            n = d.createElement(j, {
                                asset: M.GlyphArrUp,
                                width: 10
                            });
                            break;
                        case "Descending":
                            n = d.createElement(j, {
                                asset: M.GlyphArrDown,
                                width: 10
                            });
                            break;
                        default:
                            n = d.createElement(j, {
                                asset: M.GlyphArrUpDown,
                                width: 10
                            })
                    }
                    t = d.createElement(Oe, {
                        type: Ee.Alpha,
                        onClick: e.onClick
                    }, d.createElement(pe, {
                        color: Z.Link,
                        display: k.Flex,
                        alignItems: b.Center,
                        padding: 1
                    }, d.createElement(L, {
                        margin: {
                            right: .5
                        },
                        flexGrow: 1
                    }, d.createElement(ce, {
                        bold: !0
                    }, e.label)), n))
                } else t = d.createElement(L, {
                    padding: 1
                }, d.createElement(ce, {
                    bold: !0
                }, e.label));
                return d.createElement(L, {
                    verticalAlign: e.verticalAlign,
                    className: p("tw-table-heading", {})
                }, t)
            };
            rn.displayName = "TableHeading";
            n("a8bM");
            var an = function(e) {
                return d.createElement("div", {
                    className: p("tw-table-row", {})
                }, e.children)
            };
            an.displayName = "TableRow";
            var on, sn;
            n("Lf2s");
            ! function(e) {
                e.Default = "", e.ExtraSmall = "tw-tower--gutter-xs", e.Small = "tw-tower--gutter-sm", e.Large = "tw-tower--gutter-lg", e.None = "tw-tower--gutter-none"
            }(on || (on = {})),
            function(e) {
                e.ExtraSmall = "tw-tower--120", e.Small = "tw-tower--180", e.Medium = "tw-tower--240", e.Large = "tw-tower--300"
            }(sn || (sn = {}));
            var ln = function(e) {
                var t = {
                    "tw-tower": !0,
                    "tw-tower--nogrow": e.noGrow
                };
                e.gutterSize && (t[e.gutterSize] = !0), e.childWidth && (t[e.childWidth] = !0);
                var n = new Array;
                if (e.placeholderItems)
                    for (var i = 0; i < e.placeholderItems; ++i) n.push(d.createElement("div", {
                        className: "tw-tower__placeholder",
                        key: i
                    }));
                return d.createElement(L, c.a({
                    justifyContent: e.center ? E.Center : void 0,
                    flexWrap: e.noWrap ? w.NoWrap : w.Wrap,
                    className: p(t)
                }, m(e)), e.children, n)
            };
            ln.displayName = "Tower";
            n("E8HR");
            var cn, dn = function(e) {
                return d.createElement("div", c.a({
                    className: p({
                        "tw-typeset": !0
                    })
                }, m(e)), e.children)
            };
            dn.displayName = "Typeset",
                function(e) {
                    e.White = "#ffffff", e.Black = "#000000", e.Red = "#ec1313", e.Orange = "#ffb300", e.Yellow = "#ffea00", e.Green = "#14b866", e.Blue = "#0088cc", e.PrimeBlue = "#0e9bd8", e.TwitchPurple = "#6441a4", e.Twitter = "#1da1f2", e.Facebook = "#3b5998", e.Reddit = "#ff4500", e.Snapchat = "#fffc00", e.Instagram = "#405de6", e.Youtube = "#cd201f", e.Paypal = "#003087", e.Vk = "#45668e", e.Purple1 = "#0e0c13", e.Purple2 = "#17141f", e.Purple3 = "#201c2b", e.Purple4 = "#2c2541", e.Purple5 = "#392e5c", e.Purple6 = "#4b367c", e.Purple7 = "#6441a4", e.Purple8 = "#7d5bbe", e.Purple9 = "#9a7fcc", e.Purple10 = "#b19dd8", e.Purple11 = "#c5b6e2", e.Purple12 = "#d7cceb", e.Purple13 = "#e2dbf0", e.Purple14 = "#eee9f6", e.Purple15 = "#f9f8fc", e.HintedGrey1 = "#0f0e11", e.HintedGrey2 = "#19171c", e.HintedGrey3 = "#232127", e.HintedGrey4 = "#322f37", e.HintedGrey5 = "#433f4a", e.HintedGrey6 = "#575260", e.HintedGrey7 = "#6e6779", e.HintedGrey8 = "#898395", e.HintedGrey9 = "#a49fad", e.HintedGrey10 = "#b8b5c0", e.HintedGrey11 = "#cbc8d0", e.HintedGrey12 = "#dad8de", e.HintedGrey13 = "#e5e3e8", e.HintedGrey14 = "#efeef1", e.HintedGrey15 = "#faf9fa"
                }(cn || (cn = {}));
            n("ruaE");
            var un = function(e) {
                var t = {
                    "tw-responsive-wrapper": !0,
                    "tw-responsive-wrapper--centered": e.centered
                };
                return d.createElement("div", {
                    className: p(t)
                }, e.children)
            };
            un.displayName = "ResponsiveWrapper";
            var pn, mn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handleClickPrevious = function(e) {
                        t.props.onClickPrevious && (e.goToPage = t.props.currentPage - 1, t.props.onClickPrevious(e))
                    }, t.handleClickNext = function(e) {
                        t.props.onClickNext && (e.goToPage = t.props.currentPage + 1, t.props.onClickNext(e))
                    }, t
                }
                return c.d(t, e), t.prototype.render = function() {
                    return d.createElement(L, {
                        display: k.Flex,
                        alignItems: b.Center
                    }, d.createElement(hn, {
                        ariaLabel: this.props.previousPageButtonAriaLabel,
                        type: pn.Previous,
                        currentPage: this.props.currentPage,
                        totalPages: this.props.totalPages,
                        onClick: this.handleClickPrevious,
                        key: "previous"
                    }), d.createElement(fn, {
                        currentPage: this.props.currentPage,
                        totalPages: this.props.totalPages,
                        onClick: this.props.onClickIndex
                    }), d.createElement(hn, {
                        ariaLabel: this.props.nextPageButtonAriaLabel,
                        type: pn.Next,
                        currentPage: this.props.currentPage,
                        totalPages: this.props.totalPages,
                        onClick: this.handleClickNext,
                        key: "next"
                    }))
                }, t
            }(d.Component);
            ! function(e) {
                e[e.Default = 0] = "Default", e[e.Previous = 1] = "Previous", e[e.Next = 2] = "Next"
            }(pn || (pn = {}));
            var hn = function(e) {
                var t = pn[e.type];
                return d.createElement(J, {
                    icon: "Previous" === t ? M.GlyphArrLeft : M.GlyphArrRight,
                    ariaLabel: e.ariaLabel,
                    onClick: e.onClick,
                    disabled: "Previous" === t && 1 === e.currentPage || "Next" === t && e.currentPage === e.totalPages
                })
            };
            hn.displayName = "PaginationControl";
            var fn = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.renderIndexControl = function(e) {
                        return d.createElement(K, {
                            type: z.Text,
                            ariaLabel: e.toString(),
                            onClick: t.handleClickIndex,
                            disabled: e === t.props.currentPage
                        }, e)
                    }, t.renderEllipsis = function(e) {
                        return d.createElement(L, {
                            key: e,
                            padding: {
                                x: .5
                            }
                        }, "...")
                    }, t.handleClickIndex = function(e) {
                        t.props.onClick && (e.goToPage = parseInt(e.currentTarget.innerText, 0), t.props.onClick(e))
                    }, t
                }
                return c.d(t, e), t.prototype.render = function() {
                    var e = [];
                    if (e.push(this.renderIndexControl(1)), this.props.totalPages <= 5)
                        for (var t = 2; t < this.props.totalPages + 1; t++) e.push(this.renderIndexControl(t));
                    else {
                        if (this.props.currentPage < 3) {
                            for (t = 2; t < 4; t++) e.push(this.renderIndexControl(t));
                            e.push(this.renderEllipsis("ellipsis-1"))
                        }
                        if (this.props.currentPage >= 3 && this.props.currentPage < this.props.totalPages - 3) {
                            e.push(this.renderEllipsis("ellipsis-1"));
                            for (t = this.props.currentPage; t < this.props.currentPage + 3; t++) e.push(this.renderIndexControl(t));
                            e.push(this.renderEllipsis("ellipsis-2"))
                        }
                        if (this.props.currentPage >= this.props.totalPages - 3) {
                            e.push(this.renderEllipsis("ellipsis-3"));
                            for (t = this.props.totalPages - 3; t < this.props.totalPages; t++) e.push(this.renderIndexControl(t))
                        }
                        e.push(this.renderIndexControl(this.props.totalPages))
                    }
                    return e
                }, t
            }(d.Component);
            n.d(t, !1, function() {
                return fe
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return de
            }), n.d(t, !1, function() {
                return i
            }), n.d(t, !1, function() {
                return r
            }), n.d(t, !1, function() {
                return a
            }), n.d(t, !1, function() {
                return o
            }), n.d(t, !1, function() {
                return s
            }), n.d(t, !1, function() {
                return l
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return ge
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return ve
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return Ie
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return De
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "e", function() {
                return Pe
            }), n.d(t, "f", function() {
                return Ce
            }), n.d(t, "g", function() {
                return Ne
            }), n.d(t, "h", function() {
                return Te
            }), n.d(t, "i", function() {
                return _e
            }), n.d(t, "j", function() {
                return Re
            }), n.d(t, !1, function() {}), n.d(t, "k", function() {
                return ke
            }), n.d(t, "l", function() {
                return be
            }), n.d(t, "a", function() {
                return ye
            }), n.d(t, !1, function() {}), n.d(t, "m", function() {
                return Fe
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "o", function() {
                return Ae
            }), n.d(t, "p", function() {
                return Me
            }), n.d(t, !1, function() {}), n.d(t, "u", function() {
                return Ge
            }), n.d(t, !1, function() {}), n.d(t, "v", function() {
                return K
            }), n.d(t, "z", function() {
                return W
            }), n.d(t, "B", function() {
                return z
            }), n.d(t, "A", function() {
                return V
            }), n.d(t, !1, function() {}), n.d(t, "w", function() {
                return J
            }), n.d(t, "x", function() {
                return q
            }), n.d(t, "y", function() {
                return G
            }), n.d(t, !1, function() {}), n.d(t, "q", function() {
                return Ye
            }), n.d(t, "s", function() {
                return qe
            }), n.d(t, "r", function() {
                return Qe
            }), n.d(t, !1, function() {}), n.d(t, "D", function() {
                return ze
            }), n.d(t, !1, function() {}), n.d(t, "E", function() {
                return Ve
            }), n.d(t, "F", function() {
                return We
            }), n.d(t, !1, function() {}), n.d(t, "C", function() {
                return je
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return Ke
            }), n.d(t, "J", function() {
                return Ze
            }), n.d(t, !1, function() {}), n.d(t, "S", function() {
                return et
            }), n.d(t, !1, function() {}), n.d(t, "Ba", function() {
                return nt
            }), n.d(t, "Ca", function() {
                return tt
            }), n.d(t, !1, function() {}), n.d(t, "L", function() {
                return at
            }), n.d(t, !1, function() {
                return it
            }), n.d(t, !1, function() {}), n.d(t, "fb", function() {
                return j
            }), n.d(t, "gb", function() {
                return M
            }), n.d(t, "hb", function() {
                return F
            }), n.d(t, !1, function() {}), n.d(t, "N", function() {
                return we
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return lt
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return rt
            }), n.d(t, "Ha", function() {
                return dt
            }), n.d(t, "Ia", function() {
                return ct
            }), n.d(t, !1, function() {}), n.d(t, "Ja", function() {
                return Oe
            }), n.d(t, !1, function() {}), n.d(t, "Ka", function() {
                return Ee
            }), n.d(t, "O", function() {
                return oe
            }), n.d(t, "P", function() {
                return X
            }), n.d(t, !1, function() {}), n.d(t, "X", function() {
                return bt
            }), n.d(t, "Y", function() {
                return gt
            }), n.d(t, !1, function() {
                return vt
            }), n.d(t, !1, function() {}), n.d(t, "Aa", function() {
                return ht
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return ft
            }), n.d(t, !1, function() {}), n.d(t, "Z", function() {
                return pt
            }), n.d(t, !1, function() {}), n.d(t, "W", function() {
                return ut
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return mt
            }), n.d(t, !1, function() {
                return yt
            }), n.d(t, "qb", function() {
                return pe
            }), n.d(t, "Ga", function() {
                return ue
            }), n.d(t, !1, function() {}), n.d(t, "n", function() {
                return se
            }), n.d(t, "t", function() {
                return le
            }), n.d(t, !1, function() {}), n.d(t, "b", function() {
                return v
            }), n.d(t, "c", function() {
                return b
            }), n.d(t, "d", function() {
                return y
            }), n.d(t, "Fa", function() {
                return x
            }), n.d(t, "Ma", function() {
                return L
            }), n.d(t, "R", function() {
                return k
            }), n.d(t, "T", function() {
                return S
            }), n.d(t, "U", function() {
                return w
            }), n.d(t, "La", function() {
                return E
            }), n.d(t, !1, function() {
                return T
            }), n.d(t, "Pa", function() {
                return C
            }), n.d(t, "Wa", function() {
                return N
            }), n.d(t, "Cb", function() {
                return _
            }), n.d(t, "Tb", function() {
                return I
            }), n.d(t, "Qb", function() {
                return R
            }), n.d(t, "Rb", function() {
                return O
            }), n.d(t, "G", function() {
                return wt
            }), n.d(t, "H", function() {
                return kt
            }), n.d(t, "I", function() {
                return St
            }), n.d(t, !1, function() {}), n.d(t, "Oa", function() {
                return A
            }), n.d(t, "ob", function() {
                return D
            }), n.d(t, !1, function() {}), n.d(t, "pb", function() {
                return Tt
            }), n.d(t, !1, function() {}), n.d(t, "zb", function() {
                return Ot
            }), n.d(t, "Ab", function() {
                return Rt
            }), n.d(t, !1, function() {}), n.d(t, "Bb", function() {
                return _t
            }), n.d(t, "Ta", function() {
                return Dt
            }), n.d(t, "Ua", function() {
                return It
            }), n.d(t, !1, function() {}), n.d(t, "Va", function() {
                return He
            }), n.d(t, !1, function() {}), n.d(t, "Xa", function() {
                return Le
            }), n.d(t, "Ya", function() {
                return xe
            }), n.d(t, !1, function() {}), n.d(t, "Za", function() {
                return Ft
            }), n.d(t, "bb", function() {
                return Pt
            }), n.d(t, !1, function() {
                return xt
            }), n.d(t, "ab", function() {
                return Lt
            }), n.d(t, !1, function() {}), n.d(t, "cb", function() {
                return Mt
            }), n.d(t, !1, function() {}), n.d(t, "Da", function() {
                return Ut
            }), n.d(t, "Ea", function() {
                return At
            }), n.d(t, !1, function() {}), n.d(t, "Q", function() {
                return ce
            }), n.d(t, "Sb", function() {
                return ae
            }), n.d(t, "K", function() {
                return Z
            }), n.d(t, "V", function() {
                return ee
            }), n.d(t, "Na", function() {
                return te
            }), n.d(t, "Eb", function() {
                return ne
            }), n.d(t, "Fb", function() {
                return ie
            }), n.d(t, "Gb", function() {
                return re
            }), n.d(t, !1, function() {}), n.d(t, "Ib", function() {
                return Bt
            }), n.d(t, !1, function() {}), n.d(t, "db", function() {
                return jt
            }), n.d(t, !1, function() {}), n.d(t, "ib", function() {
                return zt
            }), n.d(t, !1, function() {}), n.d(t, "jb", function() {
                return Wt
            }), n.d(t, !1, function() {}), n.d(t, "kb", function() {
                return Ht
            }), n.d(t, !1, function() {
                return Vt
            }), n.d(t, !1, function() {}), n.d(t, "lb", function() {
                return qt
            }), n.d(t, "mb", function() {
                return Gt
            }), n.d(t, !1, function() {}), n.d(t, "rb", function() {
                return Qt
            }), n.d(t, !1, function() {}), n.d(t, "sb", function() {
                return Kt
            }), n.d(t, !1, function() {}), n.d(t, "Db", function() {
                return Yt
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return Xt
            }), n.d(t, !1, function() {}), n.d(t, "Hb", function() {
                return $t
            }), n.d(t, !1, function() {}), n.d(t, "tb", function() {
                return Jt
            }), n.d(t, !1, function() {}), n.d(t, "ub", function() {
                return Zt
            }), n.d(t, !1, function() {}), n.d(t, "vb", function() {
                return en
            }), n.d(t, !1, function() {}), n.d(t, "wb", function() {
                return tn
            }), n.d(t, !1, function() {}), n.d(t, "xb", function() {
                return rn
            }), n.d(t, "nb", function() {
                return nn
            }), n.d(t, !1, function() {}), n.d(t, "yb", function() {
                return an
            }), n.d(t, !1, function() {}), n.d(t, "Jb", function() {
                return Nt
            }), n.d(t, "Lb", function() {
                return Et
            }), n.d(t, "Kb", function() {
                return Ct
            }), n.d(t, !1, function() {}), n.d(t, "Mb", function() {
                return ln
            }), n.d(t, "Ob", function() {
                return on
            }), n.d(t, "Nb", function() {
                return sn
            }), n.d(t, !1, function() {}), n.d(t, "Pb", function() {
                return dn
            }), n.d(t, !1, function() {}), n.d(t, "M", function() {
                return cn
            }), n.d(t, "Ub", function() {
                return m
            }), n.d(t, "eb", function() {
                return un
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {
                return mn
            }), n.d(t, !1, function() {}), n.d(t, "Qa", function() {
                return hn
            }), n.d(t, "Ra", function() {
                return pn
            }), n.d(t, "Sa", function() {
                return fn
            })
        },
        Ue8y: function(e, t, n) {},
        UkmT: function(e, t, n) {},
        UmTV: function(e, t, n) {},
        UptD: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "ClearUnreadFriendRequests"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "clearUnreadFriendRequests"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 80
                }
            };
            n.loc.source = {
                body: "mutation ClearUnreadFriendRequests {\nclearUnreadFriendRequests {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "V+GM": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("cr+I"),
                a = n("q1tI"),
                o = n("eO8H"),
                s = n("/7QA");

            function l(e) {
                return function(t) {
                    var n = function(n) {
                        function o(t) {
                            var r = n.call(this, t) || this;
                            return r.tracked = !1, r.referenceTracking = {}, r.trackPageview = function() {
                                if (!(r.tracked || e.skip && e.skip(r.props))) {
                                    r.tracked = !0;
                                    var t = {};
                                    "function" == typeof e.properties ? t = e.properties(r.props) : e.properties && (t = i.a({}, e.properties));
                                    var n = i.a({}, r.props);
                                    n.location && n.location.state && (t.medium = n.location.state.medium, t.content = n.location.state.content, t.content_index = n.location.state.content_index);
                                    var a = r.referenceTracking,
                                        o = a.content,
                                        l = a.medium,
                                        c = a.content_index;
                                    s.o.tracking.trackPageview(i.a({
                                        content: o,
                                        medium: l,
                                        content_index: c,
                                        location: e.location
                                    }, t))
                                }
                            }, s.j.debug("pageViewTracking", e), t.rootLatencyTracker ? t.rootLatencyTracker.setLocation(e.location) : s.j.warn("No latency tracker exists! This means no data will be sent to Spade.", e), r
                        }
                        return i.d(o, n), o.prototype.componentDidMount = function() {
                            var e = this;
                            this.referenceTracking = this.stripTTParams(this.props.history.location), this.trackPageview(), this.props.history.listen(function(t, n) {
                                "REPLACE" !== n && (e.tracked = !1, e.referenceTracking = {})
                            })
                        }, o.prototype.componentDidUpdate = function() {
                            this.trackPageview()
                        }, o.prototype.render = function() {
                            return a.createElement(t, i.a({}, this.props))
                        }, o.prototype.stripTTParams = function(e) {
                            var t = "" !== e.search ? r.parse(e.search) : {},
                                n = {
                                    content: t.tt_content,
                                    content_index: t.tt_content_index,
                                    medium: t.tt_medium
                                };
                            if (delete t.tt_content, delete t.tt_content_index, delete t.tt_medium, n.medium || n.content) {
                                var i = "",
                                    a = r.stringify(t);
                                a.length > 0 && (i = "?" + a), this.props.history.replace({
                                    pathname: e.pathname,
                                    hash: e.hash,
                                    search: i
                                })
                            }
                            return n
                        }, o
                    }(a.Component);
                    return Object(o.f)(n)
                }
            }
            n.d(t, "a", function() {
                return l
            })
        },
        V6pL: function(e, t, n) {},
        V94A: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "followButtonFragment"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "displayName"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "self"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follower"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "disableNotifications"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 172
                }
            };
            n.loc.source = {
                body: "# Queries the data necessary to render the FollowButton component.\nfragment followButtonFragment on User {\nid\ndisplayName\nlogin\nself {\nfollower {\ndisableNotifications\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        VR5Q: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "WatchAdModal_Redeeem"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "RedeemTrueXAdInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "redeemTrueXAd"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "grantedBits"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 105
                }
            };
            n.loc.source = {
                body: "mutation WatchAdModal_Redeeem($input:RedeemTrueXAdInput!) {\nredeemTrueXAd(input:$input) {\ngrantedBits\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        VSaV: function(e, t) {},
        "Vl9+": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "thread"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "WhisperThread"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "messages"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "first"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "20"
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "edges"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "cursor"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "node"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "nonce"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "content"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "content"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "emotes"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "emoteID"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "setID"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "from"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "to"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "deletedAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "editedAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "sentAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "from"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "unreadMessagesCount"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "userLastMessageRead"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "sentAt"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 240
                }
            };
            n.loc.source = {
                body: "fragment thread on WhisperThread {\nmessages(first: 20) {\nedges {\ncursor\nnode {\nid\nnonce\ncontent {\ncontent\nemotes {\nid\nemoteID\nsetID\nfrom\nto\n}\n}\ndeletedAt\neditedAt\nsentAt\nfrom {\nid\n}\n}\n}\n}\nunreadMessagesCount\nuserLastMessageRead {\nsentAt\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        VwD5: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = "https://www.amazon.com/twitchmerch?channel=tpn&ref_=tw_or_web_tpn_ms"
        },
        W8Fi: function(e, t, n) {
            "use strict";

            function i(e) {
                return e.some(function(e) {
                    return !!e.self && !!e.self.promotion
                })
            }

            function r(e) {
                return e.some(function(e) {
                    return !!e.giftPromotion
                })
            }

            function a(e, t) {
                var n;
                return t ? n = e.giftPromotion : e.self && (n = e.self.promotion), n ? n.newPrice : e.price
            }

            function o(e, t) {
                var n;
                return t ? n = e.giftPromotion : e.self && (n = e.self.promotion), n ? n.discountValue : 0
            }
            n.d(t, "d", function() {
                return i
            }), n.d(t, "c", function() {
                return r
            }), n.d(t, "a", function() {
                return a
            }), n.d(t, "b", function() {
                return o
            })
        },
        WQCf: function(e, t, n) {
            "use strict";
            n.d(t, "d", function() {
                return s
            }), n.d(t, "c", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            }), n.d(t, "b", function() {
                return i
            }), n.d(t, "e", function() {
                return r
            });
            var i, r, a, o, s = {
                    BitsLeaderboardEvents: "leaderboard-events-v1",
                    CampaignGlobalEvents: "campaign-events",
                    CampaignUserEvents: "user-campaign-events",
                    ChannelBitsEvents: "channel-bits-events-v1",
                    ChannelBitsPinEvents: "channel-bit-events-public",
                    ChannelEventUpdates: "channel-event-updates",
                    ChannelSubscribeEvents: "channel-subscribe-events-v1",
                    BroadcastSettingsUpdate: "broadcast-settings-update",
                    ChatRoom: "chatrooms-room-v1",
                    ChatRoomsChannel: "chatrooms-channel-v1",
                    ChatRoomsUser: "chatrooms-user-v1",
                    Friendship: "friendship",
                    ImageUpload: "user-image-update",
                    ModerationActionsByUserAndChannel: "chat_moderator_actions",
                    OnsiteNotifications: "onsite-notifications",
                    PayoutOnboardingEvents: "payout-onboarding-events",
                    Presence: "presence",
                    Raid: "raid",
                    StreamChange: "stream-change-v1",
                    StreamChatRoom: "stream-chat-room-v1",
                    SubscribersCSV: "subscribers-csv-v1",
                    UploadService: "upload",
                    UserBitsUpdates: "user-bits-updates-v1",
                    UserCommerceEvents: "user-commerce-events",
                    UserCrateEvents: "user-crate-events-v1",
                    UserSubscribeEvents: "user-subscribe-events-v1",
                    VideoPlayback: "video-playback",
                    VideoPlaybackById: "video-playback-by-id",
                    VideoThumbnailProcessing: "video-thumbnail-processing",
                    Whispers: "whispers"
                },
                l = {
                    BitsChannelSettingsEvent: "channel_settings_update",
                    BitsPinEvent: "bits-pin-event",
                    BitsLeaderboardEvent: "bits-leaderboard-event",
                    ChannelStreamDown: "stream-down",
                    ChannelStreamUp: "stream-up",
                    BroadcastSettingsUpdate: "broadcast_settings_update",
                    ChatNotification: "chat-notification",
                    ChatRoomCreated: "created_room",
                    ChatRoomDeleted: "deleted_room",
                    ChatRoomUpdated: "updated_room",
                    ChatRoomsUserModAction: "user_moderation_action",
                    ChatRoomMessageCreated: "created_room_message",
                    ChatRoomMessageEdited: "edited_room_message",
                    ChatRoomMessageDeleted: "deleted_room_message",
                    ChatRoomsRoomViewUpdated: "updated_room_view",
                    Commercial: "commercial",
                    ImageUploadSuccess: "imageuploadsuccess",
                    LiveEvent: "live-event",
                    ModerationAction: "moderation_action",
                    OnsiteNotificationCreate: "create-notification",
                    OnsiteNotificationDelete: "delete-notification",
                    OnsiteNotificationsRead: "read-notifications",
                    OnsiteNotificationSummaryUpdate: "update-summary",
                    OnsiteNotificationUpdate: "update-notification",
                    PayoutOnboardingEvent: "payout-onboarding-event",
                    Presence: "presence",
                    PresenceSettings: "settings",
                    PurgeMessageRequest: "purge_messages_request",
                    RaidCancel: "raid_cancel",
                    RaidUpdate: "raid_update",
                    StreamChatRoomChatRichEmbed: "chat_rich_embed",
                    StreamChatRoomHostTargetChange: "host_target_change_v2",
                    StreamDown: "stream_down",
                    StreamUp: "stream_up",
                    SubscribersCSVComplete: "subscribers_csv_complete_v1",
                    SubscribersCSVInProgress: "subscribers_csv_in_progress_v1",
                    UpdatedChannelChatProperty: "updated_channel_chat_property",
                    UploadService: "upload",
                    UserBitsBalanceUpdate: "balance_update",
                    UserBitsBadgeUpdate: "badge_update",
                    UserCampaignProgressEvent: "progress",
                    UserCampaignRewardEvent: "reward",
                    UserCrateEvent: "crate-event",
                    UserGiftEvent: "gift-event",
                    UserMention: "user_mention",
                    VideoThumbnailProcessingComplete: "processing_complete",
                    VideoThumbnailProcessingError: "processing_error",
                    ViewCount: "viewcount",
                    Vodcast: "watchparty-vod",
                    WhisperAllThreadsUpdate: "threads",
                    WhisperDeleted: "whisper_deleted",
                    WhisperEdited: "whisper_edited",
                    WhisperReceived: "whisper_received",
                    WhisperSent: "whisper_sent",
                    WhisperThreadUpdate: "thread"
                },
                c = {
                    Accepted: "accepted",
                    Requested: "requested",
                    Removed: "removed",
                    SelfAccepted: "self_accepted",
                    SelfRemoved: "self_removed",
                    SelfRequested: "self_requested"
                };
            ! function(e) {
                e.AddBlockedTerm = "add_blocked_term", e.AddPermittedTerm = "add_permitted_term", e.AutoModEnabled = "automod_enabled", e.AutoModRejected = "automod_rejected", e.Ban = "ban", e.Clear = "clear", e.DeleteBlockedTerm = "delete_blocked_term", e.DeletePermittedTerm = "delete_permitted_term", e.EmoteOnly = "emoteonly", e.EmoteOnlyOff = "emoteonlyoff", e.FollowersOnly = "followers", e.FollowersOnlyOff = "followersoff", e.Host = "host", e.Mod = "mod", e.ModifiedAutoModProperties = "modified_automod_properties", e.R9kBeta = "r9kbeta", e.R9kBetaOff = "r9kbetaoff", e.Raid = "raid", e.Slow = "slow", e.SlowOff = "slowoff", e.SubsBeta = "subsbeta", e.SubscribersOnly = "subscribers", e.SubscribersOnlyOff = "subscribersoff", e.Timeout = "timeout", e.Unban = "unban", e.Unhost = "unhost", e.Unmod = "unmod", e.Unraid = "unraid", e.Untimeout = "untimeout"
            }(i || (i = {})),
            function(e) {
                e.AutoModMessageRejected = "automod_message_rejected", e.AutoModMessageApproved = "automod_message_approved", e.AutoModMessageDenied = "automod_message_denied"
            }(r || (r = {})),
            function(e) {
                e.Archive = "archive", e.Highlight = "highlight", e.Upload = "upload", e.Premiere = "premiere", e.Rerun = "rerun", e.WatchPartyPremiere = "watch_party_premiere", e.WatchPartyRerun = "watch_party_rerun"
            }(a || (a = {})),
            function(e) {
                e.Private = "private", e.Public = "public"
            }(o || (o = {}))
        },
        WSPL: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            });
            var i = "whisperNotifications.WHISPER_THREAD_NOTIFIED";

            function r(e, t, n) {
                return {
                    type: i,
                    threadID: e,
                    afterMessageID: n,
                    content: t
                }
            }
        },
        WcZC: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Current_User"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 41
                }
            };
            n.loc.source = {
                body: "query Current_User {\ncurrentUser {\nid\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Wcon: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "Whispers_MarkThreadMessageRead"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdateWhisperThreadInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updateWhisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "thread"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "unreadMessagesCount"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 151
                }
            };
            n.loc.source = {
                body: "mutation Whispers_MarkThreadMessageRead($input: UpdateWhisperThreadInput!) {\nupdateWhisperThread(input: $input) {\nthread {\nid\nunreadMessagesCount\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        WroD: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Ads_Components_AdManager_User"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasTurbo"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 76
                }
            };
            n.loc.source = {
                body: "query Ads_Components_AdManager_User {\ncurrentUser {\nid\nhasPrime\nhasTurbo\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        Ww25: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("Ue10"),
                a = function(e) {
                    return i.createElement(r.Ma, {
                        margin: {
                            top: 1
                        }
                    }, i.createElement(r.Q, {
                        color: r.K.Alt,
                        "data-a-target": e.textDataTarget
                    }, e.text), e.extraText && i.createElement(r.Ma, {
                        margin: {
                            top: .5
                        }
                    }, i.createElement(r.Q, {
                        color: r.K.Alt2
                    }, e.extraText)))
                };
            n.d(t, "a", function() {
                return a
            })
        },
        XDQu: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("/0dD"),
                o = n("76Lv"),
                s = n("d0ua"),
                l = n("kRBY");

            function c(e) {
                return e.ui.theatreModeEnabled ? a.a.Dark : e.ui.theme
            }

            function d(e) {
                return Object(l.e)(e) && !e.ui.fullscreenTheatreModeEnabled
            }

            function u(e, t) {
                var n = i.a({}, e, t);
                return n.fullscreenTheatreModeEnabled ? n.rightColumnExpanded = n.fullscreenRightColumnExpanded : n.rightColumnExpanded = n.inlineRightColumnExpanded, n
            }

            function p(e, t) {
                var n = i.a({}, e, t);
                return n.theatreModeEnabled = n.inlineTheatreModeEnabled || n.fullscreenTheatreModeEnabled, n
            }
            r.o.store.registerReducer("ui", function(e, t) {
                var n, a;
                switch (void 0 === e && (n = r.l.get(r.o.config.layoutCacheKey, {
                    resource: {
                        isSocialColumnClosedByUserAction: !1,
                        isRightColumnClosedByUserAction: !1,
                        isFullscreenRightColumnOpenedByUserAction: !1
                    },
                    time: Date.now()
                }), a = Object(o.b)(), e = u({
                    persistentPlayerEnabled: r.l.get(r.o.config.persistentPlayerEnabledKey, !0),
                    persistentPlayerIsPersisting: !1,
                    inlineRightColumnExpanded: !n.resource.isRightColumnClosedByUserAction,
                    fullscreenRightColumnExpanded: n.resource.isFullscreenRightColumnOpenedByUserAction,
                    rightColumnExpanded: !n.resource.isRightColumnClosedByUserAction,
                    sideNavExpanded: !n.resource.isSocialColumnClosedByUserAction,
                    inlineTheatreModeEnabled: !1,
                    fullscreenTheatreModeEnabled: !1,
                    theatreModeEnabled: !1,
                    theme: a
                })), t.type) {
                    case s.i:
                        return u(e, {
                            inlineRightColumnExpanded: !0
                        });
                    case s.h:
                        return u(e, {
                            inlineRightColumnExpanded: !1
                        });
                    case s.b:
                        return u(e, {
                            fullscreenRightColumnExpanded: !0
                        });
                    case s.a:
                        return u(e, {
                            fullscreenRightColumnExpanded: !1
                        });
                    case s.k:
                        return i.a({}, e, {
                            sideNavExpanded: !0
                        });
                    case s.j:
                        return i.a({}, e, {
                            sideNavExpanded: !1
                        });
                    case s.m:
                        return p(e, {
                            inlineTheatreModeEnabled: !0
                        });
                    case s.l:
                        return p(e, {
                            inlineTheatreModeEnabled: !1
                        });
                    case s.d:
                        var l = {
                            fullscreenTheatreModeEnabled: !0
                        };
                        return e.fullscreenTheatreModeEnabled || (l.rightColumnExpanded = e.inlineRightColumnExpanded && e.fullscreenRightColumnExpanded), p(e, l);
                    case s.c:
                        return u(p(e, {
                            fullscreenTheatreModeEnabled: !1
                        }));
                    case s.n:
                        return i.a({}, e, {
                            theme: t.theme
                        });
                    case s.g:
                        return i.a({}, e, {
                            persistentPlayerEnabled: !e.persistentPlayerEnabled
                        });
                    case s.f:
                        return i.a({}, e, {
                            persistentPlayerIsPersisting: !1
                        });
                    case s.e:
                        return i.a({}, e, {
                            persistentPlayerIsPersisting: !0
                        });
                    default:
                        return e
                }
            })
        },
        XKWF: function(e, t, n) {
            "use strict";
            var i;

            function r(e) {
                switch (e.toUpperCase()) {
                    case i.Popular:
                        return i.Popular;
                    case i.Newest:
                        return i.Newest;
                    default:
                        return null
                }
            }
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.Popular = "VIEWS", e.Newest = "TIME"
                }(i || (i = {}))
        },
        Xcb2: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FriendButton_CancelFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "CancelFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "cancelFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "friendButtonFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 232
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nmutation FriendButton_CancelFriendRequest($input: CancelFriendRequestInput!) {\ncancelFriendRequest(input: $input) {\nuser {\nid\n...friendButtonFragment\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        XhOd: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return l
            });
            var i, r, a = n("mrSG"),
                o = n("/7QA"),
                s = n("2xye");
            ! function(e) {
                e.Chat = "chat", e.SocialColumn = "socialcolumn", e.FullscreenChat = "fullscreen_chat"
            }(i || (i = {})),
            function(e) {
                e.Close = "close", e.Open = "open"
            }(r || (r = {}));
            var l = function(e) {
                var t = a.a({
                    action_type: "click"
                }, e);
                o.n.track(s.SpadeEventType.SiteLayoutMod, t)
            }
        },
        XmgI: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            }), n.d(t, "d", function() {
                return o
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            });
            var i = n("RcPG"),
                r = {
                    indexedActions: {},
                    orderedActions: []
                },
                a = /^((?:[A-Za-z0-9]+)(?:[A-Za-z]))([\d]+)$/;

            function o(e, t) {
                var n = [],
                    r = e.split(/\s+/);
                return r.forEach(function(e, a) {
                    var o = s(e, t);
                    if (o) n.push(o);
                    else {
                        var l = n.length && n[n.length - 1],
                            c = "";
                        if (a < r.length - 1 && (c = " "), l && l.type === i.a.Text) l.content += e + c;
                        else {
                            var d = "";
                            a && (d = " "), n.push({
                                type: i.a.Text,
                                content: d + e + c
                            })
                        }
                    }
                }), n
            }

            function s(e, t) {
                var n = e.match(a);
                if (!n) return null;
                var r = n[1].toLowerCase(),
                    o = Number(n[2]),
                    s = t.indexedActions[r];
                if (s) {
                    var c = s.orderedTiers.find(function(e) {
                        return e.bits <= o
                    });
                    if (!c && o && (c = s.orderedTiers[0]), c) return {
                        type: i.a.Emote,
                        content: {
                            images: l(c),
                            alt: s.prefix,
                            cheerAmount: o,
                            cheerColor: c.color
                        }
                    }
                }
                return null
            }

            function l(e, t, n) {
                void 0 === n && (n = !0);
                var i, r, a = n ? "animated" : "static";
                return t ? {
                    themed: !0,
                    dark: (i = {}, i[t + "x"] = e.indexedImages.DARK[a].get(t), i),
                    light: (r = {}, r[t + "x"] = e.indexedImages.LIGHT[a].get(t), r)
                } : {
                    themed: !0,
                    dark: {
                        "1x": e.indexedImages.DARK[a].get(1),
                        "1.5x": e.indexedImages.DARK[a].get(1.5),
                        "2x": e.indexedImages.DARK[a].get(2),
                        "3x": e.indexedImages.DARK[a].get(3),
                        "4x": e.indexedImages.DARK[a].get(4)
                    },
                    light: {
                        "1x": e.indexedImages.LIGHT[a].get(1),
                        "1.5x": e.indexedImages.LIGHT[a].get(1.5),
                        "2x": e.indexedImages.LIGHT[a].get(2),
                        "3x": e.indexedImages.LIGHT[a].get(3),
                        "4x": e.indexedImages.LIGHT[a].get(4)
                    }
                }
            }
        },
        "Xu/Q": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "EEACookieAlert"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isFromEEA"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 50
                }
            };
            n.loc.source = {
                body: "query EEACookieAlert {\nrequestInfo {\nisFromEEA\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        YEj9: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("1/iK"),
                o = n("y5D0"),
                s = n("kRBY"),
                l = n("q1tI"),
                c = n("dtw8"),
                d = n("/7QA"),
                u = n("ZDlU"),
                p = n("V+GM"),
                m = n("NvVO"),
                h = n("2xye"),
                f = n("GnwI");
            var g = Object(r.d)(Object(f.c)("LoginRequiredPage", {
                autoReportInteractive: !0,
                destination: m.a.LoginRequired
            }), Object(p.a)({
                location: h.PageviewLocation.LoginRequired
            }))(function() {
                return l.createElement(u.a, {
                    message: Object(d.d)("You must be logged in to view this page", "LoginRequiredPage")
                })
            });
            var v = Object(i.b)(function(e) {
                var t = Object(s.d)(e);
                return {
                    isLoggedIn: Object(s.e)(e),
                    userLogin: t && t.login
                }
            }, function(e) {
                return Object(r.b)({
                    login: function() {
                        return Object(o.f)(a.a.LoginRequiredInterstitial)
                    }
                }, e)
            })(function(e) {
                return e.isLoggedIn && e.userLogin ? l.createElement(c.b, {
                    to: "/" + e.userLogin + e.location.pathname
                }) : (e.login(), l.createElement(g, null))
            });
            n.d(t, "a", function() {
                return v
            })
        },
        YFoo: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.LoadStart = "loadstart", e.Error = "error", e.LoadedMetadata = "loadedmetadata", e.CanPlay = "canplay", e.Playing = "playing", e.Waiting = "waiting", e.Seeking = "seeking", e.Seeked = "seeked", e.Ended = "ended", e.DurationChange = "durationchange", e.TimeUpdate = "timeupdate", e.Play = "play", e.Pause = "pause", e.VolumeChange = "volumechange", e.RateChange = "ratechange"
                }(i || (i = {}))
        },
        YO7o: function(e, t, n) {},
        YSKX: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TopNav_Store_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 62
                }
            };
            n.loc.source = {
                body: "query TopNav_Store_CurrentUser {\ncurrentUser {\nid\nhasPrime\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        YUvD: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("ClZk");

            function a(e) {
                return Object(i.b)(function(t) {
                    return {
                        gdpr: {
                            status: t.gdpr.status,
                            blockConsentRequiredContent: Object(r.c)(t, e)
                        }
                    }
                })
            }
            n.d(t, "a", function() {
                return a
            }), n.d(t, !1, function() {})
        },
        YV3K: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            }), n.d(t, "b", function() {
                return d
            });
            var i = n("/7QA"),
                r = n("f00E"),
                a = n("aCAx");
            var o = {},
                s = new Map;

            function l(e) {
                var t = s.get(e);
                return t || (t = e.name + ":" + Object(r.a)(), s.set(e, t), o[t] = e), t
            }

            function c(e) {
                return e.modal.modalID ? o[e.modal.modalID] : null
            }

            function d(e, t) {
                return e.modal.show && e.modal.modalID === l(t)
            }
            i.o.store.registerReducer("modal", function(e, t) {
                switch (void 0 === e && (e = {
                    show: !1,
                    modalID: null,
                    modalProps: null
                }), t.type) {
                    case a.b:
                        return {
                            show: !0,
                            modalID: l(t.modalComponent),
                            modalProps: t.modalProps
                        };
                    case a.a:
                        return {
                            show: !1,
                            modalID: null,
                            modalProps: null
                        };
                    default:
                        return e
                }
            })
        },
        "Z+W3": function(e, t, n) {},
        Z9Pd: function(e, t, n) {},
        ZBeb: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FollowButton_FollowUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "FollowUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "followUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follow"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "disableNotifications"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 124
                }
            };
            n.loc.source = {
                body: "mutation FollowButton_FollowUser($input: FollowUserInput!) {\nfollowUser(input: $input) {\nfollow {\ndisableNotifications\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        ZDlU: function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("Ue10"),
                a = (n("V6pL"), function(e) {
                    return i.createElement(r.qb, {
                        className: "core-error",
                        color: r.K.Alt2,
                        display: r.R.Flex,
                        justifyContent: r.La.Center,
                        alignItems: r.c.Center,
                        fullWidth: !e.inline,
                        fullHeight: !e.inline
                    }, i.createElement(r.Ma, {
                        className: "core-error__container",
                        display: r.R.InlineFlex,
                        alignItems: r.c.Center,
                        flexWrap: r.U.NoWrap
                    }, i.createElement(r.qb, {
                        margin: {
                            right: 2
                        },
                        flexShrink: 0,
                        color: r.K.Alt2
                    }, i.createElement(r.fb, {
                        asset: r.gb.DeadGlitch,
                        width: 92,
                        height: 96
                    })), i.createElement(r.Ma, {
                        className: "core-error__message-container",
                        display: r.R.Flex,
                        flexDirection: r.T.Column
                    }, i.createElement(r.Q, {
                        fontSize: r.V.Size4,
                        "data-a-target": "core-error-message"
                    }, e.message), e.children)))
                });
            n.d(t, "a", function() {
                return a
            })
        },
        ZIMp: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("ZS2+"),
                s = n("cZKs"),
                l = n("kz7j"),
                c = n("ZqP/"),
                d = n("GnwI"),
                u = n("Ue10"),
                p = o.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(31)]).then(n.bind(null, "4uwt"))
                }, "AuthForm"),
                m = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        window.recaptchaOptions = {
                            lang: a.o.intl.getLanguageCode(),
                            useRecaptchaNet: !0
                        };
                        var i = n.props.initialStep === c.a.StartLogin ? l.b.PassportLoginLoaded : l.b.PassportSignUpLoaded;
                        return n.loadedLatencyEvent = n.props.latencyTracking.registerCustomEvent({
                            benchmark: 1e3,
                            group: l.a.Passport,
                            label: l.c.Loaded,
                            start: l.d.Registration,
                            key: i
                        }), n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(u.Ma, {
                            className: "auth-modal",
                            position: u.Wa.Relative,
                            "data-a-target": "passport-modal"
                        }, r.createElement(p, {
                            action: this.props.action,
                            initialStep: this.props.initialStep,
                            loadedLatencyEvent: this.loadedLatencyEvent
                        }), r.createElement(s.a, {
                            closeOnBackdropClick: !0
                        }))
                    }, t
                }(r.Component),
                h = Object(d.c)("AuthModal", {
                    autoReportInteractive: !0
                })(m);
            n.d(t, !1, function() {
                return m
            }), n.d(t, "b", function() {
                return h
            }), n.d(t, "a", function() {
                return c.a
            })
        },
        ZPFX: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("ZS2+"),
                o = n("/MKj"),
                s = n("fvjX"),
                l = n("/7QA"),
                c = n("sg0o"),
                d = n.n(c),
                u = n("fRbW"),
                p = n.n(u),
                m = n("/0dD"),
                h = n("76Lv"),
                f = n("aCAx"),
                g = n("IX50"),
                v = n("v2f3"),
                b = n("ClZk"),
                y = n("Mn7C"),
                k = n("Ue10"),
                S = (n("ywcS"), function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.display && Object(y.d)()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        !this.props.display && e.display && Object(y.d)()
                    }, t.prototype.render = function() {
                        return this.props.display ? r.createElement(k.Ma, {
                            className: Object(h.c)(m.a.Dark),
                            flexShrink: 0
                        }, r.createElement(k.qb, {
                            className: "gdpr-consent-banner",
                            padding: {
                                x: 2,
                                y: 1
                            },
                            background: k.n.AccentAlt2,
                            color: k.K.Base,
                            position: k.Wa.Relative,
                            attachTop: !0,
                            attachLeft: !0,
                            attachRight: !0,
                            borderBottom: !0,
                            justifyContent: k.La.Center,
                            alignItems: k.c.Center,
                            display: k.R.Flex,
                            flexDirection: k.T.Row
                        }, r.createElement(k.Ma, {
                            className: "gdpr-consent-banner__content",
                            justifyContent: k.La.Center,
                            display: k.R.Flex,
                            flexDirection: k.T.Column,
                            overflow: k.Pa.Hidden,
                            breakpointSmall: {
                                flexDirection: k.T.Row,
                                alignItems: k.c.Center
                            }
                        }, r.createElement(k.Ma, {
                            margin: {
                                right: 2
                            },
                            className: "gdpr-consent-banner__image",
                            flexShrink: 0,
                            display: k.R.Hide,
                            breakpointSmall: {
                                display: k.R.Block
                            }
                        }, r.createElement(k.N, {
                            src: d.a,
                            srcSet: {
                                "1x": d.a,
                                "2x": p.a
                            },
                            alt: Object(l.d)("Cookies", "GDPRConsentBanner")
                        })), r.createElement(k.Q, {
                            className: "gdpr-consent-banner__message"
                        }, Object(l.d)('Twitch and our partners use technologies such as <x:cookies>cookies</x:cookies> on our site to personalize content, deliver interest-based ("personalized") advertising, and analyze user activity. See our <x:privacy>Privacy Policy</x:privacy> to read more. By continuing to use the site you consent to the use of these technologies. Twitch also engages in 3rd-party personalized ad activities to support our services and to provide more relevant ad experiences. By clicking "Accept", you consent to this activity. To learn more, or to decline consent for this activity, click "Manage info".', {
                            "x:cookies": function(e) {
                                return r.createElement(k.O, {
                                    key: "cookies",
                                    to: "https://www.twitch.tv/p/legal/cookie-policy/",
                                    targetBlank: !0
                                }, e)
                            },
                            "x:privacy": function(e) {
                                return r.createElement(k.O, {
                                    key: "privacy",
                                    to: "https://www.twitch.tv/p/legal/privacy-policy/",
                                    targetBlank: !0
                                }, e)
                            }
                        }, "GDPRConsentBanner")), r.createElement(k.Ma, {
                            display: k.R.Flex,
                            flexDirection: k.T.Column,
                            alignItems: k.c.Center,
                            justifyContent: k.La.Center,
                            margin: {
                                top: 1
                            },
                            flexShrink: 0,
                            breakpointSmall: {
                                flexDirection: k.T.Row,
                                margin: {
                                    left: 1,
                                    top: 0
                                }
                            }
                        }, r.createElement(k.Ma, {
                            margin: {
                                bottom: 1
                            },
                            breakpointSmall: {
                                margin: {
                                    right: 1,
                                    bottom: 0
                                }
                            }
                        }, r.createElement(k.v, {
                            onClick: this.props.showConsentTool,
                            type: k.B.Text,
                            "data-a-target": "gdpr-banner-manage-info"
                        }, r.createElement(k.Ma, {
                            padding: {
                                x: 1
                            }
                        }, Object(l.d)("Manage Info", "GDPRConsentBanner")))), r.createElement(k.v, {
                            onClick: this.props.giveConsentToAllVendors,
                            "data-a-target": "gdpr-banner-accept"
                        }, r.createElement(k.Ma, {
                            padding: {
                                x: 1
                            }
                        }, Object(l.d)("Accept", "GDPRConsentBanner"))))))) : null
                    }, t
                }(r.Component)),
                w = Object(o.b)(function(e) {
                    var t = e.gdpr,
                        n = e.ui;
                    return {
                        display: Object(b.d)(t.status) && !n.theatreModeEnabled
                    }
                }, function(e) {
                    return Object(s.b)({
                        giveConsentToAllVendors: g.a,
                        showConsentTool: function() {
                            return Object(f.d)(v.a, {})
                        }
                    }, e)
                })(S),
                E = n("8ssJ"),
                C = n("+Jjl"),
                N = n("Bh3T"),
                T = n("UMvU"),
                _ = n("d0ua"),
                R = n("kRBY");
            var O, I = Object(o.b)(function(e) {
                    return {
                        collapsed: !e.ui.sideNavExpanded,
                        isLoggedIn: Object(R.e)(e),
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                }, function(e) {
                    return Object(s.b)({
                        collapseSideNav: _.r,
                        expandSideNav: _.y
                    }, e)
                })(T.a),
                D = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            content: null,
                            isError: !1
                        }, n.logger = l.j.withCategory("StickyFooterRoot"), n.displayContent = function(e) {
                            n.setState({
                                content: e
                            })
                        }, n.hideContent = function() {
                            n.setState({
                                content: null
                            })
                        }, O && n.logger.error(new Error("StickyFooterRoot is already mounted."), "StickyFooterRoot is already mounted. There should only be one of these mounted at a time."), O = n, n
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("StickyFooterRoot"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        O = null
                    }, t.prototype.render = function() {
                        return this.state.isError || !this.state.content ? null : r.createElement(k.Ma, null, this.state.content)
                    }, t
                }(r.Component),
                P = null,
                x = (function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        if (P) {
                            var i = "There may only be one StickyFooter mounted at a time.";
                            l.j.error(new Error(i), i)
                        }
                        return P = n, n
                    }
                    i.d(t, e), t.prototype.componentDidMount = function() {
                        O && O.displayContent(this.props.children)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        O && (e.children ? O.displayContent(e.children) : O.hideContent())
                    }, t.prototype.componentWillUnmount = function() {
                        O && O.hideContent(), P = null
                    }, t.prototype.render = function() {
                        return null
                    }
                }(r.Component), n("sSlw")),
                L = n("Gw3k"),
                F = n("nTF4"),
                M = n("eO8H"),
                A = n("YEj9"),
                U = n("ZDlU"),
                B = n("zB42"),
                j = n("VwD5"),
                z = n("GnwI"),
                W = n("oJmH"),
                V = n("Fxe2"),
                H = n("tuvy"),
                G = n("dtw8");
            var q = Object(o.b)(function(e) {
                    var t = Object(R.d)(e);
                    return {
                        isLoggedIn: Object(R.e)(e),
                        userLogin: t && t.login
                    }
                })(function(e) {
                    return e.isLoggedIn && e.userLogin === e.match.params.channelLogin.toLowerCase() ? r.createElement(G.b, {
                        to: "/settings/profile"
                    }) : r.createElement(G.b, {
                        to: "/"
                    })
                }),
                Q = n("yR8l"),
                K = n("EOHf"),
                Y = n("Eo7B"),
                X = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.redirectToSubCheckout = function() {
                            var e = new URL(window.location.href);
                            e.pathname = "/products/" + t.productName, window.location.assign(e.toString())
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        !this.props.data.loading && this.productName && this.redirectToSubCheckout()
                    }, t.prototype.componentDidUpdate = function() {
                        !this.props.data.loading && this.productName && this.redirectToSubCheckout()
                    }, t.prototype.render = function() {
                        return this.props.data.user && this.productName ? r.createElement(k.Oa, {
                            fillContent: !0
                        }) : this.props.data.loading ? r.createElement(k.Oa, {
                            fillContent: !0
                        }) : r.createElement(K.a, null)
                    }, Object.defineProperty(t.prototype, "productName", {
                        get: function() {
                            if (this.props.data.user && this.props.data.user.subscriptionProducts) {
                                var e = this.props.data.user.subscriptionProducts[0];
                                return e && e.name
                            }
                            return null
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(r.Component),
                $ = Object(Q.a)(Y, {
                    options: function(e) {
                        return {
                            variables: {
                                channelLogin: e.match.params.channelLogin
                            }
                        }
                    }
                })(X),
                J = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(51)]).then(n.bind(null, "XH7V"))
                }, "ChannelClipsPage"),
                Z = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(50)]).then(n.bind(null, "5qQ0"))
                }, "ChannelCollectionsPage"),
                ee = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(49)]).then(n.bind(null, "0PcG"))
                }, "ChannelEventsPage"),
                te = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(48)]).then(n.bind(null, "ibCL"))
                }, "ChannelFollowersPage"),
                ne = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(47)]).then(n.bind(null, "Zcpz"))
                }, "ChannelFollowingPage"),
                ie = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(46)]).then(n.bind(null, "JNF5"))
                }, "ChannelPage"),
                re = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(45)]).then(n.bind(null, "DOLr"))
                }, "ChannelRoot"),
                ae = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(44)]).then(n.bind(null, "AaPt"))
                }, "ChannelVideosPage"),
                oe = a.a.wrap(function() {
                    return n.e(59).then(n.bind(null, "rVsl"))
                }, "MessagesPage"),
                se = a.a.wrap(function() {
                    return n.e(43).then(n.bind(null, "juOe"))
                }, "ReportUserPage"),
                le = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(42)]).then(n.bind(null, "4JFD"))
                }, "VideoWatchPage"),
                ce = function(e) {
                    return r.createElement(M.c, {
                        to: "/popout/" + e.match.params.channelLogin + "/chat"
                    })
                },
                de = function(e) {
                    return r.createElement(M.c, {
                        to: "/" + e.match.params.channelLogin + "/videos/all"
                    })
                },
                ue = function(e) {
                    return r.createElement(M.c, {
                        to: "/" + e.match.params.channelLogin + "/videos/archive"
                    })
                },
                pe = function(e) {
                    return window.location.replace(l.a.playerBaseURL + "/?channel=" + e.match.params.channelLogin), null
                };

            function me(e) {
                var t = Object(V.a)(e.match.params.videoID);
                return r.createElement(M.c, {
                    to: "/videos/" + t
                })
            }
            var he = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isError: !1
                        }, t.logger = l.o.logger.withCategory("channel-page-redesign-router"), t
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("ChannelPageRedesignRouter"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        if (this.state.isError) return r.createElement(U.a, {
                            message: Object(l.d)("An error occurred on this page", "ChannelPageRouter")
                        });
                        var e = Object(H.a)();
                        return !Object(H.d)() && Object(H.c)(this.props.location.pathname) && (e = !1), r.createElement(M.e, null, e ? r.createElement(M.d, {
                            path: "/collections/:collectionID",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/collections/:collectionID",
                            component: le
                        }), r.createElement(M.d, {
                            path: "/videos/v:videoID",
                            render: me
                        }), e ? r.createElement(M.d, {
                            path: "/videos/:videoID",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/videos/:videoID",
                            component: le
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin",
                            component: re,
                            exact: !0
                        }) : r.createElement(M.d, {
                            path: "/:channelName",
                            component: ie,
                            exact: !0
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/about",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelName/about",
                            component: ie
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/clips",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelName/clips",
                            component: J
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/chat",
                            render: ce
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/collections",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/collections",
                            component: Z
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/embed",
                            render: pe
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/esports-loot",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/esports-loot",
                            component: ie
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/esports-pass",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/esports-pass",
                            component: ie
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/esports-progress",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/esports-progress",
                            component: ie
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/events",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/events",
                            component: ee
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/followers",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/followers",
                            component: te
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/following",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/following",
                            component: ne
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/inbox",
                            component: oe
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/outbox",
                            component: oe
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/profile",
                            render: de
                        }), r.createElement(M.d, {
                            path: "/:channelName/report",
                            component: se
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/p/:entityID",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelName/p/:entityID",
                            component: ie
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/popout",
                            render: pe
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/rooms/:roomName",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelName/rooms/:roomName",
                            component: ie
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/videos/(past_broadcasts?)",
                            render: ue
                        }), e ? r.createElement(M.d, {
                            path: "/:channelLogin/videos/:filter(all|archive|upload|highlight|past_premiere)",
                            component: re
                        }) : r.createElement(M.d, {
                            path: "/:channelLogin/videos/:filter(all|archive|upload|highlight|past_premiere)",
                            component: ae
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/videos/:unknownFilter?",
                            render: de
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/settings",
                            component: q
                        }), r.createElement(M.d, {
                            path: "/:channelLogin/subscribe",
                            component: $
                        }), r.createElement(M.d, {
                            path: "*",
                            component: K.a
                        }))
                    }, t
                }(r.Component),
                fe = Object(W.compose)(Object(z.c)("ChannelPageRedesignRouter", {
                    autoReportInteractive: !0
                }), M.f)(he),
                ge = a.a.wrap(function() {
                    return n.e(75).then(n.bind(null, "wh8/"))
                }, "AnonFrontPage"),
                ve = a.a.wrap(function() {
                    return n.e(74).then(n.bind(null, "moen"))
                }, "BroadcastPage"),
                be = a.a.wrap(function() {
                    return n.e(73).then(n.bind(null, "99ae"))
                }, "BrowseRootPage"),
                ye = a.a.wrap(function() {
                    return n.e(72).then(n.bind(null, "otOH"))
                }, "CommunityModerationRoot"),
                ke = a.a.wrap(function() {
                    return n.e(71).then(n.bind(null, "FvFK"))
                }, "CreateCommunityPage"),
                Se = a.a.wrap(function() {
                    return n.e(70).then(n.bind(null, "dQAD"))
                }, "DevOnlyRoot"),
                we = a.a.wrap(function() {
                    return n.e(69).then(n.bind(null, "mpcK"))
                }, "DirectoryRootPage"),
                Ee = a.a.wrap(function() {
                    return n.e(68).then(n.bind(null, "AtgE"))
                }, "EmailUnsubscribePage"),
                Ce = a.a.wrap(function() {
                    return n.e(67).then(n.bind(null, "VkGE"))
                }, "EmailVerificationPage"),
                Ne = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(66)]).then(n.bind(null, "4c/Z"))
                }, "EventLandingPage"),
                Te = a.a.wrap(function() {
                    return n.e(65).then(n.bind(null, "lQdQ"))
                }, "ExtensionsRoot"),
                _e = a.a.wrap(function() {
                    return n.e(64).then(n.bind(null, "Uyt6"))
                }, "FollowingRootPage"),
                Re = a.a.wrap(function() {
                    return n.e(63).then(n.bind(null, "0fnA"))
                }, "FrontPage"),
                Oe = a.a.wrap(function() {
                    return n.e(62).then(n.bind(null, "O0y+"))
                }, "FriendRequestsPage"),
                Ie = a.a.wrap(function() {
                    return n.e(61).then(n.bind(null, "2W9R"))
                }, "FriendsPage"),
                De = a.a.wrap(function() {
                    return n.e(60).then(n.bind(null, "UqZg"))
                }, "InventoryPage"),
                Pe = a.a.wrap(function() {
                    return n.e(59).then(n.bind(null, "rVsl"))
                }, "MessagesPage"),
                xe = a.a.wrap(function() {
                    return n.e(58).then(n.bind(null, "uHYy"))
                }, "PartnershipSignup"),
                Le = a.a.wrap(function() {
                    return n.e(57).then(n.bind(null, "4Agi"))
                }, "DesklightModsRootPage"),
                Fe = a.a.wrap(function() {
                    return Promise.all([n.e(32), n.e(0), n.e(56)]).then(n.bind(null, "cz4h"))
                }, "PaymentsLandingPage"),
                Me = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(55)]).then(n.bind(null, "EOaz"))
                }, "SettingsRoot"),
                Ae = a.a.wrap(function() {
                    return n.e(54).then(n.bind(null, "UGMo"))
                }, "SubscriptionsManagementPage"),
                Ue = a.a.wrap(function() {
                    return n.e(53).then(n.bind(null, "c0BZ"))
                }, "UnsubscribePage"),
                Be = a.a.wrap(function() {
                    return Promise.all([n.e(0), n.e(52)]).then(n.bind(null, "dlEs"))
                }, "ClipsWatchPage");

            function je() {
                return window.location.assign(window.location.href), null
            }

            function ze(e) {
                return r.createElement(M.c, {
                    to: "/directory/game/" + e.match.params.encodedCommunityName + "/videos/all"
                })
            }

            function We() {
                return r.createElement(M.c, {
                    path: "/",
                    to: "/directory/following"
                })
            }

            function Ve() {
                return r.createElement(M.c, {
                    to: "/directory/all/xbox"
                })
            }

            function He() {
                return r.createElement(M.c, {
                    to: "/manager/upload"
                })
            }

            function Ge() {
                return window.location.replace("/p/terms-of-service"), null
            }

            function qe() {
                return window.location.replace(j.a), null
            }
            var Qe = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isError: !1
                        }, t.logger = l.o.logger.withCategory("default-root-router"), t
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            l.o.stats.recordComponentError("DefaultRootRouter"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        return this.state.isError ? r.createElement(U.a, {
                            message: Object(l.d)("An error occurred on this page", "DefaultRootRouter")
                        }) : r.createElement(M.e, null, l.a.buildType !== B.a.Production && r.createElement(M.d, {
                            path: "/_dev",
                            component: Se
                        }), r.createElement(M.d, {
                            exact: !0,
                            path: "/",
                            component: this.props.isLoggedIn ? Re : ge
                        }), r.createElement(M.d, {
                            path: "/activate",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/bits",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/bits-checkout",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/checkout",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/products",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/embed",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/popout",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/prime",
                            render: je
                        }), l.a.buildType !== B.a.Production && r.createElement(M.d, {
                            path: "/sq",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/subs",
                            render: je
                        }), r.createElement(M.d, {
                            path: "/broadcast",
                            component: ve
                        }), r.createElement(M.d, {
                            path: "/collections/:collectionID",
                            component: fe
                        }), r.createElement(M.d, {
                            path: "/communities/create",
                            component: ke
                        }), r.createElement(M.d, {
                            path: "/communities/:encodedCommunityName/details",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/communities/:encodedCommunityName/moderation/:page?",
                            component: ye
                        }), r.createElement(M.d, {
                            path: "/communities/:encodedCommunityName/:encodedLanguage",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/communities/:encodedCommunityName",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/communities",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/creative",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/following/:category?",
                            component: _e
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName/clips",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName/details",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName/videos/:filter",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName/videos",
                            render: ze
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName/:encodedLanguage",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/game/:encodedCommunityName",
                            component: we
                        }), r.createElement(M.d, {
                            path: "/directory/all/ps4",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/all/xb1",
                            render: Ve
                        }), r.createElement(M.d, {
                            path: "/directory/all/xbox",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/all/:encodedLanguage",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/all",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/directory/:category?",
                            component: be
                        }), r.createElement(M.d, {
                            path: "/events/:eventName",
                            component: Ne
                        }), r.createElement(M.d, {
                            path: "/email-unsubscribe",
                            component: Ee
                        }), r.createElement(M.d, {
                            path: "/email-verification/:emailOpaqueId",
                            component: Ce
                        }), r.createElement(M.d, {
                            path: "/ext",
                            component: Te
                        }), r.createElement(M.d, {
                            path: "/friends/requests",
                            component: Oe
                        }), r.createElement(M.d, {
                            path: "/friends",
                            component: Ie
                        }), r.createElement(M.d, {
                            path: "/following",
                            render: We
                        }), r.createElement(M.d, {
                            path: "/inbox",
                            component: Pe
                        }), r.createElement(M.d, {
                            path: "/inventory",
                            component: De
                        }), r.createElement(M.d, {
                            path: "/messages/:pageName?",
                            component: Pe
                        }), r.createElement(M.d, {
                            path: "/outbox",
                            component: Pe
                        }), r.createElement(M.d, {
                            exact: !0,
                            path: "/partner/signup",
                            component: xe
                        }), r.createElement(M.d, {
                            path: "/payments",
                            component: Fe
                        }), r.createElement(M.d, {
                            path: "/profile",
                            component: A.a,
                            exact: !0
                        }), r.createElement(M.d, {
                            path: "/store",
                            render: qe
                        }), r.createElement(M.d, {
                            path: "/store/merch",
                            render: qe
                        }), r.createElement(M.d, {
                            path: "/subscriptions",
                            component: Ae
                        }), r.createElement(M.d, {
                            path: "/settings/:tab?",
                            component: Me
                        }), r.createElement(M.d, {
                            path: "/unsubscribe/:productName",
                            component: Ue
                        }), r.createElement(M.d, {
                            path: "/upload",
                            render: He,
                            exact: !0
                        }), r.createElement(M.d, {
                            path: "/user/legal",
                            render: Ge,
                            exact: !0
                        }), r.createElement(M.d, {
                            path: "/videos/v:videoID",
                            component: fe
                        }), r.createElement(M.d, {
                            path: "/videos/:videoID",
                            component: fe
                        }), l.a.buildType !== B.a.Production && r.createElement(M.d, {
                            path: "/clips/:slugID",
                            component: Be
                        }), l.a.buildType !== B.a.Production && l.o.integrations.desklight && r.createElement(M.d, {
                            path: "/mods",
                            component: Le
                        }), r.createElement(M.d, {
                            path: "*",
                            component: fe
                        }))
                    }, t
                }(r.Component),
                Ke = Object(z.c)("DefaultRootRouter", {
                    autoReportInteractive: !0
                })(Qe);
            n.d(t, "b", function() {
                return Xe
            }), n.d(t, "a", function() {
                return $e
            });
            var Ye = a.a.wrap(function() {
                    return n.e(76).then(n.bind(null, "3iFw"))
                }, "Whispers", {
                    failSilently: !0,
                    placeholder: null
                }),
                Xe = "twilight-main",
                $e = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {}, t.setRootScrollableContentRef = function(e) {
                            t.setState({
                                rootScrollableContentRef: e
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(k.Ma, {
                            display: k.R.Flex,
                            flexDirection: k.T.Column,
                            flexWrap: k.U.NoWrap,
                            fullHeight: !0
                        }, r.createElement(w, null), r.createElement(L.a, null), this.props.firstPageLoaded && this.props.isLoggedIn && r.createElement(F.a, null), r.createElement(k.Ma, {
                            display: k.R.Flex,
                            flexWrap: k.U.NoWrap,
                            position: k.Wa.Relative,
                            overflow: k.Pa.Hidden,
                            fullHeight: !0
                        }, r.createElement(I, null), r.createElement(k.Fa, {
                            overflow: k.Pa.Hidden,
                            position: k.Wa.Relative,
                            flexGrow: 1,
                            fullHeight: !0,
                            fullWidth: !0,
                            display: k.R.Flex,
                            flexDirection: k.T.Column,
                            zIndex: this.props.theatreModeEnabled ? void 0 : k.Tb.Default
                        }, r.createElement("main", {
                            className: Xe
                        }, r.createElement(x.b, null), r.createElement(N.a, {
                            contentRefDelegate: this.setRootScrollableContentRef
                        }, r.createElement(Ke, {
                            isLoggedIn: this.props.isLoggedIn
                        }), r.createElement(E.b, {
                            mainRef: this.state.rootScrollableContentRef
                        })), r.createElement(D, null), this.props.firstPageLoaded && r.createElement(Ye, null))), r.createElement(C.a, null)))
                    }, t
                }(r.Component)
        },
        "ZS2+": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("gvGA"),
                s = n("ZDlU"),
                l = n("Ue10"),
                c = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            showLoader: !1,
                            error: !1
                        }, n
                    }
                    return i.d(t, e), t.wrap = function(e, n, i) {
                        return function(a) {
                            return r.createElement(o.a, {
                                content: r.createElement(s.a, null)
                            }, r.createElement(t, {
                                loader: e,
                                component: n,
                                componentProps: a,
                                failSilently: !(!i || !i.failSilently),
                                onRendered: i && i.onRendered,
                                placeholder: i && i.placeholder
                            }))
                        }
                    }, t.prototype.componentDidUpdate = function(e, t) {
                        !t.Component && this.state.Component && this.props.onRendered && this.props.onRendered()
                    }, t.prototype.componentDidMount = function() {
                        return i.b(this, void 0, void 0, function() {
                            var e, t, n;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return i.trys.push([0, 2, , 3]), [4, this.props.loader()];
                                    case 1:
                                        return e = i.sent(), (t = e[this.props.component]) || a.j.fatal(new Error("Component not found."), "Component not found.", {
                                            component: this.props.component
                                        }), this.setState({
                                            Component: t,
                                            showLoader: !1,
                                            error: !t
                                        }), [3, 3];
                                    case 2:
                                        return n = i.sent(), a.j.fatal(n, "Error loading module.", {
                                            component: this.props.component
                                        }), this.setState({
                                            Component: void 0,
                                            showLoader: !1,
                                            error: !0
                                        }), [3, 3];
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }, t.prototype.render = function() {
                        return this.state.Component ? r.createElement(this.state.Component, i.a({}, this.props.componentProps)) : this.state.error ? this.props.failSilently ? null : r.createElement(s.a, {
                            message: Object(a.d)("Failed to load module.", "Loadable")
                        }) : void 0 !== this.props.placeholder ? this.props.placeholder : r.createElement(l.Oa, {
                            fillContent: !0
                        })
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return c
            })
        },
        "ZqP/": function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.StartLogin = "startLogin", e.StartSignup = "startSignup", e.FacebookSignup = "facebookStartup", e.LoginTwoFactor = "loginTwoFactor", e.LoginCaptcha = "loginCaptcha", e.FacebookConnect = "facebookConnect", e.FacebookLogin = "facebookLogin", e.FacebookConnectTwoFactor = "facebookConnectTwoFactor", e.FacebookLoginTwoFactor = "facebookLoginTwoFactor", e.FacebookConnectCaptcha = "facebookConnectCaptcha"
                }(i || (i = {}))
        },
        Zsw8: function(e, t, n) {},
        a1OF: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return u
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "f", function() {
                return m
            }), n.d(t, "c", function() {
                return h
            }), n.d(t, "e", function() {
                return f
            }), n.d(t, "d", function() {
                return g
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("oe5X"),
                o = n("0FG4"),
                s = n("kRBY"),
                l = n("60o1"),
                c = ["#FF0000", "#0000FF", "#008000", "#B22222", "#FF7F50", "#9ACD32", "#FF4500", "#2E8B57", "#DAA520", "#D2691E", "#5F9EA0", "#1E90FF", "#FF69B4", "#8A2BE2", "#00FF7F"],
                d = {};

            function u(e, t, n, r, a) {
                void 0 === a && (a = !1);
                var o = function(e) {
                        var t = {};
                        e && Object.keys(e).forEach(function(n) {
                            var i = e[n];
                            i.forEach(function(e) {
                                t[e.startIndex] = {
                                    startIndex: e.startIndex,
                                    endIndex: e.endIndex,
                                    id: n
                                }
                            })
                        });
                        return t
                    }(t.emotes),
                    s = Object(l.a)(t.displayName, t.username);
                return {
                    badges: t.badges || {},
                    bits: t.bits,
                    user: i.a({}, s, {
                        userLogin: t.username,
                        userID: t.userID,
                        userType: t.userType,
                        color: t.color || p(t.userID)
                    }),
                    messageParts: m(e, o, t.bits, n, r, t.username),
                    deleted: a,
                    timestamp: Date.now()
                }
            }

            function p(e, t) {
                return void 0 === t && (t = 15), "number" != typeof d[e] && (d[e] = Math.floor(Math.random() * t)), c[d[e]]
            }

            function m(e, t, n, i, l, c) {
                var d = Object(s.d)(r.o.store.getState()),
                    u = {
                        cheers: n ? i : void 0,
                        emotes: {
                            type: o.a.Position,
                            map: t
                        },
                        links: {
                            blockLinks: l,
                            parseClips: !0,
                            parseVods: !0
                        },
                        mentions: {
                            senderLogin: c,
                            sessionUser: d
                        }
                    };
                return Object(a.a)(e, u)
            }

            function h(e) {
                return e.match(/[^\uD800-\uDFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDFFF]/g)
            }

            function f(e, t) {
                return "https://static-cdn.jtvnw.net/emoticons/v1/" + e + "/" + Math.min(Math.ceil(t), 3) + ".0"
            }

            function g(e) {
                return {
                    src: f(e, 1),
                    srcSet: f(e, 1) + " 1x, " + f(e, 2) + " 2x, " + f(e, 3) + " 4x"
                }
            }
        },
        a8bM: function(e, t, n) {},
        aCAx: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "d", function() {
                return r
            }), n.d(t, "a", function() {
                return a
            }), n.d(t, "c", function() {
                return o
            });
            var i = "core.modal.MODAL_SHOWN";

            function r(e, t) {
                return {
                    type: i,
                    modalComponent: e,
                    modalProps: t
                }
            }
            var a = "core.ui.MODAL_CLOSED";

            function o() {
                return {
                    type: a
                }
            }
        },
        aECu: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FriendButton_AcceptFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "AcceptFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "acceptFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "friendButtonFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 232
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nmutation FriendButton_AcceptFriendRequest($input: AcceptFriendRequestInput!) {\nacceptFriendRequest(input: $input) {\nuser {\nid\n...friendButtonFragment\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        aKpu: function(e, t, n) {},
        aP6e: function(e, t, n) {},
        aU7c: function(e, t, n) {},
        "as+V": function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("NSwr"),
                s = n("Ue10"),
                l = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.onHistoryChange = function(e) {
                            n.setState({
                                currentPathname: e.pathname
                            })
                        }, n.shouldShow = function() {
                            return n.props.link && n.state.currentPathname !== n.props.link.pathname
                        };
                        var i = a.o.experiments.getAssignment("TWILIGHT_EXTENDED_PRESENCE");
                        return n.state = {
                            currentPathname: location.pathname,
                            hasExtendedRichPresence: "variant_a" === i
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.historyUnlisten = a.o.history.listen(this.onHistoryChange)
                    }, t.prototype.componentWillUnmount = function() {
                        this.historyUnlisten()
                    }, t.prototype.render = function() {
                        if (!this.props.link || !this.shouldShow()) return null;
                        var e = Object(a.d)("Join", "JoinButton");
                        return this.props.availability === o.a.Offline && this.state.hasExtendedRichPresence && (e = Object(a.d)("Watch", "JoinButton")), r.createElement(s.v, {
                            linkTo: this.props.link,
                            onClick: this.props.onClick,
                            overlay: this.props.shouldHollowOverlay,
                            size: s.z.Small,
                            tabIndex: -1,
                            type: this.props.shouldHollowOverlay ? s.B.Hollow : s.B.Default
                        }, e)
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return l
            })
        },
        atdg: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("YV3K"),
                a = n("XDQu"),
                o = n("mrSG"),
                s = n("q1tI"),
                l = n("9rZX"),
                c = n("/7QA"),
                d = n("76Lv"),
                u = (n("oINn"), null),
                p = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            isError: !1
                        }, n.logger = c.o.logger.withCategory("modal-root"), u && n.logger.error(new Error("There should only be one ModalRoot component mounted at a time."), "ModalRoot is already mounted."), u = n, n
                    }
                    return o.d(t, e), t.prototype.componentWillUnmount = function() {
                        u = null
                    }, t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            c.o.stats.recordComponentError("ModalRoot"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.render = function() {
                        return this.state.isError ? null : s.createElement(l, {
                            isOpen: this.props.showModal,
                            contentLabel: "Modal",
                            className: "modal__content",
                            overlayClassName: "modal__backdrop js-modal-backdrop " + Object(d.c)(this.props.theme),
                            shouldCloseOnOverlayClick: !1
                        }, this.props.component && s.createElement(this.props.component, o.a({}, this.props.componentProps)))
                    }, t
                }(s.Component);
            var m = Object(i.b)(function(e) {
                return {
                    showModal: e.modal.show,
                    component: e.modal.modalID ? Object(r.a)(e) : null,
                    componentProps: e.modal.modalProps,
                    theme: Object(a.a)(e)
                }
            })(p);
            n.d(t, "a", function() {
                return m
            }), n.d(t, "b", function() {
                return "js-modal-backdrop"
            })
        },
        b52s: function(e, t, n) {},
        b7GR: function(e, t, n) {},
        "bAm+": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("geRD"),
                o = n("Wcon"),
                s = {};

            function l(e, t) {
                var n = s[e.threadID];
                if (n) {
                    if (n.lastReadCursorID >= t) return;
                    clearTimeout(n.timeoutHandle)
                }
                var l = setTimeout(function() {
                    var t = i.a({
                        mutation: o
                    }, Object(a.a)({
                        threadID: e.threadID,
                        lastReadMessageID: e.lastReadMessageID
                    }), {
                        optimisticResponse: {
                            updateWhisperThread: {
                                thread: {
                                    __typename: "WhisperThread",
                                    id: e.threadID,
                                    unreadMessagesCount: 0
                                },
                                __typename: "UpdateWhisperThreadPayload"
                            }
                        }
                    });
                    r.o.apollo.client.mutate(t), delete s[e.threadID]
                }, 250);
                s[e.threadID] = {
                    timeoutHandle: l,
                    lastReadCursorID: t
                }
            }
        },
        bq0i: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("f00E"),
                s = n("Ue10");
            ! function(e) {
                e.BalloonInsideClickDetector = "balloon-inside-click-detector", e.MouseEnterDetector = "toggle-balloon-wrapper__mouse-enter-detector"
            }(i || (i = {}));
            var l = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        showBalloon: !!t.props.openByDefault,
                        hasInteracted: !!t.props.openByDefault
                    }, t.toggleBalloonId = Object(o.a)(), t.handleButtonClick = function() {
                        t.setState(function(e) {
                            return {
                                showBalloon: !e.showBalloon,
                                hasInteracted: !0
                            }
                        }, function() {
                            t.props.onToggle && t.props.onToggle(!t.state.showBalloon)
                        })
                    }, t.handleGlobalClick = function(e) {
                        e.target.matches('[data-toggle-balloon-id="' + t.toggleBalloonId + '"] *') || t.hideBalloon()
                    }, t.handleInsideBalloonClick = function() {
                        t.hideBalloon()
                    }, t.handleMouseEnter = function() {
                        t.state.hasInteracted || t.setState({
                            hasInteracted: !0
                        })
                    }, t
                }
                return r.d(t, e), t.prototype.componentDidMount = function() {
                    this.props.openByDefault && document.addEventListener("click", this.handleGlobalClick, !0)
                }, t.prototype.componentWillUpdate = function(e, t) {
                    this.state.showBalloon !== t.showBalloon && (t.showBalloon ? document.addEventListener("click", this.handleGlobalClick, !0) : document.removeEventListener("click", this.handleGlobalClick, !0))
                }, t.prototype.componentWillUnmount = function() {
                    document.removeEventListener("click", this.handleGlobalClick, !0)
                }, t.prototype.render = function() {
                    var e = a.Children.toArray(this.props.children);
                    if (2 !== e.length) throw new Error("ToggleBalloonWrapper should only be given two children: a clickable and a Balloon");
                    var t = e[0],
                        n = e[1];
                    if (n.type !== s.q) throw new Error("ToggleBalloonWrapper needs a Balloon as its second child element");
                    var o = a.cloneElement(t, {
                            onClick: this.handleButtonClick
                        }),
                        l = null;
                    (this.state.hasInteracted || this.props.alwaysMountBalloonContent) && (l = a.cloneElement(n, {
                        show: this.state.showBalloon
                    }), this.props.hideBalloonOnInsideClick && (l = a.createElement("div", {
                        "data-test-selector": i.BalloonInsideClickDetector,
                        onClick: this.handleInsideBalloonClick
                    }, l)));
                    var c = o;
                    return this.props.tooltipProps && (c = a.createElement(s.Jb, r.a({}, this.props.tooltipProps), o)), a.createElement(s.Ma, {
                        "data-toggle-balloon-id": this.toggleBalloonId,
                        display: this.props.display,
                        position: s.Wa.Relative
                    }, a.createElement("div", {
                        style: {
                            display: "inherit"
                        },
                        onMouseEnter: this.handleMouseEnter,
                        "data-test-selector": i.MouseEnterDetector
                    }, c), l)
                }, t.prototype.toggleBalloon = function(e) {
                    void 0 === e && (e = !this.state.showBalloon), this.setState({
                        showBalloon: e,
                        hasInteracted: !0
                    })
                }, t.prototype.hideBalloon = function() {
                    var e = this;
                    this.setState({
                        showBalloon: !1
                    }, function() {
                        e.props.onToggle && e.props.onToggle(!1)
                    })
                }, t
            }(a.Component)
        },
        br9A: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "b", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("2xye"),
                o = n("I6K6"),
                s = n("RuiO"),
                l = {
                    BuyGiftSub: "buy_gift_sub",
                    ClickCheckout: "click_checkout_button",
                    ClickMoreSubOptions: "more_options_click",
                    ClickGiftSubOptions: "gift_options_click",
                    ClickPrimeFAQ: "click_prime_faq",
                    ClickSignupForPrime: "click_signup_for_prime",
                    ClickBack: "back_top_level",
                    CloseSubMenu: "close_subscribe_menu",
                    GiftASub: "gift_a_sub",
                    OpenSubMenu: "open_subscribe_menu",
                    SubWithPrime: "samus_spend_credit"
                };

            function c(e) {
                return i.b(this, void 0, void 0, function() {
                    var t, n, l, c, d, u, p, m, h, f, g, v, b;
                    return i.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                t = r.n.getVideoPlayerTrackingData().vodID, n = !!t, l = {
                                    channelID: e.channelID,
                                    withVideo: !1
                                }, n && (l.withVideo = !0, l.videoID = t), c = null, i.label = 1;
                            case 1:
                                return i.trys.push([1, 3, , 4]), [4, r.o.apollo.client.query({
                                    query: s,
                                    variables: l
                                })];
                            case 2:
                                return c = i.sent(), [3, 4];
                            case 3:
                                return d = i.sent(), r.j.error(d, "Failed to make query for channel info in FollowEvent reporting.", {
                                    channelID: e.channelID
                                }), [3, 4];
                            case 4:
                                return u = c && c.data && c.data.user || null, c && !u && r.j.error(new Error("GraphQL empty response"), "Query for channel info in SubEvent reporting returned no data.", {
                                    channelID: e.channelID
                                }), p = null, c && n && ((m = c && c.data && c.data.video) ? p = Object(o.a)(m.broadcastType) : r.j.error(new Error("GraphQL empty response"), "Query for video info in SubEvent reporting returned no data.", {
                                    currentVideoID: t
                                })), h = u && u.self, f = h ? !!h.subscriptionBenefit : null, g = h && h.subscriptionBenefit && h.subscriptionBenefit.purchasedWithPrime || !1, v = h ? h.canPrimeSubscribe : null, b = {
                                    action: e.action,
                                    can_subscribe: v,
                                    channel: e.channelLogin,
                                    channel_id: e.channelID,
                                    checkout_button_tier: e.checkoutButtonTier,
                                    has_sub_credit: e.hasSubCredit,
                                    host_channel: e.hostChannelLogin,
                                    host_channel_id: e.hostChannelID,
                                    is_menu_open: e.isMenuOpen,
                                    is_subscribed: f,
                                    is_subscribed_current_tier: h && h.subscriptionBenefit && h.subscriptionBenefit.tier,
                                    sub_location: e.sub_location,
                                    sub_recipient: e.giftRecipient,
                                    modal: e.modal,
                                    modal_level: e.modalLevel || "",
                                    show_prime_content: e.showPrimeContent,
                                    show_resub: u ? v && g : null,
                                    vod_id: t,
                                    vod_type: p,
                                    viewport_height: window.innerHeight,
                                    viewport_width: window.innerWidth
                                }, r.n.track(a.SpadeEventType.Subscription, b), [2]
                        }
                    })
                })
            }
        },
        bvBK: function(e, t, n) {},
        c5fr: function(e, t, n) {},
        cGJr: function(e, t, n) {},
        cMjZ: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("o4DC");

            function r(e) {
                return e && Object(i.c)(e) || ""
            }
        },
        "cT/0": function(e, t, n) {},
        cTNz: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return a
            }), n.d(t, "c", function() {
                return o
            }), n.d(t, "d", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "f", function() {
                return c
            }), n.d(t, "e", function() {
                return d
            }), n.d(t, "g", function() {
                return u
            }), n.d(t, "i", function() {
                return p
            }), n.d(t, "h", function() {
                return m
            });
            var i = n("uhBA"),
                r = n("/7QA"),
                a = {
                    directory: {
                        banner: "dfp-directory-banner",
                        rectangle: "dfp-directory-rectangle"
                    },
                    channel250: "google_companion_300x250",
                    anonFront: {
                        rect: "Twitch_FPMedRect_holder",
                        banner: "Twitch_FPopaBanner_holder",
                        takeover: "Twitch_FPTakeoverSkinv2_holder",
                        bottom: "Twitch_FP970Bottom_holder",
                        sizzle: "sizzle_strip"
                    },
                    front: {
                        leaderboard: "hpto_logged_in_leaderboard",
                        rightTop: "hpto_logged_in_rcol_top",
                        rightBottom: "hpto_logged_in_rcol_bottom"
                    },
                    newFront: {
                        top: "Twitch_FPTop",
                        after2ndShelf: "Twitch_FPAfter2ndShelf",
                        after4thShelf: "Twitch_FPAfter4thShelf"
                    }
                },
                o = {
                    directory: {
                        banner: [
                            [970, 66],
                            [970, 250],
                            [728, 90]
                        ],
                        rectangle: [
                            [300, 250]
                        ]
                    },
                    channel250: [300, 250],
                    anonFront: {
                        rect: [
                            [300, 250]
                        ],
                        banner: [
                            [970, 418],
                            [970, 67],
                            [970, 250],
                            [970, 150],
                            [980, 250]
                        ],
                        takeover: [
                            [1, 1]
                        ],
                        bottom: [
                            [970, 66],
                            [728, 90]
                        ],
                        sizzle: [
                            [980, 250]
                        ]
                    },
                    front: {
                        leaderboard: [
                            [970, 66],
                            [728, 90]
                        ],
                        rightTop: [
                            [300, 250]
                        ],
                        rightBottom: [
                            [300, 600]
                        ]
                    },
                    newFront: {
                        top: [
                            [970, 66],
                            [728, 90]
                        ],
                        after2ndShelf: [
                            [970, 250]
                        ],
                        after4thShelf: [
                            [970, 66],
                            [970, 67]
                        ]
                    }
                },
                s = {
                    directory: "/" + r.a.dfpNetworkCode + "/twitch/directory",
                    channel: "/" + r.a.dfpNetworkCode + "/twitch/channels",
                    frontpage: "/" + r.a.dfpNetworkCode + "/twitch/homepage",
                    sizzle: "/" + r.a.dfpNetworkCode + "/twitch/sizzle_strip"
                },
                l = {
                    games: "games",
                    channel: "channel",
                    frontpage: "homepage"
                },
                c = "ads.slot-render-end",
                d = "ads.slot-ready",
                u = new i.EventEmitter;

            function p(e) {
                u.emit(c, e)
            }

            function m(e) {
                u.emit(d, e)
            }
        },
        cZKs: function(e, t, n) {
            "use strict";
            var i = n("nHFd");
            n.d(t, "a", function() {
                return i.a
            })
        },
        cinR: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI");
            ! function(e) {
                e.PrimeTrackingButtonWrapper = "test_selector_prime_tracking_button_wrapper"
            }(i || (i = {}));
            var o = 200,
                s = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.hoverTimer = 0, t.onMouseEnter = function(e) {
                            t.clearTimeout(), t.hoverTimer = setTimeout(function() {
                                t.props.onHover && t.props.onHover(e)
                            }, o)
                        }, t.onMouseLeave = function() {
                            t.clearTimeout()
                        }, t.onClick = function(e) {
                            t.props.onClick && t.props.onClick(e), t.clearTimeout()
                        }, t.clearTimeout = function() {
                            t.hoverTimer && (clearTimeout(t.hoverTimer), t.hoverTimer = 0)
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentWillUnmount = function() {
                        this.clearTimeout()
                    }, t.prototype.render = function() {
                        return a.createElement("div", {
                            "data-test-selector": i.PrimeTrackingButtonWrapper,
                            onMouseEnter: this.onMouseEnter,
                            onMouseLeave: this.onMouseLeave,
                            onClick: this.onClick
                        }, this.props.children)
                    }, t
                }(a.Component);
            n.d(t, !1, function() {
                return i
            }), n.d(t, "a", function() {
                return s
            })
        },
        cpJf: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return i
            });
            var i, r = {
                    TriHard: {
                        count: 196568036
                    },
                    Kappa: {
                        count: 192158118
                    },
                    "4Head": {
                        count: 155758710
                    },
                    PogChamp: {
                        count: 151485090
                    },
                    cmonBruh: {
                        count: 146352878
                    },
                    BibleThump: {
                        count: 56472964
                    },
                    WutFace: {
                        count: 45069031
                    },
                    Kreygasm: {
                        count: 41387580
                    },
                    DansGame: {
                        count: 38097659
                    },
                    hi5F: {
                        count: 34986404
                    },
                    SMOrc: {
                        count: 34734484
                    },
                    KappaPride: {
                        count: 34262839
                    },
                    VoHiYo: {
                        count: 27886434
                    },
                    SwiftRage: {
                        count: 24561900
                    },
                    ResidentSleeper: {
                        count: 24438298
                    },
                    EleGiggle: {
                        count: 19891526
                    },
                    FailFish: {
                        count: 19118343
                    },
                    NotLikeThis: {
                        count: 18802905
                    },
                    Keepo: {
                        count: 18351415
                    },
                    BabyRage: {
                        count: 18220906
                    },
                    MingLee: {
                        count: 18026207
                    },
                    pbfSSH: {
                        count: 16911241
                    },
                    forsenE: {
                        count: 14960299
                    },
                    HeyGuys: {
                        count: 14851569
                    },
                    ANELE: {
                        count: 14648986
                    },
                    PJSalt: {
                        count: 14438861
                    }
                },
                a = ["354", "49106", "4339", "48", "25", "55338", "70433", "1902", "68856", "81103", "76171", "27509"];
            ! function(e) {
                e.Web = "WEB", e.IOS = "IOS", e.Android = "ANDROID"
            }(i || (i = {}))
        },
        csdq: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FriendButton_RejectFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "RejectFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "rejectFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "friendButtonFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 232
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nmutation FriendButton_RejectFriendRequest($input: RejectFriendRequestInput!) {\nrejectFriendRequest(input: $input) {\nuser {\nid\n...friendButtonFragment\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        ctvI: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return s
            });
            var i = n("/7QA"),
                r = n("f00E"),
                a = n("nQLi"),
                o = n("MgK0");

            function s(e) {
                var t = {
                        next: window.location.href,
                        nonce: Object(r.b)()
                    },
                    n = {
                        client_id: i.a.authSettings.clientID,
                        lang: i.o.intl.getLanguageCode() || "en",
                        login_type: e,
                        redirect_uri: i.a.authSettings.redirectURI,
                        response_type: "token",
                        scope: i.a.authSettings.scopes.join(" "),
                        state: JSON.stringify(t)
                    };
                return i.a.authSettings.embedded && (n.embed = "true"), i.a.authSettings.forceVerify && (n.force_verify = "true"), Object(o.i)(t), Object(a.a)(i.a.passportBaseURL + "/oauth2/authorize", n)
            }
        },
        d0ua: function(e, t, n) {
            "use strict";
            n.d(t, "g", function() {
                return i
            }), n.d(t, "e", function() {
                return r
            }), n.d(t, "f", function() {
                return a
            }), n.d(t, "h", function() {
                return o
            }), n.d(t, "i", function() {
                return s
            }), n.d(t, "m", function() {
                return l
            }), n.d(t, "l", function() {
                return c
            }), n.d(t, "d", function() {
                return d
            }), n.d(t, "c", function() {
                return u
            }), n.d(t, "b", function() {
                return p
            }), n.d(t, "a", function() {
                return m
            }), n.d(t, "j", function() {
                return h
            }), n.d(t, "k", function() {
                return f
            }), n.d(t, "n", function() {
                return g
            }), n.d(t, "q", function() {
                return v
            }), n.d(t, "x", function() {
                return b
            }), n.d(t, "r", function() {
                return y
            }), n.d(t, "y", function() {
                return k
            }), n.d(t, "v", function() {
                return S
            }), n.d(t, "t", function() {
                return w
            }), n.d(t, "u", function() {
                return E
            }), n.d(t, "s", function() {
                return C
            }), n.d(t, "w", function() {
                return N
            }), n.d(t, "p", function() {
                return T
            }), n.d(t, "A", function() {
                return _
            }), n.d(t, "B", function() {
                return R
            }), n.d(t, "o", function() {
                return O
            }), n.d(t, "z", function() {
                return I
            });
            var i = "core.ui.PERSISTENT_PLAYER_TOGGLED",
                r = "core.ui.PERSISTENT_PLAYER_BEGAN_PERSISTING",
                a = "core.ui.PERSISTENT_PLAYER_STOPPED_PERSISTING",
                o = "core.ui.RIGHT_COLUMN_COLLAPSED",
                s = "core.ui.RIGHT_COLUMN_EXPANDED",
                l = "core.ui.THEATRE_ENABLED",
                c = "core.ui.THEATRE_DISABLED",
                d = "core.ui.FULLSCREEN_THEATRE_ENABLED",
                u = "core.ui.FULLSCREEN_THEATRE_DISABLED",
                p = "core.ui.FULLSCREEN_RIGHT_COLUMN_EXPANDED",
                m = "core.ui.FULLSCREEN_RIGHT_COLUMN_COLLAPSED",
                h = "core.ui.SIDE_NAV_COLLAPSED",
                f = "core.ui.SIDE_NAV_EXPANDED",
                g = "core.ui.THEME_CHANGED";

            function v() {
                return {
                    type: o
                }
            }

            function b() {
                return {
                    type: s
                }
            }

            function y() {
                return {
                    type: h
                }
            }

            function k() {
                return {
                    type: f
                }
            }

            function S() {
                return {
                    type: l
                }
            }

            function w() {
                return {
                    type: c
                }
            }

            function E() {
                return {
                    type: d
                }
            }

            function C() {
                return {
                    type: u
                }
            }

            function N() {
                return {
                    type: p
                }
            }

            function T() {
                return {
                    type: m
                }
            }

            function _(e) {
                return {
                    type: g,
                    theme: e
                }
            }

            function R() {
                return {
                    type: i
                }
            }

            function O() {
                return {
                    type: r
                }
            }

            function I() {
                return {
                    type: a
                }
            }
        },
        d2C5: function(e, t, n) {
            "use strict";

            function i() {
                return "serviceWorker" in window.navigator && "PushManager" in window
            }
            n.d(t, "a", function() {
                return i
            })
        },
        dAHa: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/MKj"),
                s = n("fvjX"),
                l = n("/7QA"),
                c = n("yR8l"),
                d = n("BhFH"),
                u = n("iS14"),
                p = n("geRD"),
                m = n("f00E"),
                h = n("2xye"),
                f = n("GnwI"),
                g = n("Ue10"),
                v = (n("OcOS"), "report-wizard-block"),
                b = "report-wizard-unblock",
                y = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            userBlocked: t.props.userBlocked || !1
                        }, t.renderBlock = function() {
                            return a.createElement(g.O, {
                                hoverUnderlineNone: !0,
                                onClick: t.handleBlock,
                                "data-test-selector": v
                            }, a.createElement(g.Ma, {
                                display: g.R.Flex,
                                alignItems: g.c.Center
                            }, a.createElement(g.fb, {
                                type: g.hb.Brand,
                                asset: g.gb.Ban
                            }), a.createElement(g.Ma, {
                                margin: {
                                    left: .5
                                }
                            }, Object(l.d)("Block {user}", {
                                user: t.props.targetUser.displayName
                            }, "ReportWizardBlockActions"))))
                        }, t.renderUnblock = function() {
                            return a.createElement(g.Ma, {
                                className: "reporting-wizard__block-actions",
                                display: g.R.Flex,
                                alignItems: g.c.Center
                            }, a.createElement(g.fb, {
                                type: g.hb.Success,
                                asset: g.gb.FollowCheck
                            }), a.createElement(g.Ma, {
                                margin: {
                                    right: 1
                                }
                            }, a.createElement(g.Q, {
                                className: "block-user__success",
                                type: g.Gb.Span
                            }, Object(l.d)("{user} blocked", {
                                user: t.props.targetUser.displayName
                            }, "ReportWizardBlockActions"))), a.createElement(g.O, {
                                hoverUnderlineNone: !0,
                                onClick: t.handleUnblock,
                                "data-test-selector": b
                            }, a.createElement(g.Ma, {
                                margin: {
                                    left: .5
                                }
                            }, Object(l.d)("Unblock", "ReportWizardBlockActions"))))
                        }, t.handleBlock = function() {
                            return r.b(t, void 0, void 0, function() {
                                return r.e(this, function(e) {
                                    return this.props.onBlock(), this.setState({
                                        userBlocked: !0
                                    }), [2]
                                })
                            })
                        }, t.handleUnblock = function() {
                            t.props.onUnblock(), t.setState({
                                userBlocked: !1
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this.state.userBlocked ? this.renderUnblock() : this.renderBlock();
                        return a.createElement(g.qb, {
                            borderTop: !0,
                            padding: {
                                y: 1
                            },
                            margin: {
                                top: 1
                            }
                        }, a.createElement(g.Ma, null, Object(l.d)("Would you like to block {user}?", {
                            user: this.props.targetUser.displayName
                        }, "ReportWizardBlockActions")), a.createElement(g.Ma, {
                            margin: {
                                y: 1
                            }
                        }, Object(l.d)("By blocking them, you will no longer see their messages, and they will not be able to host you or add you as a friend.", "ReportWizardBlockActions")), a.createElement(g.Ma, {
                            margin: {
                                top: 1
                            }
                        }, e))
                    }, t
                }(a.Component),
                k = n("4qQ0");
            ! function(e) {
                e.Link = "link", e.MultipleChoice = "multiple choice", e.Text = "text", e.Textarea = "textarea"
            }(i || (i = {}));
            var S, w = {
                    generalFilter: function() {
                        return Object(l.d)("I don't think their content or behavior is allowed on Twitch", "ReportModalWizard")
                    },
                    me: function() {
                        return Object(l.d)("Me", "ReportModalWizard")
                    },
                    someoneElse: function() {
                        return Object(l.d)("Someone else", "ReportModalWizard")
                    },
                    sexuallyCoercive: function() {
                        return Object(l.d)("acting in a sexually coercive or inappropriate way", "ReportModalWizard")
                    },
                    abusiveViolence: function() {
                        return Object(l.d)("They're threatening violence or physical harm", "ReportModalWizard")
                    },
                    commitingViolence: function() {
                        return Object(l.d)("They're committing acts of violence or physical harm", "ReportModalWizard")
                    },
                    threatening: function() {
                        return Object(l.d)("threatening, harming, or endangering someone", "ReportModalWizard")
                    },
                    abusive: function() {
                        return Object(l.d)("being hateful, harassing, or abusive", "ReportModalWizard")
                    }
                },
                E = {
                    input_description: {
                        getTitle: function() {
                            return Object(l.d)("Could you provide more detail about this issue? You may include links to videos, clips, and content outside Twitch.", "ReportModalWizard")
                        },
                        value: "description",
                        type: i.Textarea,
                        required: !0
                    },
                    input_link: {
                        getTitle: function() {
                            return Object(l.d)("If possible, please provide a link to show us where the issue occurred. Links that do not lead to the original source of the content may not be usable as evidence.", "ReportModalWizard")
                        },
                        rows: 2,
                        value: "external links",
                        type: i.Textarea
                    },
                    input_usernames: {
                        getTitle: function() {
                            return Object(l.d)("If you know the usernames of any other Twitch accounts that may be owned by this person, please list them in this space.", "ReportModalWizard")
                        },
                        value: "other usernames",
                        rows: 2,
                        type: i.Textarea
                    },
                    input_connection: {
                        getTitle: function() {
                            return Object(l.d)("Please describe how you connected the offsite content to this Twitch account.", "ReportModalWizard")
                        },
                        value: "offsite content connection",
                        type: i.Textarea
                    },
                    input_comments: {
                        getTitle: function() {
                            return Object(l.d)("If you have any other comments you would like to add, please do so here.", "ReportModalWizard")
                        },
                        value: "comments",
                        type: i.Textarea
                    },
                    input_identifyOwner: {
                        getTitle: function() {
                            return Object(l.d)("Please describe how you identified this person as the owner of this Twitch account.", "ReportModalWizard")
                        },
                        rows: 2,
                        value: "connect account owner",
                        type: i.Textarea
                    },
                    endBlurb_socialmedia: {
                        getTitle: function() {
                            return Object(l.d)("Please submit a report to the site or service where the incident occurred as well if you have not already done so.", "ReportModalWizard")
                        },
                        type: i.Text
                    },
                    endBlurb_threat: {
                        getTitle: function() {
                            return Object(l.d)("If you feel you are in immediate danger, please contact your local law enforcement.", "ReportModalWizard")
                        },
                        type: i.Text
                    },
                    endLink_selfharm: {
                        getTitle: function() {
                            return Object(l.d)("Learn more about mental health support", "ReportModalWizard")
                        },
                        value: "https://help.twitch.tv/customer/en/portal/articles/2904486-twitch-cares-mental-health-support-information",
                        type: i.Link
                    },
                    endLink_DMCA: {
                        getTitle: function() {
                            return Object(l.d)("View our DMCA Notification Guidelines", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/dmca-guidelines/",
                        type: i.Link
                    },
                    endLink_trademark: {
                        getTitle: function() {
                            return Object(l.d)("View our Trademark Policy", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/trademark-policy/",
                        type: i.Link
                    },
                    endLink_devAgreement: {
                        getTitle: function() {
                            return Object(l.d)("View our Developer Agreement", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/developer-agreement/",
                        type: i.Link
                    },
                    endLink_eventCoC: {
                        getTitle: function() {
                            return Object(l.d)("View our Events Code of Conduct", "ReportModalWizard")
                        },
                        value: "https://www.twitch.tv/p/legal/events-code-of-conduct",
                        type: i.Link
                    },
                    messaging_general: {
                        getTitle: w.generalFilter,
                        value: "general_messaging",
                        omitFromDescription: !0
                    },
                    profile_general: {
                        getTitle: w.generalFilter,
                        value: "general_profile",
                        omitFromDescription: !0
                    },
                    maliciousRaid: {
                        getTitle: function() {
                            return Object(l.d)("They're participating in a malicious raid", "ReportModalWizard")
                        },
                        value: "malicious raid",
                        reportReason: k.b.Harassment
                    },
                    violence: {
                        getTitle: function() {
                            return Object(l.d)("It contains threats, harm, or endangerment of someone", "ReportModalWizard")
                        },
                        value: "violence/threats",
                        reportReason: k.b.Harm
                    },
                    report_username: {
                        getTitle: function() {
                            return Object(l.d)("They're using an inappropriate or offensive username", "ReportModalWizard")
                        },
                        value: "inappropriate username",
                        reportReason: k.b.OffensiveUsername
                    },
                    report_emotes: {
                        getTitle: function() {
                            return Object(l.d)("The emotes are inappropriate or offensive", "ReportModalWizard")
                        },
                        value: "inappropriate emotes",
                        reportReason: k.b.Other
                    },
                    abusive: {
                        getTitle: function() {
                            return Object(l.d)("It's hateful, harassing, or abusive", "ReportModalWizard")
                        },
                        value: "abusive"
                    },
                    scam: {
                        getTitle: function() {
                            return Object(l.d)("It contains attempts to scam other community members", "ReportModalWizard")
                        },
                        value: "scam",
                        reportReason: k.b.Spam
                    },
                    emptyStream: {
                        getTitle: function() {
                            return Object(l.d)("There's nobody on the stream", "ReportModalWizard")
                        },
                        value: "empty stream"
                    },
                    impersonation: {
                        getTitle: function() {
                            return Object(l.d)("They're impersonating someone", "ReportModalWizard")
                        },
                        value: "impersonation",
                        reportReason: k.b.Impersonation
                    },
                    underage: {
                        getTitle: function() {
                            return Object(l.d)("They're underage (12 or younger)", "ReportModalWizard")
                        },
                        value: "underage",
                        reportReason: k.b.Underaged
                    },
                    report_ip: {
                        getTitle: function() {
                            return Object(l.d)("I think they're using copyrighted content, trademarks, or other intellectual property that's not theirs", "ReportModalWizard")
                        },
                        value: "intellectual property"
                    },
                    inappropriateContent: {
                        getTitle: function() {
                            return Object(l.d)("It's inappropriate or obscene", "ReportModalWizard")
                        },
                        value: "inappropriate content"
                    },
                    violateDevAgreement: {
                        getTitle: function() {
                            return Object(l.d)("I think they're violating Twitch's Developer Agreement", "ReportModalWizard")
                        },
                        value: "violating developer agreement"
                    },
                    revealPersonalInfo: {
                        getTitle: function() {
                            return Object(l.d)("They might have revealed someone's personal information", "ReportModalWizard")
                        },
                        value: "revealing personal info",
                        reportReason: k.b.Other
                    },
                    inappropriateBadge: {
                        getTitle: function() {
                            return Object(l.d)("Their emote or subscriber badge violates Twitch's Guidelines", "ReportModalWizard")
                        },
                        value: "emote/subscriber badge",
                        reportReason: k.b.Other
                    },
                    noModeration: {
                        getTitle: function() {
                            return Object(l.d)("They're not moderating their chat appropriately", "ReportModalWizard")
                        },
                        value: "not moderating chat",
                        reportReason: k.b.Other
                    },
                    inappropriateExtension: {
                        getTitle: function() {
                            return Object(l.d)("Their extension contains malicious or inappropriate content", "ReportModalWizard")
                        },
                        value: "inappropriate extension",
                        reportReason: k.b.Other
                    },
                    cheating: {
                        getTitle: function() {
                            return Object(l.d)("They're cheating in an online game", "ReportModalWizard")
                        },
                        value: "cheating",
                        reportReason: k.b.Cheating
                    },
                    bitsViolation: {
                        getTitle: function() {
                            return Object(l.d)("Their use of Bits goes against Twitch's Policy", "ReportModalWizard")
                        },
                        value: "bits violation",
                        reportReason: k.b.BitsViolation
                    },
                    video_labeling: {
                        getTitle: function() {
                            return Object(l.d)("Their content is labeled incorrectly", "ReportModalWizard")
                        },
                        value: "incorrect label",
                        reportReason: k.b.Miscategorized
                    },
                    video_inactive: {
                        getTitle: function() {
                            return Object(l.d)("The stream is inactive (sleeping/AFK)", "ReportModalWizard")
                        },
                        value: "inactive stream",
                        reportReason: k.b.Miscategorized
                    },
                    video_general: {
                        getTitle: w.generalFilter,
                        value: "general_video",
                        omitFromDescription: !0
                    },
                    hateSpeech: {
                        getTitle: function() {
                            return Object(l.d)("They're using hate speech, hateful symbols, or hateful media", "ReportModalWizard")
                        },
                        value: "hate speech",
                        reportReason: k.b.HatefulConduct
                    },
                    harassment: {
                        getTitle: function() {
                            return Object(l.d)("They're harassing or bullying someone", "ReportModalWizard")
                        },
                        value: "harassment",
                        reportReason: k.b.Harassment
                    },
                    abusiveViolence: {
                        getTitle: w.abusiveViolence,
                        value: "threatening violence",
                        reportReason: k.b.Harm
                    },
                    commitingViolence: {
                        getTitle: w.commitingViolence,
                        value: "committing violence",
                        reportReason: k.b.Harm
                    },
                    swatting: {
                        getTitle: function() {
                            return Object(l.d)("They're inciting or committing swatting or a DDOS attack", "ReportModalWizard")
                        },
                        value: "swatting/ddosing",
                        reportReason: k.b.Harassment
                    },
                    personalInfo: {
                        getTitle: function() {
                            return Object(l.d)("They're purposely revealing personal information", "ReportModalWizard")
                        },
                        value: "revealing personal info",
                        reportReason: k.b.Harassment
                    },
                    threat_me: {
                        getTitle: function() {
                            return Object(l.d)("At me", "ReportModalWizard")
                        },
                        value: "against me",
                        reportReason: k.b.Harm
                    },
                    threat_person: {
                        getTitle: function() {
                            return Object(l.d)("At someone else", "ReportModalWizard")
                        },
                        value: "against another person",
                        reportReason: k.b.Harm
                    },
                    threat_group: {
                        getTitle: function() {
                            return Object(l.d)("At a group of people", "ReportModalWizard")
                        },
                        value: "against group of people",
                        reportReason: k.b.Harm
                    },
                    threat_selfharm: {
                        getTitle: function() {
                            return Object(l.d)("They're threatening self-harm", "ReportModalWizard")
                        },
                        value: "selfharm"
                    },
                    inappropriate_game: {
                        getTitle: function() {
                            return Object(l.d)("The game isn't allowed on Twitch", "ReportModalWizard")
                        },
                        value: "prohibited game",
                        reportReason: k.b.Prohibited
                    },
                    sexuallyViolent: {
                        getTitle: function() {
                            return Object(l.d)("Violent sexual conduct", "ReportModalWizard")
                        },
                        value: "sexually violent",
                        reportReason: k.b.SexualViolence
                    },
                    childAnimal: {
                        getTitle: function() {
                            return Object(l.d)("Sexual conduct involving a child or animal", "ReportModalWizard")
                        },
                        value: "sexual conduct; child or animal",
                        reportReason: k.b.SexualViolence
                    },
                    pornographic: {
                        getTitle: function() {
                            return Object(l.d)("Sexually explicit or pornographic content", "ReportModalWizard")
                        },
                        value: "pornographic",
                        reportReason: k.b.SexualContent
                    },
                    gory: {
                        getTitle: function() {
                            return Object(l.d)("Extreme violence or gore", "ReportModalWizard")
                        },
                        value: "gory",
                        reportReason: k.b.Gore
                    },
                    suggestive: {
                        getTitle: function() {
                            return Object(l.d)("Sexually suggestive content", "ReportModalWizard")
                        },
                        value: "sexually suggestive",
                        reportReason: k.b.SexualContent
                    },
                    nudity: {
                        getTitle: function() {
                            return Object(l.d)("Full or partial nudity", "ReportModalWizard")
                        },
                        value: "nudity",
                        reportReason: k.b.SexualContent
                    },
                    other: {
                        getTitle: function() {
                            return Object(l.d)("There's something else wrong with it...", "ReportModalWizard")
                        },
                        value: "other",
                        reportReason: k.b.Other
                    },
                    evasion: {
                        getTitle: function() {
                            return Object(l.d)("They were banned or suspended and are trying to get around it (ban evasion)", "ReportModalWizard")
                        },
                        value: "ban evasion"
                    },
                    evasion_sitewide: {
                        getTitle: function() {
                            return Object(l.d)("A sitewide ban from Twitch", "ReportModalWizard")
                        },
                        value: "sitewide ban",
                        reportReason: k.b.TosBanEvasion
                    },
                    evasion_chat: {
                        getTitle: function() {
                            return Object(l.d)("A chat ban from one or more channels", "ReportModalWizard")
                        },
                        value: "chat ban",
                        reportReason: k.b.ChatBanEvasion
                    },
                    evasion_messaging: {
                        getTitle: function() {
                            return Object(l.d)("A block from messaging me", "ReportModalWizard")
                        },
                        value: "messaging block",
                        reportReason: k.b.ChatBanEvasion
                    },
                    impersonation_me: {
                        getTitle: w.me,
                        value: "impersonating me",
                        reportReason: k.b.Impersonation
                    },
                    impersonation_brand: {
                        getTitle: function() {
                            return Object(l.d)("Someone I represent, or a brand/company I work for", "ReportModalWizard")
                        },
                        value: "impersonating brand",
                        reportReason: k.b.Impersonation
                    },
                    impersonation_other: {
                        getTitle: w.someoneElse,
                        value: "impersonating someone else",
                        reportReason: k.b.Impersonation
                    },
                    selfharm: {
                        getTitle: function() {
                            return Object(l.d)("I'm concerned for their wellbeing", "ReportModalWizard")
                        },
                        value: "selfharm",
                        reportReason: k.b.SelfHarm
                    },
                    chat: {
                        getTitle: function() {
                            return Object(l.d)("In a stream chat message", "ReportModalWizard")
                        },
                        value: "chat"
                    },
                    profile: {
                        getTitle: function() {
                            return Object(l.d)("In the profile content, extensions, or emotes", "ReportModalWizard")
                        },
                        value: "profile"
                    },
                    video: {
                        getTitle: function() {
                            return Object(l.d)("In a live stream, video, or clip", "ReportModalWizard")
                        },
                        value: "video"
                    },
                    room: {
                        getTitle: function(e) {
                            return Object(l.d)("In one of {username}'s rooms", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        value: "room"
                    },
                    whisper: {
                        getTitle: function() {
                            return Object(l.d)("In a whisper (private message)", "ReportModalWizard")
                        },
                        value: "whisper",
                        reportContext: k.a.Whisper
                    },
                    username: {
                        getTitle: function() {
                            return Object(l.d)("In the username", "ReportModalWizard")
                        },
                        value: "username",
                        reportReason: k.b.OffensiveUsername
                    },
                    report_other: {
                        getTitle: function() {
                            return Object(l.d)("Somewhere else...", "ReportModalWizard")
                        },
                        value: "somewhere else",
                        omitFromDescription: !0
                    },
                    video_streamer: {
                        getTitle: function() {
                            return Object(l.d)("The streamer or channel owner", "ReportModalWizard")
                        },
                        value: "streamer"
                    },
                    video_someoneElse: {
                        getTitle: function() {
                            return Object(l.d)("Someone else in the video", "ReportModalWizard")
                        },
                        value: "someone else in video"
                    },
                    video_chatSomeone: {
                        getTitle: function() {
                            return Object(l.d)("Someone in chat", "ReportModalWizard")
                        },
                        value: "someone in chat",
                        differentTarget: !0
                    },
                    report_channelOwner: {
                        getTitle: function() {
                            return Object(l.d)("The channel owner", "ReportModalWizard")
                        },
                        value: "channel owner"
                    },
                    report_member: {
                        getTitle: function() {
                            return Object(l.d)("Another community member", "ReportModalWizard")
                        },
                        value: "community member",
                        differentTarget: !0
                    },
                    location_onTwitch: {
                        getTitle: function() {
                            return Object(l.d)("On Twitch", "ReportModalWizard")
                        },
                        value: "on twitch"
                    },
                    location_anotherSite: {
                        getTitle: function() {
                            return Object(l.d)("On another site or service", "RpoertModalWizard")
                        },
                        value: "another site"
                    },
                    location_TwitchEvent: {
                        getTitle: function() {
                            return Object(l.d)("In person, at a Twitch event", "ReportModalWizard")
                        },
                        value: "twitch event"
                    },
                    external_incitingRaids: {
                        getTitle: function() {
                            return Object(l.d)("inciting brigading or malicious raids", "ReportModalWizard")
                        },
                        reportReason: k.b.Harassment,
                        value: "brigading/raids"
                    },
                    external_threatening: {
                        getTitle: w.threatening,
                        value: "threatening"
                    },
                    external_harassment: {
                        getTitle: w.abusive,
                        value: "hateful/harassing"
                    },
                    external_abusiveViolence: {
                        getTitle: w.abusiveViolence,
                        value: "external site; threatening violence",
                        reportReason: k.b.Harm
                    },
                    external_commitingViolence: {
                        getTitle: w.commitingViolence,
                        value: "external site; committing violence",
                        reportReason: k.b.Harm
                    },
                    conduct_impersonation: {
                        getTitle: function() {
                            return Object(l.d)("impersonating someone", "ReportModalWizard")
                        },
                        value: "impersonation",
                        reportReason: k.b.Impersonation
                    },
                    spam: {
                        getTitle: function() {
                            return Object(l.d)("They're spamming or spreading malicious links", "ReportModalWizard")
                        },
                        value: "spam",
                        reportReason: k.b.Spam
                    },
                    spam_bot: {
                        getTitle: function() {
                            return Object(l.d)("I think this is a bot account", "ReportModalWizard")
                        },
                        value: "bot"
                    },
                    spam_scam: {
                        getTitle: function() {
                            return Object(l.d)("They're trying to scam other community members or sending malicious links", "ReportModalWizard")
                        },
                        value: "scam or malicious links"
                    },
                    spam_repeated: {
                        getTitle: function() {
                            return Object(l.d)("They're sending repeated messages (spam)", "ReportModalWizard")
                        },
                        value: "repeat messages"
                    }
                },
                C = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onChange = function(e) {
                            var n = e.target,
                                i = n.name,
                                r = n.value;
                            t.props.onChangeText(i, r)
                        }, t.onSelect = function(e) {
                            if (t.props.currentCard.items && e.currentTarget.parentElement) {
                                var n = Number(e.currentTarget.parentElement.getAttribute("data-a-index")),
                                    i = t.props.currentCard.items[n];
                                t.props.onChangeRadio(i)
                            }
                        }, t
                    }
                    return r.d(t, e), t.prototype.render = function() {
                        var e = this.props.currentCard.getDescription ? a.createElement(g.Ma, {
                            padding: {
                                bottom: 1
                            }
                        }, this.props.currentCard.getDescription()) : null;
                        return a.createElement(g.Ma, {
                            className: "reporting-wizard-card"
                        }, e, a.createElement(g.X, {
                            label: this.props.currentCard.getLabel ? this.props.currentCard.getLabel() : ""
                        }, this.renderCardItems()))
                    }, t.prototype.renderCardItems = function() {
                        var e = this,
                            t = this.props.currentCard,
                            n = [];
                        return t.items && t.type && (n = t.items.filter(function(e) {
                            return !!e
                        }).map(function(t, n) {
                            switch (t.type) {
                                case i.Text:
                                    return a.createElement(g.Ma, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, t.getTitle());
                                case i.Link:
                                    return a.createElement(g.Ma, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, a.createElement(g.O, {
                                        to: t.value,
                                        targetBlank: !0
                                    }, a.createElement(g.Ma, {
                                        display: g.R.Flex
                                    }, a.createElement(g.Ma, {
                                        display: g.R.Inline,
                                        padding: {
                                            right: .5
                                        }
                                    }, a.createElement(g.fb, {
                                        asset: g.gb.Document
                                    })), t.getTitle())));
                                case i.Textarea:
                                    var r = t.value ? e.props.userTextInputs[t.value] : void 0,
                                        o = t.required && (!r || !!r && 0 === r.trim().length);
                                    return a.createElement(g.Ma, {
                                        key: n,
                                        padding: {
                                            bottom: 1
                                        }
                                    }, a.createElement(g.X, {
                                        label: t.getTitle(),
                                        labelOptional: t.required ? "" : Object(l.d)("Optional", "ReportModalWizardCard")
                                    }, a.createElement(g.Db, {
                                        onChange: e.onChange,
                                        rows: t.rows || 3,
                                        name: t.value,
                                        error: e.props.error && o,
                                        value: r,
                                        "data-test-selector": "report-wizard-textarea"
                                    })));
                                case i.MultipleChoice:
                                default:
                                    return a.createElement(g.Ma, {
                                        key: n,
                                        padding: {
                                            y: .5
                                        }
                                    }, a.createElement(g.cb, {
                                        checked: !!e.props.currentSelection && e.props.currentSelection.value === t.value,
                                        onChange: e.onSelect,
                                        label: t.getTitle(e.props.targetUser.displayName),
                                        "data-a-index": n,
                                        name: "card",
                                        value: t.value
                                    }))
                            }
                        })), n
                    }, t
                }(a.Component),
                N = n("RQ6e");
            ! function(e) {
                e.Confirm = "Confirm", e.MultipleChoice = "MultipleChoice", e.Info = "End Card"
            }(S || (S = {}));
            var T, _, R, O = {
                    contentGeneral: function() {
                        return Object(l.d)("What would you like to report?", "ReportModalWizard")
                    },
                    content: function() {
                        return Object(l.d)("What's wrong with this content?", "ReportModalWizard")
                    },
                    identifyUser: function() {
                        return Object(l.d)("Who do you want to report?", "ReportModalWizard")
                    },
                    thisPersonIs: function() {
                        return Object(l.d)("This person is...", "ReportModalWizard")
                    },
                    relevantStatements: function() {
                        return Object(l.d)("What would you like to report? (Please choose the most relevant statement that applies.)", "ReportModalWizard")
                    }
                },
                I = {
                    report: function(e) {
                        return Object(l.d)("Report {username}", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportVideo: function(e) {
                        return Object(l.d)("Report {username}'s Video", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportMessage: function(e) {
                        return Object(l.d)("Report {username}'s Message", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportProfile: function(e) {
                        return Object(l.d)("Report {username}'s Profile Or Other Content", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    reportAbusive: function(e) {
                        return Object(l.d)("Report {username} for Abusive Conduct", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    tellUsMore: function() {
                        return Object(l.d)("Tell Us More", "ReportModalWizard")
                    },
                    thanks: function() {
                        return Object(l.d)("Thanks for letting us know", "ReportModalWizard")
                    },
                    thanksConcern: function() {
                        return Object(l.d)("Thank you for your concern", "ReportModalWizard")
                    }
                },
                D = {
                    getDescription: function() {
                        return Object(l.d)("Reports are reviewed by Twitch Staff 24 hours a day. We will issue penalties, such as account suspension and/or content removal, once we verify that a violation of our policies has occurred.", "ReportModalWizard")
                    },
                    blockPrompt: !0,
                    getTitle: I.thanks,
                    type: S.Info,
                    value: "end card"
                },
                P = {
                    socialMedia: r.a({}, D, {
                        items: [E.endBlurb_socialmedia]
                    }),
                    violence: r.a({}, D, {
                        items: [E.endBlurb_threat]
                    }),
                    legal: {
                        getTitle: I.thanksConcern,
                        getDescription: function() {
                            return Object(l.d)("To submit a claim or report a violation of this type, you will need to follow the steps listed on the relevant page below.", "ReportModalWizard")
                        },
                        items: [E.endLink_DMCA, E.endLink_trademark, E.endLink_devAgreement],
                        type: S.Info,
                        value: "ip end"
                    },
                    selfharm: {
                        getTitle: I.thanksConcern,
                        getDescription: function() {
                            return Object(l.d)("If you know the user personally, and you believe them to be in danger, please contact their local authorities immediately. The link below contains some general information that may be of use.", "ReportModalWizard")
                        },
                        items: [E.endLink_selfharm],
                        type: S.Info,
                        value: "selfharm end"
                    },
                    twitchEvent: {
                        getTitle: I.thanksConcern,
                        getDescription: function() {
                            return Object(l.d)("Please bring this concern to the attention of staff or security at the event if you have not already done so. More information is available at the link below.", "ReportModalWizard")
                        },
                        items: [E.endLink_eventCoC],
                        value: "twitch event end",
                        type: S.Info
                    }
                },
                x = {
                    getTitle: I.report,
                    getLabel: function() {
                        return Object(l.d)("Where is the problem?", "ReportModalWizard")
                    },
                    items: [E.video, E.whisper, E.chat, E.room, E.profile, E.username, E.report_other],
                    type: S.MultipleChoice,
                    value: "content type"
                },
                L = {
                    identifyUser: {
                        getTitle: I.reportVideo,
                        getLabel: O.identifyUser,
                        items: [E.video_streamer, E.video_someoneElse, E.video_chatSomeone],
                        type: S.MultipleChoice,
                        value: "video identify user"
                    },
                    content: {
                        getTitle: I.reportVideo,
                        getLabel: O.contentGeneral,
                        items: [E.revealPersonalInfo, E.video_labeling, E.video_inactive, E.video_general, E.report_ip, E.violateDevAgreement, E.selfharm],
                        type: S.MultipleChoice,
                        value: "video report reason"
                    },
                    general: {
                        getTitle: I.reportVideo,
                        getLabel: O.content,
                        items: [E.report_username, E.violence, E.abusive, E.cheating, E.scam, E.inappropriateContent, E.evasion, E.impersonation, E.underage, E.bitsViolation],
                        type: S.MultipleChoice,
                        value: "video general report reason"
                    }
                },
                F = {
                    content: {
                        getTitle: I.reportMessage,
                        getLabel: O.contentGeneral,
                        items: [E.revealPersonalInfo, E.evasion, E.spam, E.maliciousRaid, E.report_username, E.messaging_general, E.selfharm],
                        type: S.MultipleChoice,
                        value: "message report reason"
                    },
                    general: {
                        getTitle: I.reportMessage,
                        getLabel: O.content,
                        items: [E.report_emotes, E.violence, E.abusive, E.inappropriateContent, E.impersonation, E.underage, E.bitsViolation],
                        type: S.MultipleChoice,
                        value: "message general report reason"
                    }
                },
                M = r.a({}, F.content, {
                    getDescription: function() {
                        return Object(l.d)("Please note that we may review additional messages in this conversation to determine the context of your report.", "ReportModalWizard")
                    }
                }),
                A = {
                    content: {
                        getTitle: I.reportProfile,
                        getLabel: O.contentGeneral,
                        items: [E.revealPersonalInfo, E.inappropriateBadge, E.inappropriateExtension, E.noModeration, E.profile_general, E.report_ip, E.violateDevAgreement, E.selfharm],
                        type: S.MultipleChoice,
                        value: "profile report reason"
                    },
                    general: {
                        getTitle: I.reportProfile,
                        getLabel: O.content,
                        items: [E.report_username, E.violence, E.abusive, E.scam, E.inappropriateContent, E.evasion, E.impersonation, E.underage, E.bitsViolation],
                        type: S.MultipleChoice,
                        value: "profile general report reason"
                    }
                },
                U = {
                    getTitle: function(e) {
                        return Object(l.d)("Report {username}'s Room", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: O.identifyUser,
                    items: [E.report_channelOwner, E.report_member],
                    value: "room report user",
                    type: S.MultipleChoice
                },
                B = {
                    getTitle: I.tellUsMore,
                    items: [E.input_description],
                    type: S.Confirm,
                    value: "tell us more"
                },
                j = {
                    banEvasion: r.a({}, B, {
                        items: [E.input_usernames, E.input_description],
                        value: "ban evasion tell us more"
                    }),
                    socialMedia: r.a({}, B, {
                        items: [E.input_link, E.input_connection, E.input_description],
                        nextCard: P.socialMedia,
                        value: "social media tell us more"
                    })
                },
                z = {
                    content: {
                        getTitle: I.reportAbusive,
                        getLabel: O.relevantStatements,
                        items: [E.hateSpeech, E.harassment, E.abusiveViolence, E.commitingViolence, E.swatting, E.personalInfo],
                        type: S.MultipleChoice,
                        value: "abuse type"
                    },
                    violence: {
                        getTitle: function(e) {
                            return Object(l.d)("Report {username} for Violence or Threats", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: function() {
                            return Object(l.d)("Are the threats or actions directed at you or someone else?", "ReportModalWizard")
                        },
                        items: [E.threat_me, E.threat_person, E.threat_group, E.threat_selfharm],
                        type: S.MultipleChoice,
                        value: "violence type"
                    }
                },
                W = {
                    identifyLocation: {
                        getTitle: function(e) {
                            return Object(l.d)("Report {username} for something else...", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: function() {
                            return Object(l.d)("Where did the problem happen?", "ReportModalWizard")
                        },
                        items: [E.location_onTwitch, E.location_anotherSite, E.location_TwitchEvent],
                        type: S.MultipleChoice,
                        value: "off-site conduct location"
                    },
                    externalSite: {
                        getTitle: function(e) {
                            return Object(l.d)("Report {username}'s Conduct on Another Site or Service", {
                                username: e
                            }, "ReportModalWizard")
                        },
                        getLabel: O.thisPersonIs,
                        getDescription: function() {
                            return Object(l.d)("Please note that incidents reported through this form must involve Twitch community members. If possible, please submit a report to the site or service where the incident occurred as well.", "ReportModalWizard")
                        },
                        items: [E.external_incitingRaids, E.external_threatening, E.external_harassment],
                        type: S.MultipleChoice,
                        nextCard: j.socialMedia,
                        value: "external site conduct"
                    },
                    external_violence: r.a({}, z.violence, {
                        items: [E.threat_me, E.threat_person, E.threat_group],
                        nextCard: j.socialMedia
                    }),
                    external_abusive: r.a({}, z.content, {
                        items: [E.hateSpeech, E.harassment, E.external_abusiveViolence, E.external_commitingViolence, E.swatting, E.personalInfo],
                        nextCard: j.socialMedia
                    })
                },
                V = {
                    getTitle: function(e) {
                        return Object(l.d)("Report {username}'s Spam or Malicious Links", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: O.contentGeneral,
                    items: [E.spam_bot, E.spam_scam, E.spam_repeated],
                    type: S.MultipleChoice,
                    value: "spam type"
                },
                H = {
                    getTitle: function(e) {
                        return Object(l.d)("Report {username} for Inappropriate Content", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: O.relevantStatements,
                    items: [E.inappropriate_game, E.gory, E.sexuallyViolent, E.childAnimal, E.pornographic, E.suggestive, E.nudity, E.other],
                    type: S.MultipleChoice,
                    value: "inappropriate content type"
                },
                G = {
                    getTitle: function(e) {
                        return Object(l.d)("Report {username} for Evading a Ban", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: function() {
                        return Object(l.d)("What kind of ban are they evading?", "ReportModalWizard")
                    },
                    value: "ban type",
                    items: [E.evasion_chat, E.evasion_sitewide, E.evasion_messaging],
                    type: S.MultipleChoice,
                    nextCard: j.banEvasion
                },
                q = {
                    getTitle: function(e) {
                        return Object(l.d)("Report {username} for Impersonation", {
                            username: e
                        }, "ReportModalWizard")
                    },
                    getLabel: function() {
                        return Object(l.d)("Who is being impersonated?", "ReportModalWizard")
                    },
                    getDescription: function() {
                        return Object(l.d)("Parody, cosplay, and other portrayals without the intent to deceive or defraud are allowed under Twitch's Community Guidelines. If you would still like to submit a report, please continue.", "ReportModalWizard")
                    },
                    items: [E.impersonation_me, E.impersonation_brand, E.impersonation_other],
                    type: S.MultipleChoice,
                    value: "impersonation type"
                },
                Q = x,
                K = B,
                Y = D,
                X = {
                    video: L.identifyUser,
                    whisper: M,
                    chat: F.content,
                    profile: A.content,
                    room: U,
                    "somewhere else": W.identifyLocation,
                    streamer: L.content,
                    "someone else in video": L.content,
                    "someone in chat": F.content,
                    general_video: L.general,
                    general_messaging: F.general,
                    general_profile: A.general,
                    "channel owner": A.content,
                    "community member": F.content,
                    "on twitch": A.content,
                    "another site": W.externalSite,
                    "twitch event": P.twitchEvent,
                    "brigading/raids": j.socialMedia,
                    threatening: W.external_violence,
                    "hateful/harassing": W.external_abusive,
                    "external site; threatening violence": W.external_violence,
                    "external site; committing violence": W.external_violence,
                    "external site; scam": j.socialMedia,
                    "ban evasion": G,
                    spam: V,
                    hateful: z.content,
                    impersonation: q,
                    "violence/threats": z.violence,
                    "threatening violence": z.violence,
                    "committing violence": z.violence,
                    abusive: z.content,
                    "inappropriate content": H,
                    "intellectual property": P.legal,
                    "violating developer agreement": P.legal
                },
                $ = {
                    selfharm: P.selfharm,
                    harm: P.violence,
                    other: Y
                },
                J = {
                    CHANNEL_FEED_POST_REPORT: A.content,
                    COMMUNITY_REPORT: A.content,
                    CHAT_REPORT: F.content,
                    CLIP_REPORT: L.content,
                    EVENT_REPORT: A.content,
                    EXTENSION_REPORT: A.content,
                    LIVE_UP_REPORT: A.content,
                    ROOM_REPORT: U,
                    WHISPER_REPORT: M,
                    VOD_COMMENT_REPORT: F.content
                },
                Z = "report-wizard-back",
                ee = "report-wizard-close",
                te = "report-wizard-next",
                ne = "report-wizard-submit",
                ie = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            currentCard: t.props.currentCard || J[t.props.reportContentType] || Q,
                            prevCards: [],
                            currentSelection: null,
                            prevSelections: [],
                            displacedSelections: [],
                            userTextInput: {},
                            error: "",
                            reportReason: t.props.reportReason || "",
                            modalCloseTracked: !1,
                            targetUnknown: !1,
                            reportContext: t.props.reportContentType
                        }, t.renderPrimer = function() {
                            return a.createElement(g.Ma, {
                                margin: {
                                    top: 1
                                }
                            }, a.createElement(g.Q, null, Object(l.d)("We are going to ask you a few questions to help us investigate your report quickly and accurately.", "ReportModalWizard")))
                        }, t.renderButtons = function() {
                            var e = Object(l.d)("Close", "ReportModalWizard"),
                                n = t.handleClose,
                                i = ee,
                                r = !1,
                                o = t.state.prevCards.length ? t.renderBack() : null;
                            switch (t.state.currentCard.type) {
                                case S.MultipleChoice:
                                    e = Object(l.d)("Next", "ReportModalWizard"), n = t.handleNext, i = te, r = !t.state.currentSelection;
                                    break;
                                case S.Confirm:
                                    e = Object(l.d)("Submit Report", "ReportModalWizard"), n = t.handleSubmit, r = !t.state.userTextInput, i = ne
                            }
                            return a.createElement(g.Ma, null, o, a.createElement(g.v, {
                                onClick: n,
                                disabled: r,
                                "data-test-selector": i
                            }, a.createElement(g.Ma, {
                                padding: {
                                    x: 1
                                }
                            }, e)))
                        }, t.renderBack = function() {
                            return a.createElement(g.Ma, {
                                margin: {
                                    right: 1
                                },
                                display: g.R.InlineBlock
                            }, a.createElement(g.v, {
                                type: g.B.Hollow,
                                onClick: t.handleBack,
                                "data-test-selector": Z
                            }, a.createElement(g.Ma, {
                                padding: {
                                    x: 1
                                }
                            }, Object(l.d)("Back", "ReportModalWizard"))))
                        }, t.getTitle = function() {
                            return t.state.currentCard.getTitle && t.props.targetUser.displayName && t.props.targetUserID ? t.state.targetUnknown ? t.state.currentCard.getTitle(Object(l.d)("Another User", "ReportModalWizard")) : t.state.currentCard.getTitle(t.props.targetUser.displayName) : t.state.targetUnknown ? Object(l.d)("Report User", "ReportModalWizard") : t.props.title
                        }, t.handleClose = function() {
                            t.setState({
                                modalCloseTracked: !0
                            }, function() {
                                return t.props.trackClose(R.Finish, t.state.currentCard.value)
                            }), t.props.onClose()
                        }, t.handleNext = function() {
                            if (t.state.currentSelection && t.state.currentSelection.value) {
                                var e = t.state.currentCard,
                                    n = t.state.prevCards.concat(e),
                                    i = t.state.prevSelections.concat(t.state.currentSelection),
                                    r = t.state.displacedSelections[t.state.displacedSelections.length - 1],
                                    a = t.state.currentSelection.differentTarget || t.state.targetUnknown,
                                    o = t.state.currentSelection.reportContext || t.state.reportContext,
                                    s = e.nextCard || K;
                                X[t.state.currentSelection.value] && (s = X[t.state.currentSelection.value]);
                                var l = t.state.currentSelection.reportReason || t.state.reportReason,
                                    c = s.type === S.Info;
                                t.setState({
                                    currentCard: s,
                                    reportReason: l,
                                    prevCards: c ? [] : n,
                                    prevSelections: i,
                                    targetUnknown: a,
                                    currentSelection: r || null,
                                    displacedSelections: t.state.displacedSelections.slice(0, -1),
                                    reportContext: o
                                }, function() {
                                    return t.trackNavigation(_.Next, e.value)
                                })
                            }
                        }, t.createReportDescription = function() {
                            return "" + (t.state.reportContext !== t.props.reportContentType ? "report context: " + t.props.reportContentType + "\n\n" : "") + t.state.prevSelections.map(function(e) {
                                if (!e.omitFromDescription) return e.value
                            }).filter(function(e) {
                                return !!e
                            }).join(" > ") + "\n\n" + Object.keys(t.state.userTextInput).map(function(e) {
                                return e + ": " + t.state.userTextInput[e]
                            }).join("\n")
                        }, t.requiredInputsNonEmpty = function() {
                            if (t.state.currentCard.items) return 0 === t.state.currentCard.items.filter(function(e) {
                                if (e.type !== i.Textarea || !e.required) return !1;
                                var n = t.state.userTextInput[e.value],
                                    r = n && 0 === n.trim().length;
                                return !n || r
                            }).length
                        }, t.handleSubmit = function() {
                            return r.b(t, void 0, void 0, function() {
                                var e, t, n, i, a = this;
                                return r.e(this, function(r) {
                                    switch (r.label) {
                                        case 0:
                                            return e = Object(l.d)("Additional information is required.", "ReportModalWizard"), this.requiredInputsNonEmpty() ? (t = this.state.reportReason || "other", n = this.createReportDescription(), [4, this.props.onSubmit(t, n, null, null, this.state.reportContext)]) : [3, 2];
                                        case 1:
                                            switch (r.sent(), this.props.submitStatus) {
                                                case N.b.FormError:
                                                    this.setState({
                                                        error: e
                                                    });
                                                    break;
                                                case N.b.Success:
                                                    i = Y, $[t] && (i = $[t]), this.state.currentCard.nextCard && (i = this.state.currentCard.nextCard), this.setState({
                                                        currentCard: i,
                                                        prevCards: [],
                                                        prevSelections: [],
                                                        currentSelection: null,
                                                        displacedSelections: [],
                                                        userTextInput: {},
                                                        error: ""
                                                    }, function() {
                                                        return a.trackNavigation(_.Submit)
                                                    });
                                                    break;
                                                case N.b.UserError:
                                                    this.setState({
                                                        error: Object(l.d)("This account could not be reported. It may have already been suspended, or the owner may have deleted it.", "ReportModalWizard")
                                                    });
                                                    break;
                                                case N.b.MutationError:
                                                default:
                                                    this.setState({
                                                        error: Object(l.d)("Sorry, a network error occurred when submitting your report. Please try again later.", "ReportModalWizard")
                                                    })
                                            }
                                            return [3, 3];
                                        case 2:
                                            this.props.onError(N.b.FormError), this.setState({
                                                error: e
                                            }), r.label = 3;
                                        case 3:
                                            return [2]
                                    }
                                })
                            })
                        }, t.handleBack = function() {
                            return r.b(t, void 0, void 0, function() {
                                var e, t, n, i, a, o = this;
                                return r.e(this, function(r) {
                                    return e = this.state.currentCard, t = this.state.prevCards[this.state.prevCards.length - 1], n = this.state.prevSelections[this.state.prevSelections.length - 1], i = !n.differentTarget && this.state.targetUnknown, a = this.state.displacedSelections, this.state.currentSelection && (a = a.concat(this.state.currentSelection)), t && n && this.setState({
                                        currentCard: t,
                                        currentSelection: n,
                                        displacedSelections: a,
                                        prevCards: this.state.prevCards.slice(0, -1),
                                        prevSelections: this.state.prevSelections.slice(0, -1),
                                        error: "",
                                        targetUnknown: i
                                    }, function() {
                                        return o.trackNavigation(_.Back, e.value)
                                    }), [2]
                                })
                            })
                        }, t.handleTextInput = function(e, n) {
                            var i = t.state.userTextInput;
                            i[e] = n, t.setState({
                                userTextInput: i
                            })
                        }, t.handleSelection = function(e) {
                            if (t.state.currentCard.items && e !== t.state.currentSelection) {
                                var n = t.state.targetUnknown;
                                if (n) n = 0 === t.state.displacedSelections.filter(function(e) {
                                    return e.differentTarget
                                }).length;
                                var i = t.state.reportContext;
                                (t.state.displacedSelections.filter(function(e) {
                                    return e.reportContext
                                }).length || t.state.currentSelection && t.state.currentSelection.reportContext) && (i = t.props.reportContentType), t.setState({
                                    currentSelection: e,
                                    displacedSelections: [],
                                    userTextInput: {},
                                    targetUnknown: n,
                                    reportContext: i
                                })
                            }
                        }, t.trackNavigation = function(e, n) {
                            t.props.trackAction(e, n, t.state.currentCard.value)
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentWillUnmount = function() {
                        this.state.modalCloseTracked || this.props.trackClose(R.Close, this.state.currentCard.value)
                    }, t.prototype.render = function() {
                        var e = this.state.currentCard.type === S.Info && this.state.currentCard.blockPrompt ? a.createElement(y, {
                                targetUser: this.props.targetUser,
                                onBlock: this.props.onBlock,
                                onUnblock: this.props.onUnblock,
                                userBlocked: this.props.userBlocked
                            }) : null,
                            t = this.state.error ? a.createElement(g.qb, {
                                fullWidth: !0,
                                margin: {
                                    bottom: 1
                                },
                                padding: 1,
                                className: "reporting__error-container"
                            }, this.state.error) : null,
                            n = this.state.prevCards.length || this.state.currentCard.type === S.Info ? null : this.renderPrimer();
                        return a.createElement(g.qb, {
                            className: "reporting-wizard",
                            display: g.R.Flex,
                            margin: {
                                x: 1
                            },
                            flexDirection: g.T.Column,
                            fullHeight: !0,
                            "data-test-card-value": this.state.currentCard.value
                        }, t, a.createElement(g.Q, {
                            bold: !0,
                            fontSize: g.V.Size4
                        }, this.getTitle()), n, a.createElement(g.Ma, {
                            margin: {
                                y: 1
                            }
                        }, a.createElement(C, {
                            currentCard: this.state.currentCard,
                            currentSelection: this.state.currentSelection,
                            targetUser: this.props.targetUser,
                            targetUserID: this.props.targetUserID,
                            onChangeRadio: this.handleSelection,
                            onChangeText: this.handleTextInput,
                            userTextInputs: this.state.userTextInput,
                            error: this.props.submitStatus === N.b.FormError && !!this.state.error
                        }), e), this.renderButtons())
                    }, t
                }(a.Component),
                re = n("+PZR"),
                ae = n("TWyu"),
                oe = n("kdOL"),
                se = n("19zd");
            n.d(t, "c", function() {
                    return _
                }), n.d(t, "a", function() {
                    return R
                }), n.d(t, "b", function() {
                    return ce
                }),
                function(e) {
                    e.Close = "close", e.Open = "open", e.Submit = "submit_report", e.ToggleSettings = "modal_settings"
                }(T || (T = {})),
                function(e) {
                    e.Back = "back", e.Close = "close", e.Open = "open", e.Next = "next", e.Submit = "submit_report", e.ToggleSettings = "modal_settings"
                }(_ || (_ = {})),
                function(e) {
                    e.Close = "close", e.Finish = "finish"
                }(R || (R = {}));
            var le = function(e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    n.handleSubmit = function(e, t, i, a, o) {
                        return r.b(n, void 0, void 0, function() {
                            var n, s, c, d, u = this;
                            return r.e(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        if (e !== N.a) return [3, 5];
                                        c = {
                                            userID: this.props.reportContext.targetUserID,
                                            communityID: i || "",
                                            reason: t
                                        }, r.label = 1;
                                    case 1:
                                        return r.trys.push([1, 3, , 4]), [4, this.props.reportUserInCommunity(Object(p.a)(c))];
                                    case 2:
                                        return r.sent(), l.o.tracking.track(h.SpadeEventType.CommunityModeration, {
                                            community_id: i,
                                            name: a,
                                            is_official: !1,
                                            user_id: this.props.sessionUser && this.props.sessionUser.id,
                                            target_id: this.props.reportContext.targetUserID,
                                            action: "report",
                                            reason: e
                                        }), this.setState({
                                            submitStatus: N.b.Success
                                        }, function() {
                                            u.state.showWizard || u.trackAction(T.Submit)
                                        }), [3, 4];
                                    case 3:
                                        return n = r.sent(), l.j.error(n, "ReportUserInCommunity Mutation failed."), this.setState({
                                            submitStatus: N.b.MutationError
                                        }), [3, 4];
                                    case 4:
                                        return [3, 9];
                                    case 5:
                                        if (s = o === k.a.Whisper ? o : this.props.reportContext.contentType, c = {
                                                description: t,
                                                reason: e,
                                                content: s,
                                                contentID: this.props.reportContext.contentID,
                                                extra: this.props.reportContext.extra,
                                                targetID: this.props.reportContext.targetUserID
                                            }, this.props.reportContext.contentType === k.a.Community && this.props.reportContext.extra && (c.description = Object(re.a)(this.props.reportContext.extra, t)), null === c.targetID) return this.setState({
                                            submitStatus: N.b.UserError
                                        }), [2];
                                        r.label = 6;
                                    case 6:
                                        return r.trys.push([6, 8, , 9]), [4, this.props.reportUser(Object(p.a)(c))];
                                    case 7:
                                        return r.sent(), this.props.reportContext.contentType === k.a.Community && l.o.tracking.track(h.SpadeEventType.CommunityReport, {
                                            community_id: this.props.reportContext.contentID,
                                            name: this.props.reportContext.extra,
                                            is_official: !1,
                                            user_id: this.props.sessionUser && this.props.sessionUser.id,
                                            reason: e
                                        }), this.setState({
                                            submitStatus: N.b.Success
                                        }, function() {
                                            u.state.showWizard || u.trackAction(T.Submit)
                                        }), [3, 9];
                                    case 8:
                                        return d = r.sent(), l.j.error(d, "ReportUser Mutation failed."), this.setState({
                                            submitStatus: N.b.MutationError
                                        }), [3, 9];
                                    case 9:
                                        return [2]
                                }
                            })
                        })
                    }, n.handleChildError = function(e) {
                        return n.setState({
                            submitStatus: e
                        })
                    }, n.handleClose = function() {
                        n.props.onClose && n.props.onClose(n.state.submitStatus, n.state.userBlocked)
                    }, n.onBlock = function() {
                        n.props.blockUserMutation(n.props.reportContext.targetUserID, void 0, void 0, r.a({}, n.props.sessionUser, {
                            __typename: "User"
                        })), n.setState({
                            userBlocked: !0
                        })
                    }, n.onUnblock = function() {
                        n.props.unblockUserMutation(n.props.reportContext.targetUserID, r.a({}, n.props.sessionUser, {
                            __typename: "User"
                        })), n.setState({
                            userBlocked: !1
                        })
                    }, n.trackOpen = function(e) {
                        n.state.openEventSent || (n.state.showWizard ? n.trackWizardAction(_.Open, void 0, e) : n.trackAction(T.Open), n.setState({
                            openEventSent: !0
                        }))
                    }, n.trackClose = function(e, t) {
                        n.state.closeEventSent || (n.state.showWizard ? n.trackWizardAction(_.Close, t, void 0, e) : n.trackAction(T.Close), n.setState({
                            closeEventSent: !0
                        }))
                    }, n.trackWizardAction = function(e, t, i, r) {
                        l.o.tracking.track(h.SpadeEventType.ReportWizardFlowAction, {
                            ui_context: n.props.reportContext.contentType,
                            target_user_id: n.props.reportContext.targetUserID,
                            report_sent: n.state.submitStatus === N.b.Success,
                            modal_type: "wizard_v1",
                            extra_user_id: n.props.reportContext.additionalTrackingID,
                            action: e,
                            close_type: r,
                            report_session_id: n.reportID,
                            current_step: t,
                            navigated_to: i
                        })
                    }, n.trackAction = function(e) {
                        l.o.tracking.track(h.SpadeEventType.ReportFlowAction, {
                            ui_context: n.props.reportContext.contentType,
                            target_user_id: n.props.reportContext.targetUserID,
                            report_sent: n.state.submitStatus === N.b.Success,
                            extra_user_id: n.props.reportContext.additionalTrackingID,
                            action: e,
                            report_session_id: n.reportID
                        })
                    }, n.reportID = Object(m.a)();
                    var i = l.o.experiments.getAssignment("TWILIGHT_NEW_REPORTING_WIZARD");
                    return n.state = {
                        submitStatus: N.b.Unsubmitted,
                        showWizard: "yes" === i,
                        openEventSent: !1,
                        closeEventSent: !1,
                        userBlocked: !1
                    }, n
                }
                return r.d(t, e), t.prototype.componentDidMount = function() {
                    this.trackOpen()
                }, t.prototype.componentWillUnmount = function() {
                    this.handleClose(), this.state.showWizard || this.trackClose()
                }, t.prototype.render = function() {
                    var e = {
                        onClose: this.handleClose,
                        onError: this.handleChildError,
                        onSubmit: this.handleSubmit,
                        reportContentType: this.props.reportContext.contentType,
                        submitStatus: this.state.submitStatus,
                        targetUserID: this.props.reportContext.targetUserID,
                        title: this.props.title,
                        defaultDescription: this.props.defaultDescription
                    };
                    return this.state.showWizard ? this.props.data.loading ? a.createElement(g.Oa, null) : a.createElement(ie, r.a({}, e, {
                        user: this.props.sessionUser,
                        targetUser: this.props.data.user,
                        onBlock: this.onBlock,
                        onUnblock: this.onUnblock,
                        trackAction: this.trackWizardAction,
                        trackClose: this.trackClose,
                        userBlocked: this.userBlocked
                    })) : a.createElement(N.c, r.a({}, e))
                }, Object.defineProperty(t.prototype, "userBlocked", {
                    get: function() {
                        var e = this;
                        return !(!this.props.data.currentUser.blockedUsers || !this.props.data.currentUser.blockedUsers.find(function(t) {
                            return !!t && t.id === e.props.reportContext.targetUserID
                        }))
                    },
                    enumerable: !0,
                    configurable: !0
                }), t
            }(a.Component);
            var ce = Object(s.d)(Object(c.a)(ae, {
                name: "reportUserInCommunity"
            }), Object(c.a)(oe, {
                name: "reportUser"
            }), Object(c.a)(se, {
                options: function(e) {
                    return {
                        variables: {
                            userId: e.reportContext.targetUserID
                        }
                    }
                }
            }), Object(f.c)("ReportUser", {
                autoReportInteractive: !0
            }), Object(d.a)(), Object(u.a)(), Object(o.b)(function(e) {
                return {
                    sessionUser: e.session.user
                }
            }, null))(le)
        },
        "dIU+": function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("1/iK"),
                o = n("y5D0"),
                s = n("kRBY"),
                l = n("mrSG"),
                c = n("TSYQ"),
                d = n("q1tI"),
                u = n("/7QA"),
                p = n("eJ65"),
                m = n("yR8l"),
                h = n("geRD"),
                f = n("J9w5"),
                g = n("I6K6"),
                v = n("sgJZ"),
                b = {
                    Channel: "channel"
                };
            var y, k = n("2xye"),
                S = n("GnwI"),
                w = n("Ba7Q"),
                E = n("Ue10"),
                C = n("ZBeb"),
                N = (n("ouUS"), n("CZEr")),
                T = n("Qdxp");
            ! function(e) {
                e[e.IconOnly = 0] = "IconOnly", e[e.TextOnly = 1] = "TextOnly", e[e.IconAndText = 2] = "IconAndText"
            }(y || (y = {}));
            var _ = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isFollowing: !1,
                            showDropdown: !1,
                            disableNotifications: !0
                        }, t.userDataLoaded = function() {
                            return t.props.data && !t.props.data.loading && !t.props.data.error && t.props.data.user
                        }, t.toggleFollowing = function() {
                            var e;
                            t.state.isFollowing ? (t.unfollowUser(), e = k.SpadeEventType.Unfollow) : (t.followUser(), e = k.SpadeEventType.Follow);
                            var n = t.getFollowData();
                            n && function(e, t) {
                                l.b(this, void 0, void 0, function() {
                                    var n, i, r, a, o, s, c, d, p, m;
                                    return l.e(this, function(l) {
                                        switch (l.label) {
                                            case 0:
                                                if (n = null, i = null, r = null, a = null, o = null, !t.channelID) return [3, 5];
                                                l.label = 1;
                                            case 1:
                                                return l.trys.push([1, 3, , 4]), [4, u.o.apollo.client.query({
                                                    query: v,
                                                    variables: {
                                                        id: t.channelID
                                                    }
                                                })];
                                            case 2:
                                                return a = l.sent(), [3, 4];
                                            case 3:
                                                return c = l.sent(), u.j.error(c, "Failed to make query for channel info in FollowEvent reporting.", {
                                                    channelID: t.channelID
                                                }), [3, 4];
                                            case 4:
                                                (r = a && a.data && a.data.user) ? o = r.hosting.stream && r.hosting.stream.game ? r.hosting.stream.game.name : r.stream && r.stream.game && r.stream.game.name: u.j.error(new Error("GraphQL empty response"), "Query for channel info in FollowEvent reporting return no data.", {
                                                    channelID: t.channelID
                                                }), l.label = 5;
                                            case 5:
                                                if (!(d = u.n.getVideoPlayerTrackingData().vodID)) return [3, 10];
                                                l.label = 6;
                                            case 6:
                                                return l.trys.push([6, 8, , 9]), [4, u.o.apollo.client.query({
                                                    query: f,
                                                    variables: {
                                                        id: d
                                                    }
                                                })];
                                            case 7:
                                                return n = l.sent(), [3, 9];
                                            case 8:
                                                return p = l.sent(), u.j.error(p, "Failed to make query for VOd info in FollowEvent reporting.", {
                                                    currentVODID: d
                                                }), [3, 9];
                                            case 9:
                                                (i = n && n.data && n.data.video) ? s = Object(g.a)(i.broadcastType): (s = null, u.j.error(new Error("GraphQL empty response"), "Query for video info in FollowEvent reporting return no data.", {
                                                    currentVODID: d
                                                })), l.label = 10;
                                            case 10:
                                                return m = {
                                                    channel: t.channelLogin,
                                                    channel_id: t.channelID,
                                                    channel_game: o,
                                                    cta_visible: u.n.getVideoPlayerTrackingData().followCTAVisible,
                                                    host_channel: t.hostChannelLogin,
                                                    host_channel_id: t.hostChannelID,
                                                    game: t.game,
                                                    partner: r ? r.isPartner : null,
                                                    src: t.src,
                                                    vod_id: d,
                                                    vod_type: s
                                                }, u.n.track(e, m), [2]
                                        }
                                    })
                                })
                            }(e, {
                                channelLogin: n.user && n.user.login || "",
                                channelID: n.user && n.user.id || "",
                                hostChannelLogin: t.props.hostChannelLogin,
                                hostChannelID: t.props.hostChannelID,
                                src: b.Channel
                            }), t.setState(function(e) {
                                return {
                                    isFollowing: !e.isFollowing,
                                    disableNotifications: !1
                                }
                            })
                        }, t.followUser = function() {
                            var e = t.getFollowData();
                            if (t.props.followUser && e) {
                                t.setState({
                                    showDropdown: !0
                                });
                                var n = l.a({}, Object(h.a)({
                                    disableNotifications: !1,
                                    targetID: e.user && e.user.id || ""
                                }), {
                                    optimisticResponse: {
                                        followUser: {
                                            __typename: "FollowUserPayload",
                                            follow: {
                                                disableNotifications: !1,
                                                __typename: "Follow"
                                            }
                                        }
                                    }
                                });
                                t.props.followUser(n).then(function(e) {
                                    Object(h.e)(T, {
                                        login: t.props.channelLogin
                                    }, function(t) {
                                        var n = t.user;
                                        return n && n.self && (n.self.follower ? n.self.follower.disableNotifications = e.data.followUser.follow.disableNotifications : n.self.follower = {
                                            __typename: "FollowerEdge",
                                            disableNotifications: e.data.followUser.follow.disableNotifications
                                        }), t
                                    }), t.props.onFollow && t.props.onFollow(t.props.channelLogin)
                                })
                            }
                        }, t.unfollowUser = function() {
                            var e = t.getFollowData();
                            if (t.props.unfollowUser && e) {
                                var n = l.a({}, Object(h.a)({
                                    targetID: e.user && e.user.id || ""
                                }), {
                                    optimisticResponse: {
                                        unfollowUser: {
                                            __typename: "UnfollowUserPayload",
                                            follow: {
                                                disableNotifications: null,
                                                __typename: "Follow"
                                            }
                                        }
                                    }
                                });
                                t.props.unfollowUser(n).then(function() {
                                    Object(h.e)(T, {
                                        login: t.props.channelLogin
                                    }, function(e) {
                                        var t = e.user;
                                        return t && t.self && (t.self.follower ? t.self.follower.disableNotifications = null : t.self.follower = {
                                            __typename: "FollowerEdge",
                                            disableNotifications: null
                                        }), e
                                    }), t.props.onUnfollow && t.props.onUnfollow(t.props.channelLogin)
                                })
                            }
                        }, t.getFollowData = function() {
                            return t.props.followData ? t.props.followData : t.props.data
                        }, t
                    }
                    return l.d(t, e), t.prototype.componentDidMount = function() {
                        this.reportInteractive()
                    }, t.prototype.componentDidUpdate = function() {
                        this.props.channelLogin && !this.userDataLoaded() || !this.props.updateContainerWidth || this.props.updateContainerWidth(), this.reportInteractive()
                    }, t.prototype.componentWillMount = function() {
                        var e = this.props.followData;
                        if (e) {
                            var t = e.user;
                            this.setState({
                                isFollowing: t && t.self && t.self.follower && null !== t.self.follower.disableNotifications || !1,
                                disableNotifications: t && t.self && t.self.follower && t.self.follower.disableNotifications
                            })
                        }
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (e.data && !e.data.loading && !e.data.error) {
                            var t = e.data.user;
                            this.setState({
                                isFollowing: t && t.self && t.self.follower && null !== t.self.follower.disableNotifications || !1,
                                disableNotifications: !(t && t.self && t.self.follower && null !== t.self.follower.disableNotifications) || t.self.follower.disableNotifications
                            })
                        }
                    }, t.prototype.render = function() {
                        return this.props.isLoggedIn ? !this.props.showLoadingPlaceholder || this.props.data && !this.props.data.loading ? this.props.currentUserLogin !== this.props.channelLogin && this.props.followUser && this.props.unfollowUser && (this.props.followData || this.props.data && !this.props.data.loading && !this.props.data.error && this.props.data.user) ? this.state.isFollowing ? this.props.hideWhenFollowing ? null : this.props.hideDropdownWhenFollowing ? this.renderUnfollowButton() : this.renderUnfollowButtonWithDropdown() : this.renderFollowButton(this.toggleFollowing) : null : this.renderPlaceholder() : this.renderFollowButton(this.props.login)
                    }, t.prototype.renderPlaceholder = function() {
                        switch (this.props.size) {
                            case E.z.Large:
                                return d.createElement(E.Va, {
                                    width: 93,
                                    height: 36
                                });
                            case E.z.Small:
                                return d.createElement(E.Va, {
                                    width: 66,
                                    height: 24
                                });
                            default:
                                return d.createElement(E.Va, {
                                    width: 70,
                                    height: 30
                                })
                        }
                    }, t.prototype.renderFollowButton = function(e) {
                        var t = this.props.isHostedFollow && this.props.channelName ? Object(u.d)("Follow {username}", {
                            username: this.props.channelName
                        }, "FollowButton") : Object(u.d)("Follow", "FollowButton");
                        return d.createElement(E.v, l.a({
                            ariaLabel: t,
                            blurAfterClick: this.props.blurAfterClick,
                            "data-a-target": "follow-button",
                            "data-test-selector": "follow-button",
                            icon: this.getButtonIcon(),
                            onClick: e,
                            size: this.props.size,
                            tabIndex: this.props.tabIndex,
                            type: this.props.buttonType || E.B.Default
                        }, Object(E.Ub)(this.props)), this.props.followUIType === y.IconOnly ? null : t)
                    }, t.prototype.renderUnfollowButton = function(e) {
                        var t = !(!this.props.buttonType || this.props.buttonType !== E.B.Hollow),
                            n = this.props.buttonType && this.props.buttonType === E.B.Hollow ? Object(u.d)("Following", "FollowButton") : Object(u.d)("Followed", "FollowButton"),
                            i = Object(u.d)("Unfollow", "FollowButton"),
                            r = c("follow-btn follow-btn--following", {
                                "follow-btn--following-hollow": t,
                                "follow-btn--following-default": !t,
                                "follow-btn--with-dropdown": e
                            });
                        return d.createElement("button", l.a({
                            className: r,
                            "aria-label": i,
                            "data-a-target": "unfollow-button",
                            "data-test-selector": "unfollow-button",
                            tabIndex: this.props.tabIndex,
                            onClick: this.toggleFollowing
                        }, Object(E.Ub)(this.props)), d.createElement(E.Ma, {
                            padding: {
                                x: .5
                            },
                            className: "follow-btn__inner"
                        }, d.createElement("span", {
                            className: "follow-btn__label",
                            "data-test-selector": "unfollow-button-label"
                        }, this.props.unfollowUIType !== y.TextOnly && d.createElement(E.fb, {
                            asset: E.gb.Heart
                        }), this.props.unfollowUIType !== y.IconOnly && d.createElement(E.Ma, {
                            padding: {
                                x: .5
                            }
                        }, n)), d.createElement("span", {
                            className: "follow-btn__label-hover",
                            "data-test-selector": "unfollow-button-label-hover"
                        }, this.props.unfollowUIType !== y.TextOnly && d.createElement(E.fb, {
                            asset: E.gb.Unheart
                        }), this.props.unfollowUIType !== y.IconOnly && d.createElement(E.Ma, {
                            padding: {
                                x: .5
                            }
                        }, i))))
                    }, t.prototype.renderUnfollowButtonWithDropdown = function() {
                        var e = this.props.balloonDirection ? this.props.balloonDirection : E.r.BottomRight;
                        return d.createElement(E.Ma, {
                            display: E.R.Flex,
                            className: "follow-btn",
                            "data-test-selector": "unfollow-button__dropdown"
                        }, d.createElement(E.Ma, null, this.renderUnfollowButton(!0)), d.createElement(p.a, {
                            display: E.R.InlineFlex,
                            openByDefault: this.state.showDropdown
                        }, d.createElement("button", {
                            tabIndex: this.props.tabIndex,
                            "aria-label": Object(u.d)("Dropdown", "FollowButton"),
                            className: "follow-btn__dropdown-toggle",
                            "data-a-target": "follow-dropdown-toggle"
                        }, d.createElement(E.Ma, {
                            justifyContent: E.La.Center,
                            display: E.R.Flex,
                            alignItems: E.c.Stretch,
                            fullHeight: !0
                        }, d.createElement(E.fb, {
                            asset: E.gb.GlyphArrDown
                        }))), d.createElement(E.q, {
                            size: E.s.Small,
                            direction: e,
                            "data-a-target": "follow-notifications-balloon"
                        }, d.createElement(E.Ma, {
                            padding: 1
                        }, d.createElement(w.a, {
                            followData: this.getFollowData(),
                            channelLogin: this.props.channelLogin
                        })))))
                    }, t.prototype.getButtonIcon = function() {
                        var e = this.props.buttonType && this.props.buttonType === E.B.Hollow ? E.gb.FollowHollow : E.gb.Heart;
                        return this.props.followUIType === y.TextOnly ? void 0 : e
                    }, t.prototype.reportInteractive = function() {
                        O(this.props) ? this.props.latencyTracking.reportInteractive() : this.props.data && !this.props.data.loading && this.props.latencyTracking.reportInteractive()
                    }, t
                }(d.Component),
                R = Object(r.d)(Object(m.a)(T, {
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin
                            }
                        }
                    },
                    skip: function(e) {
                        return O(e)
                    }
                }), Object(m.a)(C, {
                    name: "followUser"
                }), Object(m.a)(N, {
                    name: "unfollowUser"
                }), Object(S.c)("FollowButton"))(_);

            function O(e) {
                return !e.isLoggedIn || (!e.channelLogin || (!!e.followData || e.channelLogin === e.currentUserLogin))
            }
            var I = Object(i.b)(function(e) {
                var t = Object(s.d)(e);
                return {
                    currentUserLogin: t && t.login,
                    isLoggedIn: Object(s.e)(e)
                }
            }, function(e) {
                return Object(r.b)({
                    login: function() {
                        return Object(o.f)(a.a.FollowButton)
                    }
                }, e)
            })(R);
            n.d(t, "b", function() {
                return y
            }), n.d(t, !1, function() {}), n.d(t, "a", function() {
                return I
            })
        },
        dPg0: function(e, t, n) {},
        dUi4: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("kRBY"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("/7QA"),
                l = n("zB42"),
                c = n("NdhY"),
                d = n("D2+s"),
                u = n("Ue10"),
                p = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isEnabled: s.a.forceBenchmarkingTools || s.l.get(c.b.forceToolsStorageKey, s.a.forceBenchmarkingTools)
                        }, t.toggleLocalCookie = function() {
                            s.l.set(d.a, t.state.isEnabled), s.l.set(c.b.forceToolsStorageKey, !t.state.isEnabled), location.reload()
                        }, t
                    }
                    return a.d(t, e), t.prototype.render = function() {
                        return this.props.isStaff || s.a.buildType !== l.a.Production ? o.createElement(u.qb, {
                            margin: {
                                bottom: 1
                            },
                            padding: {
                                x: 2
                            }
                        }, o.createElement(u.J, {
                            checked: this.state.isEnabled,
                            disabled: s.a.forceBenchmarkingTools,
                            onChange: this.toggleLocalCookie,
                            label: "Staff Console"
                        })) : null
                    }, t
                }(o.Component);
            var m = Object(i.b)(function(e) {
                var t = Object(r.d)(e);
                return {
                    isStaff: t && t.roles && t.roles.isStaff
                }
            })(p);
            n.d(t, "a", function() {
                return m
            })
        },
        daa2: function(e, t, n) {
            "use strict";
            n.d(t, "f", function() {
                return h
            }), n.d(t, "e", function() {
                return f
            }), n.d(t, "c", function() {
                return g
            }), n.d(t, "b", function() {
                return v
            }), n.d(t, "d", function() {
                return b
            }), n.d(t, "a", function() {
                return y
            }), n.d(t, "g", function() {
                return k
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("NSwr"),
                o = n("kRBY"),
                s = n("4/kP"),
                l = n("RmgP"),
                c = "twilight.sessionID",
                d = 0,
                u = r.j.withCategory("Session Status"),
                p = {
                    sessionID: r.o.session.tabID,
                    availability: "",
                    activity: null
                },
                m = p;

            function h(e) {
                return u.debug("Updating activity", e), m = i.a({}, m, {
                    activity: e
                }), S()
            }

            function f(e) {
                u.debug("Updating visibility", e),
                    function(e) {
                        i.b(this, void 0, void 0, function() {
                            var t, n;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        if (!Object(o.e)(r.o.store.getState())) return [2];
                                        u.debug("Setting visibility on server", {
                                            visibility: e
                                        }), i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, , 4]), [4, r.o.apollo.client.mutate({
                                            mutation: l,
                                            variables: {
                                                input: {
                                                    visibility: e
                                                }
                                            }
                                        })];
                                    case 2:
                                        if (!(t = i.sent()) || !t.data) throw Error("EmptyResponse");
                                        return u.debug("Visibility set", {
                                            visibility: t.data.updateVisibility.user.availability
                                        }), [3, 4];
                                    case 3:
                                        return n = i.sent(), u.warn("Failed to update visibility.", n), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }(e)
            }

            function g(e) {
                u.debug("Saving current availability", e), m = i.a({}, m, {
                    availability: e
                })
            }

            function v() {
                g(a.a.Online)
            }

            function b() {
                g(a.a.Idle)
            }

            function y() {
                u.debug("Clearing activity"), m = i.a({}, m, {
                    activity: null
                }), S()
            }

            function k() {
                return i.b(this, void 0, void 0, function() {
                    return i.e(this, function(e) {
                        switch (e.label) {
                            case 0:
                                return u.debug("Clearing previous session"), m = {
                                    sessionID: r.l.get(c, ""),
                                    availability: a.a.Online,
                                    activity: null
                                }, [4, S()];
                            case 1:
                                return e.sent(), u.debug("Setting new session"), m = i.a({}, m, {
                                    sessionID: r.o.session.tabID
                                }), t = r.o.session.tabID, r.l.set(c, t), [4, S()];
                            case 2:
                                return [2, e.sent()]
                        }
                        var t
                    })
                })
            }

            function S() {
                return i.b(this, void 0, void 0, function() {
                    var e, t, n;
                    return i.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                if (!Object(o.e)(r.o.store.getState())) return [2];
                                u.debug("Setting status on server", {
                                    state: m
                                }), d && clearTimeout(d), i.label = 1;
                            case 1:
                                return i.trys.push([1, 3, , 4]), [4, r.o.apollo.client.mutate({
                                    mutation: s,
                                    variables: {
                                        input: m
                                    }
                                })];
                            case 2:
                                if (!(e = i.sent()) || !e.data) throw Error("EmptyResponse");
                                if (!e.data.setSessionStatus.setAgainInSeconds) throw Error("InvalidSetAgainInSeconds");
                                return t = e.data.setSessionStatus.setAgainInSeconds, u.debug("Status scheduled to be set again", {
                                    setAgainInSeconds: t
                                }), d = setTimeout(S, 1e3 * t), [3, 4];
                            case 3:
                                return n = i.sent(), u.warn("Failed to update status. Trying again in 60 seconds.", n), d = setTimeout(S, 6e4), [3, 4];
                            case 4:
                                return [2]
                        }
                    })
                })
            }
        },
        dqQ1: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return o
            });
            var i = n("mrSG"),
                r = n("MgK0");

            function a(e, t) {
                var n = t.config,
                    a = t.logger;
                return i.b(this, void 0, void 0, function() {
                    var t, s;
                    return i.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                t = new Set(Object(r.e)({
                                    config: n,
                                    logger: a
                                })), e && t.add(e), i.label = 1;
                            case 1:
                                return i.trys.push([1, 3, , 4]), [4, Promise.all(Array.from(t).map(function(e) {
                                    return o(e, {
                                        config: n,
                                        logger: a
                                    })
                                }))];
                            case 2:
                                return i.sent(), [3, 4];
                            case 3:
                                return s = i.sent(), a.error(s, "Failed to revoke one or more OAuth tokens."), [3, 4];
                            case 4:
                                return Object(r.g)({
                                    config: n
                                }), [2]
                        }
                    })
                })
            }

            function o(e, t) {
                var n = t.config,
                    r = t.logger;
                return i.b(this, void 0, void 0, function() {
                    var t, a, o, s, l, c, d, u, p, m, h;
                    return i.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                return r.debug("Getting OAuth client ID for token."), [4, fetch(n.apiBaseURL + "/kraken", {
                                    method: "GET",
                                    headers: {
                                        authorization: "OAuth " + e
                                    }
                                })];
                            case 1:
                                return 200 === (t = i.sent()).status ? [3, 3] : (o = (a = r).warn, s = ["Got a " + t.status + " status response while getting OAuth client ID."], l = {}, [4, t.text()]);
                            case 2:
                                throw o.apply(a, s.concat([(l.body = i.sent(), l.status = t.status, l)])), new Error("Failed to get OAuth client ID: " + t.status + " status response.");
                            case 3:
                                return [4, t.json()];
                            case 4:
                                return (c = i.sent()) && c.token && c.token.client_id ? [3, 6] : (u = (d = r).warn, p = ["Received a malformed response while getting OAuth client ID."], m = {}, [4, t.text()]);
                            case 5:
                                throw u.apply(d, p.concat([(m.body = i.sent(), m)])), new Error("Failed to get OAuth client ID: Malformed response.");
                            case 6:
                                return r.debug("Revoking OAuth token.", {
                                    clientID: c.token.client_id
                                }), (h = new FormData).append("client_id", c.token.client_id), h.append("token", e), [4, fetch(n.passportBaseURL + "/oauth2/revoke", {
                                    body: h,
                                    method: "POST",
                                    mode: "no-cors"
                                })];
                            case 7:
                                return i.sent(), [2]
                        }
                    })
                })
            }
        },
        "dr/4": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "Thread_SetMuteThread"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UpdateWhisperThreadInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "updateWhisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "thread"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isMuted"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 129
                }
            };
            n.loc.source = {
                body: "mutation Thread_SetMuteThread($input: UpdateWhisperThreadInput!) {\nupdateWhisperThread(input: $input) {\nthread {\nid\nisMuted\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "dx/T": function(e, t, n) {
            "use strict";
            var i = n("q1tI"),
                r = n("/7QA"),
                a = n("5zXJ"),
                o = n("x1M1"),
                s = n("Ue10"),
                l = (n("/mBu"), {
                    themed: !0,
                    dark: {
                        "1x": a.b + "/dark/animated/1/cheertutorial.gif"
                    },
                    light: {
                        "1x": a.b + "/light/animated/1/cheertutorial.gif"
                    }
                }),
                c = function() {
                    return i.createElement(s.Ma, {
                        display: s.R.Flex,
                        padding: {
                            top: 5,
                            bottom: 3
                        },
                        flexGrow: 1,
                        flexDirection: s.T.Column,
                        justifyContent: s.La.Center,
                        alignItems: s.c.Center
                    }, i.createElement(s.Q, {
                        type: s.Gb.H4,
                        bold: !0
                    }, i.createElement(o.a, {
                        className: "cheermote-help__tutorial-image",
                        sources: l
                    }), Object(r.d)("How to Cheer", "Bits--CheermoteHelp")), i.createElement(s.Ma, {
                        padding: {
                            x: 3
                        }
                    }, i.createElement(s.Q, null, Object(r.d)('Type "cheer" + the number of Bits you want to Cheer.', "Bits--CheermoteHelp"))))
                };
            n.d(t, "a", function() {
                return c
            })
        },
        dx0B: function(e, t, n) {},
        eDVu: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/aPz");

            function o(e) {
                return function(t) {
                    return function(n) {
                        function o(t) {
                            var i = n.call(this, t) || this;
                            return i.mutator = function(e, t) {
                                return i.options.mutator(e, t)
                            }, i.typesChanged = function(e) {
                                if (e.types && !i.options.types || !e.types && i.options.types) return !0;
                                if (e.types && i.options.types) {
                                    if (e.types.length !== i.options.types.length) return !0;
                                    var t = new Set(i.options.types);
                                    return e.types.some(function(e) {
                                        return !t.has(e)
                                    })
                                }
                                return !1
                            }, i.options = e(t), i
                        }
                        return i.d(o, n), o.prototype.componentDidMount = function() {
                            this.options.skip || this.subscribe(this.options)
                        }, o.prototype.componentWillReceiveProps = function(t) {
                            var n = e(t);
                            n.skip !== this.options.skip && (n.skip ? this.unsubscribe() : this.subscribe(n)), n.skip || (n.topic !== this.options.topic || n.type !== this.options.type || this.typesChanged(n)) && (this.unsubscribe(), this.subscribe(n)), this.options = n
                        }, o.prototype.componentWillUnmount = function() {
                            this.unsubscribe()
                        }, o.prototype.render = function() {
                            return r.createElement(t, i.a({}, this.props))
                        }, o.prototype.subscribe = function(e) {
                            this.unsubscriber = Object(a.t)({
                                query: e.query,
                                variables: e.variables,
                                topic: e.topic,
                                type: e.type,
                                types: e.types,
                                mutator: this.mutator,
                                skipMessage: e.skipMessage
                            })
                        }, o.prototype.unsubscribe = function() {
                            this.unsubscriber && (this.unsubscriber(), this.unsubscriber = null)
                        }, o
                    }(r.Component)
                }
            }
            n.d(t, "a", function() {
                return o
            })
        },
        eFQ3: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("eO8H"),
                s = n("/7QA"),
                l = n("eJ65"),
                c = n("2xye"),
                d = n("dIU+"),
                u = n("RQ6e"),
                p = n("4qQ0"),
                m = n("QjI3"),
                h = n("Ue10");
            n("aU7c");
            ! function(e) {
                e.ChannelName = "hosting-ui__channel-name", e.Footer = "hosting-ui__footer", e.Header = "hosting-ui__header", e.MoreButton = "hosting-ui__more-button", e.ReportButton = "hosting-ui__report-button"
            }(i || (i = {}));
            var f = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleReportHosterClick = function() {
                            t.props.isLoggedIn ? t.props.showReportUserModal({
                                onClose: t.handleReportModalClose,
                                reportContext: {
                                    contentType: p.a.User,
                                    targetUserID: t.props.hostChannelID
                                },
                                title: Object(s.d)("Report {channelDisplayName}", {
                                    channelDisplayName: t.props.hostChannelDisplayName
                                }, "VideoPlayerHostingUI")
                            }) : t.props.login()
                        }, t.handleReportModalClose = function(e) {
                            (e === u.b.MutationError || e === u.b.Success) && t.props.history.push("/")
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidUpdate = function(e) {
                        this.isVisible(this.props) !== this.isVisible(e) && this.props.triggerPlayerReposition && this.props.triggerPlayerReposition()
                    }, t.prototype.render = function() {
                        var e = this.isVisible(this.props);
                        return a.createElement(h.qb, {
                            className: "video-player-hosting-ui__container"
                        }, e && this.renderHeader(), a.createElement("span", {
                            key: "video-player"
                        }, this.props.children), a.createElement(h.Ma, {
                            display: e ? h.R.Block : h.R.Hide,
                            position: h.Wa.Relative,
                            zIndex: h.Tb.Above
                        }, e && this.renderFooter()))
                    }, t.prototype.isVisible = function(e) {
                        return !!e.hostedChannelDisplayName
                    }, t.prototype.renderHeader = function() {
                        return a.createElement(h.e, {
                            type: h.j.SlideInBottom,
                            delay: h.f.Medium,
                            duration: h.g.Medium,
                            enabled: !0
                        }, a.createElement(o.a, {
                            key: "hosting-ui-header",
                            className: "video-player-hosting-ui__link",
                            to: {
                                pathname: "/" + this.props.hostedChannelLogin,
                                state: {
                                    medium: c.PageviewMedium.Channel,
                                    content: c.PageviewContent.Host
                                }
                            },
                            "data-a-target": "hosting-ui-link",
                            "data-test-selector": i.Header
                        }, a.createElement(h.qb, {
                            className: "video-player-hosting-ui__header",
                            display: h.R.Flex,
                            background: h.n.AccentAlt2,
                            color: h.K.Overlay,
                            alignItems: h.c.Center,
                            padding: {
                                x: 1,
                                y: .5
                            },
                            "data-a-target": "hosting-ui-header",
                            borderRadius: {
                                topLeft: h.t.Medium,
                                topRight: h.t.Medium
                            }
                        }, a.createElement(h.Ma, {
                            className: "video-player-hosting-ui__avatar-container"
                        }, a.createElement(h.m, {
                            src: this.props.hostedChannelProfileImageURL || s.a.defaultAvatarURL,
                            size: 30,
                            alt: Object(s.d)("Hosted Channel {hostedChannelDisplayName}'s Avatar", {
                                hostedChannelDisplayName: this.props.hostedChannelDisplayName || ""
                            }, "VideoPlayerHostingUI")
                        })), a.createElement(h.qb, {
                            margin: {
                                left: 1
                            },
                            fontSize: h.V.Size5
                        }, Object(s.d)("Hosting", "VideoPlayerHostingUI"), " ", a.createElement(h.Q, {
                            type: h.Gb.Span,
                            className: "video-player-hosting-ui__channel-name",
                            color: h.K.OverlayAlt,
                            "data-a-target": "hosting-ui-channel-name",
                            "data-test-selector": i.ChannelName
                        }, this.props.hostedChannelDisplayName)))))
                    }, t.prototype.renderFooter = function() {
                        return a.createElement(h.e, {
                            type: h.j.SlideInTop,
                            enabled: !0,
                            delay: h.f.Medium,
                            duration: h.g.Medium
                        }, a.createElement(h.qb, {
                            key: "hosting-ui-footer",
                            background: h.n.AccentAlt2,
                            className: "video-player-hosting-ui__footer",
                            display: h.R.Block,
                            padding: 1,
                            "data-test-selector": i.Footer,
                            "data-a-target": "hosting-ui-footer",
                            borderRadius: {
                                bottomLeft: h.t.Medium,
                                bottomRight: h.t.Medium
                            }
                        }, a.createElement(h.Ma, {
                            padding: {
                                y: .5
                            },
                            display: h.R.Flex,
                            justifyContent: h.La.Between
                        }, a.createElement(h.Ma, {
                            display: h.R.Flex
                        }, a.createElement(h.Ma, {
                            margin: {
                                right: 1
                            }
                        }, a.createElement(d.a, {
                            "data-a-target": "hosting-ui-follow-button",
                            channelName: this.props.hostedChannelLogin || "",
                            channelLogin: this.props.hostedChannelLogin,
                            hostChannelLogin: this.props.hostChannelLogin,
                            hostChannelID: this.props.hostChannelID,
                            isHostedFollow: !0,
                            balloonDirection: h.r.BottomLeft,
                            followUIType: d.b.IconAndText,
                            unfollowUIType: d.b.IconOnly
                        })), a.createElement(h.Ma, null, a.createElement(m.a, {
                            channelLogin: this.props.hostedChannelLogin,
                            hostChannelID: this.props.hostChannelID,
                            hostChannelLogin: this.props.hostChannelLogin,
                            "data-a-target": "hosting-ui-subscribe-button"
                        }))), a.createElement(l.a, null, a.createElement(h.w, {
                            ariaLabel: Object(s.d)("More options", "HostingUI"),
                            overlay: !0,
                            icon: h.gb.More,
                            onClick: this.handleReportHosterClick,
                            "data-a-target": "hosting-ui-more-button",
                            "data-test-selector": i.MoreButton
                        }), a.createElement(h.q, {
                            direction: h.r.TopRight,
                            "data-a-target": "hosting-ui-more-balloon"
                        }, a.createElement(h.Ma, {
                            padding: {
                                y: 1
                            }
                        }, a.createElement(h.Ja, {
                            onClick: this.handleReportHosterClick,
                            "data-a-target": "hosting-ui-report-button",
                            "data-test-selector": i.ReportButton
                        }, a.createElement(h.Ma, {
                            padding: {
                                x: 1,
                                y: .5
                            }
                        }, Object(s.d)("Report {hostChannelDisplayName}", {
                            hostChannelDisplayName: this.props.hostChannelDisplayName
                        }, "VideoPlayerHostingUI")))))))))
                    }, t
                }(a.Component),
                g = n("/MKj"),
                v = n("fvjX"),
                b = n("1/iK"),
                y = n("aCAx"),
                k = n("y5D0"),
                S = n("kRBY"),
                w = n("/HY+");
            var E = Object(g.b)(function(e) {
                    return {
                        isLoggedIn: Object(S.e)(e)
                    }
                }, function(e) {
                    return Object(v.b)({
                        login: function() {
                            return Object(k.f)(b.a.ReportHoster)
                        },
                        showReportUserModal: function(e) {
                            var t = r.g(e, []);
                            return Object(y.d)(w.a, t)
                        }
                    }, e)
                })(Object(o.f)(f)),
                C = n("dtw8"),
                N = n("Pw1c"),
                T = [];
            N.onchange = function() {
                T.forEach(function(e) {
                    e()
                })
            };
            var _ = n("d0ua"),
                R = n("XDQu"),
                O = n("KxT4"),
                I = n("S1Za"),
                D = n("AKMF"),
                P = n("TSYQ"),
                x = n("1hWM"),
                L = n("imBb"),
                F = n("cr+I"),
                M = n("Fxe2"),
                A = n("f00E"),
                U = n("vRsq"),
                B = n("kz7j"),
                j = n("ndwU"),
                z = n("GnwI");
            var W = n("YFoo"),
                V = n("kxrW"),
                H = n("oKCn"),
                G = n("lTz2"),
                q = (n("JRTt"), n("Addw")),
                Q = {
                    amazon: !1,
                    comscore: !1,
                    google: !1
                },
                K = {
                    allowfullscreen: !0,
                    externalfullscreen: !1,
                    autoplay: !0,
                    branding: !1,
                    channelInfo: !1,
                    controls: !0,
                    height: "100%",
                    playsinline: !0,
                    player: H.c.Site,
                    showInfo: !1,
                    showtheatre: !1,
                    trackingProperties: {
                        client_app: "twilight"
                    },
                    width: "100%",
                    oauth_token: "",
                    gdpr: Q
                };

            function Y() {
                return !!window.Twitch && !!window.Twitch.Player
            }
            var X = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.lastGDPR = Q, n.hasInitializedOffsets = !1, n.logger = s.j.withCategory("video-player"), n.checkPlayerDependencyStatus = function() {
                            Y() ? (n.setState({
                                canInitializePlayer: !0
                            }), n.checkPlayerDependencyAnimationFrame = null) : n.checkPlayerDependencyAnimationFrame = requestAnimationFrame(n.checkPlayerDependencyStatus)
                        }, n.attachRef = function(e) {
                            return n.playerRef = e
                        }, n.onMetadataLoaded = function() {
                            var e = n.player && n.player.getSessionInfo();
                            e && (n.logger.debug("Got player session info from player instance", e), s.n.setVideoPlayerTrackingData({
                                broadcastID: e.broadcastId,
                                playSessionID: e.playSessionId
                            }))
                        }, n.onOpenStream = function() {
                            if (n.props.playerTypeOverride === H.c.Frontpage && n.player)
                                if (n.props.channelLogin) s.o.history.push("/" + n.props.channelLogin);
                                else if (n.props.vodID) {
                                var e = Math.floor(n.player.getCurrentTime());
                                s.o.history.push("/videos/" + n.props.vodID + "?t=" + Object(q.a)(e))
                            } else n.props.collectionID && s.o.history.push("/collections/" + n.props.collectionID)
                        }, n.onPlayerReady = function() {
                            n.player && (n.logger.debug("Ready"), n.props.latencyTracking.reportInteractive(), n.hasPlayed = !1, n.props.latencyTracking.reportCustomEvent(n.playerLoaded), n.setState({
                                playerInitialized: !0
                            }, n.updatePlayerTrackingDataFromProps))
                        }, n.onPlayerPlay = function() {
                            n.logger.debug("Play"), n.reportPlayerBuffering(), n.lastPausedProp = !1, n.togglePause(!1)
                        }, n.onPlayerPlaying = function() {
                            n.logger.debug("Playing"), n.reportPlayerPlayed(), n.lastPausedProp = !1, n.state.playerRefID !== n.props.activeVideoPlayerRefID && n.props.reportPlayerInstanceStarted && n.props.reportPlayerInstanceStarted(n.state.playerRefID), n.togglePause(!1)
                        }, n.onPause = function() {
                            n.logger.debug("Pause"), n.lastPausedProp = !0, n.togglePause(!0)
                        }, n.togglePause = function(e) {
                            n.setState({
                                playerPaused: e
                            }), n.props.onPauseToggled && n.props.onPauseToggled(e)
                        }, n.onStreamStatusOnline = function() {
                            n.props.onStreamStatusChange && n.props.onStreamStatusChange(V.a.Online)
                        }, n.onStreamStatusOffline = function() {
                            n.props.onStreamStatusChange && n.props.onStreamStatusChange(V.a.Offline)
                        }, n.onTheatreChange = function(e) {
                            e ? (n.logger.debug("Theatre Entered"), n.props.enableTheatreMode && !n.props.theatreModeEnabled && n.props.enableTheatreMode()) : (n.logger.debug("Theatre Exited"), n.props.disableTheatreMode && n.props.theatreModeEnabled && n.props.disableTheatreMode())
                        }, n.onFullScreenChange = function() {
                            n.player && (n.logger.debug("Fullscreen change", n.player.fullscreen), n.player.fullscreen !== n.state.isFullScreen && n.setState({
                                isFullScreen: n.player.fullscreen
                            }))
                        }, n.onExternalFullScreenChange = function() {
                            n.player && (n.logger.debug("External Fullscreen change", n.player.fullscreen), n.player.fullscreen !== n.state.isFullScreen && (n.player.fullscreen ? n.enterFullscreen() : n.exitFullscreen()))
                        }, n.onClipsModerationOpen = function(e) {
                            n.player && (n.logger.debug("Clips Moderation Open", e), n.props.onClipsModerationOpen && n.props.onClipsModerationOpen(e))
                        }, n.onTwilightFullscreenChange = function() {
                            var e = n.props.fullscreen.element(),
                                t = !!e && !!n.playerRef && e.contains(n.playerRef);
                            n.state.isFullScreen && !t && n.exitFullscreen()
                        }, n.onSeek = function() {
                            n.props.onSeek && n.player && n.props.onSeek(n.player.getCurrentTime())
                        }, n.onTimeUpdate = function() {
                            n.props.onVideoTimeChange && n.player && n.props.onVideoTimeChange(n.player.getCurrentTime())
                        }, n.onHistoryChange = function() {
                            n.state.isFullScreen && n.exitFullscreen()
                        }, n.onTransitionToCollectionVod = function(e) {
                            if (n.props.onNavigationRequest) {
                                var t = {};
                                e.vodId && (t.videoID = Object(M.a)(e.vodId)), e.collectionId && (t.collectionID = e.collectionId), n.props.onNavigationRequest(t)
                            }
                        }, n.onTransitionToRecommendedVod = function(e) {
                            if (n.props.onNavigationRequest) {
                                var t = {};
                                e.vodId && (t.videoID = Object(M.a)(e.vodId)), n.props.onNavigationRequest(t)
                            }
                        }, n.onPersistentPlayerToggled = function() {
                            n.props.togglePersistentPlayer && n.props.togglePersistentPlayer()
                        }, n.updatePlayerTrackingData = function(e) {
                            n.state.playerInitialized && n.player && n.player.setTrackingProperties(function(e, t) {
                                var n = s.n.getLastPageview(),
                                    i = {
                                        host_channel: e.hostChannel,
                                        collapse_right: !e.rightColumnExpanded,
                                        collapse_left: !e.sideNavExpanded
                                    };
                                t && (n ? t.debug("Tracking data updated.", {
                                    pageviewProperties: n,
                                    updates: i
                                }) : t.debug("pageviewProperties not found; only hosting status updated", {
                                    pageviewProperties: n,
                                    updates: i
                                }));
                                var a = e.history.location && e.history.location.state || {},
                                    o = {
                                        item_tracking_id: a.item_tracking_id,
                                        item_position: a.item_position,
                                        row_position: a.row_position,
                                        row_name: a.row_name
                                    };
                                return r.a({}, o, n, i)
                            }(e, s.j))
                        }, n.updatePlayerTrackingDataFromProps = function() {
                            n.updatePlayerTrackingData(n.props)
                        }, n.updatePlayerType = function(e) {
                            var t = e || K.player;
                            n.player && n.playerType !== t && (n.player.setPlayerType(t), n.playerType = t)
                        }, n.maybeRecordClip = function() {
                            n.player && n.state.playerInitialized && !Object(j.a)() && n.player.recordClip()
                        }, n.createPlayerGDPROptions = function(e) {
                            return {
                                amazon: !e.gdprBlockAmazonContent,
                                comscore: !e.gdprBlockComScoreContent,
                                google: !e.gdprBlockGoogleContent
                            }
                        }, n.updatePlayerGDPRConsent = function(e) {
                            if (n.player) try {
                                var t = n.createPlayerGDPROptions(e);
                                t.amazon !== n.lastGDPR.amazon && n.player.setAmazonGDPRConsent(t.amazon), t.comscore !== n.lastGDPR.comscore && n.player.setComscoreGDPRConsent(t.comscore), t.google !== n.lastGDPR.google && n.player.setGoogleGDPRConsent(t.google), n.lastGDPR = t
                            } catch (e) {
                                var i = {
                                        playerHasGDPR: "function" == typeof n.player.setAmazonGDPRConsent,
                                        userAgent: navigator.userAgent
                                    },
                                    r = "Failed to set player GDPR consent. Data: " + JSON.stringify(i);
                                n.logger.error(new Error("Failed to set player GDPR consent"), r, {
                                    data: i
                                })
                            }
                        }, n.playerBuffering = n.registerBufferingEvent(), n.playerCreated = n.registerCreatedEvent(), n.playerLoaded = n.registerLoadedEvent(), n.playerPlayed = n.registerPlayedEvent(), n.state = {
                            canInitializePlayer: Y(),
                            playerInitialized: !1,
                            isFullScreen: !1,
                            playerPaused: !1,
                            playerRefID: Object(A.a)()
                        }, n.playerType = t.playerTypeOverride || K.player, n.lastSetChannel = t.channelLogin, n.lastGDPR = n.createPlayerGDPROptions(t), t.fullscreen.addChangeListener(n.onTwilightFullscreenChange), t.instanceRef && t.instanceRef(n), n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        if (this.props.latencyTracking.reportCustomEvent(this.playerCreated), this.bindHotKeys(), this.historyUnlistener = this.props.history.listen(this.onHistoryChange), this.state.canInitializePlayer ? this.initializePlayer() : this.checkPlayerDependencyAnimationFrame = window.requestAnimationFrame(this.checkPlayerDependencyStatus), s.n.eventEmitter.addListener(c.SpadeEventType.Pageview, this.updatePlayerTrackingDataFromProps), window.__playerScriptChunk && !t.tagInjected) {
                            this.logger.debug("Loading player chunk after page loaded");
                            var e = document.createElement("script");
                            e.async = !0, e.crossOrigin = "anonymous", e.src = window.__playerScriptChunk, document.body.appendChild(e);
                            var n = document.createElement("link");
                            n.href = window.__playerStyleChunk, n.media = "screen", n.rel = "stylesheet", n.type = "text/css", document.body.appendChild(n), t.tagInjected = !0
                        }
                    }, t.prototype.componentWillUpdate = function(e, t) {
                        if (this.state.canInitializePlayer || !t.canInitializePlayer) {
                            if (t.canInitializePlayer && t.playerInitialized) {
                                if (this.updatePlayerTrackingData(e), this.updatePlayerType(e.playerTypeOverride), this.player && t.isFullScreen !== this.player.fullscreen && this.player.setFullscreen(t.isFullScreen), this.player) {
                                    var n = this.props.editing || {},
                                        i = e.editing || {},
                                        r = n.startOffset,
                                        a = n.endOffset,
                                        o = n.videoUrl,
                                        l = n.isPostEdit;
                                    o !== i.videoUrl && i.slug && this.player.setEditClipStream({
                                        videoUrl: i.videoUrl,
                                        slug: i.slug
                                    }), l !== i.isPostEdit && this.player.updateClipsEditing({
                                        isPostEdit: i.isPostEdit
                                    }), (!(this.hasInitializedOffsets || !i.startOffset || !i.endOffset) || r !== i.startOffset || a !== i.endOffset) && (this.player.updateEditingOffsets([{
                                        startOffset: i.startOffset,
                                        endOffset: i.endOffset
                                    }]), this.hasInitializedOffsets || (this.hasInitializedOffsets = !0))
                                }
                                this.player && e.clipSlug && this.props.clipSlug !== e.clipSlug && this.player.setClip(e.clipSlug), this.player && e.theatreModeEnabled !== this.player.getTheatre() && this.player.setTheatre(e.theatreModeEnabled), this.player && e.miniModeEnabled !== this.props.miniModeEnabled && this.player.setMiniPlayerMode(!!e.miniModeEnabled), this.player && t.playerPaused !== this.lastPausedProp && (t.playerPaused ? this.player.pause() : t.playerPaused || this.player.play(), this.lastPausedProp = t.playerPaused), this.updatePlayerGDPRConsent(e);
                                var c = e.channelLogin !== this.lastSetChannel;
                                if (this.player && e.channelLogin && (c || Object(G.a)(this.props, e))) return this.logger.debug("Setting Channel: ", e.channelLogin), this.player.setChannel(e.channelLogin), this.lastSetChannel = e.channelLogin, void s.n.setVideoPlayerTrackingData({
                                    vodID: void 0
                                });
                                var d = e.collectionID && this.props.collectionID !== e.collectionID,
                                    u = e.vodID && this.props.vodID !== e.vodID;
                                if (d || u) {
                                    var p = e.vodID ? Object(U.b)(e.vodID) : "";
                                    if ("" !== p && s.n.setVideoPlayerTrackingData({
                                            vodID: e.vodID
                                        }), !this.player) return;
                                    d || e.collectionID && u ? this.player.setCollection(e.collectionID, p, e.nextVideoOffset) : this.player.setVideo(p, e.nextVideoOffset)
                                } else void 0 !== e.nextVideoOffset && e.nextVideoOffset >= 0 && this.props.nextVideoOffset !== e.nextVideoOffset && this.player && this.player.setCurrentTime(e.nextVideoOffset)
                            }
                        } else this.initializePlayer()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (void 0 !== e.paused && this.props.paused !== e.paused) this.togglePause(e.paused);
                        else {
                            var t = this.props.activeVideoPlayerRefID,
                                n = e.activeVideoPlayerRefID;
                            this.props.allowSimultaneousPlaying || t === n || (n === this.state.playerRefID && this.state.playerPaused ? this.togglePause(!1) : n === this.state.playerRefID || this.state.playerPaused || this.togglePause(!0))
                        }
                    }, t.prototype.render = function() {
                        var e = P("video-player", {
                                "video-player--theatre": this.props.theatreModeEnabled,
                                "video-player--theatre-whispers": this.props.theatreModeEnabled && this.props.isWhispersBottomBarVisible && !this.state.isFullScreen,
                                "video-player--logged-in": this.props.isLoggedIn,
                                "video-player--fullscreen": this.state.isFullScreen
                            }),
                            t = P("video-player__container", {
                                "video-player__container--clips": H.a.includes(this.playerType)
                            });
                        return a.createElement("div", {
                            className: P(e),
                            "data-test-selector": "video-player"
                        }, a.createElement("div", {
                            className: t,
                            ref: this.attachRef
                        }))
                    }, t.prototype.componentWillUnmount = function() {
                        this.unbindHotKeys(), this.historyUnlistener && this.historyUnlistener(), this.checkPlayerDependencyAnimationFrame && cancelAnimationFrame(this.checkPlayerDependencyAnimationFrame), this.maybeDetachFromWindow(), this.state.isFullScreen && this.exitFullscreen(), this.props.fullscreen.removeChangeListener(this.onTwilightFullscreenChange), this.props.onDestroy && this.props.onDestroy(), s.n.eventEmitter.removeListener(c.SpadeEventType.Pageview, this.updatePlayerTrackingDataFromProps), this.player && (this.player.removeEventListener(V.a.PlayerReady, this.onPlayerReady), this.player.removeEventListener(V.a.Online, this.onStreamStatusOnline), this.player.removeEventListener(V.a.Offline, this.onStreamStatusOffline), this.player.removeEventListener(W.a.Ended, this.onStreamStatusOffline), this.player.removeEventListener(W.a.Play, this.onPlayerPlay), this.player.removeEventListener(W.a.Playing, this.onPlayerPlaying), this.player.removeEventListener(V.a.TheatreChange, this.onTheatreChange), this.player.removeEventListener(V.a.TransitionToCollectionVOD, this.onTransitionToCollectionVod), this.player.removeEventListener(V.a.FullscreenChange, this.onFullScreenChange), this.player.removeEventListener(V.a.ExternalFullscreenChange, this.onExternalFullScreenChange), this.player.removeEventListener(W.a.Seeked, this.onSeek), this.player.removeEventListener(W.a.TimeUpdate, this.onTimeUpdate), this.player.removeEventListener(V.a.OpenStream, this.onOpenStream), this.player.removeEventListener(W.a.Pause, this.onPause), this.player.removeEventListener(V.a.PersistenPlayerToggle, this.onPersistentPlayerToggled), this.player.removeEventListener(W.a.LoadedMetadata, this.onMetadataLoaded), x.extensionService.unregisterPlayer(), this.player.destroy()), s.n.setVideoPlayerTrackingData({
                            vodID: void 0
                        })
                    }, t.prototype.trackMiniPlayerAction = function(e, t) {
                        this.player && this.state.playerInitialized && this.player.trackMiniPlayerAction(e, t)
                    }, t.prototype.initializePlayer = function() {
                        var e = r.a({}, K, {
                                showtheatre: !this.props.disableTheatreButton,
                                allowfullscreen: !this.props.disableFullscreen,
                                externalfullscreen: this.props.fullscreen.supported(),
                                autoplay: !this.props.paused,
                                gdpr: this.createPlayerGDPROptions(this.props),
                                muted: !!this.props.muteOnInitialization
                            }),
                            t = this.props.playerTypeOverride;
                        t && (e.player = t, this.playerType = t, t === H.c.ClipsEditing && (e.muted = !0)), this.props.channelLogin && (e.channel = this.props.channelLogin, this.lastSetChannel = this.props.channelLogin), this.props.collectionID && (e.collection = this.props.collectionID), this.props.clipSlug && (e.clip = this.props.clipSlug), this.props.vodID && (e.video = Object(U.b)(this.props.vodID), s.n.setVideoPlayerTrackingData({
                            vodID: this.props.vodID
                        })), this.props.showChannelInfoOnHover && (e.showInfo = this.props.showChannelInfoOnHover), void 0 !== this.props.nextVideoOffset && this.props.nextVideoOffset >= 0 && (e.time = Object(q.a)(this.props.nextVideoOffset)), this.lastPausedProp = this.props.paused, e.oauth_token = this.props.authToken || "", this.logger.debug("Initializing", e);
                        var n = new window.Twitch.Player(this.playerRef, e);
                        this.player = n, n.addEventListener(V.a.PlayerReady, this.onPlayerReady), n.addEventListener(V.a.Online, this.onStreamStatusOnline), n.addEventListener(V.a.Offline, this.onStreamStatusOffline), n.addEventListener(W.a.Ended, this.onStreamStatusOffline), n.addEventListener(W.a.Play, this.onPlayerPlay), n.addEventListener(W.a.Playing, this.onPlayerPlaying), n.addEventListener(W.a.Seeked, this.onSeek), n.addEventListener(W.a.TimeUpdate, this.onTimeUpdate), n.addEventListener(V.a.TheatreChange, this.onTheatreChange), n.addEventListener(V.a.FullscreenChange, this.onFullScreenChange), n.addEventListener(V.a.ExternalFullscreenChange, this.onExternalFullScreenChange), n.addEventListener(V.a.ClipsModerationOpen, this.onClipsModerationOpen), n.addEventListener(V.a.TransitionToCollectionVOD, this.onTransitionToCollectionVod), n.addEventListener(V.a.TransitionToRecommendedVOD, this.onTransitionToRecommendedVod), n.addEventListener(V.a.OpenStream, this.onOpenStream), n.addEventListener(W.a.Pause, this.onPause), n.addEventListener(V.a.PersistenPlayerToggle, this.onPersistentPlayerToggled), n.addEventListener(W.a.LoadedMetadata, this.onMetadataLoaded), x.extensionService.registerPlayer(this.player), x.extensionService.setPlayerWindow(window), this.props.onInit && this.props.onInit(n), this.maybeAttachToWindow(this.props)
                    }, t.prototype.registerBufferingEvent = function() {
                        return this.props.latencyTracking.registerCustomEvent({
                            benchmark: 1e3,
                            group: B.a.Player,
                            key: B.b.PlayerBuffering,
                            label: B.c.Buffering
                        })
                    }, t.prototype.registerCreatedEvent = function() {
                        return this.props.latencyTracking.registerCustomEvent({
                            benchmark: 1e3,
                            group: B.a.Player,
                            key: B.b.PlayerCreated,
                            label: B.c.Created
                        })
                    }, t.prototype.registerLoadedEvent = function() {
                        return this.props.latencyTracking.registerCustomEvent({
                            benchmark: 2500,
                            group: B.a.Player,
                            key: B.b.PlayerLoaded,
                            label: B.c.Init
                        })
                    }, t.prototype.registerPlayedEvent = function() {
                        return this.props.latencyTracking.registerCustomEvent({
                            benchmark: 4e3,
                            group: B.a.Player,
                            key: B.b.PlayerPlayed,
                            label: B.c.FirstFrame
                        })
                    }, t.prototype.reportPlayerBuffering = function() {
                        this.hasBuffered || (this.hasBuffered = !0, this.playerBuffering && this.props.latencyTracking.reportCustomEvent(this.playerBuffering))
                    }, t.prototype.reportPlayerPlayed = function() {
                        this.hasPlayed || (this.hasPlayed = !0, this.playerPlayed && this.props.latencyTracking.reportCustomEvent(this.playerPlayed))
                    }, t.prototype.enterFullscreen = function() {
                        this.setState({
                            isFullScreen: !0
                        }), this.props.fullscreenRef ? this.props.fullscreen.enable(this.props.fullscreenRef) : this.props.fullscreen.enable(this.playerRef), this.props.onFullscreenChange && this.props.onFullscreenChange(!0)
                    }, t.prototype.exitFullscreen = function() {
                        this.state.isFullScreen && (this.setState({
                            isFullScreen: !1
                        }), this.props.fullscreen.disable(), this.props.onFullscreenChange && this.props.onFullscreenChange(!1))
                    }, t.prototype.maybeAttachToWindow = function(e) {
                        F.parse(window.location.search).attachPlayer && e.attachToWindow && this.player && (window.player = this.player)
                    }, t.prototype.maybeDetachFromWindow = function() {
                        window.player = void 0
                    }, t.prototype.bindHotKeys = function() {
                        L.bind("alt+x", this.maybeRecordClip)
                    }, t.prototype.unbindHotKeys = function() {
                        L.unbind("alt+x")
                    }, t.tagInjected = !1, t
                }(a.Component),
                $ = Object(z.c)("VideoPlayer")(X);
            var J = Object(v.d)(Object(g.b)(function(e) {
                return {
                    isWhispersBottomBarVisible: Object(R.b)(e),
                    theatreModeEnabled: e.ui.theatreModeEnabled,
                    rightColumnExpanded: e.ui.rightColumnExpanded,
                    sideNavExpanded: e.ui.sideNavExpanded,
                    isLoggedIn: Object(S.e)(e),
                    authToken: Object(S.a)(e),
                    activeVideoPlayerRefID: Object(D.a)(e),
                    gdprBlockAmazonContent: Object(O.g)(e, O.c.Amazon),
                    gdprBlockComScoreContent: Object(O.g)(e, O.c.ComScore),
                    gdprBlockGoogleContent: Object(O.g)(e, O.c.Google)
                }
            }, function(e) {
                return Object(v.b)({
                    enableTheatreMode: _.v,
                    disableTheatreMode: _.t,
                    togglePersistentPlayer: _.B,
                    reportPlayerInstanceStarted: I.b
                }, e)
            }), function(e) {
                return function(t) {
                    function n() {
                        var e = null !== t && t.apply(this, arguments) || this;
                        return e.addChangeListener = function(e) {
                            T.push(e)
                        }, e.removeChangeListener = function(e) {
                            T = T.filter(function(t) {
                                return t !== e
                            })
                        }, e
                    }
                    return r.d(n, t), n.prototype.render = function() {
                        var t = {
                            fullscreen: {
                                addChangeListener: this.addChangeListener,
                                removeChangeListener: this.removeChangeListener,
                                supported: this.supported,
                                element: this.element,
                                enable: this.enable,
                                disable: this.disable
                            }
                        };
                        return a.createElement(e, r.a({}, t, this.props))
                    }, n.prototype.supported = function() {
                        return !!N.enabled
                    }, n.prototype.element = function() {
                        return N.element
                    }, n.prototype.enable = function(e) {
                        N.request(e)
                    }, n.prototype.disable = function() {
                        N.exit()
                    }, n
                }(a.Component)
            }, C.f)($);

            function Z(e, t, n) {
                if (e.collectionID || !e.videoID)
                    if (e.collectionID && e.videoID) {
                        if (n && n.currentVideoID && n.currentCollectionID && n.currentVideoID === e.videoID && n.currentCollectionID === e.collectionID) return;
                        t.push("/videos/" + e.videoID + "?collection=" + e.collectionID)
                    } else !e.collectionID || e.videoID ? s.j.withCategory("video-player").error(new Error("No collection or video specified from the emitted player transition event."), "No collection or video specified from the emitted player transition event.") : t.push("/collections/" + e.collectionID);
                else t.push("/videos/" + e.videoID)
            }
            n.d(t, !1, function() {
                return i
            }), n.d(t, !1, function() {
                return f
            }), n.d(t, "a", function() {
                return E
            }), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "c", function() {
                return J
            }), n.d(t, "d", function() {
                return Z
            }), n.d(t, "b", function() {
                return H.c
            })
        },
        eJ65: function(e, t, n) {
            "use strict";
            var i = n("bq0i");
            n.d(t, "a", function() {
                return i.a
            })
        },
        eLB1: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Loading = "loading", e.Error = "error", e.Skip = "skip", e.BelowMinimumAge = "below-min-age", e.ConsentRequired = "consent-required", e.ConsentSaved = "consent-saved"
                }(i || (i = {}))
        },
        eW5E: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("/MKj"),
                r = n("ztUO");
            var a = Object(i.b)(function(e) {
                return {
                    authToken: e.session.user && e.session.user.authToken,
                    username: e.session.user && e.session.user.login
                }
            })(r.a)
        },
        ebRM: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return l
            }), n.d(t, "e", function() {
                return c
            }), n.d(t, "d", function() {
                return d
            }), n.d(t, "a", function() {
                return u
            }), n.d(t, "f", function() {
                return p
            }), n.d(t, "b", function() {
                return m
            });
            var i = n("mrSG"),
                r = n("SDEh"),
                a = n("lhih"),
                o = n("5zXJ"),
                s = n("RiD7");

            function l(e) {
                return e.type !== a.a && (d(e) && null !== e.promotion && e.promotion.type === a.e)
            }

            function c(e) {
                return e.type !== a.a && (d(e) && null !== e.promotion && (e.promotion.type === a.g || e.promotion.type === a.f))
            }

            function d(e) {
                return e.type === a.b && null !== e.promotion && !!e.promotion
            }

            function u(e) {
                var t = 0,
                    n = 0,
                    i = 0;
                return e.forEach(function(e) {
                    e.cheerAmount && (t = Math.max(t, e.cheerAmount), n = n ? Math.min(n, e.cheerAmount) : e.cheerAmount, i += e.cheerAmount)
                }), {
                    total: i,
                    smallestCheermote: n,
                    largestCheermote: t
                }
            }

            function p(e) {
                var t = e.messageBits,
                    n = t.total,
                    r = t.largestCheermote,
                    a = t.smallestCheermote;
                if (n) {
                    var s = {
                        cheerAboveMaxBitsPerEmote: r > o.l,
                        totalAboveBalance: n > e.balance,
                        totalBelowCheerMinimum: n < e.cheerMinimumBits,
                        totalBelowEmoteMinimum: a < e.emoteMinimumBits,
                        inputLongerThanMaxBitsMessage: e.inputValue.length > o.k,
                        inputStartsWithCommand: e.inputValue.startsWith("/")
                    };
                    if (Object.keys(s).some(function(e) {
                            return s[e]
                        })) return i.a({
                        canSpend: !1
                    }, s)
                }
                return {
                    canSpend: !0
                }
            }

            function m(e) {
                var t = e.purchaseUrl;
                if (t) {
                    e.trackBitsCardInteraction(Object(s.d)(e.bitsAmount), {
                        location: e.location
                    });
                    var n = t.replace("{channelID}", e.channelID),
                        i = window.open(n, "Twitch", "width=1024,height=600,scrollbars=yes");
                    return !i || Object(r.a)() ? (e.closeAllBits && e.closeAllBits(), void e.trackBitsCardInteraction(s.a.CloseCard, {
                        location: e.location
                    })) : (i.focus(), i)
                }
            }
        },
        edgk: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("/7QA");

            function r(e, t) {
                if (e) var n = setInterval(function() {
                    var i = !1,
                        r = !1;
                    try {
                        i = e.closed, r = !!e.success
                    } catch (e) {}
                    if (i || r) {
                        t(r);
                        try {
                            e.close()
                        } catch (e) {}
                        clearInterval(n)
                    }
                }, 500);
                else i.j.warn("[onPopupClose] Attempted to observe a window that failed to open.")
            }
        },
        eeaQ: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "SearchFriendResult_CreateFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "CreateFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "createFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 137
                }
            };
            n.loc.source = {
                body: "mutation SearchFriendResult_CreateFriendRequest($input: CreateFriendRequestInput!) {\ncreateFriendRequest(input: $input) {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        f00E: function(e, t, n) {
            "use strict";

            function i() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" === e ? t : 3 & t | 8).toString(16)
                })
            }

            function r() {
                return "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g, function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" === e ? t : 3 & t | 8).toString(16)
                })
            }
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            })
        },
        "fR/m": function(e, t, n) {},
        fRbW: function(e, t, n) {
            e.exports = n.p + "assets/cookie_2x-0cb6234911f4ba5e848e.png"
        },
        fWal: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("Ww25"),
                o = n("EpBn"),
                s = n("Ue10"),
                l = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.renderBody = function() {
                            return t.props.showPlaceholder ? r.createElement(s.Va, null) : r.createElement(s.Ma, null, r.createElement(s.Ib, {
                                checked: t.props.checked,
                                error: t.props.error,
                                disabled: t.props.disabled,
                                onChange: t.onChange,
                                name: t.props.name,
                                id: t.props.id
                            }), t.props.description && r.createElement(a.a, {
                                text: t.props.description,
                                extraText: t.props.extraDescription
                            }))
                        }, t.onChange = function(e) {
                            t.props.onChange && t.props.onChange(e.currentTarget.checked)
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(o.a, {
                            id: this.props.id,
                            label: this.props.label,
                            error: this.props.error,
                            errorMessage: this.props.errorMessage,
                            orientation: s.Y.Horizontal
                        }, this.renderBody())
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return l
            })
        },
        fk61: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("yR8l"),
                s = n("N0BP"),
                l = n("Ue10"),
                c = n("5hPa"),
                d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(l.Ja, i.a({
                            onClick: this.props.onClick,
                            linkTo: this.props.linkTo,
                            hover: this.props.hover,
                            tabIndex: -1,
                            key: this.props.id
                        }, Object(s.a)(this.props)), r.createElement(l.Ma, {
                            className: "search-game-result-card",
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, r.createElement(l.C, {
                            row: !0
                        }, r.createElement(l.E, {
                            alt: this.props.imageAlt,
                            src: this.props.data && !this.props.data.loading && this.props.data.game ? this.props.data.game.boxArtURL : a.a.defaultBoxArtURL,
                            size: l.F.Size4,
                            aspect: l.l.BoxArt
                        }), r.createElement(l.D, {
                            overflow: l.Pa.Hidden
                        }, r.createElement(l.Fa, {
                            padding: {
                                x: 1
                            }
                        }, r.createElement(l.Q, {
                            type: l.Gb.H5,
                            ellipsis: !0
                        }, this.props.title))))))
                    }, t = i.c([Object(o.a)(c, {
                        options: function(e) {
                            return {
                                variables: {
                                    name: e.title
                                }
                            }
                        }
                    })], t)
                }(r.Component);
            n.d(t, "a", function() {
                return d
            })
        },
        fuJa: function(e, t, n) {},
        g6pS: function(e, t, n) {},
        g7ZD: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "friendButtonFragment"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "self"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "friendship"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "__typename"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 148
                }
            };
            n.loc.source = {
                body: "# Queries the fields necessary to render the FriendButton component.\nfragment friendButtonFragment on User {\nid\nself {\nfriendship {\n__typename\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        gCs8: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return c
            });
            var i = n("mrSG"),
                r = n("17x9"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("gvGA"),
                l = n("1uls");

            function c(e, t) {
                return function(n) {
                    return function(c) {
                        function d(n, i) {
                            var r = c.call(this, n) || this;
                            return r.logger = o.j.withCategory("latency-tracking"), r.getChildContext = function() {
                                return {
                                    latencyTracking: r.tracker
                                }
                            }, r.onError = function() {
                                o.o.stats.recordComponentError(e), r.tracker.reportInteractive()
                            }, t && t.isRoot ? r.tracker = o.o.benchmarking.getRootLatencyTracker() : i.latencyTracking ? r.tracker = i.latencyTracking.createChild(e, t && t.destination) : (r.tracker = new l.a(e, t && t.destination), r.tracker.root = new l.a("Root", t && t.destination)), r
                        }
                        return i.d(d, c), d.prototype.componentDidMount = function() {
                            t && t.autoReportInteractive && (this.logger.debug("Using default implementation of reportInteractive", {
                                componentID: e
                            }), this.tracker.reportInteractive())
                        }, d.prototype.componentWillUnmount = function() {
                            this.tracker.unregister()
                        }, d.prototype.render = function() {
                            var e = {
                                    latencyTracking: this.tracker,
                                    rootLatencyTracker: t && t.isRoot ? this.tracker : this.tracker.root
                                },
                                r = a.createElement(n, i.a({}, this.props, e));
                            return t && !1 === t.enableErrorBoundary ? r : a.createElement(s.a, {
                                onError: this.onError
                            }, r)
                        }, d.displayName = "WithLatencyTracking(" + (n.displayName || n.name || "Component") + ")", d.contextTypes = {
                            latencyTracking: r.object
                        }, d.childContextTypes = {
                            latencyTracking: r.object
                        }, d
                    }(a.Component)
                }
            }
        },
        gIsd: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportReasons"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "content"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportContentType"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportReasons"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "content"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "content"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "text"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 114
                }
            };
            n.loc.source = {
                body: "query ReportUserModal_ReportReasons($content: ReportContentType!) {\nreportReasons(content: $content) {\nid\ntext\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        gOYK: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("/7QA"),
                o = n("geRD"),
                s = n("kRBY");
            ! function(e) {
                e.NewSession = "new-session", e.ClearSession = "clear-session"
            }(i || (i = {}));
            var l = a.o.logger.withCategory("host-service-worker-messenger"),
                c = function() {
                    function e() {}
                    return e.syncSession = function() {
                        var e = Object(s.d)(a.o.store.getState());
                        if (e) {
                            var t = e.id;
                            this.sendMessage({
                                type: i.NewSession,
                                userId: t
                            })
                        } else this.sendMessage({
                            type: i.ClearSession
                        })
                    }, e.sendMessage = function(e) {
                        var t = this;
                        if (navigator.serviceWorker.controller) this.postMessage(e);
                        else {
                            l.debug("cannot postMessage immediately. waiting for a service worker to take control");
                            var n = function() {
                                l.debug("controller changed", {
                                    controllerExists: !!navigator.serviceWorker.controller
                                }), navigator.serviceWorker.removeEventListener("controllerchange", n), t.postMessage(e)
                            };
                            navigator.serviceWorker.addEventListener("controllerchange", n)
                        }
                    }, e.postMessage = function(e) {
                        navigator.serviceWorker.controller ? (l.debug("postMessage", e), navigator.serviceWorker.controller.postMessage(JSON.stringify(e))) : l.error(new Error("navigator.serviceWorker.controller is null"), "postMessage called with no controlling service worker")
                    }, e
                }(),
                d = function() {
                    function e() {}
                    return e.exists = function() {
                        return null !== a.o.storage.getOptional("browserPushNotificationsEnabled")
                    }, e.isEnabled = function() {
                        return a.o.storage.get("browserPushNotificationsEnabled", !1)
                    }, e.setEnabled = function() {
                        a.o.storage.set("browserPushNotificationsEnabled", !0)
                    }, e.setDisabled = function() {
                        a.o.storage.set("browserPushNotificationsEnabled", !1)
                    }, e
                }();
            var u = n("jSzL"),
                p = n("MnNG"),
                m = null;

            function h() {
                if (m) return m;
                var e = p.register({
                    scope: "/"
                });
                return m = e || Promise.reject(new Error("service worker runtime not available"))
            }
            var f = n("Ahlu"),
                g = n("EsYX");
            n.d(t, "a", function() {
                return b
            });
            var v = a.o.logger.withCategory("browser-push-notifications-manager"),
                b = function() {
                    function e() {}
                    return e.initialize = function() {
                        return this.initPromise ? this.initPromise : (this.initPromise = this.initializationLogic(), this.initPromise)
                    }, e.initializationLogic = function() {
                        return r.b(this, void 0, void 0, function() {
                            var e, t;
                            return r.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return Object(u.a)() ? (v.debug("permissions have been denied. nothing to do here."), [2]) : [4, h()];
                                    case 1:
                                        return n.sent(), e = Object(s.e)(a.o.store.getState()), [4, this.hasPushSubscription()];
                                    case 2:
                                        return t = n.sent(), c.syncSession(), t ? d.exists() && !d.isEnabled() || !e ? [4, this.unsubscribe()] : [3, 4] : [3, 5];
                                    case 3:
                                        n.sent(), n.label = 4;
                                    case 4:
                                        return [3, 7];
                                    case 5:
                                        return s.e ? !Object(u.b)() || d.exists() && !d.isEnabled() ? [3, 7] : [4, this.subscribe()] : [3, 7];
                                    case 6:
                                        n.sent(), n.label = 7;
                                    case 7:
                                        return [2]
                                }
                            })
                        })
                    }, e.userSubscribe = function(e) {
                        return r.b(this, void 0, void 0, function() {
                            var t;
                            return r.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        d.setEnabled(), n.label = 1;
                                    case 1:
                                        return n.trys.push([1, 3, , 4]), [4, this.subscribe()];
                                    case 2:
                                        return n.sent(), [3, 4];
                                    case 3:
                                        return t = n.sent(), Object(u.a)() || v.debug("user subscribe failed", {
                                            err: t,
                                            context: e
                                        }), [3, 4];
                                    case 4:
                                        return Object(f.c)({
                                            allowed: Object(u.b)(),
                                            context: e
                                        }), [2]
                                }
                            })
                        })
                    }, e.userUnsubscribe = function(e) {
                        return r.b(this, void 0, void 0, function() {
                            return r.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return d.setDisabled(), [4, this.unsubscribe()];
                                    case 1:
                                        return t.sent(), Object(f.b)({
                                            context: e
                                        }), [2]
                                }
                            })
                        })
                    }, e.hasPushSubscription = function() {
                        return r.b(this, void 0, void 0, function() {
                            return r.e(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        return [4, this.getPushSubscription()];
                                    case 1:
                                        return [2, null !== e.sent()]
                                }
                            })
                        })
                    }, e.subscribe = function() {
                        return r.b(this, void 0, void 0, function() {
                            var e, t, n, i, l, c;
                            return r.e(this, function(d) {
                                switch (d.label) {
                                    case 0:
                                        if (Object(u.a)()) return v.debug("notification permission is denied"), [2];
                                        if (!Object(s.e)(a.o.store.getState())) return v.debug("cannot be enabled logged out"), [2];
                                        if (!(e = a.b.get("notification_app_server_public_key", ""))) throw new Error("application server public key is blank");
                                        return [4, h()];
                                    case 1:
                                        return t = d.sent(), [4, this.getPushSubscription()];
                                    case 2:
                                        return (n = d.sent()) ? [3, 4] : (i = function(e) {
                                            for (var t = (e + "=".repeat((4 - e.length % 4) % 4)).replace(/\-/g, "+").replace(/_/g, "/"), n = atob(t), i = new Uint8Array(n.length), r = 0; r < n.length; ++r) i[r] = n.charCodeAt(r);
                                            return i
                                        }(e), [4, t.pushManager.subscribe({
                                            userVisibleOnly: !0,
                                            applicationServerKey: i
                                        })]);
                                    case 3:
                                        n = d.sent(), d.label = 4;
                                    case 4:
                                        if (!(l = n.toJSON()).endpoint) throw new Error("push subscription 'endpoint' missing");
                                        if (!l.keys) throw new Error("push subscription 'keys' missing");
                                        if (!l.keys.auth) throw new Error("push subscription 'keys.auth' missing");
                                        if (!l.keys.p256dh) throw new Error("push subscription 'keys.p256dh' missing");
                                        return c = Object(o.a)({
                                            endpoint: l.endpoint,
                                            auth: l.keys.auth,
                                            p256DH: l.keys.p256dh
                                        }), [4, a.o.apollo.client.mutate(r.a({
                                            mutation: g
                                        }, c))];
                                    case 5:
                                        return d.sent(), [2]
                                }
                            })
                        })
                    }, e.unsubscribe = function() {
                        return r.b(this, void 0, void 0, function() {
                            var e;
                            return r.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, this.getPushSubscription()];
                                    case 1:
                                        return (e = t.sent()) ? [4, e.unsubscribe()] : [2];
                                    case 2:
                                        if (!t.sent()) throw new Error("push subscription unsubscribe unexpectedly failed");
                                        return [2]
                                }
                            })
                        })
                    }, e.getPushSubscription = function() {
                        return r.b(this, void 0, void 0, function() {
                            var e;
                            return r.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, h()];
                                    case 1:
                                        return [4, t.sent().pushManager.getSubscription()];
                                    case 2:
                                        return (e = t.sent()) ? [2, e] : [2, null]
                                }
                            })
                        })
                    }, e
                }()
        },
        gTu3: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Default = 0] = "Default", e[e.Recipient = 1] = "Recipient", e[e.Sender = 2] = "Sender"
                }(i || (i = {}))
        },
        gXgt: function(e, t, n) {},
        geRD: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return o
            }), n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "e", function() {
                return c
            }), n.d(t, "d", function() {
                return d
            });
            var i = n("mrSG"),
                r = (n("o4DC"), n("G1cX")),
                a = n("/7QA");

            function o(e, t) {
                var n = e.filter(function(e) {
                        return e.node && e.node.id
                    }),
                    i = new Set(n.map(function(e) {
                        return e.node.id
                    }));
                return n.concat(t.filter(function(e) {
                    return e.node && e.node.id && !i.has(e.node.id)
                }))
            }

            function s(e) {
                return {
                    variables: {
                        input: e
                    }
                }
            }

            function l(e, t) {
                return i.a({}, s(e), {
                    optimisticResponse: t
                })
            }

            function c(e, t, n, i) {
                void 0 === t && (t = {});
                try {
                    var o = a.o.apollo.client.readQuery({
                        query: e,
                        variables: t
                    });
                    if (!o || i && i(o)) return;
                    var s = r(o, n);
                    a.o.apollo.client.writeQuery({
                        query: e,
                        variables: t,
                        data: s
                    })
                } catch (e) {
                    a.j.warn("Failed writing updated query to Apollo", e)
                }
            }

            function d(e) {
                try {
                    var t = e.id,
                        n = e.fragment,
                        i = e.mutator,
                        o = a.o.apollo.client.readFragment({
                            id: t,
                            fragment: n
                        }),
                        s = r(o, i);
                    a.o.apollo.client.writeFragment({
                        fragment: n,
                        id: t,
                        data: s
                    })
                } catch (e) {
                    a.j.warn("Failed writing updated query to Apollo", e)
                }
            }
        },
        gg62: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("mrSG"),
                r = n("zB42"),
                a = n("Z3A5"),
                o = Object.assign({}, a, {
                    default: a
                }),
                s = function() {
                    function e() {
                        this.optimizedBuild = !0, this.embedded = void 0, this.buildID = window.__twilightBuildID || "00000000-0000-0000-0000-000000000000", this.spadeBatchWindow = 1e3, this.locales = [{
                            name: "English",
                            languageCode: "en",
                            locale: "en-US",
                            loader: function() {
                                return {
                                    formatData: {
                                        numberShort: o
                                    }
                                }
                            },
                            default: !0
                        }, {
                            name: "Dansk",
                            languageCode: "da",
                            locale: "da-DK",
                            loader: function() {
                                return n.e(30).then(n.bind(null, "Sw9J"))
                            }
                        }, {
                            name: "Deutsch",
                            languageCode: "de",
                            locale: "de-DE",
                            loader: function() {
                                return n.e(29).then(n.bind(null, "8lzT"))
                            }
                        }, {
                            name: "English - UK",
                            languageCode: "en-gb",
                            locale: "en-GB",
                            intlMessageFormatKey: "en",
                            loader: function() {
                                return n.e(28).then(n.bind(null, "QB/O"))
                            }
                        }, {
                            name: "Español - España",
                            languageCode: "es",
                            locale: "es-ES",
                            loader: function() {
                                return n.e(27).then(n.bind(null, "TX++"))
                            }
                        }, {
                            name: "Español - Latinoamérica",
                            languageCode: "es-mx",
                            locale: "es-MX",
                            intlMessageFormatKey: "es",
                            loader: function() {
                                return n.e(26).then(n.bind(null, "Qg/R"))
                            }
                        }, {
                            name: "Français",
                            languageCode: "fr",
                            locale: "fr-FR",
                            loader: function() {
                                return n.e(25).then(n.bind(null, "jtc8"))
                            }
                        }, {
                            name: "Italiano",
                            languageCode: "it",
                            locale: "it-IT",
                            loader: function() {
                                return n.e(24).then(n.bind(null, "XOgv"))
                            }
                        }, {
                            name: "Magyar",
                            languageCode: "hu",
                            locale: "hu-HU",
                            loader: function() {
                                return n.e(23).then(n.bind(null, "iC4P"))
                            }
                        }, {
                            name: "Nederlands",
                            languageCode: "nl",
                            locale: "nl-NL",
                            loader: function() {
                                return n.e(22).then(n.bind(null, "PEbi"))
                            }
                        }, {
                            name: "Norsk",
                            languageCode: "no",
                            locale: "no-NO",
                            loader: function() {
                                return n.e(21).then(n.bind(null, "PqU8"))
                            },
                            cldrLocale: "nb"
                        }, {
                            name: "Polski",
                            languageCode: "pl",
                            locale: "pl-PL",
                            loader: function() {
                                return n.e(20).then(n.bind(null, "S3Qj"))
                            }
                        }, {
                            name: "Português",
                            languageCode: "pt",
                            locale: "pt-PT",
                            intlMessageFormatKey: "pt-pt",
                            loader: function() {
                                return n.e(19).then(n.bind(null, "RK9r"))
                            },
                            cldrLocale: "pt-pt"
                        }, {
                            name: "Português - Brasil",
                            languageCode: "pt-br",
                            locale: "pt-BR",
                            intlMessageFormatKey: "pt",
                            loader: function() {
                                return n.e(18).then(n.bind(null, "YEG4"))
                            },
                            cldrLocale: "pt"
                        }, {
                            name: "Slovenčina",
                            languageCode: "sk",
                            locale: "sk-SK",
                            loader: function() {
                                return n.e(17).then(n.bind(null, "7J+f"))
                            }
                        }, {
                            name: "Suomi",
                            languageCode: "fi",
                            locale: "fi-FI",
                            loader: function() {
                                return n.e(16).then(n.bind(null, "26v5"))
                            }
                        }, {
                            name: "Svenska",
                            languageCode: "sv",
                            locale: "sv-SE",
                            loader: function() {
                                return n.e(15).then(n.bind(null, "ekTR"))
                            }
                        }, {
                            name: "Tiếng Việt",
                            languageCode: "vi",
                            locale: "vi-VN",
                            loader: function() {
                                return n.e(14).then(n.bind(null, "7ZS+"))
                            }
                        }, {
                            name: "Türkçe",
                            languageCode: "tr",
                            locale: "tr-TR",
                            loader: function() {
                                return n.e(13).then(n.bind(null, "9klv"))
                            }
                        }, {
                            name: "Čeština",
                            languageCode: "cs",
                            locale: "cs-CZ",
                            loader: function() {
                                return n.e(12).then(n.bind(null, "3RK4"))
                            }
                        }, {
                            name: "Ελληνικά",
                            languageCode: "el",
                            locale: "el-GR",
                            loader: function() {
                                return n.e(11).then(n.bind(null, "6liR"))
                            }
                        }, {
                            name: "Български",
                            languageCode: "bg",
                            locale: "bg-BG",
                            loader: function() {
                                return n.e(10).then(n.bind(null, "/BRg"))
                            }
                        }, {
                            name: "Русский",
                            languageCode: "ru",
                            locale: "ru-RU",
                            loader: function() {
                                return n.e(9).then(n.bind(null, "w56/"))
                            }
                        }, {
                            name: "العربية",
                            languageCode: "ar",
                            locale: "ar-SA",
                            loader: function() {
                                return n.e(8).then(n.bind(null, "LhZ9"))
                            }
                        }, {
                            name: "ภาษาไทย",
                            languageCode: "th",
                            locale: "th-TH",
                            loader: function() {
                                return n.e(7).then(n.bind(null, "UB8r"))
                            }
                        }, {
                            name: "中文 简体",
                            languageCode: "zh-cn",
                            locale: "zh-CN",
                            intlMessageFormatKey: "zh",
                            loader: function() {
                                return n.e(6).then(n.bind(null, "de7V"))
                            },
                            cldrLocale: "zh-hans"
                        }, {
                            name: "中文 繁體",
                            languageCode: "zh-tw",
                            locale: "zh-TW",
                            intlMessageFormatKey: "zh-hant",
                            loader: function() {
                                return n.e(5).then(n.bind(null, "Z+PZ"))
                            },
                            cldrLocale: "zh-hant"
                        }, {
                            name: "日本語",
                            languageCode: "ja",
                            locale: "ja-JP",
                            loader: function() {
                                return n.e(4).then(n.bind(null, "q22T"))
                            }
                        }, {
                            name: "한국어",
                            languageCode: "ko",
                            locale: "ko-KR",
                            loader: function() {
                                return n.e(3).then(n.bind(null, "t37q"))
                            }
                        }, {
                            name: "हिंदी",
                            languageCode: "hi",
                            locale: "hi-IN",
                            loader: function() {
                                return n.e(2).then(n.bind(null, "szeX"))
                            }
                        }, {
                            name: "Română",
                            languageCode: "ro",
                            locale: "ro-RO",
                            loader: function() {
                                return n.e(1).then(n.bind(null, "7I49"))
                            }
                        }], this.passportBaseURL = "https://id.twitch.tv", this.defaultAvatarURL = "https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_70x70.png", this.defaultStreamPreviewURL = "https://static-cdn.jtvnw.net/ttv-static/404_preview-160x90.jpg", this.defaultBoxArtURL = "https://static-cdn.jtvnw.net/ttv-boxart/404_boxart.png", this.defaultCollectionPreviewURL = "https://static-cdn.jtvnw.net/ttv-playlists-thumbnails-prod/missing-video-thumb-320x180.png", this.hostingCacheDelay = 2001, this.legacyClientID = "jzkbprff40iqj646a697cyrvl0zt2m6", this.algoliaApplicationID = "XLUO134HOR", this.algoliaAPIKey = "d157112f6fc2cab93ce4b01227c80a6d", this.forceNetworkLogging = !1, this.networkLoggingHostNames = ["twitch.tv", "localhost", "twitch.tech", "jtvnw.net", "twitchcdn.net", "twitchcdn.tech", "twitchcdn-shadow.net", "twitchsvc.net", "twitchsvc.tech", "twitchsvc-shadow.net"], this.defaultNetworkLoggingThreshold = .2, this.layoutCacheKey = "TwitchCache:Layout", this.forceComponentBenchmarking = !1, this.defaultComponentBenchmarkingThreshold = .1, this.forceBenchmarkingTools = !1, this.dfpNetworkCode = "3576121", this.krakenEndpoint = "https://api.twitch.tv/kraken", this.defaultAPIVersion = "5", this.adblockAccount = 58, this.forceMinConsoleLogLevelKey = "twilight.minConsoleLogLevel", this.tryPrimeURI = "https://twitch.amazon.com/prime", this.experimentsOverrideCookie = "experiment_overrides", this.tmiHost = "irc-ws.chat.twitch.tv", this.persistentPlayerEnabledKey = "persistenceEnabled", this.manifestURL = "https://static.twitchcdn.net/config/manifest.json?v=1", this.cdnURL = "https://static.twitchcdn.net/", this.playerBaseURL = window.__playerBaseURL, this.currentSite = window.__twilightSite, this.defaultAuthSite = "www", this.captchaKey = "6Ld65QcTAAAAAMBbAE8dkJq4Wi4CsJy7flvKhYqX"
                    }
                    return Object.defineProperty(e.prototype, "authSettings", {
                        get: function() {
                            return this.allAuthSettings[this.currentSite] || this.allAuthSettings[this.defaultAuthSite]
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e
                }(),
                l = n("Svt6"),
                c = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buildType = r.a.Production, t.apiBaseURL = l.a, t.graphqlEndpoint = l.b + "/gql", t.sentinelEndpoint = "https://sentinel.twitchsvc.net/error-report", t.defaultSpadeEndpoint = "https://spade.twitch.tv/track", t.pubsubTopicUploadPrefix = "pubsub.upload", t.allAuthSettings = {
                            www: {
                                clientID: "kimne78kx3ncx6brgo4mv6wki5h1ko",
                                cookieName: "twilight-user",
                                embedded: !0,
                                primary: !0,
                                redirectURI: "https://www.twitch.tv/passport-callback",
                                scopes: ["chat_login", "user_read", "user_subscriptions", "user_presence_friends_read"]
                            },
                            dev: {
                                clientID: "d6g6o112aam5s8q2di888us9o3kuyh",
                                cookieName: "twilight-user.dev",
                                forceVerify: !0,
                                redirectURI: "https://www.twitch.tv/passport-callback",
                                scopes: ["user_read"]
                            }
                        }, t
                    }
                    return i.d(t, e), t
                }(s),
                d = n("4rCz");
            Object(d.j)(new c)
        },
        gvGA: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isError: !1
                        }, t.logger = a.o.logger.withCategory("error-boundary"), t
                    }
                    return i.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            n.logger.error(e, "An unhandled exception occurred in the component hierarchy", {
                                info: t
                            }), n.props.onError && n.props.onError()
                        })
                    }, t.prototype.render = function() {
                        return this.state.isError ? this.props.content ? this.props.content : null : this.props.children
                    }, t
                }(r.Component)
        },
        gz4g: function(e, t, n) {},
        hED0: function(e, t, n) {},
        hLj0: function(e, t, n) {},
        hWzS: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "bitsOffersFragment"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "BitsOffer"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "type"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "bits"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "InlineFragment",
                            typeCondition: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "BitsBundleOffer"
                                }
                            },
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "price"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "discount"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isPromo"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "url"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "includesVAT"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "currencyCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "promotion"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "type"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 158
                }
            };
            n.loc.source = {
                body: "fragment bitsOffersFragment on BitsOffer {\nid\ntype\nbits\n... on BitsBundleOffer {\nprice\ndiscount\nisPromo\nurl\nincludesVAT\ncurrencyCode\npromotion {\nid\ntype\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        heM0: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "FriendButton_CreateFriendRequest"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "CreateFriendRequestInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "createFriendRequest"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "friendButtonFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 232
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\nmutation FriendButton_CreateFriendRequest($input: CreateFriendRequestInput!) {\ncreateFriendRequest(input: $input) {\nuser {\nid\n...friendButtonFragment\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("g7ZD").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        hhUW: function(e, t, n) {},
        hiH0: function(e, t, n) {
            "use strict";
            var i, r, a, o;
            n.d(t, "b", function() {
                    return i
                }), n.d(t, "a", function() {
                    return r
                }), n.d(t, "c", function() {
                    return a
                }), n.d(t, "d", function() {
                    return o
                }),
                function(e) {
                    e.Web = "web", e.Desktop = "desktop"
                }(i || (i = {})),
                function(e) {
                    e.Live = "live", e.Communities = "communities", e.Games = "games", e.Hosts = "hosts", e.ForYou = "foryou"
                }(r || (r = {})),
                function(e) {
                    e.Archive = "archive", e.Highlight = "highlight", e.Upload = "upload", e.PastPremiere = "past_premiere", e.PremiereUpload = "premiere_upload", e.Clip = "clip"
                }(a || (a = {})),
                function(e) {
                    e.Clip = "clip", e.Channel = " channel", e.Chomment = "chomment", e.Collection = "collection", e.Event = "event", e.Game = "game", e.Stream = "stream", e.Video = "vod", e.User = "user"
                }(o || (o = {}))
        },
        hmea: function(e, t, n) {},
        hrW4: function(e, t, n) {},
        ht6z: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("/7QA");

            function r(e) {
                var t = i.b.get("prime_blocked_regions", []);
                return !!e && !t.includes(e.toUpperCase())
            }
        },
        htqZ: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "LiveNotificationsToggle_ToggleNotifications"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "FollowUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "followUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "follow"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "user"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "self"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "follower"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "disableNotifications"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 178
                }
            };
            n.loc.source = {
                body: "mutation LiveNotificationsToggle_ToggleNotifications($input: FollowUserInput!) {\nfollowUser(input: $input) {\nfollow {\nuser {\nid\nself {\nfollower {\ndisableNotifications\n}\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        hyVY: function(e, t, n) {
            "use strict";

            function i(e, t) {
                var n = Math.floor(e % 60),
                    i = Math.floor(e % 3600 / 60),
                    a = Math.floor(e / 3600);
                return t && t.zeroPadAll ? r(a, 2) + ":" + r(i, 2) + ":" + r(n, 2) : a ? a + ":" + r(i, 2) + ":" + r(n, 2) : i + ":" + r(n, 2)
            }

            function r(e, t) {
                return (t -= e.toString().length) > 0 ? new Array(t + (/\./.test(e.toString()) ? 2 : 1)).join("0") + e : e.toString()
            }

            function a(e) {
                if ("" === e) return 0;
                var t = e.split(":");
                return t.length > 3 ? NaN : t.reduce(function(e, t) {
                    return 60 * e + ("-" === t[0] ? NaN : Math.round(parseInt(t, 10)))
                }, 0)
            }
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return a
            })
        },
        i46O: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "LiveNotificationsToggle_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "follower"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "disableNotifications"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 137
                }
            };
            n.loc.source = {
                body: "query LiveNotificationsToggle_User($login: String!) {\nuser(login: $login) {\nid\ndisplayName\nself {\nfollower {\ndisableNotifications\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        i6WW: function(e, t, n) {
            "use strict";
            var i = n("/7QA"),
                r = n("RcPG"),
                a = new RegExp("(?:^|\\s)(?:https?://)?clips.twitch.tv/(\\w+)(?:/)?(\\w+)?(?:/edit)?(?:$|\\s)?");
            var o = new RegExp("(?:^|\\s)(?:https?://)?(?:(?:www|go).)?twitch.tv/videos/(\\d+)(?:$|\\s)?");
            n.d(t, "a", function() {
                return s
            }), n.d(t, "b", function() {
                return l
            });
            var s = /^(?:(https?:\/\/)?((?:[\w#%\-+=:~]+\.)+[a-z]{2,8}(?:\/[\w./#%&()\-+=:?~]*)?))$/;

            function l(e, t) {
                var n = e.match(s);
                if (!n) return null;
                if (t.blockLinks) return {
                    type: r.a.Text,
                    content: " <" + Object(i.d)("deleted link", "CreateMessageData") + "> "
                };
                var l = n[1],
                    c = n[2],
                    d = "" + (l || "https://") + c;
                if (t.parseClips && function(e) {
                        return void 0 === e && (e = ""), a.test(e) && !e.includes("clips.twitch.tv/2017/")
                    }(d)) {
                    var u = function(e) {
                        void 0 === e && (e = "");
                        var t = e.match(a);
                        return null === t ? "" : t && t.length > 0 && void 0 !== t.index ? t[1] : ""
                    }(d);
                    return {
                        type: r.a.ClipLink,
                        content: {
                            slug: u,
                            url: d,
                            displayText: e
                        }
                    }
                }
                if (t.parseVods && function(e) {
                        return void 0 === e && (e = ""), o.test(e)
                    }(d)) {
                    var p = function(e) {
                        void 0 === e && (e = "");
                        var t = e.match(o);
                        return null === t ? "" : t && t.length > 0 && void 0 !== t.index ? t[1] : ""
                    }(d);
                    return {
                        type: r.a.VideoLink,
                        content: {
                            id: p,
                            url: d,
                            displayText: e
                        }
                    }
                }
                return {
                    type: r.a.Link,
                    content: {
                        displayText: e,
                        url: d
                    }
                }
            }
        },
        iS14: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            });
            var i = n("mrSG"),
                r = n("yR8l"),
                a = n("8jSG"),
                o = n("cMjZ"),
                s = n("zixI");

            function l() {
                var e = this;
                return Object(r.a)(s, {
                    props: function(t) {
                        return {
                            unblockUserMutation: function(n, r) {
                                return i.b(e, void 0, void 0, function() {
                                    return i.e(this, function(e) {
                                        switch (e.label) {
                                            case 0:
                                                return t.mutate ? [4, t.mutate({
                                                    variables: {
                                                        input: {
                                                            targetUserID: n
                                                        }
                                                    },
                                                    optimisticResponse: {
                                                        unblockUser: {
                                                            __typename: "UnblockUserPayload",
                                                            targetUser: {
                                                                __typename: "User",
                                                                id: n
                                                            }
                                                        }
                                                    },
                                                    update: function(e) {
                                                        var t = e.readFragment({
                                                            id: Object(o.a)(r),
                                                            fragment: a
                                                        });
                                                        t && (t.blockedUsers = t.blockedUsers.filter(function(e) {
                                                            return null !== e && e.id !== n
                                                        }), e.writeFragment({
                                                            id: Object(o.a)(r),
                                                            fragment: a,
                                                            data: t
                                                        }))
                                                    }
                                                })] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 3];
                                            case 2:
                                                throw new Error("unblockUserMutation is not ready");
                                            case 3:
                                                return [2]
                                        }
                                    })
                                })
                            }
                        }
                    }
                })
            }
        },
        "iif/": function(e, t, n) {},
        j0ar: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("TSYQ"),
                a = n("q1tI"),
                o = n("x1M1"),
                s = n("Ue10"),
                l = (n("oyOR"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.onImageLoad = function() {
                            n.setState({
                                imageLoaded: !0
                            })
                        }, n.onMouseOver = function() {
                            n.setState({
                                isHovering: !0
                            })
                        }, n.onMouseOut = function() {
                            n.setState({
                                isHovering: !1
                            })
                        }, n.renderImage = function() {
                            var e = null,
                                t = r("chat-image", {
                                    "chat-image__animated": !!n.props.cheerText && n.state.imageLoaded
                                }, n.props.className);
                            if (n.props.srcSet.themed) e = a.createElement(s.Fa, {
                                display: n.state.imageLoaded ? s.R.InlineBlock : s.R.Hide
                            }, a.createElement(o.a, {
                                alt: n.props.alt,
                                className: t,
                                defaultRes: n.props.srcKey,
                                onLoad: n.onImageLoad,
                                onMouseOver: n.onMouseOver,
                                onMouseOut: n.onMouseOut,
                                sources: n.props.srcSet
                            }));
                            else {
                                for (var i = [], l = 0, c = Object.keys(n.props.srcSet.sources); l < c.length; l++) {
                                    var d = c[l];
                                    i.push(n.props.srcSet.sources[d] + " " + d)
                                }
                                e = a.createElement(s.Fa, {
                                    display: n.state.imageLoaded ? s.R.InlineBlock : s.R.Hide
                                }, a.createElement("img", {
                                    className: t,
                                    onLoad: n.onImageLoad,
                                    onMouseOver: n.onMouseOver,
                                    onMouseOut: n.onMouseOut,
                                    src: n.props.srcSet.sources[n.props.srcKey],
                                    srcSet: i.join(","),
                                    alt: n.props.alt
                                }))
                            }
                            return e
                        }, n.renderPlaceholder = function() {
                            return n.state.imageLoaded ? null : a.createElement(s.Fa, {
                                display: s.R.InlineBlock
                            }, a.createElement(s.Q, {
                                type: s.Gb.Span,
                                className: "chat-image__placeholder",
                                align: s.Qb.Top
                            }, a.createElement(s.Va, {
                                height: 28,
                                width: 28
                            })))
                        }, n.state = {
                            imageLoaded: !1,
                            isHovering: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e;
                        return e = this.state.isHovering && this.state.imageLoaded ? a.createElement(s.Jb, {
                            direction: this.props.tooltipDirection || s.Lb.Top,
                            label: this.props.alt,
                            display: s.R.Inline,
                            offsetY: "0.9rem",
                            "data-a-target": "emote-name"
                        }, this.renderPlaceholder(), this.renderImage(), this.props.cheerText) : a.createElement("span", {
                            "data-a-target": "emote-name"
                        }, this.renderPlaceholder(), this.renderImage(), this.props.cheerText), this.props.cheerText ? a.createElement(s.Q, {
                            type: s.Gb.Span,
                            noWrap: !0
                        }, e) : e
                    }, t
                }(a.Component));
            n.d(t, "a", function() {
                return l
            })
        },
        j3KY: function(e, t, n) {
            "use strict";
            n.d(t, "c", function() {
                return r
            }), n.d(t, "a", function() {
                return a
            }), n.d(t, "d", function() {
                return o
            }), n.d(t, "b", function() {
                return s
            }), n.d(t, "f", function() {
                return u
            }), n.d(t, "e", function() {
                return p
            });
            var i = n("/7QA"),
                r = "sm_tw_tup_ntp_t_all",
                a = "sm_tw_thp_blue_t_all",
                o = "sm_w_tup_ntp_t_c",
                s = "sm_om_tpltp",
                l = "prime_landing_page_base_url",
                c = "twitch_prime_offerpage_signup_url",
                d = i.j.withCategory("PrimeUtilsLogger");

            function u(e, t) {
                return m(i.b.get(l, "https://twitch.amazon.com/prime"), e, t)
            }

            function p(e, t) {
                return m(i.b.get(c, "https://twitch.amazon.com/prime/country"), e, t)
            }

            function m(e, t, n) {
                var i = "";
                try {
                    i = btoa(n)
                } catch (e) {
                    d.error(e, "Could not decode location pathname substring for redirect")
                }
                return i ? e + "?ref_=" + t + "&redirectRoute=" + i : e + "?ref_=" + t
            }
        },
        jSzL: function(e, t, n) {
            "use strict";

            function i() {
                return window.Notification && "default" === window.Notification.permission
            }

            function r() {
                return window.Notification && "denied" === window.Notification.permission
            }

            function a() {
                return window.Notification && "granted" === window.Notification.permission
            }
            n.d(t, "c", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            })
        },
        jZLd: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return s
            });
            var i, r = n("76Lv"),
                a = n("d0ua"),
                o = n("I6K6");

            function s(e, t, n) {
                return void 0 === n && (n = !0),
                    function(i) {
                        i(Object(a.A)(e)), n && Object(r.d)(e), t && Object(o.b)(e, t)
                    }
            }! function(e) {
                e[e.UserMenu = 1] = "UserMenu", e[e.TypedCommand = 2] = "TypedCommand"
            }(i || (i = {}))
        },
        jeWT: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TopNav_User_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "70"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "availability"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "settings"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isSharingActivity"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "visibility"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "activity"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "type"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "InlineFragment",
                                            typeCondition: {
                                                kind: "NamedType",
                                                name: {
                                                    kind: "Name",
                                                    value: "Watching"
                                                }
                                            },
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "user"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "stream"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "hosting"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "displayName"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "stream"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "game"
                                                                            },
                                                                            arguments: [],
                                                                            directives: [],
                                                                            selectionSet: {
                                                                                kind: "SelectionSet",
                                                                                selections: [{
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "name"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }]
                                                                            }
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }, {
                                            kind: "InlineFragment",
                                            typeCondition: {
                                                kind: "NamedType",
                                                name: {
                                                    kind: "Name",
                                                    value: "Streaming"
                                                }
                                            },
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "stream"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "game"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "name"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }, {
                                            kind: "InlineFragment",
                                            typeCondition: {
                                                kind: "NamedType",
                                                name: {
                                                    kind: "Name",
                                                    value: "Playing"
                                                }
                                            },
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "game"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "name"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 358
                }
            };
            n.loc.source = {
                body: "query TopNav_User_CurrentUser {\ncurrentUser {\nid\ndisplayName\nprofileImageURL(width: 70)\navailability\nsettings {\nisSharingActivity\nvisibility\n}\nactivity {\ntype\n... on Watching {\nuser {\ndisplayName\nstream {\ngame {\nname\n}\n}\nhosting {\ndisplayName\nstream {\ngame {\nname\n}\n}\n}\n}\n}\n... on Streaming {\nstream {\ngame {\nname\n}\n}\n}\n... on Playing {\ngame {\nname\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        jeqg: function(e, t, n) {},
        jytb: function(e, t, n) {
            "use strict";
            var i, r = n("/MKj"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("eO8H"),
                l = n("7CzK"),
                c = n("rqzT"),
                d = n("yR8l"),
                u = n("dIU+"),
                p = n("0tEc"),
                m = n("GnwI"),
                h = n("y9X1"),
                f = n("m98o"),
                g = n("NMMG"),
                v = n("Ue10"),
                b = (n("lNQh"), n("EJVd"));
            ! function(e) {
                e.Default = "Default", e.Presence = "Presence"
            }(i || (i = {}));
            var y = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.getBodyContent = function() {
                        return t.props.bodyType === i.Presence && t.getPresence() || t.getBio()
                    }, t.getBio = function() {
                        if (t.props.data && (t.props.data.loading || t.props.data.error)) return null;
                        var e = t.getUserData();
                        return e && e.description ? o.createElement(v.Ma, {
                            ellipsis: !0,
                            padding: {
                                top: .5
                            },
                            fullWidth: !0
                        }, o.createElement(v.Q, {
                            ellipsis: !0
                        }, e.description)) : null
                    }, t.getButtons = function() {
                        var e = t.getUserData();
                        return e ? o.createElement(v.Ma, {
                            className: t.props.showButtonsOnHover ? "user-card__buttons-container" : "",
                            display: v.R.InlineFlex,
                            flexDirection: v.T.Row,
                            justifyContent: v.La.Between,
                            fullWidth: !0,
                            flexGrow: 0,
                            position: v.Wa.Absolute,
                            padding: 1,
                            attachBottom: !0,
                            attachLeft: !0
                        }, o.createElement(v.Ma, {
                            alignItems: v.c.End,
                            display: v.R.Flex
                        }, o.createElement(v.Ma, {
                            padding: {
                                right: 1
                            }
                        }, o.createElement(p.a, {
                            targetID: t.props.id,
                            friendData: {
                                user: e
                            }
                        })), o.createElement(u.a, {
                            channelLogin: e.login,
                            followData: {
                                user: e
                            },
                            balloonDirection: t.props.balloonDirection,
                            followUIType: u.b.IconAndText,
                            unfollowUIType: u.b.IconOnly
                        })), o.createElement(v.Ma, {
                            alignItems: v.c.End,
                            display: v.R.Flex,
                            padding: {
                                left: 1
                            }
                        }, o.createElement(c.a, {
                            threadID: t.getThreadID(),
                            isPopout: !1,
                            onClick: t.onWhisperButtonClick
                        }))) : null
                    }, t.getPresence = function() {
                        var e = t.getUserData();
                        return e && e.availability ? o.createElement(f.a, {
                            activity: e.activity,
                            availability: e.availability
                        }) : null
                    }, t.onWhisperButtonClick = function() {
                        Object(h.a)({
                            force: !0,
                            timeout: 0
                        })
                    }, t.getThreadID = function() {
                        var e = t.getUserData();
                        if (t.props.currentUserID && e && e.id) return Object(g.a)(e.id, t.props.currentUserID)
                    }, t.getUserData = function() {
                        return t.props.userData && t.props.userData.user || t.props.data && t.props.data.user || null
                    }, t
                }
                return a.d(t, e), t.prototype.componentDidMount = function() {
                    this.props.userData && this.props.latencyTracking.reportInteractive()
                }, t.prototype.componentDidUpdate = function() {
                    (this.props.data && !this.props.data.loading && this.props.data.user || this.props.data && this.props.data.error) && this.props.latencyTracking.reportInteractive()
                }, t.prototype.render = function() {
                    if (this.props.data && (!this.props.data.user || this.props.data.error)) return null;
                    if (this.props.data && this.props.data.loading) return o.createElement("div", {
                        className: "user-card"
                    }, o.createElement(v.Oa, {
                        fillContent: !0
                    }));
                    var e = this.getUserData();
                    if (!e) return null;
                    var t = {
                        backgroundImage: "url(" + (e && e.bannerImageURL || l) + ")",
                        backgroundPosition: "center",
                        backgroundSize: "auto 100%",
                        backgroundRepeat: "repeat",
                        position: "relative"
                    };
                    return o.createElement(v.Fa, {
                        fullWidth: !0
                    }, o.createElement("div", {
                        className: "user-card",
                        style: t
                    }, o.createElement(s.a, {
                        to: "/" + e.login
                    }, o.createElement(v.k, {
                        ratio: v.l.Aspect16x9,
                        overflow: !0
                    }, o.createElement(v.qb, {
                        padding: 1,
                        display: v.R.Flex,
                        flexDirection: v.T.Column,
                        fullHeight: !0,
                        fullWidth: !0,
                        background: v.n.Overlay,
                        "data-a-target": "user-card-modal"
                    }, o.createElement(v.Ma, {
                        alignItems: v.c.Center,
                        className: "info",
                        justifyContent: v.La.Center,
                        display: v.R.Flex,
                        flexDirection: v.T.Column,
                        textAlign: v.Cb.Center,
                        fullWidth: !0,
                        flexGrow: 1,
                        overflow: v.Pa.Hidden
                    }, o.createElement(v.m, {
                        src: e.profileImageURL,
                        size: 50,
                        alt: e.displayName || ""
                    }), o.createElement(v.qb, {
                        padding: {
                            top: .5
                        },
                        ellipsis: !0,
                        color: v.K.Overlay
                    }, o.createElement(v.Q, {
                        bold: !0
                    }, e.displayName)), this.getBodyContent())))), this.getButtons()))
                }, t = a.c([Object(d.a)(b, {
                    options: function(e) {
                        return {
                            fetchPolicy: "cache-and-network",
                            variables: {
                                id: e.id
                            },
                            skip: e.userData
                        }
                    }
                }), Object(m.c)("UserCard")], t)
            }(o.Component);
            var k = Object(r.b)(function(e) {
                return {
                    currentUserID: e.session.user && "" + e.session.user.id
                }
            })(y);
            n.d(t, "b", function() {
                return k
            }), n.d(t, "c", function() {
                return i
            }), n.d(t, "a", function() {
                return 214
            })
        },
        jz1t: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("kRBY"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("oJmH"),
                l = n("/7QA"),
                c = n("eJ65"),
                d = n("4VQm"),
                u = n("yR8l"),
                p = n("edgk"),
                m = n("KtNF"),
                h = n("opIq"),
                f = n("dx/T"),
                g = n("ebRM"),
                v = n("RiD7"),
                b = n("Ue10"),
                y = (n("OuEP"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handlePromoBuy = function(e) {
                            var n = Object(g.b)({
                                trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                                channelID: t.props.channelID,
                                purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                                bitsAmount: e.currentTarget.dataset.bitsAmount,
                                location: v.b.GetBitsButton
                            });
                            n && t.props.onPromoBuyClose(n)
                        }, t
                    }
                    return a.d(t, e), t.prototype.render = function() {
                        var e = o.createElement(b.Ma, {
                            "data-test-selector": "first-time-user-intro"
                        }, o.createElement(b.Ma, {
                            padding: {
                                x: 5,
                                y: 2
                            },
                            textAlign: b.Cb.Center
                        }, o.createElement(b.Q, {
                            type: b.Gb.H4,
                            bold: !0
                        }, Object(l.d)("Cheer Bits for your Favorite Streamer!", "Bits--FirstTimeUserPrompt"))), o.createElement(b.Ma, {
                            padding: {
                                x: 2,
                                bottom: 1
                            }
                        }, o.createElement(b.Q, {
                            type: b.Gb.Span,
                            color: b.K.Alt
                        }, Object(l.d)("Bits are fun, animated emotes. Cheering Bits celebrates moments you love with the community right in chat and similar to subscribing, helps support Partners and Affiliates.", "Bits--FirstTimeUserPrompt"), o.createElement(b.Fa, {
                            margin: {
                                left: .5
                            }
                        }, o.createElement("a", {
                            onClick: this.props.toggleShowTutorial
                        }, Object(l.d)("How do I cheer?", "Bits--FirstTimeUserPrompt"))))), o.createElement(b.Ma, {
                            padding: {
                                bottom: 2
                            },
                            textAlign: b.Cb.Center
                        }, o.createElement(b.Fa, {
                            margin: {
                                bottom: 1
                            }
                        }, o.createElement(b.Q, {
                            type: b.Gb.H6,
                            bold: !0,
                            className: "bits-first-time-user-prompt__promo-header"
                        }, Object(l.d)("First Time Purchaser Discount Pack!", "Bits--FirstTimeUserPrompt"))), o.createElement(b.v, {
                            onClick: this.handlePromoBuy,
                            "data-purchase-url": this.props.promo.url,
                            "data-bits-amount": this.props.promo.bits,
                            "data-a-target": "bits-purchase-button-" + this.props.promo.bits
                        }, Object(l.d)("{price} For {amount} Bits", {
                            price: this.props.promo.price,
                            amount: this.props.promo.bits
                        }, "Bits--FirstTimeUserPrompt"))));
                        return this.props.isShowingTutorial ? o.createElement(b.Ma, {
                            className: "bits-first-time-user-prompt",
                            fullWidth: !0
                        }, o.createElement(b.Ma, {
                            className: "bits-first-time-user-prompt__tutorial-back-button"
                        }, o.createElement(b.v, {
                            onClick: this.props.toggleShowTutorial,
                            type: b.B.Text
                        }, o.createElement(b.fb, {
                            asset: b.gb.Play,
                            height: 8
                        }), " ", Object(l.d)("Back", "Bits--FirstTimeUserPrompt"))), o.createElement(b.Ma, {
                            textAlign: b.Cb.Center,
                            padding: {
                                x: 2,
                                bottom: 2,
                                top: 5
                            },
                            fullHeight: !0
                        }, o.createElement(b.e, {
                            type: b.j.SlideInLeft,
                            duration: b.g.Long,
                            enabled: !0
                        }, o.createElement(f.a, null)))) : this.props.animateFirstTimeUserIntro ? o.createElement(b.Fa, {
                            className: "bits-first-time-user-prompt"
                        }, o.createElement(b.e, {
                            type: b.j.SlideInRight,
                            duration: b.g.Long,
                            enabled: this.props.animateFirstTimeUserIntro
                        }, e)) : o.createElement(b.Ma, {
                            className: "bits-first-time-user-prompt"
                        }, e)
                    }, t
                }(o.Component)),
                k = n("lhih"),
                S = n("0Lz3"),
                w = n("GnwI"),
                E = n("Gw6o"),
                C = (n("0jUA"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hideFirstTimeUserIntro: !1
                        }, t.trackBitsCardInteraction = function(e, n) {
                            var i = {
                                actionName: e,
                                emoteType: n && n.emoteType,
                                emoteLevel: n && n.emoteLevel,
                                location: v.b.GetBitsButton,
                                displayedBalance: t.props.bitsBalance || 0
                            };
                            Object(v.h)(i)
                        }, t.onClose = function() {}, t.onPromoBuyClose = function(e) {
                            Object(p.a)(e, function() {
                                t.props.data && t.props.data.refetch()
                            })
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        if (this.props.loading) return o.createElement(b.qb, {
                            "data-a-target": "get-bits-button-content-loading",
                            display: b.R.Flex,
                            flexDirection: b.T.Column,
                            alignItems: b.c.Center,
                            justifyContent: b.La.Center,
                            textAlign: b.Cb.Center,
                            padding: {
                                y: 5
                            }
                        }, o.createElement(b.Oa, {
                            delay: 0
                        }), o.createElement(b.Ma, {
                            padding: {
                                top: 2
                            }
                        }, o.createElement(b.Q, {
                            italic: !0
                        }, Object(l.d)("Fetching bits", "Bits--GetBitsButtonContent"))));
                        var e = null;
                        if (this.props.bitsOffers) {
                            var t = this.props.bitsOffers.find(function(e) {
                                return Object(g.c)(e)
                            });
                            t && t.type === k.b && !this.state.hideFirstTimeUserIntro && (e = o.createElement(y, {
                                promo: t,
                                animateFirstTimeUserIntro: this.props.animateFirstTimeUserIntro,
                                isShowingTutorial: this.props.isShowingTutorial,
                                toggleShowTutorial: this.props.toggleShowTutorial,
                                trackBitsCardInteraction: this.trackBitsCardInteraction,
                                channelID: this.props.channelID || "",
                                onPromoBuyClose: this.onPromoBuyClose
                            }))
                        }
                        var n = null;
                        void 0 !== this.props.bitsBalance ? n = o.createElement(b.Ma, {
                            textAlign: b.Cb.Center,
                            fullWidth: !0,
                            padding: {
                                y: .5
                            }
                        }, o.createElement(b.Q, {
                            type: b.Gb.Span
                        }, Object(l.d)("You have {bitsBalance}", {
                            bitsBalance: o.createElement(m.a, {
                                withImage: !0,
                                withText: !0,
                                count: this.props.bitsBalance,
                                bitsConfig: this.props.bitsConfig
                            })
                        }, "Bits--GetBitsButton"))) : void 0 === this.props.bitsBalance && (n = o.createElement(b.Ma, {
                            textAlign: b.Cb.Center,
                            fullWidth: !0,
                            padding: {
                                y: .5
                            }
                        }, o.createElement(b.Q, {
                            type: b.Gb.Span
                        }, Object(l.d)("{bitsGem} Log in to see your Bits balance", {
                            bitsGem: o.createElement(m.a, {
                                count: 100,
                                withImage: !0,
                                bitsConfig: this.props.bitsConfig
                            })
                        }, "Bits--GetBitsButton"))));
                        var i = null;
                        return (this.props.channelLogin || this.props.isInTopNav) && (i = o.createElement(h.a, {
                            bitsConfig: this.props.bitsConfig,
                            channelLogin: this.props.channelLogin || "",
                            closeAllBits: this.onClose,
                            onClose: this.onClose,
                            trackBitsCardInteraction: this.trackBitsCardInteraction,
                            location: v.b.GetBitsButton,
                            hidePromos: !0,
                            hideWateb: !0,
                            fullsize: !0
                        })), o.createElement(d.b, {
                            className: "get-bits-button-content"
                        }, o.createElement(b.Ma, null, n, e, i))
                    }, t
                }(o.Component)),
                N = Object(s.compose)(Object(w.c)("GetBitsButtonContent"), Object(u.a)(E, {
                    name: "data",
                    props: function(e) {
                        var t, n, i, r;
                        return e.data && e.data.user && e.data.user.cheer && (t = Object(S.a)(e.data.user.cheer.emotes), n = e.data.user.id), e.data && e.data.currentUser ? (r = e.data.currentUser.bitsBalance, i = e.data.currentUser.bitsOffers) : e.data && e.data.bitsOffers && (i = e.data.bitsOffers), {
                            loading: e.data && e.data.loading,
                            bitsOffers: i,
                            bitsBalance: r,
                            bitsConfig: t,
                            channelID: n
                        }
                    },
                    skip: function(e) {
                        return !e.channelLogin && !e.isInTopNav
                    },
                    options: function(e) {
                        return {
                            variables: {
                                login: e.channelLogin,
                                withChannel: !!e.channelLogin,
                                isLoggedIn: e.isLoggedIn
                            }
                        }
                    }
                }))(C),
                T = "get-bits-button__top-nav-button",
                _ = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isShowingTutorial: !1,
                            animateFirstTimeUserIntro: !1
                        }, t.renderButton = function() {
                            var e = Object(l.d)("Get Bits", "Bits--GetBitsButton");
                            return o.createElement(b.v, {
                                "data-test-selector": t.props.isInTopNav ? T : void 0,
                                type: t.props.isInTopNav ? b.B.Hollow : b.B.Default,
                                overlay: t.props.isInTopNav,
                                dropdown: !0
                            }, e)
                        }, t.toggleBalloon = function(e) {
                            t.setState({
                                animateFirstTimeUserIntro: !1
                            }), e || Object(v.h)({
                                actionName: v.a.BuyMain,
                                location: t.props.isInTopNav ? v.b.GetBitsButtonTopNav : v.b.GetBitsButton,
                                displayedBalance: 0
                            })
                        }, t.toggleShowTutorial = function() {
                            t.setState({
                                isShowingTutorial: !t.state.isShowingTutorial,
                                animateFirstTimeUserIntro: !0
                            })
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        var e = null;
                        return (this.props.channelLogin || this.props.isInTopNav) && (e = o.createElement(N, {
                            isLoggedIn: this.props.isLoggedIn,
                            channelLogin: this.props.channelLogin,
                            toggleShowTutorial: this.toggleShowTutorial,
                            isShowingTutorial: this.state.isShowingTutorial,
                            animateFirstTimeUserIntro: this.state.animateFirstTimeUserIntro,
                            isInTopNav: this.props.isInTopNav
                        })), o.createElement(c.a, {
                            onToggle: this.toggleBalloon
                        }, this.renderButton(), o.createElement(b.q, {
                            direction: b.r.BottomRight,
                            size: b.s.Large,
                            offsetX: "5px"
                        }, e))
                    }, t
                }(o.Component),
                R = Object(s.compose)(Object(w.c)("GetBitsButton"))(_);
            var O = Object(i.b)(function(e) {
                return {
                    isLoggedIn: Object(r.e)(e)
                }
            })(R);
            n.d(t, "a", function() {
                return O
            })
        },
        k3L1: function(e, t, n) {},
        k91D: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "GiftSubscribeButton_Gift_Eligibility"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "recipientLogin"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "String"
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "subProductId"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "recipientLogin"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canGift"
                                            },
                                            arguments: [{
                                                kind: "Argument",
                                                name: {
                                                    kind: "Name",
                                                    value: "product"
                                                },
                                                value: {
                                                    kind: "Variable",
                                                    name: {
                                                        kind: "Name",
                                                        value: "subProductId"
                                                    }
                                                }
                                            }],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 171
                }
            };
            n.loc.source = {
                body: "query GiftSubscribeButton_Gift_Eligibility($recipientLogin: String $subProductId: String!) {\nuser(login: $recipientLogin) {\nid\nself {\ncanGift(product: $subProductId)\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        kPBf: function(e, t) {},
        kRBY: function(e, t, n) {
            "use strict";
            n.d(t, "f", function() {
                return s
            }), n.d(t, "e", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            }), n.d(t, "a", function() {
                return d
            }), n.d(t, "b", function() {
                return u
            }), n.d(t, "c", function() {
                return p
            });
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("JOxF"),
                o = function() {
                    return {
                        authInitialized: !1,
                        initialUserAvailabilityIsSet: !1,
                        languageCode: "en",
                        locale: "en-US",
                        languageInitialized: !1,
                        firstPageLoaded: !!r.a.embedded
                    }
                };

            function s(e) {
                return e.session.authInitialized && e.session.languageInitialized
            }

            function l(e) {
                return !!e.session.user
            }

            function c(e) {
                return e.session.user
            }

            function d(e) {
                return e.session.user && e.session.user.authToken
            }

            function u(e) {
                return e.session.user && e.session.user.legacyCSRFToken
            }

            function p(e) {
                return e.session.locale
            }
            r.o.store.registerReducer("session", function(e, t) {
                switch (void 0 === e && (e = o()), t.type) {
                    case a.a:
                        return i.a({}, e, {
                            authInitialized: !0,
                            user: t.user
                        });
                    case a.d:
                        return i.a({}, e, {
                            languageInitialized: !0,
                            languageCode: t.languageCode,
                            locale: t.locale
                        });
                    case a.b:
                        return i.a({}, e, {
                            firstPageLoaded: !0
                        });
                    case a.c:
                        return i.a({}, e, {
                            initialUserAvailabilityIsSet: !0
                        });
                    default:
                        return e
                }
            })
        },
        kSkr: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "BlockUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "BlockUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "blockUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "targetUser"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 94
                }
            };
            n.loc.source = {
                body: "mutation BlockUser($input: BlockUserInput!) {\nblockUser(input: $input) {\ntargetUser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        kXha: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "RecommendedFriend_DismissFriendRecommendation"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "DismissFriendRecommendationInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "dismissFriendRecommendation"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 160
                }
            };
            n.loc.source = {
                body: "mutation RecommendedFriend_DismissFriendRecommendation($input: DismissFriendRecommendationInput!) {\ndismissFriendRecommendation(input: $input) {\nuser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        kYGc: function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.Login = "login", e.Signup = "signup"
                }(i || (i = {})),
                function(e) {
                    e.Height = "height", e.Loaded = "loaded", e.KrakenCallback = "krakenCallback", e.PassportCallback = "passportCallback", e.Heartbeat = "heartbeat"
                }(r || (r = {}))
        },
        kdOL: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "ReportUserModal_ReportUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportContentInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportContent"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "contentID"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 111
                }
            };
            n.loc.source = {
                body: "mutation ReportUserModal_ReportUser($input: ReportContentInput!) {\nreportContent(input: $input) {\ncontentID\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        kduP: function(e, t, n) {
            "use strict";

            function i(e) {
                return "/directory/game/" + encodeURIComponent(e)
            }

            function r(e) {
                return "/communities/" + encodeURIComponent(e)
            }

            function a(e) {
                return "/events/" + encodeURIComponent(e)
            }

            function o(e) {
                return "/" + encodeURIComponent(e) + "/manager"
            }
            n.d(t, "c", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "d", function() {
                return o
            })
        },
        kqQL: function(e, t, n) {},
        kxDl: function(e, t, n) {},
        kxrW: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.PlayerInit = "init", e.ContentShowing = "contentShowing", e.PlaybackStatistics = "playbackStatistics", e.ChansubRequired = "chansubRequired", e.VideoFailure = "videoFailure", e.Formats = "videoFormats", e.ABSStreamFormatChange = "abs_stream_format_change", e.FormatChanged = "videoFormatChanged", e.TimeChange = "timeChange", e.BufferChange = "bufferChange", e.SegmentChange = "segmentchange", e.UsherFailError = "usherFail", e.CaptionUpdate = "captions", e.SeekFailed = "seekfailed", e.VariantSwitchRequest = "variantSwitchRequested", e.ViewersChange = "viewerschange", e.StreamLoaded = "streamLoaded", e.VideoLoaded = "videoLoaded", e.VideoPaused = "videoPaused", e.QualityChange = "qualitychange", e.Online = "online", e.Offline = "offline", e.Restricted = "restricted", e.CastingChange = "castingchange", e.TheatreChange = "theatrechange", e.MidrollRequested = "midrollrequested", e.ManifestExtraInfo = "manifestExtraInfo", e.TransitionToCollectionVOD = "transitionToCollectionVod", e.TransitionToRecommendedVOD = "transitionToRecommendedVod", e.StitchedAdStart = "stitchedadstart", e.StichedAdEnd = "stitchedadend", e.PersistenPlayerToggle = "persistentPlayerEnableToggle", e.StatsUpdate = "statsupdate", e.PromptLoginModal = "prompt login modal", e.OpenStream = "openStream", e.PlayerReady = "ready", e.FullscreenChange = "fullscreenchange", e.ExternalFullscreenChange = "externalfullscreenchange", e.ClipsModerationOpen = "clips-moderation-open"
                }(i || (i = {}))
        },
        kz7j: function(e, t, n) {
            "use strict";
            var i, r, a, o;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "c", function() {
                    return r
                }), n.d(t, "b", function() {
                    return a
                }), n.d(t, "d", function() {
                    return o
                }),
                function(e) {
                    e.Chat = "Chat", e.OnsiteNotifications = "Onsite Notifications", e.Page = "page", e.Passport = "Passport", e.Player = "Player", e.Search = "Search", e.TwitchPrime = "Twitch Prime", e.ViewersList = "Viewers List", e.Whispers = "Whispers"
                }(i || (i = {})),
                function(e) {
                    e.Connected = "Connected", e.Buffering = "Buffering", e.Created = "Created", e.FirstFrame = "First Frame", e.FirstPageLoaded = "Initial results loaded", e.FirstPaint = "First Paint", e.History = "History", e.Init = "Init", e.LaterPageLoaded = "More results loaded", e.Loaded = "Loaded", e.RenderSent = "Render Sent", e.Updated = "Updated"
                }(r || (r = {})),
                function(e) {
                    e.ChatConnected = "chat-connected", e.ChatInit = "chat-init", e.ChatRenderSent = "chat-render-sent-message", e.FirstPaint = "first-cue", e.OnsiteNotificationsLoaded = "onsite-notifications-loaded", e.PassportLoginLoaded = "passport-login-loaded", e.PassportSignUpLoaded = "passport-sign-up-loaded", e.PlayerBuffering = "player-buffering", e.PlayerCreated = "player-created", e.PlayerPlayed = "player-played", e.PlayerLoaded = "player-loaded", e.PrimeOfferLoaded = "prime-offer-loaded", e.SearchResultsFirstPage = "search-results-first-page", e.SearchResultsLaterPage = "search-results-later-page", e.ViewersListUpdated = "viewers-list-updated", e.WhispersHistory = "whispers-history", e.WhispersRenderSent = "whispers-render-sent"
                }(a || (a = {})),
                function(e) {
                    e[e.NavigationStart = 1] = "NavigationStart", e[e.Registration = 2] = "Registration"
                }(o || (o = {}))
        },
        l1Uh: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("qH9u");

            function r() {
                return i.b ? +window.getComputedStyle(i.b).getPropertyValue("width").replace("px", "") : 0
            }
        },
        lKJS: function(e, t, n) {},
        lNQh: function(e, t, n) {},
        lTwP: function(e, t, n) {},
        lTz2: function(e, t, n) {
            "use strict";

            function i(e, t) {
                return !(!e && !t) && (!t || !e || (t.channelLogin !== e.channelLogin || t.vodID !== e.vodID || t.collectionID !== e.collectionID))
            }

            function r(e, t) {
                return !(!e && !t) && (!t || !e || (e.vodID && !t.vodID || e.collectionID && !t.collectionID))
            }
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            })
        },
        lWrh: function(e, t, n) {},
        lZCe: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.logger = a.o.logger.withCategory("component-experiment");
                        var i = a.o.experiments.getAssignment(n.props.name, n.props.channel ? {
                            channel: n.props.channel
                        } : {});
                        return i && n.props.assignments[i] ? n.logger.debug("Displaying component for experiment", {
                            name: n.props.name,
                            assignment: i
                        }) : n.logger.debug("Displaying fallback component for experiment", {
                            name: n.props.name,
                            assignment: i
                        }), n.state = {
                            assignment: i
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        if (this.state.assignment && this.props.assignments[this.state.assignment]) {
                            var e = this.props.assignments[this.state.assignment]();
                            return "string" == typeof e ? (window.location.replace(e), null) : e
                        }
                        return this.props.assignments.fallback()
                    }, t
                }(r.Component);
            n.d(t, "a", function() {
                return o
            })
        },
        lZdE: function(e, t, n) {
            "use strict";

            function i(e) {
                return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")
            }
            n.d(t, "a", function() {
                return i
            })
        },
        lhih: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "e", function() {
                return a
            }), n.d(t, "g", function() {
                return o
            }), n.d(t, "f", function() {
                return s
            }), n.d(t, "c", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            });
            var i = "AD",
                r = "BUNDLE",
                a = "first_time_purchase",
                o = "single_purchase",
                s = "prime_single_purchase",
                l = "black_friday_2017",
                c = "twitch_prime_2018"
        },
        m98o: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("ua1/"),
                s = n("NSwr");

            function l(e, t) {
                var n = e.activity,
                    i = e.availability;
                if (!n) return null;
                switch (n.type) {
                    case o.a.Playing:
                        return n.game && n.game.name ? Object(a.d)("playing {game}", {
                            game: n.game.name
                        }, "PresenceActivity") : Object(a.d)("playing", "PresenceActivity");
                    case o.a.Watching:
                        var r = function(e) {
                            if (e && e.type === o.a.Watching && e.user) return e.user.hosting && e.user.hosting.displayName ? {
                                isHost: !0,
                                displayName: e.user.hosting.displayName
                            } : {
                                isHost: !1,
                                displayName: e.user.displayName
                            };
                            return null
                        }(n);
                        return r ? i && i === s.a.Offline ? !t && r.isHost ? Object(a.d)("was watching {user} with the {community} community", {
                            user: r.displayName,
                            community: n.user.displayName
                        }, "PresenceActivity") : !t && n.user.stream && n.user.stream.game && n.user.stream.game.name ? Object(a.d)("was watching {user} stream {game}", {
                            user: r.displayName,
                            game: n.user.stream.game.name
                        }, "PresenceActivity") : Object(a.d)("was watching {user}", {
                            user: r.displayName
                        }, "PresenceActivity") : !t && r.isHost ? Object(a.d)("watching {user} with the {community} community", {
                            user: r.displayName,
                            community: n.user.displayName
                        }, "PresenceActivity") : !t && n.user.stream && n.user.stream.game && n.user.stream.game.name ? Object(a.d)("watching {user} stream {game}", {
                            user: r.displayName,
                            game: n.user.stream.game.name
                        }, "PresenceActivity") : Object(a.d)("watching {user}", {
                            user: r.displayName
                        }, "PresenceActivity") : null;
                    case o.a.Streaming:
                        return n.stream && n.stream.game && n.stream.game.name ? Object(a.d)("streaming {game}", {
                            game: n.stream.game.name
                        }, "PresenceActivity") : Object(a.d)("streaming", "PresenceActivity");
                    default:
                        return null
                }
            }

            function c(e, t) {
                if (!t) return null;
                switch (t.type) {
                    case o.a.Streaming:
                        return "/" + e;
                    case o.a.Watching:
                        return "/" + t.user.login;
                    default:
                        return null
                }
            }

            function d(e) {
                var t = Object(a.d)("Online", "PresenceAvailability");
                switch (e) {
                    case s.a.Idle:
                    case s.a.Away:
                        return Object(a.d)("Away", "PresenceAvailability");
                    case s.a.Busy:
                        return Object(a.d)("Busy", "PresenceAvailability");
                    case s.a.Offline:
                        return Object(a.d)("Offline", "PresenceAvailability");
                    case s.a.Invisible:
                        return Object(a.d)("Invisible", "PresenceAvailability");
                    case s.a.Online:
                    default:
                        return t
                }
            }
            var u = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this,
                            i = a.o.experiments.getAssignment("TWILIGHT_EXTENDED_PRESENCE");
                        return n.state = {
                            hasExtendedRichPresence: "variant_a" === i
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this.props,
                            t = e.activity,
                            n = e.availability,
                            i = e.condensed,
                            a = this.state.hasExtendedRichPresence ? {
                                activity: t,
                                availability: n
                            } : {
                                activity: t
                            };
                        return r.createElement("span", {
                            "data-a-target": "presence-text"
                        }, l(a, i) || d(n))
                    }, t
                }(r.Component),
                p = n("Ue10"),
                m = function(e) {
                    var t = p.Ya.Online;
                    switch (e.availability) {
                        case s.a.Idle:
                        case s.a.Away:
                            t = p.Ya.Away;
                            break;
                        case s.a.Busy:
                            t = p.Ya.Busy;
                            break;
                        case s.a.Invisible:
                            t = p.Ya.Invisible;
                            break;
                        case s.a.Offline:
                            t = p.Ya.Offline;
                            break;
                        case s.a.Online:
                            t = p.Ya.Online;
                            break;
                        default:
                            t = p.Ya.Online
                    }
                    return r.createElement(p.Xa, {
                        status: t,
                        "data-test-selector": "presence-indicator"
                    })
                },
                h = n("/aPz");
            var f = n("0Log"),
                g = n("JbHs"),
                v = n("mR7g");

            function b(e) {
                return function(t) {
                    return function(e) {
                        return function(t) {
                            return function(n) {
                                function a(t) {
                                    var i = n.call(this, t) || this;
                                    return i.options = e(t), i
                                }
                                return i.d(a, n), a.prototype.componentDidMount = function() {
                                    this.options.skip || this.subscribe(this.options)
                                }, a.prototype.componentWillReceiveProps = function(t) {
                                    var n = e(t);
                                    n.topic === this.options.topic || n.skip || (this.unsubscribe(), this.subscribe(n)), this.options = n
                                }, a.prototype.componentWillUnmount = function() {
                                    this.unsubscribe()
                                }, a.prototype.render = function() {
                                    return r.createElement(t, i.a({}, this.props))
                                }, a.prototype.subscribe = function(e) {
                                    this.unsubscriber = Object(h.s)({
                                        fragment: e.fragment,
                                        id: e.id,
                                        topic: e.topic,
                                        type: e.type,
                                        mutator: e.mutator
                                    })
                                }, a.prototype.unsubscribe = function() {
                                    this.unsubscriber && this.unsubscriber()
                                }, a
                            }(r.Component)
                        }
                    }(function(t) {
                        var n = e(t);
                        return {
                            id: "User:" + n.id,
                            skip: n.skip,
                            fragment: v,
                            topic: Object(h.n)(n.currentUserID),
                            type: f.PubsubMessageType.Presence,
                            mutator: function(e, t) {
                                if (!t) return null;
                                var i = n.id;
                                if (e.data.user_id !== +i) return t;
                                var r = "$User:" + i + ".activity";
                                return t.availability = e.data.availability.toUpperCase(), t.activity = Object(g.a)(e.data.activity, r), t
                            }
                        }
                    })(t)
                }
            }
            n.d(t, "a", function() {
                return u
            }), n.d(t, !1, function() {
                return m
            }), n.d(t, !1, function() {
                return b
            }), n.d(t, "b", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            }), n.d(t, !1, function() {
                return d
            })
        },
        mBWp: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Whispers_Tracking_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasTurbo"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "availability"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 86
                }
            };
            n.loc.source = {
                body: "query Whispers_Tracking_CurrentUser {\ncurrentUser {\nid\nhasTurbo\navailability\nlogin\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        mR7g: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "currentUser"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "displayName"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "availability"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "activity"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "type"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Watching"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "user"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Streaming"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "stream"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "game"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "name"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Playing"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 204
                }
            };
            n.loc.source = {
                body: "fragment currentUser on User {\nid\nlogin\ndisplayName\navailability\nactivity {\ntype\n... on Watching {\nuser {\ndisplayName\n}\n}\n... on Streaming {\nstream {\ngame {\nname\n}\n}\n}\n... on Playing {\ngame {\nname\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        mZsS: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Ready = 0] = "Ready", e[e.Dimensions = 1] = "Dimensions", e[e.RequestAd = 2] = "RequestAd", e[e.OnStart = 3] = "OnStart", e[e.OnCredit = 4] = "OnCredit", e[e.OnFinish = 5] = "OnFinish", e[e.OnClose = 6] = "OnClose", e[e.OnError = 7] = "OnError", e[e.Adblock = 8] = "Adblock", e[e.LimitReached = 9] = "LimitReached"
                }(i || (i = {}))
        },
        miPW: function(e, t, n) {},
        mmRu: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("mrSG"),
                a = n("q1tI"),
                o = n("u5aL"),
                s = n("/7QA"),
                l = n("Ue10"),
                c = function(e) {
                    return a.createElement(l.w, {
                        icon: l.gb.Emoticons,
                        ariaLabel: Object(s.d)("Emote picker", "EmotePickerButton"),
                        type: l.y.Secondary,
                        onClick: e.onClick,
                        "data-a-target": "emote-picker-button"
                    })
                },
                d = n("0D4T"),
                u = n("GnwI"),
                p = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasInteracted: !1,
                            isEmotePickerMenuVisible: !1,
                            isEmotePickerButtonVisible: !1
                        }, t.onClickOut = function() {
                            t.setState({
                                isEmotePickerMenuVisible: !1
                            })
                        }, t.onClickEmote = function(e, n) {
                            t.props.onClickEmote && t.props.onClickEmote(e, n)
                        }, t.toggleEmotePicker = function() {
                            t.setState(function(e) {
                                return {
                                    isEmotePickerMenuVisible: !e.isEmotePickerMenuVisible
                                }
                            })
                        }, t.onEmotePickerDataLoaded = function(e) {
                            e && t.setState({
                                isEmotePickerButtonVisible: !0
                            })
                        }, t.onInteraction = function() {
                            return t.setState({
                                hasInteracted: !0
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), this.props.inputRef && (this.props.inputRef.addEventListener("mouseenter", this.onInteraction), this.props.inputRef.addEventListener("focus", this.onInteraction))
                    }, t.prototype.componentWillUnmount = function() {
                        this.props.inputRef && (this.props.inputRef.removeEventListener("mouseenter", this.onInteraction), this.props.inputRef.removeEventListener("focus", this.onInteraction))
                    }, t.prototype.render = function() {
                        var e = null;
                        this.state.isEmotePickerButtonVisible && (e = a.createElement(c, {
                            onClick: this.toggleEmotePicker
                        }));
                        var t = null;
                        this.hasInteractedOrPageload && (t = a.createElement(d.a, {
                            channelOwnerID: this.props.channelOwnerID,
                            onClickEmote: this.onClickEmote,
                            onLoad: this.onEmotePickerDataLoaded,
                            toggleVisibility: this.toggleEmotePicker,
                            visible: this.state.isEmotePickerMenuVisible,
                            direction: this.props.direction
                        }));
                        var n = a.createElement(l.Ma, r.a({
                            className: "emote-picker-and-button"
                        }, this.layoutProps), e, t);
                        return this.props.shouldCloseOnClickOut ? a.createElement(o.a, {
                            onClickOut: this.onClickOut
                        }, n) : n
                    }, Object.defineProperty(t.prototype, "hasInteractedOrPageload", {
                        get: function() {
                            return !(!this.props.firstPageLoaded && !this.state.hasInteracted)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "layoutProps", {
                        get: function() {
                            var e = {
                                attachTop: !!this.props.attachTop,
                                attachRight: !!this.props.attachRight,
                                attachBottom: !!this.props.attachBottom,
                                attachLeft: !!this.props.attachLeft,
                                padding: this.props.padding
                            };
                            return this.props.position && (e.position = this.props.position), e
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(a.Component),
                m = Object(u.c)("EmotePicker")(p);
            var h = Object(i.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded
                    }
                })(m),
                f = n("cpJf");
            n.d(t, "a", function() {
                return h
            }), n.d(t, "c", function() {
                return d.a
            }), n.d(t, !1, function() {
                return f.c
            }), n.d(t, !1, function() {
                return f.b
            }), n.d(t, !1, function() {
                return f.a
            }), n.d(t, "b", function() {
                return c
            })
        },
        myUo: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "TopNav_PrimeUpsell_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasTurbo"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 105
                }
            };
            n.loc.source = {
                body: "query TopNav_PrimeUpsell_CurrentUser {\ncurrentUser {\nid\nhasPrime\nhasTurbo\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        nHFd: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("aCAx"),
                a = n("mrSG"),
                o = n("q1tI"),
                s = n("/7QA"),
                l = n("atdg"),
                c = n("Ue10"),
                d = (n("Scns"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleHistoryChange = function() {
                            t.handleClose()
                        }, t.handleGlobalKeypress = function(e) {
                            t.props.ignoreEscKey || 27 !== e.which || t.handleClose()
                        }, t.handleGlobalClick = function(e) {
                            var n = e.target;
                            t.props.closeOnBackdropClick && n.matches("." + l.b) && t.handleClose()
                        }, t.handleClose = function() {
                            t.props.onClose()
                        }, t
                    }
                    return a.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.ignoreEscKey || document.addEventListener("keydown", this.handleGlobalKeypress), this.props.closeOnBackdropClick && document.addEventListener("click", this.handleGlobalClick), this.props.closeOnPageNavigation && (this.historyUnlisten = s.o.history.listen(this.handleHistoryChange))
                    }, t.prototype.componentWillUnmount = function() {
                        document.removeEventListener("keydown", this.handleGlobalKeypress), document.removeEventListener("click", this.handleGlobalClick), this.historyUnlisten && this.historyUnlisten()
                    }, t.prototype.render = function() {
                        return o.createElement("div", {
                            className: "modal__close-button"
                        }, o.createElement(c.w, {
                            overlay: !0,
                            onClick: this.handleClose,
                            ariaLabel: Object(s.d)("Close modal", "ModalCloser"),
                            icon: c.gb.Close,
                            "data-a-target": "modalClose"
                        }))
                    }, t
                }(o.PureComponent));
            n.d(t, "a", function() {
                return u
            });
            var u = Object(i.b)(null, function(e, t) {
                return {
                    onClose: function() {
                        t.onClose && t.onClose(), e(Object(r.c)())
                    }
                }
            })(d)
        },
        nQLi: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("mrSG"),
                r = n("cr+I");

            function a(e, t) {
                if (void 0 === t && (t = {}), 0 === Object.keys(t).length) return e;
                var n = new URL(e),
                    a = r.stringify(i.a({}, r.parse(n.search), t));
                return "" + n.origin + n.pathname + "?" + a + n.hash
            }
        },
        nTF4: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("lZCe"),
                s = n("ZS2+");
            ! function(e) {
                e.ENABLED = "enabled", e.CONTROL = "control"
            }(i || (i = {}));
            var l = function() {
                var e, t = {
                    name: "TWILIGHT_GROWTH_EMAIL_VERIFY_BAR",
                    assignments: (e = {
                        fallback: function() {
                            return null
                        }
                    }, e[i.ENABLED] = function() {
                        return s.a.wrap(function() {
                            return n.e(41).then(n.bind(null, "lEVP"))
                        }, "VerifyEmailBar", {
                            failSilently: !0,
                            placeholder: null
                        })({})
                    }, e),
                    loader: function() {
                        return null
                    }
                };
                return a.createElement(o.a, r.a({}, t))
            };
            n.d(t, !1, function() {
                return "TWILIGHT_GROWTH_EMAIL_VERIFY_BAR"
            }), n.d(t, "a", function() {
                return l
            })
        },
        ndwU: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = n("/7QA");

            function r() {
                return "variant1" === i.o.experiments.getAssignment("TWILIGHT_CLIPS_ON_THE_BRAIN")
            }
        },
        nxnD: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            });
            var i = {
                resource: {
                    isSocialColumnClosedByUserAction: !1,
                    isRightColumnClosedByUserAction: !1,
                    isFullscreenRightColumnOpenedByUserAction: !1
                },
                time: Date.now()
            }
        },
        oB8h: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Live = "live", e.WatchParty = "watch_party", e.Premiere = "premiere", e.Rerun = "rerun"
                }(i || (i = {}))
        },
        oINn: function(e, t, n) {},
        oKCn: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "c", function() {
                    return i
                }), n.d(t, "a", function() {
                    return a
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.AnimatedThumbnails = "animated_thumbnails", e.Embed = "embed", e.Feed = "feed", e.Frontpage = "frontpage", e.Site = "site", e.Highlighter = "highlighter", e.Onboarding = "onboarding", e.ClipsViewing = "clips-viewing", e.ClipsEditing = "clips-editing", e.ClipsEmbed = "clips-embed", e.Dashboard = "dashboard"
                }(i || (i = {}));
            var r, a = [i.ClipsEditing, i.ClipsViewing, i.ClipsEmbed];
            ! function(e) {
                e.Delete = "delete", e.DeleteAll = "deleteAll", e.ReportUser = "report"
            }(r || (r = {}))
        },
        oSPo: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("cr+I"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("eJ65"),
                l = n("yR8l"),
                c = n("eDVu"),
                d = n("zB42"),
                u = n("0Log"),
                p = n("geRD"),
                m = n("/aPz"),
                h = n("kz7j"),
                f = n("GnwI"),
                g = n("8/mp"),
                v = n("oJmH"),
                b = n("3qZk"),
                y = n.n(b),
                k = n("UptD"),
                S = n("17x9"),
                w = n("6x+I"),
                E = n("2xye"),
                C = new Set(["affiliateinvite", "chatroommention", "feedcomment", "partneragreementupdate", "partnerinvite"]);

            function N(e, t) {
                var n, i = {},
                    a = function(e) {
                        var t = e.actions.filter(function(e) {
                            return "click" === e.type
                        });
                        return t.length > 0 ? t[0].url : ""
                    }(e);
                if (!a) return i;
                try {
                    n = new URL(a)
                } catch (t) {
                    return o.j.error(t.toString(), a + " was malformed from notification id:[" + e.id + "]"), i
                }
                return ! function(e, t) {
                    if (C.has(e)) return !1;
                    return "https://www.twitch.tv" === t.origin
                }(e.type, n) ? (i.linkTo = function(e, t, n) {
                    var i = e.split("?");
                    if (1 === i.length) return e + "?tt_content=" + t + "&tt_medium=" + n;
                    var a = r.parse(i[1]);
                    return a.tt_content = a.tt_content ? a.tt_content : t, a.tt_medium = a.tt_medium ? a.tt_medium : n, [i[0], r.stringify(a, {
                        encode: !1
                    })].join("?")
                }(n.toString(), e.type, t), i.targetBlank = !0) : i.linkTo = {
                    pathname: n.pathname,
                    search: n.search,
                    state: {
                        content: e.type,
                        medium: t
                    }
                }, i
            }
            var T = {};
            var _ = {
                    Center: "center",
                    Toast: "toast",
                    Browser: "browser"
                },
                R = {
                    Open: "open",
                    Close: "close",
                    MarkAllRead: "mark_all_read"
                },
                O = {
                    PrimaryCta: "primary_cta",
                    Dismiss: "dismiss"
                },
                I = function(e) {
                    var t = {
                        notification_id: e.notification.id,
                        notification_type: e.notification.type,
                        ui_context: e.uiContext
                    };
                    o.n.track(E.SpadeEventType.NotificationImpression, t)
                },
                D = function(e) {
                    var t = {
                        unseen_view_count: e.unseenCount,
                        action: e.action
                    };
                    o.n.track(E.SpadeEventType.NotificationCenterInteraction, t)
                },
                P = function(e) {
                    var t = {
                        notification_id: e.notification.id,
                        notification_type: e.notification.type,
                        ui_context: e.uiContext,
                        action: e.action
                    };
                    o.n.track(E.SpadeEventType.NotificationInteraction, t)
                },
                x = n("Ue10"),
                L = (n("Z+W3"), "persistent-notification__delete"),
                F = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.impressionEventFired = !1, t.isVisible = function(e) {
                            if (null !== t.element) {
                                var n = t.element.getBoundingClientRect();
                                return n.top < e.bottom && n.bottom > e.top
                            }
                            return !1
                        }, t.setRef = function(e) {
                            return t.element = e
                        }, t.deleteNotification = function() {
                            P({
                                uiContext: _.Center,
                                notification: t.props.data,
                                action: O.Dismiss
                            }), t.props.onDeleteNotification(t.props.data.id)
                        }, t.clickNotification = function() {
                            P({
                                uiContext: _.Center,
                                notification: t.props.data,
                                action: O.PrimaryCta
                            }), t.props.onViewNotification(t.props.data.id)
                        }, t.renderDeleteNotification = function() {
                            return a.createElement(x.Ma, {
                                className: "persistent-notification__delete",
                                padding: {
                                    top: 1,
                                    left: 1,
                                    right: .5
                                },
                                position: x.Wa.Absolute
                            }, a.createElement(x.Ma, {
                                display: x.R.Flex,
                                flexWrap: x.U.NoWrap,
                                alignItems: x.c.Start
                            }, a.createElement(x.w, {
                                ariaLabel: "delete-notification",
                                "data-test-selector": L,
                                icon: x.gb.Close,
                                size: x.x.Small,
                                onClick: t.deleteNotification
                            })))
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive();
                        var e = this.context.registerReceiver;
                        e ? this.unregister = e(this) : o.j.warn("<PersistentNotification /> initialized missing a <ScrollableArea /> provider")
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister && this.unregister()
                    }, t.prototype.render = function() {
                        return a.createElement(x.Ma, {
                            className: "persistent-notification",
                            position: x.Wa.Relative,
                            refDelegate: this.setRef,
                            "data-test-selector": "persistent-notification"
                        }, a.createElement(x.qb, {
                            display: x.R.Flex,
                            className: this.props.data.isRead ? "persistent-notification__read" : "persistent-notification__unread",
                            borderBottom: !0,
                            flexWrap: x.U.NoWrap
                        }, a.createElement(x.Ja, i.a({
                            "data-test-selector": "persistent-notification__click",
                            onClick: this.clickNotification
                        }, N(this.props.data, E.PageviewMedium.NotificationCenter), {
                            type: x.Ka.Alpha
                        }), a.createElement(x.Ma, {
                            className: "persistent-notification__area",
                            display: x.R.Flex,
                            flexWrap: x.U.NoWrap,
                            padding: {
                                top: 1,
                                bottom: 1,
                                left: 1,
                                right: 3
                            }
                        }, a.createElement(x.E, {
                            aspect: x.l.Aspect1x1,
                            src: this.props.data.thumbnailURL,
                            alt: Object(o.d)("Notification center item thumbnail", "OnsiteNotifications"),
                            size: x.F.Size4
                        }), a.createElement(x.Ma, {
                            display: x.R.Flex,
                            flexDirection: x.T.Column,
                            flexWrap: x.U.NoWrap,
                            margin: {
                                x: 1
                            }
                        }, a.createElement(x.Ma, {
                            className: "persistent-notification__body",
                            overflow: x.Pa.Hidden,
                            "data-test-selector": "persistent-notification__body"
                        }, a.createElement(x.Q, {
                            type: x.Gb.Span,
                            color: x.K.Alt
                        }, a.createElement(w, {
                            source: this.props.data.body || ""
                        }))), a.createElement(x.Ma, {
                            display: x.R.Flex,
                            alignItems: x.c.Center,
                            flexShrink: 0,
                            margin: {
                                top: .5
                            }
                        }, a.createElement(x.fb, {
                            asset: (e = this.props.data.type, t = x.gb.MessagesSC, e in T ? T[e] : t),
                            height: 12,
                            width: 12,
                            type: x.hb.Alt2
                        }), a.createElement(x.Ma, {
                            margin: {
                                left: .5
                            }
                        }, a.createElement(x.Q, {
                            type: x.Gb.Span,
                            color: x.K.Alt2
                        }, Object(o.g)(new Date(this.props.data.updatedAt)))))))), this.renderDeleteNotification()));
                        var e, t
                    }, t.prototype.checkVisible = function(e) {
                        return i.b(this, void 0, void 0, function() {
                            return i.e(this, function(t) {
                                return !this.impressionEventFired && this.isVisible(e) && (I({
                                    uiContext: _.Center,
                                    notification: this.props.data
                                }), this.impressionEventFired = !0), [2]
                            })
                        })
                    }, t.contextTypes = {
                        registerReceiver: S.func
                    }, t = i.c([Object(f.c)("PersistentNotification")], t)
                }(a.Component),
                M = n("9aiH"),
                A = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isRead: !1
                        }, t.createNotificationData = function() {
                            return {
                                id: "friendrequests",
                                type: "friendrequests",
                                body: Object(o.d)("{count, plural, one {You have # new friend request} other {You have # new friend requests}}", {
                                    count: t.props.count
                                }, "FriendRequestsNotification"),
                                createdAt: t.props.date,
                                updatedAt: t.props.date,
                                isRead: t.props.isOldNotification || t.state.isRead,
                                thumbnailURL: y.a,
                                actions: [{
                                    body: "View",
                                    type: "click",
                                    url: "https://www.twitch.tv/friends/requests"
                                }]
                            }
                        }, t.clearUnseenCount = function() {
                            Object(p.e)(M, {}, function(e) {
                                return e.currentUser.incomingFriendRequests.totalUnreadCount = 0, e
                            }), t.props.clearUnreadFriendRequests().then(function() {}).catch(function(e) {
                                return o.j.error(e, "[FriendRequestsNotification] Failed to clear unread requests.")
                            })
                        }, t.viewFriendRequests = function() {
                            t.setState({
                                isRead: !0
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return a.createElement(F, {
                            key: "friendRequestsNotification",
                            data: this.createNotificationData(),
                            onDeleteNotification: this.clearUnseenCount,
                            onViewNotification: this.viewFriendRequests
                        })
                    }, t
                }(a.Component),
                U = Object(v.compose)(Object(l.a)(k, {
                    name: "clearUnreadFriendRequests"
                }))(A),
                B = (n("G4NU"), "center-window__empty"),
                j = "center-window__content-footer",
                z = "center-window__footer__text",
                W = "center-window__read-all",
                V = o.j.withCategory("onsite-notifications-center-window"),
                H = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isLoadingMore: !1
                        }, t.renderContent = function() {
                            return !t.props.hasInitiallyLoaded || t.props.data.length || t.props.friendRequestsData ? [t.mapPersistentNotificationElements(), t.renderContentFooter()] : t.renderEmptyCenterWindowElement()
                        }, t.renderContentFooter = function() {
                            var e = !t.props.hasInitiallyLoaded || t.state.isLoadingMore ? a.createElement(x.Oa, {
                                delay: 0,
                                fillContent: !0
                            }) : a.createElement(x.fb, {
                                asset: x.gb.LogoGlitch,
                                width: 24,
                                height: 24,
                                type: x.hb.Alt2
                            });
                            return a.createElement(x.Ma, {
                                className: "center-window__content-footer",
                                key: "center-window__content-footer",
                                "data-test-selector": j,
                                display: x.R.Flex,
                                flexDirection: x.T.Column,
                                justifyContent: x.La.Center,
                                alignItems: x.c.Center,
                                textAlign: x.Cb.Center,
                                padding: 1,
                                flexGrow: 1
                            }, e)
                        }, t.mapPersistentNotificationElements = function() {
                            var e = t.props.data.map(function(e) {
                                return a.createElement(F, {
                                    key: "onsite-notification-" + e.node.id,
                                    data: e.node,
                                    onDeleteNotification: t.props.onDeleteNotification,
                                    onViewNotification: t.props.onViewNotification
                                })
                            });
                            return t.props.friendRequestsData && e.unshift(a.createElement(U, i.a({
                                key: "friend-requests"
                            }, t.props.friendRequestsData))), e
                        }, t.renderEmptyCenterWindowElement = function() {
                            return a.createElement(x.qb, {
                                "data-test-selector": B,
                                className: "center-window__empty-state",
                                background: x.n.Alt,
                                display: x.R.Flex,
                                justifyContent: x.La.Center,
                                alignItems: x.c.Center,
                                textAlign: x.Cb.Center,
                                flexDirection: x.T.Column,
                                padding: 2,
                                fullWidth: !0
                            }, a.createElement(x.fb, {
                                asset: x.gb.LogoGlitch,
                                width: 100,
                                height: 100,
                                type: x.hb.Placeholder
                            }), a.createElement(x.Ma, {
                                margin: {
                                    top: 1
                                }
                            }, a.createElement(x.Q, {
                                type: x.Gb.H5,
                                color: x.K.Alt2
                            }, Object(o.d)("Hooray! You're in the clear!", "OnsiteNotifications"))))
                        }, t.renderMarkAsRead = function() {
                            return 0 !== t.props.data.length || t.props.friendRequestsData ? a.createElement(x.v, {
                                "data-test-selector": W,
                                type: x.B.Text,
                                size: x.z.Small,
                                disabled: 0 === t.props.data.length && !t.props.friendRequestsData,
                                onClick: t.props.onReadAllNotifications
                            }, Object(o.d)("Mark All as Read", "OnsiteNotifications")) : null
                        }, t.renderNotificationsHeaderElement = function() {
                            return a.createElement(x.qb, {
                                className: "center-window__header",
                                background: x.n.Alt,
                                padding: {
                                    x: 1,
                                    y: .5
                                },
                                display: x.R.Flex,
                                alignItems: x.c.Center,
                                justifyContent: x.La.Between,
                                borderBottom: !0
                            }, a.createElement(x.Q, {
                                type: x.Gb.H6,
                                color: x.K.Alt2,
                                bold: !0
                            }, Object(o.d)("Notifications", "OnsiteNotifications")), t.renderMarkAsRead())
                        }, t.renderUnreadNotificationsFooterElement = function() {
                            var e = 0 === t.props.newNotificationsCount ? null : a.createElement(x.Q, {
                                "data-test-selector": z,
                                type: x.Gb.H6,
                                color: x.K.Alt2
                            }, Object(o.d)("{num, plural, one {1 New Notification} other {{num, number} New Notifications} }", {
                                num: t.props.newNotificationsCount
                            }, "OnsiteNotifications"));
                            return a.createElement(x.qb, {
                                className: "center-window__footer",
                                background: x.n.Alt,
                                padding: .5,
                                alignItems: x.c.Center,
                                textAlign: x.Cb.Center,
                                borderTop: !0
                            }, e)
                        }, t.loadMore = function() {
                            return i.b(t, void 0, void 0, function() {
                                var e;
                                return i.e(this, function(t) {
                                    switch (t.label) {
                                        case 0:
                                            if (this.state.isLoadingMore) return [3, 5];
                                            this.setState({
                                                isLoadingMore: !0
                                            }), t.label = 1;
                                        case 1:
                                            return t.trys.push([1, 3, , 4]), [4, this.props.onLoadMore()];
                                        case 2:
                                            return t.sent(), [3, 4];
                                        case 3:
                                            return e = t.sent(), V.error(e, "unexpected loadMore failure"), [3, 4];
                                        case 4:
                                            this.setState({
                                                isLoadingMore: !1
                                            }), t.label = 5;
                                        case 5:
                                            return [2]
                                    }
                                })
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive()
                    }, t.prototype.render = function() {
                        return a.createElement(x.qb, {
                            className: "center-window",
                            "data-test-selector": "center-window",
                            background: x.n.Alt
                        }, this.renderNotificationsHeaderElement(), a.createElement(g.b, {
                            className: "center-window__scroll",
                            contentClassName: "center-window__scroll-container",
                            suppressScrollX: !0
                        }, a.createElement(x.Ma, {
                            display: x.R.Flex,
                            alignItems: x.c.Center,
                            flexDirection: x.T.Column,
                            flexGrow: 1,
                            flexWrap: x.U.NoWrap
                        }, this.renderContent(), a.createElement(g.a, {
                            enabled: this.props.data.length > 0 && !!this.props.data[this.props.data.length - 1].cursor,
                            contentLength: this.props.data.length,
                            loadMore: this.loadMore,
                            pixelThreshold: 200
                        }))), this.renderUnreadNotificationsFooterElement())
                    }, t = i.c([Object(f.c)("OnsiteNotificationsCenterWindow")], t)
                }(a.Component),
                G = n("/MKj"),
                q = n("kRBY"),
                Q = n("x7UT"),
                K = (n("AsVq"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.closeTimeout = 0, t.close = function() {
                            P({
                                uiContext: _.Toast,
                                notification: t.props.item,
                                action: O.Dismiss
                            }), t.props.close(t.props.index)
                        }, t.onMouseEnter = function() {
                            t.cancelCloseTimer()
                        }, t.onMouseLeave = function() {
                            t.scheduleCloseTimer()
                        }, t.view = function() {
                            P({
                                uiContext: _.Toast,
                                notification: t.props.item,
                                action: O.PrimaryCta
                            }), t.props.view(t.props.index)
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentWillMount = function() {
                        this.scheduleCloseTimer()
                    }, t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), I({
                            uiContext: _.Toast,
                            notification: this.props.item
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        this.cancelCloseTimer()
                    }, t.prototype.render = function() {
                        return a.createElement(x.e, {
                            type: x.j.BounceIn,
                            duration: x.g.Medium,
                            enabled: !0
                        }, a.createElement("div", {
                            onMouseEnter: this.onMouseEnter,
                            onMouseLeave: this.onMouseLeave,
                            "data-test-selector": "onsite-notification-toast__mouse-enter-detector"
                        }, a.createElement(x.qb, {
                            className: "onsite-notification-toast",
                            background: x.n.Base,
                            display: x.R.Flex,
                            flexWrap: x.U.NoWrap,
                            margin: {
                                bottom: 1
                            },
                            border: !0
                        }, a.createElement(x.Ja, i.a({
                            onClick: this.view,
                            type: x.Ka.Alpha
                        }, N(this.props.item, E.PageviewMedium.NotificationToast)), a.createElement(x.Ma, {
                            className: "onsite-notification-toast__container",
                            display: x.R.Flex,
                            flexWrap: x.U.NoWrap
                        }, a.createElement(x.Ma, {
                            padding: {
                                y: 1,
                                left: 1
                            },
                            display: x.R.Flex,
                            flexShrink: 0
                        }, a.createElement(x.E, {
                            aspect: x.l.Aspect1x1,
                            src: this.props.item.thumbnailURL,
                            alt: Object(o.d)("Notification toast thumbnail", "OnsiteNotifications"),
                            size: x.F.Size4
                        })), a.createElement(x.Ma, {
                            display: x.R.Flex,
                            flexDirection: x.T.Column,
                            flexWrap: x.U.NoWrap,
                            flexGrow: 1,
                            padding: 1
                        }, a.createElement(x.Ma, {
                            className: "onsite-notification-toast__body",
                            overflow: x.Pa.Hidden
                        }, a.createElement(x.qb, {
                            color: x.K.Alt
                        }, a.createElement(w, {
                            source: this.props.item.body
                        }))), a.createElement(x.Ma, {
                            margin: {
                                top: .5
                            },
                            flexShrink: 0
                        }, a.createElement(x.qb, {
                            color: x.K.Alt2
                        }, Object(o.g)(new Date(this.props.item.updatedAt))))))), this.renderActions())))
                    }, t.prototype.renderActions = function() {
                        return a.createElement(x.qb, {
                            className: "onsite-notification-toast__action-wrapper",
                            display: x.R.Flex,
                            alignContent: x.b.Stretch,
                            flexGrow: 0,
                            flexShrink: 0,
                            flexDirection: x.T.Column,
                            borderLeft: !0
                        }, a.createElement(x.qb, {
                            className: "onsite-notification-toast__action",
                            display: x.R.Flex,
                            alignContent: x.b.Stretch,
                            flexGrow: 1,
                            borderBottom: !0
                        }, a.createElement(x.Ja, i.a({
                            onClick: this.view,
                            "data-test-selector": "onsite-notification-toast__view",
                            type: x.Ka.Alpha
                        }, N(this.props.item, E.PageviewMedium.NotificationToast)), a.createElement(x.qb, {
                            display: x.R.Flex,
                            alignItems: x.c.Center,
                            justifyContent: x.La.Center,
                            fullHeight: !0,
                            flexGrow: 1,
                            padding: .5
                        }, a.createElement(x.Q, {
                            color: x.K.Link
                        }, this.primaryCTAText())))), a.createElement(x.qb, {
                            className: "onsite-notification-toast__action",
                            display: x.R.Flex,
                            alignContent: x.b.Stretch,
                            flexGrow: 1
                        }, a.createElement(x.Ja, {
                            onClick: this.close,
                            "data-test-selector": "onsite-notification-toast__close",
                            type: x.Ka.Alpha
                        }, a.createElement(x.qb, {
                            display: x.R.Flex,
                            alignItems: x.c.Center,
                            justifyContent: x.La.Center,
                            fullHeight: !0,
                            flexGrow: 1,
                            padding: .5
                        }, a.createElement(x.Q, {
                            color: x.K.Alt2
                        }, Object(o.d)("Close", "OnsiteNotifications"))))))
                    }, t.prototype.primaryCTAText = function() {
                        var e = this.props.item.actions.find(function(e) {
                            return "click" === e.type
                        });
                        return e ? e.body : Object(o.d)("View", "OnsiteNotifications")
                    }, t.prototype.scheduleCloseTimer = function() {
                        var e = this;
                        this.cancelCloseTimer(), this.closeTimeout = setTimeout(function() {
                            e.props.close(e.props.index), e.closeTimeout = 0
                        }, 1e4)
                    }, t.prototype.cancelCloseTimer = function() {
                        this.closeTimeout && (clearTimeout(this.closeTimeout), this.closeTimeout = 0)
                    }, t
                }(a.Component)),
                Y = Object(f.c)("OnsiteNotificationToast")(K);

            function X(e, t) {
                return {
                    id: e.id,
                    body: e.body_md,
                    type: e.type,
                    thumbnailURL: e.thumbnail_url,
                    createdAt: e.created_at,
                    updatedAt: e.updated_at,
                    isRead: e.read,
                    actions: e.actions.map(function(e) {
                        return {
                            body: e.body,
                            type: e.type,
                            url: e.url,
                            __typename: "OnsiteNotificationAction"
                        }
                    }),
                    isTransient: !t,
                    __typename: "OnsiteNotification"
                }
            }
            n("hLj0");
            var $, J = o.j.withCategory("toast-manager"),
                Z = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            notifications: []
                        }, t.view = function(e) {
                            var n = t.state.notifications[e];
                            t.props.onViewNotification(n.id, !n.isTransient), t.close(e)
                        }, t.close = function(e) {
                            var n = t.state.notifications.slice();
                            n.splice(e, 1), t.setState({
                                notifications: n
                            })
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive(), this.conditionallyInsertTestData()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = this.props.pubsub.messages.info,
                            n = e.pubsub.messages.info;
                        if (n && n.data.toast && (!t || n.data.notification.id !== t.data.notification.id || n.data.notification.updated_at !== t.data.notification.updated_at)) {
                            J.debug("Received pubsub update", e.pubsub.messages.info);
                            var i = X(n.data.notification, n.data.persistent);
                            this.onNewNotification(i)
                        }
                    }, t.prototype.render = function() {
                        return a.createElement(x.Ma, {
                            className: "onsite-notifications-toast-manager",
                            position: x.Wa.Absolute,
                            margin: {
                                top: 5
                            },
                            "data-test-selector": "onsite-notifications-toast-manager"
                        }, this.renderToasts())
                    }, t.prototype.conditionallyInsertTestData = function() {
                        return i.b(this, void 0, void 0, function() {
                            var e, t;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        return o.a.buildType !== d.a.Production && r.parse(window.location.search).onsite_test_data ? [4, n.e(40).then(n.bind(null, "Pm5e"))] : [3, 2];
                                    case 1:
                                        e = i.sent().MockOnsiteNotifications, t = e.getMockOnsiteNotificationModels(3), this.setState({
                                            notifications: t
                                        }), i.label = 2;
                                    case 2:
                                        return [2]
                                }
                            })
                        })
                    }, t.prototype.renderToasts = function() {
                        var e = this,
                            t = this.state.notifications.map(function(t, n) {
                                return a.createElement(Y, {
                                    key: t.id,
                                    item: t,
                                    index: n,
                                    view: e.view,
                                    close: e.close
                                })
                            });
                        return 0 === t.length ? null : t
                    }, t.prototype.onNewNotification = function(e) {
                        var t = this.state.notifications.slice(),
                            n = t.findIndex(function(t) {
                                return t.id === e.id
                            });
                        n > -1 && t.splice(n, 1), t.unshift(e), t.length > 3 && t.pop(), this.setState({
                            notifications: t
                        })
                    }, t = i.c([Object(f.c)("OnsiteNotificationToastManager"), Object(Q.a)([{
                        topic: function(e) {
                            return Object(m.l)("" + (e.currentUser && e.currentUser.id))
                        },
                        mapMessageTypesToProps: ($ = {}, $[u.PubsubMessageType.OnsiteNotificationCreate] = "info", $[u.PubsubMessageType.OnsiteNotificationUpdate] = "info", $),
                        skip: function(e) {
                            return !e.currentUser
                        }
                    }])], t)
                }(a.Component);
            var ee = Object(G.b)(function(e) {
                return {
                    currentUser: Object(q.d)(e)
                }
            })(Z);
            var te = o.j.withCategory("onsite-pubsub-mutators");

            function ne(e, t) {
                return te.debug("Received pubsub summary update", e), t && t.currentUser && t.currentUser.notifications && t.currentUser.notifications.summary && e.data.summary ? (t.currentUser.notifications.summary.lastSeenAt = e.data.summary.last_seen_at, t.currentUser.notifications.summary.unseenCount = e.data.summary.unseen_view_count, t) : t
            }

            function ie(e, t) {
                if (te.debug("Received pubsub notification update", e), !(t && t.currentUser && t.currentUser.notifications && t.currentUser.notifications.edges && t.currentUser.notifications.edges)) return t;
                if (function(e) {
                        return e.type === u.PubsubMessageType.OnsiteNotificationsRead
                    }(e)) {
                    var n = new Set(e.data.notification_ids),
                        r = t.currentUser.notifications.edges.map(function(e) {
                            return n.has(e.node.id) ? i.a({}, e, {
                                node: i.a({}, e.node, {
                                    isRead: !0
                                })
                            }) : e
                        });
                    t.currentUser.notifications.edges = r
                } else if (function(e) {
                        return e.type === u.PubsubMessageType.OnsiteNotificationCreate || e.type === u.PubsubMessageType.OnsiteNotificationUpdate
                    }(e)) {
                    if (e.data.persistent) {
                        var a = X(e.data.notification, !0);
                        (r = re(t.currentUser.notifications.edges, a.id)).unshift({
                            cursor: null,
                            node: a,
                            __typename: "OnsiteNotificationEdge"
                        }), t.currentUser.notifications.edges = r
                    }
                } else(function(e) {
                    return e.type === u.PubsubMessageType.OnsiteNotificationDelete
                })(e) && (t.currentUser.notifications.edges = re(t.currentUser.notifications.edges, e.data.notification_id));
                return t
            }

            function re(e, t) {
                return e.filter(function(e) {
                    return e.node.id !== t
                })
            }
            var ae = n("Je81"),
                oe = n("IrUU"),
                se = n("GgTn"),
                le = n("1Ot3"),
                ce = n("x73c");
            n("xw7B");
            n.d(t, "a", function() {
                return he
            }), n.d(t, "b", function() {
                return be
            });
            var de = o.j.withCategory("onsite-notifications"),
                ue = "onsite-notifications__badge",
                pe = "99+",
                me = 5e3,
                he = 10,
                fe = 100,
                ge = {
                    align: x.Kb.Center,
                    direction: x.Lb.Bottom,
                    label: ""
                },
                ve = {
                    limit: he,
                    cursor: ""
                },
                be = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            newNotificationsCount: 0,
                            newFriendRequestsBadgeCount: 0,
                            isFriendRequestsNotificationUnread: !1
                        }, t.newNotificationsCountTimer = 0, t.hasInsertedSummaryData = !1, t.hasInsertedListNotificationsData = !1, t.hasReportedListNotificationsLoaded = !1, t.viewNotification = function(e, n) {
                            void 0 === n && (n = !0), t.centerWindowToggleBalloon.toggleBalloon(!1), n && t.readNotification(e)
                        }, t.conditionallyInsertSummaryTestData = function() {
                            t.summaryDataLoaded(t.props) && !t.hasInsertedSummaryData && o.a.buildType !== d.a.Production && r.parse(window.location.search).onsite_test_data && (t.hasInsertedSummaryData = !0, Object(p.e)(le, i.a({}, t.props.summaryData.variables), function(e) {
                                return e.currentUser.notifications.summary.unseenCount = r.parse(window.location.search).onsite_test_data, e
                            }))
                        }, t.conditionallyInsertListNotificationsTestData = function() {
                            return i.b(t, void 0, void 0, function() {
                                var e;
                                return i.e(this, function(t) {
                                    switch (t.label) {
                                        case 0:
                                            return this.listDataLoaded() && !this.hasInsertedListNotificationsData && o.a.buildType !== d.a.Production && r.parse(window.location.search).onsite_test_data ? (this.hasInsertedListNotificationsData = !0, [4, n.e(40).then(n.bind(null, "Pm5e"))]) : [3, 2];
                                        case 1:
                                            e = t.sent().MockOnsiteNotifications, Object(p.e)(oe, i.a({}, this.props.listData.variables), function(t) {
                                                return t.currentUser.notifications.edges = e.getMockOnsiteNotificationEdges(r.parse(window.location.search).onsite_test_data), t
                                            }), t.label = 2;
                                        case 2:
                                            return [2]
                                    }
                                })
                            })
                        }, t.summaryDataLoaded = function(e) {
                            return e.summaryData && !e.summaryData.loading && !e.summaryData.error && e.summaryData.currentUser && e.summaryData.currentUser.notifications && e.summaryData.currentUser.notifications.summary && e.summaryData.currentUser.incomingFriendRequests
                        }, t.listDataLoaded = function() {
                            return t.props.listData && t.props.listData.currentUser && t.props.listData.currentUser.notifications && void 0 !== t.props.listData.currentUser.notifications.edges
                        }, t.hasNewFriendRequests = function(e) {
                            var t = e.summaryData.currentUser;
                            if (t.incomingFriendRequests && t.incomingFriendRequests.newestEdge && t.incomingFriendRequests.newestEdge.createdAt) {
                                var n = new Date(t.incomingFriendRequests.newestEdge.createdAt),
                                    i = new Date(t.notifications.summary.lastSeenAt);
                                return t.incomingFriendRequests.totalUnreadCount > 0 && n > i
                            }
                            return !1
                        }, t.getFriendRequestsData = function() {
                            if (t.summaryDataLoaded(t.props)) {
                                var e = t.props.summaryData.currentUser;
                                if (e.incomingFriendRequests && e.incomingFriendRequests.newestEdge) {
                                    var n = e.incomingFriendRequests.totalUnreadCount,
                                        i = e.incomingFriendRequests.newestEdge.createdAt;
                                    return n && i ? {
                                        count: n,
                                        date: i,
                                        isOldNotification: !t.state.isFriendRequestsNotificationUnread
                                    } : void 0
                                }
                            }
                        }, t.toggleCenter = function(e) {
                            e || (t.props.stopDeferring(), t.getUnseenNotificationsAndApplyTimer(), t.viewNotifications()), D({
                                unseenCount: t.getUnseenNotificationsCount(t.props),
                                action: e ? R.Close : R.Open
                            })
                        }, t.getUnseenNotificationsAndApplyTimer = function() {
                            var e = t.state.newNotificationsCount;
                            t.summaryDataLoaded(t.props) && (e = t.getUnseenNotificationsCount(t.props), t.setState({
                                newNotificationsCount: e
                            })), t.clearTimeout(), e > 0 && (t.newNotificationsCountTimer = setTimeout(function() {
                                t.setState({
                                    newNotificationsCount: 0
                                }), t.clearTimeout()
                            }, me))
                        }, t.viewNotifications = function() {
                            return i.b(t, void 0, void 0, function() {
                                var e, t;
                                return i.e(this, function(n) {
                                    switch (n.label) {
                                        case 0:
                                            if (!this.summaryDataLoaded(this.props)) return [2];
                                            this.setState({
                                                newFriendRequestsBadgeCount: 0
                                            }), e = i.a({}, Object(p.a)({}), {
                                                optimisticResponse: {
                                                    viewedNotifications: {
                                                        user: {
                                                            notifications: {
                                                                summary: {
                                                                    unseenCount: 0,
                                                                    lastSeenAt: new Date,
                                                                    __typename: "OnsiteNotificationsSummary"
                                                                },
                                                                __typename: "OnsiteNotificationConnection"
                                                            },
                                                            __typename: "User"
                                                        },
                                                        __typename: "ViewedNotificationsPayload"
                                                    }
                                                }
                                            }), Object(p.e)(le, i.a({}, this.props.summaryData.variables), function(e) {
                                                return e.currentUser.notifications.summary.unseenCount = 0, e
                                            }), n.label = 1;
                                        case 1:
                                            return n.trys.push([1, 3, , 4]), [4, this.props.viewNotifications(e)];
                                        case 2:
                                            return n.sent(), [3, 4];
                                        case 3:
                                            return t = n.sent(), de.error(t, "failure to read message..."), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, t.getUnseenNotificationsCount = function(e) {
                            return t.summaryDataLoaded(e) ? e.summaryData.currentUser.notifications.summary.unseenCount + t.state.newFriendRequestsBadgeCount : 0
                        }, t.renderUnseenNotificationsBadge = function() {
                            var e = t.getUnseenNotificationsCount(t.props);
                            if (e > 0) {
                                var n = e >= 100 ? pe : e.toString();
                                return a.createElement(x.Ma, {
                                    className: "onsite-notifications__badge",
                                    "data-test-selector": ue,
                                    position: x.Wa.Absolute
                                }, a.createElement(x.Ta, {
                                    label: n,
                                    type: x.Ua.Notification
                                }))
                            }
                        }, t.deleteNotification = function(e) {
                            return i.b(t, void 0, void 0, function() {
                                var t, n;
                                return i.e(this, function(r) {
                                    switch (r.label) {
                                        case 0:
                                            t = i.a({}, Object(p.a)({
                                                id: e
                                            }), {
                                                optimisticResponse: {
                                                    deleteNotification: {
                                                        __typename: "DeleteNotificationPayload",
                                                        notification: {
                                                            __typename: "OnsiteNotification",
                                                            id: e
                                                        }
                                                    }
                                                }
                                            }), this.listDataLoaded() && Object(p.e)(oe, i.a({}, this.props.listData.variables), function(t) {
                                                return t.currentUser.notifications.edges = t.currentUser.notifications.edges.filter(function(t) {
                                                    return t.node.id !== e
                                                }), t
                                            }), r.label = 1;
                                        case 1:
                                            return r.trys.push([1, 3, , 4]), [4, this.props.deleteOnsiteNotification(t)];
                                        case 2:
                                            return r.sent(), [3, 4];
                                        case 3:
                                            return n = r.sent(), de.error(n, "Unable to delete notification " + e), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, t.readAllNotifications = function() {
                            if (t.setState({
                                    isFriendRequestsNotificationUnread: !1
                                }), t.listDataLoaded()) {
                                D({
                                    unseenCount: t.getUnseenNotificationsCount(t.props),
                                    action: R.MarkAllRead
                                });
                                var e = t.props.listData.currentUser.notifications.edges.filter(function(e) {
                                    return !e.node.isRead
                                }).map(function(e) {
                                    return e.node.id
                                });
                                if (0 !== e.length) {
                                    var n = function(e, t) {
                                        for (var n = [], i = 0; i < e.length; i += t) {
                                            var r = e.slice(i, i + t);
                                            n.push(r)
                                        }
                                        return n
                                    }(e, fe);
                                    Object(p.e)(oe, i.a({}, t.props.listData.variables), function(e) {
                                        return e.currentUser.notifications.edges = e.currentUser.notifications.edges.map(function(e) {
                                            return i.a({}, e, {
                                                node: i.a({}, e.node, {
                                                    isRead: !0
                                                })
                                            })
                                        }), e
                                    });
                                    for (var r = 0, a = n; r < a.length; r++) {
                                        var o = a[r];
                                        t.markIDsAsRead(o)
                                    }
                                }
                            }
                        }, t.markIDsAsRead = function(e) {
                            return i.b(t, void 0, void 0, function() {
                                var t, n, r;
                                return i.e(this, function(a) {
                                    switch (a.label) {
                                        case 0:
                                            t = e.map(function(e) {
                                                return {
                                                    id: e,
                                                    isRead: !0,
                                                    __typename: "OnsiteNotification"
                                                }
                                            }), n = i.a({}, Object(p.a)({
                                                ids: e
                                            }), {
                                                optimisticResponse: {
                                                    readNotifications: {
                                                        __typename: "ReadNotificationsPayload",
                                                        notifications: t,
                                                        count: e.length
                                                    }
                                                }
                                            }), a.label = 1;
                                        case 1:
                                            return a.trys.push([1, 3, , 4]), [4, this.props.readOnsiteNotification(n)];
                                        case 2:
                                            return a.sent(), [3, 4];
                                        case 3:
                                            return r = a.sent(), de.error(r, "Unable to read notifications", {
                                                ids: e
                                            }), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, t.readNotification = function(e) {
                            return i.b(t, void 0, void 0, function() {
                                var t, n;
                                return i.e(this, function(r) {
                                    switch (r.label) {
                                        case 0:
                                            t = i.a({}, Object(p.a)({
                                                ids: [e]
                                            }), {
                                                optimisticResponse: {
                                                    readNotifications: {
                                                        __typename: "ReadNotificationsPayload",
                                                        notifications: [{
                                                            id: e,
                                                            isRead: !0,
                                                            __typename: "OnsiteNotification"
                                                        }],
                                                        count: 1
                                                    }
                                                }
                                            }), this.listDataLoaded() && Object(p.e)(oe, i.a({}, this.props.listData.variables), function(t) {
                                                return t.currentUser.notifications.edges = t.currentUser.notifications.edges.map(function(t) {
                                                    return t.node.id === e ? i.a({}, t, {
                                                        node: i.a({}, t.node, {
                                                            isRead: !0
                                                        })
                                                    }) : t
                                                }), t
                                            }), r.label = 1;
                                        case 1:
                                            return r.trys.push([1, 3, , 4]), [4, this.props.readOnsiteNotification(t)];
                                        case 2:
                                            return r.sent(), [3, 4];
                                        case 3:
                                            return n = r.sent(), de.error(n, "Unable to read notification", {
                                                id: e
                                            }), [3, 4];
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        }, t.loadMore = function() {
                            return i.b(t, void 0, void 0, function() {
                                return i.e(this, function(e) {
                                    return this.props.listData.loading ? [2] : [2, this.props.loadMore()]
                                })
                            })
                        }, t.clearTimeout = function() {
                            t.newNotificationsCountTimer && (clearTimeout(t.newNotificationsCountTimer), t.newNotificationsCountTimer = 0)
                        }, t.saveCenterWindowToggleBalloonRef = function(e) {
                            return t.centerWindowToggleBalloon = e
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidUpdate = function() {
                        this.conditionallyInsertSummaryTestData(), this.conditionallyInsertListNotificationsTestData(), this.listNotificationsLoaded && !this.hasReportedListNotificationsLoaded && this.listDataLoaded() && (this.hasReportedListNotificationsLoaded = !0, this.props.latencyTracking.reportCustomEvent(this.listNotificationsLoaded))
                    }, t.prototype.componentWillUnmount = function() {
                        this.clearTimeout()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        if (this.summaryDataLoaded(e)) {
                            var t = this.hasNewFriendRequests(e);
                            this.setState({
                                newFriendRequestsBadgeCount: t ? 1 : 0
                            }), this.summaryDataLoaded(this.props) || this.setState({
                                isFriendRequestsNotificationUnread: t
                            }), o.o.setBadgeCount(this.getUnseenNotificationsCount(e))
                        }
                        e.shouldDefer || this.listNotificationsLoaded || (this.listNotificationsLoaded = this.registerListNotificationsLoadedEvent())
                    }, t.prototype.render = function() {
                        var e = this.props.shouldDefer || !this.listDataLoaded() ? [] : this.props.listData.currentUser.notifications.edges;
                        return ge.label = Object(o.d)("Notifications", "OnsiteNotificationsToolTip"), a.createElement(x.Ma, {
                            className: "onsite-notifications"
                        }, a.createElement(ee, {
                            onViewNotification: this.viewNotification
                        }), a.createElement(x.Ma, {
                            position: x.Wa.Relative
                        }, a.createElement(s.a, {
                            onToggle: this.toggleCenter,
                            ref: this.saveCenterWindowToggleBalloonRef,
                            tooltipProps: ge
                        }, a.createElement(x.w, {
                            ariaLabel: Object(o.d)("Open Notifications", "OnsiteNotifications"),
                            icon: x.gb.NotificationBell,
                            overlay: !0
                        }), a.createElement(x.q, {
                            "data-test-selector": "center-window__balloon",
                            direction: x.r.BottomRight,
                            size: x.s.Large,
                            offsetX: "7px"
                        }, a.createElement(H, {
                            newNotificationsCount: this.state.newNotificationsCount,
                            hasInitiallyLoaded: this.listDataLoaded(),
                            data: e,
                            friendRequestsData: this.getFriendRequestsData(),
                            onLoadMore: this.loadMore,
                            onViewNotification: this.viewNotification,
                            onReadAllNotifications: this.readAllNotifications,
                            onDeleteNotification: this.deleteNotification
                        }))), this.renderUnseenNotificationsBadge()))
                    }, t.prototype.registerListNotificationsLoadedEvent = function() {
                        return this.props.latencyTracking.registerCustomEvent({
                            benchmark: 1e3,
                            group: h.a.OnsiteNotifications,
                            key: h.b.OnsiteNotificationsLoaded,
                            label: h.c.Init,
                            start: h.d.Registration
                        })
                    }, t = i.c([function(e) {
                        return function(t) {
                            function n() {
                                var e = null !== t && t.apply(this, arguments) || this;
                                return e.state = {
                                    shouldDefer: !0
                                }, e.stopDeferring = function() {
                                    e.state.shouldDefer && e.setState({
                                        shouldDefer: !1
                                    })
                                }, e
                            }
                            return i.d(n, t), n.prototype.render = function() {
                                var t = {
                                    shouldDefer: this.state.shouldDefer,
                                    stopDeferring: this.stopDeferring
                                };
                                return a.createElement(e, i.a({}, this.props, t))
                            }, n
                        }(a.Component)
                    }, Object(l.a)(le, {
                        name: "summaryData",
                        skip: function(e) {
                            return !e.firstPageLoaded
                        }
                    }), Object(l.a)(ce, {
                        name: "viewNotifications"
                    }), Object(l.a)(oe, {
                        name: "listData",
                        options: function(e) {
                            return {
                                variables: i.a({}, ve, {
                                    language: e.languageCode
                                })
                            }
                        },
                        skip: function(e) {
                            return e.shouldDefer
                        },
                        props: function(e) {
                            return i.a({}, e, {
                                loadMore: function() {
                                    return e.listData.fetchMore({
                                        query: oe,
                                        variables: i.a({}, e.listData.variables, {
                                            cursor: e.listData.currentUser ? e.listData.currentUser.notifications.edges[e.listData.currentUser.notifications.edges.length - 1].cursor : ""
                                        }),
                                        updateQuery: function(e, t) {
                                            var n = t.fetchMoreResult;
                                            return {
                                                currentUser: i.a({}, n.currentUser, {
                                                    notifications: i.a({}, n.currentUser.notifications, {
                                                        edges: e.currentUser.notifications.edges.concat(n.currentUser.notifications.edges)
                                                    })
                                                })
                                            }
                                        }
                                    })
                                }
                            })
                        }
                    }), Object(l.a)(ae, {
                        name: "deleteOnsiteNotification"
                    }), Object(l.a)(se, {
                        name: "readOnsiteNotification"
                    }), Object(c.a)(function(e) {
                        return {
                            query: le,
                            skip: !e.currentUser,
                            topic: Object(m.l)("" + (e.currentUser && e.currentUser.id)),
                            types: [u.PubsubMessageType.OnsiteNotificationSummaryUpdate, u.PubsubMessageType.OnsiteNotificationUpdate, u.PubsubMessageType.OnsiteNotificationCreate, u.PubsubMessageType.OnsiteNotificationDelete],
                            mutator: ne
                        }
                    }), Object(c.a)(function(e) {
                        return {
                            query: oe,
                            variables: i.a({}, ve, {
                                language: e.languageCode
                            }),
                            skip: !(e.currentUser && e.listData && e.listData.currentUser && e.listData.currentUser.notifications && e.listData.currentUser.notifications.edges),
                            topic: Object(m.l)("" + (e.currentUser && e.currentUser.id)),
                            types: [u.PubsubMessageType.OnsiteNotificationsRead, u.PubsubMessageType.OnsiteNotificationUpdate, u.PubsubMessageType.OnsiteNotificationCreate, u.PubsubMessageType.OnsiteNotificationDelete],
                            mutator: ie
                        }
                    }), Object(f.c)("OnsiteNotifications", {
                        autoReportInteractive: !0
                    })], t)
                }(a.Component)
        },
        oUNp: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            });
            var i = "twilight.dynamic_settings_overrides",
                r = function() {
                    function e(e) {
                        if (this.overrides = {}, e) {
                            this.logger = e.logger.withCategory("dynamic-settings");
                            var t = e.storage.get(i, {});
                            Object.keys(t).length > 0 && (this.overrides = t, this.logger.debug("Loaded dynamic settings overrides", {
                                overrides: this.overrides
                            }))
                        }
                    }
                    return e.prototype.get = function(e, t) {
                        if ("experiments" === e) return t;
                        if (void 0 !== this.overrides[e]) return this.overrides[e];
                        var n = window.__twilightSettings && window.__twilightSettings[e];
                        return void 0 !== n ? n : t
                    }, e
                }()
        },
        oXhC: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("d0ua"),
                o = n("G4ap");
            var s = Object(i.b)(function(e) {
                return {
                    isExpanded: e.ui.rightColumnExpanded,
                    fullscreenTheatreModeEnabled: e.ui.fullscreenTheatreModeEnabled,
                    theatreModeEnabled: e.ui.theatreModeEnabled,
                    sideNavExpanded: e.ui.sideNavExpanded
                }
            }, function(e) {
                return Object(r.b)({
                    collapseRightColumn: a.q,
                    expandRightColumn: a.x,
                    collapseFullscreenRightColumn: a.p,
                    expandFullscreenRightColumn: a.w
                }, e)
            })(o.b);
            n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return o.a
            })
        },
        oe5X: function(e, t, n) {
            "use strict";
            var i = n("XmgI"),
                r = n("RcPG"),
                a = n("0FG4"),
                o = n("i6WW"),
                s = n("gTu3");

            function l(e) {
                return {
                    type: r.a.Text,
                    content: e
                }
            }
            var c = /^(['"*([{</]*)@((?:[^\u0000-\u007F]|[\w-])+)/;

            function d(e, t) {
                var n = e.match(c);
                if (!n) return u(e, t.sessionUser) ? [{
                    type: r.a.CurrentUserHighlight,
                    content: e
                }] : null;
                var i = [],
                    a = n[1],
                    o = n[2],
                    d = e.slice(n[0].length);
                a.length && i.push(l(a));
                var p = s.a.Default;
                return u(o, t.sessionUser) ? p = s.a.Recipient : t.sessionUser && t.sessionUser.login === t.senderLogin && (p = s.a.Sender), i.push({
                    type: r.a.Mention,
                    content: {
                        recipient: o,
                        currentUserMentionRelation: p
                    }
                }), d.length && i.push(l(d)), i
            }

            function u(e, t) {
                if (!t) return !1;
                var n = t.displayName,
                    i = t.login;
                return e === n || e.toLowerCase() === i
            }

            function p(e, t) {
                void 0 === t && (t = {});
                for (var n = new RegExp(/[^\s]+/g), r = t.cheers, s = t.emotes, c = t.links, u = t.mentions, p = [], h = n.exec(e); h;) {
                    var f = h[0],
                        g = h.index;
                    h = n.exec(e);
                    var v = s && Object(a.c)(f, g, s);
                    if (v) p.push(v);
                    else {
                        var b = r && Object(i.c)(f, r);
                        if (b) p.push(b);
                        else {
                            var y = c && Object(o.b)(f, c);
                            if (y) p.push(y);
                            else {
                                var k = u && d(f, u);
                                k ? p.push(k) : p.push(l(f))
                            }
                        }
                    }
                }
                return m(p)
            }

            function m(e) {
                return e.reduce(function(e, t, n) {
                    return 0 === n ? [].concat.call(e, t) : [].concat.call(e, l(" "), t)
                }, []).reduce(function(e, t, n) {
                    if (0 === n) return e.concat(t);
                    var i = e[e.length - 1];
                    return t.type === r.a.Text && i.type === r.a.Text ? (i.content = "" + i.content + t.content, e) : e.concat(t)
                }, [])
            }
            n.d(t, "a", function() {
                return p
            }), n.d(t, !1, function() {
                return m
            })
        },
        okS7: function(e, t, n) {
            "use strict";
            n("kPBf");
            var i, r = n("mrSG"),
                a = n("17x9"),
                o = n("q1tI"),
                s = n("8Ad5"),
                l = n("TSYQ"),
                c = n("/7QA"),
                d = n("u5aL"),
                u = n("8/mp"),
                p = n("Ue10"),
                m = (n("kqQL"), "autocomplete-balloon-matches"),
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {}, t.resizeAnimationFrame = 0, t.messages = {
                            noMatches: Object(c.d)("No matches.", "AutocompleteBalloon")
                        }, t.logger = c.j.withCategory("AutocompleteBalloon"), t.renderMatches = function() {
                            return t.props.matches.map(function(e, n) {
                                var i = t.state.selectedMatch,
                                    r = i && i.replacement === e.replacement,
                                    a = l("autocomplete-balloon__item", {
                                        "autocomplete-balloon__item--selected": r
                                    });
                                return o.createElement(p.Ma, {
                                    key: "autocomplete-match-" + n,
                                    refDelegate: r ? t.focusOnOption : void 0,
                                    "data-test-selector": m
                                }, o.createElement(p.Fa, {
                                    display: p.R.Block,
                                    fullWidth: !0
                                }, o.createElement("button", {
                                    onMouseEnter: t.handleMatchMouseEnter,
                                    className: a,
                                    "data-a-target": e.replacement,
                                    "data-click-index": n,
                                    onClick: t.onMatchClick
                                }, o.createElement(p.Ma, {
                                    padding: {
                                        x: .5
                                    },
                                    display: p.R.Flex,
                                    alignItems: p.c.Center
                                }, e.element))))
                            })
                        }, t.handleMatchMouseEnter = function(e) {
                            var n = t.getMatchFromEvent(e);
                            n && t.setState({
                                selectedMatch: n
                            })
                        }, t.onMatchClick = function(e) {
                            var n = t.getMatchFromEvent(e);
                            n && t.props.onMatchSelect(n)
                        }, t.getMatchFromEvent = function(e) {
                            var n = t.props.matches,
                                i = e.currentTarget.getAttribute("data-click-index");
                            return !i || +i >= n.length ? (t.logger.error(new Error, "The index received from the UI element was not found in props.matches."), null) : n[+i]
                        }, t.handleKeydown = function(e) {
                            var n = e.charCode || e.keyCode,
                                i = function() {
                                    e.preventDefault(), e.stopPropagation()
                                };
                            switch (n) {
                                case s.a.Tab:
                                case s.a.Enter:
                                    i(), t.props.matches.length && t.state.selectedMatch ? t.props.onMatchSelect(t.state.selectedMatch) : t.props.onDismiss();
                                    break;
                                case s.a.Up:
                                case s.a.Down:
                                    if (!t.state.selectedMatch || !t.props.matches.length) return;
                                    var r = t.props.matches.indexOf(t.state.selectedMatch);
                                    if (-1 === r) return void t.logger.error(new Error, "The selected match was not found in props.matches.");
                                    i();
                                    var a = n === s.a.Up ? -1 : 1,
                                        o = t.getIndexWithinLength(r + a, t.props.matches.length),
                                        l = t.props.matches[o];
                                    t.setState({
                                        selectedMatch: l
                                    })
                            }
                        }, t.getIndexWithinLength = function(e, t) {
                            var n = e % t;
                            return n < 0 ? n + t : n
                        }, t.onResize = function() {
                            t.resizeAnimationFrame || (t.resizeAnimationFrame = requestAnimationFrame(t.setContainerHeight))
                        }, t.setContainerHeight = function() {
                            var e = t.props.containerElement && t.props.containerElement.clientHeight || 1080;
                            t.setState({
                                containerHeight: e
                            }), t.resizeAnimationFrame = 0
                        }, t.focusOnOption = function(e) {
                            if (e && t.autocompleteBalloonElement) {
                                var n = e.getBoundingClientRect(),
                                    i = t.autocompleteBalloonElement.getBoundingClientRect();
                                (n.bottom > i.bottom || n.top < i.top) && e.scrollIntoView()
                            }
                        }, t.setAutocompleteBalloonElement = function(e) {
                            t.autocompleteBalloonElement = e
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        window.addEventListener("keydown", this.handleKeydown, !0), window.addEventListener("resize", this.onResize, !0), this.setContainerHeight(), this.props.matches.length > 0 && this.setState({
                            selectedMatch: this.props.matches[0]
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        window.removeEventListener("resize", this.onResize, !0), window.removeEventListener("keydown", this.handleKeydown, !0), this.resizeAnimationFrame && cancelAnimationFrame(this.resizeAnimationFrame)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = this,
                            n = e.matches.reduce(function(e, n, i) {
                                return t.state.selectedMatch ? n.replacement === t.state.selectedMatch.replacement ? i : e : 0
                            }, 0);
                        this.setState({
                            selectedMatch: e.matches[n]
                        })
                    }, t.prototype.render = function() {
                        var e;
                        return e = 0 === this.props.matches.length ? o.createElement(p.Ma, {
                            padding: {
                                x: .5
                            },
                            "data-test-selector": "autocomplete-balloon-no-matches"
                        }, o.createElement(p.Q, {
                            type: p.Gb.Span,
                            color: p.K.Alt2
                        }, this.messages.noMatches)) : this.renderMatches(), o.createElement(p.Ma, {
                            position: p.Wa.Relative
                        }, o.createElement(d.a, {
                            onClickOut: this.props.onDismiss
                        }, o.createElement(p.q, {
                            direction: p.r.TopLeft,
                            "data-a-target": "autocomplete-balloon",
                            "data-test-selector": "autocomplete-balloon",
                            show: !0
                        }, o.createElement(p.Fa, {
                            refDelegate: this.setAutocompleteBalloonElement,
                            "data-test-selector": "autocomplete-matches-container",
                            className: "autocomplete-balloon",
                            overflow: p.Pa.Hidden,
                            display: p.R.Flex,
                            flexDirection: p.T.Column
                        }, o.createElement("div", {
                            style: {
                                maxHeight: this.state.containerHeight
                            }
                        }, o.createElement(u.b, null, o.createElement(p.Ma, {
                            padding: {
                                y: 1
                            }
                        }, e)))))))
                    }, t
                }(o.Component),
                f = n("uu1w"),
                g = n("2xye"),
                v = {
                    Chat: "chat",
                    Feed: "feed",
                    Whisper: "whisper"
                },
                b = ":",
                y = "#",
                k = "@",
                S = function(e) {
                    switch (e) {
                        case f.a.Emote:
                            return b;
                        case f.a.Hashtag:
                            return y;
                        case f.a.Mention:
                            return k;
                        default:
                            return void c.j.warn("Chat Suggestions tracking was passed an unknown autocomplete type.")
                    }
                },
                w = function(e) {
                    var t = S(e.autocompleteType);
                    if (t) {
                        var n = {
                            channel: e.channelLogin,
                            completed_text: e.completedText,
                            source: e.source,
                            start_character: t
                        };
                        c.n.track(g.SpadeEventType.ChatSuggestionComplete, n)
                    }
                };
            ! function(e) {
                e.Input = "input", e.TextArea = "textarea"
            }(i || (i = {}));
            var E = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            autocompleteType: f.a.None,
                            matchedCursorPosition: 0,
                            matches: null,
                            value: ""
                        }, t.providers = [], t.onChange = function(e) {
                            t.setState({
                                value: e.target.value
                            }, function() {
                                t.getMatches()
                            }), t.props.onChange && t.props.onChange(e)
                        }, t.onKeyDown = function(e) {
                            var n = function() {
                                    t.props.onKeyDown && t.props.onKeyDown(e)
                                },
                                i = function() {
                                    e.preventDefault(), e.stopPropagation()
                                },
                                r = e.charCode || e.keyCode;
                            if (r !== s.a.Enter) {
                                switch (r) {
                                    case s.a.Tab:
                                        if (!t.state.matches) t.getMatches(!0) && i();
                                        break;
                                    case s.a.Esc:
                                        t.state.matches && (i(), t.resetDisplayState())
                                }
                                n()
                            } else n()
                        }, t.setComponentRefDelegate = function(e) {
                            t.componentRef = e, t.props.componentRefDelegate && t.props.componentRefDelegate(e)
                        }, t.getMatches = function(e) {
                            var n = t.state.value;
                            if (0 === t.providers.length || 0 === n.length) return t.resetDisplayState(), !1;
                            var i = t.getCurrentCursorPosition();
                            if (i > n.length);
                            else
                                for (; i < n.length && !/\s/.test(n.charAt(i));) i++;
                            var r = n.substring(0, i);
                            if (0 === r.length || /\s/.test(r.substring(r.length - 1))) return t.resetDisplayState(), !1;
                            for (var a = r.split(/\s/), o = a[a.length - 1], s = 0, l = t.providers; s < l.length; s++) {
                                var c = l[s];
                                if (!e || c.canBeTriggeredByTab) {
                                    var d = c.getMatches(o, e);
                                    if (d) return t.setState({
                                        autocompleteType: c.autocompleteType,
                                        matchedCursorPosition: i,
                                        matches: d
                                    }), !0
                                }
                            }
                            return t.resetDisplayState(), !1
                        }, t.resetDisplayState = function(e, n) {
                            var i = r.a({}, t.state, {
                                autocompleteType: f.a.None,
                                matches: null
                            }, e || {});
                            t.setState(i, n)
                        }, t.insertReplacement = function(e) {
                            var n = t.state.value,
                                i = t.state.matchedCursorPosition,
                                a = n.substring(0, i),
                                o = a.lastIndexOf(e.current);
                            if (-1 === o) a = a.concat(e.replacement + " "), i = a.length;
                            else {
                                var s = a.substring(0, o),
                                    l = n.length > o + e.current.length ? n.substring(o + e.current.length) : "",
                                    c = l.startsWith(" ") ? e.replacement : e.replacement + " ";
                                a = "" + s + c + l, i = s.length + c.length
                            }
                            w(r.a({}, t.props.trackingParams || {}, {
                                autocompleteType: t.state.autocompleteType,
                                completedText: e.replacement,
                                source: t.props.suggestionSource
                            })), t.resetDisplayState({
                                value: a
                            }, function() {
                                t.setCursorPosition(i)
                            })
                        }, t.getCurrentCursorPosition = function() {
                            return t.componentRef.selectionStart
                        }, t.setCursorPosition = function(e) {
                            t.componentRef && (t.componentRef.setSelectionRange(e, e), t.componentRef.focus())
                        }, t.registerAutocompleteProvider = function(e) {
                            return t.providers.push(e),
                                function() {
                                    var n = t.providers.indexOf(e);
                                    t.providers.splice(n, 1)
                                }
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        this.props.refDelegate && this.props.refDelegate(this)
                    }, t.prototype.getChildContext = function() {
                        return {
                            registerAutocompleteProvider: this.registerAutocompleteProvider
                        }
                    }, t.prototype.componentWillUpdate = function(e, t) {
                        !this.state.matches && t.matches && function(e) {
                            var t = S(e.autocompleteType);
                            if (t) {
                                var n = {
                                    source: e.source,
                                    start_character: t
                                };
                                c.n.track(g.SpadeEventType.ChatSuggestion, n)
                            }
                        }({
                            autocompleteType: t.autocompleteType,
                            source: e.suggestionSource
                        })
                    }, t.prototype.componentDidUpdate = function(e, t) {
                        t.value !== this.state.value && this.props.onValueUpdate && this.props.onValueUpdate(this.state.value)
                    }, t.prototype.render = function() {
                        var e = r.a({}, this.props, {
                            onChange: this.onChange,
                            onKeyDown: this.onKeyDown,
                            refDelegate: this.setComponentRefDelegate,
                            value: this.state.value
                        });
                        return o.createElement(p.Ma, null, this.state.matches && o.createElement(h, {
                            matches: this.state.matches,
                            onMatchSelect: this.insertReplacement,
                            onDismiss: this.resetDisplayState,
                            containerElement: this.props.containerElement
                        }), this.props.componentType === i.Input ? o.createElement(p.Ha, r.a({}, e, {
                            type: e.type || p.Ia.Text
                        })) : o.createElement(p.Db, r.a({}, e)), this.props.children)
                    }, t.prototype.getValue = function() {
                        return this.state.value
                    }, t.prototype.setValue = function(e) {
                        this.resetDisplayState({
                            value: e
                        })
                    }, t.childContextTypes = {
                        registerAutocompleteProvider: a.func
                    }, t
                }(o.Component),
                C = n("lZdE"),
                N = n("OpME"),
                T = (n("dx0B"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.autocompleteType = f.a.Emote, t.canBeTriggeredByTab = !1, t.getMatches = function(e) {
                            return e.startsWith(":") ? e.length < 3 ? null : t.getMatchedEmotes(e) : null
                        }, t.getMatchedEmotes = function(e) {
                            var n = t.state.hydratedEmotes;
                            if (!n || 0 === n.length) return null;
                            var i = e.substring(1),
                                r = n.reduce(function(e, n) {
                                    var r = n.emotes.filter(function(e) {
                                        if (e.token) return t.doesEmoteMatchTerm(e, i)
                                    });
                                    return e.concat([r])
                                }, []).filter(function(e) {
                                    return e.length > 0
                                }).reduce(function(e, t) {
                                    return e.concat(t)
                                }, []);
                            return r = Object(N.d)(r), (r = Object(N.e)(r, i)).map(function(e) {
                                return {
                                    current: ":" + i,
                                    replacement: e.token,
                                    element: t.renderEmoteSuggestion(e)
                                }
                            })
                        }, t.doesEmoteMatchTerm = function(e, t) {
                            var n = new RegExp("^" + Object(C.a)(t), "i");
                            if (e.token.match(n)) return !0;
                            var i = new RegExp("" + Object(C.a)(t.charAt(0)).toUpperCase()),
                                r = new RegExp("^" + Object(C.a)(t.slice(1)), "i"),
                                a = e.token.match(i);
                            return !!(a && a.index && e.token.slice(a.index + 1).match(r))
                        }, t.renderEmoteSuggestion = function(e) {
                            return [o.createElement(p.Ma, {
                                padding: {
                                    right: .5
                                },
                                flexShrink: 0,
                                key: "emote-img-" + e.id
                            }, o.createElement("img", {
                                className: "emote-autocomplete-provider__image",
                                srcSet: e.srcSet
                            })), o.createElement(p.Q, {
                                type: p.Gb.Span,
                                key: "emote-text-" + e.id,
                                ellipsis: !0
                            }, e.token)]
                        }, t.hidrateEmotes = function(e) {
                            var n = e.map(function(e) {
                                return {
                                    id: e.id,
                                    emotes: Object(N.b)(e.emotes)
                                }
                            });
                            t.setState({
                                hydratedEmotes: n
                            })
                        }, t
                    }
                    return r.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.emotes && this.props.emotes !== e.emotes && this.hidrateEmotes(e.emotes)
                    }, t.prototype.componentWillMount = function() {
                        this.hidrateEmotes(this.props.emotes)
                    }, t.prototype.componentDidMount = function() {
                        this.unregister = this.context.registerAutocompleteProvider(this)
                    }, t.prototype.componentWillUnmount = function() {
                        this.unregister()
                    }, t.prototype.render = function() {
                        return null
                    }, t.contextTypes = {
                        registerAutocompleteProvider: a.func
                    }, t
                }(o.Component));
            n.d(t, !1, function() {}), n.d(t, !1, function() {}), n.d(t, "b", function() {
                return E
            }), n.d(t, "a", function() {
                return i
            }), n.d(t, !1, function() {}), n.d(t, "d", function() {
                return T
            }), n.d(t, "c", function() {
                return v
            })
        },
        opIq: function(e, t, n) {
            "use strict";
            var i, r = n("/MKj"),
                a = n("aCAx"),
                o = n("YV3K"),
                s = n("kRBY"),
                l = n("mrSG"),
                c = n("q1tI"),
                d = n("fvjX"),
                u = n("/7QA"),
                p = n("cZKs"),
                m = n("yR8l"),
                h = n("geRD");
            ! function(e) {
                e[e.ExitEarly = 0] = "ExitEarly", e[e.Unknown = 1] = "Unknown", e[e.Adblock = 2] = "Adblock", e[e.LimitReached = 3] = "LimitReached"
            }(i || (i = {}));
            var f = n("mZsS"),
                g = n("RiD7"),
                v = n("Ue10"),
                b = n("VR5Q"),
                y = (n("tMVv"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {}, t.hasAwarded = !1, t.messageHandler = function(e) {
                            return l.b(t, void 0, void 0, function() {
                                var t, n, r, a, o;
                                return l.e(this, function(s) {
                                    switch (s.label) {
                                        case 0:
                                            if (e.origin !== window.location.origin) return [2];
                                            if (!(t = e.data) || "trueXAd" !== t.msgSrc) return [2];
                                            switch (t.type) {
                                                case f.a.Ready:
                                                    return [3, 1];
                                                case f.a.RequestAd:
                                                    return [3, 2];
                                                case f.a.Dimensions:
                                                    return [3, 3];
                                                case f.a.OnStart:
                                                    return [3, 4];
                                                case f.a.OnCredit:
                                                    return [3, 5];
                                                case f.a.OnClose:
                                                case f.a.OnFinish:
                                                case f.a.LimitReached:
                                                case f.a.Adblock:
                                                case f.a.OnError:
                                                    return [3, 9]
                                            }
                                            return [3, 10];
                                        case 1:
                                            return n = {
                                                msgSrc: "wateb-ad-modal",
                                                tuid: this.props.tuid
                                            }, e.source.postMessage(n, "*"), [2];
                                        case 2:
                                            try {
                                                if (!(r = JSON.parse(t.activityJSON))) return [2];
                                                Object(g.g)({
                                                    campaignID: r.campaign_id.toString(),
                                                    requestID: t.requestID,
                                                    requestMethod: this.props.requestRef
                                                })
                                            } catch (e) {}
                                            return [2];
                                        case 3:
                                            return t.height && t.width && this.setState({
                                                customDimensions: {
                                                    height: t.height,
                                                    width: t.width
                                                }
                                            }), [3, 10];
                                        case 4:
                                            try {
                                                if (!(r = JSON.parse(t.activityJSON))) return [2];
                                                Object(g.f)({
                                                    requestID: t.requestID,
                                                    adblock: !1,
                                                    campaignID: r.campaign_id.toString()
                                                })
                                            } catch (e) {}
                                            return [2];
                                        case 5:
                                            return s.trys.push([5, 7, , 8]), [4, this.props.redeemTrueXAd(Object(h.a)({
                                                args: t.engagement.signature_argument_string,
                                                signature: t.engagement.signature,
                                                trueXAd: {
                                                    creativeID: t.engagement.ad.creative_id,
                                                    campaignID: t.engagement.ad.campaign_id,
                                                    name: t.engagement.ad.name,
                                                    currencyAmount: t.engagement.ad.currency_amount
                                                },
                                                targetID: this.props.channelID
                                            }))];
                                        case 6:
                                            return a = s.sent(), this.hasAwarded = !0, this.props.onBitsAwarded && this.props.onBitsAwarded(a.data.redeemTrueXAd.grantedBits), [3, 8];
                                        case 7:
                                            return o = s.sent(), u.j.warn("Error while redeeming bits for truex ad", o), this.props.onError && this.props.onError(i.Unknown), [3, 8];
                                        case 8:
                                            return [3, 10];
                                        case 9:
                                            return this.props.onError && (t.type === f.a.LimitReached ? this.props.onError(i.LimitReached) : t.type === f.a.Adblock ? this.props.onError(i.Adblock) : t.type === f.a.OnError ? this.props.onError(i.Unknown) : this.hasAwarded || this.props.onError(i.ExitEarly)), this.props.closeModal(), [3, 10];
                                        case 10:
                                            return [2]
                                    }
                                })
                            })
                        }, t
                    }
                    return l.d(t, e), t.prototype.componentWillMount = function() {
                        window.addEventListener("message", this.messageHandler)
                    }, t.prototype.componentWillUnmount = function() {
                        window.removeEventListener("message", this.messageHandler)
                    }, t.prototype.render = function() {
                        return c.createElement(v.qb, {
                            background: v.n.Base
                        }, c.createElement("div", {
                            className: "t-watch-ads-modal",
                            style: this.state.customDimensions
                        }, c.createElement(p.a, null), c.createElement("iframe", {
                            src: "/products/bits/ad"
                        })))
                    }, t = l.c([Object(m.a)(b, {
                        name: "redeemTrueXAd"
                    })], t)
                }(c.Component));
            var k, S = Object(r.b)(null, function(e) {
                    return Object(d.b)({
                        closeModal: a.c
                    }, e)
                })(y),
                w = n("TSYQ"),
                E = n("oJmH"),
                C = n("edgk"),
                N = n("8/mp");

            function T(e) {
                return l.b(this, void 0, void 0, function() {
                    var t, n, i, r, a;
                    return l.e(this, function(o) {
                        switch (o.label) {
                            case 0:
                                if (t = u.b.get("bits_truex_partner_hash", ""), !(n = u.b.get("bits_truex_api_url", "")) || !t) return u.j.warn("Truex API info missing from dynamic settings"), [2, k.Error];
                                o.label = 1;
                            case 1:
                                return o.trys.push([1, 5, , 6]), [4, fetch(n + "?placement.key=" + t + "&user.uid=" + e + "&max_activities=1")];
                            case 2:
                                return (i = o.sent()).ok ? [4, i.json()] : [3, 4];
                            case 3:
                                if ((r = o.sent()) && Array.isArray(r) && r.length) return [2, k.Available];
                                o.label = 4;
                            case 4:
                                return [2, k.Unavailable];
                            case 5:
                                return a = o.sent(), u.j.warn("Failed checking ad availability from TrueX, probably due to AdBlock", a), [2, k.AdBlocked];
                            case 6:
                                return [2]
                        }
                    })
                })
            }! function(e) {
                e[e.Error = 0] = "Error", e[e.AdBlocked = 1] = "AdBlocked", e[e.Unavailable = 2] = "Unavailable", e[e.Available = 3] = "Available"
            }(k || (k = {}));
            var _, R = function(e) {
                    var t = null;
                    return e.disableWatchAd && (t = Object(u.d)("Try again later", "Bits--WatchAdOffer")), c.createElement(v.qb, {
                        className: "bits-buy-card__offer-row",
                        display: v.R.Flex,
                        flexShrink: 0,
                        borderBottom: !0,
                        justifyContent: v.La.Between,
                        flexWrap: v.U.NoWrap,
                        padding: {
                            x: 2,
                            y: 1
                        }
                    }, c.createElement(v.Ma, {
                        padding: {
                            right: 4
                        }
                    }, c.createElement("strong", null, Object(u.d)("Get {minBitsCount} or more Bits by watching short ads", {
                        minBitsCount: e.minPayout
                    }, "Bits--WatchAdOffer"))), c.createElement(v.Ma, {
                        flexShrink: 0,
                        display: v.R.Flex,
                        flexDirection: v.T.Column,
                        alignItems: v.c.End
                    }, c.createElement(v.v, {
                        type: v.B.Hollow,
                        "data-a-target": "bits-watch-ad",
                        onClick: e.onWatchAdClick,
                        disabled: e.disableWatchAd
                    }, Object(u.d)("Watch Ad", "Bits--WatchAdOffer")), t && c.createElement(v.Ma, {
                        className: "bits-buy-card__sub-text",
                        alignSelf: v.d.Stretch,
                        textAlign: v.Cb.Center,
                        margin: {
                            top: .5
                        }
                    }, t)))
                },
                O = /version\/([\w\.]+).+?(mobile\s?safari|safari)/i,
                I = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            enableWatchAd: !0
                        }, t
                    }
                    return l.d(t, e), t.prototype.componentWillMount = function() {
                        return l.b(this, void 0, void 0, function() {
                            var e;
                            return l.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, T(this.props.truexUserID)];
                                    case 1:
                                        return e = t.sent(), Object(g.e)({
                                            channel: this.props.channelLogin,
                                            channelID: this.props.channelID,
                                            available: e === k.Available
                                        }), e !== k.Available && e !== k.AdBlocked && this.setState({
                                            enableWatchAd: !1
                                        }), [2]
                                }
                            })
                        })
                    }, t.prototype.render = function() {
                        return O.test(navigator.userAgent) ? null : c.createElement(R, l.a({}, this.props, {
                            disableWatchAd: !this.state.enableWatchAd
                        }))
                    }, t
                }(c.Component),
                D = n("lhih"),
                P = n("5zXJ"),
                x = n("XmgI"),
                L = n("ebRM"),
                F = n("4h+t"),
                M = n("x1M1"),
                A = (n("NEdi"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleBuyClick = function(e) {
                            var n = t.props.channelID || "",
                                i = Object(L.b)({
                                    trackBitsCardInteraction: t.props.trackBitsCardInteraction,
                                    channelID: n,
                                    purchaseUrl: e.currentTarget.dataset.purchaseUrl,
                                    bitsAmount: e.currentTarget.dataset.bitsAmount,
                                    closeAllBits: t.props.closeAllBits,
                                    location: t.props.location
                                });
                            i && (t.props.onBuyPopupClose(i), t.props.onClose())
                        }, t
                    }
                    return l.d(t, e), t.prototype.render = function() {
                        if (this.props.offer.type === D.a) {
                            if (!this.props.channelLogin) return null;
                            var e = this.props.currentUserSHA || "";
                            return c.createElement(I, {
                                key: "wateb",
                                minPayout: this.props.offer.bits,
                                onWatchAdClick: this.props.handleWatchAdClick,
                                truexUserID: e,
                                channelID: this.props.channelID || "",
                                channelLogin: this.props.channelLogin
                            })
                        }
                        var t = null;
                        Object(L.c)(this.props.offer) ? t = c.createElement(v.Ma, {
                            className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline",
                            "data-test-selector": "first-time-promo-form"
                        }, c.createElement(v.Q, {
                            type: v.Gb.Strong,
                            fontSize: v.V.Size6
                        }, Object(u.d)("Special Offer: 1st Time Buyers", "Bits--BuyCard"))) : Object(L.d)(this.props.offer) && null !== this.props.offer.promotion && this.props.offer.promotion.id === D.c ? t = c.createElement(v.Ma, {
                            className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline",
                            "data-test-selector": "black-friday-promo-form"
                        }, c.createElement(v.Q, {
                            type: v.Gb.Strong,
                            fontSize: v.V.Size6
                        }, Object(u.d)("Flash Sale: Now thru Nov. 27!", "Bits--BuyCard"))) : Object(L.d)(this.props.offer) && null !== this.props.offer.promotion && this.props.offer.promotion.id === D.d && (t = c.createElement(v.Ma, {
                            className: "bits-buy-card-offer-row__bonus-text bits-buy-card-offer-row__bonus-text-headline",
                            "data-test-selector": "prime-promo-promo-form"
                        }, c.createElement(v.Q, {
                            type: v.Gb.Strong,
                            fontSize: v.V.Size6
                        }, Object(u.d)("Twitch Prime Bits Discount", "Bits--BuyCard"))));
                        var n = null;
                        this.props.offer.discount && (n = c.createElement("div", {
                            className: "bits-buy-card-offer-row__sub-text",
                            "data-test-selector": "discount-subtext-form"
                        }, Object(u.d)("{percentOff,number,percent} discount", {
                            percentOff: this.props.offer.discount
                        }, "Bits--BuyCard")));
                        var i = null;
                        (Object(L.c)(this.props.offer) || Object(L.e)(this.props.offer)) && (i = c.createElement("div", {
                            className: "bits-buy-card-offer-row__sub-text",
                            "data-test-selector": "one-per-account-form"
                        }, Object(u.d)("one per account", "Bits--BuyCard")));
                        var r = this.props.isLastRow ? v.qb : v.Ma;
                        return c.createElement(r, {
                            className: "bits-buy-card-offer-row",
                            flexShrink: 0,
                            display: v.R.Flex,
                            justifyContent: v.La.Center,
                            borderBottom: this.props.isLastRow,
                            flexDirection: v.T.Column,
                            padding: {
                                x: 2,
                                y: 1
                            }
                        }, t, c.createElement(v.Ma, {
                            display: v.R.Flex,
                            justifyContent: v.La.Between,
                            alignItems: v.c.Center
                        }, c.createElement(v.Ma, {
                            flexGrow: 1
                        }, c.createElement(v.Q, {
                            type: v.Gb.H5,
                            color: v.K.Base,
                            bold: !0
                        }, Object(u.d)("{bits} Bits", {
                            bits: this.props.offer.bits
                        }, "Bits--BuyCard")), this.getAvailableTiers(this.props.offer.bits)), c.createElement(v.Ma, {
                            flexShrink: 0,
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            alignItems: v.c.End
                        }, c.createElement(v.v, {
                            onClick: this.handleBuyClick,
                            "data-purchase-url": this.props.offer.url,
                            "data-bits-amount": this.props.offer.bits,
                            "data-a-target": "bits-purchase-button-" + this.props.offer.bits
                        }, this.props.offer.price), (n || i) && c.createElement(v.Ma, {
                            alignSelf: v.d.Stretch,
                            textAlign: v.Cb.Right,
                            margin: {
                                top: .5
                            }
                        }, n, i))))
                    }, t.prototype.getAvailableTiers = function(e) {
                        var t = this.props.bitsConfig && this.props.bitsConfig.indexedActions[P.g];
                        t || (t = Object(F.b)());
                        var n = t.orderedTiers.filter(function(t) {
                            return t.bits <= e
                        }).reverse();
                        return c.createElement(v.Ma, {
                            padding: {
                                top: .5
                            },
                            className: "bits-buy-card-offer-row__tier-bits-images"
                        }, n.map(function(e) {
                            return c.createElement(M.a, {
                                key: e.bits,
                                sources: Object(x.b)(e, 2, !1)
                            })
                        }))
                    }, t
                }(c.Component)),
                U = (n("1ET2"), function(e) {
                    var t = [],
                        n = [],
                        i = null;
                    return e.offers.forEach(function(r, a) {
                        var o = c.createElement(A, {
                                key: r.id,
                                offer: r,
                                isLastRow: a + 1 < e.offers.length,
                                bitsConfig: e.bitsConfig,
                                channelID: e.channelID,
                                channelLogin: e.channelLogin,
                                currentUserSHA: e.currentUserSHA,
                                location: e.location,
                                onClose: e.onClose,
                                onBuyPopupClose: e.onBuyPopupClose,
                                handleWatchAdClick: e.handleWatchAdClick,
                                closeAllBits: e.closeAllBits,
                                trackBitsCardInteraction: e.trackBitsCardInteraction
                            }),
                            s = Object(L.d)(r),
                            l = Object(L.c)(r),
                            d = r.type === D.a;
                        l && !e.hidePromos ? t.push(o) : s && !l ? t.push(o) : d && !e.hideWateb ? i = o : d || s || n.push(o)
                    }), e.fullsize ? c.createElement(v.Ma, {
                        className: "bits-buy-card-offers__full-size",
                        flexGrow: 1,
                        flexWrap: v.U.NoWrap,
                        display: v.R.Flex,
                        flexDirection: v.T.Column
                    }, i, t, n) : c.createElement(N.b, {
                        className: "bits-buy-card-offers__scroll-view"
                    }, c.createElement(v.Ma, {
                        flexGrow: 1,
                        flexWrap: v.U.NoWrap,
                        display: v.R.Flex,
                        flexDirection: v.T.Column
                    }, i, t, n))
                }),
                B = function(e) {
                    var t = c.createElement(v.Q, {
                        type: v.Gb.P,
                        color: v.K.Alt
                    }, Object(u.d)("Prices are shown in <x:bold>{currencyCode}</x:bold>", {
                        "x:bold": function(e) {
                            return c.createElement(v.Q, {
                                type: v.Gb.Span,
                                bold: !0
                            }, e)
                        },
                        currencyCode: e.currencyCode
                    }, "Bits--BuyCard"));
                    e.pricesIncludeVAT && (t = c.createElement(v.Q, {
                        "data-test-selector": "prices-include-vat-selector",
                        type: v.Gb.P,
                        color: v.K.Alt
                    }, Object(u.d)("Prices are shown in <x:bold>{currencyCode}</x:bold> and <x:bold>include VAT</x:bold>", {
                        "x:bold": function(e) {
                            return c.createElement(v.Q, {
                                type: v.Gb.Span,
                                bold: !0
                            }, e)
                        },
                        currencyCode: e.currencyCode
                    }, "Bits--BuyCard")));
                    var n = null;
                    e.minBitsToCheer && e.minBitsToCheer > 1 && (n = c.createElement(v.Q, {
                        "data-test-selector": "min-bits-to-cheer-selector",
                        color: v.K.Alt
                    }, Object(u.d)("{displayName} requires {minBits} Bits to Cheer in this channel.", {
                        displayName: e.displayName,
                        minBits: e.minBitsToCheer
                    }, "Bits--BuyCard")));
                    var i = null;
                    return void 0 !== e.bitsBalance && null !== e.bitsBalance && (i = c.createElement(v.Q, {
                        "data-test-selector": "bits-balance-header-selector",
                        color: v.K.Alt
                    }, Object(u.d)("You have {totalBits} Bits", {
                        totalBits: c.createElement("strong", {
                            "data-a-target": "buy-card-bits-count"
                        }, e.bitsBalance)
                    }, "Bits--BuyCard"))), c.createElement(v.qb, {
                        className: "bits-buy-card-header",
                        padding: {
                            x: 1,
                            bottom: 1
                        },
                        borderBottom: !0,
                        flexShrink: 0
                    }, c.createElement(v.Ma, null, e.location === g.b.ChatTooltip && c.createElement(v.Q, {
                        type: v.Gb.H4,
                        color: v.K.Alt
                    }, Object(u.d)("Purchase Bits", "Bits--BuyCard")), t), e.location === g.b.ChatTooltip && c.createElement(v.Ma, {
                        margin: {
                            top: 1
                        }
                    }, i, n))
                },
                j = n("4Wd7"),
                z = function(e) {
                    return c.createElement(v.Ma, {
                        display: v.R.Flex,
                        flexGrow: 1,
                        flexDirection: v.T.Column,
                        alignItems: v.c.Center,
                        fullWidth: !0,
                        flexWrap: v.U.NoWrap,
                        padding: {
                            y: 1
                        }
                    }, c.createElement(j.a, {
                        prefix: "cheer",
                        amount: e.amount,
                        bitsConfig: e.bitsConfig,
                        showAmount: !0,
                        showImage: !0
                    }), c.createElement(v.Ma, {
                        display: v.R.Flex,
                        padding: {
                            top: 1
                        },
                        flexGrow: 1,
                        flexDirection: v.T.Column,
                        alignItems: v.c.Center,
                        flexWrap: v.U.NoWrap
                    }, c.createElement(v.Q, {
                        type: v.Gb.H4,
                        bold: !0
                    }, Object(u.d)("You got {bitsAmount,number} Bits!", {
                        bitsAmount: e.amount
                    }, "Bits--WatchAdAward")), c.createElement(v.Fa, {
                        padding: {
                            top: 1
                        }
                    }, c.createElement(v.Q, {
                        color: v.K.Alt2
                    }, Object(u.d)("{bitsAmount,number} Bits were added to your Bit inventory.", {
                        bitsAmount: e.amount
                    }, "Bits--WatchAdAward"), c.createElement("br", null), Object(u.d)("You can use these Bits to Cheer!", "Bits--WatchAdAward")))), c.createElement(v.Ma, {
                        display: v.R.Flex,
                        padding: {
                            x: 1,
                            top: 3
                        },
                        alignSelf: v.d.Stretch,
                        justifyContent: v.La.Between
                    }, c.createElement(v.v, {
                        onClick: e.onStartCheering
                    }, Object(u.d)("Start Cheering", "Bits--WatchAdAward")), c.createElement(v.v, {
                        type: v.B.Hollow,
                        onClick: e.onWatchAnother,
                        disabled: !e.hasAdAvailable
                    }, Object(u.d)("Watch Another", "Bits--WatchAdAward"))))
                },
                W = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            hasAdAvailable: !0
                        }, t
                    }
                    return l.d(t, e), t.prototype.componentWillMount = function() {
                        return l.b(this, void 0, void 0, function() {
                            return l.e(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        return [4, T(this.props.truexUserID)];
                                    case 1:
                                        return e.sent() !== k.Available && this.setState({
                                            hasAdAvailable: !1
                                        }), [2]
                                }
                            })
                        })
                    }, t.prototype.render = function() {
                        return c.createElement(z, l.a({}, this.props, {
                            hasAdAvailable: this.state.hasAdAvailable
                        }))
                    }, t
                }(c.Component),
                V = (n("hrW4"), function(e) {
                    var t = Object(u.d)("Something's wrong!", "Bits--WatchAdError"),
                        n = Object(u.d)("Something went wrong. Wait a while and try again.", "Bits--WatchAdError"),
                        r = "adserrorgeneric";
                    switch (e.type) {
                        case i.Adblock:
                            r = "adserroradblock", n = Object(u.d)("We can't load this Ad, probably because Ad Blocking software is running. To watch an ad and get Bits, please disable all Ad Blocking software.", "Bits--WatchAdError");
                            break;
                        case i.LimitReached:
                            r = "adserrorlimit", t = Object(u.d)("Ad Limit Reached", "Bits--WatchAdError"), n = Object(u.d)("That's all the Ads we have for now. Try again tomorrow!", "Bits--WatchAdError");
                            break;
                        case i.ExitEarly:
                            n = Object(u.d)("To get Bits, you must view and interact with the Ad for the minimum amount of time.", "Bits--WatchAdError")
                    }
                    var a = c.createElement(v.Ma, {
                        className: "watch-ad-error__footer",
                        display: v.R.Flex,
                        padding: {
                            top: 2
                        },
                        alignSelf: v.d.Stretch,
                        justifyContent: v.La.Center
                    }, c.createElement(v.v, {
                        onClick: e.onTryAgain
                    }, Object(u.d)("Try Again", "Bits--WatchAdError")));
                    return e.type === i.LimitReached && (a = c.createElement(v.Ma, {
                        className: "watch-ad-error__footer",
                        display: v.R.Flex,
                        padding: {
                            top: 2
                        },
                        alignSelf: v.d.Stretch,
                        justifyContent: v.La.Between
                    }, c.createElement(v.v, {
                        onClick: e.onClose
                    }, Object(u.d)("Got It", "Bits--WatchAdError")), c.createElement(v.v, {
                        onClick: e.onTryAgain,
                        type: v.B.Hollow
                    }, Object(u.d)("Buy Bits", "Bits--WatchAdError")))), c.createElement(v.Ma, {
                        padding: {
                            x: 1
                        },
                        display: v.R.Flex,
                        flexGrow: 1,
                        flexDirection: v.T.Column,
                        alignItems: v.c.Center,
                        fullWidth: !0,
                        flexWrap: v.U.NoWrap
                    }, c.createElement(v.Ma, {
                        padding: {
                            y: 2
                        }
                    }, c.createElement("img", {
                        className: "watch-ad-error__error-image",
                        src: P.b + "/light/static/1/" + r + ".png"
                    })), c.createElement(v.Ma, {
                        padding: {
                            bottom: 1
                        }
                    }, c.createElement(v.Q, {
                        type: v.Gb.H4,
                        bold: !0
                    }, t)), c.createElement(v.Q, {
                        color: v.K.Alt2
                    }, n), a)
                }),
                H = n("GnwI"),
                G = n("zmay"),
                q = (n("0ROh"), "storage.wateb.agreedToWatebTerms.v1"),
                Q = "bits-show-wateb-terms",
                K = "bits-agree-wateb-terms";
            ! function(e) {
                e[e.Inactive = 0] = "Inactive", e[e.Error = 1] = "Error", e[e.Awarded = 2] = "Awarded"
            }(_ || (_ = {}));
            var Y = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            wateb: _.Inactive,
                            watebError: null,
                            bitsAwarded: 0,
                            showWatebTerms: !1,
                            agreedToWatebTerms: u.l.get(q, !1)
                        }, t.onBuyPopupClose = function(e) {
                            Object(C.a)(e, function() {
                                t.props.data && t.props.data.refetch()
                            })
                        }, t.onAdBitsAwarded = function(e) {
                            t.props.data && !t.props.data.loading && t.props.data.refetch(), t.setState({
                                wateb: _.Awarded,
                                bitsAwarded: e
                            })
                        }, t.renderWatebTerms = function(e, n) {
                            return c.createElement(v.qb, l.a({
                                className: w(e),
                                display: v.R.Flex,
                                flexDirection: v.T.Column,
                                justifyContent: v.La.Center,
                                padding: {
                                    bottom: 2,
                                    x: 2
                                },
                                textAlign: v.Cb.Left,
                                "data-a-target": Q
                            }, n), c.createElement(v.qb, {
                                margin: {
                                    top: 2,
                                    bottom: 2,
                                    left: 0
                                },
                                alignItems: v.c.Baseline
                            }, c.createElement("div", {
                                key: "Bits--back-edit",
                                style: {
                                    cursor: "pointer"
                                },
                                onClick: t.onCloseWatebTerms
                            }, c.createElement(v.Q, {
                                color: v.K.Link,
                                type: v.Gb.Span
                            }, c.createElement(v.fb, {
                                asset: v.gb.ChatSettingsBack,
                                height: 10,
                                width: 10
                            }), Object(u.d)("Back", "Bits--Watch-Ad-Terms")))), c.createElement(v.Ma, {
                                padding: {
                                    bottom: 2
                                }
                            }, c.createElement(v.Q, {
                                type: v.Gb.Span
                            }, Object(u.d)("Before continuing to watch ads to earn Bits, we remind you that the <x:link>Bits Acceptable Use Policy</x:link> applies to your participation with this feature and any Bits you may obtain. As a reminder, you may not:", {
                                "x:link": function(e) {
                                    return c.createElement("span", {
                                        key: "helplink"
                                    }, c.createElement("a", {
                                        href: "https://www.twitch.tv/p/legal/bits-acceptable-use/",
                                        target: "_blank",
                                        rel: "noopener noreferrer"
                                    }, e))
                                }
                            }, "Bits--Watch-Ad-Terms")), c.createElement(v.Ma, {
                                margin: {
                                    y: 1
                                }
                            }, c.createElement("li", null, Object(u.d)("Obtain Bits to Cheer on your own channel via this feature", "Bits--Watch-Ad-Terms")), c.createElement("li", null, Object(u.d)("Collect Bits via this feature through the use of multiple accounts, robots, or other automated means", "Bits--Watch-Ad-Terms")))), c.createElement(v.Ma, {
                                display: v.R.Flex,
                                justifyContent: v.La.Center
                            }, c.createElement(v.v, {
                                size: v.z.Small,
                                onClick: t.onAgreeToWatebTerms,
                                "data-a-target": K
                            }, Object(u.d)("Continue", "Bits--Watch-Ad-Terms"))))
                        }, t.onAgreeToWatebTerms = function() {
                            u.l.set(q, !0), t.setState({
                                agreedToWatebTerms: !0,
                                showWatebTerms: !1
                            }), t.showWatchAdModal()
                        }, t.onCloseWatebTerms = function() {
                            t.setState({
                                showWatebTerms: !1
                            })
                        }, t.handleWatchAdClick = function() {
                            return l.b(t, void 0, void 0, function() {
                                return l.e(this, function(e) {
                                    return this.state.agreedToWatebTerms ? (this.showWatchAdModal(), [2]) : (this.setState({
                                        showWatebTerms: !0
                                    }), [2])
                                })
                            })
                        }, t.receiveAdErrorState = function(e) {
                            t.setState({
                                wateb: _.Error,
                                watebError: e
                            })
                        }, t.resetAdErrorState = function() {
                            t.state.wateb === _.Error && (t.setState({
                                wateb: _.Inactive
                            }), t.props.data && t.props.data.refetch())
                        }, t
                    }
                    return l.d(t, e), t.prototype.shouldComponentUpdate = function(e) {
                        return !e.adModalOpen
                    }, t.prototype.render = function() {
                        var e = {
                                borderTop: !0,
                                borderBottom: this.props.location !== g.b.GetBitsButton,
                                borderLeft: this.props.location !== g.b.GetBitsButton,
                                borderRight: this.props.location !== g.b.GetBitsButton,
                                background: v.n.Base,
                                fullWidth: !0,
                                elevation: 3
                            },
                            t = w({
                                "bits-buy-card": !0,
                                "bits-buy-card__chat-tooltip": this.props.location === g.b.ChatTooltip
                            }),
                            n = null;
                        if (this.props.location === g.b.ChatTooltip && (n = c.createElement("button", {
                                className: "bits-buy-card__close",
                                onClick: this.props.onClose,
                                "data-a-target": "bits-buy-card-close-button"
                            }, c.createElement(v.fb, {
                                asset: v.gb.Close,
                                height: 11,
                                width: 11
                            }))), !this.props.data || this.props.data.loading) return c.createElement(v.qb, l.a({
                            className: t,
                            "data-a-target": "bits-buy-card-loading",
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            alignItems: v.c.Center,
                            justifyContent: v.La.Center,
                            textAlign: v.Cb.Center
                        }, e), c.createElement(v.Oa, {
                            delay: 0
                        }), c.createElement(v.Ma, {
                            padding: {
                                top: 2
                            }
                        }, c.createElement(v.Q, {
                            italic: !0
                        }, Object(u.d)("Fetching bits", "Bits--BuyCard"))));
                        if (this.props.data.error) return c.createElement(v.Ma, l.a({
                            className: w(t, "bits-buy-card--shorter"),
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            alignItems: v.c.Center,
                            justifyContent: v.La.Center,
                            padding: 2,
                            textAlign: v.Cb.Center,
                            "data-a-target": "bits-buy-card-error"
                        }, e), n, c.createElement(v.Q, {
                            italic: !0
                        }, Object(u.d)("Bits prices are unavailable right now. Check back again later.", "Bits--BuyCard")));
                        if (this.state.showWatebTerms) return this.renderWatebTerms(t, e);
                        var i = this.renderWatebCard();
                        if (i) return c.createElement(v.qb, l.a({
                            className: w(t, "bits-buy-card--shorter"),
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            alignItems: v.c.Center,
                            justifyContent: v.La.Center,
                            textAlign: v.Cb.Center,
                            padding: 1
                        }, e), n, i);
                        var r = [];
                        this.props.data.currentUser && this.props.data.currentUser.bitsOffers ? r = this.props.data.currentUser.bitsOffers : this.props.data.bitsOffers && (r = this.props.data.bitsOffers);
                        var a = r.filter(function(e) {
                                return e.type === D.b
                            }).some(function(e) {
                                return e.includesVAT
                            }),
                            o = "",
                            s = r.filter(function(e) {
                                return e.type === D.b
                            }).pop();
                        s && s.type === D.b && (o = s.currencyCode);
                        var d = this.props.data.user ? this.props.data.user.id : "",
                            p = c.createElement(U, {
                                offers: r,
                                fullsize: this.props.fullsize,
                                hidePromos: this.props.hidePromos,
                                hideWateb: this.props.hideWateb,
                                bitsConfig: this.props.bitsConfig,
                                channelID: d,
                                channelLogin: this.props.channelLogin,
                                closeAllBits: this.props.closeAllBits,
                                currentUserSHA: this.props.data && this.props.data.currentUser && this.props.data.currentUser.idSHA1,
                                handleWatchAdClick: this.handleWatchAdClick,
                                location: this.props.location,
                                onBuyPopupClose: this.onBuyPopupClose,
                                onClose: this.props.onClose,
                                trackBitsCardInteraction: this.props.trackBitsCardInteraction
                            }),
                            m = c.createElement(B, {
                                bitsBalance: this.props.data && this.props.data.currentUser && this.props.data.currentUser.bitsBalance,
                                displayName: this.props.data && this.props.data.user && this.props.data.user.displayName || this.props.channelLogin || "",
                                minBitsToCheer: this.props.data && this.props.data.user && this.props.data.user.cheer && this.props.data.user.cheer.settings.cheerMinimumBits,
                                pricesIncludeVAT: a,
                                currencyCode: o,
                                location: this.props.location
                            });
                        return c.createElement(v.qb, l.a({
                            className: t,
                            padding: {
                                top: 1
                            },
                            display: v.R.Flex,
                            flexDirection: v.T.Column,
                            "data-a-target": "bits-buy-card"
                        }, e), n, m, p)
                    }, t.prototype.renderWatebCard = function() {
                        if (this.props.data && this.props.data.currentUser) switch (this.state.wateb) {
                            case _.Awarded:
                                return c.createElement(W, {
                                    bitsConfig: this.props.bitsConfig,
                                    amount: this.state.bitsAwarded,
                                    onStartCheering: this.props.onClose,
                                    onWatchAnother: this.handleWatchAdClick,
                                    truexUserID: this.props.data.currentUser.idSHA1
                                });
                            case _.Error:
                                return c.createElement(V, {
                                    type: this.state.watebError || i.Unknown,
                                    onClose: this.props.onClose,
                                    onTryAgain: this.resetAdErrorState
                                });
                            default:
                                return !1
                        }
                    }, t.prototype.showWatchAdModal = function() {
                        this.props.data && this.props.data.currentUser && this.props.data.user && this.props.showWatchAdModal({
                            tuid: this.props.data.currentUser.idSHA1,
                            onBitsAwarded: this.onAdBitsAwarded,
                            onError: this.receiveAdErrorState,
                            requestRef: g.c.ShowAdButton,
                            channelID: this.props.data.user.id
                        })
                    }, t = l.c([Object(m.a)(G, {
                        name: "data",
                        options: function(e) {
                            return {
                                variables: {
                                    channelLogin: e.channelLogin,
                                    withChannel: !!e.channelLogin,
                                    isLoggedIn: e.isLoggedIn
                                }
                            }
                        }
                    })], t)
                }(c.Component),
                X = Object(E.compose)(Object(H.c)("BitsBuyCard", {
                    autoReportInteractive: !0
                }))(Y);

            function $(e) {
                return {
                    adModalOpen: Object(o.b)(e, S),
                    isLoggedIn: Object(s.e)(e)
                }
            }

            function J(e) {
                return {
                    showWatchAdModal: function(t) {
                        return e(Object(a.d)(S, t))
                    }
                }
            }
            var Z = Object(r.b)($, J)(X);
            n.d(t, !1, function() {
                return $
            }), n.d(t, !1, function() {
                return J
            }), n.d(t, "a", function() {
                return Z
            })
        },
        ouUS: function(e, t, n) {},
        oyOR: function(e, t, n) {},
        p5Wp: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return r
            });
            var i = "/";

            function r(e) {
                return !e.isLoggedIn && e.location.pathname === i
            }
        },
        pORx: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "WhisperThread_ReportUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ReportWhisperThreadInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "reportWhisperThread"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "thread"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 125
                }
            };
            n.loc.source = {
                body: "mutation WhisperThread_ReportUser($input: ReportWhisperThreadInput!) {\nreportWhisperThread(input: $input) {\nthread {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        pXgH: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Channel = "channel_id", e.Device = "device_id", e.User = "user_id"
                }(i || (i = {}))
        },
        q7Ot: function(e, t, n) {},
        qAOU: function(e, t, n) {},
        qH9u: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("MJbm"),
                o = n("/MKj"),
                s = n("fvjX"),
                l = n("aCAx"),
                c = n("kRBY"),
                d = n("/HY+"),
                u = n("WSPL"),
                p = n("TSYQ"),
                m = n("oJmH"),
                h = n("/7QA"),
                f = n("u5aL"),
                g = n("ZDlU"),
                v = n("yR8l"),
                b = n("x7UT"),
                y = n("8Ad5"),
                k = n("0Log"),
                S = n("Mj6i"),
                w = n("geRD"),
                E = n("/aPz"),
                C = n("kz7j"),
                N = n("okS7"),
                T = n("mmRu"),
                _ = n("GnwI"),
                R = n("eO8H"),
                O = n("eJ65"),
                I = n("BhFH"),
                D = n("EvYO"),
                P = n("TvOw"),
                x = n("2xye"),
                L = n("m98o"),
                F = n("as+V"),
                M = n("iS14"),
                A = n("0tEc"),
                U = n("/rr3"),
                B = n("RQ6e"),
                j = n("4qQ0"),
                z = n("PrJw"),
                W = n("Ue10"),
                V = n("dr/4"),
                H = "whispers-report-user-button",
                G = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.renderReportButton = function() {
                            var e = t.props.displayName || t.props.login,
                                n = Object(h.d)("Report {displayName}", {
                                    displayName: e
                                }, "ThreadSettings");
                            return r.createElement(W.Ja, {
                                "data-test-selector": H,
                                ariaLabel: n,
                                onClick: t.reportUser
                            }, r.createElement(W.Ma, {
                                padding: {
                                    y: .5,
                                    x: 1
                                }
                            }, n))
                        }, t.onChannelRedirect = function() {
                            t.props.collapseThread && t.props.collapseThread()
                        }, t.toggleMutethread = function() {
                            var e = !t.props.isMuted,
                                n = i.a({}, Object(w.a)({
                                    threadID: t.props.threadID,
                                    isMuted: !t.props.isMuted
                                }), {
                                    optimisticResponse: {
                                        updateWhisperThread: {
                                            thread: {
                                                id: t.props.threadID,
                                                isMuted: e,
                                                __typename: "WhisperThread"
                                            },
                                            __typename: "UpdateWhisperThreadPayload"
                                        }
                                    }
                                });
                            t.props.setMuteThread && (e ? Object(z.j)(t.props.threadID) : Object(z.k)(t.props.threadID), t.props.setMuteThread(n))
                        }, t.reportUser = function() {
                            var e = t.props.displayName || t.props.login;
                            t.props.showReportUserModal({
                                onClose: t.onReportModalClose,
                                reportContext: {
                                    contentType: j.a.Whisper,
                                    targetUserID: t.props.userID,
                                    contentID: t.props.threadID
                                },
                                title: Object(h.d)("Report {displayName}", {
                                    displayName: e
                                }, "ReportUserModal")
                            })
                        }, t.onReportModalClose = function(e, n) {
                            e === B.b.Success && n && t.props.onBlock && t.props.onBlock(t.props.threadID)
                        }, t.blockUser = function() {
                            t.props.blockUserMutation(t.props.userID, P.b.Other, P.a.Whisper, t.props.currentUser), t.props.onBlock && t.props.onBlock(t.props.threadID)
                        }, t.unblockUser = function() {
                            t.props.unblockUserMutation(t.props.userID, t.props.currentUser), t.props.onUnblock && t.props.onUnblock(t.props.threadID)
                        }, t
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this.props.displayName || this.props.login,
                            t = this.props.isMuted ? Object(h.d)("Turn Notifications On", "ThreadSettings") : Object(h.d)("Turn Notifications Off", "ThreadSettings"),
                            n = Object(h.d)("Go to {displayName}'s Channel", {
                                displayName: e
                            }, "ThreadSettings");
                        return r.createElement(W.Ma, {
                            display: W.R.Flex,
                            flexDirection: W.T.Column,
                            margin: 1
                        }, r.createElement(W.Ja, {
                            ariaLabel: t,
                            onClick: this.toggleMutethread
                        }, r.createElement(W.Ma, {
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, t)), r.createElement(W.qb, {
                            borderBottom: !0,
                            margin: {
                                y: 1,
                                left: .5
                            }
                        }), r.createElement(A.a, {
                            friendButtonUIType: U.a.WhisperSettings,
                            targetID: this.props.userID
                        }), this.renderBlockButton(), this.renderReportButton(), r.createElement(W.Ja, {
                            linkTo: "/" + this.props.login,
                            onClick: this.onChannelRedirect,
                            ariaLabel: n
                        }, r.createElement(W.Ma, {
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, n)))
                    }, t.prototype.renderBlockButton = function() {
                        var e, t, n = this.props.displayName || this.props.login;
                        return this.isBlocked ? (e = Object(h.d)("Unblock {displayName}", {
                            displayName: n
                        }, "ThreadSettings"), t = this.unblockUser) : (e = Object(h.d)("Block {displayName}", {
                            displayName: n
                        }, "ThreadSettings"), t = this.blockUser), r.createElement(W.Ja, {
                            "data-test-selector": "whispers-block-user-button",
                            ariaLabel: e,
                            onClick: t
                        }, r.createElement(W.Ma, {
                            padding: {
                                y: .5,
                                x: 1
                            }
                        }, e))
                    }, Object.defineProperty(t.prototype, "isBlocked", {
                        get: function() {
                            var e = this;
                            return !(!this.props.currentUser.blockedUsers || !this.props.currentUser.blockedUsers.find(function(t) {
                                return !!t && t.id === e.props.userID
                            }))
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(r.Component),
                q = Object(m.compose)(Object(v.a)(V, {
                    name: "setMuteThread"
                }), Object(I.a)(), Object(M.a)())(G),
                Q = n("pORx");
            var K = n("NKxy");
            var Y = n("NSwr");
            var X, $ = n("vGFN"),
                J = (n("vty9"), "report-as-spam-button"),
                Z = "mark-not-spam-button",
                ee = "dismiss-prompt-button",
                te = "spam-prompt-pending-target",
                ne = "spam-prompt-reported-target",
                ie = {
                    displayName: "???",
                    login: "???",
                    displayBadges: [],
                    id: ""
                },
                re = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.renderPotentialSpamPrompt = function() {
                            if (n.props.spamInfo && "low" !== n.props.spamInfo.likelihood && null === n.props.spamInfo.lastMarkedNotSpamAt) {
                                if ("pending" === n.state.potentialSpamResolution) return r.createElement(W.Ma, {
                                    "data-a-target": te,
                                    className: "thread-header__potential-spam-prompt",
                                    attachRight: !0,
                                    attachLeft: !0,
                                    attachTop: !0
                                }, r.createElement(W.qb, {
                                    background: W.n.Alt2,
                                    padding: .5,
                                    elevation: 2
                                }, r.createElement(W.Ma, {
                                    display: W.R.InlineBlock,
                                    margin: .5
                                }, r.createElement(W.Q, {
                                    type: W.Gb.Span,
                                    fontSize: W.V.Size6,
                                    color: W.K.Alt2
                                }, Object(h.d)("It looks like this conversation triggered our spam detector. If it is spam, please report it!", "ThreadHeader"))), r.createElement(W.Ma, {
                                    display: W.R.InlineBlock,
                                    margin: .5
                                }, r.createElement(W.v, {
                                    "data-a-target": J,
                                    type: W.B.Alert,
                                    onClick: n.reportSpam,
                                    size: W.z.Small
                                }, Object(h.d)("Report spam", "ThreadHeader"))), r.createElement(W.Ma, {
                                    display: W.R.InlineBlock,
                                    margin: .5
                                }, r.createElement(W.v, {
                                    "data-a-target": Z,
                                    onClick: n.markNotSpam,
                                    size: W.z.Small
                                }, Object(h.d)("This is not spam", "ThreadHeader")))));
                                if ("reported" === n.state.potentialSpamResolution && n.interlocutor.displayName) return r.createElement(W.Ma, {
                                    "data-a-target": ne,
                                    className: "thread-header__potential-spam-prompt",
                                    attachRight: !0,
                                    attachLeft: !0,
                                    attachTop: !0
                                }, r.createElement(W.qb, {
                                    background: W.n.Alt2,
                                    padding: .5,
                                    elevation: 2
                                }, r.createElement(W.Ma, {
                                    display: W.R.InlineBlock,
                                    margin: .5
                                }, r.createElement(W.Q, {
                                    type: W.Gb.Span,
                                    fontSize: W.V.Size6,
                                    color: W.K.Alt2
                                }, Object(h.d)("Thank you for helping us fight spam. We've blocked {user} from sending you further whispers. You can undo this from the Whisper Settings Menu.", {
                                    user: n.interlocutor.displayName
                                }, "ThreadHeader"))), r.createElement(W.Ma, {
                                    display: W.R.InlineBlock,
                                    margin: .5
                                }, r.createElement(W.v, {
                                    "data-a-target": ee,
                                    type: W.B.Text,
                                    onClick: n.dismissSpamPrompt,
                                    size: W.z.Small
                                }, Object(h.d)("Dismiss", "ThreadHeader")))))
                            }
                            return null
                        }, n.reportSpam = function() {
                            n.props.reportUserMutation(n.interlocutor.id, P.c.Spam, n.props.threadID), n.props.blockUserMutation(n.interlocutor.id, P.b.Other, P.a.Whisper, n.props.participants.currentUser), n.props.setThreadSpamStatusMutation(n.props.threadID, !0), Object($.l)(n.interlocutor.login, $.a.SpamPropmt), n.setState({
                                potentialSpamResolution: "reported"
                            })
                        }, n.markNotSpam = function() {
                            n.props.setThreadSpamStatusMutation(n.props.threadID, !1), Object($.o)(n.props.threadID), n.setState({
                                potentialSpamResolution: "dismissed"
                            })
                        }, n.dismissSpamPrompt = function() {
                            n.props.onBlock && n.props.onBlock(n.props.threadID), Object($.n)(n.props.threadID), n.setState({
                                potentialSpamResolution: "dismissed"
                            })
                        }, n.onSettingsClick = function(e) {
                            e.stopPropagation()
                        }, n.onHeaderActivate = function(e) {
                            e.target === e.currentTarget && (e.charCode !== y.a.Enter && e.charCode !== y.a.Space || (n.props.onHeaderInteract(), e.stopPropagation()))
                        }, n.onFocus = function() {
                            n.setState({
                                isElementFocused: !0
                            })
                        }, n.onBlur = function() {
                            n.setState({
                                isElementFocused: !1
                            })
                        }, n.onPresenceClick = function(e, t) {
                            t.stopPropagation();
                            var i = n.props.participants.currentUser && n.props.participants.currentUser.friends.edges.find(function(e) {
                                return !(!e.node || e.node.id !== n.interlocutor.id)
                            });
                            n.props.participants.user && i && i.activity ? Object(D.b)({
                                context: e,
                                friendActivity: i.activity,
                                friendLogin: n.props.participants.user.login
                            }) : h.j.warn("[ThreadHeader] Attempted to track presence click without required data.")
                        };
                        var i = h.o.experiments.getAssignment("TWILIGHT_EXTENDED_PRESENCE");
                        return n.state = {
                            potentialSpamResolution: "pending",
                            hasExtendedRichPresence: "variant_a" === i,
                            isElementFocused: !1
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this,
                            t = this.props.isHighlighted && !this.state.isElementFocused,
                            n = p({
                                "thread-header__title-bar-container": !0,
                                "thread-header__title-bar-container--highlighted": this.props.isHighlighted,
                                "thread-header__title-bar-container--focused": this.props.isFocused
                            }),
                            i = p({
                                "thread-header": !0,
                                "thread-header--collapsed": this.props.isCollapsed
                            }),
                            a = p({
                                "thread-header__display-name--highlighted": this.props.isHighlighted
                            }),
                            o = Object(h.d)("Close", "WhisperThreadHeader"),
                            s = Object(h.d)("Settings", "WhisperThreadHeader");
                        if (this.props.isLoading || !this.props.participants.currentUser || !this.props.participants.user) return r.createElement(W.Ma, {
                            className: n,
                            display: W.R.Flex,
                            justifyContent: W.La.Between,
                            fullWidth: !0,
                            alignItems: W.c.Center,
                            padding: {
                                y: .5,
                                x: 1
                            },
                            flexShrink: 0,
                            flexGrow: 0,
                            flexWrap: W.U.NoWrap
                        }, r.createElement(W.Va, {
                            height: 20,
                            width: 80
                        }), r.createElement(W.Ma, {
                            display: W.R.Flex
                        }, r.createElement(W.w, {
                            ariaLabel: o,
                            icon: W.gb.RemoveTag,
                            "data-a-target": "whispers-thread__close-button-" + this.props.threadID,
                            onClick: this.props.onClose
                        })));
                        var l = null,
                            c = null,
                            d = null,
                            u = null,
                            m = this.props.participants.currentUser && this.props.participants.currentUser.friends.edges.find(function(t) {
                                return !(!t.node || t.node.id !== e.interlocutor.id)
                            });
                        if (m) {
                            c = r.createElement(W.Ma, {
                                margin: {
                                    left: 1
                                },
                                display: W.R.Flex,
                                alignItems: W.c.Center
                            }, r.createElement(W.Xa, {
                                status: function(e) {
                                    switch (e) {
                                        case Y.a.Online:
                                            return W.Ya.Online;
                                        case Y.a.Away:
                                        case Y.a.Idle:
                                            return W.Ya.Away;
                                        case Y.a.Busy:
                                            return W.Ya.Busy;
                                        case Y.a.Offline:
                                        case Y.a.Invisible:
                                        default:
                                            return W.Ya.Offline
                                    }
                                }(m.availability)
                            }));
                            var f = m.activity,
                                g = m.availability;
                            if (f) {
                                var v = {
                                        activity: f,
                                        availability: this.state.hasExtendedRichPresence ? g : void 0
                                    },
                                    b = Object(L.b)(v, !0),
                                    y = null,
                                    k = Object(L.c)(this.props.participants.user.login, f);
                                if (k && (y = {
                                        pathname: k,
                                        state: {
                                            content: x.PageviewContent.Presence,
                                            medium: x.PageviewMedium.Whispers
                                        }
                                    }), y) {
                                    var S = p({
                                        "thread-header__activity-link--highlighted": this.props.isHighlighted
                                    });
                                    d = r.createElement(R.a, {
                                        className: S,
                                        title: Object(L.b)(v) || "",
                                        onClick: this.onPresenceClick.bind(this, D.a.WhisperHeaderLink),
                                        to: y,
                                        "data-test-selector": "whispers-thread__presence-link"
                                    }, b)
                                } else d = b;
                                this.props.isCollapsed || (u = r.createElement(W.Ma, {
                                    padding: {
                                        right: .5
                                    }
                                }, r.createElement(F.a, {
                                    availability: g,
                                    link: y,
                                    onClick: this.onPresenceClick.bind(this, D.a.WhisperHeaderButton),
                                    shouldHollowOverlay: this.props.isHighlighted
                                })))
                            }
                        }
                        this.props.isCollapsed || !this.props.participants.currentUser || this.props.interactionsDisabled || (l = r.createElement(O.a, null, r.createElement(W.w, {
                            ariaLabel: s,
                            icon: W.gb.Gear,
                            overlay: t
                        }), r.createElement(W.q, {
                            direction: W.r.BottomRight,
                            offsetX: "0.5rem",
                            size: W.s.Small
                        }, r.createElement(q, {
                            login: this.interlocutor.login,
                            displayName: this.interlocutor.displayName,
                            currentUser: this.props.participants.currentUser,
                            userID: this.interlocutor.id,
                            isMuted: this.props.isMuted,
                            threadID: this.props.threadID,
                            collapseThread: this.props.collapse,
                            onBlock: this.props.onBlock,
                            onUnblock: this.props.onUnblock,
                            showReportUserModal: this.props.showReportUserModal
                        }))));
                        var w = this.interlocutor.displayBadges.map(function(e) {
                            return r.createElement(W.Fa, {
                                key: e.id,
                                flexShrink: 0,
                                margin: {
                                    right: .5
                                }
                            }, r.createElement("img", {
                                alt: e.title,
                                title: e.title,
                                className: "thread-header__badge",
                                src: e.imageURL
                            }))
                        });
                        return r.createElement(W.Ma, {
                            className: i,
                            position: W.Wa.Relative,
                            fullWidth: !0
                        }, r.createElement("div", {
                            className: "thread-header__click-area",
                            onClick: this.props.onHeaderInteract,
                            onKeyPress: this.onHeaderActivate,
                            onFocus: this.onFocus,
                            onBlur: this.onBlur,
                            "data-a-target": "thread-header__click-area",
                            tabIndex: 0
                        }, r.createElement(W.Ma, {
                            className: n,
                            fullWidth: !0,
                            padding: {
                                x: 1,
                                y: .5
                            },
                            alignItems: W.c.Center,
                            flexGrow: 1,
                            display: W.R.Flex,
                            "data-a-target": "whisper-thread-title-bar-" + (this.props.participants.user && this.props.participants.user.login),
                            "data-click-out-id": "thread-expand-close",
                            flexWrap: W.U.NoWrap
                        }, r.createElement(W.Ma, {
                            display: W.R.Flex,
                            flexDirection: W.T.Column,
                            flexGrow: 1,
                            fullHeight: !0,
                            overflow: W.Pa.Hidden
                        }, r.createElement(W.Ma, {
                            display: W.R.Flex,
                            flexGrow: 1,
                            alignItems: W.c.Center,
                            flexWrap: W.U.NoWrap,
                            padding: {
                                right: 1
                            },
                            ellipsis: !0
                        }, w, r.createElement(W.Q, {
                            className: a,
                            type: W.Gb.Span,
                            bold: !0,
                            ellipsis: !0
                        }, this.interlocutor.displayName ? this.interlocutor.displayName : ie.displayName), c), r.createElement(W.qb, {
                            className: "thread-header__activity",
                            color: this.props.isHighlighted ? W.K.Overlay : W.K.Base,
                            padding: {
                                right: 1
                            },
                            ellipsis: !0
                        }, d)), r.createElement(W.Ma, {
                            display: W.R.Flex,
                            flexShrink: 0,
                            flexDirection: W.T.Row,
                            alignItems: W.c.Center
                        }, u, r.createElement("div", {
                            onClick: this.onSettingsClick
                        }, l), r.createElement(W.w, {
                            ariaLabel: o,
                            icon: W.gb.RemoveTag,
                            "data-a-target": "thread-close-button-" + (this.props.participants.user && this.props.participants.user.login),
                            "data-test-selector": "thread-header__close-button-" + this.props.threadID,
                            onClick: this.props.onClose,
                            overlay: t
                        })))), this.renderPotentialSpamPrompt())
                    }, Object.defineProperty(t.prototype, "interlocutor", {
                        get: function() {
                            return this.props.participants.user || ie
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }(r.Component),
                ae = Object(s.d)(Object(I.a)(), function() {
                    var e = this;
                    return Object(v.a)(Q, {
                        props: function(t) {
                            return {
                                reportUserMutation: function(n, r, a) {
                                    return i.b(e, void 0, void 0, function() {
                                        var e;
                                        return i.e(this, function(i) {
                                            switch (i.label) {
                                                case 0:
                                                    if (!t.mutate) return [3, 4];
                                                    i.label = 1;
                                                case 1:
                                                    return i.trys.push([1, 3, , 4]), [4, t.mutate({
                                                        variables: {
                                                            input: {
                                                                targetUserID: n,
                                                                reason: r,
                                                                threadID: a
                                                            }
                                                        }
                                                    })];
                                                case 2:
                                                    return i.sent(), [3, 4];
                                                case 3:
                                                    return e = i.sent(), h.j.error(e, "Unable to report user"), [3, 4];
                                                case 4:
                                                    return [2]
                                            }
                                        })
                                    })
                                }
                            }
                        }
                    })
                }(), function() {
                    var e = this;
                    return Object(v.a)(K, {
                        props: function(t) {
                            return {
                                setThreadSpamStatusMutation: function(n, r) {
                                    return i.b(e, void 0, void 0, function() {
                                        var e;
                                        return i.e(this, function(i) {
                                            switch (i.label) {
                                                case 0:
                                                    if (!t.mutate) return [3, 4];
                                                    i.label = 1;
                                                case 1:
                                                    return i.trys.push([1, 3, , 4]), [4, t.mutate({
                                                        variables: {
                                                            input: {
                                                                threadID: n,
                                                                isSpam: r
                                                            }
                                                        }
                                                    })];
                                                case 2:
                                                    return i.sent(), [3, 4];
                                                case 3:
                                                    return e = i.sent(), h.j.error(e, "Unable to modify threads spam status user"), [3, 4];
                                                case 4:
                                                    return [2]
                                            }
                                        })
                                    })
                                }
                            }
                        }
                    })
                }())(re),
                oe = n("szP+"),
                se = n("8/mp"),
                le = n("HAa/");
            ! function(e) {
                e[e.Timestamp = 0] = "Timestamp", e[e.Whisper = 1] = "Whisper", e[e.Warning = 2] = "Warning", e[e.InactiveUserNotice = 3] = "InactiveUserNotice", e[e.NewMessages = 4] = "NewMessages", e[e.Notification = 5] = "Notification"
            }(X || (X = {}));
            n("PaqN");
            var ce = n("tQZM"),
                de = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this.props.message;
                        switch (e.type) {
                            case X.Timestamp:
                                return r.createElement(W.qb, {
                                    className: "thread-message__timestamp",
                                    color: W.K.Alt2,
                                    fontSize: W.V.Size7
                                }, Object(ce.e)(e));
                            case X.Warning:
                                return r.createElement(W.qb, {
                                    className: "thread-message__warning",
                                    color: W.K.Alt2
                                }, Object(ce.f)());
                            case X.InactiveUserNotice:
                                return r.createElement(W.qb, {
                                    className: "thread-message__inactive-user",
                                    color: W.K.Alt2
                                }, Object(ce.b)());
                            case X.Whisper:
                                return this.props.reportOutgoingWhisperRendered && this.props.reportOutgoingWhisperRendered(e.content), r.createElement(W.Ma, {
                                    className: "thread-message__message",
                                    "data-a-target": "whisper-message"
                                }, Object(ce.g)(e));
                            case X.NewMessages:
                                return r.createElement(W.qb, {
                                    className: "thread-message__new-messages",
                                    color: W.K.OverlayAlt,
                                    fontSize: W.V.Size7
                                }, Object(ce.c)());
                            case X.Notification:
                                return r.createElement(W.Ma, {
                                    className: "thread-message__notification"
                                }, Object(ce.d)(e));
                            default:
                                return null
                        }
                    }, t
                }(r.Component),
                ue = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            disableInfiniteTrigger: !0
                        }, t.loadMore = function() {
                            if (t.scroll && t.scroll.scrollContent) {
                                var e = t.scroll.scrollContent.scrollHeight;
                                t.setState({
                                    prevScrollHeight: e
                                })
                            }
                            return t.props.loadMore()
                        }, t.renderMessages = function(e) {
                            return e.map(function(e, n) {
                                return r.createElement(de, {
                                    message: e,
                                    reportOutgoingWhisperRendered: t.props.reportOutgoingWhisperRendered || void 0,
                                    key: t.generateMessageKey(e, n.toString())
                                })
                            })
                        }, t.getMessages = function() {
                            var e = t.props.unreadMessagesCount,
                                n = [t.createWarningMessage()];
                            return n = (n = n.concat(t.notificationsFor())).concat(t.props.thread.messages.edges.map(function(e) {
                                return {
                                    type: X.Whisper,
                                    content: e.node.content.content,
                                    from: e.node.from && t.props.participantsByID[+e.node.from.id],
                                    emotes: e.node.content.emotes,
                                    id: e.node.id,
                                    nonce: e.node.nonce,
                                    sentAt: new Date(e.node.sentAt),
                                    editedAt: e.node.editedAt,
                                    deletedAt: e.node.deletedAt
                                }
                            }).reduce(function(n, i, r, a) {
                                if (t.notificationsFor(i.id).forEach(function(e) {
                                        n.push(e)
                                    }), n.push(i), 0 == --e && n.push(t.createNewMessagesIndicator()), r < a.length - 1) {
                                    var o = a[r + 1];
                                    !i.deletedAt && t.shouldAddTimestamp(i, o) && n.push(t.createTimestampMessage(i))
                                }
                                return r !== a.length - 1 || i.deletedAt || n.push(t.createTimestampMessage(i)), n
                            }, []).reverse()), t.props.hasUnknownParticipant && n.push(t.createInactiveUserMessage()), n
                        }, t.shouldAddTimestamp = function(e, t) {
                            return e.sentAt.valueOf() - t.sentAt.valueOf() > 6e5 || e.sentAt.toDateString() !== t.sentAt.toDateString()
                        }, t.createTimestampMessage = function(e) {
                            return {
                                type: X.Timestamp,
                                timestamp: new Date(e.sentAt)
                            }
                        }, t.notificationsFor = function(e) {
                            return t.props.notifications.filter(function(t) {
                                return t.afterMessageID === e
                            }).map(t.createNotificationLine)
                        }, t.createNotificationLine = function(e) {
                            return {
                                type: X.Notification,
                                content: e.content
                            }
                        }, t.createNewMessagesIndicator = function() {
                            return {
                                type: X.NewMessages
                            }
                        }, t.createWarningMessage = function() {
                            return {
                                type: X.Warning
                            }
                        }, t.createInactiveUserMessage = function() {
                            return {
                                type: X.InactiveUserNotice
                            }
                        }, t.saveScrollRef = function(e) {
                            return t.scroll = e
                        }, t.scrollToBottom = function() {
                            t.scroll.scrollToBottom()
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        this.scrollToBottom(), this.setState({
                            disableInfiniteTrigger: !1
                        })
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        var t = this.props.thread.messages.edges.length > 0,
                            n = e.thread.messages.edges.length > 0;
                        if (!t && n || t && n && this.props.thread.messages.edges[0].cursor !== e.thread.messages.edges[0].cursor) {
                            if (!this.scroll || !this.scroll.scrollContent) return;
                            this.setState({
                                prevScrollHeight: this.scroll.scrollContent.scrollHeight
                            })
                        }
                    }, t.prototype.componentDidUpdate = function(e) {
                        if (this.props.thread.messages.edges.length > e.thread.messages.edges.length)
                            if (this.props.thread.messages.edges[0] && e.thread.messages.edges[0] && this.props.thread.messages.edges[0].cursor === e.thread.messages.edges[0].cursor && this.props.thread.messages.edges[0].node.id === e.thread.messages.edges[0].node.id) {
                                if (this.scroll && this.scroll.scrollContent && this.state.prevScrollHeight && this.state.prevScrollHeight !== this.scroll.scrollContent.scrollHeight) {
                                    var t = this.scroll.scrollContent.scrollHeight - this.state.prevScrollHeight;
                                    this.scroll.scrollContent.scrollTop = t
                                }
                            } else this.scrollToBottom();
                        this.props.notifications.length > e.notifications.length && this.scrollToBottom(), e.collapsed && !this.props.collapsed && this.scrollToBottom()
                    }, t.prototype.render = function() {
                        var e = this.getMessages();
                        return r.createElement(W.Ma, {
                            fullHeight: !0
                        }, r.createElement(se.b, {
                            scrollRef: this.saveScrollRef,
                            suppressScrollX: !0
                        }, r.createElement(W.Ma, null, r.createElement(se.a, {
                            enabled: !this.state.disableInfiniteTrigger,
                            loadMore: this.loadMore,
                            pixelThreshold: 200,
                            orientation: le.b.Down,
                            contentLength: e.length
                        }), this.renderMessages(e))))
                    }, t.prototype.generateMessageKey = function(e, t) {
                        switch (e.type) {
                            case X.NewMessages:
                            case X.Warning:
                            case X.InactiveUserNotice:
                                return "" + e.type;
                            case X.Timestamp:
                                return e.type + "-" + e.timestamp.getTime();
                            case X.Whisper:
                                return e.type + "-" + e.id;
                            case X.Notification:
                                return e.type + "-" + t;
                            default:
                                return h.j.warn("[ThreadMessages] Encountered an unknown message type."), t
                        }
                    }, t
                }(r.Component);
            var pe, me = Object(o.b)(function(e, t) {
                    return {
                        notifications: Object(oe.a)(e, t.thread.id)
                    }
                })(ue),
                he = n("bAm+"),
                fe = n("TOso"),
                ge = n("NMMG"),
                ve = n("xJpr"),
                be = n("rDH2"),
                ye = (n("DLia"), n("Jpf8")),
                ke = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.hadError = !1, n.onEmoticonClick = function(e) {
                            var t = n.autocompleteInput.getValue();
                            t && t.length > 0 && !t.endsWith(" ") && (t += " "), t += e + " ", n.autocompleteInput.setValue(t)
                        }, n.onBlock = function(e) {
                            n.addNotification(Object(h.d)("User successfully blocked", "whispers")), n.props.onBlock && n.props.onBlock(e)
                        }, n.onUnblock = function() {
                            n.addNotification(Object(h.d)("User successfully unblocked", "whispers"))
                        }, n.loadMore = function() {
                            return i.b(n, void 0, void 0, function() {
                                return i.e(this, function(e) {
                                    return this.props.data.loading || this.hadError ? [2] : [2, this.props.loadMore()]
                                })
                            })
                        }, n.addNotification = function(e) {
                            n.props.notifyWhisperThread(n.props.threadID, e, n.getLastMessageID())
                        }, n.getLastMessageID = function() {
                            if (n.props.data.whisperThread && n.props.data.whisperThread.messages.edges[0]) return n.props.data.whisperThread.messages.edges[0].node.id
                        }, n.handleHeaderInteract = function() {
                            n.props.collapsed ? n.expand() : n.collapse()
                        }, n.expand = function() {
                            n.props.participants.currentUser && Object(z.h)(n.props.threadID), n.props.onExpand(n.props.threadID)
                        }, n.onClickOut = function() {
                            n.props.focused && n.props.onUnfocus(n.props.threadID)
                        }, n.handleClose = function() {
                            n.props.participants.currentUser && Object(z.c)(n.props.threadID), n.props.onClose(n.props.threadID)
                        }, n.collapse = function() {
                            n.props.participants.currentUser && Object(z.d)(n.props.threadID), n.props.onCollapse(n.props.threadID)
                        }, n.handleKeydown = function(e) {
                            if ((e.charCode || e.keyCode) === y.a.Enter) {
                                var t = n.autocompleteInput.getValue();
                                n.autocompleteInput.setValue(""), n.sendWhisper(t)
                            }
                        }, n.handleClick = function() {
                            n.props.onFocus(n.props.threadID), n.markThreadMessagesAsRead()
                        }, n.markThreadMessagesAsRead = function() {
                            if (!n.props.data.loading && !n.hadError && n.props.data.whisperThread && 0 !== n.props.data.whisperThread.messages.edges.length && 0 !== n.props.data.whisperThread.unreadMessagesCount) {
                                var e = n.props.data.whisperThread && +n.props.data.whisperThread.messages.edges[0].cursor;
                                e && !isNaN(e) || (e = 0), Object(he.a)({
                                    threadID: n.props.threadID,
                                    lastReadMessageID: n.props.data.whisperThread && n.props.data.whisperThread.messages.edges[0].node.id || ""
                                }, e)
                            }
                        }, n.sendWhisper = function(e) {
                            if ("" !== e) {
                                n.props.latencyTracking.resetCustomEvents(C.a.Whispers), n.outgoingWhisperRenderedEvent = n.props.latencyTracking.registerCustomEvent({
                                    benchmark: 150,
                                    group: C.a.Whispers,
                                    key: C.b.WhispersRenderSent,
                                    label: C.c.RenderSent,
                                    start: C.d.Registration
                                }), n.outgoingWhisperMessage = e;
                                var t = Object(ge.b)(n.props.threadID, n.props.currentUserID);
                                t ? (n.props.participants.currentUser && n.props.participants.user && Object(z.m)({
                                    threadID: n.props.threadID,
                                    targetUserLogin: n.props.participants.user.login
                                }), Object(fe.b)({
                                    currentUserID: n.props.currentUserID,
                                    emotes: n.props.emoteSetsData && n.props.emoteSetsData.emoteMap || {},
                                    message: e,
                                    recipientUserID: t
                                }).then(function(e) {
                                    if (e.data.sendWhisper.error) throw new Error(e.data.sendWhisper.error.code)
                                }).catch(function(e) {
                                    var t, i;
                                    switch (e.message) {
                                        case fe.a.RestrictedRecipient:
                                            t = Object(h.d)("Your whisper was not delivered because the recipient's settings prevent them from receiving it.", "Thread");
                                            break;
                                        case fe.a.BodyEmpty:
                                            t = Object(h.d)("Your whisper was not delivered because it was empty.", "Thread");
                                            break;
                                        case fe.a.TargetBanned:
                                            t = Object(h.d)("Your whisper was not delivered because the recipient is suspended.", "Thread");
                                            break;
                                        default:
                                            t = Object(h.d)("Your whisper was not delivered.", "Thread")
                                    }
                                    n.props.data.whisperThread && n.props.data.whisperThread.messages.edges.length > 0 && (i = n.props.data.whisperThread.messages.edges[0].node.id), n.props.notifyWhisperThread(n.props.threadID, t, i)
                                })) : h.j.warn("Unable to parse whisper recipient ID.")
                            }
                        }, n.setAutocompleteInnerComponentRef = function(e) {
                            n.textInput = e
                        }, n.setAutocompleteInputRef = function(e) {
                            return n.autocompleteInput = e
                        }, n.handleContentClick = function() {
                            document.getSelection().toString() || n.textInput.focus()
                        }, n.setContainerRef = function(e) {
                            n.autocompleteContainer = e
                        }, n.reportOutgoingWhisperRendered = function(e) {
                            n.outgoingWhisperRenderedEvent && e === n.outgoingWhisperMessage && n.props.latencyTracking.reportCustomEvent(n.outgoingWhisperRenderedEvent)
                        }, n.hasUnknownParticipant = function() {
                            return !(n.props.participants.user && n.props.participants.user.login)
                        }, n.shouldDisableInteractions = function() {
                            return n.hasUnknownParticipant()
                        }, n
                    }
                    return i.d(t, e), t.prototype.componentWillReceiveProps = function(e) {
                        e.data.error && (this.hadError = !0), e.data.error || e.data.loading || !e.data.whisperThread || this.props.reportThreadData(e.threadID, e.data.whisperThread)
                    }, t.prototype.componentDidUpdate = function(e) {
                        e.data.whisperThread && this.props.data.whisperThread && (this.props.data.whisperThread.messages.edges.length, e.data.whisperThread.messages.edges.length)
                    }, t.prototype.render = function() {
                        var e = p({
                            "whispers-thread": !0,
                            "whispers-thread--collapsed": this.props.collapsed,
                            "whispers-thread--focused": this.props.focused
                        });
                        if (this.props.hidden) return null;
                        var t = this.props.emoteSetsData && this.props.emoteSetsData.emoteSets || [];
                        return r.createElement(f.a, {
                            onClickOut: this.onClickOut
                        }, r.createElement(W.qb, {
                            className: e,
                            display: W.R.Flex,
                            flexShrink: 0,
                            flexGrow: 0,
                            position: W.Wa.Relative,
                            overflow: W.Pa.Hidden,
                            background: W.n.Base,
                            margin: {
                                left: 1
                            },
                            alignItems: W.c.Center,
                            justifyContent: W.La.Center,
                            "data-a-target": "whisper-thread-" + (this.props.participants.user && this.props.participants.user.login) + (this.props.collapsed ? "-collapsed" : ""),
                            elevation: 3
                        }, r.createElement(W.Ma, {
                            className: "whispers-thread__autocomplete-container",
                            position: W.Wa.Absolute,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0,
                            refDelegate: this.setContainerRef
                        }, r.createElement(W.Ma, {
                            position: W.Wa.Absolute,
                            fullWidth: !0,
                            padding: {
                                x: 1,
                                bottom: 1
                            },
                            attachBottom: !0,
                            attachLeft: !0
                        }, r.createElement(N.b, {
                            disabled: this.shouldDisableInteractions(),
                            componentType: N.a.Input,
                            suggestionSource: N.c.Whisper,
                            iconRight: !0,
                            onFocus: this.handleClick,
                            onClick: this.handleClick,
                            onKeyDown: this.handleKeydown,
                            componentRefDelegate: this.setAutocompleteInnerComponentRef,
                            refDelegate: this.setAutocompleteInputRef,
                            containerElement: this.autocompleteContainer
                        }, r.createElement(N.d, {
                            emotes: t
                        })), r.createElement(T.a, {
                            attachBottom: !0,
                            attachRight: !0,
                            inputRef: this.textInput,
                            onClickEmote: this.onEmoticonClick,
                            padding: {
                                x: 1,
                                bottom: 1
                            },
                            position: W.Wa.Absolute,
                            shouldCloseOnClickOut: !0
                        }))), r.createElement(W.Fa, {
                            fullWidth: !0,
                            attachLeft: !0
                        }, r.createElement("div", {
                            className: "whispers-thread__content",
                            onClick: this.handleContentClick
                        }, this.renderContent())), r.createElement(W.Ma, {
                            position: W.Wa.Absolute,
                            fullWidth: !0,
                            flexShrink: 0,
                            display: W.R.Flex,
                            alignItems: W.c.Center,
                            attachTop: !0,
                            attachLeft: !0
                        }, r.createElement(ae, {
                            isHighlighted: !!(this.props.data.whisperThread && this.props.data.whisperThread.unreadMessagesCount > 0),
                            isFocused: !!this.props.focused,
                            isMuted: !!this.props.data.whisperThread && this.props.data.whisperThread.isMuted,
                            isCollapsed: this.props.collapsed,
                            isLoading: this.props.participants.loading || !this.props.participants.user || !this.props.participants.currentUser,
                            interactionsDisabled: this.shouldDisableInteractions(),
                            participants: this.props.participants,
                            spamInfo: this.props.data.whisperThread && this.props.data.whisperThread.spamInfo,
                            threadID: this.props.threadID,
                            collapse: this.collapse,
                            onHeaderInteract: this.handleHeaderInteract,
                            onBlock: this.onBlock,
                            onUnblock: this.onUnblock,
                            onClose: this.handleClose,
                            showReportUserModal: this.props.showReportUserModal
                        }))))
                    }, t.prototype.renderContent = function() {
                        return this.hadError ? r.createElement(g.a, {
                            message: Object(h.d)("Sorry, something went wrong loading this conversation.", "WhisperThread")
                        }) : this.props.data.loading || this.props.participants.loading || !this.props.data.whisperThread ? r.createElement(W.Ma, {
                            display: W.R.Flex,
                            justifyContent: W.La.Center,
                            alignItems: W.c.Center,
                            margin: 2,
                            fullHeight: !0,
                            flexGrow: 1
                        }, r.createElement(W.Oa, null)) : r.createElement(me, {
                            thread: this.props.data.whisperThread,
                            participantsByID: this.getUsersByID(this.props.data.whisperThread.participants),
                            unreadMessagesCount: this.props.data.whisperThread.unreadMessagesCount,
                            loadMore: this.loadMore,
                            reportOutgoingWhisperRendered: this.reportOutgoingWhisperRendered,
                            collapsed: this.props.collapsed,
                            hasUnknownParticipant: this.hasUnknownParticipant()
                        })
                    }, t.prototype.getUsersByID = function(e) {
                        for (var t = {}, n = 0, i = e; n < i.length; n++) {
                            var r = i[n];
                            r && (t[r.id] = r)
                        }
                        return t
                    }, t
                }(r.Component),
                Se = Object(m.compose)(Object(v.a)(be, {
                    options: function(e) {
                        return {
                            variables: {
                                targetUserID: Object(ge.b)(e.threadID, e.currentUserID) || ""
                            },
                            skip: !e.currentUserID || !e.threadID
                        }
                    },
                    name: "participants"
                }), Object(v.a)(ye, {
                    options: function(e) {
                        return {
                            variables: {
                                id: e.threadID
                            }
                        }
                    },
                    props: function(e) {
                        return i.a({}, e, {
                            loadMore: function() {
                                var t = "";
                                return e.data.whisperThread && e.data.whisperThread.messages.edges.length > 0 && (t = e.data.whisperThread.messages.edges[e.data.whisperThread.messages.edges.length - 1].cursor), e.data.fetchMore({
                                    query: ye,
                                    variables: i.a({}, e.data.variables, {
                                        cursor: t
                                    }),
                                    updateQuery: function(e, t) {
                                        var n = t.fetchMoreResult;
                                        if (!n.whisperThread) return {
                                            whisperThread: null
                                        };
                                        if (!e.whisperThread) return {
                                            whisperThread: n.whisperThread
                                        };
                                        var r = i.a({}, n.whisperThread.messages, {
                                            edges: Object(w.c)(e.whisperThread.messages.edges, n.whisperThread.messages.edges)
                                        });
                                        return {
                                            whisperThread: i.a({}, n.whisperThread, {
                                                messages: r
                                            })
                                        }
                                    }
                                })
                            }
                        })
                    }
                }), Object(b.a)([{
                    topic: function(e) {
                        return Object(E.C)(e.currentUserID)
                    },
                    mapMessageTypesToProps: (pe = {}, pe[k.PubsubMessageType.WhisperReceived] = "whisperReceived", pe[k.PubsubMessageType.WhisperSent] = "whisperSent", pe),
                    skipMessage: function(e, t) {
                        return !Object(ve.e)(e) && !Object(ve.d)(e) || e.data_object.thread_id !== t.threadID
                    }
                }]), Object(S.a)(), Object(_.c)("WhispersThread", {
                    autoReportInteractive: !0
                }))(ke);
            var we, Ee = Object(o.b)(function(e) {
                return {
                    isLoggedIn: Object(c.e)(e)
                }
            }, function(e) {
                return Object(s.b)({
                    notifyWhisperThread: u.b,
                    showReportUserModal: function(e) {
                        var t = i.g(e, []);
                        return Object(l.d)(d.a, t)
                    }
                }, e)
            })(Se);
            n("fuJa");
            n.d(t, "b", function() {
                return we
            }), n.d(t, "a", function() {
                return Ce
            });
            var Ce = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.resizeAnimationHandle = null, t.renderThread = function(e) {
                        return e ? r.createElement(Ee, {
                            key: e.threadID,
                            currentUserID: t.props.currentUserID,
                            collapsed: e.collapsed,
                            hidden: e.hidden,
                            threadID: e.threadID,
                            onBlock: t.onBlock,
                            onCollapse: t.props.onCollapseThread,
                            onClose: t.props.onCloseThread,
                            onExpand: t.props.onExpandThread,
                            onFocus: t.props.onFocusThread,
                            onUnfocus: t.props.onUnfocusThread,
                            focused: t.props.focusedThreadID === e.threadID,
                            reportThreadData: t.props.reportThreadData
                        }) : null
                    }, t.onBlock = function(e) {
                        t.props.archiveThread(e), t.props.onBlockThread(e)
                    }, t.setOpenThreadsRef = function(e) {
                        return we = e
                    }, t.handleContentResize = function() {
                        t.resizeAnimationHandle || (t.resizeAnimationHandle = requestAnimationFrame(function() {
                            t.props.onResizeContent(), t.resizeAnimationHandle = null
                        }))
                    }, t
                }
                return i.d(t, e), t.prototype.render = function() {
                    var e = this,
                        t = this.props.openedThreads.map(function(t) {
                            return e.renderThread(t)
                        });
                    return r.createElement(W.Ma, {
                        className: "whispers-open-threads",
                        display: W.R.Flex,
                        flexDirection: W.T.RowReverse,
                        alignItems: W.c.End,
                        position: W.Wa.Absolute,
                        attachBottom: !0,
                        attachLeft: !0,
                        refDelegate: this.setOpenThreadsRef
                    }, t, r.createElement(a.a, {
                        onResize: this.handleContentResize
                    }))
                }, t
            }(r.Component)
        },
        "r0//": function(e, t, n) {},
        rBQp: function(e, t, n) {},
        rDH2: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Whispers_Thread_Participants"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "targetUserID"
                            }
                        },
                        type: {
                            kind: "NamedType",
                            name: {
                                kind: "Name",
                                value: "ID"
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "blockedUsers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "chatColor"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "70"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "friends"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "edges"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "node"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "availability"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "activity"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "type"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Playing"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "game"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "name"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Streaming"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "stream"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "game"
                                                                            },
                                                                            arguments: [],
                                                                            directives: [],
                                                                            selectionSet: {
                                                                                kind: "SelectionSet",
                                                                                selections: [{
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "id"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }, {
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "name"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }]
                                                                            }
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }, {
                                                            kind: "InlineFragment",
                                                            typeCondition: {
                                                                kind: "NamedType",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "Watching"
                                                                }
                                                            },
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "user"
                                                                    },
                                                                    arguments: [],
                                                                    directives: [],
                                                                    selectionSet: {
                                                                        kind: "SelectionSet",
                                                                        selections: [{
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "id"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "displayName"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "login"
                                                                            },
                                                                            arguments: [],
                                                                            directives: []
                                                                        }, {
                                                                            kind: "Field",
                                                                            name: {
                                                                                kind: "Name",
                                                                                value: "hosting"
                                                                            },
                                                                            arguments: [],
                                                                            directives: [],
                                                                            selectionSet: {
                                                                                kind: "SelectionSet",
                                                                                selections: [{
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "id"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }, {
                                                                                    kind: "Field",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "displayName"
                                                                                    },
                                                                                    arguments: [],
                                                                                    directives: []
                                                                                }]
                                                                            }
                                                                        }]
                                                                    }
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "targetUserID"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayBadges"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "title"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "imageURL"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "chatColor"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "profileImageURL"
                                    },
                                    arguments: [{
                                        kind: "Argument",
                                        name: {
                                            kind: "Name",
                                            value: "width"
                                        },
                                        value: {
                                            kind: "IntValue",
                                            value: "70"
                                        }
                                    }],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 503
                }
            };
            n.loc.source = {
                body: "query Whispers_Thread_Participants($targetUserID: ID) {\ncurrentUser {\nid\nblockedUsers {\nid\n}\nchatColor\ndisplayName\nprofileImageURL(width: 70)\nlogin\nfriends {\nedges {\nnode {\nid\n}\navailability\nactivity {\ntype\n... on Playing {\ngame {\nid\nname\n}\n}\n... on Streaming {\nstream {\nid\ngame {\nid\nname\n}\n}\n}\n... on Watching {\nuser {\nid\ndisplayName\nlogin\nhosting {\nid\ndisplayName\n}\n}\n}\n}\n}\n}\n}\nuser(id: $targetUserID) {\nid\ndisplayBadges {\nid\ntitle\nimageURL\n}\nchatColor\ndisplayName\nprofileImageURL(width: 70)\nlogin\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        "rF0/": function(e, t, n) {},
        rUlE: function(e, t, n) {},
        rnKL: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.AbandonedSearch = "abandoned_search", e.AdSlotRenderEnded = "ad_slot_render_ended", e.AdImpressionViewableEvent = "ad_impression_viewable", e.AchievementSpotlightImpression = "achievement_spotlight_impression", e.AchievementQuestBannerClick = "achievement_quest_banner_click", e.APIQuery = "benchmark_api_query", e.AppBooted = "benchmark_app_booted", e.AuthModalEntranceModalLoad = "auth_modal_entrance_modal_load", e.AuthStep = "auth_step", e.AuthStepRender = "auth_step_render", e.AuthModalInteraction = "auth_modal_interaction", e.AuthCaptcha = "auth_captcha", e.AuthTwoFactor = "auth_two_factor", e.AutoHostChannelUpdate = "autohost_channel_update", e.AutohostChatImpression = "autohost_chat_impression", e.AutohostChatYes = "autohost_chat_yes", e.AutohostChatDismiss = "autohost_chat_dismiss", e.AutohostChatSettings = "autohost_chat_settings", e.BeganSearch = "began_search", e.BitsAdsAvailability = "bits_ads_availability", e.BitsAdsImpression = "bits_ads_impression", e.BitsAdsRequest = "bits_ads_request", e.BitsCardInteraction = "bits_card_interaction", e.BitsCheerBombOptOut = "bits_cheer_bomb_opt_out", e.BitsCheerBombHideNotifications = "bits_cheer_bomb_hide_notifications", e.BroadcastPageClick = "broadcast_page_link", e.BrowseClick = "browse_click", e.BrowseForYou = "browse_for_you", e.BrowserFingerprint = "browser_fingerprint", e.BrowserPushNotificationPrompt = "browser_notification_prompt", e.BrowserPushNotificationDisable = "browser_notification_disable", e.BountyBoardActions = "bounty_board_actions", e.BountyBoardImpressions = "bounty_board_impressions", e.BTTV = "bttv_check", e.ChannelAnalyticsInteraction = "channel_analytics_interaction", e.ChannelAnalyticsTopStatsView = "channel_analytics_topstats_view", e.Chat = "chat", e.ChatBadgeClick = "chat_badge_click", e.ChatMentionUsed = "chat_mention_used", e.ChatRoomJoined = "chat_room_join", e.ChatRoomWatched = "chatroom-watched", e.ChatSettingsChanged = "chat_client_setting_changed", e.ChatSettingsOpened = "chat_client_settings_open", e.ChatSuggestion = "chat-suggestions", e.ChatSuggestionComplete = "chat-completed-suggestion", e.ChommentCreated = "chomment_create", e.ChommentDeleted = "chomment_delete", e.ChommentUIAction = "chomment_ui_action", e.ClipEdit = "clip_edit", e.ClipChampHelpClick = "clip_champ_help_click", e.CollectionCreate = "collection_create", e.CollectionAddItem = "collection_add_item", e.CollectionRemoveItem = "collection_remove_item", e.CommunityEdit = "community_client_edit", e.CommunityFollow = "community_client_follow", e.CommunityModeration = "community_client_channel_moderation", e.CommunityReport = "community_client_report", e.CommunityRoleEdit = "community_client_role_edit", e.CommunityUnfollow = "community_client_unfollow", e.CompleteTransition = "benchmark_complete_transition", e.CompletedSearch = "completed_search", e.ComponentInitializing = "benchmark_component_initializing", e.ComponentInteractive = "benchmark_component_interactive", e.CustomEvent = "benchmark_custom_event", e.CrateNotificationAction = "crate_notification_action", e.DisplayAdAuction = "display_ad_auction", e.DisplayAdAuctionResponse = "display_ad_auction_response", e.CrownMenuToggle = "crown_menu_toggle", e.CrownMouseEnter = "crown_mouseenter", e.CrownInteraction = "crown_interaction", e.DashboardHelpInteraction = "dashboard_help_interaction", e.DeprioritizeVodcastToggle = "autohost_deprioritize_vodcast_toggle", e.EventFollowing = "oracle_user_notification_client", e.EventManager = "oracle_event_manager", e.EventShare = "oracle_event_share", e.ExperimentBranch = "experiment_branch", e.ExperimentBranchThrottled = "experiment_branch_throttled", e.ExtensionInstall = "extension_install_button_click", e.ExtensionStreamerComponentSettings = "extension_streamer_component_settings", e.FeaturedEventPresentation = "event_suggestions_shown", e.FeatureEducationUpdateBlock = "feature_education_update_block", e.FeatureEducationUpdateBlockImpression = "feature_education_update_block_impression", e.FeatureEducationTour = "feature_education_tour", e.FeatureEducationTourImpression = "feature_education_tour_impression", e.FeedCardImpression = "feed_client_card_impression", e.FeedCardEmbedImpression = "feed_client_card_embed_impression", e.FeedCardEmbedPlay = "feed_client_card_embed_play", e.FeedPost = "feed_client_post", e.FeedReaction = "feed_client_reaction", e.FetchStart = "benchmark_fetch_start", e.FilterClick = "filter_click", e.FFZ = "ffz_check", e.Follow = "follow", e.FrontPageCarouselClick = "frontpage_carousel_click", e.FrontPageCarouselDisplay = "carousel_display", e.FrontPageCarouselPromotionCardClick = "promotion_card_click", e.FrontPageCarouselPromotionCardView = "promotion_card_view", e.FrontPageCarouselNavButtonClick = "carousel_nav_button_click", e.FuelBuyButton = "fuel_buy_button", e.FuelGetGameClick = "fuel_get_game_click", e.FuelOfferView = "offer_view", e.FuelOfferInteraction = "offer_interaction", e.FuelSocialShare = "fuel_social_share", e.GameFollow = "follow-game", e.GameUnfollow = "unfollow-game", e.GDPRConsentBannerDisplayed = "consent_dialog_served", e.GDPRConsentSet = "consent_set", e.HearthstoneFilterAction = "hearthstone_filter_action", e.HighlighterCurationStart = "highlighter_curation_start", e.HighlighterCurationFinish = "highlighter_curation_finish", e.ItemClick = "item_click", e.ItemDisplay = "item_display", e.ItemSectionClick = "item_section_click", e.ItemSectionLoad = "item_section_load", e.LeaderboardExpandClick = "bits_leaderboard_expand_click", e.LiveDashboardInteraction = "live_dashboard_interaction", e.LoginSuccess = "auth_login_success", e.LiveDashboardStreamHealthEvent = "live_dashboard_stream_health", e.LiveDashboardStreamStats = "live_dashboard_stream_stats", e.LiveDashboardView = "live_dashboard_view", e.OnboardingEvent = "onboarding_web", e.OnboardingSurfAction = "onboarding_surf_action", e.OverwatchFilterAction = "overwatch_filter_action", e.NetworkRequest = "network_request", e.NewChatterTokenStatus = "nca_client_token_status", e.NewChatterOnboardingInteraction = "nca_onboarding_chatbox_interaction", e.NativeFacebookConnect = "native_facebook_connect", e.NotificationCenterInteraction = "notification_center_interaction", e.NotificationImpression = "notification_impression", e.NotificationInteraction = "notification_interaction", e.Pageview = "pageview", e.PanelClick = "panel_click", e.PanelImpression = "panel_display", e.PartnerAffiliateSettings = "partner_affiliate_settings", e.PassportShow = "auth_show", e.PassportHide = "auth_exit", e.PassportTabClick = "passport_tab_click", e.PaymentFormInteraction = "payment_form_interaction", e.PlayerRecShow = "player_rec_show", e.PlayerShowFeatured = "player_show_featured", e.PlayerRecSelect = "player_rec_select", e.PlayerRecAutoplay = "player_rec_autoplay", e.PresenceClick = "friend_presence_click", e.PresenceToggle = "rich_presence_toggle", e.PrimeLootPagePageview = "prime_loot_page_pageview", e.PrimeLootPageTryPrimeClick = "prime_loot_page_try_prime_click", e.PrimeOfferInteraction = "prime_offer_interaction", e.RaidPromptJoin = "raid_prompt_join", e.RaidPromptLeave = "raid_prompt_leave", e.RaidPromptImpression = "raid_prompt_impression", e.RaidUpsellClick = "raid_upsell_click", e.RaidUpsellImpression = "raid_upsell_impression", e.RecRequestClient = "rec_request_client", e.ReportFlowAction = "report_oldmodal_interaction", e.ReportWizardFlowAction = "report_flow_action", e.ReportModalChange = "report_modal_change", e.SearchQuery = "search_query", e.ShareItem = "share_item", e.SideNavChannelClick = "sidenav_channel_click", e.SideNavDetails = "sidenav_details", e.SideNavLoadMore = "sidenav_load_more", e.SimilarHostToggle = "autohost_similar_channels_toggle", e.SignupSuccess = "auth_signup_success", e.SiteLayoutMod = "site_layout_mod", e.SiteToggle = "twilight_site_toggle", e.StreamBookmarkListDownload = "stream_bookmark_list_download", e.StreamBookmarkClick = "stream_bookmark_click", e.StreamSummaryBannerClick = "summary_banner_click", e.StreamSummaryChartView = "stream_summary_chart_view", e.StreamSummaryInteraction = "stream_summary_interaction", e.StreamSummarySpotlightImpression = "summary_spotlight_impression", e.StreamSummarySpotlightClick = "summary_spotlight_click", e.StoreMerchClick = "store_item_select", e.StoreMerchView = "store_item_view", e.Subscription = "subscribe_button", e.SubsLandingStreamerClick = "subs_landing_streamer_click", e.SubscribedSideNavChannelClick = "subscribed_sidenav_channel_click", e.TeamHostToggle = "autohost_team_toggle", e.ThemeChange = "dark_mode_toggle", e.Unfollow = "unfollow", e.UserLongtask = "user_longtask", e.VerifyEmailBar = "verify_email_bar", e.VideoChatSettingChanged = "video_chat_setting_changed", e.VideoShare = "video_share", e.VODDownloadClick = "vod_download_click", e.VODExportClick = "vod_export_click", e.VODPageviewMetadata = "vod_pageview_metadata", e.WatchPartyAddVOD = "watch_party_add_vod", e.WatchPartyEnd = "watch_party_end", e.WatchPartyOtherVOD = "watch_party_other_vod", e.WatchPartyReorder = "watch_party_reorder", e.WatchPartyRemoveVOD = "watch_party_remove_vod", e.WatchPartyStart = "watch_party_start", e.WhisperAllThreadsMod = "chat_convo_mod_global", e.WhisperIgnoreUser = "chat_ignore_client", e.WhisperReceived = "whisper_received", e.WhisperSearchClick = "search_click", e.WhisperSent = "whisper", e.WhisperThreadCreate = "chat_convo_create", e.WhisperThreadMod = "chat_convo_mod"
                }(i || (i = {}))
        },
        rqzT: function(e, t, n) {
            "use strict";
            var i = n("/MKj"),
                r = n("fvjX"),
                a = n("1/iK"),
                o = n("y5D0"),
                s = n("CzFK"),
                l = n("l1Uh"),
                c = n("mrSG"),
                d = n("q1tI"),
                u = n("/7QA"),
                p = n("GnwI"),
                m = n("Ue10"),
                h = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleClick = function() {
                            t.props.threadID ? (t.props.onClick && t.props.onClick(), t.props.openThread(t.props.threadID)) : t.props.login()
                        }, t
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        var e = !this.props.isPopout,
                            t = Object(u.d)("Whisper", "WhisperButton"),
                            n = d.createElement(m.v, {
                                disabled: !e,
                                type: this.props.buttonType,
                                onClick: this.handleClick,
                                "data-a-target": "usercard-whisper-button",
                                "data-test-selector": "whisper-button"
                            }, t);
                        return e ? n : d.createElement(m.Jb, {
                            align: m.Kb.Left,
                            direction: m.Lb.Top,
                            label: Object(u.d)("Whispers are disabled in popout chat", "WhispersDisabledText")
                        }, n)
                    }, t
                }(d.Component),
                f = Object(r.d)(Object(p.c)("WhisperButton", {
                    autoReportInteractive: !0
                }))(h);
            var g = Object(i.b)(null, function(e) {
                return Object(r.b)({
                    login: function() {
                        return Object(o.f)(a.a.WhisperButton)
                    },
                    openThread: function(e) {
                        return Object(s.l)({
                            collapsed: !1,
                            threadID: e,
                            ignoreCollapseIfOpen: !0
                        }, Object(l.a)())
                    }
                }, e)
            })(f);
            n.d(t, "a", function() {
                return g
            })
        },
        ruaE: function(e, t, n) {},
        rwxT: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("EMHe"),
                l = n("Ue10");
            ! function(e) {
                e.SaveButton = "save-settings-footer__save-button", e.CancelButton = "save-settings-footer__cancel-button"
            }(i || (i = {}));
            var c = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return r.d(t, e), t.prototype.render = function() {
                    var e = null;
                    return this.props.onClickCancel && (e = a.createElement(l.Ma, {
                        padding: {
                            left: 1
                        },
                        display: l.R.Inline
                    }, a.createElement(l.v, {
                        disabled: !(this.props.status === s.b.DirtyChanges || this.props.status === s.b.Error),
                        type: l.B.Text,
                        "data-test-selector": i.CancelButton,
                        "data-a-target": this.props.cancelDataATarget,
                        onClick: this.props.onClickCancel
                    }, Object(o.d)("Cancel", "SaveSettingsFooter")))), a.createElement(l.Ma, null, a.createElement(s.a, {
                        status: this.props.status,
                        onClick: this.props.onClickSave,
                        "data-a-target": this.props.saveDataATarget || "save-user-settings-button",
                        "data-test-selector": i.SaveButton
                    }, this.props.status === s.b.Error ? Object(o.d)("Failed to save settings. Try again.", "SaveButton") : Object(o.d)("Save Changes", "SaveSettingsFooter")), e)
                }, t
            }(a.Component);
            n.d(t, !1, function() {
                return i
            }), n.d(t, "a", function() {
                return c
            })
        },
        ryLB: function(e, t, n) {},
        sAKk: function(e, t, n) {},
        sNlA: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("q1tI"),
                r = n("dtw8"),
                a = n("/7QA"),
                o = n("y5D0"),
                s = n("SpjR"),
                l = n("kRBY"),
                c = n("mrSG"),
                d = n("2xye");
            var u = n("/MKj"),
                p = n("XDQu"),
                m = n("eO8H"),
                h = n("2+sX"),
                f = n("YEj9"),
                g = n("ZS2+"),
                v = n("atdg"),
                b = n("76Lv"),
                y = n("MPw5"),
                k = n("fvjX"),
                S = n("2F2A"),
                w = n("cr+I"),
                E = n("yR8l"),
                C = n("zB42"),
                N = n("cTNz"),
                T = n("KxT4"),
                _ = n("YUvD"),
                R = n("WroD"),
                O = "https://www.googletagservices.com/tag/js/gpt.js",
                I = "https://c.amazon-adsystem.com/aax2/apstag.js",
                D = 3036,
                P = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            isError: !1
                        }, t.logger = a.o.logger.withCategory("ad-manager"), t.injectAdTag = function(e) {
                            return c.b(t, void 0, void 0, function() {
                                return c.e(this, function(t) {
                                    return this.containerRef && 0 === this.containerRef.children.length ? (this.isInjected = !0, [2, Promise.all([this.injectGoogleTag(e), this.injectApsTag(e)])]) : [2]
                                })
                            })
                        }, t.injectApsTag = function(e) {
                            if (e.gdpr.blockConsentRequiredContent) return t.logger.debug("do no have user consent, skipping ApsTag"), Promise.resolve();
                            var n, i, r = new Promise(function(e, t) {
                                    n = e, i = t
                                }),
                                o = {
                                    pubID: D,
                                    adServer: "googletag",
                                    bidTimeout: 2e3
                                },
                                s = document.createElement("script");
                            return s.async = !0, s.src = I, s.onload = function() {
                                window.apstag && window.apstag.init && window.apstag.init(o, n)
                            }, s.onerror = function() {
                                a.o.adBlockDetector.setBlockDetectedToTrue(), i()
                            }, t.containerRef && t.containerRef.appendChild(s), r
                        }, t.injectGoogleTag = function(e) {
                            var n = document.createElement("script");
                            n.async = !0, n.src = O, t.containerRef && t.containerRef.appendChild(n), n.onerror = function() {
                                return a.o.adBlockDetector.setBlockDetectedToTrue()
                            }, y.a.initialize(N.i);
                            var i = w.parse(window.location.search).campaign || "";
                            return i && t.logger.debug("Setting campaign", i), y.a.setAppWideTracking("campaign", i), y.a.setAppWideTracking("server", a.a.buildType === C.a.Production ? "production" : "dev"), y.a.setAppWideTracking("salt", "true"), y.a.setAppWideTracking("kuid", window.Krux && window.Krux.user || ""), y.a.setAppWideTracking("loggedin", e.data.currentUser ? "true" : "false"), y.a.setRequestPersonalizedAds(!e.gdpr.blockConsentRequiredContent), e.trackingSet(), t.logger.debug("Tracking is set"), Promise.resolve()
                        }, t.setContainerRef = function(e) {
                            return t.containerRef = e
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            a.o.stats.recordComponentError("AdManager"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentDidMount = function() {
                        return c.b(this, void 0, void 0, function() {
                            var e = this;
                            return c.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return this.shouldInjectAdTags(this.props) ? [4, this.injectAdTag(this.props).catch(function() {
                                            e.logger.warn("Failed to attach tags")
                                        })] : [3, 2];
                                    case 1:
                                        t.sent(), t.label = 2;
                                    case 2:
                                        return [2]
                                }
                            })
                        })
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        return c.b(this, void 0, void 0, function() {
                            var t = this;
                            return c.e(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return this.shouldInjectAdTags(e) ? [4, this.injectAdTag(e).catch(function() {
                                            t.logger.warn("Failed to attach tags")
                                        })] : [3, 2];
                                    case 1:
                                        n.sent(), n.label = 2;
                                    case 2:
                                        return this.shouldUpdatePersonalization(e, this.props) && y.a.setRequestPersonalizedAds(!e.gdpr.blockConsentRequiredContent), [2]
                                }
                            })
                        })
                    }, t.prototype.shouldComponentUpdate = function() {
                        return !1
                    }, t.prototype.render = function() {
                        return this.state.isError ? null : i.createElement("div", {
                            ref: this.setContainerRef
                        })
                    }, t.prototype.shouldInjectAdTags = function(e) {
                        var t = !e.data.loading && !e.data.error,
                            n = e.data.currentUser && (e.data.currentUser.hasTurbo || e.data.currentUser.hasPrime),
                            i = e.gdpr.status !== T.b.Loading;
                        return !this.isInjected && t && i && !n
                    }, t.prototype.shouldUpdatePersonalization = function(e, t) {
                        return this.isInjected && e.gdpr.blockConsentRequiredContent !== t.gdpr.blockConsentRequiredContent
                    }, t
                }(i.Component),
                x = Object(k.d)(Object(E.a)(R), Object(_.a)(T.c.Amazon))(P);
            var L = Object(u.b)(null, function(e) {
                    return Object(k.b)({
                        trackingSet: S.b
                    }, e)
                })(x),
                F = n("gOYK"),
                M = n("d2C5"),
                A = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.logger = a.o.logger.withCategory("browser-push-notifications"), t
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        return c.b(this, void 0, void 0, function() {
                            var e;
                            return c.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        if (!Object(M.a)()) return this.logger.debug("unsupported browser"), [2];
                                        t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, , 4]), [4, F.a.initialize()];
                                    case 2:
                                        return t.sent(), [3, 4];
                                    case 3:
                                        return e = t.sent(), this.logger.error(e, "push manager initialization unexpectedly failed"), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(i.Component),
                U = n("eW5E"),
                B = n("5zC2"),
                j = n("GnwI"),
                z = n("Ue10"),
                W = (n("LGxt"), function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            error: !1,
                            isDismissed: !1
                        }, t.dismissBarClickHandler = function(e) {
                            e && e.stopPropagation(), t.setState({
                                isDismissed: !0
                            })
                        }, t.messageListener = function() {
                            t.setState({
                                isDismissed: !1,
                                error: !0
                            })
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        a.o.benchmarking.getRootLatencyTracker().addPageLoadFailedListener(this.messageListener)
                    }, t.prototype.componentWillUnmount = function() {
                        a.o.benchmarking.getRootLatencyTracker().removePageLoadFailedListener(this.messageListener)
                    }, t.prototype.render = function() {
                        if (!this.state.error || this.state.isDismissed) return null;
                        var e = Object(a.d)("Warning: This page does not report interactive! See the <x:link>Latency Tracking documentation</x:link> to resolve this", {
                            "x:link": function(e) {
                                return i.createElement("a", {
                                    className: "red-banner__link",
                                    key: "latency-tracking-link",
                                    href: "https://git-aws.internal.justin.tv/pages/twilight/twilight-docs/docs/guides/latency-tracking.html",
                                    target: "_blank"
                                }, e)
                            }
                        }, "Namespace");
                        return i.createElement(z.qb, {
                            className: "red-banner",
                            display: z.R.Flex,
                            justifyContent: z.La.Center,
                            alignItems: z.c.Center,
                            elevation: 1,
                            padding: 1
                        }, i.createElement(z.qb, {
                            display: z.R.Flex,
                            alignItems: z.c.Center,
                            margin: {
                                right: 1
                            },
                            padding: {
                                right: .5
                            },
                            color: z.K.Overlay
                        }, i.createElement(z.fb, {
                            asset: z.gb.NotificationWarning,
                            type: z.hb.Inherit
                        })), i.createElement(z.Q, {
                            fontSize: z.V.Size5,
                            color: z.K.Overlay
                        }, e), i.createElement(z.qb, {
                            className: "red-banner__dismiss",
                            position: z.Wa.Absolute,
                            attachRight: !0,
                            margin: {
                                right: 2
                            },
                            padding: {
                                x: 1,
                                y: .5
                            },
                            color: z.K.Overlay
                        }, i.createElement(z.O, {
                            type: z.P.Inherit,
                            onClick: this.dismissBarClickHandler,
                            hoverColorInherit: !0,
                            hoverUnderlineNone: !0
                        }, i.createElement(z.fb, {
                            asset: z.gb.Close,
                            type: z.hb.Inherit
                        }))))
                    }, t
                }(i.Component)),
                V = "legacy_routes_enabled",
                H = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.isEnabled = !1, n.onHistoryChange = function(e, t) {
                            n.isEnabled ? "REPLACE" !== t ? e && e.pathname ? (n.logger.debug("Location changed", {
                                path: e.pathname
                            }), n.legacyRoutes.forEach(function(t) {
                                try {
                                    if (e.pathname.match(t)) {
                                        n.logger.debug("Found legacy route. Reloading...");
                                        var i = "" !== e.search ? w.parse(e.search) : {};
                                        i["from-redirect"] = "true";
                                        var r = w.stringify(i),
                                            o = a.a.buildType === C.a.Dev ? window.location.host : window.location.hostname,
                                            s = window.location.protocol + "//" + o + e.pathname + "?" + r;
                                        return n.logger.debug("Redirecting to legacy route", {
                                            newUrl: s
                                        }), void window.location.replace(s)
                                    }
                                } catch (e) {
                                    a.j.withCategory("legacy").error(e, "Unable to determine legacy reload match", {
                                        regex: t
                                    })
                                }
                            })) : n.logger.debug("Unable to process history change. Path is null or empty.") : n.logger.debug("Skipping legacy route processing, due to history replace.") : n.logger.debug("Legacy routing not enabled.")
                        }, n.processRedirectParam = function(e) {
                            if (e && e.pathname && e.search) {
                                var t = "" !== e.search ? w.parse(e.search) : {};
                                if (t["from-redirect"]) {
                                    delete t["from-redirect"];
                                    var i = w.stringify(t),
                                        r = "";
                                    i.length > 0 && (r = "?" + i), n.props.history.replace({
                                        pathname: e.pathname,
                                        hash: e.hash,
                                        search: r
                                    })
                                }
                            }
                        }, n.isEnabled = a.b.get(V, !1), n.logger = a.j.withCategory("legacy-routes"), n.legacyRoutes = n.buildRoutes(), n.props.history.listen(n.onHistoryChange), n
                    }
                    return c.d(t, e), t.prototype.render = function() {
                        return null
                    }, t.prototype.componentDidMount = function() {
                        this.processRedirectParam(this.props.history.location)
                    }, t.prototype.buildRoutes = function() {
                        if (!this.isEnabled) return [];
                        this.logger.debug("Building legacy routes...");
                        var e = a.b.get("legacy_routes", []),
                            t = [];
                        if (!e || 0 === e.length) return this.logger.debug("No legacy routes found in settings."), t;
                        for (var n = 0, i = e; n < i.length; n++) {
                            var r = i[n];
                            try {
                                var o = new RegExp(r, "i");
                                t.push(o)
                            } catch (e) {
                                this.logger.debug("Failed to parse route!", {
                                    val: r,
                                    err: e
                                })
                            }
                        }
                        return this.logger.debug("Done building legacy routes!", {
                            count: t.length
                        }), t
                    }, t
                }(i.Component),
                G = n("NT6a"),
                q = n("HuHG"),
                Q = n("Ar2k"),
                K = n("Grq2"),
                Y = "update_chunks",
                X = "twilight.update_manager.known_builds",
                $ = /^assets\/(.+)-.+\.(.+?)$/i;

            function J(e) {
                var t = $.exec(e);
                if (t) return t[1] + "." + t[2]
            }

            function Z(e, t) {
                return c.b(this, void 0, void 0, function() {
                    var n, i, r, o, s, l, d, u, p, m, h, f;
                    return c.e(this, function(c) {
                        switch (c.label) {
                            case 0:
                                for (n = a.o.dynamicSettings.get(Y, []), i = {
                                        headers: new Headers({
                                            "Content-Type": "application/octet-stream"
                                        })
                                    }, r = [], o = 0, s = e; o < s.length; o++) l = s[o], (d = J(l)) && n.includes(d) && r.push(fetch("" + a.o.config.cdnURL + l, i));
                                return 0 === r.length ? [2, !1] : [4, Promise.all(r)];
                            case 1:
                                for (u = c.sent(), p = !1, m = 0, h = u; m < h.length; m++)(f = h[m]).ok || (p = !0, t.warn("Failed to preload chunk.", {
                                    status: f.status,
                                    url: f.url
                                }));
                                return [2, !p]
                        }
                    })
                })
            }

            function ee() {
                return new Set(a.m.get(X, [])).add(a.o.config.buildID)
            }

            function te(e) {
                a.m.set(X, Array.from(ee().add(e)))
            }
            var ne = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            newBuilds: new Set,
                            rejectedBuilds: new Set,
                            shouldReloadOnTransition: !1
                        }, t.knownBuilds = ee(), t.logger = a.o.logger.withCategory("update-manager"), t.handleHistoryChange = function() {
                            t.state.shouldReloadOnTransition && window.location.reload(!0)
                        }, t.processManifest = function() {
                            return c.b(t, void 0, void 0, function() {
                                var e, t, n;
                                return c.e(this, function(i) {
                                    switch (i.label) {
                                        case 0:
                                            return i.trys.push([0, 11, , 12]), [4, function(e) {
                                                return c.b(this, void 0, void 0, function() {
                                                    var t, n;
                                                    return c.e(this, function(i) {
                                                        switch (i.label) {
                                                            case 0:
                                                                return a.o.config.manifestURL ? [4, fetch(a.o.config.manifestURL)] : (e.error(new Error("Unable to download manifest: The manifest URL is not set."), "Unable to download manifest: The manifest URL is not set."), [2]);
                                                            case 1:
                                                                if (!(t = i.sent()).ok) return e.error(new Error("Unable to download manifest"), "Unable to download manifest.", {
                                                                    status: t.status
                                                                }), [2];
                                                                i.label = 2;
                                                            case 2:
                                                                return i.trys.push([2, 4, , 5]), [4, t.json()];
                                                            case 3:
                                                                return [2, i.sent()];
                                                            case 4:
                                                                return n = i.sent(), e.error(n, "Unable to parse manifest."), [3, 5];
                                                            case 5:
                                                                return [2]
                                                        }
                                                    })
                                                })
                                            }(this.logger)];
                                        case 1:
                                            return (e = i.sent()) ? this.knownBuilds.has(e.release.buildId) || this.state.rejectedBuilds.has(e.release.buildId) ? [3, 5] : this.state.newBuilds.has(e.release.buildId) ? [3, 3] : [4, Z(e.release.files, this.logger)] : (this.logger.debug("Manifest is missing. Skipping preload", {
                                                currentBuildID: a.o.config.buildID
                                            }), [2]);
                                        case 2:
                                            return i.sent() && (this.logger.debug("Preloading release chunks succeeded", {
                                                currentBuildID: a.o.config.buildID,
                                                releaseBuildID: e.release.buildId
                                            }), this.setState(function(t) {
                                                return te(e.release.buildId), {
                                                    newBuilds: new Set(t.newBuilds).add(e.release.buildId),
                                                    shouldReloadOnTransition: !e.canary || a.o.config.buildID !== e.canary.buildId
                                                }
                                            })), [3, 4];
                                        case 3:
                                            e.canary && a.o.config.buildID === e.canary.buildId || this.setState({
                                                shouldReloadOnTransition: !0
                                            }), i.label = 4;
                                        case 4:
                                            return [3, 6];
                                        case 5:
                                            this.setState(function(t) {
                                                return {
                                                    rejectedBuilds: new Set(t.rejectedBuilds).add(e.release.buildId)
                                                }
                                            }), i.label = 6;
                                        case 6:
                                            return e.canary ? (t = e.canary.buildId, this.knownBuilds.has(t) || this.state.rejectedBuilds.has(t) ? [3, 9] : this.state.newBuilds.has(t) ? [3, 8] : [4, Z(e.canary.files, this.logger)]) : [3, 10];
                                        case 7:
                                            i.sent() && (this.logger.debug("Preloading canary chunks succeeded", {
                                                currentBuildID: a.o.config.buildID,
                                                canaryBuildID: t
                                            }), this.setState(function(e) {
                                                return te(t), {
                                                    newBuilds: new Set(e.newBuilds).add(t)
                                                }
                                            })), i.label = 8;
                                        case 8:
                                            return [3, 10];
                                        case 9:
                                            this.setState(function(e) {
                                                return {
                                                    rejectedBuilds: new Set(e.rejectedBuilds).add(t)
                                                }
                                            }), i.label = 10;
                                        case 10:
                                            return [3, 12];
                                        case 11:
                                            return n = i.sent(), this.logger.error(n, "Unable to update chunks"), [3, 12];
                                        case 12:
                                            return [2]
                                    }
                                })
                            })
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentDidMount = function() {
                        a.o.dynamicSettings.get("update_manager_enabled", !1) ? a.o.config.manifestURL ? (this.historyUnlisten = a.o.history.listen(this.handleHistoryChange), this.processManifestInterval = setInterval(this.processManifest, 6e5), this.processManifest()) : this.logger.debug("Maniest URL is not set. Chunks will not be preloaded.") : this.logger.debug("Update manager not enabled. Chunks will not be preloaded.")
                    }, t.prototype.componentWillUnmount = function() {
                        clearInterval(this.processManifestInterval), this.historyUnlisten && this.historyUnlisten()
                    }, t.prototype.shouldComponentUpdate = function() {
                        return !1
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(i.Component),
                ie = n("xlgz"),
                re = n("ZPFX");
            var ae = Object(u.b)(function(e) {
                    return {
                        isLoggedIn: Object(l.e)(e),
                        firstPageLoaded: e.session.firstPageLoaded,
                        theatreModeEnabled: e.ui.theatreModeEnabled
                    }
                })(re.a),
                oe = (n("cGJr"), g.a.wrap(function() {
                    return n.e(39).then(n.bind(null, "dumY"))
                }, "CodeRedemptionPage")),
                se = g.a.wrap(function() {
                    return n.e(38).then(n.bind(null, "mdlQ"))
                }, "DashboardRoot"),
                le = g.a.wrap(function() {
                    return Promise.all([n.e(32), n.e(33), n.e(0), n.e(37)]).then(n.bind(null, "Pnqn"))
                }, "TeamsDashboardRoot"),
                ce = g.a.wrap(function() {
                    return n.e(36).then(n.bind(null, "hy6r"))
                }, "TeamsLandingPage"),
                de = g.a.wrap(function() {
                    return n.e(35).then(n.bind(null, "8n14"))
                }, "OnboardingRoot"),
                ue = function(e) {
                    return i.createElement(m.c, {
                        to: "/teams/" + e.match.params.teamName + "/dashboard"
                    })
                },
                pe = function(e) {
                    return i.createElement(m.c, {
                        to: "/team/" + e.match.params.teamName
                    })
                },
                me = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.onHistoryChange = function(e, n) {
                            "REPLACE" !== n && (t.props.rootLatencyTracker.reset(), y.a.clearAppWideTracking("game"), y.a.clearAppWideTracking("chan"), y.a.clearAppWideTracking("pagetype"))
                        }, t
                    }
                    return c.d(t, e), t.prototype.componentWillMount = function() {
                        this.props.history.listen(this.onHistoryChange), a.o.setPageTitle()
                    }, t.prototype.componentDidMount = function() {
                        this.props.latencyTracking.reportInteractive();
                        var e = Object(b.c)(this.props.theme);
                        e && document.body.classList.add(e)
                    }, t.prototype.componentDidUpdate = function(e) {
                        if (this.props.location !== e.location && window.scrollTo(0, 0), this.props.latencyTracking.reportInteractive(), e.theme !== this.props.theme) {
                            var t = Object(b.c)(e.theme),
                                n = Object(b.c)(this.props.theme);
                            t && document.body.classList.remove(t), n && document.body.classList.add(n)
                        }
                    }, t.prototype.render = function() {
                        return i.createElement(z.Ma, {
                            className: "twilight-root",
                            overflow: z.Pa.Hidden,
                            display: z.R.Flex,
                            flexDirection: z.T.Column,
                            flexWrap: z.U.NoWrap,
                            position: z.Wa.Absolute,
                            attachTop: !0,
                            attachRight: !0,
                            attachBottom: !0,
                            attachLeft: !0
                        }, a.o.benchmarking.toolsEnabled && i.createElement(W, null), i.createElement(T.a, null), i.createElement(L, null), i.createElement(U.a, null), i.createElement(B.b, null), i.createElement(m.e, null, i.createElement(m.d, {
                            path: "/hi",
                            component: de
                        }), i.createElement(m.d, {
                            path: "/(manager|dashboard)/:pageName?",
                            component: f.a
                        }), i.createElement(m.d, {
                            path: "/event/:teamName",
                            component: pe
                        }), i.createElement(m.d, {
                            exact: !0,
                            path: "/team/:teamName/edit",
                            render: ue
                        }), i.createElement(m.d, {
                            path: "/team/:teamName",
                            component: ce
                        }), i.createElement(m.d, {
                            path: "/teams/:teamName/dashboard/:pageName?",
                            component: le
                        }), i.createElement(m.d, {
                            path: "/(claim|redeem)",
                            component: oe
                        }), i.createElement(m.d, {
                            path: "/:channelName/manager",
                            component: se
                        }), i.createElement(m.d, {
                            path: "/:channelName/dashboard/:pageName?",
                            component: se
                        }), i.createElement(m.d, {
                            path: "/",
                            component: ae
                        })), i.createElement(h.a, null), i.createElement(Q.b, null), i.createElement(v.a, null), this.props.firstPageLoaded && i.createElement(q.a, null), this.props.firstPageLoaded && i.createElement(K.a, {
                            history: this.props.history
                        }), this.props.isLoggedIn && i.createElement(ie.a, null), a.o.benchmarking.toolsEnabled && i.createElement(G.a, null), this.props.firstPageLoaded && i.createElement(H, {
                            history: this.props.history
                        }), this.props.firstPageLoaded && i.createElement(ne, null), this.props.firstPageLoaded && i.createElement(A, null))
                    }, t
                }(i.Component),
                he = Object(j.c)("Root", {
                    isRoot: !0
                })(me);
            var fe, ge, ve, be = Object(u.b)(function(e) {
                    return {
                        firstPageLoaded: e.session.firstPageLoaded,
                        isLoggedIn: Object(l.e)(e),
                        theme: Object(p.a)(e)
                    }
                })(he),
                ye = Object(r.f)(be);

            function ke() {
                a.o.mount(i.createElement(r.d, {
                    history: a.o.history
                }, i.createElement(ye, null)), document.getElementById("root"))
            }
            a.o.integrations.desklight && (fe = a.o.integrations.desklight, ge = [], fe.logger && function(e) {
                c.b(this, void 0, void 0, function() {
                    var t, i;
                    return c.e(this, function(r) {
                        switch (r.label) {
                            case 0:
                                return r.trys.push([0, 2, , 3]), [4, n.e(34).then(n.bind(null, "xfmR"))];
                            case 1:
                                return t = r.sent(), a.o.logger.addMessageListener(t.desklightLogger(e)), [3, 3];
                            case 2:
                                return i = r.sent(), a.o.logger.error(i, "Error loading the Desklight Logger"), [3, 3];
                            case 3:
                                return [2]
                        }
                    })
                })
            }(fe.logger), fe.window && (ge.push(fe.window.onBack(function() {
                return a.o.history.goBack()
            })), ge.push(fe.window.onForward(function() {
                return a.o.history.goForward()
            }))), window.addEventListener("unload", function() {
                for (var e = 0, t = ge; e < t.length; e++)(0, t[e])()
            }), a.o.tracking.setPlatform(d.SpadePlatform.Desktop));
            var Se = !1;
            ve = a.o.store.getReduxStore().subscribe(function() {
                var e = a.o.store.getState();
                !Se && Object(l.f)(e) && (Se = !0, ve(), a.a.optimizedBuild ? ke() : setTimeout(ke, 500))
            }), Object(s.a)(), a.o.store.dispatch(Object(o.e)())
        },
        sSlw: function(e, t, n) {
            "use strict";
            var i, r = n("mrSG"),
                a = n("q1tI"),
                o = n("/7QA"),
                s = n("Ue10"),
                l = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.state = {
                            content: null,
                            isError: !1
                        }, n.logger = o.j.withCategory("StickyHeaderRoot"), n.displayContent = function(e) {
                            n.setState({
                                content: e
                            })
                        }, n.hideContent = function() {
                            n.setState({
                                content: null
                            })
                        }, i && n.logger.error(new Error("StickyHeaderRoot is already mounted."), "StickyHeaderRoot is already mounted. There should only be one of these mounted at a time."), i = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidCatch = function(e, t) {
                        var n = this;
                        this.setState({
                            isError: !0
                        }, function() {
                            o.o.stats.recordComponentError("StickyHeaderRoot"), n.logger.error(e, "A unhandled exception occurred in the component hierarchy", {
                                info: t
                            })
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        i = null
                    }, t.prototype.render = function() {
                        return this.state.isError || !this.state.content ? null : a.createElement(s.Ma, null, this.state.content)
                    }, t
                }(a.Component),
                c = null,
                d = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        if (c) {
                            var i = "There may only be one StickyHeader mounted at a time.";
                            o.j.error(new Error(i), i)
                        }
                        return c = n, n
                    }
                    return r.d(t, e), t.prototype.componentDidMount = function() {
                        i && i.displayContent(this.props.children)
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        i && (e.children ? i.displayContent(e.children) : i.hideContent())
                    }, t.prototype.componentWillUnmount = function() {
                        i && i.hideContent(), c = null
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(a.Component);
            n.d(t, "a", function() {
                return d
            }), n.d(t, "b", function() {
                return l
            })
        },
        sWJ6: function(e, t, n) {},
        sg0o: function(e, t, n) {
            e.exports = n.p + "assets/cookie_1x-f162930eb94991733b56.png"
        },
        sgJZ: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "FollowButton_FollowEvent_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "id"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "ID"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "id"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "isPartner"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "stream"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hosting"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "stream"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "game"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "name"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 157
                }
            };
            n.loc.source = {
                body: "query FollowButton_FollowEvent_User($id: ID!) {\nuser(id: $id) {\nid\nisPartner\nstream {\nid\ngame {\nid\nname\n}\n}\nhosting {\nid\nstream {\nid\ngame {\nid\nname\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        siWu: function(e, t, n) {},
        ssbj: function(e, t, n) {},
        "szP+": function(e, t, n) {
            "use strict";
            var i = n("fvjX"),
                r = n("/7QA"),
                a = n("mrSG"),
                o = n("G1cX"),
                s = n("CzFK"),
                l = 234,
                c = 310;

            function d(e) {
                if (0 === e.openedIDs.length) return 0;
                for (var t = 0, n = 0, i = e.openedIDs; n < i.length; n++) {
                    var r = i[n],
                        a = e.byID[r];
                    a.hidden || (t += a.collapsed ? l : c)
                }
                return t
            }

            function u(e) {
                var t = e.openedIDs.slice(),
                    n = t.pop();
                return n && e.focusedID === n && t.length > 0 && (t.pop(), t.push(n)), o(e, function(e) {
                    return e.openedIDs
                }, function() {
                    return t
                })
            }

            function p(e, t) {
                var n = e.orderedIDs.filter(function(t) {
                    return !e.openedIDs.includes(t)
                });
                return n.length > 0 ? m(e, n[0], t) : e
            }

            function m(e, t, n) {
                var i = n - d(e),
                    r = a.a({}, e);
                return r.openedIDs.includes(t) || (i < c && (r = u(r)), r = o(r, function(e) {
                    return e.openedIDs
                }, function(e) {
                    return e.push(t), e
                })), r
            }

            function h(e, t, n) {
                if (!e.byID[t]) return e;
                var i = o(e, function(e) {
                    return e.byID
                }, function(e) {
                    return e[t].collapsed = !1, e
                });
                return i.focusedID = t, d(e) > n && (i = u(i)), i
            }
            var f = n("WSPL");
            n.d(t, "b", function() {
                return v
            }), n.d(t, "a", function() {
                return y
            });
            var g = Object(i.c)({
                display: function(e, t) {
                    switch (void 0 === e && (e = {
                        byID: {},
                        orderedIDs: [],
                        openedIDs: [],
                        focusedID: ""
                    }), t.type) {
                        case s.f:
                            var n = (r = a.a({}, e)).byID[t.data.threadID],
                                i = r.openedIDs.includes(t.data.threadID);
                            return n || (r = o(r, function(e) {
                                return e.orderedIDs
                            }, function(e) {
                                return e.push(t.data.threadID), e
                            }), r = o(r, function(e) {
                                return e.byID
                            }, function(e) {
                                return e[t.data.threadID] = t.data, e
                            })), r.openedIDs.includes(t.data.threadID) && !r.byID[t.data.threadID].hidden || (r.byID[t.data.threadID].hidden = t.data.hidden), t.data.ignoreCollapseIfOpen || t.data.collapsed || (r.focusedID = t.data.threadID), r = m(r, t.data.threadID, t.contentWidth), (!i || i && !t.data.ignoreCollapseIfOpen) && (t.data.collapsed || (r = h(r, t.data.threadID, t.contentWidth))), r;
                        case s.b:
                            if (!e.byID[t.threadID]) return e;
                            var r = o(e, function(e) {
                                return e.byID
                            }, function(e) {
                                return delete e[t.threadID], e
                            });
                            return r = o(r, function(e) {
                                return e.orderedIDs
                            }, function(e) {
                                return e.filter(function(e) {
                                    return e !== t.threadID
                                })
                            }), r = o(r, function(e) {
                                return e.openedIDs
                            }, function(e) {
                                return e.filter(function(e) {
                                    return e !== t.threadID
                                })
                            }), e.focusedID === t.threadID && (r.focusedID = r.openedIDs[0]), p(r, t.contentWidth);
                        case s.c:
                            return e.byID[t.threadID] ? (e.focusedID === t.threadID && (e.focusedID = ""), o(e, function(e) {
                                return e.byID
                            }, function(e) {
                                return e[t.threadID].collapsed = !0, e
                            })) : e;
                        case s.d:
                            return h(e, t.threadID, t.contentWidth);
                        case s.e:
                            return o(e, function(e) {
                                return e.focusedID
                            }, function() {
                                return t.threadID
                            });
                        case s.g:
                            return o(e, function(e) {
                                return e.focusedID
                            }, function(e) {
                                return e === t.threadID ? "" : e
                            });
                        case s.a:
                            var l = d(e);
                            if (l > t.contentWidth) {
                                if (e.openedIDs.length <= 1) return e;
                                for (var f = a.a({}, e); l > t.contentWidth && f.openedIDs.length > 1;) l = d(f = u(f));
                                return f
                            }
                            if (t.contentWidth - l >= c) {
                                var g = Math.floor((t.contentWidth - l) / c),
                                    v = Math.min(g, e.orderedIDs.length - e.openedIDs.length);
                                if (0 === v) return e;
                                f = a.a({}, e);
                                for (var b = 0; b < v; b++)
                                    if ((f = p(f, t.contentWidth)).openedIDs.length > 1)
                                        for (var y = f.openedIDs, k = y.length, S = 0, w = f.orderedIDs; S < w.length; S++) {
                                            var E = w[S];
                                            if (y[k - 1] === E) {
                                                var C = y.splice(k - 2, 1);
                                                y.push(C[0]);
                                                break
                                            }
                                            if (y[k - 2] === E) break
                                        }
                                    return f
                            }
                            return e;
                        default:
                            return e
                    }
                },
                notifications: function(e, t) {
                    switch (void 0 === e && (e = {
                        byThreadID: {}
                    }), t.type) {
                        case f.a:
                            return e.byThreadID[t.threadID] ? o(e, function(e) {
                                return e.byThreadID[t.threadID]
                            }, function(e) {
                                return [{
                                    threadID: t.threadID,
                                    afterMessageID: t.afterMessageID,
                                    content: t.content
                                }].concat(e)
                            }) : o(e, function(e) {
                                return e.byThreadID
                            }, function(e) {
                                return a.a(((n = {})[t.threadID] = [{
                                    threadID: t.threadID,
                                    afterMessageID: t.afterMessageID,
                                    content: t.content
                                }], n), e);
                                var n
                            });
                        default:
                            return e
                    }
                }
            });

            function v(e, t) {
                return e.whispers ? e.whispers.display.byID[t] : null
            }
            var b = [];

            function y(e, t) {
                return e.whispers.notifications.byThreadID[t] || b
            }
            r.o.store.registerReducer("whispers", g)
        },
        t5Gm: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            });
            var i = "twilight.gdpr.preferences";

            function r() {
                localStorage.removeItem(i)
            }
        },
        tIid: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            }), n.d(t, "c", function() {
                return c
            });
            var i = n("/7QA"),
                r = "esport_channel_page_whitelist",
                a = "esport_insider_pass_whitelist",
                o = "esports_room_cheering_whitelist";

            function s(e, t, n) {
                return void 0 === n && (n = !1), d(r, e, t, n)
            }

            function l(e, t, n) {
                return void 0 === n && (n = !1), d(a, e, t, n)
            }

            function c(e, t) {
                return d(o, e, t)
            }

            function d(e, t, n, r) {
                void 0 === r && (r = !1);
                var a = i.b.get(e, []),
                    o = n && n.roles && n.roles.isStaff || r;
                return a.includes(t) || a.includes(t + "-staff") && o
            }
        },
        tMVv: function(e, t, n) {},
        tQCf: function(e, t, n) {},
        tQZM: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = n("j0ar"),
                s = n("RcPG"),
                l = n("a1OF"),
                c = n("i6WW");
            var d = n("Ue10");
            n.d(t, "a", function() {
                return m
            }), n.d(t, "g", function() {
                return h
            }), n.d(t, "f", function() {
                return f
            }), n.d(t, "b", function() {
                return g
            }), n.d(t, "e", function() {
                return v
            }), n.d(t, "d", function() {
                return b
            }), n.d(t, "c", function() {
                return y
            });
            var u = "whisper-message-part";

            function p(e) {
                var t = function(e) {
                    var t = e.split(/\s+/),
                        n = [];
                    return t.forEach(function(e, i) {
                        var r = e.match(c.a);
                        if (r) {
                            var a = r[1],
                                o = r[2],
                                l = "" + (a || "https://") + o;
                            n.push({
                                type: s.a.Link,
                                content: {
                                    displayText: e,
                                    url: l
                                }
                            })
                        } else {
                            var d = n.length && n[n.length - 1],
                                u = "";
                            if (i < t.length - 1 && (u = " "), d && d.type === s.a.Text) d.content += e + u;
                            else {
                                var p = "";
                                i && (p = " "), n.push({
                                    type: s.a.Text,
                                    content: p + e + u
                                })
                            }
                        }
                    }), n
                }(e);
                return t.reduce(function(e, n, i) {
                    if (n.type === s.a.Text) e.push(n.content);
                    else if (n.type === s.a.Link) {
                        t[i - 1] && t[i - 1].type === s.a.Link && e.push(" "), e.push(r.createElement("a", {
                            key: i,
                            href: n.content.url,
                            target: "__blank"
                        }, n.content.displayText))
                    }
                    return e
                }, [])
            }

            function m(e, t, n) {
                var i = [],
                    s = 0,
                    c = Object(l.c)(e);
                if (t.forEach(function(t) {
                        var n = t.from,
                            a = t.to,
                            m = {
                                themed: !1,
                                sources: {
                                    "1x": Object(l.e)("" + t.emoteID, 1),
                                    "2x": Object(l.e)("" + t.emoteID, 2),
                                    "4x": Object(l.e)("" + t.emoteID, 4)
                                }
                            };
                        if (n > s) {
                            var h = c ? c.slice(s, n).join("") : e.slice(s, n);
                            i.push(r.createElement("span", {
                                key: "str-" + s,
                                "data-a-target": u,
                                className: "thread-message__message--part"
                            }, p(h)))
                        }
                        var f = c ? c.slice(n, a + 1).join("") : e.slice(n, a + 1);
                        i.push(r.createElement(o.a, {
                            key: "emote-" + s,
                            tooltipDirection: d.Lb.Top,
                            className: "thread-message__message--emote",
                            srcSet: m,
                            srcKey: "1x",
                            alt: f
                        })), s = a + 1
                    }), s < e.length) {
                    var m = c ? c.slice(s, c.length).join("") : e.slice(s, e.length);
                    i.push(r.createElement("span", {
                        key: "str-" + s,
                        "data-a-target": u,
                        className: "thread-message__message--part"
                    }, p(m)))
                }
                if (n) {
                    var h = Object(a.d)("edited", "ThreadMessage"),
                        f = Object(a.d)("{timestamp, date, full} {timestamp, time, long}", {
                            timestamp: new Date(n)
                        }, "ThreadMessage");
                    i.push(r.createElement(d.Fa, {
                        key: "editedAt",
                        margin: {
                            left: 1
                        }
                    }, r.createElement(d.Q, {
                        type: d.Gb.Span,
                        className: "thread-message__message--edited",
                        title: f,
                        color: d.K.Alt2
                    }, "(" + h + ")")))
                }
                return i
            }
            var h = function(e) {
                    var t = "/me " === e.content.substr(0, 4);
                    t && (e.content = e.content.substr(4), e.emotes = e.emotes.map(function(e) {
                        return i.a({}, e, {
                            from: e.from - 4,
                            to: e.to - 4
                        })
                    }));
                    var n = m(e.content, e.emotes, e.editedAt);
                    if (n.unshift(r.createElement("span", {
                            key: "str-separator"
                        }, t ? " " : ": ")), e.deletedAt) return null;
                    var o = e.from && e.from.chatColor || "",
                        s = e.from && e.from.displayName || r.createElement(d.Q, {
                            type: d.Gb.Span,
                            italic: !0
                        }, Object(a.d)("Unknown", "ThreadMessage")),
                        l = t ? o : "";
                    return r.createElement(d.Ma, {
                        padding: {
                            x: 1,
                            y: .5
                        }
                    }, r.createElement("span", {
                        className: "thread-message__message--user-name",
                        "data-a-target": "whisper-message-name",
                        style: {
                            color: o
                        }
                    }, s), r.createElement("span", {
                        style: {
                            color: l
                        }
                    }, n))
                },
                f = function() {
                    return r.createElement(d.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(a.d)("Please don't share passwords or personal information.", "whispers"))
                },
                g = function() {
                    return r.createElement(d.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, Object(a.d)("This account is no longer active.", "whispers"))
                },
                v = function(e) {
                    var t = new Date,
                        n = new Date;
                    n.setDate(n.getDate() - 7);
                    var o = "",
                        s = {
                            hour: "numeric",
                            minute: "numeric",
                            second: "numeric"
                        },
                        l = i.a({}, s, {
                            year: "numeric",
                            month: "numeric",
                            day: "numeric"
                        });
                    o = e.timestamp.toDateString() === t.toDateString() ? Object(a.d)("Today, {timestamp, time, medium}", {
                        timestamp: e.timestamp
                    }, "ThreadMessage") : e.timestamp < n ? Object(a.i)(e.timestamp, l) : Object(a.i)(e.timestamp, i.a({}, s, {
                        weekday: "long"
                    }));
                    var c = Object(a.i)(e.timestamp, i.a({}, l, {
                        timeZoneName: "short"
                    }));
                    return r.createElement(d.Ma, {
                        padding: {
                            y: 1
                        },
                        textAlign: d.Cb.Center
                    }, r.createElement("span", {
                        title: c
                    }, "" + o))
                },
                b = function(e) {
                    return r.createElement(d.Ma, {
                        padding: {
                            y: .5,
                            x: 1
                        }
                    }, r.createElement(d.Q, {
                        type: d.Gb.Span,
                        color: d.K.Alt2
                    }, e.content))
                },
                y = function() {
                    return r.createElement(d.Ma, {
                        textAlign: d.Cb.Center,
                        padding: {
                            y: .5
                        }
                    }, Object(a.d)("New Whispers", "whispers"))
                }
        },
        tTVk: function(e, t, n) {},
        tYEZ: function(e, t, n) {},
        "trn+": function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("/7QA"),
                r = null;

            function a() {
                return null !== r ? r : r = "treatment" === i.o.experiments.getAssignment("TWILIGHT_GET_BITS_TOP_NAV") || "on" === i.o.experiments.getAssignment("TWILIGHT_WATCH_SYMMETRA")
            }
        },
        tuvy: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            }), n.d(t, "b", function() {
                return u
            });
            var i = n("/7QA"),
                r = null,
                a = null,
                o = null,
                s = new RegExp("^/(" + ["overwatchleague", "overwatchleague_allaccess", "overwatchleague_kr", "overwatchleague_fr", "overwatchleague_zh", "overwatchleague_zhtw", "blizzheroes", "BlizzHeroesKR", "BlizzHeroesDE", "BlizzHeroesRU", "BlizzHeroesFR"].join("|") + ")", "i");

            function l() {
                return null !== r ? r : r = "on" === i.o.experiments.getAssignment("TWILIGHT_WATCH_SYMMETRA")
            }

            function c() {
                return null !== a ? a : a = "on" === i.o.experiments.getAssignment("TWILIGHT_WATCH_SOMBRA")
            }

            function d(e) {
                return !!e.match(s)
            }

            function u() {
                return null !== o ? o : o = l() || "variant1" === i.o.experiments.getAssignment("TWILIGHT_VOD_VOLTRON")
            }
        },
        u0aY: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return i
            }), n.d(t, "b", function() {
                return r
            }), n.d(t, "c", function() {
                return a
            }), n.d(t, "e", function() {
                return o
            }), n.d(t, "f", function() {
                return s
            }), n.d(t, "d", function() {
                return l
            });
            var i = "core.gdpr.CONSENT_RESET",
                r = "core.gdpr.STATUS_UPDATED",
                a = "core.gdpr.VENDOR_PREFERENCES_UPDATED";

            function o(e) {
                return {
                    type: r,
                    status: e
                }
            }

            function s(e) {
                return {
                    type: a,
                    vendorPreferences: e
                }
            }

            function l() {
                return {
                    type: i
                }
            }
        },
        "u3+/": function(e, t, n) {},
        u5aL: function(e, t, n) {
            "use strict";
            var i = n("w0yC");
            n.d(t, "a", function() {
                return i.a
            })
        },
        uA40: function(e, t, n) {},
        uYEN: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Gray = 1] = "Gray", e[e.Purple = 100] = "Purple", e[e.Green = 1e3] = "Green", e[e.Blue = 5e3] = "Blue", e[e.Red = 1e4] = "Red", e[e.Yellow = 1e5] = "Yellow"
                }(i || (i = {}))
        },
        "ua1/": function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "a", function() {
                    return i
                }), n.d(t, "b", function() {
                    return r
                }),
                function(e) {
                    e.Playing = "PLAYING", e.Streaming = "STREAMING", e.Watching = "WATCHING"
                }(i || (i = {})),
                function(e) {
                    e.Playing = "playing", e.Streaming = "broadcasting", e.Watching = "watching"
                }(r || (r = {}))
        },
        uhg1: function(e, t, n) {},
        "ujl+": function(e, t, n) {},
        uu1w: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e.Emote = "emote", e.Mention = "mention", e.Hashtag = "hashtag", e.None = "none"
                }(i || (i = {}))
        },
        v2f3: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/MKj"),
                o = n("fvjX"),
                s = n("/7QA"),
                l = n("cZKs"),
                c = n("aCAx"),
                d = n("KxT4"),
                u = n("IX50"),
                p = n("EMHe"),
                m = n("rwxT"),
                h = n("fWal"),
                f = n("Ue10"),
                g = (n("2oY0"), function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        n.renderBodyText = function(e) {
                            return r.createElement(f.Ma, {
                                margin: {
                                    bottom: 2
                                }
                            }, r.createElement(f.Q, null, e))
                        }, n.renderToggles = function() {
                            var e = Object.keys(n.state.vendorPreferences);
                            return r.createElement(f.qb, {
                                padding: {
                                    x: 2,
                                    top: 2
                                },
                                borderTop: !0
                            }, e.map(function(e) {
                                return n.renderToggle(e)
                            }))
                        }, n.renderToggle = function(e) {
                            return r.createElement(f.Ma, {
                                margin: {
                                    bottom: 2
                                },
                                key: e
                            }, r.createElement(f.X, {
                                label: n.getToggleTitle(e),
                                orientation: f.Y.Horizontal
                            }, r.createElement(f.Ib, {
                                checked: n.state.vendorPreferences[e],
                                onChange: function() {
                                    return n.onToggle(e)
                                },
                                "data-test-selector": e
                            })))
                        }, n.onToggleAllConsent = function() {
                            n.setState(function(e) {
                                return {
                                    vendorPreferences: e.showPersonalizedAds ? Object(d.e)(e.vendorPreferences, !1) : Object(d.e)(e.vendorPreferences, !0),
                                    showPersonalizedAds: !e.showPersonalizedAds
                                }
                            })
                        }, n.onToggle = function(e) {
                            n.setState(function(t) {
                                var n, r = i.a({}, t.vendorPreferences, ((n = {})[e] = !t.vendorPreferences[e], n));
                                return {
                                    vendorPreferences: r,
                                    showPersonalizedAds: !Object(d.d)(r, !1)
                                }
                            })
                        }, n.onClickSave = function() {
                            n.props.saveVendorPreferences(n.state.vendorPreferences), n.props.closeModal()
                        };
                        var a = t.status,
                            o = t.initialPreferences,
                            s = a === d.b.ConsentRequired,
                            l = s ? Object(d.e)(o, !0) : o,
                            c = !!s || !Object(d.d)(o, !1);
                        return n.state = {
                            showPersonalizedAds: c,
                            vendorPreferences: l
                        }, n
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        return r.createElement(f.qb, {
                            background: f.n.Base,
                            className: "gdpr-consent-modal"
                        }, r.createElement(f.qb, {
                            padding: 2,
                            borderBottom: !0,
                            textAlign: f.Cb.Center
                        }, r.createElement(f.Q, {
                            bold: !0,
                            fontSize: f.V.Size3
                        }, Object(s.d)("Consent Management Tool", "GDPRConsentModal"))), r.createElement(f.Ma, {
                            padding: 2
                        }, this.renderBodyText(Object(s.d)("Twitch respects your privacy. Visiting our site with your browser settings adjusted to accept cookies tells us that you want to use Twitch’s services and that you consent to our use of cookies and other technologies as described in our <x:privacy>Privacy Policy</x:privacy>. You can control your cookies by changing the cookie settings in your browser. Consult our <x:cookies>Cookie Policy</x:cookies> for more information.", {
                            "x:cookies": function(e) {
                                return r.createElement(f.O, {
                                    key: "cookies",
                                    to: "https://www.twitch.tv/p/legal/cookie-policy/",
                                    targetBlank: !0
                                }, e)
                            },
                            "x:privacy": function(e) {
                                return r.createElement(f.O, {
                                    key: "privacy",
                                    to: "https://www.twitch.tv/p/legal/privacy-policy/",
                                    targetBlank: !0
                                }, e)
                            }
                        }, "GDPRConsentModal")), this.renderBodyText(Object(s.d)('Additionally, Twitch engages in third-party interest-based ("personalized") advertising activities to support our services and to provide more relevant ad experiences. Thus, not providing or withdrawing your consent may result in seeing advertising that is not as relevant to you. You can turn off personalized ads using the toggle below.', "GDPRConsentModal")), this.renderBodyText(Object(s.d)("Please note that, if you elect to participate with incentivized ad products (e.g., Watch Ads for Bits), Twitch may show you personalized ads.", "GDPRConsentModal")), r.createElement(f.qb, {
                            borderLeft: !0,
                            borderRight: !0,
                            borderBottom: !0,
                            borderRadius: f.t.Small
                        }, r.createElement(h.a, {
                            id: "show_personalized_ads",
                            checked: this.state.showPersonalizedAds,
                            onChange: this.onToggleAllConsent,
                            label: Object(s.d)("Show me personalized ads", "GDPRConsentModal"),
                            "data-a-target": "gdpr-modal-change-all",
                            description: Object(s.d)("You can elect to opt out of the collection of information to engage in personalized advertising with all third parties by toggling personalized ads on or off. To customize your opt in options you may pick which specific third parties you'd like to have on or off below.", "GDPRConsentModal")
                        }), this.renderToggles())), r.createElement(f.qb, {
                            padding: 2,
                            background: f.n.Alt2
                        }, r.createElement(m.a, {
                            status: p.b.DirtyChanges,
                            onClickSave: this.onClickSave,
                            onClickCancel: this.props.closeModal,
                            saveDataATarget: "gdpr-modal-save",
                            cancelDataATarget: "gdpr-modal-cancel"
                        })), r.createElement(l.a, null))
                    }, t.prototype.getToggleTitle = function(e) {
                        switch (e) {
                            case d.c.Amazon:
                                return "Amazon";
                            case d.c.ComScore:
                                return "ComScore";
                            case d.c.Google:
                                return "Google";
                            case d.c.Nielsen:
                                return "Nielsen";
                            case d.c.SalesforceDMP:
                                return "Salesforce DMP";
                            default:
                                return Object(s.d)("Unknown", "GDPRConsentModal")
                        }
                    }, t
                }(r.Component)),
                v = Object(a.b)(function(e) {
                    var t = e.gdpr;
                    return {
                        initialPreferences: t.vendorPreferences,
                        status: t.status
                    }
                }, function(e) {
                    return Object(o.b)({
                        saveVendorPreferences: u.c,
                        closeModal: c.c
                    }, e)
                })(g);
            n.d(t, !1, function() {
                return "show_personalized_ads"
            }), n.d(t, !1, function() {
                return g
            }), n.d(t, "a", function() {
                return v
            })
        },
        vGFN: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            }), n.d(t, "j", function() {
                return g
            }), n.d(t, "h", function() {
                return v
            }), n.d(t, "g", function() {
                return b
            }), n.d(t, "l", function() {
                return y
            }), n.d(t, "o", function() {
                return k
            }), n.d(t, "n", function() {
                return S
            }), n.d(t, "k", function() {
                return w
            }), n.d(t, "m", function() {
                return E
            }), n.d(t, "i", function() {
                return C
            }), n.d(t, "e", function() {
                return N
            }), n.d(t, "d", function() {
                return T
            }), n.d(t, "b", function() {
                return _
            }), n.d(t, "f", function() {
                return R
            }), n.d(t, "c", function() {
                return O
            }), n.d(t, "q", function() {
                return D
            }), n.d(t, "p", function() {
                return P
            });
            var i, r, a, o, s, l = n("mrSG"),
                c = n("/7QA"),
                d = n("2xye"),
                u = n("mBWp");

            function p(e) {
                c.o.tracking.track(d.SpadeEventType.WhisperThreadMod, {
                    conversation_id: e.threadID,
                    action: e.action
                })
            }

            function m(e) {
                return l.b(this, void 0, void 0, function() {
                    var t;
                    return l.e(this, function(n) {
                        switch (n.label) {
                            case 0:
                                return [4, I()];
                            case 1:
                                return t = n.sent(), c.o.tracking.track(d.SpadeEventType.WhisperIgnoreUser, {
                                    ui_context: e.context,
                                    from_login: t && t.login,
                                    ignored_login: e.targetUserLogin,
                                    reason: e.reason || i.Other,
                                    source: e.source
                                }), [2]
                        }
                    })
                })
            }

            function h(e, t) {
                return l.b(this, void 0, void 0, function() {
                    var n;
                    return l.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                return [4, I()];
                            case 1:
                                return n = i.sent(), c.o.tracking.track(d.SpadeEventType.WhisperThreadMod, {
                                    conversation_id: e,
                                    action: t,
                                    login: n && n.login
                                }), [2]
                        }
                    })
                })
            }

            function f(e) {
                c.o.tracking.track(d.SpadeEventType.WhisperAllThreadsMod, {
                    action: e
                })
            }

            function g() {
                f(r.MarkAllRead)
            }

            function v() {
                f(r.EnableDoNotDisturb)
            }

            function b() {
                f(r.DisableDoNotDisturb)
            }

            function y(e, t) {
                m({
                    context: t,
                    targetUserLogin: e,
                    reason: i.Spam,
                    source: "conversations_button"
                })
            }

            function k(e) {
                h(e, s.MarkNotSpam)
            }

            function S(e) {
                h(e, s.Archive)
            }

            function w(e) {
                p({
                    threadID: e,
                    action: a.Mute
                })
            }

            function E(e) {
                p({
                    threadID: e,
                    action: a.Unmute
                })
            }

            function C(e) {
                p({
                    threadID: e,
                    action: a.Expand
                })
            }

            function N(e) {
                p({
                    threadID: e,
                    action: a.Collapse
                })
            }

            function T(e) {
                p({
                    threadID: e,
                    action: a.Close
                })
            }

            function _(e) {
                p({
                    threadID: e,
                    action: a.Archive
                })
            }

            function R(e) {
                c.o.tracking.track(d.SpadeEventType.WhisperThreadCreate, {
                    conversation_id: e.threadID,
                    target_login: e.targetUserlogin,
                    source: "search_target_result",
                    search_result_rank: e.searchResultRank
                })
            }

            function O(e) {
                c.o.tracking.track(d.SpadeEventType.WhisperSearchClick, {
                    query: e.searchQuery,
                    source: "conversation_list",
                    rank: e.searchResultRank,
                    is_conversation: e.isConversation
                })
            }

            function I() {
                var e = this;
                return new Promise(function(t) {
                    setTimeout(function() {
                        return l.b(e, void 0, void 0, function() {
                            var e, n, i;
                            return l.e(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        e = null, r.label = 1;
                                    case 1:
                                        return r.trys.push([1, 3, , 4]), [4, c.o.apollo.client.query({
                                            query: u
                                        })];
                                    case 2:
                                        return e = r.sent(), [3, 4];
                                    case 3:
                                        return n = r.sent(), c.j.error(n, "Failed to make query for current user info in WhisperSent reporting"), [3, 4];
                                    case 4:
                                        return i = e && e.data && e.data.currentUser, t(i), [2]
                                }
                            })
                        })
                    })
                })
            }

            function D(e) {
                return l.b(this, void 0, void 0, function() {
                    var t;
                    return l.e(this, function(n) {
                        switch (n.label) {
                            case 0:
                                return [4, I()];
                            case 1:
                                return t = n.sent(), c.o.tracking.track(d.SpadeEventType.WhisperSent, {
                                    to: e.targetUserLogin,
                                    from: t && t.login,
                                    player: "web",
                                    is_turbo: t && t.hasTurbo,
                                    conversation_id: e.threadID,
                                    availability: t && t.availability
                                }), [2]
                        }
                    })
                })
            }

            function P(e) {
                return l.b(this, void 0, void 0, function() {
                    var t;
                    return l.e(this, function(n) {
                        switch (n.label) {
                            case 0:
                                return [4, I()];
                            case 1:
                                return t = n.sent(), c.o.tracking.track(d.SpadeEventType.WhisperReceived, {
                                    to: t && t.login,
                                    from: e.targetUserLogin,
                                    player: "web",
                                    is_turbo: t && t.hasTurbo,
                                    conversation_id: e.threadID
                                }), [2]
                        }
                    })
                })
            }! function(e) {
                e.Harassment = "Harassment", e.Spam = "Spam", e.Other = "Other"
            }(i || (i = {})),
            function(e) {
                e.MarkAllRead = "mark_all_read", e.EnableDoNotDisturb = "do_not_disturb_on", e.DisableDoNotDisturb = "do_not_disturb_off"
            }(r || (r = {})),
            function(e) {
                e.Mute = "mute", e.Unmute = "unmute", e.Expand = "maximize", e.Collapse = "minimize", e.Close = "close", e.Archive = "archive", e.Open = "open"
            }(a || (a = {})),
            function(e) {
                e.Dock = "dock", e.SpamPropmt = "dock_spam_cta"
            }(o || (o = {})),
            function(e) {
                e.Archive = "archive", e.MarkNotSpam = "mark_not_spam"
            }(s || (s = {}))
        },
        "vR4/": function(e, t, n) {
            "use strict";
            var i, r;
            n.d(t, "b", function() {
                    return i
                }), n.d(t, "a", function() {
                    return r
                }),
                function(e) {
                    e[e.AllVideos = 0] = "AllVideos", e[e.PastBroadcasts = 1] = "PastBroadcasts", e[e.Uploads = 2] = "Uploads", e[e.Highlights = 3] = "Highlights"
                }(i || (i = {})),
                function(e) {
                    e[e.AnyLength = 0] = "AnyLength", e[e.Short = 1] = "Short", e[e.Long = 2] = "Long"
                }(r || (r = {}))
        },
        vRsq: function(e, t, n) {
            "use strict";
            n.d(t, "e", function() {
                return l
            }), n.d(t, "d", function() {
                return c
            }), n.d(t, "c", function() {
                return d
            }), n.d(t, "a", function() {
                return u
            }), n.d(t, "b", function() {
                return p
            });
            var i, r = n("cr+I"),
                a = n("/7QA"),
                o = n("QzU5"),
                s = n("XKWF");

            function l(e, t, n, r) {
                var o = r || c(t),
                    l = "";
                o && (l = "?sort=" + function(e) {
                    switch (e) {
                        case s.a.Popular:
                            return i.Popular;
                        case s.a.Newest:
                            return i.Newest;
                        default:
                            var t = e;
                            return t
                    }
                }(o));
                var u = n ? n.toLowerCase() : function(e) {
                    var t = d(e);
                    return t ? t.toLowerCase() : "all"
                }(t);
                a.o.history.push(e + "/" + u + l)
            }

            function c(e) {
                var t = r.parse(e.location.search);
                return Object(s.b)(t.sort || "")
            }

            function d(e) {
                switch (e.match.params.filter) {
                    case o.a.Archive.toLowerCase():
                        return o.a.Archive;
                    case o.a.Highlight.toLowerCase():
                        return o.a.Highlight;
                    case o.a.Upload.toLowerCase():
                        return o.a.Upload;
                    case o.a.PastPremiere.toLowerCase():
                        return o.a.PastPremiere;
                    default:
                        return
                }
            }

            function u(e) {
                var t = r.parse(e.location.search);
                return e.match.params.collectionID || t.collection || null
            }

            function p(e) {
                return "" === e ? "" : e.startsWith("v") ? e : "v" + e
            }! function(e) {
                e.Popular = "views", e.Newest = "time"
            }(i || (i = {}))
        },
        vSEG: function(e, t, n) {},
        vdE0: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "CoreActionsCurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "roles"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "isStaff"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "settings"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "preferredLanguageTag"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 121
                }
            };
            n.loc.source = {
                body: "query CoreActionsCurrentUser {\ncurrentUser {\ndisplayName\nid\nlogin\nroles {\nisStaff\n}\nsettings {\npreferredLanguageTag\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        vpvt: function(e, t, n) {},
        vty9: function(e, t, n) {},
        w0yC: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return a
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                a = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.setContainerRef = function(e) {
                            t.container = e
                        }, t.handleGlobalClick = function(e) {
                            var n = e.target;
                            t.isParentOf(n) || t.props.onClickOut(e)
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentDidMount = function() {
                        document.addEventListener("click", this.handleGlobalClick, !0)
                    }, t.prototype.componentWillUnmount = function() {
                        document.removeEventListener("click", this.handleGlobalClick, !0)
                    }, t.prototype.render = function() {
                        var e = this.props,
                            t = (e.onClickOut, i.g(e, ["onClickOut"]));
                        return r.createElement("div", i.a({}, t, {
                            ref: this.setContainerRef
                        }), this.props.children)
                    }, t.prototype.isParentOf = function(e) {
                        for (var t = e; t;) {
                            if (t === this.container) return !0;
                            t = t.parentElement
                        }
                        return !1
                    }, t
                }(r.Component)
        },
        wEyv: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelPage_SubscribeBalloon_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "price"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "url"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "displayName"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "name"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emotes"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "self"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "promotion"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "newPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "oldPrice"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountType"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "discountValue"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "giftPromotion"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "newPrice"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "oldPrice"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "discountType"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "discountValue"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "platform"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "renewsAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "endsAt"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "paidUpgrade"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "price"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "startsAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "gift"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "isGift"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "gifter"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "displayName"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 554
                }
            };
            n.loc.source = {
                body: "query ChannelPage_SubscribeBalloon_User($login: String!) {\nuser(login: $login) {\nid\nlogin\ndisplayName\nsubscriptionProducts {\nid\nprice\nurl\nemoteSetID\ndisplayName\nname\nemotes {\nid\n}\nself {\npromotion {\nnewPrice\noldPrice\ndiscountType\ndiscountValue\n}\n}\ngiftPromotion {\nnewPrice\noldPrice\ndiscountType\ndiscountValue\n}\n}\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\npurchasedWithPrime\ntier\nplatform\nrenewsAt\nendsAt\npaidUpgrade {\nprice\nstartsAt\n}\ngift {\nisGift\ngifter {\nid\ndisplayName\n}\n}\n}\n}\n}\ncurrentUser {\nid\nlogin\nhasPrime\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        wdkx: function(e, t, n) {},
        wksc: function(e, t, n) {},
        x1M1: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/MKj"),
                o = n("/0dD"),
                s = n("XDQu"),
                l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = this.props,
                            t = (e.defaultRes, e.sources),
                            n = (e.darkModeEnabled, i.g(e, ["defaultRes", "sources", "darkModeEnabled"])),
                            a = this.props.darkModeEnabled ? t.dark : t.light,
                            o = Object.keys(a);
                        delete n.dispatch;
                        var s = i.a({}, n, {
                            src: a[this.props.defaultRes || o[0]],
                            srcSet: o.map(function(e) {
                                return a[e] + " " + e
                            }).join(",")
                        });
                        return r.createElement("img", i.a({}, s, {
                            onLoad: this.props.onLoad
                        }))
                    }, t
                }(r.Component);
            var c = Object(a.b)(function(e) {
                return {
                    darkModeEnabled: Object(s.a)(e) === o.a.Dark
                }
            })(l);
            n.d(t, "a", function() {
                return c
            })
        },
        x73c: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "OnsiteNotifications_View"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "viewedNotifications"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "user"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "notifications"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "summary"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "unseenCount"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "lastSeenAt"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 123
                }
            };
            n.loc.source = {
                body: "mutation OnsiteNotifications_View {\nviewedNotifications {\nuser {\nnotifications {\nsummary {\nunseenCount\nlastSeenAt\n}\n}\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        x7UT: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA");

            function o(e) {
                return function(t) {
                    return function(n) {
                        function o(t) {
                            var i = n.call(this, t) || this;
                            i.unsubscribers = {};
                            var r = {};
                            return e.map(function(e) {
                                e.skip && e.skip(t) || (r[i.getTopic(e.topic, t)] = {
                                    isSubscribing: !0
                                })
                            }), i.state = {
                                status: r,
                                messages: {}
                            }, i
                        }
                        return i.d(o, n), o.prototype.componentDidMount = function() {
                            var t = this;
                            e.forEach(function(e) {
                                if (!e.skip || !e.skip(t.props)) {
                                    var n = t.getTopic(e.topic, t.props);
                                    t.unsubscribers[n] = t.subscribe(e, n)
                                }
                            })
                        }, o.prototype.componentWillReceiveProps = function(t) {
                            var n = this,
                                r = {},
                                a = {};
                            e.forEach(function(e) {
                                if (!e.skip || !e.skip(t)) {
                                    var i = n.getTopic(e.topic, t);
                                    r[i] || (r[i] = {
                                        isSubscribing: !0
                                    }), n.unsubscribers[i] ? a[i] = n.unsubscribers[i] : a[i] = n.subscribe(e, i)
                                }
                            }), Object.keys(this.unsubscribers).forEach(function(e) {
                                a[e] || n.unsubscribers[e]()
                            }), this.unsubscribers = a, this.setState(function(e) {
                                return {
                                    status: i.a({}, e.status, r)
                                }
                            })
                        }, o.prototype.componentWillUnmount = function() {
                            var e = this;
                            Object.keys(this.unsubscribers).map(function(t) {
                                return e.unsubscribers[t]()
                            })
                        }, o.prototype.render = function() {
                            var e = {
                                pubsub: {
                                    messages: this.state.messages,
                                    status: this.state.status
                                }
                            };
                            return r.createElement(t, i.a({}, this.props, e))
                        }, o.prototype.getTopic = function(e, t) {
                            return "string" == typeof e ? e : e(t)
                        }, o.prototype.subscribe = function(e, t) {
                            var n = this;
                            return a.k.subscribe({
                                topic: t,
                                success: function() {
                                    n.setState(function(e) {
                                        return {
                                            status: i.a({}, e.status, (n = {}, n[t] = {
                                                isSubscribing: !1
                                            }, n))
                                        };
                                        var n
                                    })
                                },
                                failure: function(e) {
                                    n.setState(function(n) {
                                        return {
                                            status: i.a({}, n.status, (r = {}, r[t] = {
                                                error: e,
                                                isSubscribing: !1
                                            }, r))
                                        };
                                        var r
                                    })
                                },
                                onMessage: function(t) {
                                    var r = e.mapMessageTypesToProps[t.type || ""] || e.mapMessageTypesToProps["*"];
                                    r && (e.skipMessage && e.skipMessage(t, n.props) || n.setState(function(e) {
                                        return {
                                            messages: i.a({}, e.messages, (n = {}, n[r] = t, n))
                                        };
                                        var n
                                    }))
                                }
                            })
                        }, o
                    }(r.Component)
                }
            }
            n.d(t, "a", function() {
                return o
            })
        },
        xJpr: function(e, t, n) {
            "use strict";
            n.d(t, "e", function() {
                return r
            }), n.d(t, "d", function() {
                return a
            }), n.d(t, "b", function() {
                return o
            }), n.d(t, "c", function() {
                return s
            }), n.d(t, "f", function() {
                return l
            }), n.d(t, "a", function() {
                return c
            });
            var i = n("0Log");

            function r(e) {
                return e.type === i.PubsubMessageType.WhisperSent
            }

            function a(e) {
                return e.type === i.PubsubMessageType.WhisperReceived
            }

            function o(e) {
                return e.type === i.PubsubMessageType.WhisperDeleted
            }

            function s(e) {
                return e.type === i.PubsubMessageType.WhisperEdited
            }

            function l(e) {
                return e.type === i.PubsubMessageType.WhisperThreadUpdate
            }

            function c(e) {
                return e.type === i.PubsubMessageType.WhisperAllThreadsUpdate
            }
        },
        xXGc: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "FragmentDefinition",
                    name: {
                        kind: "Name",
                        value: "userCardFragment"
                    },
                    typeCondition: {
                        kind: "NamedType",
                        name: {
                            kind: "Name",
                            value: "User"
                        }
                    },
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "id"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "activity"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "type"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Playing"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "game"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "name"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Streaming"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "stream"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "game"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "name"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }, {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                        kind: "NamedType",
                                        name: {
                                            kind: "Name",
                                            value: "Watching"
                                        }
                                    },
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "user"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "displayName"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "login"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "stream"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "game"
                                                            },
                                                            arguments: [],
                                                            directives: [],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [{
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "id"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }, {
                                                                    kind: "Field",
                                                                    name: {
                                                                        kind: "Name",
                                                                        value: "name"
                                                                    },
                                                                    arguments: [],
                                                                    directives: []
                                                                }]
                                                            }
                                                        }]
                                                    }
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "hosting"
                                                    },
                                                    arguments: [],
                                                    directives: [],
                                                    selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [{
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "id"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "displayName"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }, {
                                                            kind: "Field",
                                                            name: {
                                                                kind: "Name",
                                                                value: "login"
                                                            },
                                                            arguments: [],
                                                            directives: []
                                                        }]
                                                    }
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "availability"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "bannerImageURL"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "description"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "displayName"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "login"
                            },
                            arguments: [],
                            directives: []
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "profileImageURL"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "width"
                                },
                                value: {
                                    kind: "IntValue",
                                    value: "70"
                                }
                            }],
                            directives: []
                        }, {
                            kind: "FragmentSpread",
                            name: {
                                kind: "Name",
                                value: "followButtonFragment"
                            },
                            directives: []
                        }, {
                            kind: "FragmentSpread",
                            name: {
                                kind: "Name",
                                value: "friendButtonFragment"
                            },
                            directives: []
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 776
                }
            };
            i.loc.source = {
                body: '#import "twilight/common/queries/follow-button-fragment.gql"\n#import "twilight/features/friend-button/queries/friend-button-fragment.gql"\n# Queries the fields necessary to render a UserCard component.\n# NOTE(mikeche): We removed activity and availability from this query as they currently are not\n# implemented on the User type (they always return null). Blocked on FNP-467 in Jira.\nfragment userCardFragment on User {\nid\nactivity {\ntype\n... on Playing {\ngame {\nid\nname\n}\n}\n... on Streaming {\nstream {\nid\ngame {\nid\nname\n}\n}\n}\n... on Watching {\nuser {\nid\ndisplayName\nlogin\nstream {\nid\ngame {\nid\nname\n}\n}\nhosting {\nid\ndisplayName\nlogin\n}\n}\n}\n}\navailability\nbannerImageURL\ndescription\ndisplayName\nlogin\nprofileImageURL(width: 70)\n...followButtonFragment\n...friendButtonFragment\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};

            function a(e) {
                return e.filter(function(e) {
                    if ("FragmentDefinition" !== e.kind) return !0;
                    var t = e.name.value;
                    return !r[t] && (r[t] = !0, !0)
                })
            }
            i.definitions = i.definitions.concat(a(n("V94A").definitions)), i.definitions = i.definitions.concat(a(n("g7ZD").definitions)), e.exports = i
        },
        xXlL: function(e, t, n) {
            "use strict";

            function i(e) {
                return {
                    id: "" + e.id,
                    start: e.start,
                    end: e.end
                }
            }

            function r(e) {
                return {
                    __typename: "WhisperMessageEdge",
                    cursor: "" + e.data_object.id,
                    node: {
                        __typename: "WhisperMessage",
                        id: e.data_object.message_id,
                        nonce: e.data_object.nonce,
                        sentAt: new Date(1e3 * e.data_object.sent_ts).toISOString(),
                        editedAt: null,
                        deletedAt: null,
                        content: {
                            __typename: "MessageBody",
                            content: e.data_object.body,
                            emotes: e.data_object.tags.emotes.map(function(e) {
                                return o(i(e))
                            })
                        },
                        from: {
                            __typename: "User",
                            id: "" + e.data_object.from_id
                        }
                    }
                }
            }

            function a(e) {
                return e.map(function(e) {
                    return o(i(e))
                })
            }

            function o(e) {
                return {
                    from: e.start,
                    to: e.end,
                    emoteID: e.id,
                    id: e.id + ";" + e.start + ";" + e.end,
                    setID: "0",
                    __typename: "EmbeddedEmote"
                }
            }
            n.d(t, "c", function() {
                return r
            }), n.d(t, "b", function() {
                return a
            }), n.d(t, "a", function() {
                return o
            })
        },
        xlgz: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("daa2"),
                o = 6e5,
                s = ["mousemove", "keydown", "wheel", "DOMMouseScroll", "mouseWheel", "mousedown", "touchstart", "touchmove", "MSPointerDown", "MSPointerMove"];
            var l = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.isIdle = !1, t.pageIsHidden = !1, t.lastActiveTimestamp = +new Date, t.activityTimeoutID = null, t.lastPageX = null, t.lastPageY = null, t.onActiveEvent = function(e) {
                            var n = null,
                                i = null;
                            if (function(e) {
                                    return "mousemove" === e.type
                                }(e)) {
                                if (n = e.pageX, i = e.pageY, n === t.lastPageX && i === t.lastPageY) return;
                                if (+new Date - t.lastActiveTimestamp < 200) return
                            }
                            t.activityTimeoutID && clearTimeout(t.activityTimeoutID), t.pageIsHidden || (t.isIdle && Object(a.b)(), t.setOnActive(n, i))
                        }, t.onWindowVisibilityChange = function() {
                            var e = t.windowIsHidden();
                            t.pageIsHidden = e, e ? t.setIdle() : t.isIdle && (Object(a.b)(), t.setOnActive(null, null))
                        }, t.windowIsHidden = function() {
                            return "visible" !== document.visibilityState
                        }, t.setOnActive = function(e, n) {
                            t.isIdle = !1, t.lastActiveTimestamp = +new Date, t.activityTimeoutID = setTimeout(t.setIdle, o), t.lastPageX = e, t.lastPageY = n
                        }, t.setIdle = function() {
                            t.isIdle = !0, Object(a.d)()
                        }, t
                    }
                    return i.d(t, e), t.prototype.componentWillMount = function() {
                        var e = this;
                        s.forEach(function(t) {
                            document.addEventListener(t, e.onActiveEvent)
                        }), document.addEventListener("visibilitychange", this.onWindowVisibilityChange), Object(a.b)(), this.setOnActive(null, null)
                    }, t.prototype.componentWillUnmount = function() {
                        var e = this;
                        this.activityTimeoutID && clearTimeout(this.activityTimeoutID), s.forEach(function(t) {
                            document.removeEventListener(t, e.onActiveEvent)
                        }), document.removeEventListener("visibilitychange", this.onWindowVisibilityChange)
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(r.Component),
                c = l;
            n.d(t, !1, function() {
                return s
            }), n.d(t, !1, function() {
                return l
            }), n.d(t, "a", function() {
                return c
            })
        },
        xw7B: function(e, t, n) {},
        xytL: function(e, t, n) {},
        y5D0: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("/7QA"),
                a = n("p46w"),
                o = n("q1tI"),
                s = n("cZKs"),
                l = n("ZDlU"),
                c = n("kYGc"),
                d = n("ctvI"),
                u = n("1/iK"),
                p = n("2xye"),
                m = n("kz7j"),
                h = n("3yfl"),
                f = n("GnwI"),
                g = n("Ue10"),
                v = (n("5b/9"), ["https://api.twitch.tv", "https://passport.twitch.tv", "https://passport-staging.internal.twitch.tv", "https://passport-dev1.internal.twitch.tv", "https://passport-dev2.internal.twitch.tv", "https://passport-dev3.internal.twitch.tv", "https://id.twitch.tv", "https://id-dev.twitch.tv"]),
                b = 5e3,
                y = "passport_requested",
                k = function(e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.frameLoadStart = 0, n.lastHeartbeart = 0, n.heartBeatCheckInterval = 0, n.logger = r.o.logger.withCategory("passport-modal"), n.nonce = Object(u.b)(), n.passportHosts = r.b.get("passport_hosts", v), n.handleMessage = function(e) {
                            if (n.logger.debug("Received a Passport frame message", e), window && document && n.passportHosts.includes(e.origin) && e.data) {
                                var t = {
                                    messageType: null
                                };
                                if ("string" == typeof e.data && e.data.startsWith("{")) try {
                                    t = JSON.parse(e.data)
                                } catch (e) {
                                    return void n.logger.warn("Unable to parse Passport IFrame message", e)
                                } else {
                                    if ("object" != typeof e.data) return void n.logger.warn("The Passport IFrame message was not a string or an object");
                                    t = e.data
                                }
                                if (t.messageType) switch (t.messageType) {
                                    case c.b.Loaded:
                                        return n.frameRef ? void n.frameRef.contentWindow.postMessage(JSON.stringify({
                                            width: "100%"
                                        }), "*") : (n.logger.error(new Error("Passport IFrame Ref Missing"), "Received a loaded message from Passport but had no ref to the IFrame"), void n.setState({
                                            hasError: !0
                                        }));
                                    case c.b.Height:
                                        var i = t;
                                        return i.height ? void n.setState({
                                            height: i.height
                                        }) : (n.logger.error(new Error("Invalid Passport Height Message"), "The Passport IFrame height message type had an invalid height"), void n.setState({
                                            hasError: !0
                                        }));
                                    case c.b.KrakenCallback:
                                    case c.b.PassportCallback:
                                        var r = t;
                                        return r.redirectURI ? void window.location.assign(r.redirectURI) : (n.setState({
                                            hasError: !0
                                        }), void n.logger.error(new Error("Invalid Passport Redirect Message"), "The Passport IFrame redirect message type had an invalid redirectURI"));
                                    case c.b.Heartbeat:
                                        return void(n.lastHeartbeart = Date.now());
                                    default:
                                        return
                                } else n.logger.warn("The Passport IFrame message did not have a messageType")
                            }
                        }, n.onClickTryAgain = function() {
                            n.setState({
                                isLoading: !0,
                                hasError: !1,
                                height: 0
                            }, function() {
                                return n.frameLoadStart = Date.now()
                            })
                        }, n.onFrameError = function() {
                            n.logger.error(new Error("Unable to load Passport IFrame"), "The IFrame called its onError handler."), n.state.hasError || n.setState({
                                hasError: !0,
                                isLoading: !1
                            })
                        }, n.onFrameLoad = function() {
                            n.state.isLoading && n.setState({
                                isLoading: !1
                            }, function() {
                                n.passportLoadedLatencyEvent && n.props.latencyTracking.reportCustomEvent(n.passportLoadedLatencyEvent);
                                var e = Date.now() - n.frameLoadStart;
                                e > b && n.logger.warn("The Passport IFrame took a long time to load.", {
                                    duration: e
                                })
                            })
                        }, n.renderContent = function() {
                            if (n.state.hasError) {
                                var e = Object(r.d)("Try Again", "PassportModal");
                                return o.createElement(g.Ma, {
                                    fullHeight: !0,
                                    flexDirection: g.T.Column,
                                    display: g.R.Flex,
                                    alignItems: g.c.Center,
                                    justifyContent: g.La.Center
                                }, o.createElement(l.a, {
                                    inline: !0,
                                    key: "error",
                                    message: Object(r.d)("Something went wrong", "PassportModal")
                                }), o.createElement(g.v, {
                                    key: "try-again",
                                    ariaLabel: e,
                                    onClick: n.onClickTryAgain
                                }, e))
                            }
                            return o.createElement("iframe", {
                                height: n.state.height,
                                ref: n.setFrameRef,
                                onLoad: n.onFrameLoad,
                                onError: n.onFrameError,
                                scrolling: "no",
                                src: n.state.url,
                                width: "100%",
                                name: "passport"
                            })
                        }, n.registerCustomLatencyEvents = function() {
                            n.resetCustomLatencyEvents();
                            var e = n.props.initialTab === c.a.Login ? m.b.PassportLoginLoaded : m.b.PassportSignUpLoaded;
                            n.passportLoadedLatencyEvent = n.props.latencyTracking.registerCustomEvent({
                                benchmark: 1e3,
                                group: m.a.Passport,
                                label: m.c.Loaded,
                                start: m.d.Registration,
                                key: e
                            })
                        }, n.resetCustomLatencyEvents = function() {
                            n.props.latencyTracking.resetCustomEvents(m.a.Passport)
                        }, n.setFrameRef = function(e) {
                            return n.frameRef = e
                        }, n.state = {
                            height: 0,
                            hasError: !1,
                            isLoading: !0,
                            url: Object(d.a)(n.props.initialTab)
                        }, a.set(y, n.nonce, {
                            domain: Object(h.a)(),
                            secure: "https:" === window.location.protocol
                        }), n
                    }
                    return i.d(t, e), t.prototype.componentWillMount = function() {
                        window.addEventListener("message", this.handleMessage), this.registerCustomLatencyEvents()
                    }, t.prototype.componentDidMount = function() {
                        var e = this;
                        this.frameLoadStart = Date.now(), this.heartBeatCheckInterval = setInterval(function() {
                            e.lastHeartbeart && Date.now() - e.lastHeartbeart > 15e3 && (e.logger.error(new Error("Passport Heartbeat Timeout"), "Client did not receive a Passport heartbeat within the timeout.", {
                                heartbeatTimeout: 15e3
                            }), clearInterval(e.heartBeatCheckInterval))
                        }, 1e3), Object(u.c)(p.SpadeEventType.PassportShow, {
                            action: this.props.action,
                            nonce: this.nonce,
                            type: this.props.initialTab
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        window.removeEventListener("message", this.handleMessage), clearInterval(this.heartBeatCheckInterval), Object(u.c)(p.SpadeEventType.PassportHide, {
                            action: this.props.action,
                            nonce: this.nonce,
                            type: this.props.initialTab
                        }), this.resetCustomLatencyEvents()
                    }, t.prototype.render = function() {
                        return o.createElement(g.Ma, {
                            className: "passport-modal",
                            padding: {
                                top: 4,
                                bottom: 2,
                                x: 2
                            },
                            position: g.Wa.Relative,
                            fullWidth: !0
                        }, this.renderContent(), this.state.isLoading && !this.state.hasError && o.createElement(g.qb, {
                            background: g.n.Base,
                            position: g.Wa.Absolute,
                            attachBottom: !0,
                            attachLeft: !0,
                            attachRight: !0,
                            attachTop: !0
                        }, o.createElement(g.Oa, {
                            fillContent: !0
                        })), o.createElement(s.a, {
                            closeOnBackdropClick: !0
                        }))
                    }, t
                }(o.Component),
                S = Object(f.c)("PassportModal", {
                    autoReportInteractive: !0
                })(k),
                w = n("aCAx"),
                E = n("JOxF"),
                C = n("MgK0"),
                N = n("dqQ1"),
                T = n("kRBY"),
                _ = n("5e4V"),
                R = n("Pmew"),
                O = n("ZIMp"),
                I = n("t5Gm"),
                D = n("vdE0");

            function P(e) {
                return "variant" === r.o.experiments.getAssignment("TWILIGHT_NATIVE_LOGIN") ? Object(w.d)(O.b, {
                    action: e,
                    initialStep: O.a.StartLogin
                }) : Object(w.d)(S, {
                    action: e,
                    initialTab: c.a.Login
                })
            }

            function x(e) {
                return "variant" === r.o.experiments.getAssignment("TWILIGHT_NATIVE_LOGIN") ? Object(w.d)(O.b, {
                    action: e,
                    initialStep: O.a.StartSignup
                }) : Object(w.d)(S, {
                    action: e,
                    initialTab: c.a.Signup
                })
            }

            function L() {
                var e = this;
                return function(t, n) {
                    return i.b(e, void 0, void 0, function() {
                        var e, t, a, o, s, l, c, d;
                        return i.e(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    if (e = r.o.logger.withCategory("auth.logout"), t = n(), !(a = Object(T.a)(t))) return e.warn("Attempted to log out without being logged in."), [2];
                                    i.label = 1;
                                case 1:
                                    return i.trys.push([1, 10, , 11]), (o = Object(T.b)(t)) ? [3, 3] : (e.debug("No legacy CSRF token found, making blank request to get one."), [4, fetch("https://passport.twitch.tv/logout/new", {
                                        credentials: "include",
                                        method: "POST",
                                        mode: "no-cors"
                                    })]);
                                case 2:
                                    i.sent(), o = Object(C.d)({
                                        logger: e
                                    }), i.label = 3;
                                case 3:
                                    return o ? [4, z(o, e)] : [3, 8];
                                case 4:
                                    return (s = i.sent()) && s.authToken !== a ? [4, Object(N.a)(s.authToken, {
                                        config: r.a,
                                        logger: e
                                    })] : [3, 6];
                                case 5:
                                    i.sent(), i.label = 6;
                                case 6:
                                    return e.debug("Invalidating passport session."), (l = new FormData).append("api_token", o), [4, fetch("https://passport.twitch.tv/logout/new", {
                                        body: l,
                                        credentials: "include",
                                        method: "POST",
                                        mode: "no-cors"
                                    })];
                                case 7:
                                    return i.sent(), [3, 9];
                                case 8:
                                    e.debug("Skipping legacy OAuth token revocation and passport session invalidation: No legacy CSRF token found."), i.label = 9;
                                case 9:
                                    return [3, 11];
                                case 10:
                                    return c = i.sent(), e.error(c, "Failed to invalidate passport session."), [3, 11];
                                case 11:
                                    Object(I.a)(), i.label = 12;
                                case 12:
                                    return i.trys.push([12, 14, , 15]), [4, Object(N.b)(a, {
                                        config: r.a,
                                        logger: e
                                    })];
                                case 13:
                                    return i.sent(), e.debug("Logged out user successfully; Reloading."), window.location.reload(), [3, 15];
                                case 14:
                                    return d = i.sent(), e.error(d, "Failed to revoke OAuth tokens and remove cookies; User not logged out."), [3, 15];
                                case 15:
                                    return [2]
                            }
                        })
                    })
                }
            }

            function F() {
                return function(e) {
                    r.o.apollo.authToken = null, e(Object(E.e)(null))
                }
            }

            function M(e) {
                return function(t) {
                    var n;
                    r.o.apollo.authToken = e.authToken, t(Object(E.e)(e)), n = r.o.store.getReduxStore().subscribe(function() {
                        var e = r.o.store.getState();
                        e.session.firstPageLoaded && (r.o.store.dispatch(function() {
                            var e = this;
                            return function(t, n) {
                                return i.b(e, void 0, void 0, function() {
                                    var e, a, o, s, l, c;
                                    return i.e(this, function(i) {
                                        switch (i.label) {
                                            case 0:
                                                return (e = r.o.logger.withCategory("auth.refreshUserData")).debug("Refreshing user data."), [4, r.o.apollo.client.query({
                                                    fetchPolicy: "network-only",
                                                    query: D
                                                })];
                                            case 1:
                                                return (a = i.sent()).data.currentUser ? (o = n().session.user) ? (s = a.data.currentUser.displayName, l = a.data.currentUser.login, c = !!a.data.currentUser.roles && !!a.data.currentUser.roles.isStaff, s !== o.displayName || l !== o.login || o.roles && c !== o.roles.isStaff ? (o.login = l, o.displayName = s, o.roles ? o.roles.isStaff = c : o.roles = {
                                                    isStaff: c
                                                }, e.debug("User data changed, updating."), t(Object(E.e)(o)), Object(C.j)(o, {
                                                    config: r.a,
                                                    logger: e
                                                })) : e.debug("User data not changed."), [2]) : (e.error(new Error("Refresh called with no user in session."), "Refresh called with no user in session."), [2]) : (e.error(new Error("Failed to get user data from GraphQL, but there was no client error."), "Failed to get user data from GraphQL, but there was no client error."), [2])
                                        }
                                    })
                                })
                            }
                        }()), n())
                    })
                }
            }
            n.d(t, "f", function() {
                return P
            }), n.d(t, "h", function() {
                return x
            }), n.d(t, "g", function() {
                return L
            }), n.d(t, "a", function() {
                return F
            }), n.d(t, "d", function() {
                return M
            }), n.d(t, "c", function() {
                return U
            }), n.d(t, "b", function() {
                return B
            }), n.d(t, "e", function() {
                return j
            });
            var A = Promise.resolve();

            function U(e, t, n) {
                var a, o = this;
                return void 0 === n && (n = !0), A = new Promise(function(e) {
                        a = e
                    }),
                    function(s) {
                        return i.b(o, void 0, void 0, function() {
                            var o, l, c, d, u, p;
                            return i.e(this, function(i) {
                                switch (i.label) {
                                    case 0:
                                        (o = r.o.logger.withCategory("auth.init.token")).debug("Getting user data from GraphQL."), r.o.apollo.authToken = e, i.label = 1;
                                    case 1:
                                        return i.trys.push([1, 3, 4, 5]), [4, r.o.apollo.client.query({
                                            fetchPolicy: "network-only",
                                            query: D
                                        })];
                                    case 2:
                                        return (l = i.sent()).data.currentUser ? (c = {
                                            authToken: e,
                                            displayName: l.data.currentUser.displayName,
                                            id: l.data.currentUser.id,
                                            legacyCSRFToken: t,
                                            login: l.data.currentUser.login,
                                            roles: {
                                                isStaff: !!l.data.currentUser.roles && !!l.data.currentUser.roles.isStaff
                                            }
                                        }, n && Object(C.j)(c, {
                                            config: r.a,
                                            logger: o
                                        }), s(Object(E.e)(c)), d = Object(R.b)(Object(_.a)() || ""), u = l.data.currentUser.settings, !d && u && u.preferredLanguageTag ? Object(_.c)(Object(R.a)(u.preferredLanguageTag)) : d && u && d !== u.preferredLanguageTag && (o.info("Found language preference in cookie that differs from backend. Changing on the backend.", {
                                            from: u.preferredLanguageTag,
                                            to: d
                                        }), Object(R.c)({
                                            userID: c.id,
                                            preferredLanguageTag: d
                                        }).catch(function(e) {
                                            o.warn("Failed setting backend language preference", {
                                                error: e,
                                                from: u.preferredLanguageTag,
                                                to: d
                                            })
                                        })), [3, 5]) : (o.error(new Error("Failed to get user data from GraphQL, but there was no client error."), "Failed to get user data from GraphQL, but there was no client error."), s(F()), [2]);
                                    case 3:
                                        return p = i.sent(), o.error(p, "Failed to get user data from GraphQL."), s(F()), [3, 5];
                                    case 4:
                                        return a(), [7];
                                    case 5:
                                        return [2]
                                }
                            })
                        })
                    }
            }

            function B(e) {
                var t = this;
                return function(n) {
                    return i.b(t, void 0, void 0, function() {
                        var t, a;
                        return i.e(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return t = r.o.logger.withCategory("auth.init.legacy"), [4, z(e, t)];
                                case 1:
                                    return (a = i.sent()) ? (r.o.apollo.authToken = a.authToken, Object(C.j)(a, {
                                        config: r.a,
                                        logger: t
                                    }), n(Object(E.e)(a))) : n(F()), [2]
                            }
                        })
                    })
                }
            }

            function j(e) {
                var t = this;
                return function(n) {
                    return i.b(t, void 0, void 0, function() {
                        var t, a;
                        return i.e(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return e ? [3, 2] : [4, A];
                                case 1:
                                    i.sent(), i.label = 2;
                                case 2:
                                    return [4, r.o.intl.loadLocale(e ? [e].concat(Object(_.b)({
                                        includeChosenLanguage: !1
                                    })) : Object(_.b)())];
                                case 3:
                                    return i.sent(), t = r.o.intl.getLanguageCode() || "en", (a = r.a.locales.find(function(e) {
                                        return e.languageCode === t
                                    })) || (r.o.logger.warn("Tried to use invalid language code, using default.", t), a = r.a.locales.find(function(e) {
                                        return !!e.default
                                    })), n(Object(E.h)(a.languageCode, a.locale)), [2]
                            }
                        })
                    })
                }
            }

            function z(e, t) {
                return i.b(this, void 0, void 0, function() {
                    var n, a, o;
                    return i.e(this, function(i) {
                        switch (i.label) {
                            case 0:
                                t.debug("Getting user data from legacy API.", {
                                    legacyCSRFToken: e
                                }), i.label = 1;
                            case 1:
                                return i.trys.push([1, 4, , 5]), [4, fetch("https://api.twitch.tv/api/me?on_site=1", {
                                    method: "GET",
                                    headers: {
                                        "client-id": r.a.authSettings.clientID,
                                        "twitch-api-token": e
                                    },
                                    credentials: "include"
                                })];
                            case 2:
                                return [4, (n = i.sent()).json()];
                            case 3:
                                return a = i.sent(), 200 !== n.status || a.error ? (t.error(new Error("Error getting user data from legacy API."), "Error getting user data from legacy API.", {
                                    body: a,
                                    legacyCSRFToken: e,
                                    status: n.status
                                }), [2]) : [2, {
                                    authToken: a.chat_oauth_token,
                                    displayName: a.name,
                                    id: a.id.toString(),
                                    legacyCSRFToken: e,
                                    login: a.login,
                                    roles: {
                                        isStaff: a.is_staff
                                    }
                                }];
                            case 4:
                                return o = i.sent(), t.error(o, "Error getting user data from legacy API.", {
                                    legacyCSRFToken: e
                                }), [3, 5];
                            case 5:
                                return [2]
                        }
                    })
                })
            }
        },
        y9X1: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return s
            }), n.d(t, "a", function() {
                return l
            });
            var i = n("q1tI"),
                r = n("2+sX"),
                a = n("jytb"),
                o = n("Ue10");

            function s(e, t, n) {
                var s = i.createElement(a.b, {
                    id: e,
                    bodyType: n || a.c.Default
                });
                Object(r.c)({
                    direction: o.r.Right,
                    ref: t,
                    content: s,
                    contentHeight: a.a
                })
            }

            function l(e) {
                Object(r.b)(e)
            }
        },
        yH8i: function(e, t, n) {},
        yLwq: function(e, t, n) {
            "use strict";
            n.d(t, "b", function() {
                return i
            }), n.d(t, "a", function() {
                return r
            }), n.d(t, "c", function() {
                return a
            });
            var i = [{
                id: "profile_image_001",
                urlSlug: "bb97f7e6-f11a-4194-9708-52bf5a5125e8"
            }, {
                id: "profile_image_002",
                urlSlug: "27103734-3cda-44d6-a384-f2ab71e4bb85"
            }, {
                id: "profile_image_003",
                urlSlug: "49988c7b-57bc-4dee-bd4f-6df4ad215d3a"
            }, {
                id: "profile_image_004",
                urlSlug: "0ecbb6c3-fecb-4016-8115-aa467b7c36ed"
            }, {
                id: "profile_image_005",
                urlSlug: "cd618d3e-f14d-4960-b7cf-094231b04735"
            }, {
                id: "profile_image_006",
                urlSlug: "4cbf10f1-bb9f-4f57-90e1-15bf06cfe6f5"
            }, {
                id: "profile_image_007",
                urlSlug: "b83b1794-7df9-4878-916c-88c2ad2e4f9f"
            }];

            function r(e, t) {
                var n = 70;
                return 300 === t ? n = 300 : 96 !== t && 80 !== t || (n = 150), "https://static-cdn.jtvnw.net/user-default-pictures/" + e.urlSlug + "-profile_image-" + n + "x" + n + ".jpg"
            }

            function a(e, t) {
                var n = parseInt(e, 10) % i.length;
                return r(i[n], t)
            }
        },
        "yO+B": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Prime_PrimeOffers_CurrentUser"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 95
                }
            };
            n.loc.source = {
                body: "query Prime_PrimeOffers_CurrentUser {\ncurrentUser {\nid\nhasPrime\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        yR8l: function(e, t, n) {
            "use strict";
            var i, r, a, o = n("mrSG"),
                s = n("q1tI"),
                l = n("oJmH"),
                c = n("/7QA");
            ! function(e) {
                e.Skip = "skip", e.Include = "include"
            }(i || (i = {})),
            function(e) {
                e.Field = "Field", e.FragmentSpread = "FragmentSpread"
            }(r || (r = {})),
            function(e) {
                e.Operation = "OperationDefinition", e.Fragment = "FragmentDefinition"
            }(a || (a = {}));
            var d = "UnnamedQuery";

            function u(e, t) {
                var n = function e(t, n) {
                    if (t.kind === r.Field) return [t.alias ? t.alias.value : t.name.value];
                    if (t.kind === r.FragmentSpread) {
                        var i = t.name.value,
                            o = n.definitions.find(function(e) {
                                return e.kind === a.Fragment && e.name.value === i
                            });
                        if (!o) return;
                        return o.selectionSet.selections.reduce(function(t, i) {
                            var r = e(i, n);
                            if (r) return t.concat(r)
                        }, [])
                    }
                }(e, t);
                if (!n || 0 === n.length) return {};
                var o = {};
                if (e.directives)
                    for (var s = 0, l = e.directives; s < l.length; s++) {
                        var c = l[s],
                            d = c.name.value;
                        if ((d === i.Include || d === i.Skip) && c.arguments) {
                            var u = c.arguments[0];
                            if ("if" === u.name.value) {
                                var p = u.value.name.value;
                                o[d] = p
                            }
                        }
                    }
                for (var m = {}, h = 0, f = n; h < f.length; h++) {
                    m[f[h]] = o
                }
                return m
            }

            function p(e, t) {
                return t && t.options ? "object" == typeof t.options ? t.options.variables || {} : "function" == typeof t.options && t.options(e).variables || {} : {}
            }

            function m(e, t) {
                if (t && t.skip) {
                    if ("boolean" == typeof t.skip) return t.skip;
                    if ("function" == typeof t.skip) return t.skip(e)
                }
                return !1
            }

            function h(e, t, n) {
                if (!e[t]) return {};
                for (var i = {}, r = 0, a = Object.keys(e[t]); r < a.length; r++) {
                    var o = a[r];
                    n[o] && (i[o] = e[t][o])
                }
                return i
            }

            function f(e, t) {
                return function(n) {
                    var r = function(r) {
                        function l() {
                            var n, i = null !== r && r.apply(this, arguments) || this;
                            return i.queryFields = (n = e).definitions.reduce(function(e, t) {
                                if (t.kind !== a.Operation) return e;
                                var i = t;
                                if ("query" !== i.operation) return e;
                                for (var r = 0, s = i.selectionSet.selections; r < s.length; r++) {
                                    var l = u(s[r], n);
                                    l && (e = o.a({}, e, l))
                                }
                                return e
                            }, {}), i.operationName = t && t.name || "data", i.cachedData = {}, i.queryName = function(e) {
                                var t = e.definitions.find(function(e) {
                                    return e.kind === a.Operation && "query" === e.operation
                                });
                                return t && t.name && t.name.value || d
                            }(e), i.logger = c.j.withCategory("with-graphql"), i
                        }
                        return o.d(l, r), l.prototype.componentWillReceiveProps = function(e) {
                            if (!m(e, t)) {
                                if (function(e) {
                                        for (var t = e.dataProps, n = e.nextDataProps, r = e.nextProps, a = e.cachedData, o = e.operationName, s = e.operationOptions, l = e.queryFields, c = e.queryName, d = e.logger, u = !1, m = !1, h = 0, f = Object.keys(t); h < f.length; h++) {
                                            var g = f[h];
                                            if (void 0 === t[g] || void 0 !== n[g] || !r[o] || r[o].loading || r[o].error) void 0 !== n[g] && void 0 !== a[g] && (delete a[g], m = !0);
                                            else {
                                                var v = l[g][i.Skip],
                                                    b = l[g][i.Include],
                                                    y = p(r, s);
                                                if (v && void 0 !== y[v] && y[v]) continue;
                                                if (b && void 0 !== y[b] && !y[b]) continue;
                                                u = !0, a[g] = t[g]
                                            }
                                        }
                                        return m && d.debug("GraphQL corruption resolved for component.", {
                                            fieldName: o,
                                            queryName: c
                                        }), u
                                    }({
                                        dataProps: h(this.props, this.operationName, this.queryFields),
                                        nextDataProps: h(e, this.operationName, this.queryFields),
                                        cachedData: this.cachedData,
                                        operationName: this.operationName,
                                        queryFields: this.queryFields,
                                        queryName: this.queryName,
                                        logger: this.logger,
                                        operationOptions: t,
                                        nextProps: e
                                    })) {
                                    this.logCorruptDataFound();
                                    var n = e[this.operationName];
                                    n && n.refetch && n.refetch()
                                }
                            }
                        }, l.prototype.render = function() {
                            return s.createElement(n, o.a({}, this.getRenderProps()))
                        }, l.prototype.getRenderProps = function() {
                            return m(this.props, t) ? this.props : "object" != typeof this.props[this.operationName] ? this.props : o.a({}, this.props, ((e = {})[this.operationName] = o.a({}, this.cachedData, this.props[this.operationName]), e));
                            var e
                        }, l.prototype.logCorruptDataFound = function() {
                            var e = c.b.get("withgraphql_error_on_corruption", !1),
                                t = {
                                    fieldName: this.operationName,
                                    queryName: this.queryName
                                },
                                n = "GraphQL data corrupted for component.";
                            e ? this.logger.error(new Error("GraphQL data corrupted for component using query " + this.queryName), n, t) : this.logger.warn(n, t)
                        }, l.displayName = "WithGraphQL(" + (n.displayName || n.name || "Component") + ")", l
                    }(s.Component);
                    return Object(l.graphql)(e, t)(r)
                }
            }
            n.d(t, "a", function() {
                return f
            })
        },
        yVY3: function(e, t) {},
        yXTL: function(e, t, n) {},
        ywcS: function(e, t, n) {},
        "z+dA": function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "ChannelPage_SubscribeButton_User"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "login"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "login"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "subscriptionProducts"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "emoteSetID"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "self"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "canPrimeSubscribe"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "subscriptionBenefit"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "id"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "purchasedWithPrime"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }, {
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "tier"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "requestInfo"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "countryCode"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 262
                }
            };
            n.loc.source = {
                body: "query ChannelPage_SubscribeButton_User($login: String!) {\nuser(login: $login) {\nid\ndisplayName\nsubscriptionProducts {\nid\nemoteSetID\n}\nself {\ncanPrimeSubscribe\nsubscriptionBenefit {\nid\npurchasedWithPrime\ntier\n}\n}\n}\ncurrentUser {\nid\n}\nrequestInfo {\ncountryCode\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        z8lI: function(e, t, n) {
            "use strict";
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("GnwI"),
                o = n("O4UZ"),
                s = n("Ue10"),
                l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.render = function() {
                        var e = Object(o.g)(this.props.errorType);
                        return r.createElement(s.qb, {
                            background: s.n.Alt2,
                            display: s.R.Flex,
                            justifyContent: s.La.Center,
                            padding: {
                                y: 1
                            },
                            margin: {
                                bottom: 1
                            },
                            textAlign: s.Cb.Center,
                            "data-test-selector": this.props.testTarget,
                            "data-a-target": this.props.testTarget
                        }, r.createElement(s.Q, {
                            type: s.Gb.H4,
                            align: s.Qb.Middle
                        }, r.createElement(s.qb, {
                            padding: 1,
                            display: s.R.InlineFlex,
                            flexGrow: 1,
                            flexWrap: s.U.NoWrap,
                            alignItems: s.c.Center,
                            textAlign: s.Cb.Left,
                            fontSize: this.props.fontSize ? this.props.fontSize : s.V.Size5,
                            "data-a-target": "prime-error-glitch"
                        }, r.createElement(s.Ma, {
                            margin: {
                                right: 1
                            },
                            display: s.R.InlineFlex,
                            flexGrow: 1,
                            flexWrap: s.U.NoWrap,
                            alignItems: s.c.Center
                        }, r.createElement(s.fb, {
                            asset: s.gb.DeadGlitch,
                            type: s.hb.Alert,
                            width: 20,
                            height: 20
                        })), r.createElement(s.Q, {
                            type: s.Gb.P
                        }, e))))
                    }, t
                }(r.Component),
                c = Object(a.c)("PrimeError", {
                    autoReportInteractive: !0
                })(l);
            n.d(t, "a", function() {
                return c
            })
        },
        zB42: function(e, t, n) {
            "use strict";
            var i;
            n.d(t, "a", function() {
                    return i
                }),
                function(e) {
                    e[e.Dev = 1] = "Dev", e[e.Production = 2] = "Production"
                }(i || (i = {}))
        },
        zUQL: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Prime_Current_User"
                    },
                    variableDefinitions: [],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "hasPrime"
                                    },
                                    arguments: [],
                                    directives: []
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 56
                }
            };
            n.loc.source = {
                body: "query Prime_Current_User {\ncurrentUser {\nid\nhasPrime\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        zdEN: function(e, t, n) {},
        zixI: function(e, t) {
            var n = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "mutation",
                    name: {
                        kind: "Name",
                        value: "UnblockUser"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "input"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "UnblockUserInput"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "unblockUser"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "input"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "input"
                                    }
                                }
                            }],
                            directives: [],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "targetUser"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 100
                }
            };
            n.loc.source = {
                body: "mutation UnblockUser($input: UnblockUserInput!) {\nunblockUser(input: $input) {\ntargetUser {\nid\n}\n}\n}",
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            e.exports = n
        },
        zmay: function(e, t, n) {
            var i = {
                kind: "Document",
                definitions: [{
                    kind: "OperationDefinition",
                    operation: "query",
                    name: {
                        kind: "Name",
                        value: "Bits_BuyCard_Offers"
                    },
                    variableDefinitions: [{
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "withChannel"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "isLoggedIn"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "Boolean"
                                }
                            }
                        }
                    }, {
                        kind: "VariableDefinition",
                        variable: {
                            kind: "Variable",
                            name: {
                                kind: "Name",
                                value: "channelLogin"
                            }
                        },
                        type: {
                            kind: "NonNullType",
                            type: {
                                kind: "NamedType",
                                name: {
                                    kind: "Name",
                                    value: "String"
                                }
                            }
                        }
                    }],
                    directives: [],
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "bitsOffers"
                            },
                            arguments: [],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "skip"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "isLoggedIn"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "FragmentSpread",
                                    name: {
                                        kind: "Name",
                                        value: "bitsOffersFragment"
                                    },
                                    directives: []
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "currentUser"
                            },
                            arguments: [],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "isLoggedIn"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "idSHA1"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "bitsBalance"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "bitsOffers"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "FragmentSpread",
                                            name: {
                                                kind: "Name",
                                                value: "bitsOffersFragment"
                                            },
                                            directives: []
                                        }]
                                    }
                                }]
                            }
                        }, {
                            kind: "Field",
                            name: {
                                kind: "Name",
                                value: "user"
                            },
                            arguments: [{
                                kind: "Argument",
                                name: {
                                    kind: "Name",
                                    value: "login"
                                },
                                value: {
                                    kind: "Variable",
                                    name: {
                                        kind: "Name",
                                        value: "channelLogin"
                                    }
                                }
                            }],
                            directives: [{
                                kind: "Directive",
                                name: {
                                    kind: "Name",
                                    value: "include"
                                },
                                arguments: [{
                                    kind: "Argument",
                                    name: {
                                        kind: "Name",
                                        value: "if"
                                    },
                                    value: {
                                        kind: "Variable",
                                        name: {
                                            kind: "Name",
                                            value: "withChannel"
                                        }
                                    }
                                }]
                            }],
                            selectionSet: {
                                kind: "SelectionSet",
                                selections: [{
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "id"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "displayName"
                                    },
                                    arguments: [],
                                    directives: []
                                }, {
                                    kind: "Field",
                                    name: {
                                        kind: "Name",
                                        value: "cheer"
                                    },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "id"
                                            },
                                            arguments: [],
                                            directives: []
                                        }, {
                                            kind: "Field",
                                            name: {
                                                kind: "Name",
                                                value: "settings"
                                            },
                                            arguments: [],
                                            directives: [],
                                            selectionSet: {
                                                kind: "SelectionSet",
                                                selections: [{
                                                    kind: "Field",
                                                    name: {
                                                        kind: "Name",
                                                        value: "cheerMinimumBits"
                                                    },
                                                    arguments: [],
                                                    directives: []
                                                }]
                                            }
                                        }]
                                    }
                                }]
                            }
                        }]
                    }
                }],
                loc: {
                    start: 0,
                    end: 440
                }
            };
            i.loc.source = {
                body: '#import "twilight/features/bits/models/bits-offers-fragment.gql"\nquery Bits_BuyCard_Offers($withChannel: Boolean! $isLoggedIn: Boolean! $channelLogin: String!) {\nbitsOffers @skip(if: $isLoggedIn) {\n...bitsOffersFragment\n}\ncurrentUser @include(if: $isLoggedIn) {\nid\nidSHA1\nbitsBalance\nbitsOffers {\n...bitsOffersFragment\n}\n}\nuser(login: $channelLogin) @include(if: $withChannel) {\nid\ndisplayName\ncheer {\nid\nsettings {\ncheerMinimumBits\n}\n}\n}\n}',
                name: "GraphQL request",
                locationOffset: {
                    line: 1,
                    column: 1
                }
            };
            var r = {};
            i.definitions = i.definitions.concat(n("hWzS").definitions.filter(function(e) {
                if ("FragmentDefinition" !== e.kind) return !0;
                var t = e.name.value;
                return !r[t] && (r[t] = !0, !0)
            })), e.exports = i
        },
        ztUO: function(e, t, n) {
            "use strict";
            n.d(t, "a", function() {
                return o
            });
            var i = n("mrSG"),
                r = n("q1tI"),
                a = n("/7QA"),
                o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return i.d(t, e), t.prototype.componentWillMount = function() {
                        return i.b(this, void 0, void 0, function() {
                            var e;
                            return i.e(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        this.props.username && this.props.authToken && a.o.tmi.setIdentity(this.props.username, this.props.authToken), t.label = 1;
                                    case 1:
                                        return t.trys.push([1, 3, , 4]), [4, a.o.tmi.connect()];
                                    case 2:
                                        return t.sent(), [3, 4];
                                    case 3:
                                        return e = t.sent(), a.j.warn("Failed to connect to TMI from chat manager. It will be retried as needed.", e), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, t.prototype.componentWillUnmount = function() {
                        a.o.tmi.disconnect()
                    }, t.prototype.componentWillReceiveProps = function(e) {
                        e.username && e.authToken && (e.username !== this.props.username || e.authToken !== this.props.authToken) && a.o.tmi.setIdentity(e.username, e.authToken)
                    }, t.prototype.render = function() {
                        return null
                    }, t
                }(r.Component)
        }
    },
    [
        [170, 91, 0]
    ]
]);